
STM32H747I-DISCO_CM7.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000298  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00020eec  080002a0  080002a0  000102a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00004da8  08021190  08021190  00031190  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 0000dcb6  08025f38  08025f38  00035f38  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000020  08033bf0  08033bf0  00043bf0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 ExtFlashSection 0017039c  90000000  90000000  00060000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 TextFlashSection 00000034  9017039c  9017039c  001d039c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  08033c10  08033c10  001d03d0  2**0
                  CONTENTS
  8 .ARM          00000000  08033c10  08033c10  001d03d0  2**0
                  CONTENTS
  9 .preinit_array 00000000  08033c10  08033c10  001d03d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000018  08033c10  08033c10  00043c10  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  08033c28  08033c28  00043c28  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         0000011c  24000000  08033c30  00050000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          0000e240  2400011c  08033d4c  0005011c  2**2
                  ALLOC
 14 ._user_heap_stack 00002004  2400e35c  08033d4c  0005e35c  2**0
                  ALLOC
 15 .ARM.attributes 0000002e  00000000  00000000  001d03d0  2**0
                  CONTENTS, READONLY
 16 .debug_info   001262ba  00000000  00000000  001d03fe  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_abbrev 0001d662  00000000  00000000  002f66b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_aranges 000036d0  00000000  00000000  00313d20  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_ranges 00005eb8  00000000  00000000  003173f0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_macro  0005563e  00000000  00000000  0031d2a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line   0006c108  00000000  00000000  003728e6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_str    001e07b0  00000000  00000000  003de9ee  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .comment      000000cf  00000000  00000000  005bf19e  2**0
                  CONTENTS, READONLY
 24 .debug_frame  0000a0f0  00000000  00000000  005bf270  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loc    00030f2c  00000000  00000000  005c9360  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080002a0 <__do_global_dtors_aux>:
 80002a0:	b510      	push	{r4, lr}
 80002a2:	4c05      	ldr	r4, [pc, #20]	; (80002b8 <__do_global_dtors_aux+0x18>)
 80002a4:	7823      	ldrb	r3, [r4, #0]
 80002a6:	b933      	cbnz	r3, 80002b6 <__do_global_dtors_aux+0x16>
 80002a8:	4b04      	ldr	r3, [pc, #16]	; (80002bc <__do_global_dtors_aux+0x1c>)
 80002aa:	b113      	cbz	r3, 80002b2 <__do_global_dtors_aux+0x12>
 80002ac:	4804      	ldr	r0, [pc, #16]	; (80002c0 <__do_global_dtors_aux+0x20>)
 80002ae:	f3af 8000 	nop.w
 80002b2:	2301      	movs	r3, #1
 80002b4:	7023      	strb	r3, [r4, #0]
 80002b6:	bd10      	pop	{r4, pc}
 80002b8:	2400011c 	.word	0x2400011c
 80002bc:	00000000 	.word	0x00000000
 80002c0:	08021174 	.word	0x08021174

080002c4 <frame_dummy>:
 80002c4:	b508      	push	{r3, lr}
 80002c6:	4b03      	ldr	r3, [pc, #12]	; (80002d4 <frame_dummy+0x10>)
 80002c8:	b11b      	cbz	r3, 80002d2 <frame_dummy+0xe>
 80002ca:	4903      	ldr	r1, [pc, #12]	; (80002d8 <frame_dummy+0x14>)
 80002cc:	4803      	ldr	r0, [pc, #12]	; (80002dc <frame_dummy+0x18>)
 80002ce:	f3af 8000 	nop.w
 80002d2:	bd08      	pop	{r3, pc}
 80002d4:	00000000 	.word	0x00000000
 80002d8:	24000120 	.word	0x24000120
 80002dc:	08021174 	.word	0x08021174

080002e0 <memchr>:
 80002e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002e4:	2a10      	cmp	r2, #16
 80002e6:	db2b      	blt.n	8000340 <memchr+0x60>
 80002e8:	f010 0f07 	tst.w	r0, #7
 80002ec:	d008      	beq.n	8000300 <memchr+0x20>
 80002ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002f2:	3a01      	subs	r2, #1
 80002f4:	428b      	cmp	r3, r1
 80002f6:	d02d      	beq.n	8000354 <memchr+0x74>
 80002f8:	f010 0f07 	tst.w	r0, #7
 80002fc:	b342      	cbz	r2, 8000350 <memchr+0x70>
 80002fe:	d1f6      	bne.n	80002ee <memchr+0xe>
 8000300:	b4f0      	push	{r4, r5, r6, r7}
 8000302:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000306:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800030a:	f022 0407 	bic.w	r4, r2, #7
 800030e:	f07f 0700 	mvns.w	r7, #0
 8000312:	2300      	movs	r3, #0
 8000314:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000318:	3c08      	subs	r4, #8
 800031a:	ea85 0501 	eor.w	r5, r5, r1
 800031e:	ea86 0601 	eor.w	r6, r6, r1
 8000322:	fa85 f547 	uadd8	r5, r5, r7
 8000326:	faa3 f587 	sel	r5, r3, r7
 800032a:	fa86 f647 	uadd8	r6, r6, r7
 800032e:	faa5 f687 	sel	r6, r5, r7
 8000332:	b98e      	cbnz	r6, 8000358 <memchr+0x78>
 8000334:	d1ee      	bne.n	8000314 <memchr+0x34>
 8000336:	bcf0      	pop	{r4, r5, r6, r7}
 8000338:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800033c:	f002 0207 	and.w	r2, r2, #7
 8000340:	b132      	cbz	r2, 8000350 <memchr+0x70>
 8000342:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000346:	3a01      	subs	r2, #1
 8000348:	ea83 0301 	eor.w	r3, r3, r1
 800034c:	b113      	cbz	r3, 8000354 <memchr+0x74>
 800034e:	d1f8      	bne.n	8000342 <memchr+0x62>
 8000350:	2000      	movs	r0, #0
 8000352:	4770      	bx	lr
 8000354:	3801      	subs	r0, #1
 8000356:	4770      	bx	lr
 8000358:	2d00      	cmp	r5, #0
 800035a:	bf06      	itte	eq
 800035c:	4635      	moveq	r5, r6
 800035e:	3803      	subeq	r0, #3
 8000360:	3807      	subne	r0, #7
 8000362:	f015 0f01 	tst.w	r5, #1
 8000366:	d107      	bne.n	8000378 <memchr+0x98>
 8000368:	3001      	adds	r0, #1
 800036a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800036e:	bf02      	ittt	eq
 8000370:	3001      	addeq	r0, #1
 8000372:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000376:	3001      	addeq	r0, #1
 8000378:	bcf0      	pop	{r4, r5, r6, r7}
 800037a:	3801      	subs	r0, #1
 800037c:	4770      	bx	lr
 800037e:	bf00      	nop

08000380 <__aeabi_drsub>:
 8000380:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000384:	e002      	b.n	800038c <__adddf3>
 8000386:	bf00      	nop

08000388 <__aeabi_dsub>:
 8000388:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800038c <__adddf3>:
 800038c:	b530      	push	{r4, r5, lr}
 800038e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000392:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000396:	ea94 0f05 	teq	r4, r5
 800039a:	bf08      	it	eq
 800039c:	ea90 0f02 	teqeq	r0, r2
 80003a0:	bf1f      	itttt	ne
 80003a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80003a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80003aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80003ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80003b2:	f000 80e2 	beq.w	800057a <__adddf3+0x1ee>
 80003b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80003ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80003be:	bfb8      	it	lt
 80003c0:	426d      	neglt	r5, r5
 80003c2:	dd0c      	ble.n	80003de <__adddf3+0x52>
 80003c4:	442c      	add	r4, r5
 80003c6:	ea80 0202 	eor.w	r2, r0, r2
 80003ca:	ea81 0303 	eor.w	r3, r1, r3
 80003ce:	ea82 0000 	eor.w	r0, r2, r0
 80003d2:	ea83 0101 	eor.w	r1, r3, r1
 80003d6:	ea80 0202 	eor.w	r2, r0, r2
 80003da:	ea81 0303 	eor.w	r3, r1, r3
 80003de:	2d36      	cmp	r5, #54	; 0x36
 80003e0:	bf88      	it	hi
 80003e2:	bd30      	pophi	{r4, r5, pc}
 80003e4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80003e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80003ec:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80003f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80003f4:	d002      	beq.n	80003fc <__adddf3+0x70>
 80003f6:	4240      	negs	r0, r0
 80003f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80003fc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000400:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000404:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000408:	d002      	beq.n	8000410 <__adddf3+0x84>
 800040a:	4252      	negs	r2, r2
 800040c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000410:	ea94 0f05 	teq	r4, r5
 8000414:	f000 80a7 	beq.w	8000566 <__adddf3+0x1da>
 8000418:	f1a4 0401 	sub.w	r4, r4, #1
 800041c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000420:	db0d      	blt.n	800043e <__adddf3+0xb2>
 8000422:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000426:	fa22 f205 	lsr.w	r2, r2, r5
 800042a:	1880      	adds	r0, r0, r2
 800042c:	f141 0100 	adc.w	r1, r1, #0
 8000430:	fa03 f20e 	lsl.w	r2, r3, lr
 8000434:	1880      	adds	r0, r0, r2
 8000436:	fa43 f305 	asr.w	r3, r3, r5
 800043a:	4159      	adcs	r1, r3
 800043c:	e00e      	b.n	800045c <__adddf3+0xd0>
 800043e:	f1a5 0520 	sub.w	r5, r5, #32
 8000442:	f10e 0e20 	add.w	lr, lr, #32
 8000446:	2a01      	cmp	r2, #1
 8000448:	fa03 fc0e 	lsl.w	ip, r3, lr
 800044c:	bf28      	it	cs
 800044e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000452:	fa43 f305 	asr.w	r3, r3, r5
 8000456:	18c0      	adds	r0, r0, r3
 8000458:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800045c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000460:	d507      	bpl.n	8000472 <__adddf3+0xe6>
 8000462:	f04f 0e00 	mov.w	lr, #0
 8000466:	f1dc 0c00 	rsbs	ip, ip, #0
 800046a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800046e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000472:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000476:	d31b      	bcc.n	80004b0 <__adddf3+0x124>
 8000478:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800047c:	d30c      	bcc.n	8000498 <__adddf3+0x10c>
 800047e:	0849      	lsrs	r1, r1, #1
 8000480:	ea5f 0030 	movs.w	r0, r0, rrx
 8000484:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000488:	f104 0401 	add.w	r4, r4, #1
 800048c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000490:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000494:	f080 809a 	bcs.w	80005cc <__adddf3+0x240>
 8000498:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800049c:	bf08      	it	eq
 800049e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80004a2:	f150 0000 	adcs.w	r0, r0, #0
 80004a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80004aa:	ea41 0105 	orr.w	r1, r1, r5
 80004ae:	bd30      	pop	{r4, r5, pc}
 80004b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80004b4:	4140      	adcs	r0, r0
 80004b6:	eb41 0101 	adc.w	r1, r1, r1
 80004ba:	3c01      	subs	r4, #1
 80004bc:	bf28      	it	cs
 80004be:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80004c2:	d2e9      	bcs.n	8000498 <__adddf3+0x10c>
 80004c4:	f091 0f00 	teq	r1, #0
 80004c8:	bf04      	itt	eq
 80004ca:	4601      	moveq	r1, r0
 80004cc:	2000      	moveq	r0, #0
 80004ce:	fab1 f381 	clz	r3, r1
 80004d2:	bf08      	it	eq
 80004d4:	3320      	addeq	r3, #32
 80004d6:	f1a3 030b 	sub.w	r3, r3, #11
 80004da:	f1b3 0220 	subs.w	r2, r3, #32
 80004de:	da0c      	bge.n	80004fa <__adddf3+0x16e>
 80004e0:	320c      	adds	r2, #12
 80004e2:	dd08      	ble.n	80004f6 <__adddf3+0x16a>
 80004e4:	f102 0c14 	add.w	ip, r2, #20
 80004e8:	f1c2 020c 	rsb	r2, r2, #12
 80004ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80004f0:	fa21 f102 	lsr.w	r1, r1, r2
 80004f4:	e00c      	b.n	8000510 <__adddf3+0x184>
 80004f6:	f102 0214 	add.w	r2, r2, #20
 80004fa:	bfd8      	it	le
 80004fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000500:	fa01 f102 	lsl.w	r1, r1, r2
 8000504:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000508:	bfdc      	itt	le
 800050a:	ea41 010c 	orrle.w	r1, r1, ip
 800050e:	4090      	lslle	r0, r2
 8000510:	1ae4      	subs	r4, r4, r3
 8000512:	bfa2      	ittt	ge
 8000514:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000518:	4329      	orrge	r1, r5
 800051a:	bd30      	popge	{r4, r5, pc}
 800051c:	ea6f 0404 	mvn.w	r4, r4
 8000520:	3c1f      	subs	r4, #31
 8000522:	da1c      	bge.n	800055e <__adddf3+0x1d2>
 8000524:	340c      	adds	r4, #12
 8000526:	dc0e      	bgt.n	8000546 <__adddf3+0x1ba>
 8000528:	f104 0414 	add.w	r4, r4, #20
 800052c:	f1c4 0220 	rsb	r2, r4, #32
 8000530:	fa20 f004 	lsr.w	r0, r0, r4
 8000534:	fa01 f302 	lsl.w	r3, r1, r2
 8000538:	ea40 0003 	orr.w	r0, r0, r3
 800053c:	fa21 f304 	lsr.w	r3, r1, r4
 8000540:	ea45 0103 	orr.w	r1, r5, r3
 8000544:	bd30      	pop	{r4, r5, pc}
 8000546:	f1c4 040c 	rsb	r4, r4, #12
 800054a:	f1c4 0220 	rsb	r2, r4, #32
 800054e:	fa20 f002 	lsr.w	r0, r0, r2
 8000552:	fa01 f304 	lsl.w	r3, r1, r4
 8000556:	ea40 0003 	orr.w	r0, r0, r3
 800055a:	4629      	mov	r1, r5
 800055c:	bd30      	pop	{r4, r5, pc}
 800055e:	fa21 f004 	lsr.w	r0, r1, r4
 8000562:	4629      	mov	r1, r5
 8000564:	bd30      	pop	{r4, r5, pc}
 8000566:	f094 0f00 	teq	r4, #0
 800056a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800056e:	bf06      	itte	eq
 8000570:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000574:	3401      	addeq	r4, #1
 8000576:	3d01      	subne	r5, #1
 8000578:	e74e      	b.n	8000418 <__adddf3+0x8c>
 800057a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800057e:	bf18      	it	ne
 8000580:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000584:	d029      	beq.n	80005da <__adddf3+0x24e>
 8000586:	ea94 0f05 	teq	r4, r5
 800058a:	bf08      	it	eq
 800058c:	ea90 0f02 	teqeq	r0, r2
 8000590:	d005      	beq.n	800059e <__adddf3+0x212>
 8000592:	ea54 0c00 	orrs.w	ip, r4, r0
 8000596:	bf04      	itt	eq
 8000598:	4619      	moveq	r1, r3
 800059a:	4610      	moveq	r0, r2
 800059c:	bd30      	pop	{r4, r5, pc}
 800059e:	ea91 0f03 	teq	r1, r3
 80005a2:	bf1e      	ittt	ne
 80005a4:	2100      	movne	r1, #0
 80005a6:	2000      	movne	r0, #0
 80005a8:	bd30      	popne	{r4, r5, pc}
 80005aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80005ae:	d105      	bne.n	80005bc <__adddf3+0x230>
 80005b0:	0040      	lsls	r0, r0, #1
 80005b2:	4149      	adcs	r1, r1
 80005b4:	bf28      	it	cs
 80005b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80005ba:	bd30      	pop	{r4, r5, pc}
 80005bc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80005c0:	bf3c      	itt	cc
 80005c2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80005c6:	bd30      	popcc	{r4, r5, pc}
 80005c8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005cc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80005d0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80005d4:	f04f 0000 	mov.w	r0, #0
 80005d8:	bd30      	pop	{r4, r5, pc}
 80005da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80005de:	bf1a      	itte	ne
 80005e0:	4619      	movne	r1, r3
 80005e2:	4610      	movne	r0, r2
 80005e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80005e8:	bf1c      	itt	ne
 80005ea:	460b      	movne	r3, r1
 80005ec:	4602      	movne	r2, r0
 80005ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80005f2:	bf06      	itte	eq
 80005f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80005f8:	ea91 0f03 	teqeq	r1, r3
 80005fc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000600:	bd30      	pop	{r4, r5, pc}
 8000602:	bf00      	nop

08000604 <__aeabi_ui2d>:
 8000604:	f090 0f00 	teq	r0, #0
 8000608:	bf04      	itt	eq
 800060a:	2100      	moveq	r1, #0
 800060c:	4770      	bxeq	lr
 800060e:	b530      	push	{r4, r5, lr}
 8000610:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000614:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000618:	f04f 0500 	mov.w	r5, #0
 800061c:	f04f 0100 	mov.w	r1, #0
 8000620:	e750      	b.n	80004c4 <__adddf3+0x138>
 8000622:	bf00      	nop

08000624 <__aeabi_i2d>:
 8000624:	f090 0f00 	teq	r0, #0
 8000628:	bf04      	itt	eq
 800062a:	2100      	moveq	r1, #0
 800062c:	4770      	bxeq	lr
 800062e:	b530      	push	{r4, r5, lr}
 8000630:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000634:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000638:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800063c:	bf48      	it	mi
 800063e:	4240      	negmi	r0, r0
 8000640:	f04f 0100 	mov.w	r1, #0
 8000644:	e73e      	b.n	80004c4 <__adddf3+0x138>
 8000646:	bf00      	nop

08000648 <__aeabi_f2d>:
 8000648:	0042      	lsls	r2, r0, #1
 800064a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800064e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000652:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000656:	bf1f      	itttt	ne
 8000658:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800065c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000660:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000664:	4770      	bxne	lr
 8000666:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800066a:	bf08      	it	eq
 800066c:	4770      	bxeq	lr
 800066e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000672:	bf04      	itt	eq
 8000674:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000678:	4770      	bxeq	lr
 800067a:	b530      	push	{r4, r5, lr}
 800067c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000680:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000684:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000688:	e71c      	b.n	80004c4 <__adddf3+0x138>
 800068a:	bf00      	nop

0800068c <__aeabi_ul2d>:
 800068c:	ea50 0201 	orrs.w	r2, r0, r1
 8000690:	bf08      	it	eq
 8000692:	4770      	bxeq	lr
 8000694:	b530      	push	{r4, r5, lr}
 8000696:	f04f 0500 	mov.w	r5, #0
 800069a:	e00a      	b.n	80006b2 <__aeabi_l2d+0x16>

0800069c <__aeabi_l2d>:
 800069c:	ea50 0201 	orrs.w	r2, r0, r1
 80006a0:	bf08      	it	eq
 80006a2:	4770      	bxeq	lr
 80006a4:	b530      	push	{r4, r5, lr}
 80006a6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80006aa:	d502      	bpl.n	80006b2 <__aeabi_l2d+0x16>
 80006ac:	4240      	negs	r0, r0
 80006ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80006b2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80006b6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80006ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80006be:	f43f aed8 	beq.w	8000472 <__adddf3+0xe6>
 80006c2:	f04f 0203 	mov.w	r2, #3
 80006c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80006ca:	bf18      	it	ne
 80006cc:	3203      	addne	r2, #3
 80006ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80006d2:	bf18      	it	ne
 80006d4:	3203      	addne	r2, #3
 80006d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80006da:	f1c2 0320 	rsb	r3, r2, #32
 80006de:	fa00 fc03 	lsl.w	ip, r0, r3
 80006e2:	fa20 f002 	lsr.w	r0, r0, r2
 80006e6:	fa01 fe03 	lsl.w	lr, r1, r3
 80006ea:	ea40 000e 	orr.w	r0, r0, lr
 80006ee:	fa21 f102 	lsr.w	r1, r1, r2
 80006f2:	4414      	add	r4, r2
 80006f4:	e6bd      	b.n	8000472 <__adddf3+0xe6>
 80006f6:	bf00      	nop

080006f8 <vApplicationIdleHook>:
   specified, or call vTaskDelay()). If the application makes use of the
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */
vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
 80006f8:	4901      	ldr	r1, [pc, #4]	; (8000700 <vApplicationIdleHook+0x8>)
 80006fa:	2000      	movs	r0, #0
 80006fc:	f00a be94 	b.w	800b428 <vTaskSetApplicationTaskTag>
 8000700:	08001d21 	.word	0x08001d21

08000704 <HAL_BRIDGE_GetTestPinState>:

#ifdef __cplusplus
extern "C" {
#endif

bool HAL_BRIDGE_GetTestPinState() { return HAL_GPIO_ReadPin(TEST_PIN_GPIO_Port, TEST_PIN_Pin) == GPIO_PIN_SET; }
 8000704:	b508      	push	{r3, lr}
 8000706:	2108      	movs	r1, #8
 8000708:	4803      	ldr	r0, [pc, #12]	; (8000718 <HAL_BRIDGE_GetTestPinState+0x14>)
 800070a:	f006 fb37 	bl	8006d7c <HAL_GPIO_ReadPin>
 800070e:	1e43      	subs	r3, r0, #1
 8000710:	4258      	negs	r0, r3
 8000712:	4158      	adcs	r0, r3
 8000714:	bd08      	pop	{r3, pc}
 8000716:	bf00      	nop
 8000718:	58022400 	.word	0x58022400

0800071c <HAL_BRIDGE_SetLED1>:
void HAL_BRIDGE_SetLED1(bool state) { HAL_GPIO_WritePin(LED1_GPIO_Port, LED1_Pin, state ? GPIO_PIN_RESET : GPIO_PIN_SET);  }
 800071c:	f080 0201 	eor.w	r2, r0, #1
 8000720:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000724:	4801      	ldr	r0, [pc, #4]	; (800072c <HAL_BRIDGE_SetLED1+0x10>)
 8000726:	f006 bb2f 	b.w	8006d88 <HAL_GPIO_WritePin>
 800072a:	bf00      	nop
 800072c:	58022000 	.word	0x58022000

08000730 <HAL_BRIDGE_SetLED2>:
void HAL_BRIDGE_SetLED2(bool state) { HAL_GPIO_WritePin(LED2_GPIO_Port, LED2_Pin, state ? GPIO_PIN_RESET : GPIO_PIN_SET);  }
 8000730:	f080 0201 	eor.w	r2, r0, #1
 8000734:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000738:	4801      	ldr	r0, [pc, #4]	; (8000740 <HAL_BRIDGE_SetLED2+0x10>)
 800073a:	f006 bb25 	b.w	8006d88 <HAL_GPIO_WritePin>
 800073e:	bf00      	nop
 8000740:	58022000 	.word	0x58022000

08000744 <HAL_BRIDGE_SetLED3>:
void HAL_BRIDGE_SetLED3(bool state) { HAL_GPIO_WritePin(LED3_GPIO_Port, LED3_Pin, state ? GPIO_PIN_RESET : GPIO_PIN_SET);  }
 8000744:	f080 0201 	eor.w	r2, r0, #1
 8000748:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 800074c:	4801      	ldr	r0, [pc, #4]	; (8000754 <HAL_BRIDGE_SetLED3+0x10>)
 800074e:	f006 bb1b 	b.w	8006d88 <HAL_GPIO_WritePin>
 8000752:	bf00      	nop
 8000754:	58022000 	.word	0x58022000

08000758 <HAL_BRIDGE_SetLED4>:
void HAL_BRIDGE_SetLED4(bool state) { HAL_GPIO_WritePin(LED4_GPIO_Port, LED4_Pin, state ? GPIO_PIN_RESET : GPIO_PIN_SET);  }
 8000758:	f080 0201 	eor.w	r2, r0, #1
 800075c:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8000760:	4801      	ldr	r0, [pc, #4]	; (8000768 <HAL_BRIDGE_SetLED4+0x10>)
 8000762:	f006 bb11 	b.w	8006d88 <HAL_GPIO_WritePin>
 8000766:	bf00      	nop
 8000768:	58022000 	.word	0x58022000

0800076c <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 800076c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800076e:	b09d      	sub	sp, #116	; 0x74
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000770:	224c      	movs	r2, #76	; 0x4c
 8000772:	2100      	movs	r1, #0
 8000774:	a809      	add	r0, sp, #36	; 0x24
 8000776:	f01f fcd9 	bl	802012c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800077a:	2220      	movs	r2, #32
 800077c:	2100      	movs	r1, #0
 800077e:	a801      	add	r0, sp, #4
 8000780:	f01f fcd4 	bl	802012c <memset>

  /** Supply configuration update enable
  */
  HAL_PWREx_ConfigSupply(PWR_DIRECT_SMPS_SUPPLY);
 8000784:	2004      	movs	r0, #4
 8000786:	f007 f925 	bl	80079d4 <HAL_PWREx_ConfigSupply>

  /** Configure the main internal regulator output voltage
  */
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
 800078a:	2300      	movs	r3, #0
 800078c:	9300      	str	r3, [sp, #0]
 800078e:	4b2a      	ldr	r3, [pc, #168]	; (8000838 <SystemClock_Config+0xcc>)
 8000790:	699a      	ldr	r2, [r3, #24]
 8000792:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8000796:	619a      	str	r2, [r3, #24]
 8000798:	699a      	ldr	r2, [r3, #24]
 800079a:	f402 4240 	and.w	r2, r2, #49152	; 0xc000
 800079e:	9200      	str	r2, [sp, #0]
 80007a0:	4a26      	ldr	r2, [pc, #152]	; (800083c <SystemClock_Config+0xd0>)
 80007a2:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 80007a4:	f041 0101 	orr.w	r1, r1, #1
 80007a8:	62d1      	str	r1, [r2, #44]	; 0x2c
 80007aa:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 80007ac:	f002 0201 	and.w	r2, r2, #1
 80007b0:	9200      	str	r2, [sp, #0]
 80007b2:	9a00      	ldr	r2, [sp, #0]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
 80007b4:	699a      	ldr	r2, [r3, #24]
 80007b6:	0491      	lsls	r1, r2, #18
 80007b8:	d5fc      	bpl.n	80007b4 <SystemClock_Config+0x48>

  /** Macro to configure the PLL clock source
  */
  __HAL_RCC_PLL_PLLSOURCE_CONFIG(RCC_PLLSOURCE_HSE);
 80007ba:	4a21      	ldr	r2, [pc, #132]	; (8000840 <SystemClock_Config+0xd4>)

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_HSE;
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80007bc:	2703      	movs	r7, #3
  RCC_OscInitStruct.HSIState = RCC_HSI_DIV1;
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80007be:	2540      	movs	r5, #64	; 0x40
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80007c0:	2402      	movs	r4, #2
  __HAL_RCC_PLL_PLLSOURCE_CONFIG(RCC_PLLSOURCE_HSE);
 80007c2:	6a93      	ldr	r3, [r2, #40]	; 0x28
  RCC_OscInitStruct.PLL.PLLN = 160;
  RCC_OscInitStruct.PLL.PLLP = 2;
  RCC_OscInitStruct.PLL.PLLQ = 2;
  RCC_OscInitStruct.PLL.PLLR = 2;
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 80007c4:	2608      	movs	r6, #8
  RCC_OscInitStruct.PLL.PLLFRACN = 0;
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80007c6:	a809      	add	r0, sp, #36	; 0x24
  __HAL_RCC_PLL_PLLSOURCE_CONFIG(RCC_PLLSOURCE_HSE);
 80007c8:	f023 0303 	bic.w	r3, r3, #3
 80007cc:	f043 0302 	orr.w	r3, r3, #2
 80007d0:	6293      	str	r3, [r2, #40]	; 0x28
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80007d2:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  RCC_OscInitStruct.PLL.PLLN = 160;
 80007d6:	2205      	movs	r2, #5
  RCC_OscInitStruct.PLL.PLLR = 2;
 80007d8:	9418      	str	r4, [sp, #96]	; 0x60
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80007da:	e9cd 7309 	strd	r7, r3, [sp, #36]	; 0x24
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80007de:	2301      	movs	r3, #1
 80007e0:	e9cd 350c 	strd	r3, r5, [sp, #48]	; 0x30
  RCC_OscInitStruct.PLL.PLLN = 160;
 80007e4:	23a0      	movs	r3, #160	; 0xa0
 80007e6:	e9cd 2314 	strd	r2, r3, [sp, #80]	; 0x50
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 80007ea:	2300      	movs	r3, #0
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80007ec:	e9cd 4412 	strd	r4, r4, [sp, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 2;
 80007f0:	e9cd 4416 	strd	r4, r4, [sp, #88]	; 0x58
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 80007f4:	e9cd 6319 	strd	r6, r3, [sp, #100]	; 0x64
  RCC_OscInitStruct.PLL.PLLFRACN = 0;
 80007f8:	931b      	str	r3, [sp, #108]	; 0x6c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80007fa:	f007 fbd9 	bl	8007fb0 <HAL_RCC_OscConfig>
 80007fe:	b108      	cbz	r0, 8000804 <SystemClock_Config+0x98>
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000800:	b672      	cpsid	i
void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000802:	e7fe      	b.n	8000802 <SystemClock_Config+0x96>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000804:	233f      	movs	r3, #63	; 0x3f
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8000806:	4621      	mov	r1, r4
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000808:	e9cd 3701 	strd	r3, r7, [sp, #4]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 800080c:	f44f 6380 	mov.w	r3, #1024	; 0x400
  RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 8000810:	e9cd 0603 	strd	r0, r6, [sp, #12]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8000814:	a801      	add	r0, sp, #4
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 8000816:	e9cd 5505 	strd	r5, r5, [sp, #20]
  RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 800081a:	e9cd 3507 	strd	r3, r5, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 800081e:	f007 ff47 	bl	80086b0 <HAL_RCC_ClockConfig>
 8000822:	4601      	mov	r1, r0
 8000824:	b108      	cbz	r0, 800082a <SystemClock_Config+0xbe>
 8000826:	b672      	cpsid	i
  while (1)
 8000828:	e7fe      	b.n	8000828 <SystemClock_Config+0xbc>
  HAL_RCC_MCOConfig(RCC_MCO1, RCC_MCO1SOURCE_HSI, RCC_MCODIV_1);
 800082a:	f44f 2280 	mov.w	r2, #262144	; 0x40000
 800082e:	f007 fe51 	bl	80084d4 <HAL_RCC_MCOConfig>
}
 8000832:	b01d      	add	sp, #116	; 0x74
 8000834:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000836:	bf00      	nop
 8000838:	58024800 	.word	0x58024800
 800083c:	58000400 	.word	0x58000400
 8000840:	58024400 	.word	0x58024400

08000844 <main>:
{
 8000844:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000848:	b0ba      	sub	sp, #232	; 0xe8
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
 800084a:	2210      	movs	r2, #16
 800084c:	2100      	movs	r1, #0
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 800084e:	2401      	movs	r4, #1
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
 8000850:	a82d      	add	r0, sp, #180	; 0xb4
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
 8000852:	2504      	movs	r5, #4
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
 8000854:	f01f fc6a 	bl	802012c <memset>
  HAL_MPU_Disable();
 8000858:	f005 fb42 	bl	8005ee0 <HAL_MPU_Disable>
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
 800085c:	f04f 4110 	mov.w	r1, #2415919104	; 0x90000000
 8000860:	4bb7      	ldr	r3, [pc, #732]	; (8000b40 <main+0x2fc>)
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8000862:	a82d      	add	r0, sp, #180	; 0xb4
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 8000864:	f8ad 40b4 	strh.w	r4, [sp, #180]	; 0xb4
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
 8000868:	9430      	str	r4, [sp, #192]	; 0xc0
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
 800086a:	e9cd 132e 	strd	r1, r3, [sp, #184]	; 0xb8
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 800086e:	f005 fb55 	bl	8005f1c <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
 8000872:	231a      	movs	r3, #26
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8000874:	a82d      	add	r0, sp, #180	; 0xb4
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
 8000876:	f88d 40b5 	strb.w	r4, [sp, #181]	; 0xb5
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
 800087a:	f88d 30bc 	strb.w	r3, [sp, #188]	; 0xbc
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 800087e:	f005 fb4d 	bl	8005f1c <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
 8000882:	2302      	movs	r3, #2
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8000884:	a82d      	add	r0, sp, #180	; 0xb4
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
 8000886:	f88d 40c2 	strb.w	r4, [sp, #194]	; 0xc2
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
 800088a:	f88d 30b5 	strb.w	r3, [sp, #181]	; 0xb5
  MPU_InitStruct.BaseAddress = 0xD0000000;
 800088e:	f04f 4350 	mov.w	r3, #3489660928	; 0xd0000000
 8000892:	932e      	str	r3, [sp, #184]	; 0xb8
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
 8000894:	2318      	movs	r3, #24
 8000896:	f88d 30bc 	strb.w	r3, [sp, #188]	; 0xbc
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 800089a:	f005 fb3f 	bl	8005f1c <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
 800089e:	2303      	movs	r3, #3
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 80008a0:	a82d      	add	r0, sp, #180	; 0xb4
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
 80008a2:	f88d 30b5 	strb.w	r3, [sp, #181]	; 0xb5
  MPU_InitStruct.BaseAddress = 0x24000000;
 80008a6:	f04f 5310 	mov.w	r3, #603979776	; 0x24000000
 80008aa:	932e      	str	r3, [sp, #184]	; 0xb8
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
 80008ac:	2312      	movs	r3, #18
 80008ae:	f88d 30bc 	strb.w	r3, [sp, #188]	; 0xbc
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
 80008b2:	2300      	movs	r3, #0
 80008b4:	f88d 30c0 	strb.w	r3, [sp, #192]	; 0xc0
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 80008b8:	f005 fb30 	bl	8005f1c <HAL_MPU_ConfigRegion>
  MPU_InitStruct.BaseAddress = 0x10000000;
 80008bc:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 80008c0:	a82d      	add	r0, sp, #180	; 0xb4
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
 80008c2:	f88d 50b5 	strb.w	r5, [sp, #181]	; 0xb5
  MPU_InitStruct.BaseAddress = 0x10000000;
 80008c6:	932e      	str	r3, [sp, #184]	; 0xb8
  MPU_InitStruct.Size = MPU_REGION_SIZE_256KB;
 80008c8:	2311      	movs	r3, #17
 80008ca:	f88d 30bc 	strb.w	r3, [sp, #188]	; 0xbc
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 80008ce:	f005 fb25 	bl	8005f1c <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Number = MPU_REGION_NUMBER5;
 80008d2:	2305      	movs	r3, #5
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 80008d4:	a82d      	add	r0, sp, #180	; 0xb4
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
 80008d6:	f88d 40c0 	strb.w	r4, [sp, #192]	; 0xc0
  MPU_InitStruct.Number = MPU_REGION_NUMBER5;
 80008da:	f88d 30b5 	strb.w	r3, [sp, #181]	; 0xb5
  MPU_InitStruct.BaseAddress = 0x10040000;
 80008de:	4b99      	ldr	r3, [pc, #612]	; (8000b44 <main+0x300>)
 80008e0:	932e      	str	r3, [sp, #184]	; 0xb8
  MPU_InitStruct.Size = MPU_REGION_SIZE_32KB;
 80008e2:	230e      	movs	r3, #14
 80008e4:	f88d 30bc 	strb.w	r3, [sp, #188]	; 0xbc
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 80008e8:	f005 fb18 	bl	8005f1c <HAL_MPU_ConfigRegion>
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
 80008ec:	4628      	mov	r0, r5
 80008ee:	f005 fb05 	bl	8005efc <HAL_MPU_Enable>
  \details Turns on I-Cache
  */
__STATIC_FORCEINLINE void SCB_EnableICache (void)
{
  #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
 80008f2:	4b95      	ldr	r3, [pc, #596]	; (8000b48 <main+0x304>)
 80008f4:	695a      	ldr	r2, [r3, #20]
 80008f6:	f412 3200 	ands.w	r2, r2, #131072	; 0x20000
 80008fa:	d111      	bne.n	8000920 <main+0xdc>
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 80008fc:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000900:	f3bf 8f6f 	isb	sy

    __DSB();
    __ISB();
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 8000904:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 8000908:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800090c:	f3bf 8f6f 	isb	sy
    __DSB();
    __ISB();
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
 8000910:	695a      	ldr	r2, [r3, #20]
 8000912:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000916:	615a      	str	r2, [r3, #20]
  __ASM volatile ("dsb 0xF":::"memory");
 8000918:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800091c:	f3bf 8f6f 	isb	sy
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
 8000920:	4a89      	ldr	r2, [pc, #548]	; (8000b48 <main+0x304>)
 8000922:	6953      	ldr	r3, [r2, #20]
 8000924:	f413 3380 	ands.w	r3, r3, #65536	; 0x10000
 8000928:	d123      	bne.n	8000972 <main+0x12e>

    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 800092a:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 800092e:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
 8000932:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
                                            /* invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 8000936:	f643 74e0 	movw	r4, #16352	; 0x3fe0
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 800093a:	f3c3 00c9 	ubfx	r0, r3, #3, #10
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 800093e:	f3c3 334e 	ubfx	r3, r3, #13, #15
 8000942:	015b      	lsls	r3, r3, #5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 8000944:	ea03 0604 	and.w	r6, r3, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 8000948:	4601      	mov	r1, r0
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 800094a:	ea46 7581 	orr.w	r5, r6, r1, lsl #30
                      ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
 800094e:	3901      	subs	r1, #1
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 8000950:	f8c2 5260 	str.w	r5, [r2, #608]	; 0x260
      } while (ways-- != 0U);
 8000954:	d2f9      	bcs.n	800094a <main+0x106>
    } while(sets-- != 0U);
 8000956:	3b20      	subs	r3, #32
 8000958:	f113 0f20 	cmn.w	r3, #32
 800095c:	d1f2      	bne.n	8000944 <main+0x100>
 800095e:	f3bf 8f4f 	dsb	sy
    __DSB();

    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
 8000962:	6953      	ldr	r3, [r2, #20]
 8000964:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8000968:	6153      	str	r3, [r2, #20]
 800096a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800096e:	f3bf 8f6f 	isb	sy
  while((__HAL_RCC_GET_FLAG(RCC_FLAG_D2CKRDY) != RESET) && (timeout-- > 0));
 8000972:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000976:	4d75      	ldr	r5, [pc, #468]	; (8000b4c <main+0x308>)
 8000978:	682c      	ldr	r4, [r5, #0]
 800097a:	f414 4400 	ands.w	r4, r4, #32768	; 0x8000
 800097e:	f000 82b1 	beq.w	8000ee4 <main+0x6a0>
 8000982:	3b01      	subs	r3, #1
 8000984:	d1f8      	bne.n	8000978 <main+0x134>
  __ASM volatile ("cpsid i" : : : "memory");
 8000986:	b672      	cpsid	i
  while (1)
 8000988:	e7fe      	b.n	8000988 <main+0x144>
 800098a:	b672      	cpsid	i
 800098c:	e7fe      	b.n	800098c <main+0x148>
  BSP_SDRAM_DeInit(0);
 800098e:	f004 ff37 	bl	8005800 <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init(0) != BSP_ERROR_NONE)
 8000992:	4640      	mov	r0, r8
 8000994:	f004 ff82 	bl	800589c <BSP_SDRAM_Init>
 8000998:	4603      	mov	r3, r0
 800099a:	b108      	cbz	r0, 80009a0 <main+0x15c>
 800099c:	b672      	cpsid	i
  while (1)
 800099e:	e7fe      	b.n	800099e <main+0x15a>
  hqspi.Instance = QUADSPI;
 80009a0:	486b      	ldr	r0, [pc, #428]	; (8000b50 <main+0x30c>)
 80009a2:	4a6c      	ldr	r2, [pc, #432]	; (8000b54 <main+0x310>)
  hqspi.Init.ClockMode = QSPI_CLOCK_MODE_0;
 80009a4:	6183      	str	r3, [r0, #24]
  hqspi.Init.DualFlash = QSPI_DUALFLASH_ENABLE;
 80009a6:	6205      	str	r5, [r0, #32]
  hqspi.Init.ClockPrescaler = 3;
 80009a8:	e9c0 2700 	strd	r2, r7, [r0]
  hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_NONE;
 80009ac:	e9c0 4302 	strd	r4, r3, [r0, #8]
  hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_1_CYCLE;
 80009b0:	e9c0 4304 	strd	r4, r3, [r0, #16]
  if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 80009b4:	f007 f922 	bl	8007bfc <HAL_QSPI_Init>
 80009b8:	b108      	cbz	r0, 80009be <main+0x17a>
 80009ba:	b672      	cpsid	i
  while (1)
 80009bc:	e7fe      	b.n	80009bc <main+0x178>
  if (BSP_QSPI_Init(0,&init) != BSP_ERROR_NONE)
 80009be:	a92d      	add	r1, sp, #180	; 0xb4
  init.InterfaceMode=MT25TL01G_QPI_MODE;
 80009c0:	f88d 70b4 	strb.w	r7, [sp, #180]	; 0xb4
  init.TransferRate= MT25TL01G_DTR_TRANSFER ;
 80009c4:	f88d 40b5 	strb.w	r4, [sp, #181]	; 0xb5
  init.DualFlashMode= MT25TL01G_DUALFLASH_ENABLE;
 80009c8:	f88d 50b6 	strb.w	r5, [sp, #182]	; 0xb6
  if (BSP_QSPI_Init(0,&init) != BSP_ERROR_NONE)
 80009cc:	f004 fd5e 	bl	800548c <BSP_QSPI_Init>
 80009d0:	b108      	cbz	r0, 80009d6 <main+0x192>
 80009d2:	b672      	cpsid	i
  while (1)
 80009d4:	e7fe      	b.n	80009d4 <main+0x190>
  if (BSP_QSPI_EnableMemoryMappedMode(0) != BSP_ERROR_NONE)
 80009d6:	f004 fd05 	bl	80053e4 <BSP_QSPI_EnableMemoryMappedMode>
 80009da:	4603      	mov	r3, r0
 80009dc:	b108      	cbz	r0, 80009e2 <main+0x19e>
 80009de:	b672      	cpsid	i
  while (1)
 80009e0:	e7fe      	b.n	80009e0 <main+0x19c>
  hdma2d.Instance = DMA2D;
 80009e2:	485d      	ldr	r0, [pc, #372]	; (8000b58 <main+0x314>)
  hdma2d.Init.Mode = DMA2D_R2M;
 80009e4:	f44f 3240 	mov.w	r2, #196608	; 0x30000
 80009e8:	f8df e178 	ldr.w	lr, [pc, #376]	; 8000b64 <main+0x320>
  hdma2d.Init.OutputOffset = 0;
 80009ec:	e9c0 4302 	strd	r4, r3, [r0, #8]
  hdma2d.Init.Mode = DMA2D_R2M;
 80009f0:	e9c0 e200 	strd	lr, r2, [r0]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 80009f4:	f005 fb1c 	bl	8006030 <HAL_DMA2D_Init>
 80009f8:	4605      	mov	r5, r0
 80009fa:	b108      	cbz	r0, 8000a00 <main+0x1bc>
 80009fc:	b672      	cpsid	i
  while (1)
 80009fe:	e7fe      	b.n	80009fe <main+0x1ba>
  HAL_GPIO_WritePin(GPIOG , GPIO_PIN_3 , GPIO_PIN_RESET);
 8000a00:	4602      	mov	r2, r0
 8000a02:	4631      	mov	r1, r6
 8000a04:	4855      	ldr	r0, [pc, #340]	; (8000b5c <main+0x318>)
 8000a06:	f006 f9bf 	bl	8006d88 <HAL_GPIO_WritePin>
  HAL_Delay(20);/* wait 20 ms */
 8000a0a:	2014      	movs	r0, #20
 8000a0c:	f005 f9ea 	bl	8005de4 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOG , GPIO_PIN_3, GPIO_PIN_SET);/* Deactivate XRES */
 8000a10:	4631      	mov	r1, r6
 8000a12:	4622      	mov	r2, r4
 8000a14:	4851      	ldr	r0, [pc, #324]	; (8000b5c <main+0x318>)
 8000a16:	f006 f9b7 	bl	8006d88 <HAL_GPIO_WritePin>
  HAL_Delay(10);/* Wait for 10ms after releasing XRES before sending commands */
 8000a1a:	200a      	movs	r0, #10
 8000a1c:	f005 f9e2 	bl	8005de4 <HAL_Delay>
  DSI_HOST_TimeoutTypeDef HostTimeouts = {0};
 8000a20:	2224      	movs	r2, #36	; 0x24
 8000a22:	4629      	mov	r1, r5
 8000a24:	a817      	add	r0, sp, #92	; 0x5c
  DSI_PLLInitTypeDef PLLInit = {0};
 8000a26:	9510      	str	r5, [sp, #64]	; 0x40
  DSI_HOST_TimeoutTypeDef HostTimeouts = {0};
 8000a28:	f01f fb80 	bl	802012c <memset>
  DSI_PHY_TimerTypeDef PhyTimings = {0};
 8000a2c:	2218      	movs	r2, #24
 8000a2e:	4629      	mov	r1, r5
 8000a30:	a811      	add	r0, sp, #68	; 0x44
  hdsi.Instance = DSI;
 8000a32:	4e4b      	ldr	r6, [pc, #300]	; (8000b60 <main+0x31c>)
  DSI_PHY_TimerTypeDef PhyTimings = {0};
 8000a34:	f01f fb7a 	bl	802012c <memset>
  DSI_LPCmdTypeDef LPCmd = {0};
 8000a38:	2234      	movs	r2, #52	; 0x34
 8000a3a:	4629      	mov	r1, r5
 8000a3c:	a82d      	add	r0, sp, #180	; 0xb4
 8000a3e:	f01f fb75 	bl	802012c <memset>
  DSI_CmdCfgTypeDef CmdCfg = {0};
 8000a42:	4629      	mov	r1, r5
 8000a44:	222c      	movs	r2, #44	; 0x2c
 8000a46:	a820      	add	r0, sp, #128	; 0x80
 8000a48:	f01f fb70 	bl	802012c <memset>
  hdsi.Instance = DSI;
 8000a4c:	f04f 43a0 	mov.w	r3, #1342177280	; 0x50000000
  PLLInit.PLLIDF = DSI_PLL_IN_DIV5;
 8000a50:	f04f 0c63 	mov.w	ip, #99	; 0x63
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 8000a54:	a90e      	add	r1, sp, #56	; 0x38
 8000a56:	4630      	mov	r0, r6
  hdsi.Init.AutomaticClockLaneControl = DSI_AUTO_CLK_LANE_CTRL_DISABLE;
 8000a58:	e9c6 3500 	strd	r3, r5, [r6]
  hdsi.Init.TXEscapeCkdiv = 4;
 8000a5c:	2304      	movs	r3, #4
  hdsi.Init.NumberOfLanes = DSI_TWO_DATA_LANES;
 8000a5e:	e9c6 3402 	strd	r3, r4, [r6, #8]
  PLLInit.PLLIDF = DSI_PLL_IN_DIV5;
 8000a62:	2305      	movs	r3, #5
 8000a64:	e9cd c30e 	strd	ip, r3, [sp, #56]	; 0x38
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 8000a68:	f005 fc2e 	bl	80062c8 <HAL_DSI_Init>
 8000a6c:	b108      	cbz	r0, 8000a72 <main+0x22e>
 8000a6e:	b672      	cpsid	i
  while (1)
 8000a70:	e7fe      	b.n	8000a70 <main+0x22c>
  HostTimeouts.HighSpeedTransmissionTimeout = 0;
 8000a72:	e9cd 4017 	strd	r4, r0, [sp, #92]	; 0x5c
  HostTimeouts.HighSpeedReadTimeout = 0;
 8000a76:	e9cd 0019 	strd	r0, r0, [sp, #100]	; 0x64
  HostTimeouts.HighSpeedWriteTimeout = 0;
 8000a7a:	e9cd 001b 	strd	r0, r0, [sp, #108]	; 0x6c
  HostTimeouts.LowPowerWriteTimeout = 0;
 8000a7e:	e9cd 001d 	strd	r0, r0, [sp, #116]	; 0x74
  HostTimeouts.BTATimeout = 0;
 8000a82:	901f      	str	r0, [sp, #124]	; 0x7c
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 8000a84:	a917      	add	r1, sp, #92	; 0x5c
 8000a86:	4630      	mov	r0, r6
 8000a88:	f005 fe4a 	bl	8006720 <HAL_DSI_ConfigHostTimeouts>
 8000a8c:	b108      	cbz	r0, 8000a92 <main+0x24e>
 8000a8e:	b672      	cpsid	i
  while (1)
 8000a90:	e7fe      	b.n	8000a90 <main+0x24c>
  PhyTimings.ClockLaneLP2HSTime = 33;
 8000a92:	2321      	movs	r3, #33	; 0x21
 8000a94:	261c      	movs	r6, #28
  PhyTimings.DataLaneLP2HSTime = 25;
 8000a96:	270f      	movs	r7, #15
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 8000a98:	a911      	add	r1, sp, #68	; 0x44
 8000a9a:	4831      	ldr	r0, [pc, #196]	; (8000b60 <main+0x31c>)
  PhyTimings.ClockLaneLP2HSTime = 33;
 8000a9c:	e9cd 6311 	strd	r6, r3, [sp, #68]	; 0x44
  PhyTimings.DataLaneLP2HSTime = 25;
 8000aa0:	2319      	movs	r3, #25
 8000aa2:	e9cd 7313 	strd	r7, r3, [sp, #76]	; 0x4c
  PhyTimings.DataLaneMaxReadTime = 0;
 8000aa6:	2300      	movs	r3, #0
  PhyTimings.StopWaitTime = 0;
 8000aa8:	e9cd 3315 	strd	r3, r3, [sp, #84]	; 0x54
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 8000aac:	f005 fdfb 	bl	80066a6 <HAL_DSI_ConfigPhyTimer>
 8000ab0:	b108      	cbz	r0, 8000ab6 <main+0x272>
 8000ab2:	b672      	cpsid	i
  while (1)
 8000ab4:	e7fe      	b.n	8000ab4 <main+0x270>
  if (HAL_DSI_ConfigFlowControl(&hdsi, DSI_FLOW_CONTROL_BTA) != HAL_OK)
 8000ab6:	2104      	movs	r1, #4
 8000ab8:	4829      	ldr	r0, [pc, #164]	; (8000b60 <main+0x31c>)
 8000aba:	f005 fde3 	bl	8006684 <HAL_DSI_ConfigFlowControl>
 8000abe:	b108      	cbz	r0, 8000ac4 <main+0x280>
 8000ac0:	b672      	cpsid	i
  while (1)
 8000ac2:	e7fe      	b.n	8000ac2 <main+0x27e>
  if (HAL_DSI_SetLowPowerRXFilter(&hdsi, 10000) != HAL_OK)
 8000ac4:	f242 7110 	movw	r1, #10000	; 0x2710
 8000ac8:	4825      	ldr	r0, [pc, #148]	; (8000b60 <main+0x31c>)
 8000aca:	f005 ffb3 	bl	8006a34 <HAL_DSI_SetLowPowerRXFilter>
 8000ace:	4601      	mov	r1, r0
 8000ad0:	b108      	cbz	r0, 8000ad6 <main+0x292>
 8000ad2:	b672      	cpsid	i
  while (1)
 8000ad4:	e7fe      	b.n	8000ad4 <main+0x290>
  if (HAL_DSI_ConfigErrorMonitor(&hdsi, HAL_DSI_ERROR_NONE) != HAL_OK)
 8000ad6:	4822      	ldr	r0, [pc, #136]	; (8000b60 <main+0x31c>)
 8000ad8:	f005 fb94 	bl	8006204 <HAL_DSI_ConfigErrorMonitor>
 8000adc:	b108      	cbz	r0, 8000ae2 <main+0x29e>
 8000ade:	b672      	cpsid	i
  while (1)
 8000ae0:	e7fe      	b.n	8000ae0 <main+0x29c>
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_ENABLE;
 8000ae2:	f44f 7880 	mov.w	r8, #256	; 0x100
 8000ae6:	f44f 7300 	mov.w	r3, #512	; 0x200
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_ENABLE;
 8000aea:	f44f 6280 	mov.w	r2, #1024	; 0x400
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_ENABLE;
 8000aee:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_ENABLE;
 8000af2:	f44f 4080 	mov.w	r0, #16384	; 0x4000
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 8000af6:	f44f 3400 	mov.w	r4, #131072	; 0x20000
  LPCmd.LPMaxReadPacket = DSI_LP_MRDP_ENABLE;
 8000afa:	f44f 2500 	mov.w	r5, #524288	; 0x80000
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_ENABLE;
 8000afe:	e9cd 832d 	strd	r8, r3, [sp, #180]	; 0xb4
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_ENABLE;
 8000b02:	f44f 6300 	mov.w	r3, #2048	; 0x800
  LPCmd.AcknowledgeRequest = DSI_ACKNOWLEDGE_ENABLE;
 8000b06:	f04f 0802 	mov.w	r8, #2
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_ENABLE;
 8000b0a:	e9cd 232f 	strd	r2, r3, [sp, #188]	; 0xbc
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_ENABLE;
 8000b0e:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  LPCmd.AcknowledgeRequest = DSI_ACKNOWLEDGE_ENABLE;
 8000b12:	f8cd 80e4 	str.w	r8, [sp, #228]	; 0xe4
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_ENABLE;
 8000b16:	e9cd 1331 	strd	r1, r3, [sp, #196]	; 0xc4
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_ENABLE;
 8000b1a:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 8000b1e:	a92d      	add	r1, sp, #180	; 0xb4
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_ENABLE;
 8000b20:	e9cd 0333 	strd	r0, r3, [sp, #204]	; 0xcc
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 8000b24:	f44f 2380 	mov.w	r3, #262144	; 0x40000
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 8000b28:	480d      	ldr	r0, [pc, #52]	; (8000b60 <main+0x31c>)
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 8000b2a:	e9cd 4335 	strd	r4, r3, [sp, #212]	; 0xd4
  LPCmd.LPMaxReadPacket = DSI_LP_MRDP_ENABLE;
 8000b2e:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8000b32:	e9cd 5337 	strd	r5, r3, [sp, #220]	; 0xdc
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 8000b36:	f005 fd71 	bl	800661c <HAL_DSI_ConfigCommand>
 8000b3a:	b1a8      	cbz	r0, 8000b68 <main+0x324>
 8000b3c:	b672      	cpsid	i
  while (1)
 8000b3e:	e7fe      	b.n	8000b3e <main+0x2fa>
 8000b40:	0300001b 	.word	0x0300001b
 8000b44:	10040000 	.word	0x10040000
 8000b48:	e000ed00 	.word	0xe000ed00
 8000b4c:	58024400 	.word	0x58024400
 8000b50:	240002bc 	.word	0x240002bc
 8000b54:	52005000 	.word	0x52005000
 8000b58:	24000190 	.word	0x24000190
 8000b5c:	58021800 	.word	0x58021800
 8000b60:	240001f8 	.word	0x240001f8
 8000b64:	52001000 	.word	0x52001000
  CmdCfg.CommandSize = 400;
 8000b68:	2305      	movs	r3, #5
 8000b6a:	f44f 77c8 	mov.w	r7, #400	; 0x190
  CmdCfg.TEAcknowledgeRequest = DSI_TE_ACKNOWLEDGE_ENABLE;
 8000b6e:	2601      	movs	r6, #1
  CmdCfg.VirtualChannelID = 0;
 8000b70:	9020      	str	r0, [sp, #128]	; 0x80
  CmdCfg.DEPolarity = DSI_DATA_ENABLE_ACTIVE_HIGH;
 8000b72:	9027      	str	r0, [sp, #156]	; 0x9c
  CmdCfg.TEAcknowledgeRequest = DSI_TE_ACKNOWLEDGE_ENABLE;
 8000b74:	962a      	str	r6, [sp, #168]	; 0xa8
  CmdCfg.CommandSize = 400;
 8000b76:	e9cd 3721 	strd	r3, r7, [sp, #132]	; 0x84
  CmdCfg.TearingEffectSource = DSI_TE_EXTERNAL;
 8000b7a:	2310      	movs	r3, #16
  CmdCfg.TearingEffectPolarity = DSI_TE_RISING_EDGE;
 8000b7c:	e9cd 3023 	strd	r3, r0, [sp, #140]	; 0x8c
  CmdCfg.VSyncPol = DSI_VSYNC_RISING;
 8000b80:	2380      	movs	r3, #128	; 0x80
  CmdCfg.VSPolarity = DSI_VSYNC_ACTIVE_HIGH;
 8000b82:	e9cd 0025 	strd	r0, r0, [sp, #148]	; 0x94
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 8000b86:	eb0d 0103 	add.w	r1, sp, r3
  CmdCfg.AutomaticRefresh = DSI_AR_DISABLE;
 8000b8a:	e9cd 3028 	strd	r3, r0, [sp, #160]	; 0xa0
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 8000b8e:	4850      	ldr	r0, [pc, #320]	; (8000cd0 <main+0x48c>)
 8000b90:	f005 fcd2 	bl	8006538 <HAL_DSI_ConfigAdaptedCommandMode>
 8000b94:	4601      	mov	r1, r0
 8000b96:	b108      	cbz	r0, 8000b9c <main+0x358>
 8000b98:	b672      	cpsid	i
  while (1)
 8000b9a:	e7fe      	b.n	8000b9a <main+0x356>
  if (HAL_DSI_SetGenericVCID(&hdsi, 0) != HAL_OK)
 8000b9c:	484c      	ldr	r0, [pc, #304]	; (8000cd0 <main+0x48c>)
 8000b9e:	f005 fcba 	bl	8006516 <HAL_DSI_SetGenericVCID>
 8000ba2:	4604      	mov	r4, r0
 8000ba4:	b108      	cbz	r0, 8000baa <main+0x366>
 8000ba6:	b672      	cpsid	i
  while (1)
 8000ba8:	e7fe      	b.n	8000ba8 <main+0x364>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8000baa:	4601      	mov	r1, r0
 8000bac:	2234      	movs	r2, #52	; 0x34
 8000bae:	a820      	add	r0, sp, #128	; 0x80
  hltdc.Instance = LTDC;
 8000bb0:	4d48      	ldr	r5, [pc, #288]	; (8000cd4 <main+0x490>)
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8000bb2:	f01f fabb 	bl	802012c <memset>
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AH;
 8000bb6:	4848      	ldr	r0, [pc, #288]	; (8000cd8 <main+0x494>)
 8000bb8:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
  hltdc.Init.AccumulatedActiveH = 482;
 8000bbc:	f44f 7cc9 	mov.w	ip, #402	; 0x192
  hltdc.Init.TotalHeigh = 483;
 8000bc0:	f240 1e93 	movw	lr, #403	; 0x193
  hltdc.Init.Backcolor.Blue = 0;
 8000bc4:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.AccumulatedVBP = 2;
 8000bc6:	f8c5 8020 	str.w	r8, [r5, #32]
  hltdc.Init.Backcolor.Red = 0;
 8000bca:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AH;
 8000bce:	e9c5 0300 	strd	r0, r3, [r5]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AH;
 8000bd2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000bd6:	4628      	mov	r0, r5
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8000bd8:	e9c5 3402 	strd	r3, r4, [r5, #8]
  hltdc.Init.AccumulatedActiveH = 482;
 8000bdc:	f44f 73f1 	mov.w	r3, #482	; 0x1e2
 8000be0:	e9c5 c309 	strd	ip, r3, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 483;
 8000be4:	f240 13e3 	movw	r3, #483	; 0x1e3
  hltdc.Init.HorizontalSync = 0;
 8000be8:	e9c5 4404 	strd	r4, r4, [r5, #16]
  hltdc.Init.AccumulatedHBP = 2;
 8000bec:	e9c5 4806 	strd	r4, r8, [r5, #24]
  hltdc.Init.TotalHeigh = 483;
 8000bf0:	e9c5 e30b 	strd	lr, r3, [r5, #44]	; 0x2c
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000bf4:	f006 fd2a 	bl	800764c <HAL_LTDC_Init>
 8000bf8:	b108      	cbz	r0, 8000bfe <main+0x3ba>
 8000bfa:	b672      	cpsid	i
  while (1)
 8000bfc:	e7fe      	b.n	8000bfc <main+0x3b8>
  pLayerCfg.Alpha = 255;
 8000bfe:	22ff      	movs	r2, #255	; 0xff
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_PAxCA;
 8000c00:	f44f 61c0 	mov.w	r1, #1536	; 0x600
  pLayerCfg.WindowY1 = 480;
 8000c04:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
  pLayerCfg.WindowY0 = 0;
 8000c08:	9022      	str	r0, [sp, #136]	; 0x88
  pLayerCfg.Backcolor.Blue = 0;
 8000c0a:	f8ad 00b0 	strh.w	r0, [sp, #176]	; 0xb0
  pLayerCfg.Backcolor.Red = 0;
 8000c0e:	f88d 00b2 	strb.w	r0, [sp, #178]	; 0xb2
  pLayerCfg.ImageHeight = 480;
 8000c12:	932b      	str	r3, [sp, #172]	; 0xac
  pLayerCfg.Alpha0 = 0;
 8000c14:	e9cd 2025 	strd	r2, r0, [sp, #148]	; 0x94
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_PAxCA;
 8000c18:	2207      	movs	r2, #7
 8000c1a:	e9cd 1227 	strd	r1, r2, [sp, #156]	; 0x9c
  pLayerCfg.FBStartAdress = 0xD0000000;
 8000c1e:	f04f 4250 	mov.w	r2, #3489660928	; 0xd0000000
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000c22:	a920      	add	r1, sp, #128	; 0x80
  pLayerCfg.WindowX1 = 400;
 8000c24:	e9cd 0720 	strd	r0, r7, [sp, #128]	; 0x80
  pLayerCfg.ImageWidth = 400;
 8000c28:	e9cd 2729 	strd	r2, r7, [sp, #164]	; 0xa4
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000c2c:	4602      	mov	r2, r0
 8000c2e:	4628      	mov	r0, r5
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB888;
 8000c30:	e9cd 3623 	strd	r3, r6, [sp, #140]	; 0x8c
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000c34:	f006 fdd6 	bl	80077e4 <HAL_LTDC_ConfigLayer>
 8000c38:	4604      	mov	r4, r0
 8000c3a:	b108      	cbz	r0, 8000c40 <main+0x3fc>
 8000c3c:	b672      	cpsid	i
  while (1)
 8000c3e:	e7fe      	b.n	8000c3e <main+0x3fa>
  __HAL_LTDC_DISABLE(&hltdc);
 8000c40:	682a      	ldr	r2, [r5, #0]
  HAL_DSI_Start(&hdsi);
 8000c42:	4823      	ldr	r0, [pc, #140]	; (8000cd0 <main+0x48c>)
  __HAL_LTDC_DISABLE(&hltdc);
 8000c44:	6993      	ldr	r3, [r2, #24]
 8000c46:	f023 0301 	bic.w	r3, r3, #1
 8000c4a:	6193      	str	r3, [r2, #24]
  HAL_DSI_Start(&hdsi);
 8000c4c:	f005 fdce 	bl	80067ec <HAL_DSI_Start>
  IOCtx.Address     = 0;
 8000c50:	4922      	ldr	r1, [pc, #136]	; (8000cdc <main+0x498>)
  IOCtx.GetTick     = BSP_GetTick;
 8000c52:	4b23      	ldr	r3, [pc, #140]	; (8000ce0 <main+0x49c>)
  OTM8009A_RegisterBusIO(&OTM8009AObj, &IOCtx);
 8000c54:	4823      	ldr	r0, [pc, #140]	; (8000ce4 <main+0x4a0>)
  IOCtx.GetTick     = BSP_GetTick;
 8000c56:	60cb      	str	r3, [r1, #12]
  IOCtx.WriteReg    = DSI_IO_Write;
 8000c58:	4b23      	ldr	r3, [pc, #140]	; (8000ce8 <main+0x4a4>)
  IOCtx.Address     = 0;
 8000c5a:	800c      	strh	r4, [r1, #0]
  IOCtx.WriteReg    = DSI_IO_Write;
 8000c5c:	604b      	str	r3, [r1, #4]
  IOCtx.ReadReg     = DSI_IO_Read;
 8000c5e:	4b23      	ldr	r3, [pc, #140]	; (8000cec <main+0x4a8>)
 8000c60:	608b      	str	r3, [r1, #8]
  OTM8009A_RegisterBusIO(&OTM8009AObj, &IOCtx);
 8000c62:	f004 f9b3 	bl	8004fcc <OTM8009A_RegisterBusIO>
  OTM8009A_Init(&OTM8009AObj ,OTM8009A_FORMAT_RGB888, OTM8009A_ORIENTATION_LANDSCAPE);
 8000c66:	4632      	mov	r2, r6
 8000c68:	4621      	mov	r1, r4
 8000c6a:	481e      	ldr	r0, [pc, #120]	; (8000ce4 <main+0x4a0>)
 8000c6c:	f003 fe0a 	bl	8004884 <OTM8009A_Init>
  HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_DISPOFF, 0x00);
 8000c70:	2328      	movs	r3, #40	; 0x28
 8000c72:	2215      	movs	r2, #21
 8000c74:	4621      	mov	r1, r4
 8000c76:	4816      	ldr	r0, [pc, #88]	; (8000cd0 <main+0x48c>)
 8000c78:	9400      	str	r4, [sp, #0]
 8000c7a:	f005 fdea 	bl	8006852 <HAL_DSI_ShortWrite>
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 8000c7e:	a92d      	add	r1, sp, #180	; 0xb4
 8000c80:	4813      	ldr	r0, [pc, #76]	; (8000cd0 <main+0x48c>)
  LPCmd.LPDcsLongWrite = DSI_LP_DLW_DISABLE;
 8000c82:	9437      	str	r4, [sp, #220]	; 0xdc
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_DISABLE;
 8000c84:	e9cd 442d 	strd	r4, r4, [sp, #180]	; 0xb4
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_DISABLE;
 8000c88:	e9cd 442f 	strd	r4, r4, [sp, #188]	; 0xbc
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_DISABLE;
 8000c8c:	e9cd 4431 	strd	r4, r4, [sp, #196]	; 0xc4
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_DISABLE;
 8000c90:	e9cd 4433 	strd	r4, r4, [sp, #204]	; 0xcc
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_DISABLE;
 8000c94:	e9cd 4435 	strd	r4, r4, [sp, #212]	; 0xd4
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 8000c98:	f005 fcc0 	bl	800661c <HAL_DSI_ConfigCommand>
  HAL_LTDC_SetPitch(&hltdc, 800, 0);
 8000c9c:	f44f 7148 	mov.w	r1, #800	; 0x320
 8000ca0:	4622      	mov	r2, r4
 8000ca2:	4628      	mov	r0, r5
 8000ca4:	f006 fdcc 	bl	8007840 <HAL_LTDC_SetPitch>
  __HAL_LTDC_ENABLE(&hltdc);
 8000ca8:	682a      	ldr	r2, [r5, #0]
 8000caa:	6993      	ldr	r3, [r2, #24]
 8000cac:	f043 0301 	orr.w	r3, r3, #1
 8000cb0:	6193      	str	r3, [r2, #24]
  MX_TouchGFX_Init();
 8000cb2:	f000 fcb4 	bl	800161e <MX_TouchGFX_Init>
  osKernelInitialize();
 8000cb6:	f008 ff33 	bl	8009b20 <osKernelInitialize>
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 8000cba:	4a0d      	ldr	r2, [pc, #52]	; (8000cf0 <main+0x4ac>)
 8000cbc:	4621      	mov	r1, r4
 8000cbe:	480d      	ldr	r0, [pc, #52]	; (8000cf4 <main+0x4b0>)
 8000cc0:	f008 ff5a 	bl	8009b78 <osThreadNew>
 8000cc4:	4b0c      	ldr	r3, [pc, #48]	; (8000cf8 <main+0x4b4>)
 8000cc6:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8000cc8:	f008 ff3c 	bl	8009b44 <osKernelStart>
  while (1)
 8000ccc:	e7fe      	b.n	8000ccc <main+0x488>
 8000cce:	bf00      	nop
 8000cd0:	240001f8 	.word	0x240001f8
 8000cd4:	24000214 	.word	0x24000214
 8000cd8:	50001000 	.word	0x50001000
 8000cdc:	24000138 	.word	0x24000138
 8000ce0:	080053b5 	.word	0x080053b5
 8000ce4:	24000148 	.word	0x24000148
 8000ce8:	08001a55 	.word	0x08001a55
 8000cec:	08001a8d 	.word	0x08001a8d
 8000cf0:	080212a0 	.word	0x080212a0
 8000cf4:	08001623 	.word	0x08001623
 8000cf8:	24000168 	.word	0x24000168
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000cfc:	2214      	movs	r2, #20
 8000cfe:	2100      	movs	r1, #0
 8000d00:	a82d      	add	r0, sp, #180	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000d02:	2500      	movs	r5, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000d04:	f01f fa12 	bl	802012c <memset>
  __HAL_RCC_GPIOI_CLK_ENABLE();
 8000d08:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
  HAL_GPIO_WritePin(LCD_BL_GPIO_Port, LCD_BL_Pin, GPIO_PIN_RESET);
 8000d0c:	2200      	movs	r2, #0
 8000d0e:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  __HAL_RCC_GPIOI_CLK_ENABLE();
 8000d12:	f443 7380 	orr.w	r3, r3, #256	; 0x100
  HAL_GPIO_WritePin(LCD_BL_GPIO_Port, LCD_BL_Pin, GPIO_PIN_RESET);
 8000d16:	4884      	ldr	r0, [pc, #528]	; (8000f28 <main+0x6e4>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000d18:	2703      	movs	r7, #3
  GPIO_InitStruct.Pin = LCD_RESET_Pin;
 8000d1a:	2608      	movs	r6, #8
  __HAL_RCC_GPIOI_CLK_ENABLE();
 8000d1c:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
 8000d20:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
 8000d24:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8000d28:	9304      	str	r3, [sp, #16]
 8000d2a:	9b04      	ldr	r3, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8000d2c:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
 8000d30:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000d34:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
 8000d38:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
 8000d3c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8000d40:	9305      	str	r3, [sp, #20]
 8000d42:	9b05      	ldr	r3, [sp, #20]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000d44:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
 8000d48:	f043 0310 	orr.w	r3, r3, #16
 8000d4c:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
 8000d50:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
 8000d54:	f003 0310 	and.w	r3, r3, #16
 8000d58:	9306      	str	r3, [sp, #24]
 8000d5a:	9b06      	ldr	r3, [sp, #24]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000d5c:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
 8000d60:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000d64:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
 8000d68:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
 8000d6c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8000d70:	9307      	str	r3, [sp, #28]
 8000d72:	9b07      	ldr	r3, [sp, #28]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000d74:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
 8000d78:	f043 0304 	orr.w	r3, r3, #4
 8000d7c:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
 8000d80:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
 8000d84:	f003 0304 	and.w	r3, r3, #4
 8000d88:	9308      	str	r3, [sp, #32]
 8000d8a:	9b08      	ldr	r3, [sp, #32]
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 8000d8c:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
 8000d90:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8000d94:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
 8000d98:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
 8000d9c:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8000da0:	9309      	str	r3, [sp, #36]	; 0x24
 8000da2:	9b09      	ldr	r3, [sp, #36]	; 0x24
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000da4:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
 8000da8:	f043 0308 	orr.w	r3, r3, #8
 8000dac:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
 8000db0:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
 8000db4:	f003 0308 	and.w	r3, r3, #8
 8000db8:	930a      	str	r3, [sp, #40]	; 0x28
 8000dba:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000dbc:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
 8000dc0:	f043 0301 	orr.w	r3, r3, #1
 8000dc4:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
 8000dc8:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
 8000dcc:	f003 0301 	and.w	r3, r3, #1
 8000dd0:	930b      	str	r3, [sp, #44]	; 0x2c
 8000dd2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8000dd4:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
 8000dd8:	f043 0320 	orr.w	r3, r3, #32
 8000ddc:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
 8000de0:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
 8000de4:	f003 0320 	and.w	r3, r3, #32
 8000de8:	930c      	str	r3, [sp, #48]	; 0x30
 8000dea:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000dec:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
 8000df0:	f043 0302 	orr.w	r3, r3, #2
 8000df4:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
 8000df8:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000dfc:	2401      	movs	r4, #1
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000dfe:	f003 0302 	and.w	r3, r3, #2
 8000e02:	930d      	str	r3, [sp, #52]	; 0x34
 8000e04:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  HAL_GPIO_WritePin(LCD_BL_GPIO_Port, LCD_BL_Pin, GPIO_PIN_RESET);
 8000e06:	f005 ffbf 	bl	8006d88 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOI, LED1_Pin|LED2_Pin|LED3_Pin|LED4_Pin, GPIO_PIN_SET);
 8000e0a:	2201      	movs	r2, #1
 8000e0c:	f44f 4170 	mov.w	r1, #61440	; 0xf000
 8000e10:	4846      	ldr	r0, [pc, #280]	; (8000f2c <main+0x6e8>)
 8000e12:	f005 ffb9 	bl	8006d88 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_RESET_GPIO_Port, LCD_RESET_Pin, GPIO_PIN_RESET);
 8000e16:	2200      	movs	r2, #0
 8000e18:	2108      	movs	r1, #8
 8000e1a:	4845      	ldr	r0, [pc, #276]	; (8000f30 <main+0x6ec>)
 8000e1c:	f005 ffb4 	bl	8006d88 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000e20:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  HAL_GPIO_Init(LCD_BL_GPIO_Port, &GPIO_InitStruct);
 8000e24:	a92d      	add	r1, sp, #180	; 0xb4
 8000e26:	4840      	ldr	r0, [pc, #256]	; (8000f28 <main+0x6e4>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000e28:	e9cd 342d 	strd	r3, r4, [sp, #180]	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000e2c:	e9cd 572f 	strd	r5, r7, [sp, #188]	; 0xbc
  HAL_GPIO_Init(LCD_BL_GPIO_Port, &GPIO_InitStruct);
 8000e30:	f005 fe16 	bl	8006a60 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000e34:	f44f 7280 	mov.w	r2, #256	; 0x100
 8000e38:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000e3a:	a92d      	add	r1, sp, #180	; 0xb4
 8000e3c:	483d      	ldr	r0, [pc, #244]	; (8000f34 <main+0x6f0>)
  GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 8000e3e:	9531      	str	r5, [sp, #196]	; 0xc4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000e40:	e9cd 232d 	strd	r2, r3, [sp, #180]	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000e44:	e9cd 552f 	strd	r5, r5, [sp, #188]	; 0xbc
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000e48:	f005 fe0a 	bl	8006a60 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = LED1_Pin|LED2_Pin|LED3_Pin|LED4_Pin;
 8000e4c:	f44f 4370 	mov.w	r3, #61440	; 0xf000
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8000e50:	a92d      	add	r1, sp, #180	; 0xb4
 8000e52:	4836      	ldr	r0, [pc, #216]	; (8000f2c <main+0x6e8>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000e54:	e9cd 342d 	strd	r3, r4, [sp, #180]	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000e58:	e9cd 552f 	strd	r5, r5, [sp, #188]	; 0xbc
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8000e5c:	f005 fe00 	bl	8006a60 <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_RESET_GPIO_Port, &GPIO_InitStruct);
 8000e60:	a92d      	add	r1, sp, #180	; 0xb4
 8000e62:	4833      	ldr	r0, [pc, #204]	; (8000f30 <main+0x6ec>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000e64:	e9cd 642d 	strd	r6, r4, [sp, #180]	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000e68:	e9cd 472f 	strd	r4, r7, [sp, #188]	; 0xbc
  HAL_GPIO_Init(LCD_RESET_GPIO_Port, &GPIO_InitStruct);
 8000e6c:	f005 fdf8 	bl	8006a60 <HAL_GPIO_Init>
  HAL_GPIO_Init(TEST_PIN_GPIO_Port, &GPIO_InitStruct);
 8000e70:	a92d      	add	r1, sp, #180	; 0xb4
 8000e72:	482d      	ldr	r0, [pc, #180]	; (8000f28 <main+0x6e4>)
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000e74:	942f      	str	r4, [sp, #188]	; 0xbc
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000e76:	e9cd 652d 	strd	r6, r5, [sp, #180]	; 0xb4
  HAL_GPIO_Init(TEST_PIN_GPIO_Port, &GPIO_InitStruct);
 8000e7a:	f005 fdf1 	bl	8006a60 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8000e7e:	482e      	ldr	r0, [pc, #184]	; (8000f38 <main+0x6f4>)
 8000e80:	4b2e      	ldr	r3, [pc, #184]	; (8000f3c <main+0x6f8>)
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 8000e82:	8085      	strh	r5, [r0, #4]
  hcrc.Instance = CRC;
 8000e84:	6003      	str	r3, [r0, #0]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 8000e86:	6204      	str	r4, [r0, #32]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 8000e88:	e9c0 5505 	strd	r5, r5, [r0, #20]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8000e8c:	f005 f872 	bl	8005f74 <HAL_CRC_Init>
 8000e90:	4603      	mov	r3, r0
 8000e92:	2800      	cmp	r0, #0
 8000e94:	f47f ad79 	bne.w	800098a <main+0x146>
  FMC_Bank1_R->BTCR[0] &= ~FMC_BCRx_MBKEN;
 8000e98:	4929      	ldr	r1, [pc, #164]	; (8000f40 <main+0x6fc>)
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8000e9a:	2540      	movs	r5, #64	; 0x40
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8000e9c:	4829      	ldr	r0, [pc, #164]	; (8000f44 <main+0x700>)
  FMC_Bank1_R->BTCR[0] &= ~FMC_BCRx_MBKEN;
 8000e9e:	680a      	ldr	r2, [r1, #0]
 8000ea0:	f022 0201 	bic.w	r2, r2, #1
 8000ea4:	600a      	str	r2, [r1, #0]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000ea6:	a92d      	add	r1, sp, #180	; 0xb4
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8000ea8:	4a27      	ldr	r2, [pc, #156]	; (8000f48 <main+0x704>)
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
 8000eaa:	6283      	str	r3, [r0, #40]	; 0x28
  hsdram1.Init.SDBank = FMC_SDRAM_BANK1;
 8000eac:	e9c0 2300 	strd	r2, r3, [r0]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8000eb0:	2220      	movs	r2, #32
 8000eb2:	e9c0 2504 	strd	r2, r5, [r0, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_1;
 8000eb6:	2280      	movs	r2, #128	; 0x80
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_11;
 8000eb8:	e9c0 3302 	strd	r3, r3, [r0, #8]
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8000ebc:	e9c0 2306 	strd	r2, r3, [r0, #24]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8000ec0:	e9c0 3308 	strd	r3, r3, [r0, #32]
  SdramTiming.LoadToActiveDelay = 16;
 8000ec4:	2310      	movs	r3, #16
  SdramTiming.ExitSelfRefreshDelay = 16;
 8000ec6:	e9cd 332d 	strd	r3, r3, [sp, #180]	; 0xb4
  SdramTiming.RowCycleDelay = 16;
 8000eca:	e9cd 332f 	strd	r3, r3, [sp, #188]	; 0xbc
  SdramTiming.RPDelay = 16;
 8000ece:	e9cd 3331 	strd	r3, r3, [sp, #196]	; 0xc4
  SdramTiming.RCDDelay = 16;
 8000ed2:	9333      	str	r3, [sp, #204]	; 0xcc
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000ed4:	f008 fb48 	bl	8009568 <HAL_SDRAM_Init>
 8000ed8:	4680      	mov	r8, r0
 8000eda:	2800      	cmp	r0, #0
 8000edc:	f43f ad57 	beq.w	800098e <main+0x14a>
 8000ee0:	b672      	cpsid	i
  while (1)
 8000ee2:	e7fe      	b.n	8000ee2 <main+0x69e>
  HAL_Init();
 8000ee4:	f004 ff3e 	bl	8005d64 <HAL_Init>
  SystemClock_Config();
 8000ee8:	f7ff fc40 	bl	800076c <SystemClock_Config>
__HAL_RCC_HSEM_CLK_ENABLE();
 8000eec:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
HAL_HSEM_FastTake(HSEM_ID_0);
 8000ef0:	4620      	mov	r0, r4
__HAL_RCC_HSEM_CLK_ENABLE();
 8000ef2:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8000ef6:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
 8000efa:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
 8000efe:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8000f02:	9303      	str	r3, [sp, #12]
 8000f04:	9b03      	ldr	r3, [sp, #12]
HAL_HSEM_FastTake(HSEM_ID_0);
 8000f06:	f005 ff45 	bl	8006d94 <HAL_HSEM_FastTake>
HAL_HSEM_Release(HSEM_ID_0,0);
 8000f0a:	4621      	mov	r1, r4
 8000f0c:	4620      	mov	r0, r4
 8000f0e:	f005 ff4f 	bl	8006db0 <HAL_HSEM_Release>
while((__HAL_RCC_GET_FLAG(RCC_FLAG_D2CKRDY) == RESET) && (timeout-- > 0));
 8000f12:	4c0e      	ldr	r4, [pc, #56]	; (8000f4c <main+0x708>)
 8000f14:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000f18:	6822      	ldr	r2, [r4, #0]
 8000f1a:	0412      	lsls	r2, r2, #16
 8000f1c:	f53f aeee 	bmi.w	8000cfc <main+0x4b8>
 8000f20:	3b01      	subs	r3, #1
 8000f22:	d1f9      	bne.n	8000f18 <main+0x6d4>
 8000f24:	b672      	cpsid	i
  while (1)
 8000f26:	e7fe      	b.n	8000f26 <main+0x6e2>
 8000f28:	58022400 	.word	0x58022400
 8000f2c:	58022000 	.word	0x58022000
 8000f30:	58021800 	.word	0x58021800
 8000f34:	58020000 	.word	0x58020000
 8000f38:	2400016c 	.word	0x2400016c
 8000f3c:	58024c00 	.word	0x58024c00
 8000f40:	52004000 	.word	0x52004000
 8000f44:	24000308 	.word	0x24000308
 8000f48:	52004140 	.word	0x52004140
 8000f4c:	58024400 	.word	0x58024400

08000f50 <HAL_TIM_PeriodElapsedCallback>:
  if (htim->Instance == TIM6) {
 8000f50:	6802      	ldr	r2, [r0, #0]
 8000f52:	4b03      	ldr	r3, [pc, #12]	; (8000f60 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8000f54:	429a      	cmp	r2, r3
 8000f56:	d101      	bne.n	8000f5c <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 8000f58:	f004 bf32 	b.w	8005dc0 <HAL_IncTick>
}
 8000f5c:	4770      	bx	lr
 8000f5e:	bf00      	nop
 8000f60:	40001000 	.word	0x40001000

08000f64 <Error_Handler>:
 8000f64:	b672      	cpsid	i
  while (1)
 8000f66:	e7fe      	b.n	8000f66 <Error_Handler+0x2>

08000f68 <HAL_MspInit>:
{
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000f68:	4b0a      	ldr	r3, [pc, #40]	; (8000f94 <HAL_MspInit+0x2c>)
{
 8000f6a:	b082      	sub	sp, #8

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8000f6c:	210f      	movs	r1, #15
 8000f6e:	f06f 0001 	mvn.w	r0, #1
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000f72:	f8d3 20f4 	ldr.w	r2, [r3, #244]	; 0xf4
 8000f76:	f042 0202 	orr.w	r2, r2, #2
 8000f7a:	f8c3 20f4 	str.w	r2, [r3, #244]	; 0xf4
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8000f7e:	2200      	movs	r2, #0
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000f80:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 8000f84:	f003 0302 	and.w	r3, r3, #2
 8000f88:	9301      	str	r3, [sp, #4]
 8000f8a:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000f8c:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8000f8e:	f004 bf53 	b.w	8005e38 <HAL_NVIC_SetPriority>
 8000f92:	bf00      	nop
 8000f94:	58024400 	.word	0x58024400

08000f98 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8000f98:	6802      	ldr	r2, [r0, #0]
{
 8000f9a:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8000f9c:	4b09      	ldr	r3, [pc, #36]	; (8000fc4 <HAL_CRC_MspInit+0x2c>)
 8000f9e:	429a      	cmp	r2, r3
 8000fa0:	d10d      	bne.n	8000fbe <HAL_CRC_MspInit+0x26>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8000fa2:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8000fa6:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8000faa:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 8000fae:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8000fb2:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000fb6:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8000fba:	9301      	str	r3, [sp, #4]
 8000fbc:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8000fbe:	b002      	add	sp, #8
 8000fc0:	4770      	bx	lr
 8000fc2:	bf00      	nop
 8000fc4:	58024c00 	.word	0x58024c00

08000fc8 <HAL_DMA2D_MspInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
 8000fc8:	4b0f      	ldr	r3, [pc, #60]	; (8001008 <HAL_DMA2D_MspInit+0x40>)
{
 8000fca:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8000fcc:	6802      	ldr	r2, [r0, #0]
 8000fce:	429a      	cmp	r2, r3
 8000fd0:	d117      	bne.n	8001002 <HAL_DMA2D_MspInit+0x3a>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000fd2:	4b0e      	ldr	r3, [pc, #56]	; (800100c <HAL_DMA2D_MspInit+0x44>)
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 7, 0);
 8000fd4:	2107      	movs	r1, #7
 8000fd6:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000fd8:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 8000fdc:	f042 0210 	orr.w	r2, r2, #16
 8000fe0:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
    HAL_NVIC_SetPriority(DMA2D_IRQn, 7, 0);
 8000fe4:	2200      	movs	r2, #0
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000fe6:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 8000fea:	f003 0310 	and.w	r3, r3, #16
 8000fee:	9301      	str	r3, [sp, #4]
 8000ff0:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 7, 0);
 8000ff2:	f004 ff21 	bl	8005e38 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8000ff6:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8000ff8:	b003      	add	sp, #12
 8000ffa:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8000ffe:	f004 bf4d 	b.w	8005e9c <HAL_NVIC_EnableIRQ>
}
 8001002:	b003      	add	sp, #12
 8001004:	f85d fb04 	ldr.w	pc, [sp], #4
 8001008:	52001000 	.word	0x52001000
 800100c:	58024400 	.word	0x58024400

08001010 <HAL_DSI_MspInit>:
* This function configures the hardware resources used in this example
* @param hdsi: DSI handle pointer
* @retval None
*/
void HAL_DSI_MspInit(DSI_HandleTypeDef* hdsi)
{
 8001010:	b510      	push	{r4, lr}
 8001012:	b0b8      	sub	sp, #224	; 0xe0
 8001014:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001016:	2214      	movs	r2, #20
 8001018:	2100      	movs	r1, #0
 800101a:	a803      	add	r0, sp, #12
 800101c:	f01f f886 	bl	802012c <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001020:	22c0      	movs	r2, #192	; 0xc0
 8001022:	2100      	movs	r1, #0
 8001024:	a808      	add	r0, sp, #32
 8001026:	f01f f881 	bl	802012c <memset>
  if(hdsi->Instance==DSI)
 800102a:	6823      	ldr	r3, [r4, #0]
 800102c:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 8001030:	d136      	bne.n	80010a0 <HAL_DSI_MspInit+0x90>

  /* USER CODE END DSI_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_DSI;
 8001032:	f04f 6380 	mov.w	r3, #67108864	; 0x4000000
    PeriphClkInitStruct.DsiClockSelection = RCC_DSICLKSOURCE_PHY;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001036:	a808      	add	r0, sp, #32
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_DSI;
 8001038:	9308      	str	r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800103a:	f007 fdbf 	bl	8008bbc <HAL_RCCEx_PeriphCLKConfig>
 800103e:	b108      	cbz	r0, 8001044 <HAL_DSI_MspInit+0x34>
    {
      Error_Handler();
 8001040:	f7ff ff90 	bl	8000f64 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_DSI_CLK_ENABLE();
 8001044:	4b17      	ldr	r3, [pc, #92]	; (80010a4 <HAL_DSI_MspInit+0x94>)
    DSI_D0N     ------> DSIHOST_D0N
    PJ2     ------> DSIHOST_TE
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001046:	2400      	movs	r4, #0
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001048:	a903      	add	r1, sp, #12
 800104a:	4817      	ldr	r0, [pc, #92]	; (80010a8 <HAL_DSI_MspInit+0x98>)
    __HAL_RCC_DSI_CLK_ENABLE();
 800104c:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
 8001050:	f042 0210 	orr.w	r2, r2, #16
 8001054:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
 8001058:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
 800105c:	f002 0210 	and.w	r2, r2, #16
 8001060:	9201      	str	r2, [sp, #4]
 8001062:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001064:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001068:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800106c:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001070:	2204      	movs	r2, #4
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001072:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001076:	f403 7300 	and.w	r3, r3, #512	; 0x200
 800107a:	9302      	str	r3, [sp, #8]
 800107c:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800107e:	2302      	movs	r3, #2
 8001080:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
 8001084:	230d      	movs	r3, #13
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001086:	e9cd 4405 	strd	r4, r4, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
 800108a:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 800108c:	f005 fce8 	bl	8006a60 <HAL_GPIO_Init>

    /* DSI interrupt Init */
    HAL_NVIC_SetPriority(DSI_IRQn, 7, 0);
 8001090:	207b      	movs	r0, #123	; 0x7b
 8001092:	4622      	mov	r2, r4
 8001094:	2107      	movs	r1, #7
 8001096:	f004 fecf 	bl	8005e38 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DSI_IRQn);
 800109a:	207b      	movs	r0, #123	; 0x7b
 800109c:	f004 fefe 	bl	8005e9c <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN DSI_MspInit 1 */

  /* USER CODE END DSI_MspInit 1 */
  }

}
 80010a0:	b038      	add	sp, #224	; 0xe0
 80010a2:	bd10      	pop	{r4, pc}
 80010a4:	58024400 	.word	0x58024400
 80010a8:	58022400 	.word	0x58022400

080010ac <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 80010ac:	b510      	push	{r4, lr}
 80010ae:	b0b2      	sub	sp, #200	; 0xc8
 80010b0:	4604      	mov	r4, r0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 80010b2:	22c0      	movs	r2, #192	; 0xc0
 80010b4:	2100      	movs	r1, #0
 80010b6:	a802      	add	r0, sp, #8
 80010b8:	f01f f838 	bl	802012c <memset>
  if(hltdc->Instance==LTDC)
 80010bc:	6822      	ldr	r2, [r4, #0]
 80010be:	4b17      	ldr	r3, [pc, #92]	; (800111c <HAL_LTDC_MspInit+0x70>)
 80010c0:	429a      	cmp	r2, r3
 80010c2:	d129      	bne.n	8001118 <HAL_LTDC_MspInit+0x6c>

  /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80010c4:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
    PeriphClkInitStruct.PLL3.PLL3M = 5;
    PeriphClkInitStruct.PLL3.PLL3N = 161;
 80010c8:	2105      	movs	r1, #5
    PeriphClkInitStruct.PLL3.PLL3P = 2;
    PeriphClkInitStruct.PLL3.PLL3Q = 2;
    PeriphClkInitStruct.PLL3.PLL3R = 21;
    PeriphClkInitStruct.PLL3.PLL3RGE = RCC_PLL3VCIRANGE_2;
 80010ca:	2015      	movs	r0, #21
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80010cc:	9302      	str	r3, [sp, #8]
    PeriphClkInitStruct.PLL3.PLL3N = 161;
 80010ce:	23a1      	movs	r3, #161	; 0xa1
 80010d0:	e9cd 130b 	strd	r1, r3, [sp, #44]	; 0x2c
    PeriphClkInitStruct.PLL3.PLL3P = 2;
 80010d4:	2302      	movs	r3, #2
    PeriphClkInitStruct.PLL3.PLL3Q = 2;
 80010d6:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
    PeriphClkInitStruct.PLL3.PLL3RGE = RCC_PLL3VCIRANGE_2;
 80010da:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80010de:	e9cd 030f 	strd	r0, r3, [sp, #60]	; 0x3c
    PeriphClkInitStruct.PLL3.PLL3VCOSEL = RCC_PLL3VCOWIDE;
    PeriphClkInitStruct.PLL3.PLL3FRACN = 0;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80010e2:	a802      	add	r0, sp, #8
 80010e4:	f007 fd6a 	bl	8008bbc <HAL_RCCEx_PeriphCLKConfig>
 80010e8:	b108      	cbz	r0, 80010ee <HAL_LTDC_MspInit+0x42>
    {
      Error_Handler();
 80010ea:	f7ff ff3b 	bl	8000f64 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 80010ee:	4b0c      	ldr	r3, [pc, #48]	; (8001120 <HAL_LTDC_MspInit+0x74>)
    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 7, 0);
 80010f0:	2058      	movs	r0, #88	; 0x58
 80010f2:	2107      	movs	r1, #7
    __HAL_RCC_LTDC_CLK_ENABLE();
 80010f4:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
 80010f8:	f042 0208 	orr.w	r2, r2, #8
 80010fc:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
    HAL_NVIC_SetPriority(LTDC_IRQn, 7, 0);
 8001100:	2200      	movs	r2, #0
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001102:	f8d3 30e4 	ldr.w	r3, [r3, #228]	; 0xe4
 8001106:	f003 0308 	and.w	r3, r3, #8
 800110a:	9301      	str	r3, [sp, #4]
 800110c:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(LTDC_IRQn, 7, 0);
 800110e:	f004 fe93 	bl	8005e38 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001112:	2058      	movs	r0, #88	; 0x58
 8001114:	f004 fec2 	bl	8005e9c <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001118:	b032      	add	sp, #200	; 0xc8
 800111a:	bd10      	pop	{r4, pc}
 800111c:	50001000 	.word	0x50001000
 8001120:	58024400 	.word	0x58024400

08001124 <HAL_QSPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspInit(QSPI_HandleTypeDef* hqspi)
{
 8001124:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001126:	b0bd      	sub	sp, #244	; 0xf4
 8001128:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800112a:	2214      	movs	r2, #20
 800112c:	2100      	movs	r1, #0
 800112e:	a807      	add	r0, sp, #28
 8001130:	f01e fffc 	bl	802012c <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001134:	22c0      	movs	r2, #192	; 0xc0
 8001136:	2100      	movs	r1, #0
 8001138:	a80c      	add	r0, sp, #48	; 0x30
 800113a:	f01e fff7 	bl	802012c <memset>
  if(hqspi->Instance==QUADSPI)
 800113e:	6822      	ldr	r2, [r4, #0]
 8001140:	4b52      	ldr	r3, [pc, #328]	; (800128c <HAL_QSPI_MspInit+0x168>)
 8001142:	429a      	cmp	r2, r3
 8001144:	f040 809f 	bne.w	8001286 <HAL_QSPI_MspInit+0x162>

  /* USER CODE END QUADSPI_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_QSPI;
 8001148:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
    PeriphClkInitStruct.QspiClockSelection = RCC_QSPICLKSOURCE_D1HCLK;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800114c:	a80c      	add	r0, sp, #48	; 0x30
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_QSPI;
 800114e:	930c      	str	r3, [sp, #48]	; 0x30
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001150:	f007 fd34 	bl	8008bbc <HAL_RCCEx_PeriphCLKConfig>
 8001154:	b108      	cbz	r0, 800115a <HAL_QSPI_MspInit+0x36>
    {
      Error_Handler();
 8001156:	f7ff ff05 	bl	8000f64 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_QSPI_CLK_ENABLE();
 800115a:	4b4d      	ldr	r3, [pc, #308]	; (8001290 <HAL_QSPI_MspInit+0x16c>)
    PH3     ------> QUADSPI_BK2_IO1
    PB2     ------> QUADSPI_CLK
    PD11     ------> QUADSPI_BK1_IO0
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_14;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800115c:	2502      	movs	r5, #2
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800115e:	2400      	movs	r4, #0
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 8001160:	2609      	movs	r6, #9
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001162:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001166:	a907      	add	r1, sp, #28
 8001168:	484a      	ldr	r0, [pc, #296]	; (8001294 <HAL_QSPI_MspInit+0x170>)

    GPIO_InitStruct.Pin = GPIO_PIN_6;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF10_QUADSPI;
 800116a:	270a      	movs	r7, #10
    __HAL_RCC_QSPI_CLK_ENABLE();
 800116c:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8001170:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
 8001174:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 8001178:	f402 4280 	and.w	r2, r2, #16384	; 0x4000
 800117c:	9201      	str	r2, [sp, #4]
 800117e:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001180:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001184:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001188:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 800118c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001190:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001194:	9202      	str	r2, [sp, #8]
 8001196:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001198:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 800119c:	f042 0220 	orr.w	r2, r2, #32
 80011a0:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 80011a4:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80011a8:	f002 0220 	and.w	r2, r2, #32
 80011ac:	9203      	str	r2, [sp, #12]
 80011ae:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOH_CLK_ENABLE();
 80011b0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80011b4:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80011b8:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 80011bc:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80011c0:	f002 0280 	and.w	r2, r2, #128	; 0x80
 80011c4:	9204      	str	r2, [sp, #16]
 80011c6:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80011c8:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80011cc:	f042 0202 	orr.w	r2, r2, #2
 80011d0:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 80011d4:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80011d8:	f002 0202 	and.w	r2, r2, #2
 80011dc:	9205      	str	r2, [sp, #20]
 80011de:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80011e0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80011e4:	f042 0208 	orr.w	r2, r2, #8
 80011e8:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 80011ec:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80011f0:	f003 0308 	and.w	r3, r3, #8
 80011f4:	9306      	str	r3, [sp, #24]
 80011f6:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80011f8:	f44f 4384 	mov.w	r3, #16896	; 0x4200
 80011fc:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001200:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 8001204:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001206:	f005 fc2b 	bl	8006a60 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_6;
 800120a:	2340      	movs	r3, #64	; 0x40
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800120c:	a907      	add	r1, sp, #28
 800120e:	4821      	ldr	r0, [pc, #132]	; (8001294 <HAL_QSPI_MspInit+0x170>)
    GPIO_InitStruct.Alternate = GPIO_AF10_QUADSPI;
 8001210:	970b      	str	r7, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001212:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001216:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800121a:	f005 fc21 	bl	8006a60 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 800121e:	23c0      	movs	r3, #192	; 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001220:	a907      	add	r1, sp, #28
 8001222:	481d      	ldr	r0, [pc, #116]	; (8001298 <HAL_QSPI_MspInit+0x174>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 8001224:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001226:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800122a:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800122e:	f005 fc17 	bl	8006a60 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001232:	f44f 7300 	mov.w	r3, #512	; 0x200
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF10_QUADSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001236:	a907      	add	r1, sp, #28
 8001238:	4817      	ldr	r0, [pc, #92]	; (8001298 <HAL_QSPI_MspInit+0x174>)
    GPIO_InitStruct.Alternate = GPIO_AF10_QUADSPI;
 800123a:	970b      	str	r7, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800123c:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001240:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001244:	f005 fc0c 	bl	8006a60 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 8001248:	230c      	movs	r3, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 800124a:	a907      	add	r1, sp, #28
 800124c:	4813      	ldr	r0, [pc, #76]	; (800129c <HAL_QSPI_MspInit+0x178>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 800124e:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001250:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001254:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001258:	f005 fc02 	bl	8006a60 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_2;
 800125c:	2304      	movs	r3, #4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800125e:	a907      	add	r1, sp, #28
 8001260:	480f      	ldr	r0, [pc, #60]	; (80012a0 <HAL_QSPI_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 8001262:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001264:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001268:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800126c:	f005 fbf8 	bl	8006a60 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_11;
 8001270:	f44f 6300 	mov.w	r3, #2048	; 0x800
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001274:	a907      	add	r1, sp, #28
 8001276:	480b      	ldr	r0, [pc, #44]	; (80012a4 <HAL_QSPI_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 8001278:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800127a:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800127e:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001282:	f005 fbed 	bl	8006a60 <HAL_GPIO_Init>
  /* USER CODE BEGIN QUADSPI_MspInit 1 */

  /* USER CODE END QUADSPI_MspInit 1 */
  }

}
 8001286:	b03d      	add	sp, #244	; 0xf4
 8001288:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800128a:	bf00      	nop
 800128c:	52005000 	.word	0x52005000
 8001290:	58024400 	.word	0x58024400
 8001294:	58021800 	.word	0x58021800
 8001298:	58021400 	.word	0x58021400
 800129c:	58021c00 	.word	0x58021c00
 80012a0:	58020400 	.word	0x58020400
 80012a4:	58020c00 	.word	0x58020c00

080012a8 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 80012a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80012aa:	b0b7      	sub	sp, #220	; 0xdc
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 80012ac:	2100      	movs	r1, #0
 80012ae:	2214      	movs	r2, #20
 80012b0:	a801      	add	r0, sp, #4
 80012b2:	f01e ff3b 	bl	802012c <memset>
  if (FMC_Initialized) {
 80012b6:	4b39      	ldr	r3, [pc, #228]	; (800139c <HAL_SDRAM_MspInit+0xf4>)
 80012b8:	6819      	ldr	r1, [r3, #0]
 80012ba:	2900      	cmp	r1, #0
 80012bc:	d16b      	bne.n	8001396 <HAL_SDRAM_MspInit+0xee>
  FMC_Initialized = 1;
 80012be:	2201      	movs	r2, #1
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 80012c0:	a807      	add	r0, sp, #28
  FMC_Initialized = 1;
 80012c2:	601a      	str	r2, [r3, #0]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 80012c4:	22bc      	movs	r2, #188	; 0xbc
 80012c6:	f01e ff31 	bl	802012c <memset>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
 80012ca:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80012ce:	a806      	add	r0, sp, #24
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
 80012d0:	9306      	str	r3, [sp, #24]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80012d2:	f007 fc73 	bl	8008bbc <HAL_RCCEx_PeriphCLKConfig>
 80012d6:	b108      	cbz	r0, 80012dc <HAL_SDRAM_MspInit+0x34>
      Error_Handler();
 80012d8:	f7ff fe44 	bl	8000f64 <Error_Handler>
  __HAL_RCC_FMC_CLK_ENABLE();
 80012dc:	4b30      	ldr	r3, [pc, #192]	; (80013a0 <HAL_SDRAM_MspInit+0xf8>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80012de:	2702      	movs	r7, #2
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80012e0:	2600      	movs	r6, #0
 80012e2:	2503      	movs	r5, #3
  __HAL_RCC_FMC_CLK_ENABLE();
 80012e4:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80012e8:	240c      	movs	r4, #12
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 80012ea:	a901      	add	r1, sp, #4
 80012ec:	482d      	ldr	r0, [pc, #180]	; (80013a4 <HAL_SDRAM_MspInit+0xfc>)
  __HAL_RCC_FMC_CLK_ENABLE();
 80012ee:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80012f2:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
 80012f6:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80012fa:	9405      	str	r4, [sp, #20]
  __HAL_RCC_FMC_CLK_ENABLE();
 80012fc:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001300:	9300      	str	r3, [sp, #0]
 8001302:	9b00      	ldr	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001304:	f240 63ff 	movw	r3, #1791	; 0x6ff
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001308:	e9cd 6503 	strd	r6, r5, [sp, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800130c:	e9cd 3701 	strd	r3, r7, [sp, #4]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001310:	f005 fba6 	bl	8006a60 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
 8001314:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001318:	a901      	add	r1, sp, #4
 800131a:	4823      	ldr	r0, [pc, #140]	; (80013a8 <HAL_SDRAM_MspInit+0x100>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800131c:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800131e:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001322:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001326:	f005 fb9b 	bl	8006a60 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_13|GPIO_PIN_10
 800132a:	f44f 437f 	mov.w	r3, #65280	; 0xff00
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 800132e:	a901      	add	r1, sp, #4
 8001330:	481e      	ldr	r0, [pc, #120]	; (80013ac <HAL_SDRAM_MspInit+0x104>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001332:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001334:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001338:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 800133c:	f005 fb90 	bl	8006a60 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
 8001340:	f248 1331 	movw	r3, #33073	; 0x8131
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001344:	a901      	add	r1, sp, #4
 8001346:	481a      	ldr	r0, [pc, #104]	; (80013b0 <HAL_SDRAM_MspInit+0x108>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001348:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800134a:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800134e:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001352:	f005 fb85 	bl	8006a60 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
 8001356:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800135a:	a901      	add	r1, sp, #4
 800135c:	4815      	ldr	r0, [pc, #84]	; (80013b4 <HAL_SDRAM_MspInit+0x10c>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800135e:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001360:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001364:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001368:	f005 fb7a 	bl	8006a60 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
 800136c:	f64f 033f 	movw	r3, #63551	; 0xf83f
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001370:	a901      	add	r1, sp, #4
 8001372:	4811      	ldr	r0, [pc, #68]	; (80013b8 <HAL_SDRAM_MspInit+0x110>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001374:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001376:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800137a:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800137e:	f005 fb6f 	bl	8006a60 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_2|GPIO_PIN_3;
 8001382:	230d      	movs	r3, #13
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001384:	a901      	add	r1, sp, #4
 8001386:	480d      	ldr	r0, [pc, #52]	; (80013bc <HAL_SDRAM_MspInit+0x114>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001388:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800138a:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800138e:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001392:	f005 fb65 	bl	8006a60 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001396:	b037      	add	sp, #220	; 0xdc
 8001398:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800139a:	bf00      	nop
 800139c:	24000340 	.word	0x24000340
 80013a0:	58024400 	.word	0x58024400
 80013a4:	58022000 	.word	0x58022000
 80013a8:	58021000 	.word	0x58021000
 80013ac:	58021c00 	.word	0x58021c00
 80013b0:	58021800 	.word	0x58021800
 80013b4:	58020c00 	.word	0x58020c00
 80013b8:	58021400 	.word	0x58021400
 80013bc:	58020800 	.word	0x58020800

080013c0 <HAL_SDRAM_MspDeInit>:
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
 80013c0:	b508      	push	{r3, lr}
  if (FMC_DeInitialized) {
 80013c2:	4b18      	ldr	r3, [pc, #96]	; (8001424 <HAL_SDRAM_MspDeInit+0x64>)
 80013c4:	681a      	ldr	r2, [r3, #0]
 80013c6:	bb62      	cbnz	r2, 8001422 <HAL_SDRAM_MspDeInit+0x62>
  FMC_DeInitialized = 1;
 80013c8:	2201      	movs	r2, #1
  HAL_GPIO_DeInit(GPIOI, GPIO_PIN_6|GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_1
 80013ca:	f240 61ff 	movw	r1, #1791	; 0x6ff
 80013ce:	4816      	ldr	r0, [pc, #88]	; (8001428 <HAL_SDRAM_MspDeInit+0x68>)
  FMC_DeInitialized = 1;
 80013d0:	601a      	str	r2, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
 80013d2:	4a16      	ldr	r2, [pc, #88]	; (800142c <HAL_SDRAM_MspDeInit+0x6c>)
 80013d4:	f8d2 30d4 	ldr.w	r3, [r2, #212]	; 0xd4
 80013d8:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80013dc:	f8c2 30d4 	str.w	r3, [r2, #212]	; 0xd4
  HAL_GPIO_DeInit(GPIOI, GPIO_PIN_6|GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_1
 80013e0:	f005 fc2a 	bl	8006c38 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
 80013e4:	f64f 7183 	movw	r1, #65411	; 0xff83
 80013e8:	4811      	ldr	r0, [pc, #68]	; (8001430 <HAL_SDRAM_MspDeInit+0x70>)
 80013ea:	f005 fc25 	bl	8006c38 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_13|GPIO_PIN_10
 80013ee:	f44f 417f 	mov.w	r1, #65280	; 0xff00
 80013f2:	4810      	ldr	r0, [pc, #64]	; (8001434 <HAL_SDRAM_MspDeInit+0x74>)
 80013f4:	f005 fc20 	bl	8006c38 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
 80013f8:	f248 1131 	movw	r1, #33073	; 0x8131
 80013fc:	480e      	ldr	r0, [pc, #56]	; (8001438 <HAL_SDRAM_MspDeInit+0x78>)
 80013fe:	f005 fc1b 	bl	8006c38 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
 8001402:	f24c 7103 	movw	r1, #50947	; 0xc703
 8001406:	480d      	ldr	r0, [pc, #52]	; (800143c <HAL_SDRAM_MspDeInit+0x7c>)
 8001408:	f005 fc16 	bl	8006c38 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
 800140c:	f64f 013f 	movw	r1, #63551	; 0xf83f
 8001410:	480b      	ldr	r0, [pc, #44]	; (8001440 <HAL_SDRAM_MspDeInit+0x80>)
 8001412:	f005 fc11 	bl	8006c38 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOC, GPIO_PIN_0|GPIO_PIN_2|GPIO_PIN_3);
 8001416:	210d      	movs	r1, #13
 8001418:	480a      	ldr	r0, [pc, #40]	; (8001444 <HAL_SDRAM_MspDeInit+0x84>)
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
 800141a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_DeInit(GPIOC, GPIO_PIN_0|GPIO_PIN_2|GPIO_PIN_3);
 800141e:	f005 bc0b 	b.w	8006c38 <HAL_GPIO_DeInit>
}
 8001422:	bd08      	pop	{r3, pc}
 8001424:	2400033c 	.word	0x2400033c
 8001428:	58022000 	.word	0x58022000
 800142c:	58024400 	.word	0x58024400
 8001430:	58021000 	.word	0x58021000
 8001434:	58021c00 	.word	0x58021c00
 8001438:	58021800 	.word	0x58021800
 800143c:	58020c00 	.word	0x58020c00
 8001440:	58021400 	.word	0x58021400
 8001444:	58020800 	.word	0x58020800

08001448 <HAL_InitTick>:
  uint32_t              uwTimclock, uwAPB1Prescaler;

  uint32_t              uwPrescalerValue;
  uint32_t              pFLatency;
/*Configure the TIM6 IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8001448:	280f      	cmp	r0, #15
{
 800144a:	b510      	push	{r4, lr}
 800144c:	4604      	mov	r4, r0
 800144e:	b08a      	sub	sp, #40	; 0x28
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8001450:	d902      	bls.n	8001458 <HAL_InitTick+0x10>
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
    uwTickPrio = TickPriority;
    }
  else
  {
    return HAL_ERROR;
 8001452:	2001      	movs	r0, #1
    return HAL_TIM_Base_Start_IT(&htim6);
  }

  /* Return function status */
  return HAL_ERROR;
}
 8001454:	b00a      	add	sp, #40	; 0x28
 8001456:	bd10      	pop	{r4, pc}
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0U);
 8001458:	4601      	mov	r1, r0
 800145a:	2200      	movs	r2, #0
 800145c:	2036      	movs	r0, #54	; 0x36
 800145e:	f004 fceb 	bl	8005e38 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8001462:	2036      	movs	r0, #54	; 0x36
 8001464:	f004 fd1a 	bl	8005e9c <HAL_NVIC_EnableIRQ>
    uwTickPrio = TickPriority;
 8001468:	4b18      	ldr	r3, [pc, #96]	; (80014cc <HAL_InitTick+0x84>)
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 800146a:	4669      	mov	r1, sp
 800146c:	a802      	add	r0, sp, #8
    uwTickPrio = TickPriority;
 800146e:	601c      	str	r4, [r3, #0]
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001470:	4b17      	ldr	r3, [pc, #92]	; (80014d0 <HAL_InitTick+0x88>)
 8001472:	f8d3 20e8 	ldr.w	r2, [r3, #232]	; 0xe8
 8001476:	f042 0210 	orr.w	r2, r2, #16
 800147a:	f8c3 20e8 	str.w	r2, [r3, #232]	; 0xe8
 800147e:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 8001482:	f003 0310 	and.w	r3, r3, #16
 8001486:	9301      	str	r3, [sp, #4]
 8001488:	9b01      	ldr	r3, [sp, #4]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 800148a:	f007 fa7d 	bl	8008988 <HAL_RCC_GetClockConfig>
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 800148e:	9b07      	ldr	r3, [sp, #28]
 8001490:	b9c3      	cbnz	r3, 80014c4 <HAL_InitTick+0x7c>
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 8001492:	f007 fa55 	bl	8008940 <HAL_RCC_GetPCLK1Freq>
  htim6.Instance = TIM6;
 8001496:	4c0f      	ldr	r4, [pc, #60]	; (80014d4 <HAL_InitTick+0x8c>)
 8001498:	4b0f      	ldr	r3, [pc, #60]	; (80014d8 <HAL_InitTick+0x90>)
 800149a:	6023      	str	r3, [r4, #0]
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 800149c:	f240 33e7 	movw	r3, #999	; 0x3e7
 80014a0:	60e3      	str	r3, [r4, #12]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 80014a2:	4b0e      	ldr	r3, [pc, #56]	; (80014dc <HAL_InitTick+0x94>)
 80014a4:	fbb0 f0f3 	udiv	r0, r0, r3
 80014a8:	3801      	subs	r0, #1
  htim6.Init.ClockDivision = 0;
 80014aa:	2300      	movs	r3, #0
  htim6.Init.Prescaler = uwPrescalerValue;
 80014ac:	6060      	str	r0, [r4, #4]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 80014ae:	4620      	mov	r0, r4
  htim6.Init.ClockDivision = 0;
 80014b0:	6123      	str	r3, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 80014b2:	60a3      	str	r3, [r4, #8]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 80014b4:	f008 fa58 	bl	8009968 <HAL_TIM_Base_Init>
 80014b8:	2800      	cmp	r0, #0
 80014ba:	d1ca      	bne.n	8001452 <HAL_InitTick+0xa>
    return HAL_TIM_Base_Start_IT(&htim6);
 80014bc:	4620      	mov	r0, r4
 80014be:	f008 f8fb 	bl	80096b8 <HAL_TIM_Base_Start_IT>
 80014c2:	e7c7      	b.n	8001454 <HAL_InitTick+0xc>
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 80014c4:	f007 fa3c 	bl	8008940 <HAL_RCC_GetPCLK1Freq>
 80014c8:	0040      	lsls	r0, r0, #1
 80014ca:	e7e4      	b.n	8001496 <HAL_InitTick+0x4e>
 80014cc:	24000054 	.word	0x24000054
 80014d0:	58024400 	.word	0x58024400
 80014d4:	24000344 	.word	0x24000344
 80014d8:	40001000 	.word	0x40001000
 80014dc:	000f4240 	.word	0x000f4240

080014e0 <NMI_Handler>:
{
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 80014e0:	e7fe      	b.n	80014e0 <NMI_Handler>

080014e2 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80014e2:	e7fe      	b.n	80014e2 <HardFault_Handler>

080014e4 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80014e4:	e7fe      	b.n	80014e4 <MemManage_Handler>

080014e6 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80014e6:	e7fe      	b.n	80014e6 <BusFault_Handler>

080014e8 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80014e8:	e7fe      	b.n	80014e8 <UsageFault_Handler>

080014ea <DebugMon_Handler>:

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 80014ea:	4770      	bx	lr

080014ec <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 80014ec:	4801      	ldr	r0, [pc, #4]	; (80014f4 <TIM6_DAC_IRQHandler+0x8>)
 80014ee:	f008 b925 	b.w	800973c <HAL_TIM_IRQHandler>
 80014f2:	bf00      	nop
 80014f4:	24000344 	.word	0x24000344

080014f8 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 80014f8:	4801      	ldr	r0, [pc, #4]	; (8001500 <LTDC_IRQHandler+0x8>)
 80014fa:	f006 b916 	b.w	800772a <HAL_LTDC_IRQHandler>
 80014fe:	bf00      	nop
 8001500:	24000214 	.word	0x24000214

08001504 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8001504:	4801      	ldr	r0, [pc, #4]	; (800150c <DMA2D_IRQHandler+0x8>)
 8001506:	f004 bdd2 	b.w	80060ae <HAL_DMA2D_IRQHandler>
 800150a:	bf00      	nop
 800150c:	24000190 	.word	0x24000190

08001510 <DSI_IRQHandler>:
void DSI_IRQHandler(void)
{
  /* USER CODE BEGIN DSI_IRQn 0 */

  /* USER CODE END DSI_IRQn 0 */
  HAL_DSI_IRQHandler(&hdsi);
 8001510:	4801      	ldr	r0, [pc, #4]	; (8001518 <DSI_IRQHandler+0x8>)
 8001512:	f004 bf8e 	b.w	8006432 <HAL_DSI_IRQHandler>
 8001516:	bf00      	nop
 8001518:	240001f8 	.word	0x240001f8

0800151c <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 800151c:	2001      	movs	r0, #1
 800151e:	4770      	bx	lr

08001520 <_kill>:

int _kill(int pid, int sig)
{
 8001520:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001522:	f01e fd8f 	bl	8020044 <__errno>
 8001526:	2316      	movs	r3, #22
 8001528:	6003      	str	r3, [r0, #0]
	return -1;
}
 800152a:	f04f 30ff 	mov.w	r0, #4294967295
 800152e:	bd08      	pop	{r3, pc}

08001530 <_exit>:

void _exit (int status)
{
 8001530:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001532:	f01e fd87 	bl	8020044 <__errno>
 8001536:	2316      	movs	r3, #22
 8001538:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 800153a:	e7fe      	b.n	800153a <_exit+0xa>

0800153c <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800153c:	b570      	push	{r4, r5, r6, lr}
 800153e:	460d      	mov	r5, r1
 8001540:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001542:	460e      	mov	r6, r1
 8001544:	1b73      	subs	r3, r6, r5
 8001546:	429c      	cmp	r4, r3
 8001548:	dc01      	bgt.n	800154e <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 800154a:	4620      	mov	r0, r4
 800154c:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 800154e:	f3af 8000 	nop.w
 8001552:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001556:	e7f5      	b.n	8001544 <_read+0x8>

08001558 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001558:	b570      	push	{r4, r5, r6, lr}
 800155a:	460d      	mov	r5, r1
 800155c:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800155e:	460e      	mov	r6, r1
 8001560:	1b73      	subs	r3, r6, r5
 8001562:	429c      	cmp	r4, r3
 8001564:	dc01      	bgt.n	800156a <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8001566:	4620      	mov	r0, r4
 8001568:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 800156a:	f816 0b01 	ldrb.w	r0, [r6], #1
 800156e:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001572:	e7f5      	b.n	8001560 <_write+0x8>

08001574 <_close>:

int _close(int file)
{
	return -1;
}
 8001574:	f04f 30ff 	mov.w	r0, #4294967295
 8001578:	4770      	bx	lr

0800157a <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 800157a:	f44f 5300 	mov.w	r3, #8192	; 0x2000
	return 0;
}
 800157e:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
 8001580:	604b      	str	r3, [r1, #4]
}
 8001582:	4770      	bx	lr

08001584 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8001584:	2001      	movs	r0, #1
 8001586:	4770      	bx	lr

08001588 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8001588:	2000      	movs	r0, #0
 800158a:	4770      	bx	lr

0800158c <_sbrk>:
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
  const uint8_t *max_heap = (uint8_t *)stack_limit;
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 800158c:	4a0b      	ldr	r2, [pc, #44]	; (80015bc <_sbrk+0x30>)
{
 800158e:	4603      	mov	r3, r0
  if (NULL == __sbrk_heap_end)
 8001590:	6811      	ldr	r1, [r2, #0]
{
 8001592:	b510      	push	{r4, lr}
  if (NULL == __sbrk_heap_end)
 8001594:	b909      	cbnz	r1, 800159a <_sbrk+0xe>
  {
    __sbrk_heap_end = &_end;
 8001596:	490a      	ldr	r1, [pc, #40]	; (80015c0 <_sbrk+0x34>)
 8001598:	6011      	str	r1, [r2, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800159a:	6810      	ldr	r0, [r2, #0]
 800159c:	4909      	ldr	r1, [pc, #36]	; (80015c4 <_sbrk+0x38>)
 800159e:	4c0a      	ldr	r4, [pc, #40]	; (80015c8 <_sbrk+0x3c>)
 80015a0:	4403      	add	r3, r0
 80015a2:	1b09      	subs	r1, r1, r4
 80015a4:	428b      	cmp	r3, r1
 80015a6:	d906      	bls.n	80015b6 <_sbrk+0x2a>
  {
    errno = ENOMEM;
 80015a8:	f01e fd4c 	bl	8020044 <__errno>
 80015ac:	230c      	movs	r3, #12
 80015ae:	6003      	str	r3, [r0, #0]
    return (void *)-1;
 80015b0:	f04f 30ff 	mov.w	r0, #4294967295

  prev_heap_end = __sbrk_heap_end;
  __sbrk_heap_end += incr;

  return (void *)prev_heap_end;
}
 80015b4:	bd10      	pop	{r4, pc}
  __sbrk_heap_end += incr;
 80015b6:	6013      	str	r3, [r2, #0]
  return (void *)prev_heap_end;
 80015b8:	e7fc      	b.n	80015b4 <_sbrk+0x28>
 80015ba:	bf00      	nop
 80015bc:	24000390 	.word	0x24000390
 80015c0:	2400e360 	.word	0x2400e360
 80015c4:	24080000 	.word	0x24080000
 80015c8:	00001000 	.word	0x00001000

080015cc <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:
  ldr   sp, =_estack      /* set stack pointer */
 80015cc:	f8df d034 	ldr.w	sp, [pc, #52]	; 8001604 <LoopFillZerobss+0xe>

/* Call the clock system initialization function.*/
  bl  SystemInit
 80015d0:	f004 fb58 	bl	8005c84 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80015d4:	480c      	ldr	r0, [pc, #48]	; (8001608 <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 80015d6:	490d      	ldr	r1, [pc, #52]	; (800160c <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 80015d8:	4a0d      	ldr	r2, [pc, #52]	; (8001610 <LoopFillZerobss+0x1a>)
  movs r3, #0
 80015da:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80015dc:	e002      	b.n	80015e4 <LoopCopyDataInit>

080015de <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80015de:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80015e0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80015e2:	3304      	adds	r3, #4

080015e4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80015e4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80015e6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80015e8:	d3f9      	bcc.n	80015de <CopyDataInit>
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80015ea:	4a0a      	ldr	r2, [pc, #40]	; (8001614 <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 80015ec:	4c0a      	ldr	r4, [pc, #40]	; (8001618 <LoopFillZerobss+0x22>)
  movs r3, #0
 80015ee:	2300      	movs	r3, #0
  b LoopFillZerobss
 80015f0:	e001      	b.n	80015f6 <LoopFillZerobss>

080015f2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80015f2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80015f4:	3204      	adds	r2, #4

080015f6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80015f6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80015f8:	d3fb      	bcc.n	80015f2 <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 80015fa:	f01e fd3b 	bl	8020074 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80015fe:	f7ff f921 	bl	8000844 <main>
  bx  lr
 8001602:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 8001604:	24080000 	.word	0x24080000
  ldr r0, =_sdata
 8001608:	24000000 	.word	0x24000000
  ldr r1, =_edata
 800160c:	2400011c 	.word	0x2400011c
  ldr r2, =_sidata
 8001610:	08033c30 	.word	0x08033c30
  ldr r2, =_sbss
 8001614:	2400011c 	.word	0x2400011c
  ldr r4, =_ebss
 8001618:	2400e35c 	.word	0x2400e35c

0800161c <ADC3_IRQHandler>:
 * @retval None
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 800161c:	e7fe      	b.n	800161c <ADC3_IRQHandler>

0800161e <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_init();
 800161e:	f000 be31 	b.w	8002284 <touchgfx_init>

08001622 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 8001622:	f000 bea3 	b.w	800236c <touchgfx_taskEntry>

08001626 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
 8001626:	6840      	ldr	r0, [r0, #4]
    }
 8001628:	4770      	bx	lr

0800162a <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
 800162a:	6041      	str	r1, [r0, #4]
    }
 800162c:	4770      	bx	lr

0800162e <_ZN8touchgfx22STM32H7Instrumentation12getElapsedUSEjjj>:
    HAL_TIM_Base_Start(&tim);
}

unsigned int STM32H7Instrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
 800162e:	1a51      	subs	r1, r2, r1
 8001630:	eb01 0153 	add.w	r1, r1, r3, lsr #1
}
 8001634:	fbb1 f0f3 	udiv	r0, r1, r3
 8001638:	4770      	bx	lr
	...

0800163c <_ZN8touchgfx22STM32H7Instrumentation12getCPUCyclesEv>:

unsigned int STM32H7Instrumentation::getCPUCycles()
{
    return __HAL_TIM_GET_COUNTER(&tim) * m_sysclkRatio;
 800163c:	4b02      	ldr	r3, [pc, #8]	; (8001648 <_ZN8touchgfx22STM32H7Instrumentation12getCPUCyclesEv+0xc>)
 800163e:	68c0      	ldr	r0, [r0, #12]
 8001640:	681b      	ldr	r3, [r3, #0]
 8001642:	6a5b      	ldr	r3, [r3, #36]	; 0x24
}
 8001644:	4358      	muls	r0, r3
 8001646:	4770      	bx	lr
 8001648:	24000394 	.word	0x24000394

0800164c <_ZN8touchgfx22STM32H7InstrumentationD1Ev>:
#include <platform/core/MCUInstrumentation.hpp>
#include <stdint.h>

namespace touchgfx
{
class STM32H7Instrumentation: public MCUInstrumentation
 800164c:	4770      	bx	lr
	...

08001650 <_ZN8touchgfx22STM32H7Instrumentation4initEv>:
{
 8001650:	b537      	push	{r0, r1, r2, r4, r5, lr}
    __HAL_RCC_TIM2_CLK_ENABLE();
 8001652:	4a1e      	ldr	r2, [pc, #120]	; (80016cc <_ZN8touchgfx22STM32H7Instrumentation4initEv+0x7c>)
    tim.Instance = TIM2;
 8001654:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
{
 8001658:	4605      	mov	r5, r0
    tim.Init.Period = 0xFFFFFFFF;
 800165a:	f04f 30ff 	mov.w	r0, #4294967295
    __HAL_RCC_TIM2_CLK_ENABLE();
 800165e:	f8d2 30e8 	ldr.w	r3, [r2, #232]	; 0xe8
 8001662:	f043 0301 	orr.w	r3, r3, #1
 8001666:	f8c2 30e8 	str.w	r3, [r2, #232]	; 0xe8
 800166a:	f8d2 30e8 	ldr.w	r3, [r2, #232]	; 0xe8
 800166e:	f003 0301 	and.w	r3, r3, #1
 8001672:	9301      	str	r3, [sp, #4]
 8001674:	9b01      	ldr	r3, [sp, #4]
    tim.Instance = TIM2;
 8001676:	4b16      	ldr	r3, [pc, #88]	; (80016d0 <_ZN8touchgfx22STM32H7Instrumentation4initEv+0x80>)
 8001678:	6019      	str	r1, [r3, #0]
    tim.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800167a:	2100      	movs	r1, #0
    tim.Init.Period = 0xFFFFFFFF;
 800167c:	60d8      	str	r0, [r3, #12]
    tim.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800167e:	6119      	str	r1, [r3, #16]
    tim.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001680:	6099      	str	r1, [r3, #8]
    tim.Init.Prescaler = 0;
 8001682:	6059      	str	r1, [r3, #4]
    tim.Init.RepetitionCounter = 1;
 8001684:	2101      	movs	r1, #1
 8001686:	6159      	str	r1, [r3, #20]
    uwD2Prescaler = D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1) >> POSITION_VAL(RCC_D2CFGR_D2PPRE1_0)];
 8001688:	69d3      	ldr	r3, [r2, #28]
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 800168a:	2210      	movs	r2, #16
 800168c:	f003 0370 	and.w	r3, r3, #112	; 0x70
 8001690:	fa92 f2a2 	rbit	r2, r2
   */
  if (value == 0U)
  {
    return 32U;
  }
  return __builtin_clz(value);
 8001694:	fab2 f282 	clz	r2, r2
 8001698:	40d3      	lsrs	r3, r2
    if (!uwD2Prescaler)
 800169a:	4a0e      	ldr	r2, [pc, #56]	; (80016d4 <_ZN8touchgfx22STM32H7Instrumentation4initEv+0x84>)
 800169c:	5cd3      	ldrb	r3, [r2, r3]
 800169e:	b983      	cbnz	r3, 80016c2 <_ZN8touchgfx22STM32H7Instrumentation4initEv+0x72>
        uwTimclock = HAL_RCC_GetHCLKFreq();
 80016a0:	f007 f92c 	bl	80088fc <HAL_RCC_GetHCLKFreq>
 80016a4:	4604      	mov	r4, r0
    m_sysclkRatio = HAL_RCC_GetSysClockFreq() / uwTimclock;
 80016a6:	f006 ff63 	bl	8008570 <HAL_RCC_GetSysClockFreq>
 80016aa:	fbb0 f0f4 	udiv	r0, r0, r4
 80016ae:	60e8      	str	r0, [r5, #12]
    HAL_TIM_Base_Init(&tim);
 80016b0:	4807      	ldr	r0, [pc, #28]	; (80016d0 <_ZN8touchgfx22STM32H7Instrumentation4initEv+0x80>)
 80016b2:	f008 f959 	bl	8009968 <HAL_TIM_Base_Init>
    HAL_TIM_Base_Start(&tim);
 80016b6:	4806      	ldr	r0, [pc, #24]	; (80016d0 <_ZN8touchgfx22STM32H7Instrumentation4initEv+0x80>)
}
 80016b8:	b003      	add	sp, #12
 80016ba:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    HAL_TIM_Base_Start(&tim);
 80016be:	f007 bfc1 	b.w	8009644 <HAL_TIM_Base_Start>
        uwTimclock = 2 * HAL_RCC_GetPCLK1Freq();
 80016c2:	f007 f93d 	bl	8008940 <HAL_RCC_GetPCLK1Freq>
 80016c6:	0044      	lsls	r4, r0, #1
 80016c8:	e7ed      	b.n	80016a6 <_ZN8touchgfx22STM32H7Instrumentation4initEv+0x56>
 80016ca:	bf00      	nop
 80016cc:	58024400 	.word	0x58024400
 80016d0:	24000394 	.word	0x24000394
 80016d4:	08022a20 	.word	0x08022a20

080016d8 <_ZN8touchgfx22STM32H7InstrumentationD0Ev>:
 80016d8:	b510      	push	{r4, lr}
 80016da:	4604      	mov	r4, r0
 80016dc:	2110      	movs	r1, #16
 80016de:	f01e fa86 	bl	801fbee <_ZdlPvj>
 80016e2:	4620      	mov	r0, r4
 80016e4:	bd10      	pop	{r4, pc}

080016e6 <_ZN8touchgfx22STM32H7Instrumentation12setMCUActiveEb>:

void STM32H7Instrumentation::setMCUActive(bool active)
{
 80016e6:	b538      	push	{r3, r4, r5, lr}
    if (active) //idle task sched out
    {
        uint32_t current_cc = cc_in;
        cc_consumed += getCPUCycles() - current_cc;
 80016e8:	6803      	ldr	r3, [r0, #0]
{
 80016ea:	4604      	mov	r4, r0
        cc_consumed += getCPUCycles() - current_cc;
 80016ec:	691a      	ldr	r2, [r3, #16]
    if (active) //idle task sched out
 80016ee:	b131      	cbz	r1, 80016fe <_ZN8touchgfx22STM32H7Instrumentation12setMCUActiveEb+0x18>
        uint32_t current_cc = cc_in;
 80016f0:	6885      	ldr	r5, [r0, #8]
        cc_consumed += getCPUCycles() - current_cc;
 80016f2:	4790      	blx	r2
 80016f4:	6863      	ldr	r3, [r4, #4]
 80016f6:	1b5b      	subs	r3, r3, r5
 80016f8:	4418      	add	r0, r3
 80016fa:	6060      	str	r0, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
 80016fc:	bd38      	pop	{r3, r4, r5, pc}
        cc_in = getCPUCycles();
 80016fe:	4790      	blx	r2
 8001700:	60a0      	str	r0, [r4, #8]
}
 8001702:	e7fb      	b.n	80016fc <_ZN8touchgfx22STM32H7Instrumentation12setMCUActiveEb+0x16>

08001704 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8001704:	4770      	bx	lr

08001706 <_ZN20STM32TouchControllerD0Ev>:
 8001706:	b510      	push	{r4, lr}
 8001708:	4604      	mov	r4, r0
 800170a:	2104      	movs	r1, #4
 800170c:	f01e fa6f 	bl	801fbee <_ZdlPvj>
 8001710:	4620      	mov	r0, r4
 8001712:	bd10      	pop	{r4, pc}

08001714 <_ZN20STM32TouchController4initEv>:
static bool bsp_ts_initialized = false;
TS_Init_t* hTS;
TS_State_t  TS_State = {0};

void STM32TouchController::init()
{
 8001714:	b508      	push	{r3, lr}
    /**
     * Initialize touch controller and driver
     *
     */
    hTS->Width = 800;
 8001716:	4b0e      	ldr	r3, [pc, #56]	; (8001750 <_ZN20STM32TouchController4initEv+0x3c>)
    hTS->Height = 480;
 8001718:	f44f 7248 	mov.w	r2, #800	; 0x320
    hTS->Orientation = TS_SWAP_XY | TS_SWAP_Y;
    hTS->Accuracy = 0;
 800171c:	2000      	movs	r0, #0
    hTS->Width = 800;
 800171e:	6819      	ldr	r1, [r3, #0]
    hTS->Height = 480;
 8001720:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 8001724:	e9c1 2300 	strd	r2, r3, [r1]
    hTS->Accuracy = 0;
 8001728:	230c      	movs	r3, #12
 800172a:	e9c1 3002 	strd	r3, r0, [r1, #8]

    if (BSP_TS_Init(0, hTS) == BSP_ERROR_NONE)
 800172e:	f004 f9b5 	bl	8005a9c <BSP_TS_Init>
 8001732:	4b08      	ldr	r3, [pc, #32]	; (8001754 <_ZN20STM32TouchController4initEv+0x40>)
 8001734:	b910      	cbnz	r0, 800173c <_ZN20STM32TouchController4initEv+0x28>
    {
        bsp_ts_initialized = true;
 8001736:	2201      	movs	r2, #1
 8001738:	701a      	strb	r2, [r3, #0]
    }

    assert(bsp_ts_initialized);
}
 800173a:	bd08      	pop	{r3, pc}
    assert(bsp_ts_initialized);
 800173c:	781b      	ldrb	r3, [r3, #0]
 800173e:	2b00      	cmp	r3, #0
 8001740:	d1fb      	bne.n	800173a <_ZN20STM32TouchController4initEv+0x26>
 8001742:	4b05      	ldr	r3, [pc, #20]	; (8001758 <_ZN20STM32TouchController4initEv+0x44>)
 8001744:	212e      	movs	r1, #46	; 0x2e
 8001746:	4a05      	ldr	r2, [pc, #20]	; (800175c <_ZN20STM32TouchController4initEv+0x48>)
 8001748:	4805      	ldr	r0, [pc, #20]	; (8001760 <_ZN20STM32TouchController4initEv+0x4c>)
 800174a:	f01e fc49 	bl	801ffe0 <__assert_func>
 800174e:	bf00      	nop
 8001750:	240003f0 	.word	0x240003f0
 8001754:	240003ec 	.word	0x240003ec
 8001758:	080212ec 	.word	0x080212ec
 800175c:	080212ff 	.word	0x080212ff
 8001760:	08021329 	.word	0x08021329

08001764 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 8001764:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    if (bsp_ts_initialized)
 8001766:	4b0a      	ldr	r3, [pc, #40]	; (8001790 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2c>)
{
 8001768:	460f      	mov	r7, r1
 800176a:	4616      	mov	r6, r2
    if (bsp_ts_initialized)
 800176c:	781d      	ldrb	r5, [r3, #0]
 800176e:	b915      	cbnz	r5, 8001776 <_ZN20STM32TouchController11sampleTouchERlS0_+0x12>
            x = TS_State.TouchX;
            y = TS_State.TouchY;
            return true;
        }
    }
    return false;
 8001770:	2500      	movs	r5, #0
}
 8001772:	4628      	mov	r0, r5
 8001774:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        BSP_TS_GetState(0, &TS_State);
 8001776:	4c07      	ldr	r4, [pc, #28]	; (8001794 <_ZN20STM32TouchController11sampleTouchERlS0_+0x30>)
 8001778:	2000      	movs	r0, #0
 800177a:	4621      	mov	r1, r4
 800177c:	f004 fa22 	bl	8005bc4 <BSP_TS_GetState>
        if (TS_State.TouchDetected)
 8001780:	6823      	ldr	r3, [r4, #0]
 8001782:	2b00      	cmp	r3, #0
 8001784:	d0f4      	beq.n	8001770 <_ZN20STM32TouchController11sampleTouchERlS0_+0xc>
            x = TS_State.TouchX;
 8001786:	6863      	ldr	r3, [r4, #4]
 8001788:	603b      	str	r3, [r7, #0]
            y = TS_State.TouchY;
 800178a:	68a3      	ldr	r3, [r4, #8]
 800178c:	6033      	str	r3, [r6, #0]
            return true;
 800178e:	e7f0      	b.n	8001772 <_ZN20STM32TouchController11sampleTouchERlS0_+0xe>
 8001790:	240003ec 	.word	0x240003ec
 8001794:	240003e0 	.word	0x240003e0

08001798 <_ZN8touchgfx4GPIO4initEv>:
 * Perform configuration of IO pins.
 */
void GPIO::init()
{

}
 8001798:	4770      	bx	lr

0800179a <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{

}
 800179a:	4770      	bx	lr

0800179c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
 800179c:	4770      	bx	lr

0800179e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
 800179e:	4770      	bx	lr

080017a0 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 80017a0:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 80017a2:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 80017a6:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 80017aa:	4770      	bx	lr

080017ac <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
    {
        return false;
    }
 80017ac:	2000      	movs	r0, #0
 80017ae:	4770      	bx	lr

080017b0 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     *
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 80017b0:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 80017b2:	3900      	subs	r1, #0
 80017b4:	4b02      	ldr	r3, [pc, #8]	; (80017c0 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
 80017b6:	bf18      	it	ne
 80017b8:	2101      	movne	r1, #1
 80017ba:	7019      	strb	r1, [r3, #0]
    }
 80017bc:	4770      	bx	lr
 80017be:	bf00      	nop
 80017c0:	2400e0b3 	.word	0x2400e0b3

080017c4 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 80017c4:	2000      	movs	r0, #0
 80017c6:	4770      	bx	lr

080017c8 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 80017c8:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80017ca:	b10b      	cbz	r3, 80017d0 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 80017cc:	4608      	mov	r0, r1
 80017ce:	4718      	bx	r3
        }
    }
 80017d0:	4770      	bx	lr

080017d2 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 80017d2:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80017d6:	4770      	bx	lr

080017d8 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 80017d8:	6840      	ldr	r0, [r0, #4]
 80017da:	6803      	ldr	r3, [r0, #0]
 80017dc:	699b      	ldr	r3, [r3, #24]
 80017de:	4718      	bx	r3

080017e0 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // and implemented needed functionality here.

    /* USER CODE BEGIN getTFTFrameBuffer */
    return currFbBase;
    /* USER CODE END getTFTFrameBuffer */
}
 80017e0:	4b01      	ldr	r3, [pc, #4]	; (80017e8 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv+0x8>)
 80017e2:	6818      	ldr	r0, [r3, #0]
 80017e4:	4770      	bx	lr
 80017e6:	bf00      	nop
 80017e8:	240003f4 	.word	0x240003f4

080017ec <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 80017ec:	4770      	bx	lr

080017ee <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    /* USER CODE BEGIN flushFrameBuffer step 1 */
    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80017ee:	f000 be3d 	b.w	800246c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

080017f2 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    /* USER CODE BEGIN configureInterrupts */
    TouchGFXGeneratedHAL::configureInterrupts();
 80017f2:	f000 bdeb 	b.w	80023cc <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080017f6 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    /* USER CODE BEGIN enableInterrupts */
    TouchGFXGeneratedHAL::enableInterrupts();
 80017f6:	f000 be53 	b.w	80024a0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080017fa <_ZN11TouchGFXHAL17disableInterruptsEv>:
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    /* USER CODE BEGIN disableInterrupts */
    TouchGFXGeneratedHAL::disableInterrupts();
 80017fa:	f000 be45 	b.w	8002488 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

080017fe <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80017fe:	f000 bded 	b.w	80023dc <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08001802 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8001802:	b510      	push	{r4, lr}
 8001804:	4604      	mov	r4, r0
        swapFrameBuffers();
 8001806:	f00c f86d 	bl	800d8e4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 800180a:	6823      	ldr	r3, [r4, #0]
 800180c:	4620      	mov	r0, r4
 800180e:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 8001812:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8001816:	4718      	bx	r3

08001818 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8001818:	f00b b9fc 	b.w	800cc14 <_ZN8touchgfx3HAL16flushFrameBufferEv>

0800181c <_ZN11TouchGFXHALD0Ev>:
 800181c:	b510      	push	{r4, lr}
 800181e:	4604      	mov	r4, r0
 8001820:	217c      	movs	r1, #124	; 0x7c
 8001822:	f01e f9e4 	bl	801fbee <_ZdlPvj>
 8001826:	4620      	mov	r0, r4
 8001828:	bd10      	pop	{r4, pc}
	...

0800182c <_ZN11TouchGFXHAL10beginFrameEv>:
    HAL::setFrameBufferStartAddresses(frameBuffer, doubleBuffer, animationStorage);
}

bool TouchGFXHAL::beginFrame()
{
    refreshRequested = false;
 800182c:	4b02      	ldr	r3, [pc, #8]	; (8001838 <_ZN11TouchGFXHAL10beginFrameEv+0xc>)
 800182e:	2200      	movs	r2, #0
 8001830:	701a      	strb	r2, [r3, #0]
    return HAL::beginFrame();
 8001832:	f00b ba2b 	b.w	800cc8c <_ZN8touchgfx3HAL10beginFrameEv>
 8001836:	bf00      	nop
 8001838:	2400000c 	.word	0x2400000c

0800183c <_ZN11TouchGFXHAL8endFrameEv>:
}

void TouchGFXHAL::endFrame()
{
 800183c:	b510      	push	{r4, lr}
 800183e:	4604      	mov	r4, r0
    HAL::endFrame();
 8001840:	f00b fa30 	bl	800cca4 <_ZN8touchgfx3HAL8endFrameEv>
    if (frameBufferUpdatedThisFrame)
 8001844:	f894 304b 	ldrb.w	r3, [r4, #75]	; 0x4b
 8001848:	b113      	cbz	r3, 8001850 <_ZN11TouchGFXHAL8endFrameEv+0x14>
    {
        refreshRequested = true;
 800184a:	4b02      	ldr	r3, [pc, #8]	; (8001854 <_ZN11TouchGFXHAL8endFrameEv+0x18>)
 800184c:	2201      	movs	r2, #1
 800184e:	701a      	strb	r2, [r3, #0]
    }
}
 8001850:	bd10      	pop	{r4, pc}
 8001852:	bf00      	nop
 8001854:	2400000c 	.word	0x2400000c

08001858 <_ZN11TouchGFXHAL10initializeEv>:
{
 8001858:	b538      	push	{r3, r4, r5, lr}
 800185a:	4604      	mov	r4, r0
    GPIO::init();
 800185c:	f7ff ff9c 	bl	8001798 <_ZN8touchgfx4GPIO4initEv>
    mcuInstr.init();
 8001860:	4d07      	ldr	r5, [pc, #28]	; (8001880 <_ZN11TouchGFXHAL10initializeEv+0x28>)
    TouchGFXGeneratedHAL::initialize();
 8001862:	4620      	mov	r0, r4
 8001864:	f000 fdbb 	bl	80023de <_ZN20TouchGFXGeneratedHAL10initializeEv>
        lockDMAToPorch = enableLock;
 8001868:	2300      	movs	r3, #0
    mcuInstr.init();
 800186a:	4628      	mov	r0, r5
 800186c:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
 8001870:	f7ff feee 	bl	8001650 <_ZN8touchgfx22STM32H7Instrumentation4initEv>
        updateMCULoad = enabled;
 8001874:	2301      	movs	r3, #1
        mcuInstrumentation = mcuInstr;
 8001876:	6125      	str	r5, [r4, #16]
        updateMCULoad = enabled;
 8001878:	f884 306c 	strb.w	r3, [r4, #108]	; 0x6c
}
 800187c:	bd38      	pop	{r3, r4, r5, pc}
 800187e:	bf00      	nop
 8001880:	240003fc 	.word	0x240003fc

08001884 <_ZN11TouchGFXHAL9taskEntryEv>:
    enableLCDControllerInterrupt();
 8001884:	6803      	ldr	r3, [r0, #0]
{
 8001886:	4604      	mov	r4, r0
 8001888:	b507      	push	{r0, r1, r2, lr}
    enableLCDControllerInterrupt();
 800188a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800188e:	4798      	blx	r3
    enableInterrupts();
 8001890:	6823      	ldr	r3, [r4, #0]
 8001892:	4620      	mov	r0, r4
 8001894:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8001896:	4798      	blx	r3
    OSWrappers::waitForVSync();
 8001898:	f000 faa6 	bl	8001de8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 800189c:	6823      	ldr	r3, [r4, #0]
 800189e:	4620      	mov	r0, r4
 80018a0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80018a2:	4798      	blx	r3
    HAL_DSI_ShortWrite(&hdsi, LCD_OTM8009A_ID, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_DISPON, 0x00);
 80018a4:	2100      	movs	r1, #0
 80018a6:	2329      	movs	r3, #41	; 0x29
 80018a8:	2215      	movs	r2, #21
 80018aa:	4805      	ldr	r0, [pc, #20]	; (80018c0 <_ZN11TouchGFXHAL9taskEntryEv+0x3c>)
 80018ac:	9100      	str	r1, [sp, #0]
 80018ae:	f004 ffd0 	bl	8006852 <HAL_DSI_ShortWrite>
        OSWrappers::waitForVSync();
 80018b2:	f000 fa99 	bl	8001de8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 80018b6:	6823      	ldr	r3, [r4, #0]
 80018b8:	4620      	mov	r0, r4
 80018ba:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80018bc:	4798      	blx	r3
    for (;;)
 80018be:	e7f8      	b.n	80018b2 <_ZN11TouchGFXHAL9taskEntryEv+0x2e>
 80018c0:	240001f8 	.word	0x240001f8

080018c4 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 80018c4:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 80018c8:	b11b      	cbz	r3, 80018d2 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 80018ca:	6840      	ldr	r0, [r0, #4]
 80018cc:	6803      	ldr	r3, [r0, #0]
 80018ce:	681b      	ldr	r3, [r3, #0]
 80018d0:	4718      	bx	r3
    }
 80018d2:	4618      	mov	r0, r3
 80018d4:	4770      	bx	lr
	...

080018d8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
    {
        if (requestedOrientation != nativeDisplayOrientation)
 80018d8:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
        {
            if (DISPLAY_ROTATION == rotate0)
 80018dc:	4b0d      	ldr	r3, [pc, #52]	; (8001914 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
    virtual void performDisplayOrientationChange()
 80018de:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 80018e0:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
            if (DISPLAY_ROTATION == rotate0)
 80018e4:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 80018e6:	428c      	cmp	r4, r1
 80018e8:	d009      	beq.n	80018fe <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 80018ea:	b93a      	cbnz	r2, 80018fc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
 80018ec:	490a      	ldr	r1, [pc, #40]	; (8001918 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80018ee:	4a0b      	ldr	r2, [pc, #44]	; (800191c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 80018f0:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80018f2:	8814      	ldrh	r4, [r2, #0]
                DISPLAY_WIDTH = tmp;
 80018f4:	8010      	strh	r0, [r2, #0]
                DISPLAY_ROTATION = rotate90;
 80018f6:	2201      	movs	r2, #1
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80018f8:	800c      	strh	r4, [r1, #0]
        else if (DISPLAY_ROTATION != rotate0)
        {
            const uint16_t tmp = DISPLAY_HEIGHT;
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
 80018fa:	701a      	strb	r2, [r3, #0]
        }
    }
 80018fc:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 80018fe:	2a00      	cmp	r2, #0
 8001900:	d0fc      	beq.n	80018fc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001902:	4a06      	ldr	r2, [pc, #24]	; (800191c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001904:	4904      	ldr	r1, [pc, #16]	; (8001918 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001906:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001908:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800190a:	800c      	strh	r4, [r1, #0]
            DISPLAY_WIDTH = tmp;
 800190c:	8010      	strh	r0, [r2, #0]
            DISPLAY_ROTATION = rotate0;
 800190e:	2200      	movs	r2, #0
 8001910:	e7f3      	b.n	80018fa <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8001912:	bf00      	nop
 8001914:	2400e0ac 	.word	0x2400e0ac
 8001918:	2400e0aa 	.word	0x2400e0aa
 800191c:	2400e0a8 	.word	0x2400e0a8

08001920 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8001920:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8001922:	4b09      	ldr	r3, [pc, #36]	; (8001948 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8001924:	881b      	ldrh	r3, [r3, #0]
 8001926:	428b      	cmp	r3, r1
 8001928:	d803      	bhi.n	8001932 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 800192a:	4b08      	ldr	r3, [pc, #32]	; (800194c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 800192c:	881b      	ldrh	r3, [r3, #0]
 800192e:	4293      	cmp	r3, r2
 8001930:	d905      	bls.n	800193e <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8001932:	4b07      	ldr	r3, [pc, #28]	; (8001950 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8001934:	219e      	movs	r1, #158	; 0x9e
 8001936:	4a07      	ldr	r2, [pc, #28]	; (8001954 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8001938:	4807      	ldr	r0, [pc, #28]	; (8001958 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 800193a:	f01e fb51 	bl	801ffe0 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 800193e:	4b07      	ldr	r3, [pc, #28]	; (800195c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8001940:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8001942:	4b07      	ldr	r3, [pc, #28]	; (8001960 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8001944:	801a      	strh	r2, [r3, #0]
    }
 8001946:	bd08      	pop	{r3, pc}
 8001948:	2400e0a8 	.word	0x2400e0a8
 800194c:	2400e0aa 	.word	0x2400e0aa
 8001950:	0802138c 	.word	0x0802138c
 8001954:	080213ef 	.word	0x080213ef
 8001958:	08021432 	.word	0x08021432
 800195c:	2400e0ae 	.word	0x2400e0ae
 8001960:	2400e0b0 	.word	0x2400e0b0

08001964 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_>:
{
 8001964:	b570      	push	{r4, r5, r6, lr}
 8001966:	460d      	mov	r5, r1
 8001968:	4619      	mov	r1, r3
    currFbBase = (uint16_t*)frameBuffer;
 800196a:	4b0b      	ldr	r3, [pc, #44]	; (8001998 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x34>)
 800196c:	601d      	str	r5, [r3, #0]
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800196e:	b935      	cbnz	r5, 800197e <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x1a>
 8001970:	4b0a      	ldr	r3, [pc, #40]	; (800199c <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x38>)
 8001972:	f240 21bb 	movw	r1, #699	; 0x2bb
 8001976:	4a0a      	ldr	r2, [pc, #40]	; (80019a0 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x3c>)
 8001978:	480a      	ldr	r0, [pc, #40]	; (80019a4 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x40>)
 800197a:	f01e fb31 	bl	801ffe0 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800197e:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8001982:	3a00      	subs	r2, #0
 8001984:	4b08      	ldr	r3, [pc, #32]	; (80019a8 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x44>)
 8001986:	bf18      	it	ne
 8001988:	2201      	movne	r2, #1
 800198a:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 800198c:	6803      	ldr	r3, [r0, #0]
}
 800198e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001992:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8001996:	4718      	bx	r3
 8001998:	240003f4 	.word	0x240003f4
 800199c:	08021485 	.word	0x08021485
 80019a0:	080214bd 	.word	0x080214bd
 80019a4:	08021432 	.word	0x08021432
 80019a8:	2400e0b2 	.word	0x2400e0b2

080019ac <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
          lastRenderMethod(HARDWARE)
 80019ac:	e9c0 1201 	strd	r1, r2, [r0, #4]
 80019b0:	60c3      	str	r3, [r0, #12]
 80019b2:	f44f 7280 	mov.w	r2, #256	; 0x100
 80019b6:	2300      	movs	r3, #0
 80019b8:	e9c0 2312 	strd	r2, r3, [r0, #72]	; 0x48
 80019bc:	4a1d      	ldr	r2, [pc, #116]	; (8001a34 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x88>)
              downX(0),
              downY(0),
              tickCount(0),
              velocityX(0),
              velocityY(0),
              inProgress(false)
 80019be:	8503      	strh	r3, [r0, #40]	; 0x28
 80019c0:	f880 302a 	strb.w	r3, [r0, #42]	; 0x2a
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 80019c4:	62c3      	str	r3, [r0, #44]	; 0x2c
 80019c6:	8603      	strh	r3, [r0, #48]	; 0x30
 80019c8:	6603      	str	r3, [r0, #96]	; 0x60
 80019ca:	f880 306c 	strb.w	r3, [r0, #108]	; 0x6c
 80019ce:	6703      	str	r3, [r0, #112]	; 0x70
 80019d0:	e9c0 2319 	strd	r2, r3, [r0, #100]	; 0x64
 80019d4:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80019d8:	6742      	str	r2, [r0, #116]	; 0x74
 80019da:	2201      	movs	r2, #1
TouchGFXHAL::TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height)
 80019dc:	b570      	push	{r4, r5, r6, lr}
 80019de:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80019e2:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 80019e6:	f8bd 6014 	ldrh.w	r6, [sp, #20]
              inProgress(false)
 80019ea:	e9c0 3306 	strd	r3, r3, [r0, #24]
 80019ee:	e9c0 3308 	strd	r3, r3, [r0, #32]
 80019f2:	e9c0 330e 	strd	r3, r3, [r0, #56]	; 0x38
 80019f6:	e9c0 3310 	strd	r3, r3, [r0, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 80019fa:	e9c0 3314 	strd	r3, r3, [r0, #80]	; 0x50
 80019fe:	e9c0 3316 	strd	r3, r3, [r0, #88]	; 0x58
 8001a02:	f880 2078 	strb.w	r2, [r0, #120]	; 0x78
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8001a06:	42b5      	cmp	r5, r6
        instance = this;
 8001a08:	4a0b      	ldr	r2, [pc, #44]	; (8001a38 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x8c>)
 8001a0a:	6010      	str	r0, [r2, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001a0c:	4a0b      	ldr	r2, [pc, #44]	; (8001a3c <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x90>)
 8001a0e:	8015      	strh	r5, [r2, #0]
 8001a10:	4a0b      	ldr	r2, [pc, #44]	; (8001a40 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x94>)
 8001a12:	8015      	strh	r5, [r2, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8001a14:	bf28      	it	cs
 8001a16:	2500      	movcs	r5, #0
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001a18:	4a0a      	ldr	r2, [pc, #40]	; (8001a44 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x98>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8001a1a:	bf38      	it	cc
 8001a1c:	2501      	movcc	r5, #1
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001a1e:	8016      	strh	r6, [r2, #0]
 8001a20:	4a09      	ldr	r2, [pc, #36]	; (8001a48 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x9c>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8001a22:	f880 5034 	strb.w	r5, [r0, #52]	; 0x34
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001a26:	8016      	strh	r6, [r2, #0]
        DISPLAY_ROTATION = rotate0;
 8001a28:	4a08      	ldr	r2, [pc, #32]	; (8001a4c <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0xa0>)
 8001a2a:	7013      	strb	r3, [r2, #0]
                           height)
 8001a2c:	4b08      	ldr	r3, [pc, #32]	; (8001a50 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0xa4>)
 8001a2e:	6003      	str	r3, [r0, #0]
}
 8001a30:	bd70      	pop	{r4, r5, r6, pc}
 8001a32:	bf00      	nop
 8001a34:	01000001 	.word	0x01000001
 8001a38:	2400e0b4 	.word	0x2400e0b4
 8001a3c:	2400e0a8 	.word	0x2400e0a8
 8001a40:	2400e0ae 	.word	0x2400e0ae
 8001a44:	2400e0aa 	.word	0x2400e0aa
 8001a48:	2400e0b0 	.word	0x2400e0b0
 8001a4c:	2400e0ac 	.word	0x2400e0ac
 8001a50:	08021514 	.word	0x08021514

08001a54 <DSI_IO_Write>:
      */
    int32_t DSI_IO_Write(uint16_t ChannelNbr, uint16_t Reg, uint8_t* pData, uint16_t Size)
    {
        int32_t ret = BSP_ERROR_NONE;

        if (Size <= 1U)
 8001a54:	2b01      	cmp	r3, #1
    {
 8001a56:	b513      	push	{r0, r1, r4, lr}
        if (Size <= 1U)
 8001a58:	d80e      	bhi.n	8001a78 <DSI_IO_Write+0x24>
        {
            if (HAL_DSI_ShortWrite(&hdsi, ChannelNbr, DSI_DCS_SHORT_PKT_WRITE_P1, Reg, (uint32_t)pData[Size]) != HAL_OK)
 8001a5a:	5cd3      	ldrb	r3, [r2, r3]
 8001a5c:	2215      	movs	r2, #21
 8001a5e:	9300      	str	r3, [sp, #0]
 8001a60:	460b      	mov	r3, r1
 8001a62:	4601      	mov	r1, r0
 8001a64:	4808      	ldr	r0, [pc, #32]	; (8001a88 <DSI_IO_Write+0x34>)
 8001a66:	f004 fef4 	bl	8006852 <HAL_DSI_ShortWrite>
 8001a6a:	b118      	cbz	r0, 8001a74 <DSI_IO_Write+0x20>
            {
                ret = BSP_ERROR_BUS_FAILURE;
 8001a6c:	f06f 0007 	mvn.w	r0, #7
                ret = BSP_ERROR_BUS_FAILURE;
            }
        }

        return ret;
    }
 8001a70:	b002      	add	sp, #8
 8001a72:	bd10      	pop	{r4, pc}
        int32_t ret = BSP_ERROR_NONE;
 8001a74:	2000      	movs	r0, #0
 8001a76:	e7fb      	b.n	8001a70 <DSI_IO_Write+0x1c>
            if (HAL_DSI_LongWrite(&hdsi, ChannelNbr, DSI_DCS_LONG_PKT_WRITE, Size, (uint32_t)Reg, pData) != HAL_OK)
 8001a78:	e9cd 1200 	strd	r1, r2, [sp]
 8001a7c:	4601      	mov	r1, r0
 8001a7e:	2239      	movs	r2, #57	; 0x39
 8001a80:	4801      	ldr	r0, [pc, #4]	; (8001a88 <DSI_IO_Write+0x34>)
 8001a82:	f004 fef7 	bl	8006874 <HAL_DSI_LongWrite>
 8001a86:	e7f0      	b.n	8001a6a <DSI_IO_Write+0x16>
 8001a88:	240001f8 	.word	0x240001f8

08001a8c <DSI_IO_Read>:
      * @param  pData pointer to a buffer to store the payload of a read back operation.
      * @param  Size  Data size to be read (in byte).
      * @retval BSP status
      */
    int32_t DSI_IO_Read(uint16_t ChannelNbr, uint16_t Reg, uint8_t* pData, uint16_t Size)
    {
 8001a8c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
        int32_t ret = BSP_ERROR_NONE;

        if (HAL_DSI_Read(&hdsi, ChannelNbr, pData, Size, DSI_DCS_SHORT_PKT_READ, Reg, pData) != HAL_OK)
 8001a8e:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8001a92:	2106      	movs	r1, #6
 8001a94:	9100      	str	r1, [sp, #0]
 8001a96:	4601      	mov	r1, r0
 8001a98:	4805      	ldr	r0, [pc, #20]	; (8001ab0 <DSI_IO_Read+0x24>)
 8001a9a:	f004 ff4c 	bl	8006936 <HAL_DSI_Read>
        {
            ret = BSP_ERROR_BUS_FAILURE;
 8001a9e:	2800      	cmp	r0, #0
        }

        return ret;
    }
 8001aa0:	bf14      	ite	ne
 8001aa2:	f06f 0007 	mvnne.w	r0, #7
 8001aa6:	2000      	moveq	r0, #0
 8001aa8:	b005      	add	sp, #20
 8001aaa:	f85d fb04 	ldr.w	pc, [sp], #4
 8001aae:	bf00      	nop
 8001ab0:	240001f8 	.word	0x240001f8

08001ab4 <LCD_ReqTear>:

    /**
     * Request TE at scanline.
     */
    void LCD_ReqTear(void)
    {
 8001ab4:	b530      	push	{r4, r5, lr}
 8001ab6:	b085      	sub	sp, #20
        uint16_t scanline = 533;

        ScanLineParams[0] = scanline >> 8;
        ScanLineParams[1] = scanline & 0x00FF;

        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8001ab8:	4c0c      	ldr	r4, [pc, #48]	; (8001aec <LCD_ReqTear+0x38>)
        ScanLineParams[0] = scanline >> 8;
 8001aba:	2302      	movs	r3, #2
        ScanLineParams[1] = scanline & 0x00FF;
 8001abc:	2515      	movs	r5, #21
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8001abe:	aa03      	add	r2, sp, #12
 8001ac0:	2100      	movs	r1, #0
 8001ac2:	4620      	mov	r0, r4
        ScanLineParams[0] = scanline >> 8;
 8001ac4:	f88d 300c 	strb.w	r3, [sp, #12]
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8001ac8:	9201      	str	r2, [sp, #4]
 8001aca:	2244      	movs	r2, #68	; 0x44
        ScanLineParams[1] = scanline & 0x00FF;
 8001acc:	f88d 500d 	strb.w	r5, [sp, #13]
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8001ad0:	9200      	str	r2, [sp, #0]
 8001ad2:	2239      	movs	r2, #57	; 0x39
 8001ad4:	f004 fece 	bl	8006874 <HAL_DSI_LongWrite>
        HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_TEEON, 0x00);
 8001ad8:	2100      	movs	r1, #0
 8001ada:	2335      	movs	r3, #53	; 0x35
 8001adc:	462a      	mov	r2, r5
 8001ade:	4620      	mov	r0, r4
 8001ae0:	9100      	str	r1, [sp, #0]
 8001ae2:	f004 feb6 	bl	8006852 <HAL_DSI_ShortWrite>
    }
 8001ae6:	b005      	add	sp, #20
 8001ae8:	bd30      	pop	{r4, r5, pc}
 8001aea:	bf00      	nop
 8001aec:	240001f8 	.word	0x240001f8

08001af0 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
{
 8001af0:	b508      	push	{r3, lr}
    LCD_ReqTear();
 8001af2:	f7ff ffdf 	bl	8001ab4 <LCD_ReqTear>
    __HAL_DSI_CLEAR_FLAG(&hdsi, DSI_IT_ER);
 8001af6:	4b0c      	ldr	r3, [pc, #48]	; (8001b28 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv+0x38>)
 8001af8:	2202      	movs	r2, #2
 8001afa:	681b      	ldr	r3, [r3, #0]
 8001afc:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
    __HAL_DSI_CLEAR_FLAG(&hdsi, DSI_IT_TE);
 8001b00:	2201      	movs	r2, #1
 8001b02:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
    __HAL_DSI_ENABLE_IT(&hdsi, DSI_IT_TE);
 8001b06:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 8001b0a:	f042 0201 	orr.w	r2, r2, #1
 8001b0e:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408
    __HAL_DSI_ENABLE_IT(&hdsi, DSI_IT_ER);
 8001b12:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 8001b16:	f042 0202 	orr.w	r2, r2, #2
 8001b1a:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408
    LTDC->IER = 3; /* Enable line and FIFO underrun interrupts */
 8001b1e:	2203      	movs	r2, #3
 8001b20:	4b02      	ldr	r3, [pc, #8]	; (8001b2c <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv+0x3c>)
 8001b22:	635a      	str	r2, [r3, #52]	; 0x34
}
 8001b24:	bd08      	pop	{r3, pc}
 8001b26:	bf00      	nop
 8001b28:	240001f8 	.word	0x240001f8
 8001b2c:	50001000 	.word	0x50001000

08001b30 <LCD_ReqEnable>:
    void LCD_ReqEnable(void)
    {
        static bool firstRefreshRequested = false;

        // Enable DSI interface once the very first framebuffer is ready for display
        if (!firstRefreshRequested)
 8001b30:	4b07      	ldr	r3, [pc, #28]	; (8001b50 <LCD_ReqEnable+0x20>)
    {
 8001b32:	b507      	push	{r0, r1, r2, lr}
        if (!firstRefreshRequested)
 8001b34:	7819      	ldrb	r1, [r3, #0]
 8001b36:	b939      	cbnz	r1, 8001b48 <LCD_ReqEnable+0x18>
        {
            firstRefreshRequested = true;
 8001b38:	2201      	movs	r2, #1

            /* Send Display on DCS Command to display */
            HAL_DSI_ShortWrite(&(hdsi),
 8001b3a:	4806      	ldr	r0, [pc, #24]	; (8001b54 <LCD_ReqEnable+0x24>)
            firstRefreshRequested = true;
 8001b3c:	701a      	strb	r2, [r3, #0]
            HAL_DSI_ShortWrite(&(hdsi),
 8001b3e:	2329      	movs	r3, #41	; 0x29
 8001b40:	2215      	movs	r2, #21
 8001b42:	9100      	str	r1, [sp, #0]
 8001b44:	f004 fe85 	bl	8006852 <HAL_DSI_ShortWrite>
                               0,
                               DSI_DCS_SHORT_PKT_WRITE_P1,
                               OTM8009A_CMD_DISPON,
                               0x00);
        }
    }
 8001b48:	b003      	add	sp, #12
 8001b4a:	f85d fb04 	ldr.w	pc, [sp], #4
 8001b4e:	bf00      	nop
 8001b50:	2400040c 	.word	0x2400040c
 8001b54:	240001f8 	.word	0x240001f8

08001b58 <LCD_SetUpdateRegionLeft>:
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pCols[idx]);
    }

    void LCD_SetUpdateRegionLeft()
    {
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pColLeft);
 8001b58:	4b06      	ldr	r3, [pc, #24]	; (8001b74 <LCD_SetUpdateRegionLeft+0x1c>)
    {
 8001b5a:	b507      	push	{r0, r1, r2, lr}
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pColLeft);
 8001b5c:	9301      	str	r3, [sp, #4]
 8001b5e:	232a      	movs	r3, #42	; 0x2a
 8001b60:	2239      	movs	r2, #57	; 0x39
 8001b62:	2100      	movs	r1, #0
 8001b64:	9300      	str	r3, [sp, #0]
 8001b66:	2304      	movs	r3, #4
 8001b68:	4803      	ldr	r0, [pc, #12]	; (8001b78 <LCD_SetUpdateRegionLeft+0x20>)
 8001b6a:	f004 fe83 	bl	8006874 <HAL_DSI_LongWrite>
    }
 8001b6e:	b003      	add	sp, #12
 8001b70:	f85d fb04 	ldr.w	pc, [sp], #4
 8001b74:	24000004 	.word	0x24000004
 8001b78:	240001f8 	.word	0x240001f8

08001b7c <LCD_SetUpdateRegionRight>:

    void LCD_SetUpdateRegionRight()
    {
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pColRight);
 8001b7c:	4b06      	ldr	r3, [pc, #24]	; (8001b98 <LCD_SetUpdateRegionRight+0x1c>)
    {
 8001b7e:	b507      	push	{r0, r1, r2, lr}
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pColRight);
 8001b80:	9301      	str	r3, [sp, #4]
 8001b82:	232a      	movs	r3, #42	; 0x2a
 8001b84:	2239      	movs	r2, #57	; 0x39
 8001b86:	2100      	movs	r1, #0
 8001b88:	9300      	str	r3, [sp, #0]
 8001b8a:	2304      	movs	r3, #4
 8001b8c:	4803      	ldr	r0, [pc, #12]	; (8001b9c <LCD_SetUpdateRegionRight+0x20>)
 8001b8e:	f004 fe71 	bl	8006874 <HAL_DSI_LongWrite>
    }
 8001b92:	b003      	add	sp, #12
 8001b94:	f85d fb04 	ldr.w	pc, [sp], #4
 8001b98:	24000008 	.word	0x24000008
 8001b9c:	240001f8 	.word	0x240001f8

08001ba0 <HAL_DSI_TearingEffectCallback>:
                           0, DSI_DCS_SHORT_PKT_WRITE_P1,
                           OTM8009A_CMD_WRDISBV, (uint16_t)(value * 255) / 100);
    }

    void HAL_DSI_TearingEffectCallback(DSI_HandleTypeDef* hdsi)
    {
 8001ba0:	b538      	push	{r3, r4, r5, lr}
        return instance;
 8001ba2:	4d14      	ldr	r5, [pc, #80]	; (8001bf4 <HAL_DSI_TearingEffectCallback+0x54>)
 8001ba4:	4604      	mov	r4, r0
        GPIO::set(GPIO::VSYNC_FREQ);
 8001ba6:	2000      	movs	r0, #0
 8001ba8:	f7ff fdf7 	bl	800179a <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8001bac:	682a      	ldr	r2, [r5, #0]
        vSyncCnt++;
 8001bae:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 8001bb2:	3301      	adds	r3, #1
 8001bb4:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66

        HAL::getInstance()->vSync();
        OSWrappers::signalVSync();
 8001bb8:	f000 f90a 	bl	8001dd0 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

        // In single buffering, only require that the system waits for display update to be finished if we
        // actually intend to update the display in this frame.
        HAL::getInstance()->lockDMAToFrontPorch(refreshRequested);
 8001bbc:	4b0e      	ldr	r3, [pc, #56]	; (8001bf8 <HAL_DSI_TearingEffectCallback+0x58>)
        lockDMAToPorch = enableLock;
 8001bbe:	682a      	ldr	r2, [r5, #0]
 8001bc0:	7819      	ldrb	r1, [r3, #0]

        if (refreshRequested && !displayRefreshing)
 8001bc2:	781b      	ldrb	r3, [r3, #0]
 8001bc4:	f882 104a 	strb.w	r1, [r2, #74]	; 0x4a
 8001bc8:	b173      	cbz	r3, 8001be8 <HAL_DSI_TearingEffectCallback+0x48>
 8001bca:	4d0c      	ldr	r5, [pc, #48]	; (8001bfc <HAL_DSI_TearingEffectCallback+0x5c>)
 8001bcc:	782b      	ldrb	r3, [r5, #0]
 8001bce:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8001bd2:	b94b      	cbnz	r3, 8001be8 <HAL_DSI_TearingEffectCallback+0x48>
        {

            // Update region 0 = first area of display (First quarter for 16bpp, first half for 24bpp)
            updateRegion = 0;
 8001bd4:	4b0a      	ldr	r3, [pc, #40]	; (8001c00 <HAL_DSI_TearingEffectCallback+0x60>)
 8001bd6:	601a      	str	r2, [r3, #0]
            LCD_SetUpdateRegionLeft();
 8001bd8:	f7ff ffbe 	bl	8001b58 <LCD_SetUpdateRegionLeft>

            // Transfer a quarter screen of pixel data.
            HAL_DSI_Refresh(hdsi);
 8001bdc:	4620      	mov	r0, r4
 8001bde:	f004 fe28 	bl	8006832 <HAL_DSI_Refresh>
            displayRefreshing = true;
 8001be2:	2301      	movs	r3, #1
 8001be4:	702b      	strb	r3, [r5, #0]
        }
        else
        {
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001be6:	bd38      	pop	{r3, r4, r5, pc}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001be8:	2000      	movs	r0, #0
    }
 8001bea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001bee:	f7ff bdd5 	b.w	800179c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8001bf2:	bf00      	nop
 8001bf4:	2400e0b4 	.word	0x2400e0b4
 8001bf8:	2400000c 	.word	0x2400000c
 8001bfc:	2400040d 	.word	0x2400040d
 8001c00:	240003f8 	.word	0x240003f8

08001c04 <HAL_DSI_EndOfRefreshCallback>:

    void HAL_DSI_EndOfRefreshCallback(DSI_HandleTypeDef* hdsi)
    {
 8001c04:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
        if (displayRefreshing)
 8001c08:	4e3f      	ldr	r6, [pc, #252]	; (8001d08 <HAL_DSI_EndOfRefreshCallback+0x104>)
    {
 8001c0a:	b085      	sub	sp, #20
 8001c0c:	4604      	mov	r4, r0
        if (displayRefreshing)
 8001c0e:	7833      	ldrb	r3, [r6, #0]
 8001c10:	2b00      	cmp	r3, #0
 8001c12:	d076      	beq.n	8001d02 <HAL_DSI_EndOfRefreshCallback+0xfe>
        {
            if (updateRegion == 0)
 8001c14:	4d3d      	ldr	r5, [pc, #244]	; (8001d0c <HAL_DSI_EndOfRefreshCallback+0x108>)
 8001c16:	f8df 8104 	ldr.w	r8, [pc, #260]	; 8001d1c <HAL_DSI_EndOfRefreshCallback+0x118>
 8001c1a:	f8d5 9000 	ldr.w	r9, [r5]
 8001c1e:	4f3c      	ldr	r7, [pc, #240]	; (8001d10 <HAL_DSI_EndOfRefreshCallback+0x10c>)
 8001c20:	f1b9 0f00 	cmp.w	r9, #0
 8001c24:	d139      	bne.n	8001c9a <HAL_DSI_EndOfRefreshCallback+0x96>
            {
                HAL_Delay(1);
 8001c26:	2001      	movs	r0, #1
 8001c28:	f004 f8dc 	bl	8005de4 <HAL_Delay>

                // If we transferred the left half, also transfer right half.
                __HAL_DSI_WRAPPER_DISABLE(hdsi);
 8001c2c:	6823      	ldr	r3, [r4, #0]
 8001c2e:	f8cd 9000 	str.w	r9, [sp]
 8001c32:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
                LTDC_LAYER(&hltdc, 0)->CFBAR = ((uint32_t)currFbBase) + (HAL::FRAME_BUFFER_WIDTH / 2) * 3;
 8001c36:	f8d8 1000 	ldr.w	r1, [r8]
                __HAL_DSI_WRAPPER_DISABLE(hdsi);
 8001c3a:	f022 0208 	bic.w	r2, r2, #8
                LTDC_LAYER(&hltdc, 0)->CFBAR = ((uint32_t)currFbBase) + (HAL::FRAME_BUFFER_WIDTH / 2) * 3;
 8001c3e:	6838      	ldr	r0, [r7, #0]
 8001c40:	f101 0684 	add.w	r6, r1, #132	; 0x84
                __HAL_DSI_WRAPPER_DISABLE(hdsi);
 8001c44:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 8001c48:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 8001c4c:	f002 0208 	and.w	r2, r2, #8
 8001c50:	9200      	str	r2, [sp, #0]
 8001c52:	9a00      	ldr	r2, [sp, #0]
                LTDC_LAYER(&hltdc, 0)->CFBAR = ((uint32_t)currFbBase) + (HAL::FRAME_BUFFER_WIDTH / 2) * 3;
 8001c54:	4a2f      	ldr	r2, [pc, #188]	; (8001d14 <HAL_DSI_EndOfRefreshCallback+0x110>)
 8001c56:	8812      	ldrh	r2, [r2, #0]
 8001c58:	0852      	lsrs	r2, r2, #1
 8001c5a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8001c5e:	4402      	add	r2, r0
 8001c60:	62b2      	str	r2, [r6, #40]	; 0x28
                __HAL_LTDC_RELOAD_IMMEDIATE_CONFIG(&hltdc);
 8001c62:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8001c64:	f042 0201 	orr.w	r2, r2, #1
 8001c68:	624a      	str	r2, [r1, #36]	; 0x24
                __HAL_DSI_WRAPPER_ENABLE(hdsi);
 8001c6a:	f8cd 9004 	str.w	r9, [sp, #4]
 8001c6e:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 8001c72:	f042 0208 	orr.w	r2, r2, #8
 8001c76:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 8001c7a:	f8d3 3404 	ldr.w	r3, [r3, #1028]	; 0x404
 8001c7e:	f003 0308 	and.w	r3, r3, #8
 8001c82:	9301      	str	r3, [sp, #4]
 8001c84:	9b01      	ldr	r3, [sp, #4]

                LCD_SetUpdateRegionRight(); //Set display column to 400-799
 8001c86:	f7ff ff79 	bl	8001b7c <LCD_SetUpdateRegionRight>
                updateRegion = 1;
 8001c8a:	2301      	movs	r3, #1
                HAL_DSI_Refresh(hdsi);
 8001c8c:	4620      	mov	r0, r4
                updateRegion = 1;
 8001c8e:	602b      	str	r3, [r5, #0]
                    // Signal to the framework that display update has finished.
                    HAL::getInstance()->frontPorchEntered();
                }
            }
        }
    }
 8001c90:	b005      	add	sp, #20
 8001c92:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
                HAL_DSI_Refresh(hdsi);
 8001c96:	f004 bdcc 	b.w	8006832 <HAL_DSI_Refresh>
                __HAL_DSI_WRAPPER_DISABLE(hdsi);
 8001c9a:	6803      	ldr	r3, [r0, #0]
 8001c9c:	2500      	movs	r5, #0
                LTDC_LAYER(&hltdc, 0)->CFBAR = (uint32_t)currFbBase;
 8001c9e:	6838      	ldr	r0, [r7, #0]
                __HAL_DSI_WRAPPER_DISABLE(hdsi);
 8001ca0:	9502      	str	r5, [sp, #8]
 8001ca2:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 8001ca6:	f022 0208 	bic.w	r2, r2, #8
 8001caa:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 8001cae:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 8001cb2:	f002 0208 	and.w	r2, r2, #8
 8001cb6:	9202      	str	r2, [sp, #8]
 8001cb8:	9a02      	ldr	r2, [sp, #8]
                LTDC_LAYER(&hltdc, 0)->CFBAR = (uint32_t)currFbBase;
 8001cba:	f8d8 2000 	ldr.w	r2, [r8]
 8001cbe:	f8c2 00ac 	str.w	r0, [r2, #172]	; 0xac
                GPIO::clear(GPIO::VSYNC_FREQ);
 8001cc2:	4628      	mov	r0, r5
                __HAL_LTDC_RELOAD_IMMEDIATE_CONFIG(&hltdc);
 8001cc4:	6a51      	ldr	r1, [r2, #36]	; 0x24
 8001cc6:	f041 0101 	orr.w	r1, r1, #1
 8001cca:	6251      	str	r1, [r2, #36]	; 0x24
                __HAL_DSI_WRAPPER_ENABLE(hdsi);
 8001ccc:	9503      	str	r5, [sp, #12]
 8001cce:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 8001cd2:	f042 0208 	orr.w	r2, r2, #8
 8001cd6:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 8001cda:	f8d3 3404 	ldr.w	r3, [r3, #1028]	; 0x404
 8001cde:	f003 0308 	and.w	r3, r3, #8
 8001ce2:	9303      	str	r3, [sp, #12]
 8001ce4:	9b03      	ldr	r3, [sp, #12]
                GPIO::clear(GPIO::VSYNC_FREQ);
 8001ce6:	f7ff fd59 	bl	800179c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
                LCD_ReqEnable();
 8001cea:	f7ff ff21 	bl	8001b30 <LCD_ReqEnable>
        return instance;
 8001cee:	4b0a      	ldr	r3, [pc, #40]	; (8001d18 <HAL_DSI_EndOfRefreshCallback+0x114>)
                displayRefreshing = false;
 8001cf0:	7035      	strb	r5, [r6, #0]
 8001cf2:	6818      	ldr	r0, [r3, #0]
                if (HAL::getInstance())
 8001cf4:	b128      	cbz	r0, 8001d02 <HAL_DSI_EndOfRefreshCallback+0xfe>
        allowDMATransfers();
 8001cf6:	6803      	ldr	r3, [r0, #0]
 8001cf8:	6a1b      	ldr	r3, [r3, #32]
    }
 8001cfa:	b005      	add	sp, #20
 8001cfc:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001d00:	4718      	bx	r3
 8001d02:	b005      	add	sp, #20
 8001d04:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001d08:	2400040d 	.word	0x2400040d
 8001d0c:	240003f8 	.word	0x240003f8
 8001d10:	240003f4 	.word	0x240003f4
 8001d14:	2400e0ae 	.word	0x2400e0ae
 8001d18:	2400e0b4 	.word	0x2400e0b4
 8001d1c:	24000214 	.word	0x24000214

08001d20 <IdleTaskHook>:

    portBASE_TYPE IdleTaskHook(void* p)
    {
 8001d20:	4601      	mov	r1, r0
 8001d22:	b508      	push	{r3, lr}
        return instance;
 8001d24:	4b03      	ldr	r3, [pc, #12]	; (8001d34 <IdleTaskHook+0x14>)
 8001d26:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
 8001d28:	b101      	cbz	r1, 8001d2c <IdleTaskHook+0xc>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
 8001d2a:	2101      	movs	r1, #1
        }
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
 8001d2c:	f00b fdf4 	bl	800d918 <_ZN8touchgfx3HAL12setMCUActiveEb>
        }
        return pdTRUE;
    }
 8001d30:	2001      	movs	r0, #1
 8001d32:	bd08      	pop	{r3, pc}
 8001d34:	2400e0b4 	.word	0x2400e0b4

08001d38 <_GLOBAL__sub_I_displayRefreshing>:
          cc_in(0)
 8001d38:	4b03      	ldr	r3, [pc, #12]	; (8001d48 <_GLOBAL__sub_I_displayRefreshing+0x10>)
 8001d3a:	2200      	movs	r2, #0
 8001d3c:	605a      	str	r2, [r3, #4]
 8001d3e:	609a      	str	r2, [r3, #8]
 8001d40:	4a02      	ldr	r2, [pc, #8]	; (8001d4c <_GLOBAL__sub_I_displayRefreshing+0x14>)
 8001d42:	601a      	str	r2, [r3, #0]

}
 8001d44:	4770      	bx	lr
 8001d46:	bf00      	nop
 8001d48:	240003fc 	.word	0x240003fc
 8001d4c:	080212cc 	.word	0x080212cc

08001d50 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001d50:	2101      	movs	r1, #1
 8001d52:	2200      	movs	r2, #0
{
 8001d54:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001d56:	4608      	mov	r0, r1
 8001d58:	f007 ff57 	bl	8009c0a <osSemaphoreNew>
 8001d5c:	4b0a      	ldr	r3, [pc, #40]	; (8001d88 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8001d5e:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8001d60:	b928      	cbnz	r0, 8001d6e <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8001d62:	4b0a      	ldr	r3, [pc, #40]	; (8001d8c <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8001d64:	2128      	movs	r1, #40	; 0x28
 8001d66:	4a0a      	ldr	r2, [pc, #40]	; (8001d90 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001d68:	480a      	ldr	r0, [pc, #40]	; (8001d94 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8001d6a:	f01e f939 	bl	801ffe0 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8001d6e:	2200      	movs	r2, #0
 8001d70:	2104      	movs	r1, #4
 8001d72:	2001      	movs	r0, #1
 8001d74:	f007 ffe6 	bl	8009d44 <osMessageQueueNew>
 8001d78:	4b07      	ldr	r3, [pc, #28]	; (8001d98 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8001d7a:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001d7c:	b918      	cbnz	r0, 8001d86 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8001d7e:	4b07      	ldr	r3, [pc, #28]	; (8001d9c <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8001d80:	212c      	movs	r1, #44	; 0x2c
 8001d82:	4a03      	ldr	r2, [pc, #12]	; (8001d90 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8001d84:	e7f0      	b.n	8001d68 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8001d86:	bd08      	pop	{r3, pc}
 8001d88:	24000414 	.word	0x24000414
 8001d8c:	080215e4 	.word	0x080215e4
 8001d90:	0802162d 	.word	0x0802162d
 8001d94:	0802165c 	.word	0x0802165c
 8001d98:	24000410 	.word	0x24000410
 8001d9c:	080216a5 	.word	0x080216a5

08001da0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8001da0:	4b02      	ldr	r3, [pc, #8]	; (8001dac <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8001da2:	f04f 31ff 	mov.w	r1, #4294967295
 8001da6:	6818      	ldr	r0, [r3, #0]
 8001da8:	f007 bf79 	b.w	8009c9e <osSemaphoreAcquire>
 8001dac:	24000414 	.word	0x24000414

08001db0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8001db0:	4b01      	ldr	r3, [pc, #4]	; (8001db8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8001db2:	6818      	ldr	r0, [r3, #0]
 8001db4:	f007 bf9e 	b.w	8009cf4 <osSemaphoreRelease>
 8001db8:	24000414 	.word	0x24000414

08001dbc <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8001dbc:	4b02      	ldr	r3, [pc, #8]	; (8001dc8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8001dbe:	2100      	movs	r1, #0
 8001dc0:	6818      	ldr	r0, [r3, #0]
 8001dc2:	f007 bf6c 	b.w	8009c9e <osSemaphoreAcquire>
 8001dc6:	bf00      	nop
 8001dc8:	24000414 	.word	0x24000414

08001dcc <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8001dcc:	f7ff bff0 	b.w	8001db0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08001dd0 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8001dd0:	2300      	movs	r3, #0
 8001dd2:	4803      	ldr	r0, [pc, #12]	; (8001de0 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8001dd4:	4903      	ldr	r1, [pc, #12]	; (8001de4 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8001dd6:	461a      	mov	r2, r3
 8001dd8:	6800      	ldr	r0, [r0, #0]
 8001dda:	f007 bfee 	b.w	8009dba <osMessageQueuePut>
 8001dde:	bf00      	nop
 8001de0:	24000410 	.word	0x24000410
 8001de4:	24000010 	.word	0x24000010

08001de8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8001de8:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8001dea:	2300      	movs	r3, #0
 8001dec:	4c07      	ldr	r4, [pc, #28]	; (8001e0c <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8001dee:	a901      	add	r1, sp, #4
 8001df0:	461a      	mov	r2, r3
 8001df2:	6820      	ldr	r0, [r4, #0]
 8001df4:	f008 f811 	bl	8009e1a <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8001df8:	f04f 33ff 	mov.w	r3, #4294967295
 8001dfc:	2200      	movs	r2, #0
 8001dfe:	a901      	add	r1, sp, #4
 8001e00:	6820      	ldr	r0, [r4, #0]
 8001e02:	f008 f80a 	bl	8009e1a <osMessageQueueGet>
}
 8001e06:	b002      	add	sp, #8
 8001e08:	bd10      	pop	{r4, pc}
 8001e0a:	bf00      	nop
 8001e0c:	24000410 	.word	0x24000410

08001e10 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8001e10:	6803      	ldr	r3, [r0, #0]
 8001e12:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001e14:	4718      	bx	r3

08001e16 <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8001e16:	2001      	movs	r0, #1
 8001e18:	4770      	bx	lr

08001e1a <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8001e1a:	6803      	ldr	r3, [r0, #0]
 8001e1c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001e1e:	4718      	bx	r3

08001e20 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8001e20:	f240 30ef 	movw	r0, #1007	; 0x3ef
 8001e24:	4770      	bx	lr
	...

08001e28 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8001e28:	4b05      	ldr	r3, [pc, #20]	; (8001e40 <_ZN8STM32DMAD1Ev+0x18>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001e2a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001e2e:	6003      	str	r3, [r0, #0]
 8001e30:	4b04      	ldr	r3, [pc, #16]	; (8001e44 <_ZN8STM32DMAD1Ev+0x1c>)
 8001e32:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001e36:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001e3a:	f3bf 8f6f 	isb	sy
}
 8001e3e:	4770      	bx	lr
 8001e40:	08021840 	.word	0x08021840
 8001e44:	e000e100 	.word	0xe000e100

08001e48 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8001e48:	b510      	push	{r4, lr}
 8001e4a:	4604      	mov	r4, r0
}
 8001e4c:	f44f 615a 	mov.w	r1, #3488	; 0xda0
 8001e50:	f7ff ffea 	bl	8001e28 <_ZN8STM32DMAD1Ev>
 8001e54:	4620      	mov	r0, r4
 8001e56:	f01d feca 	bl	801fbee <_ZdlPvj>
 8001e5a:	4620      	mov	r0, r4
 8001e5c:	bd10      	pop	{r4, pc}
	...

08001e60 <_ZN8STM32DMA10initializeEv>:
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001e60:	4b0f      	ldr	r3, [pc, #60]	; (8001ea0 <_ZN8STM32DMA10initializeEv+0x40>)
{
 8001e62:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001e64:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 8001e68:	f042 0210 	orr.w	r2, r2, #16
 8001e6c:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
 8001e70:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 8001e74:	f002 0210 	and.w	r2, r2, #16
 8001e78:	9201      	str	r2, [sp, #4]
 8001e7a:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8001e7c:	6fda      	ldr	r2, [r3, #124]	; 0x7c
 8001e7e:	f042 0210 	orr.w	r2, r2, #16
 8001e82:	67da      	str	r2, [r3, #124]	; 0x7c
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8001e84:	6fda      	ldr	r2, [r3, #124]	; 0x7c
 8001e86:	f022 0210 	bic.w	r2, r2, #16
 8001e8a:	67da      	str	r2, [r3, #124]	; 0x7c
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8001e8c:	4b05      	ldr	r3, [pc, #20]	; (8001ea4 <_ZN8STM32DMA10initializeEv+0x44>)
 8001e8e:	4a06      	ldr	r2, [pc, #24]	; (8001ea8 <_ZN8STM32DMA10initializeEv+0x48>)
 8001e90:	621a      	str	r2, [r3, #32]
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001e92:	4b06      	ldr	r3, [pc, #24]	; (8001eac <_ZN8STM32DMA10initializeEv+0x4c>)
 8001e94:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001e98:	609a      	str	r2, [r3, #8]
}
 8001e9a:	b002      	add	sp, #8
 8001e9c:	4770      	bx	lr
 8001e9e:	bf00      	nop
 8001ea0:	58024400 	.word	0x58024400
 8001ea4:	24000190 	.word	0x24000190
 8001ea8:	08001eb1 	.word	0x08001eb1
 8001eac:	e000e100 	.word	0xe000e100

08001eb0 <DMA2D_XferCpltCallback>:
 8001eb0:	4b02      	ldr	r3, [pc, #8]	; (8001ebc <DMA2D_XferCpltCallback+0xc>)
 8001eb2:	681b      	ldr	r3, [r3, #0]
 8001eb4:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8001eb6:	6803      	ldr	r3, [r0, #0]
 8001eb8:	695b      	ldr	r3, [r3, #20]
 8001eba:	4718      	bx	r3
 8001ebc:	2400e0b4 	.word	0x2400e0b4

08001ec0 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8001ec0:	b570      	push	{r4, r5, r6, lr}
 8001ec2:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8001ec4:	4b0a      	ldr	r3, [pc, #40]	; (8001ef0 <_ZN8STM32DMAC1Ev+0x30>)
 8001ec6:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8001ec8:	2600      	movs	r6, #0
 8001eca:	4625      	mov	r5, r4
 8001ecc:	2260      	movs	r2, #96	; 0x60
 8001ece:	6060      	str	r0, [r4, #4]
 8001ed0:	7226      	strb	r6, [r4, #8]
 8001ed2:	7266      	strb	r6, [r4, #9]
 8001ed4:	f845 3b20 	str.w	r3, [r5], #32
 8001ed8:	4629      	mov	r1, r5
 8001eda:	f00b fe83 	bl	800dbe4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8001ede:	f504 635a 	add.w	r3, r4, #3488	; 0xda0
        : color(0)
 8001ee2:	60ee      	str	r6, [r5, #12]
 8001ee4:	3524      	adds	r5, #36	; 0x24
 8001ee6:	42ab      	cmp	r3, r5
 8001ee8:	d1fb      	bne.n	8001ee2 <_ZN8STM32DMAC1Ev+0x22>
}
 8001eea:	4620      	mov	r0, r4
 8001eec:	bd70      	pop	{r4, r5, r6, pc}
 8001eee:	bf00      	nop
 8001ef0:	08021840 	.word	0x08021840

08001ef4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8001ef4:	b508      	push	{r3, lr}
    switch (format)
 8001ef6:	290b      	cmp	r1, #11
 8001ef8:	d80b      	bhi.n	8001f12 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1e>
 8001efa:	e8df f001 	tbb	[pc, r1]
 8001efe:	0612      	.short	0x0612
 8001f00:	0a0a0a10 	.word	0x0a0a0a10
 8001f04:	0808080a 	.word	0x0808080a
 8001f08:	0808      	.short	0x0808
 8001f0a:	2001      	movs	r0, #1
}
 8001f0c:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8001f0e:	2005      	movs	r0, #5
        break;
 8001f10:	e7fc      	b.n	8001f0c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        assert(0 && "Unsupported Format!");
 8001f12:	4b05      	ldr	r3, [pc, #20]	; (8001f28 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8001f14:	2166      	movs	r1, #102	; 0x66
 8001f16:	4a05      	ldr	r2, [pc, #20]	; (8001f2c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8001f18:	4805      	ldr	r0, [pc, #20]	; (8001f30 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x3c>)
 8001f1a:	f01e f861 	bl	801ffe0 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8001f1e:	2000      	movs	r0, #0
 8001f20:	e7f4      	b.n	8001f0c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8001f22:	2002      	movs	r0, #2
    return dma2dColorMode;
 8001f24:	e7f2      	b.n	8001f0c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8001f26:	bf00      	nop
 8001f28:	080216e7 	.word	0x080216e7
 8001f2c:	08021702 	.word	0x08021702
 8001f30:	0802174c 	.word	0x0802174c

08001f34 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8001f34:	b508      	push	{r3, lr}
    switch (format)
 8001f36:	290a      	cmp	r1, #10
 8001f38:	d809      	bhi.n	8001f4e <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1a>
 8001f3a:	e8df f001 	tbb	[pc, r1]
 8001f3e:	0610      	.short	0x0610
 8001f40:	0808080e 	.word	0x0808080e
 8001f44:	06060608 	.word	0x06060608
 8001f48:	06          	.byte	0x06
 8001f49:	00          	.byte	0x00
 8001f4a:	2001      	movs	r0, #1
}
 8001f4c:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8001f4e:	4b05      	ldr	r3, [pc, #20]	; (8001f64 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x30>)
 8001f50:	2187      	movs	r1, #135	; 0x87
 8001f52:	4a05      	ldr	r2, [pc, #20]	; (8001f68 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8001f54:	4805      	ldr	r0, [pc, #20]	; (8001f6c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8001f56:	f01e f843 	bl	801ffe0 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8001f5a:	2000      	movs	r0, #0
 8001f5c:	e7f6      	b.n	8001f4c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8001f5e:	2002      	movs	r0, #2
    return dma2dColorMode;
 8001f60:	e7f4      	b.n	8001f4c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8001f62:	bf00      	nop
 8001f64:	080216e7 	.word	0x080216e7
 8001f68:	08021793 	.word	0x08021793
 8001f6c:	0802174c 	.word	0x0802174c

08001f70 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 8001f70:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001f74:	7f4f      	ldrb	r7, [r1, #29]
{
 8001f76:	460c      	mov	r4, r1
 8001f78:	4681      	mov	r9, r0
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001f7a:	4639      	mov	r1, r7
 8001f7c:	f7ff ffba 	bl	8001ef4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001f80:	f894 801e 	ldrb.w	r8, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001f84:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001f86:	4648      	mov	r0, r9
 8001f88:	4641      	mov	r1, r8
 8001f8a:	f7ff ffb3 	bl	8001ef4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001f8e:	4641      	mov	r1, r8
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001f90:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001f92:	4648      	mov	r0, r9
 8001f94:	f7ff ffce 	bl	8001f34 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001f98:	8aa1      	ldrh	r1, [r4, #20]
 8001f9a:	8b62      	ldrh	r2, [r4, #26]
 8001f9c:	4b42      	ldr	r3, [pc, #264]	; (80020a8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8001f9e:	1a52      	subs	r2, r2, r1
 8001fa0:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001fa2:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8001fa4:	8b22      	ldrh	r2, [r4, #24]
 8001fa6:	1a52      	subs	r2, r2, r1
 8001fa8:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001faa:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8001fac:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001fae:	ea42 4201 	orr.w	r2, r2, r1, lsl #16

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001fb2:	6920      	ldr	r0, [r4, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001fb4:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8001fb6:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001fb8:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8001fba:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8001fbc:	6821      	ldr	r1, [r4, #0]
    {
    case BLIT_OP_COPY_A4:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001fbe:	f894 c01c 	ldrb.w	ip, [r4, #28]
    switch (blitOp.operation)
 8001fc2:	2980      	cmp	r1, #128	; 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001fc4:	ea4f 620c 	mov.w	r2, ip, lsl #24
    switch (blitOp.operation)
 8001fc8:	d026      	beq.n	8002018 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa8>
 8001fca:	d810      	bhi.n	8001fee <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7e>
 8001fcc:	2920      	cmp	r1, #32
 8001fce:	ea45 0402 	orr.w	r4, r5, r2
 8001fd2:	d062      	beq.n	800209a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x12a>
 8001fd4:	2940      	cmp	r1, #64	; 0x40
 8001fd6:	d060      	beq.n	800209a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x12a>
 8001fd8:	2904      	cmp	r1, #4
 8001fda:	d05e      	beq.n	800209a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x12a>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001fdc:	432a      	orrs	r2, r5
 8001fde:	4b32      	ldr	r3, [pc, #200]	; (80020a8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8001fe0:	4547      	cmp	r7, r8
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001fe2:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8001fe6:	61da      	str	r2, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8001fe8:	d05b      	beq.n	80020a2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x132>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8001fea:	4a30      	ldr	r2, [pc, #192]	; (80020ac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8001fec:	e040      	b.n	8002070 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
    switch (blitOp.operation)
 8001fee:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 8001ff2:	d007      	beq.n	8002004 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x94>
 8001ff4:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8001ff8:	d1f0      	bne.n	8001fdc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001ffa:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8001ffe:	f042 0209 	orr.w	r2, r2, #9
 8002002:	e003      	b.n	800200c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8002004:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8002008:	f042 020a 	orr.w	r2, r2, #10
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800200c:	61da      	str	r2, [r3, #28]
        return color;
 800200e:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8002010:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8002012:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8002014:	6158      	str	r0, [r3, #20]
 8002016:	e02a      	b.n	800206e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfe>
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8002018:	432a      	orrs	r2, r5
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 800201a:	68a4      	ldr	r4, [r4, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800201c:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8002020:	61da      	str	r2, [r3, #28]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8002022:	1d22      	adds	r2, r4, #4
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8002024:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8002026:	6158      	str	r0, [r3, #20]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8002028:	62da      	str	r2, [r3, #44]	; 0x2c
            switch ((Bitmap::ClutFormat)palette->format)
 800202a:	7822      	ldrb	r2, [r4, #0]
 800202c:	b142      	cbz	r2, 8002040 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd0>
 800202e:	2a01      	cmp	r2, #1
 8002030:	d021      	beq.n	8002076 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x106>
                assert(0 && "Unsupported format");
 8002032:	4b1f      	ldr	r3, [pc, #124]	; (80020b0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8002034:	f240 1101 	movw	r1, #257	; 0x101
 8002038:	4a1e      	ldr	r2, [pc, #120]	; (80020b4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 800203a:	481f      	ldr	r0, [pc, #124]	; (80020b8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 800203c:	f01d ffd0 	bl	801ffe0 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8002040:	69da      	ldr	r2, [r3, #28]
            bool blend = true;
 8002042:	2001      	movs	r0, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8002044:	8861      	ldrh	r1, [r4, #2]
 8002046:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 800204a:	3901      	subs	r1, #1
 800204c:	f022 0210 	bic.w	r2, r2, #16
 8002050:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8002054:	61da      	str	r2, [r3, #28]
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8002056:	4b14      	ldr	r3, [pc, #80]	; (80020a8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8002058:	69da      	ldr	r2, [r3, #28]
 800205a:	f042 0220 	orr.w	r2, r2, #32
 800205e:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8002060:	69da      	ldr	r2, [r3, #28]
 8002062:	0692      	lsls	r2, r2, #26
 8002064:	d4fc      	bmi.n	8002060 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf0>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8002066:	2210      	movs	r2, #16
 8002068:	609a      	str	r2, [r3, #8]
            if(blend)
 800206a:	2800      	cmp	r0, #0
 800206c:	d0bd      	beq.n	8001fea <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7a>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 800206e:	4a13      	ldr	r2, [pc, #76]	; (80020bc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8002070:	601a      	str	r2, [r3, #0]
        }

        break;
    }
}
 8002072:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8002076:	8862      	ldrh	r2, [r4, #2]
                if(blitOp.alpha == 255)
 8002078:	f1bc 00ff 	subs.w	r0, ip, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 800207c:	69d9      	ldr	r1, [r3, #28]
 800207e:	f102 34ff 	add.w	r4, r2, #4294967295
                if(blitOp.alpha == 255)
 8002082:	bf18      	it	ne
 8002084:	2001      	movne	r0, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8002086:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 800208a:	f022 0210 	bic.w	r2, r2, #16
 800208e:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
 8002092:	f042 0210 	orr.w	r2, r2, #16
 8002096:	61da      	str	r2, [r3, #28]
                break;
 8002098:	e7dd      	b.n	8002056 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800209a:	f444 3400 	orr.w	r4, r4, #131072	; 0x20000
 800209e:	61dc      	str	r4, [r3, #28]
 80020a0:	e7b7      	b.n	8002012 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 80020a2:	f240 2201 	movw	r2, #513	; 0x201
 80020a6:	e7e3      	b.n	8002070 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
 80020a8:	52001000 	.word	0x52001000
 80020ac:	00010201 	.word	0x00010201
 80020b0:	080217de 	.word	0x080217de
 80020b4:	080217f8 	.word	0x080217f8
 80020b8:	0802174c 	.word	0x0802174c
 80020bc:	00020201 	.word	0x00020201

080020c0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 80020c0:	b570      	push	{r4, r5, r6, lr}
 80020c2:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80020c4:	7f89      	ldrb	r1, [r1, #30]
 80020c6:	f7ff ff35 	bl	8001f34 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 80020ca:	4b12      	ldr	r3, [pc, #72]	; (8002114 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x54>)

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80020cc:	8aa5      	ldrh	r5, [r4, #20]
 80020ce:	8ae1      	ldrh	r1, [r4, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 80020d0:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80020d2:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 80020d6:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 80020d8:	1b52      	subs	r2, r2, r5
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80020da:	6459      	str	r1, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80020dc:	6921      	ldr	r1, [r4, #16]
 80020de:	63d9      	str	r1, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 80020e0:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 80020e2:	6826      	ldr	r6, [r4, #0]
 80020e4:	68e5      	ldr	r5, [r4, #12]
 80020e6:	2e08      	cmp	r6, #8
 80020e8:	d10d      	bne.n	8002106 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 80020ea:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 80020ec:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 80020ee:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_BGPFCCR_ALPHA));
 80020f0:	4a09      	ldr	r2, [pc, #36]	; (8002118 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x58>)
 80020f2:	7f20      	ldrb	r0, [r4, #28]
 80020f4:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 80020f8:	61da      	str	r2, [r3, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 80020fa:	4a08      	ldr	r2, [pc, #32]	; (800211c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x5c>)
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 80020fc:	621d      	str	r5, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80020fe:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8002100:	60d9      	str	r1, [r3, #12]

        // set color
        WRITE_REG(DMA2D->OCOLR, blitOp.color);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8002102:	601a      	str	r2, [r3, #0]
    }
}
 8002104:	bd70      	pop	{r4, r5, r6, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8002106:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8002108:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 800210a:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 800210c:	4a04      	ldr	r2, [pc, #16]	; (8002120 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x60>)
        WRITE_REG(DMA2D->OCOLR, blitOp.color);
 800210e:	639d      	str	r5, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8002110:	e7f7      	b.n	8002102 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8002112:	bf00      	nop
 8002114:	52001000 	.word	0x52001000
 8002118:	00010009 	.word	0x00010009
 800211c:	00020201 	.word	0x00020201
 8002120:	00030201 	.word	0x00030201

08002124 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8002124:	2001      	movs	r0, #1
 8002126:	4770      	bx	lr

08002128 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8002128:	2038      	movs	r0, #56	; 0x38
 800212a:	4770      	bx	lr

0800212c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 800212c:	2338      	movs	r3, #56	; 0x38
 800212e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002132:	3008      	adds	r0, #8
 8002134:	4770      	bx	lr

08002136 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8002136:	2338      	movs	r3, #56	; 0x38
 8002138:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800213c:	3008      	adds	r0, #8
 800213e:	4770      	bx	lr

08002140 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11InitialViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8002140:	2001      	movs	r0, #1
 8002142:	4770      	bx	lr

08002144 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11InitialViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8002144:	f243 10e4 	movw	r0, #12772	; 0x31e4
 8002148:	4770      	bx	lr

0800214a <_ZN8touchgfx9PartitionINS_4meta8TypeListI11InitialViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800214a:	f243 13e4 	movw	r3, #12772	; 0x31e4
 800214e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002152:	3008      	adds	r0, #8
 8002154:	4770      	bx	lr

08002156 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11InitialViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002156:	f243 13e4 	movw	r3, #12772	; 0x31e4
 800215a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800215e:	3008      	adds	r0, #8
 8002160:	4770      	bx	lr

08002162 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI14BlankPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8002162:	2001      	movs	r0, #1
 8002164:	4770      	bx	lr

08002166 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14BlankPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8002166:	2010      	movs	r0, #16
 8002168:	4770      	bx	lr

0800216a <_ZN8touchgfx9PartitionINS_4meta8TypeListI14BlankPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800216a:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 800216e:	3008      	adds	r0, #8
 8002170:	4770      	bx	lr

08002172 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI14BlankPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002172:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8002176:	3008      	adds	r0, #8
 8002178:	4770      	bx	lr

0800217a <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoInitialScreenNoTransition();
 800217a:	4608      	mov	r0, r1
 800217c:	f001 b806 	b.w	800318c <_ZN23FrontendApplicationBase29gotoInitialScreenNoTransitionEv>

08002180 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8002180:	4b03      	ldr	r3, [pc, #12]	; (8002190 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8002182:	b510      	push	{r4, lr}
 8002184:	4604      	mov	r4, r0
 8002186:	6003      	str	r3, [r0, #0]
 8002188:	f009 fe26 	bl	800bdd8 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800218c:	4620      	mov	r0, r4
 800218e:	bd10      	pop	{r4, pc}
 8002190:	080218f8 	.word	0x080218f8

08002194 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8002194:	b510      	push	{r4, lr}
 8002196:	4604      	mov	r4, r0
 8002198:	f7ff fff2 	bl	8002180 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 800219c:	2140      	movs	r1, #64	; 0x40
 800219e:	4620      	mov	r0, r4
 80021a0:	f01d fd25 	bl	801fbee <_ZdlPvj>
 80021a4:	4620      	mov	r0, r4
 80021a6:	bd10      	pop	{r4, pc}

080021a8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11InitialViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80021a8:	4b03      	ldr	r3, [pc, #12]	; (80021b8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11InitialViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80021aa:	b510      	push	{r4, lr}
 80021ac:	4604      	mov	r4, r0
 80021ae:	6003      	str	r3, [r0, #0]
 80021b0:	f009 fe12 	bl	800bdd8 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80021b4:	4620      	mov	r0, r4
 80021b6:	bd10      	pop	{r4, pc}
 80021b8:	080218c4 	.word	0x080218c4

080021bc <_ZN8touchgfx9PartitionINS_4meta8TypeListI11InitialViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80021bc:	b510      	push	{r4, lr}
 80021be:	4604      	mov	r4, r0
 80021c0:	f7ff fff2 	bl	80021a8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11InitialViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80021c4:	f243 11ec 	movw	r1, #12780	; 0x31ec
 80021c8:	4620      	mov	r0, r4
 80021ca:	f01d fd10 	bl	801fbee <_ZdlPvj>
 80021ce:	4620      	mov	r0, r4
 80021d0:	bd10      	pop	{r4, pc}
	...

080021d4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14BlankPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80021d4:	4b03      	ldr	r3, [pc, #12]	; (80021e4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14BlankPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80021d6:	b510      	push	{r4, lr}
 80021d8:	4604      	mov	r4, r0
 80021da:	6003      	str	r3, [r0, #0]
 80021dc:	f009 fdfc 	bl	800bdd8 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80021e0:	4620      	mov	r0, r4
 80021e2:	bd10      	pop	{r4, pc}
 80021e4:	08021890 	.word	0x08021890

080021e8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14BlankPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80021e8:	b510      	push	{r4, lr}
 80021ea:	4604      	mov	r4, r0
 80021ec:	f7ff fff2 	bl	80021d4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14BlankPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80021f0:	2118      	movs	r1, #24
 80021f2:	4620      	mov	r0, r4
 80021f4:	f01d fcfb 	bl	801fbee <_ZdlPvj>
 80021f8:	4620      	mov	r0, r4
 80021fa:	bd10      	pop	{r4, pc}

080021fc <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 80021fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
       : _M_cur(__x._M_cur), _M_first(__x._M_first),
	 _M_last(__x._M_last), _M_node(__x._M_node) { }

      _Deque_iterator(const _Deque_iterator& __x) noexcept
       : _M_cur(__x._M_cur), _M_first(__x._M_first),
	 _M_last(__x._M_last), _M_node(__x._M_node) { }
 80021fe:	f500 5540 	add.w	r5, r0, #12288	; 0x3000
 8002202:	4b15      	ldr	r3, [pc, #84]	; (8002258 <_ZN12FrontendHeapD1Ev+0x5c>)
 8002204:	4604      	mov	r4, r0
 8002206:	6003      	str	r3, [r0, #0]

  template<typename _Tp, typename _Alloc>
    _Deque_base<_Tp, _Alloc>::
    ~_Deque_base() _GLIBCXX_NOEXCEPT
    {
      if (this->_M_impl._M_map)
 8002208:	f8d5 3258 	ldr.w	r3, [r5, #600]	; 0x258
	 _M_last(__x._M_last), _M_node(__x._M_node) { }
 800220c:	f8d5 626c 	ldr.w	r6, [r5, #620]	; 0x26c
 8002210:	f8d5 727c 	ldr.w	r7, [r5, #636]	; 0x27c
      if (this->_M_impl._M_map)
 8002214:	b183      	cbz	r3, 8002238 <_ZN12FrontendHeapD1Ev+0x3c>
	{
	  _M_destroy_nodes(this->_M_impl._M_start._M_node,
 8002216:	3704      	adds	r7, #4
    void
    _Deque_base<_Tp, _Alloc>::
    _M_destroy_nodes(_Map_pointer __nstart,
		     _Map_pointer __nfinish) _GLIBCXX_NOEXCEPT
    {
      for (_Map_pointer __n = __nstart; __n < __nfinish; ++__n)
 8002218:	42b7      	cmp	r7, r6
 800221a:	d906      	bls.n	800222a <_ZN12FrontendHeapD1Ev+0x2e>
# endif
			      std::align_val_t(alignof(_Tp)));
	    return;
	  }
#endif
	::operator delete(__p
 800221c:	f44f 7100 	mov.w	r1, #512	; 0x200
 8002220:	f856 0b04 	ldr.w	r0, [r6], #4
 8002224:	f01d fce3 	bl	801fbee <_ZdlPvj>
 8002228:	e7f6      	b.n	8002218 <_ZN12FrontendHeapD1Ev+0x1c>
 800222a:	f8d5 125c 	ldr.w	r1, [r5, #604]	; 0x25c
 800222e:	f8d5 0258 	ldr.w	r0, [r5, #600]	; 0x258
 8002232:	0089      	lsls	r1, r1, #2
 8002234:	f01d fcdb 	bl	801fbee <_ZdlPvj>
 8002238:	f504 5048 	add.w	r0, r4, #12800	; 0x3200
 800223c:	3018      	adds	r0, #24
 800223e:	f7ff ff9f 	bl	8002180 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8002242:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8002246:	f7ff ffaf 	bl	80021a8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11InitialViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800224a:	f104 0014 	add.w	r0, r4, #20
 800224e:	f7ff ffc1 	bl	80021d4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14BlankPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002252:	4620      	mov	r0, r4
 8002254:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002256:	bf00      	nop
 8002258:	0802192c 	.word	0x0802192c

0800225c <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 800225c:	b508      	push	{r3, lr}
 800225e:	4802      	ldr	r0, [pc, #8]	; (8002268 <__tcf_0+0xc>)
 8002260:	f7ff ffcc 	bl	80021fc <_ZN12FrontendHeapD1Ev>
 8002264:	bd08      	pop	{r3, pc}
 8002266:	bf00      	nop
 8002268:	2400041c 	.word	0x2400041c

0800226c <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 800226c:	b510      	push	{r4, lr}
 800226e:	4604      	mov	r4, r0
 8002270:	f7ff ffc4 	bl	80021fc <_ZN12FrontendHeapD1Ev>
 8002274:	f243 31e8 	movw	r1, #13288	; 0x33e8
 8002278:	4620      	mov	r0, r4
 800227a:	f01d fcb8 	bl	801fbee <_ZdlPvj>
 800227e:	4620      	mov	r0, r4
 8002280:	bd10      	pop	{r4, pc}
	...

08002284 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 800, 480);

void touchgfx_init()
{
 8002284:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8002288:	f000 f934 	bl	80024f4 <_ZN14BitmapDatabase11getInstanceEv>
 800228c:	2400      	movs	r4, #0
 800228e:	4605      	mov	r5, r0
 8002290:	f000 f934 	bl	80024fc <_ZN14BitmapDatabase15getInstanceSizeEv>
 8002294:	4623      	mov	r3, r4
 8002296:	4601      	mov	r1, r0
 8002298:	4622      	mov	r2, r4
 800229a:	4628      	mov	r0, r5
 800229c:	9400      	str	r4, [sp, #0]
 800229e:	f012 fe03 	bl	8014ea8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 80022a2:	4b26      	ldr	r3, [pc, #152]	; (800233c <touchgfx_init+0xb8>)
 80022a4:	4a26      	ldr	r2, [pc, #152]	; (8002340 <touchgfx_init+0xbc>)
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 80022a6:	4620      	mov	r0, r4
        static FrontendHeap instance;
 80022a8:	4d26      	ldr	r5, [pc, #152]	; (8002344 <touchgfx_init+0xc0>)
 80022aa:	601a      	str	r2, [r3, #0]
 80022ac:	f001 fb72 	bl	8003994 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 80022b0:	4825      	ldr	r0, [pc, #148]	; (8002348 <touchgfx_init+0xc4>)
 80022b2:	f012 fc95 	bl	8014be0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 80022b6:	782b      	ldrb	r3, [r5, #0]
 80022b8:	f3bf 8f5b 	dmb	ish
 80022bc:	07db      	lsls	r3, r3, #31
 80022be:	d436      	bmi.n	800232e <touchgfx_init+0xaa>
 80022c0:	4628      	mov	r0, r5
 80022c2:	f01d fc96 	bl	801fbf2 <__cxa_guard_acquire>
 80022c6:	b390      	cbz	r0, 800232e <touchgfx_init+0xaa>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 80022c8:	4c20      	ldr	r4, [pc, #128]	; (800234c <touchgfx_init+0xc8>)
 80022ca:	4f21      	ldr	r7, [pc, #132]	; (8002350 <touchgfx_init+0xcc>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 80022cc:	4b21      	ldr	r3, [pc, #132]	; (8002354 <touchgfx_init+0xd0>)
 80022ce:	f104 0014 	add.w	r0, r4, #20
 80022d2:	f107 0678 	add.w	r6, r7, #120	; 0x78
 80022d6:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 80022da:	6023      	str	r3, [r4, #0]
 80022dc:	6060      	str	r0, [r4, #4]
 80022de:	f8c4 8008 	str.w	r8, [r4, #8]
 80022e2:	60e7      	str	r7, [r4, #12]
 80022e4:	6126      	str	r6, [r4, #16]
 80022e6:	f009 fd79 	bl	800bddc <_ZN8touchgfx17AbstractPartitionC1Ev>
 80022ea:	4b1b      	ldr	r3, [pc, #108]	; (8002358 <touchgfx_init+0xd4>)
 80022ec:	4640      	mov	r0, r8
 80022ee:	6163      	str	r3, [r4, #20]
 80022f0:	f009 fd74 	bl	800bddc <_ZN8touchgfx17AbstractPartitionC1Ev>
 80022f4:	4b19      	ldr	r3, [pc, #100]	; (800235c <touchgfx_init+0xd8>)
 80022f6:	4638      	mov	r0, r7
 80022f8:	62e3      	str	r3, [r4, #44]	; 0x2c
 80022fa:	f009 fd6f 	bl	800bddc <_ZN8touchgfx17AbstractPartitionC1Ev>
 80022fe:	f504 5340 	add.w	r3, r4, #12288	; 0x3000
 8002302:	4a17      	ldr	r2, [pc, #92]	; (8002360 <touchgfx_init+0xdc>)
 8002304:	f503 7016 	add.w	r0, r3, #600	; 0x258
 8002308:	f8c3 2218 	str.w	r2, [r3, #536]	; 0x218
 800230c:	f001 fda0 	bl	8003e50 <_ZN5ModelC1Ev>
 8002310:	4622      	mov	r2, r4
 8002312:	f107 0140 	add.w	r1, r7, #64	; 0x40
 8002316:	4630      	mov	r0, r6
 8002318:	f001 fc84 	bl	8003c24 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 800231c:	4630      	mov	r0, r6
 800231e:	f000 ff35 	bl	800318c <_ZN23FrontendApplicationBase29gotoInitialScreenNoTransitionEv>
        static FrontendHeap instance;
 8002322:	4810      	ldr	r0, [pc, #64]	; (8002364 <touchgfx_init+0xe0>)
 8002324:	f01d fe7a 	bl	802001c <atexit>
 8002328:	4628      	mov	r0, r5
 800232a:	f01d fc6e 	bl	801fc0a <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 800232e:	480e      	ldr	r0, [pc, #56]	; (8002368 <touchgfx_init+0xe4>)
}
 8002330:	b002      	add	sp, #8
 8002332:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8002336:	f7ff ba8f 	b.w	8001858 <_ZN11TouchGFXHAL10initializeEv>
 800233a:	bf00      	nop
 800233c:	2400e130 	.word	0x2400e130
 8002340:	24004624 	.word	0x24004624
 8002344:	24000418 	.word	0x24000418
 8002348:	24000014 	.word	0x24000014
 800234c:	2400041c 	.word	0x2400041c
 8002350:	24003634 	.word	0x24003634
 8002354:	0802192c 	.word	0x0802192c
 8002358:	08021890 	.word	0x08021890
 800235c:	080218c4 	.word	0x080218c4
 8002360:	080218f8 	.word	0x080218f8
 8002364:	0800225d 	.word	0x0800225d
 8002368:	240045a8 	.word	0x240045a8

0800236c <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 800236c:	4801      	ldr	r0, [pc, #4]	; (8002374 <touchgfx_taskEntry+0x8>)
 800236e:	f7ff ba89 	b.w	8001884 <_ZN11TouchGFXHAL9taskEntryEv>
 8002372:	bf00      	nop
 8002374:	240045a8 	.word	0x240045a8

08002378 <_GLOBAL__sub_I_touchgfx_init>:
}
 8002378:	b513      	push	{r0, r1, r4, lr}
static STM32DMA dma;
 800237a:	490c      	ldr	r1, [pc, #48]	; (80023ac <_GLOBAL__sub_I_touchgfx_init+0x34>)
{
public:

    STM32TouchController() {}
 800237c:	4b0c      	ldr	r3, [pc, #48]	; (80023b0 <_GLOBAL__sub_I_touchgfx_init+0x38>)
 800237e:	4c0d      	ldr	r4, [pc, #52]	; (80023b4 <_GLOBAL__sub_I_touchgfx_init+0x3c>)
 8002380:	4608      	mov	r0, r1
 8002382:	6023      	str	r3, [r4, #0]
 8002384:	f7ff fd9c 	bl	8001ec0 <_ZN8STM32DMAC1Ev>
static LCD24bpp display;
 8002388:	4a0b      	ldr	r2, [pc, #44]	; (80023b8 <_GLOBAL__sub_I_touchgfx_init+0x40>)
 800238a:	4610      	mov	r0, r2
 800238c:	f015 f894 	bl	80174b8 <_ZN8touchgfx8LCD24bppC1Ev>
static TouchGFXHAL hal(dma, display, tc, 800, 480);
 8002390:	f44f 7348 	mov.w	r3, #800	; 0x320
 8002394:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8002398:	4904      	ldr	r1, [pc, #16]	; (80023ac <_GLOBAL__sub_I_touchgfx_init+0x34>)
 800239a:	4808      	ldr	r0, [pc, #32]	; (80023bc <_GLOBAL__sub_I_touchgfx_init+0x44>)
 800239c:	e9cd 3200 	strd	r3, r2, [sp]
 80023a0:	4623      	mov	r3, r4
 80023a2:	4a05      	ldr	r2, [pc, #20]	; (80023b8 <_GLOBAL__sub_I_touchgfx_init+0x40>)
 80023a4:	f7ff fb02 	bl	80019ac <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
}
 80023a8:	b002      	add	sp, #8
 80023aa:	bd10      	pop	{r4, pc}
 80023ac:	24003808 	.word	0x24003808
 80023b0:	0802137c 	.word	0x0802137c
 80023b4:	24003804 	.word	0x24003804
 80023b8:	24004628 	.word	0x24004628
 80023bc:	240045a8 	.word	0x240045a8

080023c0 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 80023c0:	4801      	ldr	r0, [pc, #4]	; (80023c8 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 80023c2:	f7ff bd31 	b.w	8001e28 <_ZN8STM32DMAD1Ev>
 80023c6:	bf00      	nop
 80023c8:	24003808 	.word	0x24003808

080023cc <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80023cc:	4b02      	ldr	r3, [pc, #8]	; (80023d8 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 80023ce:	2290      	movs	r2, #144	; 0x90
 80023d0:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
}
 80023d4:	4770      	bx	lr
 80023d6:	bf00      	nop
 80023d8:	e000e100 	.word	0xe000e100

080023dc <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:
}

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    //setTFTFrameBuffer() not used for selected display interface
}
 80023dc:	4770      	bx	lr

080023de <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 80023de:	b570      	push	{r4, r5, r6, lr}
 80023e0:	4604      	mov	r4, r0
    HAL::initialize();
 80023e2:	f00a fc6c 	bl	800ccbe <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 80023e6:	6823      	ldr	r3, [r4, #0]
 80023e8:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 80023ea:	f00f fb27 	bl	8011a3c <_ZN8touchgfx11Application11getInstanceEv>
 80023ee:	4601      	mov	r1, r0
 80023f0:	4620      	mov	r0, r4
 80023f2:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)0xD0000000, (void*)0, (void*)0);
 80023f4:	6823      	ldr	r3, [r4, #0]
 80023f6:	4620      	mov	r0, r4
 80023f8:	f04f 4150 	mov.w	r1, #3489660928	; 0xd0000000
 80023fc:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 8002400:	2300      	movs	r3, #0
 8002402:	46ac      	mov	ip, r5
 8002404:	461a      	mov	r2, r3
}
 8002406:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)0xD0000000, (void*)0, (void*)0);
 800240a:	4760      	bx	ip

0800240c <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
    }
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 800240c:	f00a bd63 	b.w	800ced6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08002410 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv.part.0>:
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 8002410:	4910      	ldr	r1, [pc, #64]	; (8002454 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv.part.0+0x44>)
 8002412:	2300      	movs	r3, #0
}

void TouchGFXGeneratedHAL::InvalidateCache()
 8002414:	b570      	push	{r4, r5, r6, lr}
 8002416:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 800241a:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
 800241e:	f8d1 3080 	ldr.w	r3, [r1, #128]	; 0x80
                                            /* clean & invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8002422:	f643 74e0 	movw	r4, #16352	; 0x3fe0
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 8002426:	f3c3 00c9 	ubfx	r0, r3, #3, #10
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 800242a:	f3c3 334e 	ubfx	r3, r3, #13, #15
 800242e:	015b      	lsls	r3, r3, #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8002430:	ea03 0604 	and.w	r6, r3, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 8002434:	4602      	mov	r2, r0
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8002436:	ea46 7582 	orr.w	r5, r6, r2, lsl #30
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
 800243a:	3a01      	subs	r2, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 800243c:	f8c1 5274 	str.w	r5, [r1, #628]	; 0x274
      } while (ways-- != 0U);
 8002440:	d2f9      	bcs.n	8002436 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv.part.0+0x26>
    } while(sets-- != 0U);
 8002442:	3b20      	subs	r3, #32
 8002444:	f113 0f20 	cmn.w	r3, #32
 8002448:	d1f2      	bne.n	8002430 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv.part.0+0x20>
 800244a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800244e:	f3bf 8f6f 	isb	sy
    // "System Core" settings for "Cortex M7" in CubeMX in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
    {
        SCB_CleanInvalidateDCache();
    }
}
 8002452:	bd70      	pop	{r4, r5, r6, pc}
 8002454:	e000ed00 	.word	0xe000ed00

08002458 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:
    if (SCB->CCR & SCB_CCR_DC_Msk)
 8002458:	4b03      	ldr	r3, [pc, #12]	; (8002468 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x10>)
 800245a:	695b      	ldr	r3, [r3, #20]
 800245c:	03db      	lsls	r3, r3, #15
 800245e:	d501      	bpl.n	8002464 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0xc>
 8002460:	f7ff bfd6 	b.w	8002410 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv.part.0>
}
 8002464:	4770      	bx	lr
 8002466:	bf00      	nop
 8002468:	e000ed00 	.word	0xe000ed00

0800246c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:
{
 800246c:	b508      	push	{r3, lr}
    HAL::flushFrameBuffer(rect);
 800246e:	f00a fbd7 	bl	800cc20 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>
    if (SCB->CCR & SCB_CCR_DC_Msk)
 8002472:	4b04      	ldr	r3, [pc, #16]	; (8002484 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE+0x18>)
 8002474:	695b      	ldr	r3, [r3, #20]
 8002476:	03db      	lsls	r3, r3, #15
 8002478:	d503      	bpl.n	8002482 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE+0x16>
}
 800247a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800247e:	f7ff bfc7 	b.w	8002410 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv.part.0>
 8002482:	bd08      	pop	{r3, pc}
 8002484:	e000ed00 	.word	0xe000ed00

08002488 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002488:	4b04      	ldr	r3, [pc, #16]	; (800249c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 800248a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800248e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8002492:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8002496:	f3bf 8f6f 	isb	sy
}
 800249a:	4770      	bx	lr
 800249c:	e000e100 	.word	0xe000e100

080024a0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80024a0:	4b02      	ldr	r3, [pc, #8]	; (80024ac <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 80024a2:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80024a6:	609a      	str	r2, [r3, #8]
}
 80024a8:	4770      	bx	lr
 80024aa:	bf00      	nop
 80024ac:	e000e100 	.word	0xe000e100

080024b0 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const touchgfx::FontId HUGE = 3;    // consolab_160_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 80024b0:	4770      	bx	lr

080024b2 <_ZN23ApplicationFontProviderD0Ev>:
 80024b2:	b510      	push	{r4, lr}
 80024b4:	4604      	mov	r4, r0
 80024b6:	2104      	movs	r1, #4
 80024b8:	f01d fb99 	bl	801fbee <_ZdlPvj>
 80024bc:	4620      	mov	r0, r4
 80024be:	bd10      	pop	{r4, pc}

080024c0 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 80024c0:	b508      	push	{r3, lr}
    switch (typography)
 80024c2:	2903      	cmp	r1, #3
 80024c4:	d813      	bhi.n	80024ee <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 80024c6:	e8df f001 	tbb	[pc, r1]
 80024ca:	0602      	.short	0x0602
 80024cc:	0e0a      	.short	0x0e0a
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 80024ce:	f001 faad 	bl	8003a2c <_ZN17TypedTextDatabase8getFontsEv>
 80024d2:	6800      	ldr	r0, [r0, #0]
        // consolab_160_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    default:
        return 0;
    }
}
 80024d4:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 80024d6:	f001 faa9 	bl	8003a2c <_ZN17TypedTextDatabase8getFontsEv>
 80024da:	6840      	ldr	r0, [r0, #4]
 80024dc:	e7fa      	b.n	80024d4 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 80024de:	f001 faa5 	bl	8003a2c <_ZN17TypedTextDatabase8getFontsEv>
 80024e2:	6880      	ldr	r0, [r0, #8]
 80024e4:	e7f6      	b.n	80024d4 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 80024e6:	f001 faa1 	bl	8003a2c <_ZN17TypedTextDatabase8getFontsEv>
 80024ea:	68c0      	ldr	r0, [r0, #12]
 80024ec:	e7f2      	b.n	80024d4 <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 80024ee:	2000      	movs	r0, #0
 80024f0:	e7f0      	b.n	80024d4 <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

080024f4 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 80024f4:	4800      	ldr	r0, [pc, #0]	; (80024f8 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 80024f6:	4770      	bx	lr
 80024f8:	0802194c 	.word	0x0802194c

080024fc <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 80024fc:	2006      	movs	r0, #6
 80024fe:	4770      	bx	lr

08002500 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8002500:	2000      	movs	r0, #0
 8002502:	4770      	bx	lr

08002504 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8002504:	8081      	strh	r1, [r0, #4]
    }
 8002506:	4770      	bx	lr

08002508 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8002508:	80c1      	strh	r1, [r0, #6]
    }
 800250a:	4770      	bx	lr

0800250c <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 800250c:	8101      	strh	r1, [r0, #8]
    }
 800250e:	4770      	bx	lr

08002510 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8002510:	8141      	strh	r1, [r0, #10]
    }
 8002512:	4770      	bx	lr

08002514 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8002514:	4770      	bx	lr

08002516 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     *
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
    }
 8002516:	4770      	bx	lr

08002518 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     *
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
    }
 8002518:	4770      	bx	lr

0800251a <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     *
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
    }
 800251a:	4770      	bx	lr

0800251c <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 800251c:	4770      	bx	lr

0800251e <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800251e:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8002520:	88c4      	ldrh	r4, [r0, #6]
 8002522:	6803      	ldr	r3, [r0, #0]
 8002524:	1b12      	subs	r2, r2, r4
 8002526:	8884      	ldrh	r4, [r0, #4]
 8002528:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800252a:	1b09      	subs	r1, r1, r4
 800252c:	b212      	sxth	r2, r2
    }
 800252e:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8002532:	b209      	sxth	r1, r1
 8002534:	4718      	bx	r3

08002536 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8002536:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800253a:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 800253c:	f04f 33ff 	mov.w	r3, #4294967295
 8002540:	6203      	str	r3, [r0, #32]
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8002542:	6813      	ldr	r3, [r2, #0]
 8002544:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8002546:	6010      	str	r0, [r2, #0]
    }
 8002548:	4770      	bx	lr

0800254a <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 800254a:	4770      	bx	lr

0800254c <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 800254c:	4770      	bx	lr

0800254e <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 800254e:	4770      	bx	lr

08002550 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002550:	4770      	bx	lr

08002552 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
    }
 8002552:	4770      	bx	lr

08002554 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     */
    virtual void getLastChild(int16_t x, int16_t y, Drawable** last)
    {
        (void)x;
        (void)y;
        if (isVisible() && isTouchable())
 8002554:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002558:	b11a      	cbz	r2, 8002562 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 800255a:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 800255e:	b102      	cbz	r2, 8002562 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8002560:	6018      	str	r0, [r3, #0]
        }
    }
 8002562:	4770      	bx	lr

08002564 <_ZN13BlankViewBaseD1Ev>:

class BlankViewBase : public touchgfx::View<BlankPresenter>
{
public:
    BlankViewBase();
    virtual ~BlankViewBase() {}
 8002564:	4770      	bx	lr

08002566 <_ZN13BlankViewBase11setupScreenEv>:
}

void BlankViewBase::setupScreen()
{

}
 8002566:	4770      	bx	lr

08002568 <_ZN13BlankViewBase15afterTransitionEv>:
void BlankViewBase::afterTransition()
{
    //blankScreenWait
    //When screen transition ends delay
    //Delay for 10000 ms (600 Ticks)
    blankScreenWaitCounter = BLANKSCREENWAIT_DURATION;
 8002568:	f44f 7316 	mov.w	r3, #600	; 0x258
 800256c:	f8a0 306c 	strh.w	r3, [r0, #108]	; 0x6c
}
 8002570:	4770      	bx	lr

08002572 <_ZN13BlankViewBaseD0Ev>:
 8002572:	b510      	push	{r4, lr}
 8002574:	4604      	mov	r4, r0
 8002576:	2170      	movs	r1, #112	; 0x70
 8002578:	f01d fb39 	bl	801fbee <_ZdlPvj>
 800257c:	4620      	mov	r0, r4
 800257e:	bd10      	pop	{r4, pc}

08002580 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8002580:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002584:	b112      	cbz	r2, 800258c <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 8002586:	6803      	ldr	r3, [r0, #0]
 8002588:	695b      	ldr	r3, [r3, #20]
 800258a:	4718      	bx	r3
    }
 800258c:	4770      	bx	lr

0800258e <_ZN13BlankViewBase15handleTickEventEv>:
{
 800258e:	b508      	push	{r3, lr}
    if(blankScreenWaitCounter > 0)
 8002590:	f8b0 306c 	ldrh.w	r3, [r0, #108]	; 0x6c
 8002594:	b153      	cbz	r3, 80025ac <_ZN13BlankViewBase15handleTickEventEv+0x1e>
        blankScreenWaitCounter--;
 8002596:	3b01      	subs	r3, #1
 8002598:	b29b      	uxth	r3, r3
 800259a:	f8a0 306c 	strh.w	r3, [r0, #108]	; 0x6c
        if(blankScreenWaitCounter == 0)
 800259e:	b92b      	cbnz	r3, 80025ac <_ZN13BlankViewBase15handleTickEventEv+0x1e>
    virtual void handleTickEvent();
    virtual void afterTransition();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80025a0:	f00f fa4c 	bl	8011a3c <_ZN8touchgfx11Application11getInstanceEv>
}
 80025a4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
            application().gotoInitialScreenNoTransition();
 80025a8:	f000 bdf0 	b.w	800318c <_ZN23FrontendApplicationBase29gotoInitialScreenNoTransitionEv>
}
 80025ac:	bd08      	pop	{r3, pc}
	...

080025b0 <_ZN13BlankViewBaseC1Ev>:
BlankViewBase::BlankViewBase() :
 80025b0:	b538      	push	{r3, r4, r5, lr}
 80025b2:	4604      	mov	r4, r0
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 80025b4:	f010 fd96 	bl	80130e4 <_ZN8touchgfx6ScreenC1Ev>
 80025b8:	2300      	movs	r3, #0
    blankScreenWaitCounter(0)
 80025ba:	4a16      	ldr	r2, [pc, #88]	; (8002614 <_ZN13BlankViewBaseC1Ev+0x64>)
 80025bc:	4625      	mov	r5, r4
        setWidth(width);
 80025be:	f44f 7148 	mov.w	r1, #800	; 0x320
 80025c2:	63e3      	str	r3, [r4, #60]	; 0x3c
 80025c4:	f845 2b40 	str.w	r2, [r5], #64
 80025c8:	4628      	mov	r0, r5
        : color(col)
 80025ca:	66a3      	str	r3, [r4, #104]	; 0x68
 80025cc:	f8a4 306c 	strh.w	r3, [r4, #108]	; 0x6c
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 80025d0:	4a11      	ldr	r2, [pc, #68]	; (8002618 <_ZN13BlankViewBaseC1Ev+0x68>)
        : x(0), y(0), width(0), height(0)
 80025d2:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
 80025d6:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
          visible(true)
 80025da:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
 80025de:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
 80025e2:	f44f 7380 	mov.w	r3, #256	; 0x100
 80025e6:	6422      	str	r2, [r4, #64]	; 0x40
 80025e8:	f8a4 3064 	strh.w	r3, [r4, #100]	; 0x64
 80025ec:	23ff      	movs	r3, #255	; 0xff
 80025ee:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
        setWidth(width);
 80025f2:	f7ff ff8b 	bl	800250c <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 80025f6:	4628      	mov	r0, r5
 80025f8:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 80025fc:	f7ff ff88 	bl	8002510 <_ZN8touchgfx8Drawable9setHeightEs>
     *
     * @see getColor, Color::getColorFrom24BitRGB
     */
    void setColor(colortype color)
    {
        this->color = color;
 8002600:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8002604:	1d20      	adds	r0, r4, #4
 8002606:	4629      	mov	r1, r5
 8002608:	66a3      	str	r3, [r4, #104]	; 0x68
 800260a:	f00a f8b1 	bl	800c770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800260e:	4620      	mov	r0, r4
 8002610:	bd38      	pop	{r3, r4, r5, pc}
 8002612:	bf00      	nop
 8002614:	080219cc 	.word	0x080219cc
 8002618:	08023f74 	.word	0x08023f74

0800261c <_ZN12BoomViewBaseD1Ev>:

class BoomViewBase : public touchgfx::View<BoomPresenter>
{
public:
    BoomViewBase();
    virtual ~BoomViewBase() {}
 800261c:	4770      	bx	lr

0800261e <_ZN12BoomViewBase11setupScreenEv>:
}

void BoomViewBase::setupScreen()
{

}
 800261e:	4770      	bx	lr

08002620 <_ZN12BoomViewBase15afterTransitionEv>:
void BoomViewBase::afterTransition()
{
    //wait10seconds
    //When screen transition ends delay
    //Delay for 10000 ms (600 Ticks)
    wait10secondsCounter = WAIT10SECONDS_DURATION;
 8002620:	f44f 7316 	mov.w	r3, #600	; 0x258
 8002624:	f8a0 3098 	strh.w	r3, [r0, #152]	; 0x98
}
 8002628:	4770      	bx	lr

0800262a <_ZN12BoomViewBaseD0Ev>:
 800262a:	b510      	push	{r4, lr}
 800262c:	4604      	mov	r4, r0
 800262e:	219c      	movs	r1, #156	; 0x9c
 8002630:	f01d fadd 	bl	801fbee <_ZdlPvj>
 8002634:	4620      	mov	r0, r4
 8002636:	bd10      	pop	{r4, pc}

08002638 <_ZN12BoomViewBase15handleTickEventEv>:
{
 8002638:	b508      	push	{r3, lr}
    if(wait10secondsCounter > 0)
 800263a:	f8b0 3098 	ldrh.w	r3, [r0, #152]	; 0x98
 800263e:	b153      	cbz	r3, 8002656 <_ZN12BoomViewBase15handleTickEventEv+0x1e>
        wait10secondsCounter--;
 8002640:	3b01      	subs	r3, #1
 8002642:	b29b      	uxth	r3, r3
 8002644:	f8a0 3098 	strh.w	r3, [r0, #152]	; 0x98
        if(wait10secondsCounter == 0)
 8002648:	b92b      	cbnz	r3, 8002656 <_ZN12BoomViewBase15handleTickEventEv+0x1e>
    virtual void handleTickEvent();
    virtual void afterTransition();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800264a:	f00f f9f7 	bl	8011a3c <_ZN8touchgfx11Application11getInstanceEv>
}
 800264e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
            application().gotoBlankScreenBlockTransition();
 8002652:	f000 bdcb 	b.w	80031ec <_ZN23FrontendApplicationBase30gotoBlankScreenBlockTransitionEv>
}
 8002656:	bd08      	pop	{r3, pc}

08002658 <_ZN8touchgfx8Drawable5setXYEss>:
        setX(x);
 8002658:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 800265a:	b570      	push	{r4, r5, r6, lr}
 800265c:	4604      	mov	r4, r0
        setX(x);
 800265e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8002660:	4615      	mov	r5, r2
        setX(x);
 8002662:	4798      	blx	r3
        setY(y);
 8002664:	6823      	ldr	r3, [r4, #0]
 8002666:	4620      	mov	r0, r4
 8002668:	4629      	mov	r1, r5
 800266a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 800266c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002670:	4718      	bx	r3
	...

08002674 <_ZN12BoomViewBaseC1Ev>:
BoomViewBase::BoomViewBase() :
 8002674:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002676:	4604      	mov	r4, r0
 8002678:	b085      	sub	sp, #20
 800267a:	f010 fd33 	bl	80130e4 <_ZN8touchgfx6ScreenC1Ev>
 800267e:	2500      	movs	r5, #0
    wait10secondsCounter(0)
 8002680:	4626      	mov	r6, r4
 8002682:	4b2e      	ldr	r3, [pc, #184]	; (800273c <_ZN12BoomViewBaseC1Ev+0xc8>)
 8002684:	63e5      	str	r5, [r4, #60]	; 0x3c
          visible(true)
 8002686:	f44f 7280 	mov.w	r2, #256	; 0x100
 800268a:	f846 3b40 	str.w	r3, [r6], #64
 800268e:	f104 076c 	add.w	r7, r4, #108	; 0x6c
        : Widget(), alpha(255), color(0)
 8002692:	4b2b      	ldr	r3, [pc, #172]	; (8002740 <_ZN12BoomViewBaseC1Ev+0xcc>)
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
    {
        Image::setBitmap(bmp);
 8002694:	a903      	add	r1, sp, #12
 8002696:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
 800269a:	4638      	mov	r0, r7
 800269c:	f8a4 2090 	strh.w	r2, [r4, #144]	; 0x90
        : Widget(), bitmap(bmp), alpha(255)
 80026a0:	4a28      	ldr	r2, [pc, #160]	; (8002744 <_ZN12BoomViewBaseC1Ev+0xd0>)
 80026a2:	6625      	str	r5, [r4, #96]	; 0x60
 80026a4:	66e2      	str	r2, [r4, #108]	; 0x6c
        : color(col)
 80026a6:	66a5      	str	r5, [r4, #104]	; 0x68
        : x(0), y(0), width(0), height(0)
 80026a8:	e9c4 3510 	strd	r3, r5, [r4, #64]	; 0x40
 80026ac:	23ff      	movs	r3, #255	; 0xff
 80026ae:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 80026b2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80026b6:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80026ba:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 80026be:	f884 3094 	strb.w	r3, [r4, #148]	; 0x94
 80026c2:	f8ad 300c 	strh.w	r3, [sp, #12]
 80026c6:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
 80026ca:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
 80026ce:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 80026d2:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
 80026d6:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 80026da:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
        Image::setBitmap(bmp);
 80026de:	f00d fb8a 	bl	800fdf6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        setXY(x, y);
 80026e2:	462a      	mov	r2, r5
 80026e4:	4629      	mov	r1, r5
 80026e6:	4630      	mov	r0, r6
 80026e8:	f8a4 5098 	strh.w	r5, [r4, #152]	; 0x98
 80026ec:	f7ff ffb4 	bl	8002658 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 80026f0:	4630      	mov	r0, r6
 80026f2:	f44f 7148 	mov.w	r1, #800	; 0x320
 80026f6:	f7ff ff09 	bl	800250c <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 80026fa:	4630      	mov	r0, r6
 80026fc:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 8002700:	f7ff ff06 	bl	8002510 <_ZN8touchgfx8Drawable9setHeightEs>
        this->color = color;
 8002704:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
    nuke.setXY(0, 0);
 8002708:	462a      	mov	r2, r5
 800270a:	4629      	mov	r1, r5
 800270c:	4638      	mov	r0, r7
 800270e:	66a3      	str	r3, [r4, #104]	; 0x68
 8002710:	f7ff ffa2 	bl	8002658 <_ZN8touchgfx8Drawable5setXYEss>
 8002714:	2305      	movs	r3, #5
    nuke.setBitmap(touchgfx::Bitmap(BITMAP_NUKE_800X480_ID));
 8002716:	a903      	add	r1, sp, #12
 8002718:	4638      	mov	r0, r7
 800271a:	f8ad 300c 	strh.w	r3, [sp, #12]
 800271e:	f00d fb6a 	bl	800fdf6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002722:	1d20      	adds	r0, r4, #4
 8002724:	4631      	mov	r1, r6
 8002726:	9001      	str	r0, [sp, #4]
 8002728:	f00a f822 	bl	800c770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800272c:	9801      	ldr	r0, [sp, #4]
 800272e:	4639      	mov	r1, r7
 8002730:	f00a f81e 	bl	800c770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002734:	4620      	mov	r0, r4
 8002736:	b005      	add	sp, #20
 8002738:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800273a:	bf00      	nop
 800273c:	08021a00 	.word	0x08021a00
 8002740:	08023f74 	.word	0x08023f74
 8002744:	080241a4 	.word	0x080241a4

08002748 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002748:	b513      	push	{r0, r1, r4, lr}
 800274a:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 800274c:	b151      	cbz	r1, 8002764 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800274e:	6803      	ldr	r3, [r0, #0]
 8002750:	aa01      	add	r2, sp, #4
        const uint8_t* dummyPixelDataPointer = 0;
 8002752:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002754:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002758:	689c      	ldr	r4, [r3, #8]
 800275a:	f10d 0303 	add.w	r3, sp, #3
 800275e:	47a0      	blx	r4
        return glyph;
    }
 8002760:	b002      	add	sp, #8
 8002762:	bd10      	pop	{r4, pc}
            return 0;
 8002764:	4608      	mov	r0, r1
 8002766:	e7fb      	b.n	8002760 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002768 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002768:	8940      	ldrh	r0, [r0, #10]
 800276a:	4770      	bx	lr

0800276c <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 800276c:	8980      	ldrh	r0, [r0, #12]
 800276e:	4770      	bx	lr

08002770 <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 8002770:	8880      	ldrh	r0, [r0, #4]
 8002772:	4770      	bx	lr

08002774 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 8002774:	7983      	ldrb	r3, [r0, #6]
 8002776:	8880      	ldrh	r0, [r0, #4]
 8002778:	4418      	add	r0, r3
    }
 800277a:	b280      	uxth	r0, r0
 800277c:	4770      	bx	lr

0800277e <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 800277e:	79c0      	ldrb	r0, [r0, #7]
    }
 8002780:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8002784:	4770      	bx	lr

08002786 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002786:	79c0      	ldrb	r0, [r0, #7]
    }
 8002788:	09c0      	lsrs	r0, r0, #7
 800278a:	4770      	bx	lr

0800278c <_ZN8touchgfx9TypedTextD1Ev>:
    }
 800278c:	4770      	bx	lr

0800278e <_ZN17CountdownViewBaseD1Ev>:

class CountdownViewBase : public touchgfx::View<CountdownPresenter>
{
public:
    CountdownViewBase();
    virtual ~CountdownViewBase() {}
 800278e:	4770      	bx	lr

08002790 <_ZN17CountdownViewBase11setupScreenEv>:
}

void CountdownViewBase::setupScreen()
{

}
 8002790:	4770      	bx	lr

08002792 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8002792:	b510      	push	{r4, lr}
 8002794:	4604      	mov	r4, r0
    }
 8002796:	2108      	movs	r1, #8
 8002798:	f01d fa29 	bl	801fbee <_ZdlPvj>
 800279c:	4620      	mov	r0, r4
 800279e:	bd10      	pop	{r4, pc}

080027a0 <_ZN17CountdownViewBaseD0Ev>:
 80027a0:	b510      	push	{r4, lr}
 80027a2:	4604      	mov	r4, r0
 80027a4:	f44f 7182 	mov.w	r1, #260	; 0x104
 80027a8:	f01d fa21 	bl	801fbee <_ZdlPvj>
 80027ac:	4620      	mov	r0, r4
 80027ae:	bd10      	pop	{r4, pc}

080027b0 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80027b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80027b4:	461d      	mov	r5, r3
        setX(x);
 80027b6:	6803      	ldr	r3, [r0, #0]
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80027b8:	4604      	mov	r4, r0
 80027ba:	4616      	mov	r6, r2
        setX(x);
 80027bc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80027be:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
        setX(x);
 80027c2:	4798      	blx	r3
        setY(y);
 80027c4:	6823      	ldr	r3, [r4, #0]
 80027c6:	4631      	mov	r1, r6
 80027c8:	4620      	mov	r0, r4
 80027ca:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80027cc:	4798      	blx	r3
        setWidth(width);
 80027ce:	6823      	ldr	r3, [r4, #0]
 80027d0:	4629      	mov	r1, r5
 80027d2:	4620      	mov	r0, r4
 80027d4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80027d6:	4798      	blx	r3
        setHeight(height);
 80027d8:	6823      	ldr	r3, [r4, #0]
 80027da:	4639      	mov	r1, r7
 80027dc:	4620      	mov	r0, r4
 80027de:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 80027e0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        setHeight(height);
 80027e4:	4718      	bx	r3
	...

080027e8 <_ZN17CountdownViewBaseC1Ev>:
CountdownViewBase::CountdownViewBase()
 80027e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80027ea:	4604      	mov	r4, r0
 80027ec:	b087      	sub	sp, #28
 80027ee:	f010 fc79 	bl	80130e4 <_ZN8touchgfx6ScreenC1Ev>
 80027f2:	2500      	movs	r5, #0
 80027f4:	4627      	mov	r7, r4
 80027f6:	4b2b      	ldr	r3, [pc, #172]	; (80028a4 <_ZN17CountdownViewBaseC1Ev+0xbc>)
 80027f8:	63e5      	str	r5, [r4, #60]	; 0x3c
 80027fa:	f104 066c 	add.w	r6, r4, #108	; 0x6c
 80027fe:	f847 3b40 	str.w	r3, [r7], #64
        : Widget(), alpha(255), color(0)
 8002802:	4b29      	ldr	r3, [pc, #164]	; (80028a8 <_ZN17CountdownViewBaseC1Ev+0xc0>)
 8002804:	4630      	mov	r0, r6
          visible(true)
 8002806:	6625      	str	r5, [r4, #96]	; 0x60
        : color(col)
 8002808:	66a5      	str	r5, [r4, #104]	; 0x68
        : x(0), y(0), width(0), height(0)
 800280a:	e9c4 3510 	strd	r3, r5, [r4, #64]	; 0x40
 800280e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8002812:	f8a4 3064 	strh.w	r3, [r4, #100]	; 0x64
 8002816:	23ff      	movs	r3, #255	; 0xff
 8002818:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 800281c:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 8002820:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
 8002824:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
 8002828:	f009 fe70 	bl	800c50c <_ZN8touchgfx12DigitalClockC1Ev>
    __background.setPosition(0, 0, 800, 480);
 800282c:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 8002830:	462a      	mov	r2, r5
 8002832:	4629      	mov	r1, r5
 8002834:	4638      	mov	r0, r7
 8002836:	9300      	str	r3, [sp, #0]
 8002838:	f44f 7348 	mov.w	r3, #800	; 0x320
 800283c:	f7ff ffb8 	bl	80027b0 <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 8002840:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
    clock.setPosition(48, 142, 705, 196);
 8002844:	228e      	movs	r2, #142	; 0x8e
 8002846:	4630      	mov	r0, r6
 8002848:	66a3      	str	r3, [r4, #104]	; 0x68
 800284a:	23c4      	movs	r3, #196	; 0xc4
 800284c:	2130      	movs	r1, #48	; 0x30
 800284e:	9300      	str	r3, [sp, #0]
 8002850:	f240 23c1 	movw	r3, #705	; 0x2c1
 8002854:	f7ff ffac 	bl	80027b0 <_ZN8touchgfx8Drawable11setPositionEssss>
    clock.setColor(touchgfx::Color::getColorFromRGB(255, 0, 0));
 8002858:	4630      	mov	r0, r6
 800285a:	4914      	ldr	r1, [pc, #80]	; (80028ac <_ZN17CountdownViewBaseC1Ev+0xc4>)
 800285c:	f009 fd0e 	bl	800c27c <_ZN8touchgfx12DigitalClock8setColorENS_9colortypeE>
        : typedTextId(id)
 8002860:	4b13      	ldr	r3, [pc, #76]	; (80028b0 <_ZN17CountdownViewBaseC1Ev+0xc8>)
    clock.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3MZV));
 8002862:	a904      	add	r1, sp, #16
 8002864:	4630      	mov	r0, r6
 8002866:	9304      	str	r3, [sp, #16]
 8002868:	f8ad 5014 	strh.w	r5, [sp, #20]
 800286c:	f009 fd52 	bl	800c314 <_ZN8touchgfx12DigitalClock12setTypedTextENS_9TypedTextE>
    clock.displayLeadingZeroForHourIndicator(true);
 8002870:	4630      	mov	r0, r6
 8002872:	2101      	movs	r1, #1
 8002874:	f009 fe98 	bl	800c5a8 <_ZN8touchgfx12DigitalClock34displayLeadingZeroForHourIndicatorEb>
     *
     * @see DisplayMode, getDisplayMode
     */
    virtual void setDisplayMode(DisplayMode dm)
    {
        displayMode = dm;
 8002878:	2303      	movs	r3, #3
    clock.setTime24Hour(0, 0, 10);
 800287a:	462a      	mov	r2, r5
 800287c:	4629      	mov	r1, r5
 800287e:	4630      	mov	r0, r6
 8002880:	f884 309b 	strb.w	r3, [r4, #155]	; 0x9b
 8002884:	230a      	movs	r3, #10
 8002886:	f009 fe92 	bl	800c5ae <_ZN8touchgfx13AbstractClock13setTime24HourEhhh>
 800288a:	1d20      	adds	r0, r4, #4
 800288c:	4639      	mov	r1, r7
 800288e:	9003      	str	r0, [sp, #12]
 8002890:	f009 ff6e 	bl	800c770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002894:	9803      	ldr	r0, [sp, #12]
 8002896:	4631      	mov	r1, r6
 8002898:	f009 ff6a 	bl	800c770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800289c:	4620      	mov	r0, r4
 800289e:	b007      	add	sp, #28
 80028a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80028a2:	bf00      	nop
 80028a4:	08021a44 	.word	0x08021a44
 80028a8:	08023f74 	.word	0x08023f74
 80028ac:	ffff0000 	.word	0xffff0000
 80028b0:	08021a34 	.word	0x08021a34

080028b4 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 80028b4:	4770      	bx	lr

080028b6 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
    }
 80028b6:	4770      	bx	lr

080028b8 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 80028b8:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 80028bc:	6808      	ldr	r0, [r1, #0]
 80028be:	6849      	ldr	r1, [r1, #4]
 80028c0:	c303      	stmia	r3!, {r0, r1}
    }
 80028c2:	4770      	bx	lr

080028c4 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80028c4:	4770      	bx	lr

080028c6 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80028c6:	4770      	bx	lr

080028c8 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 80028c8:	6041      	str	r1, [r0, #4]
    }
 80028ca:	4770      	bx	lr

080028cc <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80028cc:	4770      	bx	lr
	...

080028d0 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80028d0:	4b06      	ldr	r3, [pc, #24]	; (80028ec <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 80028d2:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 80028d6:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 80028da:	2300      	movs	r3, #0
 80028dc:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Initial

void FrontendApplicationBase::gotoInitialScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoInitialScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80028e0:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 80028e4:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c

    virtual void changeToStartScreen()
    {
        gotoInitialScreenNoTransition();
    }
 80028e8:	4770      	bx	lr
 80028ea:	bf00      	nop
 80028ec:	08002ef5 	.word	0x08002ef5

080028f0 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 80028f0:	2301      	movs	r3, #1
 80028f2:	7203      	strb	r3, [r0, #8]
    }
 80028f4:	4770      	bx	lr

080028f6 <_ZN8touchgfx15BlockTransition8tearDownEv>:
        }
    }

    virtual void tearDown()
    {
    }
 80028f6:	4770      	bx	lr

080028f8 <_ZN8touchgfx15BlockTransition4initEv>:

    virtual void init()
    {
        Transition::init();
    }
 80028f8:	4770      	bx	lr

080028fa <_ZN8touchgfx15BlockTransition10invalidateEv>:
     * Block transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 80028fa:	4770      	bx	lr

080028fc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectD1Ev>:
{
public:
    /**
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
 80028fc:	4770      	bx	lr

080028fe <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
class WipeTransition : public Transition
 80028fe:	4770      	bx	lr

08002900 <_ZN8touchgfx15BlockTransitionD1Ev>:
class BlockTransition : public Transition
 8002900:	4770      	bx	lr

08002902 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8002902:	4770      	bx	lr

08002904 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 8002904:	4770      	bx	lr

08002906 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
            // Copy rect from tft to client framebuffer
            HAL::getInstance()->lcd().blitCopy((const uint16_t*)tftFb, source, rect, 255, false);
        }
    }

    virtual void tearDown()
 8002906:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 8002908:	6840      	ldr	r0, [r0, #4]
 800290a:	6803      	ldr	r3, [r0, #0]
 800290c:	3110      	adds	r1, #16
 800290e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8002910:	4718      	bx	r3

08002912 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    }

    virtual void init()
 8002912:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 8002914:	6840      	ldr	r0, [r0, #4]
 8002916:	6803      	ldr	r3, [r0, #0]
 8002918:	3110      	adds	r1, #16
 800291a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800291c:	4718      	bx	r3

0800291e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 800291e:	4770      	bx	lr

08002920 <_ZNK8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRect4drawERKNS_4RectE>:
        }
 8002920:	4770      	bx	lr

08002922 <_ZNK8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRect12getSolidRectEv>:
     * @param  y      The y coordinate.
     * @param  width  The width.
     * @param  height The height.
     */
    Rect(int16_t x, int16_t y, int16_t width, int16_t height)
        : x(x), y(y), width(width), height(height)
 8002922:	2200      	movs	r2, #0
        virtual Rect getSolidRect() const
 8002924:	b510      	push	{r4, lr}
            return Rect(0U, 0U, rect.width, rect.height);
 8002926:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 800292a:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 800292e:	8002      	strh	r2, [r0, #0]
 8002930:	8042      	strh	r2, [r0, #2]
 8002932:	8084      	strh	r4, [r0, #4]
 8002934:	80c1      	strh	r1, [r0, #6]
        }
 8002936:	bd10      	pop	{r4, pc}

08002938 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8002938:	b410      	push	{r4}
    {
        (pobject->*pmemfun_0)();
 800293a:	6841      	ldr	r1, [r0, #4]
    virtual void execute()
 800293c:	4603      	mov	r3, r0
        (pobject->*pmemfun_0)();
 800293e:	68c2      	ldr	r2, [r0, #12]
 8002940:	689b      	ldr	r3, [r3, #8]
 8002942:	1054      	asrs	r4, r2, #1
 8002944:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8002948:	07d2      	lsls	r2, r2, #31
 800294a:	bf48      	it	mi
 800294c:	590a      	ldrmi	r2, [r1, r4]
    }
 800294e:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun_0)();
 8002952:	bf48      	it	mi
 8002954:	58d3      	ldrmi	r3, [r2, r3]
 8002956:	4718      	bx	r3

08002958 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun_0 != 0);
 8002958:	6843      	ldr	r3, [r0, #4]
 800295a:	b12b      	cbz	r3, 8002968 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 800295c:	6883      	ldr	r3, [r0, #8]
 800295e:	b92b      	cbnz	r3, 800296c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8002960:	68c0      	ldr	r0, [r0, #12]
 8002962:	f000 0001 	and.w	r0, r0, #1
 8002966:	4770      	bx	lr
 8002968:	4618      	mov	r0, r3
 800296a:	4770      	bx	lr
 800296c:	2001      	movs	r0, #1
    }
 800296e:	4770      	bx	lr

08002970 <_ZN8touchgfx15BlockTransitionD0Ev>:
 8002970:	b510      	push	{r4, lr}
 8002972:	4604      	mov	r4, r0
 8002974:	2114      	movs	r1, #20
 8002976:	f01d f93a 	bl	801fbee <_ZdlPvj>
 800297a:	4620      	mov	r0, r4
 800297c:	bd10      	pop	{r4, pc}

0800297e <_ZN8touchgfx12NoTransitionD0Ev>:
 800297e:	b510      	push	{r4, lr}
 8002980:	4604      	mov	r4, r0
 8002982:	210c      	movs	r1, #12
 8002984:	f01d f933 	bl	801fbee <_ZdlPvj>
 8002988:	4620      	mov	r0, r4
 800298a:	bd10      	pop	{r4, pc}

0800298c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800298c:	b510      	push	{r4, lr}
 800298e:	4604      	mov	r4, r0
 8002990:	2110      	movs	r1, #16
 8002992:	f01d f92c 	bl	801fbee <_ZdlPvj>
 8002996:	4620      	mov	r0, r4
 8002998:	bd10      	pop	{r4, pc}

0800299a <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 800299a:	b510      	push	{r4, lr}
 800299c:	4604      	mov	r4, r0
 800299e:	f44f 71ac 	mov.w	r1, #344	; 0x158
 80029a2:	f01d f924 	bl	801fbee <_ZdlPvj>
 80029a6:	4620      	mov	r0, r4
 80029a8:	bd10      	pop	{r4, pc}

080029aa <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
class WipeTransition : public Transition
 80029aa:	b510      	push	{r4, lr}
 80029ac:	4604      	mov	r4, r0
 80029ae:	2138      	movs	r1, #56	; 0x38
 80029b0:	f01d f91d 	bl	801fbee <_ZdlPvj>
 80029b4:	4620      	mov	r0, r4
 80029b6:	bd10      	pop	{r4, pc}

080029b8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectD0Ev>:
    class FullSolidRect : public Widget
 80029b8:	b510      	push	{r4, lr}
 80029ba:	4604      	mov	r4, r0
 80029bc:	2128      	movs	r1, #40	; 0x28
 80029be:	f01d f916 	bl	801fbee <_ZdlPvj>
 80029c2:	4620      	mov	r0, r4
 80029c4:	bd10      	pop	{r4, pc}
	...

080029c8 <_ZN8touchgfx15BlockTransition15handleTickEventEv>:
    virtual void handleTickEvent()
 80029c8:	b570      	push	{r4, r5, r6, lr}
 80029ca:	b0b2      	sub	sp, #200	; 0xc8
 80029cc:	4604      	mov	r4, r0
        const int indeces[blocks] = { 20, 11, 47, 14, 10, 0, 18, 28, 13, 6, 2, 41,
 80029ce:	22c0      	movs	r2, #192	; 0xc0
 80029d0:	491d      	ldr	r1, [pc, #116]	; (8002a48 <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x80>)
 80029d2:	a802      	add	r0, sp, #8
 80029d4:	f01d fb82 	bl	80200dc <memcpy>
        if (animationCounter == 0 && HAL::USE_DOUBLE_BUFFERING)
 80029d8:	7c23      	ldrb	r3, [r4, #16]
 80029da:	bb6b      	cbnz	r3, 8002a38 <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x70>
 80029dc:	4b1b      	ldr	r3, [pc, #108]	; (8002a4c <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x84>)
 80029de:	781b      	ldrb	r3, [r3, #0]
 80029e0:	bb33      	cbnz	r3, 8002a30 <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x68>
    virtual void handleTickEvent()
 80029e2:	2503      	movs	r5, #3
            while (blocks_per_tick-- > 0 && animationCounter < blocks)
 80029e4:	3d01      	subs	r5, #1
 80029e6:	d02c      	beq.n	8002a42 <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x7a>
 80029e8:	7c23      	ldrb	r3, [r4, #16]
 80029ea:	2b2f      	cmp	r3, #47	; 0x2f
 80029ec:	d829      	bhi.n	8002a42 <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x7a>
                const int index = indeces[animationCounter];
 80029ee:	aa32      	add	r2, sp, #200	; 0xc8
                const int16_t x = (index % blocksHorizontal) * blockWidth;
 80029f0:	89e6      	ldrh	r6, [r4, #14]
 80029f2:	8960      	ldrh	r0, [r4, #10]
                const int index = indeces[animationCounter];
 80029f4:	eb02 0383 	add.w	r3, r2, r3, lsl #2
                const int16_t y = (index / blocksHorizontal) * blockHeight;
 80029f8:	89a1      	ldrh	r1, [r4, #12]
 80029fa:	f8ad 0004 	strh.w	r0, [sp, #4]
                const int index = indeces[animationCounter];
 80029fe:	f853 3cc0 	ldr.w	r3, [r3, #-192]
 8002a02:	f8ad 1006 	strh.w	r1, [sp, #6]
                const int16_t x = (index % blocksHorizontal) * blockWidth;
 8002a06:	fb93 f2f6 	sdiv	r2, r3, r6
 8002a0a:	fb06 3312 	mls	r3, r6, r2, r3
                const int16_t y = (index / blocksHorizontal) * blockHeight;
 8002a0e:	fb12 f201 	smulbb	r2, r2, r1
                screenContainer->invalidateRect(invRect);
 8002a12:	4669      	mov	r1, sp
                const int16_t x = (index % blocksHorizontal) * blockWidth;
 8002a14:	fb13 f300 	smulbb	r3, r3, r0
                screenContainer->invalidateRect(invRect);
 8002a18:	6860      	ldr	r0, [r4, #4]
 8002a1a:	f8ad 2002 	strh.w	r2, [sp, #2]
 8002a1e:	f8ad 3000 	strh.w	r3, [sp]
 8002a22:	6803      	ldr	r3, [r0, #0]
 8002a24:	691b      	ldr	r3, [r3, #16]
 8002a26:	4798      	blx	r3
                animationCounter++;
 8002a28:	7c23      	ldrb	r3, [r4, #16]
 8002a2a:	3301      	adds	r3, #1
 8002a2c:	7423      	strb	r3, [r4, #16]
            while (blocks_per_tick-- > 0 && animationCounter < blocks)
 8002a2e:	e7d9      	b.n	80029e4 <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x1c>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8002a30:	f00f f804 	bl	8011a3c <_ZN8touchgfx11Application11getInstanceEv>
 8002a34:	f00f f85c 	bl	8011af0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
        if (animationCounter < blocks)
 8002a38:	7c23      	ldrb	r3, [r4, #16]
 8002a3a:	2b2f      	cmp	r3, #47	; 0x2f
 8002a3c:	d9d1      	bls.n	80029e2 <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x1a>
            done = true;
 8002a3e:	2301      	movs	r3, #1
 8002a40:	7223      	strb	r3, [r4, #8]
    }
 8002a42:	b032      	add	sp, #200	; 0xc8
 8002a44:	bd70      	pop	{r4, r5, r6, pc}
 8002a46:	bf00      	nop
 8002a48:	08021190 	.word	0x08021190
 8002a4c:	2400e0b2 	.word	0x2400e0b2

08002a50 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8002a50:	b508      	push	{r3, lr}
        Application::getInstance()->invalidate();
 8002a52:	f00e fff3 	bl	8011a3c <_ZN8touchgfx11Application11getInstanceEv>
    }
 8002a56:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        Application::getInstance()->invalidate();
 8002a5a:	f00f bc29 	b.w	80122b0 <_ZN8touchgfx11Application10invalidateEv>

08002a5e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8002a5e:	b510      	push	{r4, lr}
 8002a60:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8002a62:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 8002a66:	b158      	cbz	r0, 8002a80 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8002a68:	6803      	ldr	r3, [r0, #0]
 8002a6a:	68db      	ldr	r3, [r3, #12]
 8002a6c:	4798      	blx	r3
 8002a6e:	b138      	cbz	r0, 8002a80 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8002a70:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 8002a74:	6803      	ldr	r3, [r0, #0]
 8002a76:	689b      	ldr	r3, [r3, #8]
 8002a78:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8002a7a:	2300      	movs	r3, #0
 8002a7c:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 8002a80:	bd10      	pop	{r4, pc}
	...

08002a84 <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoBlankScreenBlockTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoBlankScreenBlockTransitionImpl()
{
 8002a84:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<BlankView, BlankPresenter, touchgfx::BlockTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002a88:	e9d0 6954 	ldrd	r6, r9, [r0, #336]	; 0x150
{
 8002a8c:	4605      	mov	r5, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002a8e:	68b0      	ldr	r0, [r6, #8]
 8002a90:	6803      	ldr	r3, [r0, #0]
 8002a92:	6a1b      	ldr	r3, [r3, #32]
 8002a94:	4798      	blx	r3
 8002a96:	286f      	cmp	r0, #111	; 0x6f
 8002a98:	d805      	bhi.n	8002aa6 <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv+0x22>
 8002a9a:	4b50      	ldr	r3, [pc, #320]	; (8002bdc <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv+0x158>)
 8002a9c:	21a3      	movs	r1, #163	; 0xa3
 8002a9e:	4a50      	ldr	r2, [pc, #320]	; (8002be0 <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv+0x15c>)
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002aa0:	4850      	ldr	r0, [pc, #320]	; (8002be4 <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv+0x160>)
 8002aa2:	f01d fa9d 	bl	801ffe0 <__assert_func>
 8002aa6:	6870      	ldr	r0, [r6, #4]
 8002aa8:	6803      	ldr	r3, [r0, #0]
 8002aaa:	6a1b      	ldr	r3, [r3, #32]
 8002aac:	4798      	blx	r3
 8002aae:	280f      	cmp	r0, #15
 8002ab0:	d803      	bhi.n	8002aba <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv+0x36>
 8002ab2:	4b4d      	ldr	r3, [pc, #308]	; (8002be8 <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv+0x164>)
 8002ab4:	21a4      	movs	r1, #164	; 0xa4
 8002ab6:	4a4a      	ldr	r2, [pc, #296]	; (8002be0 <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv+0x15c>)
 8002ab8:	e7f2      	b.n	8002aa0 <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002aba:	68f0      	ldr	r0, [r6, #12]
 8002abc:	6803      	ldr	r3, [r0, #0]
 8002abe:	6a1b      	ldr	r3, [r3, #32]
 8002ac0:	4798      	blx	r3
 8002ac2:	2813      	cmp	r0, #19
 8002ac4:	d803      	bhi.n	8002ace <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv+0x4a>
 8002ac6:	4b49      	ldr	r3, [pc, #292]	; (8002bec <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv+0x168>)
 8002ac8:	21a5      	movs	r1, #165	; 0xa5
 8002aca:	4a45      	ldr	r2, [pc, #276]	; (8002be0 <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv+0x15c>)
 8002acc:	e7e8      	b.n	8002aa0 <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv+0x1c>
    if (*currentTrans)
 8002ace:	f8df 8130 	ldr.w	r8, [pc, #304]	; 8002c00 <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv+0x17c>
    Application::getInstance()->clearAllTimerWidgets();
 8002ad2:	f00e ffb3 	bl	8011a3c <_ZN8touchgfx11Application11getInstanceEv>
 8002ad6:	f00e ffff 	bl	8011ad8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8002ada:	f8d8 0000 	ldr.w	r0, [r8]
 8002ade:	b110      	cbz	r0, 8002ae6 <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv+0x62>
        (*currentTrans)->tearDown();
 8002ae0:	6803      	ldr	r3, [r0, #0]
 8002ae2:	68db      	ldr	r3, [r3, #12]
 8002ae4:	4798      	blx	r3
    if (*currentTrans)
 8002ae6:	f8d8 0000 	ldr.w	r0, [r8]
 8002aea:	b110      	cbz	r0, 8002af2 <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv+0x6e>
        (*currentTrans)->~Transition();
 8002aec:	6803      	ldr	r3, [r0, #0]
 8002aee:	681b      	ldr	r3, [r3, #0]
 8002af0:	4798      	blx	r3
    if (*currentScreen)
 8002af2:	4f3f      	ldr	r7, [pc, #252]	; (8002bf0 <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv+0x16c>)
 8002af4:	6838      	ldr	r0, [r7, #0]
 8002af6:	b110      	cbz	r0, 8002afe <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv+0x7a>
        (*currentScreen)->tearDownScreen();
 8002af8:	6803      	ldr	r3, [r0, #0]
 8002afa:	695b      	ldr	r3, [r3, #20]
 8002afc:	4798      	blx	r3
    if (*currentPresenter)
 8002afe:	f8d5 0138 	ldr.w	r0, [r5, #312]	; 0x138
 8002b02:	b110      	cbz	r0, 8002b0a <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv+0x86>
        (*currentPresenter)->deactivate();
 8002b04:	6803      	ldr	r3, [r0, #0]
 8002b06:	685b      	ldr	r3, [r3, #4]
 8002b08:	4798      	blx	r3
    if (*currentScreen)
 8002b0a:	6838      	ldr	r0, [r7, #0]
 8002b0c:	b110      	cbz	r0, 8002b14 <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv+0x90>
        (*currentScreen)->~Screen();
 8002b0e:	6803      	ldr	r3, [r0, #0]
 8002b10:	681b      	ldr	r3, [r3, #0]
 8002b12:	4798      	blx	r3
    if (*currentPresenter)
 8002b14:	f8d5 0138 	ldr.w	r0, [r5, #312]	; 0x138
 8002b18:	b110      	cbz	r0, 8002b20 <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv+0x9c>
        (*currentPresenter)->~Presenter();
 8002b1a:	6803      	ldr	r3, [r0, #0]
 8002b1c:	689b      	ldr	r3, [r3, #8]
 8002b1e:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002b20:	68f0      	ldr	r0, [r6, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8002b22:	2100      	movs	r1, #0
 8002b24:	6803      	ldr	r3, [r0, #0]
 8002b26:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002b28:	4798      	blx	r3
        : screenContainer(0), done(false)
 8002b2a:	2300      	movs	r3, #0
          animationCounter(0)
 8002b2c:	4a31      	ldr	r2, [pc, #196]	; (8002bf4 <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv+0x170>)
 8002b2e:	4604      	mov	r4, r0
 8002b30:	6043      	str	r3, [r0, #4]
 8002b32:	7203      	strb	r3, [r0, #8]
 8002b34:	7403      	strb	r3, [r0, #16]
        if (HAL::DISPLAY_WIDTH > HAL::DISPLAY_HEIGHT)
 8002b36:	4b30      	ldr	r3, [pc, #192]	; (8002bf8 <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv+0x174>)
          animationCounter(0)
 8002b38:	6002      	str	r2, [r0, #0]
        if (HAL::DISPLAY_WIDTH > HAL::DISPLAY_HEIGHT)
 8002b3a:	881a      	ldrh	r2, [r3, #0]
 8002b3c:	4b2f      	ldr	r3, [pc, #188]	; (8002bfc <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv+0x178>)
 8002b3e:	881b      	ldrh	r3, [r3, #0]
 8002b40:	429a      	cmp	r2, r3
 8002b42:	d93f      	bls.n	8002bc4 <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv+0x140>
            blockWidth = (HAL::DISPLAY_WIDTH + 7) / 8;
 8002b44:	3207      	adds	r2, #7
            blockHeight = (HAL::DISPLAY_HEIGHT + 5) / 6;
 8002b46:	3305      	adds	r3, #5
            blockWidth = (HAL::DISPLAY_WIDTH + 7) / 8;
 8002b48:	10d2      	asrs	r2, r2, #3
 8002b4a:	8142      	strh	r2, [r0, #10]
            blockHeight = (HAL::DISPLAY_HEIGHT + 5) / 6;
 8002b4c:	2206      	movs	r2, #6
 8002b4e:	fbb3 f3f2 	udiv	r3, r3, r2
 8002b52:	8183      	strh	r3, [r0, #12]
            blocksHorizontal = 8;
 8002b54:	2308      	movs	r3, #8
 8002b56:	81c3      	strh	r3, [r0, #14]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002b58:	68b0      	ldr	r0, [r6, #8]
 8002b5a:	2100      	movs	r1, #0
 8002b5c:	6803      	ldr	r3, [r0, #0]
 8002b5e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002b60:	4798      	blx	r3
 8002b62:	4682      	mov	sl, r0
 8002b64:	f000 ffa2 	bl	8003aac <_ZN9BlankViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002b68:	6870      	ldr	r0, [r6, #4]
 8002b6a:	2100      	movs	r1, #0
 8002b6c:	6803      	ldr	r3, [r0, #0]
 8002b6e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002b70:	4798      	blx	r3
 8002b72:	4606      	mov	r6, r0
 8002b74:	4651      	mov	r1, sl
 8002b76:	f000 ff7f 	bl	8003a78 <_ZN14BlankPresenterC1ER9BlankView>
    *currentTrans = newTransition;
 8002b7a:	f8c8 4000 	str.w	r4, [r8]
    *currentPresenter = newPresenter;
 8002b7e:	f8c5 6138 	str.w	r6, [r5, #312]	; 0x138
    *currentScreen = newScreen;
 8002b82:	f8c7 a000 	str.w	sl, [r7]
    model->bind(newPresenter);
 8002b86:	b33e      	cbz	r6, 8002bd8 <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv+0x154>
 8002b88:	1d33      	adds	r3, r6, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8002b8a:	f8c9 3028 	str.w	r3, [r9, #40]	; 0x28
    newScreen->setupScreen();
 8002b8e:	4650      	mov	r0, sl
 8002b90:	f8da 3000 	ldr.w	r3, [sl]

    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8002b94:	f8c6 9008 	str.w	r9, [r6, #8]
 8002b98:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] presenter The specific Presenter to be associated with the View.
     */
    void bind(T& presenter)
    {
        this->presenter = &presenter;
 8002b9a:	f8ca 603c 	str.w	r6, [sl, #60]	; 0x3c
 8002b9e:	4798      	blx	r3
    newPresenter->activate();
 8002ba0:	6833      	ldr	r3, [r6, #0]
 8002ba2:	4630      	mov	r0, r6
 8002ba4:	681b      	ldr	r3, [r3, #0]
 8002ba6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002ba8:	4621      	mov	r1, r4
 8002baa:	4650      	mov	r0, sl
 8002bac:	f010 fc46 	bl	801343c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002bb0:	6823      	ldr	r3, [r4, #0]
 8002bb2:	4620      	mov	r0, r4
 8002bb4:	691b      	ldr	r3, [r3, #16]
 8002bb6:	4798      	blx	r3
    newTransition->invalidate();
 8002bb8:	6823      	ldr	r3, [r4, #0]
 8002bba:	4620      	mov	r0, r4
 8002bbc:	695b      	ldr	r3, [r3, #20]
}
 8002bbe:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002bc2:	4718      	bx	r3
            blockWidth = (HAL::DISPLAY_WIDTH + 5) / 6;
 8002bc4:	2106      	movs	r1, #6
 8002bc6:	3205      	adds	r2, #5
            blockHeight = (HAL::DISPLAY_HEIGHT + 7) / 8;
 8002bc8:	3307      	adds	r3, #7
            blocksHorizontal = 6;
 8002bca:	81c1      	strh	r1, [r0, #14]
            blockHeight = (HAL::DISPLAY_HEIGHT + 7) / 8;
 8002bcc:	10db      	asrs	r3, r3, #3
            blockWidth = (HAL::DISPLAY_WIDTH + 5) / 6;
 8002bce:	fbb2 f2f1 	udiv	r2, r2, r1
            blockHeight = (HAL::DISPLAY_HEIGHT + 7) / 8;
 8002bd2:	8183      	strh	r3, [r0, #12]
            blockWidth = (HAL::DISPLAY_WIDTH + 5) / 6;
 8002bd4:	8142      	strh	r2, [r0, #10]
            blocksHorizontal = 6;
 8002bd6:	e7bf      	b.n	8002b58 <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv+0xd4>
    model->bind(newPresenter);
 8002bd8:	4633      	mov	r3, r6
 8002bda:	e7d6      	b.n	8002b8a <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv+0x106>
 8002bdc:	08021a70 	.word	0x08021a70
 8002be0:	08021afe 	.word	0x08021afe
 8002be4:	08021c01 	.word	0x08021c01
 8002be8:	08021c56 	.word	0x08021c56
 8002bec:	08021cf9 	.word	0x08021cf9
 8002bf0:	2400e110 	.word	0x2400e110
 8002bf4:	08022148 	.word	0x08022148
 8002bf8:	2400e0a8 	.word	0x2400e0a8
 8002bfc:	2400e0aa 	.word	0x2400e0aa
 8002c00:	2400e114 	.word	0x2400e114

08002c04 <_ZN23FrontendApplicationBase30gotoBoomScreenNoTransitionImplEv>:
{
 8002c04:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<BoomView, BoomPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002c08:	e9d0 5a54 	ldrd	r5, sl, [r0, #336]	; 0x150
{
 8002c0c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002c0e:	68a8      	ldr	r0, [r5, #8]
 8002c10:	6803      	ldr	r3, [r0, #0]
 8002c12:	6a1b      	ldr	r3, [r3, #32]
 8002c14:	4798      	blx	r3
 8002c16:	289b      	cmp	r0, #155	; 0x9b
 8002c18:	d805      	bhi.n	8002c26 <_ZN23FrontendApplicationBase30gotoBoomScreenNoTransitionImplEv+0x22>
 8002c1a:	4b45      	ldr	r3, [pc, #276]	; (8002d30 <_ZN23FrontendApplicationBase30gotoBoomScreenNoTransitionImplEv+0x12c>)
 8002c1c:	21a3      	movs	r1, #163	; 0xa3
 8002c1e:	4a45      	ldr	r2, [pc, #276]	; (8002d34 <_ZN23FrontendApplicationBase30gotoBoomScreenNoTransitionImplEv+0x130>)
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002c20:	4845      	ldr	r0, [pc, #276]	; (8002d38 <_ZN23FrontendApplicationBase30gotoBoomScreenNoTransitionImplEv+0x134>)
 8002c22:	f01d f9dd 	bl	801ffe0 <__assert_func>
 8002c26:	6868      	ldr	r0, [r5, #4]
 8002c28:	6803      	ldr	r3, [r0, #0]
 8002c2a:	6a1b      	ldr	r3, [r3, #32]
 8002c2c:	4798      	blx	r3
 8002c2e:	280f      	cmp	r0, #15
 8002c30:	d803      	bhi.n	8002c3a <_ZN23FrontendApplicationBase30gotoBoomScreenNoTransitionImplEv+0x36>
 8002c32:	4b42      	ldr	r3, [pc, #264]	; (8002d3c <_ZN23FrontendApplicationBase30gotoBoomScreenNoTransitionImplEv+0x138>)
 8002c34:	21a4      	movs	r1, #164	; 0xa4
 8002c36:	4a3f      	ldr	r2, [pc, #252]	; (8002d34 <_ZN23FrontendApplicationBase30gotoBoomScreenNoTransitionImplEv+0x130>)
 8002c38:	e7f2      	b.n	8002c20 <_ZN23FrontendApplicationBase30gotoBoomScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002c3a:	68e8      	ldr	r0, [r5, #12]
 8002c3c:	6803      	ldr	r3, [r0, #0]
 8002c3e:	6a1b      	ldr	r3, [r3, #32]
 8002c40:	4798      	blx	r3
 8002c42:	280b      	cmp	r0, #11
 8002c44:	d803      	bhi.n	8002c4e <_ZN23FrontendApplicationBase30gotoBoomScreenNoTransitionImplEv+0x4a>
 8002c46:	4b3e      	ldr	r3, [pc, #248]	; (8002d40 <_ZN23FrontendApplicationBase30gotoBoomScreenNoTransitionImplEv+0x13c>)
 8002c48:	21a5      	movs	r1, #165	; 0xa5
 8002c4a:	4a3a      	ldr	r2, [pc, #232]	; (8002d34 <_ZN23FrontendApplicationBase30gotoBoomScreenNoTransitionImplEv+0x130>)
 8002c4c:	e7e8      	b.n	8002c20 <_ZN23FrontendApplicationBase30gotoBoomScreenNoTransitionImplEv+0x1c>
    if (*currentTrans)
 8002c4e:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8002d48 <_ZN23FrontendApplicationBase30gotoBoomScreenNoTransitionImplEv+0x144>
    Application::getInstance()->clearAllTimerWidgets();
 8002c52:	f00e fef3 	bl	8011a3c <_ZN8touchgfx11Application11getInstanceEv>
 8002c56:	f00e ff3f 	bl	8011ad8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8002c5a:	f8d9 0000 	ldr.w	r0, [r9]
 8002c5e:	b110      	cbz	r0, 8002c66 <_ZN23FrontendApplicationBase30gotoBoomScreenNoTransitionImplEv+0x62>
        (*currentTrans)->tearDown();
 8002c60:	6803      	ldr	r3, [r0, #0]
 8002c62:	68db      	ldr	r3, [r3, #12]
 8002c64:	4798      	blx	r3
    if (*currentTrans)
 8002c66:	f8d9 0000 	ldr.w	r0, [r9]
 8002c6a:	b110      	cbz	r0, 8002c72 <_ZN23FrontendApplicationBase30gotoBoomScreenNoTransitionImplEv+0x6e>
        (*currentTrans)->~Transition();
 8002c6c:	6803      	ldr	r3, [r0, #0]
 8002c6e:	681b      	ldr	r3, [r3, #0]
 8002c70:	4798      	blx	r3
    if (*currentScreen)
 8002c72:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8002d4c <_ZN23FrontendApplicationBase30gotoBoomScreenNoTransitionImplEv+0x148>
 8002c76:	f8d8 0000 	ldr.w	r0, [r8]
 8002c7a:	b110      	cbz	r0, 8002c82 <_ZN23FrontendApplicationBase30gotoBoomScreenNoTransitionImplEv+0x7e>
        (*currentScreen)->tearDownScreen();
 8002c7c:	6803      	ldr	r3, [r0, #0]
 8002c7e:	695b      	ldr	r3, [r3, #20]
 8002c80:	4798      	blx	r3
    if (*currentPresenter)
 8002c82:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002c86:	b110      	cbz	r0, 8002c8e <_ZN23FrontendApplicationBase30gotoBoomScreenNoTransitionImplEv+0x8a>
        (*currentPresenter)->deactivate();
 8002c88:	6803      	ldr	r3, [r0, #0]
 8002c8a:	685b      	ldr	r3, [r3, #4]
 8002c8c:	4798      	blx	r3
    if (*currentScreen)
 8002c8e:	f8d8 0000 	ldr.w	r0, [r8]
 8002c92:	b110      	cbz	r0, 8002c9a <_ZN23FrontendApplicationBase30gotoBoomScreenNoTransitionImplEv+0x96>
        (*currentScreen)->~Screen();
 8002c94:	6803      	ldr	r3, [r0, #0]
 8002c96:	681b      	ldr	r3, [r3, #0]
 8002c98:	4798      	blx	r3
    if (*currentPresenter)
 8002c9a:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002c9e:	b110      	cbz	r0, 8002ca6 <_ZN23FrontendApplicationBase30gotoBoomScreenNoTransitionImplEv+0xa2>
        (*currentPresenter)->~Presenter();
 8002ca0:	6803      	ldr	r3, [r0, #0]
 8002ca2:	689b      	ldr	r3, [r3, #8]
 8002ca4:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002ca6:	68e8      	ldr	r0, [r5, #12]
 8002ca8:	2100      	movs	r1, #0
 8002caa:	f04f 0b00 	mov.w	fp, #0
 8002cae:	6803      	ldr	r3, [r0, #0]
 8002cb0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002cb2:	4798      	blx	r3
 8002cb4:	4b23      	ldr	r3, [pc, #140]	; (8002d44 <_ZN23FrontendApplicationBase30gotoBoomScreenNoTransitionImplEv+0x140>)
 8002cb6:	4604      	mov	r4, r0
 8002cb8:	f8c0 b004 	str.w	fp, [r0, #4]
 8002cbc:	6003      	str	r3, [r0, #0]
 8002cbe:	4659      	mov	r1, fp
 8002cc0:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002cc4:	68a8      	ldr	r0, [r5, #8]
 8002cc6:	6803      	ldr	r3, [r0, #0]
 8002cc8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002cca:	4798      	blx	r3
 8002ccc:	4606      	mov	r6, r0
 8002cce:	f000 ff2b 	bl	8003b28 <_ZN8BoomViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002cd2:	6868      	ldr	r0, [r5, #4]
 8002cd4:	4659      	mov	r1, fp
 8002cd6:	6803      	ldr	r3, [r0, #0]
 8002cd8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002cda:	4798      	blx	r3
 8002cdc:	4605      	mov	r5, r0
 8002cde:	4631      	mov	r1, r6
 8002ce0:	f000 ff08 	bl	8003af4 <_ZN13BoomPresenterC1ER8BoomView>
    *currentTrans = newTransition;
 8002ce4:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8002ce8:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8002cec:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002cf0:	b1e5      	cbz	r5, 8002d2c <_ZN23FrontendApplicationBase30gotoBoomScreenNoTransitionImplEv+0x128>
 8002cf2:	1d2b      	adds	r3, r5, #4
 8002cf4:	f8ca 3028 	str.w	r3, [sl, #40]	; 0x28
    newScreen->setupScreen();
 8002cf8:	4630      	mov	r0, r6
 8002cfa:	6833      	ldr	r3, [r6, #0]
 8002cfc:	f8c5 a008 	str.w	sl, [r5, #8]
 8002d00:	68db      	ldr	r3, [r3, #12]
 8002d02:	63f5      	str	r5, [r6, #60]	; 0x3c
 8002d04:	4798      	blx	r3
    newPresenter->activate();
 8002d06:	682b      	ldr	r3, [r5, #0]
 8002d08:	4628      	mov	r0, r5
 8002d0a:	681b      	ldr	r3, [r3, #0]
 8002d0c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002d0e:	4621      	mov	r1, r4
 8002d10:	4630      	mov	r0, r6
 8002d12:	f010 fb93 	bl	801343c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002d16:	6823      	ldr	r3, [r4, #0]
 8002d18:	4620      	mov	r0, r4
 8002d1a:	691b      	ldr	r3, [r3, #16]
 8002d1c:	4798      	blx	r3
    newTransition->invalidate();
 8002d1e:	6823      	ldr	r3, [r4, #0]
 8002d20:	4620      	mov	r0, r4
 8002d22:	695b      	ldr	r3, [r3, #20]
}
 8002d24:	b001      	add	sp, #4
 8002d26:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002d2a:	4718      	bx	r3
    model->bind(newPresenter);
 8002d2c:	462b      	mov	r3, r5
 8002d2e:	e7e1      	b.n	8002cf4 <_ZN23FrontendApplicationBase30gotoBoomScreenNoTransitionImplEv+0xf0>
 8002d30:	08021a70 	.word	0x08021a70
 8002d34:	08021d9c 	.word	0x08021d9c
 8002d38:	08021c01 	.word	0x08021c01
 8002d3c:	08021c56 	.word	0x08021c56
 8002d40:	08021cf9 	.word	0x08021cf9
 8002d44:	08022124 	.word	0x08022124
 8002d48:	2400e114 	.word	0x2400e114
 8002d4c:	2400e110 	.word	0x2400e110

08002d50 <_ZN23FrontendApplicationBase41gotoCountdownScreenWipeTransitionEastImplEv>:
{
 8002d50:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<CountdownView, CountdownPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002d54:	e9d0 ba54 	ldrd	fp, sl, [r0, #336]	; 0x150
{
 8002d58:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002d5a:	f8db 0008 	ldr.w	r0, [fp, #8]
 8002d5e:	6803      	ldr	r3, [r0, #0]
 8002d60:	6a1b      	ldr	r3, [r3, #32]
 8002d62:	4798      	blx	r3
 8002d64:	f5b0 7f84 	cmp.w	r0, #264	; 0x108
 8002d68:	d205      	bcs.n	8002d76 <_ZN23FrontendApplicationBase41gotoCountdownScreenWipeTransitionEastImplEv+0x26>
 8002d6a:	4b57      	ldr	r3, [pc, #348]	; (8002ec8 <_ZN23FrontendApplicationBase41gotoCountdownScreenWipeTransitionEastImplEv+0x178>)
 8002d6c:	21a3      	movs	r1, #163	; 0xa3
 8002d6e:	4a57      	ldr	r2, [pc, #348]	; (8002ecc <_ZN23FrontendApplicationBase41gotoCountdownScreenWipeTransitionEastImplEv+0x17c>)
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002d70:	4857      	ldr	r0, [pc, #348]	; (8002ed0 <_ZN23FrontendApplicationBase41gotoCountdownScreenWipeTransitionEastImplEv+0x180>)
 8002d72:	f01d f935 	bl	801ffe0 <__assert_func>
 8002d76:	f8db 0004 	ldr.w	r0, [fp, #4]
 8002d7a:	6803      	ldr	r3, [r0, #0]
 8002d7c:	6a1b      	ldr	r3, [r3, #32]
 8002d7e:	4798      	blx	r3
 8002d80:	280f      	cmp	r0, #15
 8002d82:	d803      	bhi.n	8002d8c <_ZN23FrontendApplicationBase41gotoCountdownScreenWipeTransitionEastImplEv+0x3c>
 8002d84:	4b53      	ldr	r3, [pc, #332]	; (8002ed4 <_ZN23FrontendApplicationBase41gotoCountdownScreenWipeTransitionEastImplEv+0x184>)
 8002d86:	21a4      	movs	r1, #164	; 0xa4
 8002d88:	4a50      	ldr	r2, [pc, #320]	; (8002ecc <_ZN23FrontendApplicationBase41gotoCountdownScreenWipeTransitionEastImplEv+0x17c>)
 8002d8a:	e7f1      	b.n	8002d70 <_ZN23FrontendApplicationBase41gotoCountdownScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002d8c:	f8db 000c 	ldr.w	r0, [fp, #12]
 8002d90:	6803      	ldr	r3, [r0, #0]
 8002d92:	6a1b      	ldr	r3, [r3, #32]
 8002d94:	4798      	blx	r3
 8002d96:	2837      	cmp	r0, #55	; 0x37
 8002d98:	d803      	bhi.n	8002da2 <_ZN23FrontendApplicationBase41gotoCountdownScreenWipeTransitionEastImplEv+0x52>
 8002d9a:	4b4f      	ldr	r3, [pc, #316]	; (8002ed8 <_ZN23FrontendApplicationBase41gotoCountdownScreenWipeTransitionEastImplEv+0x188>)
 8002d9c:	21a5      	movs	r1, #165	; 0xa5
 8002d9e:	4a4b      	ldr	r2, [pc, #300]	; (8002ecc <_ZN23FrontendApplicationBase41gotoCountdownScreenWipeTransitionEastImplEv+0x17c>)
 8002da0:	e7e6      	b.n	8002d70 <_ZN23FrontendApplicationBase41gotoCountdownScreenWipeTransitionEastImplEv+0x20>
    if (*currentTrans)
 8002da2:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8002eec <_ZN23FrontendApplicationBase41gotoCountdownScreenWipeTransitionEastImplEv+0x19c>
    Application::getInstance()->clearAllTimerWidgets();
 8002da6:	f00e fe49 	bl	8011a3c <_ZN8touchgfx11Application11getInstanceEv>
 8002daa:	f00e fe95 	bl	8011ad8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8002dae:	f8d9 0000 	ldr.w	r0, [r9]
 8002db2:	b110      	cbz	r0, 8002dba <_ZN23FrontendApplicationBase41gotoCountdownScreenWipeTransitionEastImplEv+0x6a>
        (*currentTrans)->tearDown();
 8002db4:	6803      	ldr	r3, [r0, #0]
 8002db6:	68db      	ldr	r3, [r3, #12]
 8002db8:	4798      	blx	r3
    if (*currentTrans)
 8002dba:	f8d9 0000 	ldr.w	r0, [r9]
 8002dbe:	b110      	cbz	r0, 8002dc6 <_ZN23FrontendApplicationBase41gotoCountdownScreenWipeTransitionEastImplEv+0x76>
        (*currentTrans)->~Transition();
 8002dc0:	6803      	ldr	r3, [r0, #0]
 8002dc2:	681b      	ldr	r3, [r3, #0]
 8002dc4:	4798      	blx	r3
    if (*currentScreen)
 8002dc6:	f8df 8128 	ldr.w	r8, [pc, #296]	; 8002ef0 <_ZN23FrontendApplicationBase41gotoCountdownScreenWipeTransitionEastImplEv+0x1a0>
 8002dca:	f8d8 0000 	ldr.w	r0, [r8]
 8002dce:	b110      	cbz	r0, 8002dd6 <_ZN23FrontendApplicationBase41gotoCountdownScreenWipeTransitionEastImplEv+0x86>
        (*currentScreen)->tearDownScreen();
 8002dd0:	6803      	ldr	r3, [r0, #0]
 8002dd2:	695b      	ldr	r3, [r3, #20]
 8002dd4:	4798      	blx	r3
    if (*currentPresenter)
 8002dd6:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002dda:	b110      	cbz	r0, 8002de2 <_ZN23FrontendApplicationBase41gotoCountdownScreenWipeTransitionEastImplEv+0x92>
        (*currentPresenter)->deactivate();
 8002ddc:	6803      	ldr	r3, [r0, #0]
 8002dde:	685b      	ldr	r3, [r3, #4]
 8002de0:	4798      	blx	r3
    if (*currentScreen)
 8002de2:	f8d8 0000 	ldr.w	r0, [r8]
 8002de6:	b110      	cbz	r0, 8002dee <_ZN23FrontendApplicationBase41gotoCountdownScreenWipeTransitionEastImplEv+0x9e>
        (*currentScreen)->~Screen();
 8002de8:	6803      	ldr	r3, [r0, #0]
 8002dea:	681b      	ldr	r3, [r3, #0]
 8002dec:	4798      	blx	r3
    if (*currentPresenter)
 8002dee:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002df2:	b110      	cbz	r0, 8002dfa <_ZN23FrontendApplicationBase41gotoCountdownScreenWipeTransitionEastImplEv+0xaa>
        (*currentPresenter)->~Presenter();
 8002df4:	6803      	ldr	r3, [r0, #0]
 8002df6:	689b      	ldr	r3, [r3, #8]
 8002df8:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002dfa:	f8db 000c 	ldr.w	r0, [fp, #12]
 8002dfe:	2100      	movs	r1, #0
 8002e00:	2500      	movs	r5, #0
 8002e02:	6803      	ldr	r3, [r0, #0]
 8002e04:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002e06:	4798      	blx	r3
          solid()
 8002e08:	4b34      	ldr	r3, [pc, #208]	; (8002edc <_ZN23FrontendApplicationBase41gotoCountdownScreenWipeTransitionEastImplEv+0x18c>)
 8002e0a:	4604      	mov	r4, r0
 8002e0c:	6045      	str	r5, [r0, #4]
 8002e0e:	6003      	str	r3, [r0, #0]
 8002e10:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8002e14:	7285      	strb	r5, [r0, #10]
 8002e16:	3010      	adds	r0, #16
 8002e18:	f820 3c08 	strh.w	r3, [r0, #-8]
 8002e1c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8002e20:	81e5      	strh	r5, [r4, #14]
 8002e22:	6363      	str	r3, [r4, #52]	; 0x34
    class FullSolidRect : public Widget
 8002e24:	4b2e      	ldr	r3, [pc, #184]	; (8002ee0 <_ZN23FrontendApplicationBase41gotoCountdownScreenWipeTransitionEastImplEv+0x190>)
        setWidth(width);
 8002e26:	9001      	str	r0, [sp, #4]
 8002e28:	6123      	str	r3, [r4, #16]
            targetValue = HAL::DISPLAY_WIDTH;
 8002e2a:	4b2e      	ldr	r3, [pc, #184]	; (8002ee4 <_ZN23FrontendApplicationBase41gotoCountdownScreenWipeTransitionEastImplEv+0x194>)
 8002e2c:	f9b3 1000 	ldrsh.w	r1, [r3]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8002e30:	4b2d      	ldr	r3, [pc, #180]	; (8002ee8 <_ZN23FrontendApplicationBase41gotoCountdownScreenWipeTransitionEastImplEv+0x198>)
            targetValue = HAL::DISPLAY_WIDTH;
 8002e32:	81a1      	strh	r1, [r4, #12]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8002e34:	f9b3 6000 	ldrsh.w	r6, [r3]
          solid()
 8002e38:	e9c4 5505 	strd	r5, r5, [r4, #20]
 8002e3c:	e9c4 5507 	strd	r5, r5, [r4, #28]
 8002e40:	e9c4 5509 	strd	r5, r5, [r4, #36]	; 0x24
 8002e44:	e9c4 550b 	strd	r5, r5, [r4, #44]	; 0x2c
 8002e48:	f7ff fb60 	bl	800250c <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8002e4c:	6923      	ldr	r3, [r4, #16]
 8002e4e:	4631      	mov	r1, r6
 8002e50:	9801      	ldr	r0, [sp, #4]
 8002e52:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002e54:	4798      	blx	r3
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002e56:	f8db 0008 	ldr.w	r0, [fp, #8]
 8002e5a:	4629      	mov	r1, r5
 8002e5c:	6803      	ldr	r3, [r0, #0]
 8002e5e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002e60:	4798      	blx	r3
 8002e62:	4606      	mov	r6, r0
 8002e64:	f000 fe9a 	bl	8003b9c <_ZN13CountdownViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002e68:	f8db 0004 	ldr.w	r0, [fp, #4]
 8002e6c:	4629      	mov	r1, r5
 8002e6e:	6803      	ldr	r3, [r0, #0]
 8002e70:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002e72:	4798      	blx	r3
 8002e74:	4605      	mov	r5, r0
 8002e76:	4631      	mov	r1, r6
 8002e78:	f000 fe76 	bl	8003b68 <_ZN18CountdownPresenterC1ER13CountdownView>
    *currentTrans = newTransition;
 8002e7c:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8002e80:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8002e84:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002e88:	b1e5      	cbz	r5, 8002ec4 <_ZN23FrontendApplicationBase41gotoCountdownScreenWipeTransitionEastImplEv+0x174>
 8002e8a:	1d2b      	adds	r3, r5, #4
 8002e8c:	f8ca 3028 	str.w	r3, [sl, #40]	; 0x28
    newScreen->setupScreen();
 8002e90:	4630      	mov	r0, r6
 8002e92:	6833      	ldr	r3, [r6, #0]
 8002e94:	f8c5 a008 	str.w	sl, [r5, #8]
 8002e98:	68db      	ldr	r3, [r3, #12]
 8002e9a:	63f5      	str	r5, [r6, #60]	; 0x3c
 8002e9c:	4798      	blx	r3
    newPresenter->activate();
 8002e9e:	682b      	ldr	r3, [r5, #0]
 8002ea0:	4628      	mov	r0, r5
 8002ea2:	681b      	ldr	r3, [r3, #0]
 8002ea4:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002ea6:	4621      	mov	r1, r4
 8002ea8:	4630      	mov	r0, r6
 8002eaa:	f010 fac7 	bl	801343c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002eae:	6823      	ldr	r3, [r4, #0]
 8002eb0:	4620      	mov	r0, r4
 8002eb2:	691b      	ldr	r3, [r3, #16]
 8002eb4:	4798      	blx	r3
    newTransition->invalidate();
 8002eb6:	6823      	ldr	r3, [r4, #0]
 8002eb8:	4620      	mov	r0, r4
 8002eba:	695b      	ldr	r3, [r3, #20]
}
 8002ebc:	b003      	add	sp, #12
 8002ebe:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002ec2:	4718      	bx	r3
    model->bind(newPresenter);
 8002ec4:	462b      	mov	r3, r5
 8002ec6:	e7e1      	b.n	8002e8c <_ZN23FrontendApplicationBase41gotoCountdownScreenWipeTransitionEastImplEv+0x13c>
 8002ec8:	08021a70 	.word	0x08021a70
 8002ecc:	08021e9a 	.word	0x08021e9a
 8002ed0:	08021c01 	.word	0x08021c01
 8002ed4:	08021c56 	.word	0x08021c56
 8002ed8:	08021cf9 	.word	0x08021cf9
 8002edc:	080221d4 	.word	0x080221d4
 8002ee0:	0802216c 	.word	0x0802216c
 8002ee4:	2400e0a8 	.word	0x2400e0a8
 8002ee8:	2400e0aa 	.word	0x2400e0aa
 8002eec:	2400e114 	.word	0x2400e114
 8002ef0:	2400e110 	.word	0x2400e110

08002ef4 <_ZN23FrontendApplicationBase33gotoInitialScreenNoTransitionImplEv>:
{
 8002ef4:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<InitialView, InitialPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002ef8:	e9d0 5a54 	ldrd	r5, sl, [r0, #336]	; 0x150
{
 8002efc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002efe:	68a8      	ldr	r0, [r5, #8]
 8002f00:	6803      	ldr	r3, [r0, #0]
 8002f02:	6a1b      	ldr	r3, [r3, #32]
 8002f04:	4798      	blx	r3
 8002f06:	f243 13e3 	movw	r3, #12771	; 0x31e3
 8002f0a:	4298      	cmp	r0, r3
 8002f0c:	d805      	bhi.n	8002f1a <_ZN23FrontendApplicationBase33gotoInitialScreenNoTransitionImplEv+0x26>
 8002f0e:	4b45      	ldr	r3, [pc, #276]	; (8003024 <_ZN23FrontendApplicationBase33gotoInitialScreenNoTransitionImplEv+0x130>)
 8002f10:	21a3      	movs	r1, #163	; 0xa3
 8002f12:	4a45      	ldr	r2, [pc, #276]	; (8003028 <_ZN23FrontendApplicationBase33gotoInitialScreenNoTransitionImplEv+0x134>)
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002f14:	4845      	ldr	r0, [pc, #276]	; (800302c <_ZN23FrontendApplicationBase33gotoInitialScreenNoTransitionImplEv+0x138>)
 8002f16:	f01d f863 	bl	801ffe0 <__assert_func>
 8002f1a:	6868      	ldr	r0, [r5, #4]
 8002f1c:	6803      	ldr	r3, [r0, #0]
 8002f1e:	6a1b      	ldr	r3, [r3, #32]
 8002f20:	4798      	blx	r3
 8002f22:	280f      	cmp	r0, #15
 8002f24:	d803      	bhi.n	8002f2e <_ZN23FrontendApplicationBase33gotoInitialScreenNoTransitionImplEv+0x3a>
 8002f26:	4b42      	ldr	r3, [pc, #264]	; (8003030 <_ZN23FrontendApplicationBase33gotoInitialScreenNoTransitionImplEv+0x13c>)
 8002f28:	21a4      	movs	r1, #164	; 0xa4
 8002f2a:	4a3f      	ldr	r2, [pc, #252]	; (8003028 <_ZN23FrontendApplicationBase33gotoInitialScreenNoTransitionImplEv+0x134>)
 8002f2c:	e7f2      	b.n	8002f14 <_ZN23FrontendApplicationBase33gotoInitialScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002f2e:	68e8      	ldr	r0, [r5, #12]
 8002f30:	6803      	ldr	r3, [r0, #0]
 8002f32:	6a1b      	ldr	r3, [r3, #32]
 8002f34:	4798      	blx	r3
 8002f36:	280b      	cmp	r0, #11
 8002f38:	d803      	bhi.n	8002f42 <_ZN23FrontendApplicationBase33gotoInitialScreenNoTransitionImplEv+0x4e>
 8002f3a:	4b3e      	ldr	r3, [pc, #248]	; (8003034 <_ZN23FrontendApplicationBase33gotoInitialScreenNoTransitionImplEv+0x140>)
 8002f3c:	21a5      	movs	r1, #165	; 0xa5
 8002f3e:	4a3a      	ldr	r2, [pc, #232]	; (8003028 <_ZN23FrontendApplicationBase33gotoInitialScreenNoTransitionImplEv+0x134>)
 8002f40:	e7e8      	b.n	8002f14 <_ZN23FrontendApplicationBase33gotoInitialScreenNoTransitionImplEv+0x20>
    if (*currentTrans)
 8002f42:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 800303c <_ZN23FrontendApplicationBase33gotoInitialScreenNoTransitionImplEv+0x148>
    Application::getInstance()->clearAllTimerWidgets();
 8002f46:	f00e fd79 	bl	8011a3c <_ZN8touchgfx11Application11getInstanceEv>
 8002f4a:	f00e fdc5 	bl	8011ad8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8002f4e:	f8d9 0000 	ldr.w	r0, [r9]
 8002f52:	b110      	cbz	r0, 8002f5a <_ZN23FrontendApplicationBase33gotoInitialScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 8002f54:	6803      	ldr	r3, [r0, #0]
 8002f56:	68db      	ldr	r3, [r3, #12]
 8002f58:	4798      	blx	r3
    if (*currentTrans)
 8002f5a:	f8d9 0000 	ldr.w	r0, [r9]
 8002f5e:	b110      	cbz	r0, 8002f66 <_ZN23FrontendApplicationBase33gotoInitialScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 8002f60:	6803      	ldr	r3, [r0, #0]
 8002f62:	681b      	ldr	r3, [r3, #0]
 8002f64:	4798      	blx	r3
    if (*currentScreen)
 8002f66:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8003040 <_ZN23FrontendApplicationBase33gotoInitialScreenNoTransitionImplEv+0x14c>
 8002f6a:	f8d8 0000 	ldr.w	r0, [r8]
 8002f6e:	b110      	cbz	r0, 8002f76 <_ZN23FrontendApplicationBase33gotoInitialScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8002f70:	6803      	ldr	r3, [r0, #0]
 8002f72:	695b      	ldr	r3, [r3, #20]
 8002f74:	4798      	blx	r3
    if (*currentPresenter)
 8002f76:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002f7a:	b110      	cbz	r0, 8002f82 <_ZN23FrontendApplicationBase33gotoInitialScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8002f7c:	6803      	ldr	r3, [r0, #0]
 8002f7e:	685b      	ldr	r3, [r3, #4]
 8002f80:	4798      	blx	r3
    if (*currentScreen)
 8002f82:	f8d8 0000 	ldr.w	r0, [r8]
 8002f86:	b110      	cbz	r0, 8002f8e <_ZN23FrontendApplicationBase33gotoInitialScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 8002f88:	6803      	ldr	r3, [r0, #0]
 8002f8a:	681b      	ldr	r3, [r3, #0]
 8002f8c:	4798      	blx	r3
    if (*currentPresenter)
 8002f8e:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002f92:	b110      	cbz	r0, 8002f9a <_ZN23FrontendApplicationBase33gotoInitialScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8002f94:	6803      	ldr	r3, [r0, #0]
 8002f96:	689b      	ldr	r3, [r3, #8]
 8002f98:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002f9a:	68e8      	ldr	r0, [r5, #12]
 8002f9c:	2100      	movs	r1, #0
 8002f9e:	f04f 0b00 	mov.w	fp, #0
 8002fa2:	6803      	ldr	r3, [r0, #0]
 8002fa4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002fa6:	4798      	blx	r3
 8002fa8:	4b23      	ldr	r3, [pc, #140]	; (8003038 <_ZN23FrontendApplicationBase33gotoInitialScreenNoTransitionImplEv+0x144>)
 8002faa:	4604      	mov	r4, r0
 8002fac:	f8c0 b004 	str.w	fp, [r0, #4]
 8002fb0:	6003      	str	r3, [r0, #0]
 8002fb2:	4659      	mov	r1, fp
 8002fb4:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002fb8:	68a8      	ldr	r0, [r5, #8]
 8002fba:	6803      	ldr	r3, [r0, #0]
 8002fbc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002fbe:	4798      	blx	r3
 8002fc0:	4606      	mov	r6, r0
 8002fc2:	f000 ff21 	bl	8003e08 <_ZN11InitialViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002fc6:	6868      	ldr	r0, [r5, #4]
 8002fc8:	4659      	mov	r1, fp
 8002fca:	6803      	ldr	r3, [r0, #0]
 8002fcc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002fce:	4798      	blx	r3
 8002fd0:	4605      	mov	r5, r0
 8002fd2:	4631      	mov	r1, r6
 8002fd4:	f000 fe46 	bl	8003c64 <_ZN16InitialPresenterC1ER11InitialView>
    *currentTrans = newTransition;
 8002fd8:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8002fdc:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8002fe0:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002fe4:	b1e5      	cbz	r5, 8003020 <_ZN23FrontendApplicationBase33gotoInitialScreenNoTransitionImplEv+0x12c>
 8002fe6:	1d2b      	adds	r3, r5, #4
 8002fe8:	f8ca 3028 	str.w	r3, [sl, #40]	; 0x28
    newScreen->setupScreen();
 8002fec:	4630      	mov	r0, r6
 8002fee:	6833      	ldr	r3, [r6, #0]
 8002ff0:	f8c5 a008 	str.w	sl, [r5, #8]
 8002ff4:	68db      	ldr	r3, [r3, #12]
 8002ff6:	63f5      	str	r5, [r6, #60]	; 0x3c
 8002ff8:	4798      	blx	r3
    newPresenter->activate();
 8002ffa:	682b      	ldr	r3, [r5, #0]
 8002ffc:	4628      	mov	r0, r5
 8002ffe:	681b      	ldr	r3, [r3, #0]
 8003000:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003002:	4621      	mov	r1, r4
 8003004:	4630      	mov	r0, r6
 8003006:	f010 fa19 	bl	801343c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800300a:	6823      	ldr	r3, [r4, #0]
 800300c:	4620      	mov	r0, r4
 800300e:	691b      	ldr	r3, [r3, #16]
 8003010:	4798      	blx	r3
    newTransition->invalidate();
 8003012:	6823      	ldr	r3, [r4, #0]
 8003014:	4620      	mov	r0, r4
 8003016:	695b      	ldr	r3, [r3, #20]
}
 8003018:	b001      	add	sp, #4
 800301a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800301e:	4718      	bx	r3
    model->bind(newPresenter);
 8003020:	462b      	mov	r3, r5
 8003022:	e7e1      	b.n	8002fe8 <_ZN23FrontendApplicationBase33gotoInitialScreenNoTransitionImplEv+0xf4>
 8003024:	08021a70 	.word	0x08021a70
 8003028:	08021fb4 	.word	0x08021fb4
 800302c:	08021c01 	.word	0x08021c01
 8003030:	08021c56 	.word	0x08021c56
 8003034:	08021cf9 	.word	0x08021cf9
 8003038:	08022124 	.word	0x08022124
 800303c:	2400e114 	.word	0x2400e114
 8003040:	2400e110 	.word	0x2400e110

08003044 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8003044:	4b04      	ldr	r3, [pc, #16]	; (8003058 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8003046:	681b      	ldr	r3, [r3, #0]
 8003048:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800304c:	b10a      	cbz	r2, 8003052 <_ZN8touchgfx3HAL3lcdEv+0xe>
 800304e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8003050:	b900      	cbnz	r0, 8003054 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 8003052:	6898      	ldr	r0, [r3, #8]
    }
 8003054:	4770      	bx	lr
 8003056:	bf00      	nop
 8003058:	2400e0b4 	.word	0x2400e0b4

0800305c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 800305c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800305e:	4604      	mov	r4, r0
        animationCounter++;
 8003060:	7a80      	ldrb	r0, [r0, #10]
    virtual void handleTickEvent()
 8003062:	b089      	sub	sp, #36	; 0x24
        animationCounter++;
 8003064:	3001      	adds	r0, #1
        if (animationCounter <= (animationSteps))
 8003066:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8003068:	b2c0      	uxtb	r0, r0
        if (animationCounter <= (animationSteps))
 800306a:	4298      	cmp	r0, r3
        animationCounter++;
 800306c:	72a0      	strb	r0, [r4, #10]
        if (animationCounter <= (animationSteps))
 800306e:	d850      	bhi.n	8003112 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xb6>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8003070:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8003074:	2100      	movs	r1, #0
 8003076:	f010 f9e7 	bl	8013448 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
            if (calculatedValue % 2)
 800307a:	f010 0201 	ands.w	r2, r0, #1
 800307e:	b283      	uxth	r3, r0
 8003080:	d04d      	beq.n	800311e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xc2>
                calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8003082:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8003086:	2800      	cmp	r0, #0
 8003088:	bfd8      	it	le
 800308a:	460a      	movle	r2, r1
 800308c:	4413      	add	r3, r2
 800308e:	81e3      	strh	r3, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003090:	4e24      	ldr	r6, [pc, #144]	; (8003124 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xc8>)
 8003092:	2500      	movs	r5, #0
                const uint16_t prevSolidWidth = solid.getWidth();
 8003094:	f8b4 c018 	ldrh.w	ip, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003098:	8831      	ldrh	r1, [r6, #0]
 800309a:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 800309c:	4f22      	ldr	r7, [pc, #136]	; (8003128 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xcc>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800309e:	1aca      	subs	r2, r1, r3
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 80030a0:	4463      	add	r3, ip
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 80030a2:	f9b7 0000 	ldrsh.w	r0, [r7]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 80030a6:	1a5b      	subs	r3, r3, r1
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80030a8:	b212      	sxth	r2, r2
 80030aa:	f8ad 001e 	strh.w	r0, [sp, #30]
                screenContainer->invalidateRect(r);
 80030ae:	a906      	add	r1, sp, #24
 80030b0:	6860      	ldr	r0, [r4, #4]
 80030b2:	f8ad 301c 	strh.w	r3, [sp, #28]
 80030b6:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 80030b8:	8322      	strh	r2, [r4, #24]
 80030ba:	691b      	ldr	r3, [r3, #16]
 80030bc:	f8ad 2018 	strh.w	r2, [sp, #24]
 80030c0:	f8ad 501a 	strh.w	r5, [sp, #26]
 80030c4:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 80030c6:	7aa3      	ldrb	r3, [r4, #10]
 80030c8:	2b01      	cmp	r3, #1
 80030ca:	d126      	bne.n	800311a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
 80030cc:	4b17      	ldr	r3, [pc, #92]	; (800312c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xd0>)
 80030ce:	781b      	ldrb	r3, [r3, #0]
 80030d0:	b31b      	cbz	r3, 800311a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
            Rect rect = solid.getRect(); // Part to copy between buffers
 80030d2:	69a1      	ldr	r1, [r4, #24]
 80030d4:	ab04      	add	r3, sp, #16
 80030d6:	6960      	ldr	r0, [r4, #20]
 80030d8:	c303      	stmia	r3!, {r0, r1}
        return instance;
 80030da:	4b15      	ldr	r3, [pc, #84]	; (8003130 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xd4>)
 80030dc:	6818      	ldr	r0, [r3, #0]
            uint16_t* tftFb = HAL::getInstance()->getTFTFrameBuffer();
 80030de:	6803      	ldr	r3, [r0, #0]
 80030e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80030e2:	4798      	blx	r3
            source.width = HAL::DISPLAY_WIDTH;
 80030e4:	8833      	ldrh	r3, [r6, #0]
            uint16_t* tftFb = HAL::getInstance()->getTFTFrameBuffer();
 80030e6:	9003      	str	r0, [sp, #12]
            source.width = HAL::DISPLAY_WIDTH;
 80030e8:	f8ad 301c 	strh.w	r3, [sp, #28]
            source.height = HAL::DISPLAY_HEIGHT;
 80030ec:	883b      	ldrh	r3, [r7, #0]
        : x(0), y(0), width(0), height(0)
 80030ee:	f8ad 5018 	strh.w	r5, [sp, #24]
 80030f2:	f8ad 301e 	strh.w	r3, [sp, #30]
 80030f6:	f8ad 501a 	strh.w	r5, [sp, #26]
            HAL::getInstance()->lcd().blitCopy((const uint16_t*)tftFb, source, rect, 255, false);
 80030fa:	f7ff ffa3 	bl	8003044 <_ZN8touchgfx3HAL3lcdEv>
 80030fe:	22ff      	movs	r2, #255	; 0xff
 8003100:	6803      	ldr	r3, [r0, #0]
 8003102:	9903      	ldr	r1, [sp, #12]
 8003104:	9200      	str	r2, [sp, #0]
 8003106:	aa06      	add	r2, sp, #24
 8003108:	9501      	str	r5, [sp, #4]
 800310a:	68dc      	ldr	r4, [r3, #12]
 800310c:	ab04      	add	r3, sp, #16
 800310e:	47a0      	blx	r4
 8003110:	e003      	b.n	800311a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
            done = true;
 8003112:	2301      	movs	r3, #1
 8003114:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8003116:	2300      	movs	r3, #0
 8003118:	72a3      	strb	r3, [r4, #10]
    }
 800311a:	b009      	add	sp, #36	; 0x24
 800311c:	bdf0      	pop	{r4, r5, r6, r7, pc}
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800311e:	81e0      	strh	r0, [r4, #14]
 8003120:	e7b6      	b.n	8003090 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x34>
 8003122:	bf00      	nop
 8003124:	2400e0a8 	.word	0x2400e0a8
 8003128:	2400e0aa 	.word	0x2400e0aa
 800312c:	2400e0b2 	.word	0x2400e0b2
 8003130:	2400e0b4 	.word	0x2400e0b4

08003134 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8003134:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003136:	4604      	mov	r4, r0
 8003138:	4617      	mov	r7, r2
 800313a:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 800313c:	f00e fd12 	bl	8011b64 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8003140:	4b0e      	ldr	r3, [pc, #56]	; (800317c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x48>)
          pendingScreenTransitionCallback(0)
 8003142:	2500      	movs	r5, #0
        instance = this;
 8003144:	601c      	str	r4, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 8003146:	4629      	mov	r1, r5
      model(m)
 8003148:	4b0d      	ldr	r3, [pc, #52]	; (8003180 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x4c>)
 800314a:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun_0(0)
 800314c:	4b0d      	ldr	r3, [pc, #52]	; (8003184 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 800314e:	e9c4 3550 	strd	r3, r5, [r4, #320]	; 0x140
 8003152:	4b0d      	ldr	r3, [pc, #52]	; (8003188 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 8003154:	6818      	ldr	r0, [r3, #0]
 8003156:	e9c4 5552 	strd	r5, r5, [r4, #328]	; 0x148
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 800315a:	6803      	ldr	r3, [r0, #0]
          pendingScreenTransitionCallback(0)
 800315c:	e9c4 554e 	strd	r5, r5, [r4, #312]	; 0x138
 8003160:	689b      	ldr	r3, [r3, #8]
      model(m)
 8003162:	e9c4 7654 	strd	r7, r6, [r4, #336]	; 0x150
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 8003166:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8003168:	4628      	mov	r0, r5
 800316a:	f000 fc13 	bl	8003994 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD24bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 800316e:	f7ff ff69 	bl	8003044 <_ZN8touchgfx3HAL3lcdEv>
 8003172:	f015 fa8e 	bl	8018692 <_ZN8touchgfx8LCD24bpp22enableTextureMapperAllEv>
}
 8003176:	4620      	mov	r0, r4
 8003178:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800317a:	bf00      	nop
 800317c:	2400e120 	.word	0x2400e120
 8003180:	080220d8 	.word	0x080220d8
 8003184:	080220c0 	.word	0x080220c0
 8003188:	2400e0b4 	.word	0x2400e0b4

0800318c <_ZN23FrontendApplicationBase29gotoInitialScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800318c:	4b06      	ldr	r3, [pc, #24]	; (80031a8 <_ZN23FrontendApplicationBase29gotoInitialScreenNoTransitionEv+0x1c>)
 800318e:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8003192:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8003196:	2300      	movs	r3, #0
 8003198:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 800319c:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 80031a0:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 80031a4:	4770      	bx	lr
 80031a6:	bf00      	nop
 80031a8:	08002ef5 	.word	0x08002ef5

080031ac <_ZN23FrontendApplicationBase37gotoCountdownScreenWipeTransitionEastEv>:
 80031ac:	4b06      	ldr	r3, [pc, #24]	; (80031c8 <_ZN23FrontendApplicationBase37gotoCountdownScreenWipeTransitionEastEv+0x1c>)
 80031ae:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 80031b2:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 80031b6:	2300      	movs	r3, #0
 80031b8:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 80031bc:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 80031c0:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 80031c4:	4770      	bx	lr
 80031c6:	bf00      	nop
 80031c8:	08002d51 	.word	0x08002d51

080031cc <_ZN23FrontendApplicationBase26gotoBoomScreenNoTransitionEv>:
 80031cc:	4b06      	ldr	r3, [pc, #24]	; (80031e8 <_ZN23FrontendApplicationBase26gotoBoomScreenNoTransitionEv+0x1c>)
 80031ce:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 80031d2:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 80031d6:	2300      	movs	r3, #0
 80031d8:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 80031dc:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 80031e0:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 80031e4:	4770      	bx	lr
 80031e6:	bf00      	nop
 80031e8:	08002c05 	.word	0x08002c05

080031ec <_ZN23FrontendApplicationBase30gotoBlankScreenBlockTransitionEv>:
 80031ec:	4b06      	ldr	r3, [pc, #24]	; (8003208 <_ZN23FrontendApplicationBase30gotoBlankScreenBlockTransitionEv+0x1c>)
 80031ee:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 80031f2:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 80031f6:	2300      	movs	r3, #0
 80031f8:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 80031fc:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8003200:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8003204:	4770      	bx	lr
 8003206:	bf00      	nop
 8003208:	08002a85 	.word	0x08002a85

0800320c <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 800320c:	6a00      	ldr	r0, [r0, #32]
 800320e:	4770      	bx	lr

08003210 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8003210:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8003212:	4770      	bx	lr

08003214 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8003214:	4770      	bx	lr

08003216 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8003216:	888b      	ldrh	r3, [r1, #4]
 8003218:	6980      	ldr	r0, [r0, #24]
 800321a:	0adb      	lsrs	r3, r3, #11
 800321c:	680a      	ldr	r2, [r1, #0]
 800321e:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8003222:	4410      	add	r0, r2
 8003224:	4770      	bx	lr

08003226 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8003226:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8003228:	b1c2      	cbz	r2, 800325c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 800322a:	7b13      	ldrb	r3, [r2, #12]
 800322c:	b1b3      	cbz	r3, 800325c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 800322e:	7b54      	ldrb	r4, [r2, #13]
 8003230:	7ad2      	ldrb	r2, [r2, #11]
 8003232:	0224      	lsls	r4, r4, #8
 8003234:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8003238:	4314      	orrs	r4, r2
 800323a:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800323c:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800323e:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8003242:	8813      	ldrh	r3, [r2, #0]
 8003244:	428b      	cmp	r3, r1
 8003246:	d102      	bne.n	800324e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8003248:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 800324c:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 800324e:	d805      	bhi.n	800325c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8003250:	3801      	subs	r0, #1
 8003252:	3204      	adds	r2, #4
 8003254:	b280      	uxth	r0, r0
 8003256:	2800      	cmp	r0, #0
 8003258:	d1f3      	bne.n	8003242 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 800325a:	e7f7      	b.n	800324c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 800325c:	2000      	movs	r0, #0
 800325e:	e7f5      	b.n	800324c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08003260 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8003260:	b510      	push	{r4, lr}
 8003262:	4604      	mov	r4, r0
 8003264:	2128      	movs	r1, #40	; 0x28
 8003266:	f01c fcc2 	bl	801fbee <_ZdlPvj>
 800326a:	4620      	mov	r0, r4
 800326c:	bd10      	pop	{r4, pc}
	...

08003270 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8003270:	b530      	push	{r4, r5, lr}
 8003272:	b089      	sub	sp, #36	; 0x24
 8003274:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8003276:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 800327a:	9506      	str	r5, [sp, #24]
 800327c:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8003280:	9505      	str	r5, [sp, #20]
 8003282:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8003286:	9504      	str	r5, [sp, #16]
 8003288:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 800328c:	9503      	str	r5, [sp, #12]
 800328e:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 8003292:	9502      	str	r5, [sp, #8]
 8003294:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8003298:	9501      	str	r5, [sp, #4]
 800329a:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 800329e:	9500      	str	r5, [sp, #0]
 80032a0:	f00f fc7a 	bl	8012b98 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 80032a4:	4b06      	ldr	r3, [pc, #24]	; (80032c0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x50>)
}
 80032a6:	4620      	mov	r0, r4
      arabicTable(formsTable)
 80032a8:	6023      	str	r3, [r4, #0]
 80032aa:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80032ac:	61a3      	str	r3, [r4, #24]
 80032ae:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80032b0:	61e3      	str	r3, [r4, #28]
 80032b2:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80032b4:	6223      	str	r3, [r4, #32]
 80032b6:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80032b8:	6263      	str	r3, [r4, #36]	; 0x24
}
 80032ba:	b009      	add	sp, #36	; 0x24
 80032bc:	bd30      	pop	{r4, r5, pc}
 80032be:	bf00      	nop
 80032c0:	080221f8 	.word	0x080221f8

080032c4 <_ZN15InitialViewBaseD1Ev>:

class InitialViewBase : public touchgfx::View<InitialPresenter>
{
public:
    InitialViewBase();
    virtual ~InitialViewBase() {}
 80032c4:	4770      	bx	lr

080032c6 <_ZN15InitialViewBase21sensorOverrideChangedEv>:
     * Virtual Action Handlers
     */
    virtual void sensorOverrideChanged()
    {
        // Override and implement this function in Initial
    }
 80032c6:	4770      	bx	lr

080032c8 <_ZN15InitialViewBase11setupScreenEv>:
}

void InitialViewBase::setupScreen()
{

}
 80032c8:	4770      	bx	lr

080032ca <_ZN8touchgfx8CallbackI15InitialViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80032ca:	4770      	bx	lr

080032cc <_ZN8touchgfx8CallbackI15InitialViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80032cc:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80032ce:	6844      	ldr	r4, [r0, #4]
    virtual void execute(T1 t1)
 80032d0:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 80032d2:	68c2      	ldr	r2, [r0, #12]
 80032d4:	689b      	ldr	r3, [r3, #8]
 80032d6:	1055      	asrs	r5, r2, #1
 80032d8:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80032dc:	07d2      	lsls	r2, r2, #31
 80032de:	bf48      	it	mi
 80032e0:	5962      	ldrmi	r2, [r4, r5]
    }
 80032e2:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80032e4:	bf48      	it	mi
 80032e6:	58d3      	ldrmi	r3, [r2, r3]
 80032e8:	4718      	bx	r3

080032ea <_ZNK8touchgfx8CallbackI15InitialViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 80032ea:	6843      	ldr	r3, [r0, #4]
 80032ec:	b12b      	cbz	r3, 80032fa <_ZNK8touchgfx8CallbackI15InitialViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80032ee:	6883      	ldr	r3, [r0, #8]
 80032f0:	b92b      	cbnz	r3, 80032fe <_ZNK8touchgfx8CallbackI15InitialViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80032f2:	68c0      	ldr	r0, [r0, #12]
 80032f4:	f000 0001 	and.w	r0, r0, #1
 80032f8:	4770      	bx	lr
 80032fa:	4618      	mov	r0, r3
 80032fc:	4770      	bx	lr
 80032fe:	2001      	movs	r0, #1
    }
 8003300:	4770      	bx	lr

08003302 <_ZN8touchgfx8CallbackI15InitialViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003302:	b510      	push	{r4, lr}
 8003304:	4604      	mov	r4, r0
 8003306:	2110      	movs	r1, #16
 8003308:	f01c fc71 	bl	801fbee <_ZdlPvj>
 800330c:	4620      	mov	r0, r4
 800330e:	bd10      	pop	{r4, pc}

08003310 <_ZN15InitialViewBaseD0Ev>:
    virtual ~InitialViewBase() {}
 8003310:	b510      	push	{r4, lr}
 8003312:	4604      	mov	r4, r0
 8003314:	f243 11d8 	movw	r1, #12760	; 0x31d8
 8003318:	f01c fc69 	bl	801fbee <_ZdlPvj>
 800331c:	4620      	mov	r0, r4
 800331e:	bd10      	pop	{r4, pc}

08003320 <_ZN15InitialViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    }
}

void InitialViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &sensorOverrideToggle)
 8003320:	f100 02e0 	add.w	r2, r0, #224	; 0xe0
 8003324:	428a      	cmp	r2, r1
 8003326:	d102      	bne.n	800332e <_ZN15InitialViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xe>
    {
        //SensorOverrideClick
        //When sensorOverrideToggle clicked call virtual function
        //Call sensorOverrideChanged
        sensorOverrideChanged();
 8003328:	6803      	ldr	r3, [r0, #0]
 800332a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800332c:	4718      	bx	r3
    }
}
 800332e:	4770      	bx	lr

08003330 <_ZN15InitialViewBase14handleKeyEventEh>:
{
 8003330:	b508      	push	{r3, lr}
    if(0 == key)
 8003332:	b929      	cbnz	r1, 8003340 <_ZN15InitialViewBase14handleKeyEventEh+0x10>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003334:	f00e fb82 	bl	8011a3c <_ZN8touchgfx11Application11getInstanceEv>
}
 8003338:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoBoomScreenNoTransition();
 800333c:	f7ff bf46 	b.w	80031cc <_ZN23FrontendApplicationBase26gotoBoomScreenNoTransitionEv>
}
 8003340:	bd08      	pop	{r3, pc}
	...

08003344 <_ZN8touchgfx6WidgetC1Ev>:
 8003344:	2200      	movs	r2, #0
 8003346:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800334a:	e9c0 2203 	strd	r2, r2, [r0, #12]
          visible(true)
 800334e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8003352:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8003356:	f44f 7280 	mov.w	r2, #256	; 0x100
 800335a:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 800335c:	4a01      	ldr	r2, [pc, #4]	; (8003364 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 800335e:	6002      	str	r2, [r0, #0]
 8003360:	4770      	bx	lr
 8003362:	bf00      	nop
 8003364:	08022358 	.word	0x08022358

08003368 <_ZN8touchgfx21AbstractPainterRGB888C1Ev>:
 * @see AbstractPainter
 */
class AbstractPainterRGB888 : public AbstractPainter
{
public:
    AbstractPainterRGB888()
 8003368:	b570      	push	{r4, r5, r6, lr}
public:
    /** Initializes a new instance of the AbstractPainter class. */
    AbstractPainter()
        : areaOffsetX(0),
          areaOffsetY(0),
          widgetAlpha(255)
 800336a:	2300      	movs	r3, #0
 800336c:	22ff      	movs	r2, #255	; 0xff
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800336e:	4e14      	ldr	r6, [pc, #80]	; (80033c0 <_ZN8touchgfx21AbstractPainterRGB888C1Ev+0x58>)
 8003370:	4604      	mov	r4, r0
 8003372:	7202      	strb	r2, [r0, #8]
 8003374:	6043      	str	r3, [r0, #4]
        : AbstractPainter(), currentX(0), currentY(0)
 8003376:	4a13      	ldr	r2, [pc, #76]	; (80033c4 <_ZN8touchgfx21AbstractPainterRGB888C1Ev+0x5c>)
 8003378:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800337c:	6833      	ldr	r3, [r6, #0]
 800337e:	6002      	str	r2, [r0, #0]
 8003380:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8003384:	b10a      	cbz	r2, 800338a <_ZN8touchgfx21AbstractPainterRGB888C1Ev+0x22>
 8003386:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8003388:	b900      	cbnz	r0, 800338c <_ZN8touchgfx21AbstractPainterRGB888C1Ev+0x24>
        return instance->lcdRef;
 800338a:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 800338c:	6803      	ldr	r3, [r0, #0]
 800338e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003390:	4798      	blx	r3
 8003392:	1e43      	subs	r3, r0, #1
 8003394:	425d      	negs	r5, r3
 8003396:	415d      	adcs	r5, r3
        return auxiliaryLCD;
 8003398:	6833      	ldr	r3, [r6, #0]
 800339a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
 800339c:	b130      	cbz	r0, 80033ac <_ZN8touchgfx21AbstractPainterRGB888C1Ev+0x44>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 800339e:	6803      	ldr	r3, [r0, #0]
 80033a0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80033a2:	4798      	blx	r3
 80033a4:	2801      	cmp	r0, #1
 80033a6:	bf08      	it	eq
 80033a8:	f045 0501 	orreq.w	r5, r5, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB888) && "The chosen painter only works with RGB888 displays");
 80033ac:	b92d      	cbnz	r5, 80033ba <_ZN8touchgfx21AbstractPainterRGB888C1Ev+0x52>
 80033ae:	4b06      	ldr	r3, [pc, #24]	; (80033c8 <_ZN8touchgfx21AbstractPainterRGB888C1Ev+0x60>)
 80033b0:	2128      	movs	r1, #40	; 0x28
 80033b2:	4a06      	ldr	r2, [pc, #24]	; (80033cc <_ZN8touchgfx21AbstractPainterRGB888C1Ev+0x64>)
 80033b4:	4806      	ldr	r0, [pc, #24]	; (80033d0 <_ZN8touchgfx21AbstractPainterRGB888C1Ev+0x68>)
 80033b6:	f01c fe13 	bl	801ffe0 <__assert_func>
    }
 80033ba:	4620      	mov	r0, r4
 80033bc:	bd70      	pop	{r4, r5, r6, pc}
 80033be:	bf00      	nop
 80033c0:	2400e0b4 	.word	0x2400e0b4
 80033c4:	08023a48 	.word	0x08023a48
 80033c8:	08022248 	.word	0x08022248
 80033cc:	080222a6 	.word	0x080222a6
 80033d0:	080222df 	.word	0x080222df

080033d4 <_ZN15InitialViewBaseC1Ev>:
InitialViewBase::InitialViewBase() :
 80033d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80033d8:	4604      	mov	r4, r0
        : presenter(0)
 80033da:	2500      	movs	r5, #0
        touchable = touch;
 80033dc:	f04f 0a01 	mov.w	sl, #1
    buttonCallback(this, &InitialViewBase::buttonCallbackHandler)
 80033e0:	4627      	mov	r7, r4
 80033e2:	f104 0898 	add.w	r8, r4, #152	; 0x98
 80033e6:	f104 09e0 	add.w	r9, r4, #224	; 0xe0
 80033ea:	f504 768c 	add.w	r6, r4, #280	; 0x118
 80033ee:	f504 7b2f 	add.w	fp, r4, #700	; 0x2bc
InitialViewBase::InitialViewBase() :
 80033f2:	ed2d 8b02 	vpush	{d8}
 80033f6:	b08d      	sub	sp, #52	; 0x34
 80033f8:	f00f fe74 	bl	80130e4 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &InitialViewBase::buttonCallbackHandler)
 80033fc:	4bab      	ldr	r3, [pc, #684]	; (80036ac <_ZN15InitialViewBaseC1Ev+0x2d8>)
        : Widget(), alpha(255), color(0)
 80033fe:	4629      	mov	r1, r5
 8003400:	2226      	movs	r2, #38	; 0x26
 8003402:	63e5      	str	r5, [r4, #60]	; 0x3c
 8003404:	f847 3b40 	str.w	r3, [r7], #64
 8003408:	4638      	mov	r0, r7
 800340a:	f01c fe8f 	bl	802012c <memset>
 800340e:	4638      	mov	r0, r7
 8003410:	f7ff ff98 	bl	8003344 <_ZN8touchgfx6WidgetC1Ev>
 8003414:	4ba6      	ldr	r3, [pc, #664]	; (80036b0 <_ZN15InitialViewBaseC1Ev+0x2dc>)
 */
class TextArea : public Widget
{
public:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8003416:	4629      	mov	r1, r5
 8003418:	2226      	movs	r2, #38	; 0x26
 800341a:	6423      	str	r3, [r4, #64]	; 0x40
 800341c:	23ff      	movs	r3, #255	; 0xff
 800341e:	4640      	mov	r0, r8
        : color(col)
 8003420:	66a5      	str	r5, [r4, #104]	; 0x68
 8003422:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 8003426:	f104 036c 	add.w	r3, r4, #108	; 0x6c
class Container : public Drawable
{
public:
    Container()
        : Drawable(),
          firstChild(0)
 800342a:	f8c4 5094 	str.w	r5, [r4, #148]	; 0x94
 800342e:	ee08 3a10 	vmov	s16, r3
          visible(true)
 8003432:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003436:	f8a4 3090 	strh.w	r3, [r4, #144]	; 0x90
 800343a:	4b9e      	ldr	r3, [pc, #632]	; (80036b4 <_ZN15InitialViewBaseC1Ev+0x2e0>)
        : x(0), y(0), width(0), height(0)
 800343c:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 8003440:	66e3      	str	r3, [r4, #108]	; 0x6c
 8003442:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
 8003446:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 800344a:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
 800344e:	f01c fe6d 	bl	802012c <memset>
 8003452:	4640      	mov	r0, r8
 8003454:	f7ff ff76 	bl	8003344 <_ZN8touchgfx6WidgetC1Ev>
 8003458:	4b97      	ldr	r3, [pc, #604]	; (80036b8 <_ZN15InitialViewBaseC1Ev+0x2e4>)
 800345a:	f44f 017f 	mov.w	r1, #16711680	; 0xff0000
        : x(x), y(y), width(width), height(height)
 800345e:	f04f 32ff 	mov.w	r2, #4294967295
 8003462:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
class AbstractButton : public Widget
{
public:
    /** Sets this Widget touchable so the user can interact with buttons. */
    AbstractButton()
        : Widget(), action(), pressed(false)
 8003466:	4648      	mov	r0, r9
 8003468:	4b94      	ldr	r3, [pc, #592]	; (80036bc <_ZN15InitialViewBaseC1Ev+0x2e8>)
 800346a:	f8c4 10cc 	str.w	r1, [r4, #204]	; 0xcc
 800346e:	4629      	mov	r1, r5
 8003470:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8003474:	f64f 73ff 	movw	r3, #65535	; 0xffff
        : color(col)
 8003478:	f8c4 50c8 	str.w	r5, [r4, #200]	; 0xc8
 800347c:	f8a4 30c4 	strh.w	r3, [r4, #196]	; 0xc4
 8003480:	f8a4 50d0 	strh.w	r5, [r4, #208]	; 0xd0
        : x(x), y(y), width(width), height(height)
 8003484:	f8c4 50d4 	str.w	r5, [r4, #212]	; 0xd4
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
 8003488:	e9c4 2536 	strd	r2, r5, [r4, #216]	; 0xd8
 800348c:	2226      	movs	r2, #38	; 0x26
 800348e:	f01c fe4d 	bl	802012c <memset>
 8003492:	4648      	mov	r0, r9
 8003494:	f7ff ff56 	bl	8003344 <_ZN8touchgfx6WidgetC1Ev>
 8003498:	f04f 32ff 	mov.w	r2, #4294967295
 800349c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80034a0:	4630      	mov	r0, r6
 80034a2:	f8a4 210e 	strh.w	r2, [r4, #270]	; 0x10e
 * A ToggleButton is a Button specialization that swaps the two bitmaps when clicked, such that
 * the previous "pressed" bitmap, now becomes the one displayed when button is not
 * pressed. This can by used to give the effect of a button that can be pressed in and
 * when it is subsequently pressed, it will pop back out.
 */
class ToggleButton : public Button
 80034a6:	4a86      	ldr	r2, [pc, #536]	; (80036c0 <_ZN15InitialViewBaseC1Ev+0x2ec>)
 80034a8:	f8a4 3110 	strh.w	r3, [r4, #272]	; 0x110
 80034ac:	f8c4 20e0 	str.w	r2, [r4, #224]	; 0xe0
 */
class Button : public AbstractButton
{
public:
    Button()
        : AbstractButton(), up(), down(), alpha(255)
 80034b0:	f884 3112 	strb.w	r3, [r4, #274]	; 0x112
 80034b4:	f8a4 3114 	strh.w	r3, [r4, #276]	; 0x114
 80034b8:	f8c4 5108 	str.w	r5, [r4, #264]	; 0x108
 80034bc:	f884 510c 	strb.w	r5, [r4, #268]	; 0x10c
        touchable = touch;
 80034c0:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 80034c4:	f00c f954 	bl	800f770 <_ZN8touchgfx5GaugeC1Ev>
 80034c8:	f64f 73ff 	movw	r3, #65535	; 0xffff
     */
    PainterRGB888Bitmap(const Bitmap& bmp = Bitmap(BITMAP_INVALID))
        : AbstractPainterRGB888(),
          bitmapARGB8888Pointer(0), bitmapRGB888Pointer(0),
          bitmap(), bitmapRectToFrameBuffer(),
          xOffset(0), yOffset(0), isTiled(false)
 80034cc:	4658      	mov	r0, fp
 80034ce:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80034d2:	f7ff ff49 	bl	8003368 <_ZN8touchgfx21AbstractPainterRGB888C1Ev>
 80034d6:	4a7b      	ldr	r2, [pc, #492]	; (80036c4 <_ZN15InitialViewBaseC1Ev+0x2f0>)
 80034d8:	f64f 73ff 	movw	r3, #65535	; 0xffff
    {
        setBitmap(bmp);
 80034dc:	a90a      	add	r1, sp, #40	; 0x28
 80034de:	4658      	mov	r0, fp
          xOffset(0), yOffset(0), isTiled(false)
 80034e0:	f8c4 22bc 	str.w	r2, [r4, #700]	; 0x2bc
        : x(0), y(0), width(0), height(0)
 80034e4:	f8c4 52e0 	str.w	r5, [r4, #736]	; 0x2e0
 80034e8:	f8a4 52e4 	strh.w	r5, [r4, #740]	; 0x2e4
 80034ec:	f884 52e6 	strb.w	r5, [r4, #742]	; 0x2e6
 80034f0:	e9c4 35b6 	strd	r3, r5, [r4, #728]	; 0x2d8
 80034f4:	e9c4 55b4 	strd	r5, r5, [r4, #720]	; 0x2d0
        setBitmap(bmp);
 80034f8:	f00a fe60 	bl	800e1bc <_ZN8touchgfx19PainterRGB888Bitmap9setBitmapERKNS_6BitmapE>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 80034fc:	4b72      	ldr	r3, [pc, #456]	; (80036c8 <_ZN15InitialViewBaseC1Ev+0x2f4>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80034fe:	f504 703e 	add.w	r0, r4, #760	; 0x2f8
 8003502:	f642 61e0 	movw	r1, #12000	; 0x2ee0
 8003506:	e9c4 34ba 	strd	r3, r4, [r4, #744]	; 0x2e8
 800350a:	4b70      	ldr	r3, [pc, #448]	; (80036cc <_ZN15InitialViewBaseC1Ev+0x2f8>)
 800350c:	e9c4 35bc 	strd	r3, r5, [r4, #752]	; 0x2f0
 8003510:	f00c fcee 	bl	800fef0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 800, 480);
 8003514:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 8003518:	462a      	mov	r2, r5
 800351a:	4629      	mov	r1, r5
 800351c:	4638      	mov	r0, r7
 800351e:	9300      	str	r3, [sp, #0]
 8003520:	f44f 7348 	mov.w	r3, #800	; 0x320
 8003524:	f7ff f944 	bl	80027b0 <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 8003528:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
    sensorOverrideContainer.setPosition(472, 405, 328, 75);
 800352c:	ee18 0a10 	vmov	r0, s16
 8003530:	f240 1295 	movw	r2, #405	; 0x195
 8003534:	66a3      	str	r3, [r4, #104]	; 0x68
 8003536:	234b      	movs	r3, #75	; 0x4b
 8003538:	f44f 71ec 	mov.w	r1, #472	; 0x1d8
 800353c:	9300      	str	r3, [sp, #0]
 800353e:	f44f 73a4 	mov.w	r3, #328	; 0x148
 8003542:	f7ff f935 	bl	80027b0 <_ZN8touchgfx8Drawable11setPositionEssss>
    sensorOverrideLabel.setXY(158, 25);
 8003546:	4640      	mov	r0, r8
 8003548:	2219      	movs	r2, #25
 800354a:	219e      	movs	r1, #158	; 0x9e
 800354c:	f7ff f884 	bl	8002658 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 8003550:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 8003554:	a804      	add	r0, sp, #16
 8003556:	4641      	mov	r1, r8
        this->color = color;
 8003558:	f8c4 20c8 	str.w	r2, [r4, #200]	; 0xc8
        linespace = space;
 800355c:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8003560:	f00b fd28 	bl	800efb4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003564:	a804      	add	r0, sp, #16
 8003566:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 800356a:	c807      	ldmia	r0, {r0, r1, r2}
 800356c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003570:	4b52      	ldr	r3, [pc, #328]	; (80036bc <_ZN15InitialViewBaseC1Ev+0x2e8>)
    sensorOverrideLabel.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HFBX));
 8003572:	a90a      	add	r1, sp, #40	; 0x28
 8003574:	4640      	mov	r0, r8
 8003576:	f8ad a02c 	strh.w	sl, [sp, #44]	; 0x2c
 800357a:	930a      	str	r3, [sp, #40]	; 0x28
 800357c:	f00c f85e 	bl	800f63c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    sensorOverrideContainer.add(sensorOverrideLabel);
 8003580:	4641      	mov	r1, r8
 8003582:	ee18 0a10 	vmov	r0, s16
 8003586:	f009 f8f3 	bl	800c770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    sensorOverrideToggle.setXY(20, 18);
 800358a:	4648      	mov	r0, r9
 800358c:	2212      	movs	r2, #18
 800358e:	2114      	movs	r1, #20
 8003590:	f7ff f862 	bl	8002658 <_ZN8touchgfx8Drawable5setXYEss>
 8003594:	2303      	movs	r3, #3
{
public:
    virtual void setBitmaps(const Bitmap& bitmapReleased, const Bitmap& bitmapPressed)
    {
        originalPressed = bitmapPressed;
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 8003596:	aa0a      	add	r2, sp, #40	; 0x28
 8003598:	a909      	add	r1, sp, #36	; 0x24
 800359a:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800359e:	2304      	movs	r3, #4
 80035a0:	4648      	mov	r0, r9
        originalPressed = bitmapPressed;
 80035a2:	f8a4 3114 	strh.w	r3, [r4, #276]	; 0x114
 80035a6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 80035aa:	f00c fa61 	bl	800fa70 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    sensorOverrideToggle.setAction(buttonCallback);
 80035ae:	f504 733a 	add.w	r3, r4, #744	; 0x2e8
    sensorOverrideContainer.add(sensorOverrideToggle);
 80035b2:	4649      	mov	r1, r9
 80035b4:	ee18 0a10 	vmov	r0, s16
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 80035b8:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 80035bc:	f009 f8d8 	bl	800c770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge1.setBackground(touchgfx::Bitmap(BITMAP_DARK_GAUGES_ORIGINAL_GAUGE_BACKGROUND_STYLE_01_ID));
 80035c0:	a90a      	add	r1, sp, #40	; 0x28
 80035c2:	4630      	mov	r0, r6
 80035c4:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 80035c8:	f008 fd98 	bl	800c0fc <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    gauge1.setPosition(275, 115, 251, 251);
 80035cc:	23fb      	movs	r3, #251	; 0xfb
 80035ce:	4630      	mov	r0, r6
 80035d0:	2273      	movs	r2, #115	; 0x73
 80035d2:	9300      	str	r3, [sp, #0]
 80035d4:	f240 1113 	movw	r1, #275	; 0x113
 80035d8:	f7ff f8ea 	bl	80027b0 <_ZN8touchgfx8Drawable11setPositionEssss>
    gauge1.setCenter(125, 125);
 80035dc:	227d      	movs	r2, #125	; 0x7d
 80035de:	4630      	mov	r0, r6
 80035e0:	4611      	mov	r1, r2
 80035e2:	f00c f99e 	bl	800f922 <_ZN8touchgfx5Gauge9setCenterEii>
    gauge1.setStartEndAngle(-90, 180);
 80035e6:	4630      	mov	r0, r6
 80035e8:	22b4      	movs	r2, #180	; 0xb4
 80035ea:	f06f 0159 	mvn.w	r1, #89	; 0x59
 80035ee:	f00c fa1d 	bl	800fa2c <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    gauge1.setRange(0, 150);
 80035f2:	462b      	mov	r3, r5
 80035f4:	2296      	movs	r2, #150	; 0x96
 80035f6:	4629      	mov	r1, r5
 80035f8:	4630      	mov	r0, r6
 80035fa:	9500      	str	r5, [sp, #0]
 80035fc:	f008 fcac 	bl	800bf58 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    gauge1.setValue(0);
 8003600:	4629      	mov	r1, r5
 8003602:	4630      	mov	r0, r6
 8003604:	f00c f9bc 	bl	800f980 <_ZN8touchgfx5Gauge8setValueEi>
    gauge1.setEasingEquation(touchgfx::EasingEquations::linearEaseIn);
 8003608:	4630      	mov	r0, r6
 800360a:	4931      	ldr	r1, [pc, #196]	; (80036d0 <_ZN15InitialViewBaseC1Ev+0x2fc>)
 800360c:	f008 fc1d 	bl	800be4a <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>
    gauge1.setNeedle(BITMAP_DARK_NEEDLES_ORIGINAL_GAUGE_NEEDLE_STYLE_01_ID, 11, 55);
 8003610:	220b      	movs	r2, #11
 8003612:	2337      	movs	r3, #55	; 0x37
 8003614:	4630      	mov	r0, r6
 8003616:	2102      	movs	r1, #2
 8003618:	f00c f96e 	bl	800f8f8 <_ZN8touchgfx5Gauge9setNeedleEtss>
    gauge1.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 800361c:	4651      	mov	r1, sl
 800361e:	4630      	mov	r0, r6
 8003620:	f00c f906 	bl	800f830 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    gauge1.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8003624:	4651      	mov	r1, sl
 8003626:	4630      	mov	r0, r6
 8003628:	f00c f905 	bl	800f836 <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    gauge1.setArcVisible();
 800362c:	4651      	mov	r1, sl
 800362e:	4630      	mov	r0, r6
 8003630:	f00c f904 	bl	800f83c <_ZN8touchgfx5Gauge13setArcVisibleEb>
    gauge1Painter.setBitmap(touchgfx::Bitmap(BITMAP_DARK_GAUGES_ORIGINAL_GAUGE_FILL_STYLE_01_ID));
 8003634:	a90a      	add	r1, sp, #40	; 0x28
 8003636:	4658      	mov	r0, fp
 8003638:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
 800363c:	f00a fdbe 	bl	800e1bc <_ZN8touchgfx19PainterRGB888Bitmap9setBitmapERKNS_6BitmapE>
    gauge1.getArc().setPainter(gauge1Painter);
 8003640:	4630      	mov	r0, r6
 8003642:	f00c f8fe 	bl	800f842 <_ZN8touchgfx5Gauge6getArcEv>
 8003646:	6803      	ldr	r3, [r0, #0]
 8003648:	4659      	mov	r1, fp
 800364a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800364c:	4798      	blx	r3
    gauge1.getArc().setRadius(94);
 800364e:	4630      	mov	r0, r6
 8003650:	f00c f8f7 	bl	800f842 <_ZN8touchgfx5Gauge6getArcEv>
     * @note The area containing the Circle is not invalidated.
     */
    template <typename T>
    void setRadius(const T r)
    {
        this->circleRadius = CWRUtil::toQ5(r);
 8003654:	f44f 633c 	mov.w	r3, #3008	; 0xbc0
 8003658:	6383      	str	r3, [r0, #56]	; 0x38
    gauge1.getArc().setLineWidth(14);
 800365a:	4630      	mov	r0, r6
 800365c:	f00c f8f1 	bl	800f842 <_ZN8touchgfx5Gauge6getArcEv>
     *       before updating the width to ensure that the old circle is completely erased.
     */
    template <typename T>
    void setLineWidth(const T width)
    {
        this->circleLineWidth = CWRUtil::toQ5(width);
 8003660:	f44f 73e0 	mov.w	r3, #448	; 0x1c0
 8003664:	6443      	str	r3, [r0, #68]	; 0x44
    gauge1.getArc().setCapPrecision(180);
 8003666:	4630      	mov	r0, r6
 8003668:	f00c f8eb 	bl	800f842 <_ZN8touchgfx5Gauge6getArcEv>
 800366c:	21b4      	movs	r1, #180	; 0xb4
 800366e:	f00a fe57 	bl	800e320 <_ZN8touchgfx6Circle15setCapPrecisionEi>
    gauge1.setArcPosition(28, 30, 196, 88);
 8003672:	2358      	movs	r3, #88	; 0x58
 8003674:	221e      	movs	r2, #30
 8003676:	4630      	mov	r0, r6
 8003678:	9300      	str	r3, [sp, #0]
 800367a:	211c      	movs	r1, #28
 800367c:	23c4      	movs	r3, #196	; 0xc4
 800367e:	f00c f8af 	bl	800f7e0 <_ZN8touchgfx5Gauge14setArcPositionEssss>
 8003682:	1d20      	adds	r0, r4, #4
 8003684:	4639      	mov	r1, r7
 8003686:	9003      	str	r0, [sp, #12]
 8003688:	f009 f872 	bl	800c770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800368c:	ee18 1a10 	vmov	r1, s16
 8003690:	9803      	ldr	r0, [sp, #12]
 8003692:	f009 f86d 	bl	800c770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003696:	9803      	ldr	r0, [sp, #12]
 8003698:	4631      	mov	r1, r6
 800369a:	f009 f869 	bl	800c770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800369e:	4620      	mov	r0, r4
 80036a0:	b00d      	add	sp, #52	; 0x34
 80036a2:	ecbd 8b02 	vpop	{d8}
 80036a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80036aa:	bf00      	nop
 80036ac:	080223d8 	.word	0x080223d8
 80036b0:	08023f74 	.word	0x08023f74
 80036b4:	080231c8 	.word	0x080231c8
 80036b8:	08023eb4 	.word	0x08023eb4
 80036bc:	08021a34 	.word	0x08021a34
 80036c0:	08023e40 	.word	0x08023e40
 80036c4:	08023b64 	.word	0x08023b64
 80036c8:	080223c0 	.word	0x080223c0
 80036cc:	08003321 	.word	0x08003321
 80036d0:	08013509 	.word	0x08013509

080036d4 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_consolab_160_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_consolab_160_4bpp();

touchgfx::GeneratedFont& getFont_consolab_160_4bpp()
{
    static touchgfx::GeneratedFont consolab_160_4bpp(glyphs_consolab_160_4bpp, 16, 160, 2, 4, 1, 0, 0, unicodes_consolab_160_4bpp, kerning_consolab_160_4bpp, 63, 0, 0, 0);
 80036d4:	4770      	bx	lr
	...

080036d8 <_Z25getFont_consolab_160_4bppv>:
{
 80036d8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont consolab_160_4bpp(glyphs_consolab_160_4bpp, 16, 160, 2, 4, 1, 0, 0, unicodes_consolab_160_4bpp, kerning_consolab_160_4bpp, 63, 0, 0, 0);
 80036da:	4d16      	ldr	r5, [pc, #88]	; (8003734 <_Z25getFont_consolab_160_4bppv+0x5c>)
{
 80036dc:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont consolab_160_4bpp(glyphs_consolab_160_4bpp, 16, 160, 2, 4, 1, 0, 0, unicodes_consolab_160_4bpp, kerning_consolab_160_4bpp, 63, 0, 0, 0);
 80036de:	782c      	ldrb	r4, [r5, #0]
 80036e0:	f3bf 8f5b 	dmb	ish
 80036e4:	f014 0401 	ands.w	r4, r4, #1
 80036e8:	d120      	bne.n	800372c <_Z25getFont_consolab_160_4bppv+0x54>
 80036ea:	4628      	mov	r0, r5
 80036ec:	f01c fa81 	bl	801fbf2 <__cxa_guard_acquire>
 80036f0:	b1e0      	cbz	r0, 800372c <_Z25getFont_consolab_160_4bppv+0x54>
 80036f2:	233f      	movs	r3, #63	; 0x3f
 80036f4:	2201      	movs	r2, #1
 80036f6:	4910      	ldr	r1, [pc, #64]	; (8003738 <_Z25getFont_consolab_160_4bppv+0x60>)
 80036f8:	9307      	str	r3, [sp, #28]
 80036fa:	4b10      	ldr	r3, [pc, #64]	; (800373c <_Z25getFont_consolab_160_4bppv+0x64>)
 80036fc:	4810      	ldr	r0, [pc, #64]	; (8003740 <_Z25getFont_consolab_160_4bppv+0x68>)
 80036fe:	9306      	str	r3, [sp, #24]
 8003700:	4b10      	ldr	r3, [pc, #64]	; (8003744 <_Z25getFont_consolab_160_4bppv+0x6c>)
 8003702:	9408      	str	r4, [sp, #32]
 8003704:	9403      	str	r4, [sp, #12]
 8003706:	e9cd 4304 	strd	r4, r3, [sp, #16]
 800370a:	2304      	movs	r3, #4
 800370c:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8003710:	2302      	movs	r3, #2
 8003712:	2210      	movs	r2, #16
 8003714:	9300      	str	r3, [sp, #0]
 8003716:	23a0      	movs	r3, #160	; 0xa0
 8003718:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 800371c:	f7ff fda8 	bl	8003270 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8003720:	4809      	ldr	r0, [pc, #36]	; (8003748 <_Z25getFont_consolab_160_4bppv+0x70>)
 8003722:	f01c fc7b 	bl	802001c <atexit>
 8003726:	4628      	mov	r0, r5
 8003728:	f01c fa6f 	bl	801fc0a <__cxa_guard_release>
    return consolab_160_4bpp;
}
 800372c:	4804      	ldr	r0, [pc, #16]	; (8003740 <_Z25getFont_consolab_160_4bppv+0x68>)
 800372e:	b00d      	add	sp, #52	; 0x34
 8003730:	bd30      	pop	{r4, r5, pc}
 8003732:	bf00      	nop
 8003734:	24004680 	.word	0x24004680
 8003738:	08033a54 	.word	0x08033a54
 800373c:	08033bf0 	.word	0x08033bf0
 8003740:	24004684 	.word	0x24004684
 8003744:	08033c00 	.word	0x08033c00
 8003748:	080036d5 	.word	0x080036d5

0800374c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800374c:	4770      	bx	lr
	...

08003750 <_Z23getFont_verdana_10_4bppv>:
{
 8003750:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8003752:	4d15      	ldr	r5, [pc, #84]	; (80037a8 <_Z23getFont_verdana_10_4bppv+0x58>)
{
 8003754:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8003756:	782c      	ldrb	r4, [r5, #0]
 8003758:	f3bf 8f5b 	dmb	ish
 800375c:	f014 0401 	ands.w	r4, r4, #1
 8003760:	d11e      	bne.n	80037a0 <_Z23getFont_verdana_10_4bppv+0x50>
 8003762:	4628      	mov	r0, r5
 8003764:	f01c fa45 	bl	801fbf2 <__cxa_guard_acquire>
 8003768:	b1d0      	cbz	r0, 80037a0 <_Z23getFont_verdana_10_4bppv+0x50>
 800376a:	233f      	movs	r3, #63	; 0x3f
 800376c:	2201      	movs	r2, #1
 800376e:	490f      	ldr	r1, [pc, #60]	; (80037ac <_Z23getFont_verdana_10_4bppv+0x5c>)
 8003770:	9307      	str	r3, [sp, #28]
 8003772:	4b0f      	ldr	r3, [pc, #60]	; (80037b0 <_Z23getFont_verdana_10_4bppv+0x60>)
 8003774:	480f      	ldr	r0, [pc, #60]	; (80037b4 <_Z23getFont_verdana_10_4bppv+0x64>)
 8003776:	9306      	str	r3, [sp, #24]
 8003778:	4b0f      	ldr	r3, [pc, #60]	; (80037b8 <_Z23getFont_verdana_10_4bppv+0x68>)
 800377a:	9408      	str	r4, [sp, #32]
 800377c:	9403      	str	r4, [sp, #12]
 800377e:	9400      	str	r4, [sp, #0]
 8003780:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8003784:	2304      	movs	r3, #4
 8003786:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 800378a:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800378e:	230a      	movs	r3, #10
 8003790:	f7ff fd6e 	bl	8003270 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8003794:	4809      	ldr	r0, [pc, #36]	; (80037bc <_Z23getFont_verdana_10_4bppv+0x6c>)
 8003796:	f01c fc41 	bl	802001c <atexit>
 800379a:	4628      	mov	r0, r5
 800379c:	f01c fa35 	bl	801fc0a <__cxa_guard_release>
    return verdana_10_4bpp;
}
 80037a0:	4804      	ldr	r0, [pc, #16]	; (80037b4 <_Z23getFont_verdana_10_4bppv+0x64>)
 80037a2:	b00d      	add	sp, #52	; 0x34
 80037a4:	bd30      	pop	{r4, r5, pc}
 80037a6:	bf00      	nop
 80037a8:	240046ac 	.word	0x240046ac
 80037ac:	08033b34 	.word	0x08033b34
 80037b0:	08033bf4 	.word	0x08033bf4
 80037b4:	240046b0 	.word	0x240046b0
 80037b8:	08033c04 	.word	0x08033c04
 80037bc:	0800374d 	.word	0x0800374d

080037c0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 11, 20, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 80037c0:	4770      	bx	lr
	...

080037c4 <_Z23getFont_verdana_20_4bppv>:
{
 80037c4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 11, 20, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 80037c6:	4d15      	ldr	r5, [pc, #84]	; (800381c <_Z23getFont_verdana_20_4bppv+0x58>)
{
 80037c8:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 11, 20, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 80037ca:	782c      	ldrb	r4, [r5, #0]
 80037cc:	f3bf 8f5b 	dmb	ish
 80037d0:	f014 0401 	ands.w	r4, r4, #1
 80037d4:	d11f      	bne.n	8003816 <_Z23getFont_verdana_20_4bppv+0x52>
 80037d6:	4628      	mov	r0, r5
 80037d8:	f01c fa0b 	bl	801fbf2 <__cxa_guard_acquire>
 80037dc:	b1d8      	cbz	r0, 8003816 <_Z23getFont_verdana_20_4bppv+0x52>
 80037de:	233f      	movs	r3, #63	; 0x3f
 80037e0:	2201      	movs	r2, #1
 80037e2:	490f      	ldr	r1, [pc, #60]	; (8003820 <_Z23getFont_verdana_20_4bppv+0x5c>)
 80037e4:	9307      	str	r3, [sp, #28]
 80037e6:	4b0f      	ldr	r3, [pc, #60]	; (8003824 <_Z23getFont_verdana_20_4bppv+0x60>)
 80037e8:	480f      	ldr	r0, [pc, #60]	; (8003828 <_Z23getFont_verdana_20_4bppv+0x64>)
 80037ea:	9306      	str	r3, [sp, #24]
 80037ec:	4b0f      	ldr	r3, [pc, #60]	; (800382c <_Z23getFont_verdana_20_4bppv+0x68>)
 80037ee:	9408      	str	r4, [sp, #32]
 80037f0:	9403      	str	r4, [sp, #12]
 80037f2:	9400      	str	r4, [sp, #0]
 80037f4:	e9cd 4304 	strd	r4, r3, [sp, #16]
 80037f8:	2304      	movs	r3, #4
 80037fa:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 80037fe:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8003802:	2314      	movs	r3, #20
 8003804:	220b      	movs	r2, #11
 8003806:	f7ff fd33 	bl	8003270 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800380a:	4809      	ldr	r0, [pc, #36]	; (8003830 <_Z23getFont_verdana_20_4bppv+0x6c>)
 800380c:	f01c fc06 	bl	802001c <atexit>
 8003810:	4628      	mov	r0, r5
 8003812:	f01c f9fa 	bl	801fc0a <__cxa_guard_release>
    return verdana_20_4bpp;
}
 8003816:	4804      	ldr	r0, [pc, #16]	; (8003828 <_Z23getFont_verdana_20_4bppv+0x64>)
 8003818:	b00d      	add	sp, #52	; 0x34
 800381a:	bd30      	pop	{r4, r5, pc}
 800381c:	240046d8 	.word	0x240046d8
 8003820:	08033b44 	.word	0x08033b44
 8003824:	08033bf8 	.word	0x08033bf8
 8003828:	240046dc 	.word	0x240046dc
 800382c:	08033c08 	.word	0x08033c08
 8003830:	080037c1 	.word	0x080037c1

08003834 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8003834:	4770      	bx	lr
	...

08003838 <_Z23getFont_verdana_40_4bppv>:
{
 8003838:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800383a:	4d15      	ldr	r5, [pc, #84]	; (8003890 <_Z23getFont_verdana_40_4bppv+0x58>)
{
 800383c:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800383e:	782c      	ldrb	r4, [r5, #0]
 8003840:	f3bf 8f5b 	dmb	ish
 8003844:	f014 0401 	ands.w	r4, r4, #1
 8003848:	d11e      	bne.n	8003888 <_Z23getFont_verdana_40_4bppv+0x50>
 800384a:	4628      	mov	r0, r5
 800384c:	f01c f9d1 	bl	801fbf2 <__cxa_guard_acquire>
 8003850:	b1d0      	cbz	r0, 8003888 <_Z23getFont_verdana_40_4bppv+0x50>
 8003852:	233f      	movs	r3, #63	; 0x3f
 8003854:	2201      	movs	r2, #1
 8003856:	490f      	ldr	r1, [pc, #60]	; (8003894 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8003858:	9307      	str	r3, [sp, #28]
 800385a:	4b0f      	ldr	r3, [pc, #60]	; (8003898 <_Z23getFont_verdana_40_4bppv+0x60>)
 800385c:	480f      	ldr	r0, [pc, #60]	; (800389c <_Z23getFont_verdana_40_4bppv+0x64>)
 800385e:	9306      	str	r3, [sp, #24]
 8003860:	4b0f      	ldr	r3, [pc, #60]	; (80038a0 <_Z23getFont_verdana_40_4bppv+0x68>)
 8003862:	9408      	str	r4, [sp, #32]
 8003864:	9403      	str	r4, [sp, #12]
 8003866:	9400      	str	r4, [sp, #0]
 8003868:	e9cd 4304 	strd	r4, r3, [sp, #16]
 800386c:	2304      	movs	r3, #4
 800386e:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8003872:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8003876:	2328      	movs	r3, #40	; 0x28
 8003878:	f7ff fcfa 	bl	8003270 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800387c:	4809      	ldr	r0, [pc, #36]	; (80038a4 <_Z23getFont_verdana_40_4bppv+0x6c>)
 800387e:	f01c fbcd 	bl	802001c <atexit>
 8003882:	4628      	mov	r0, r5
 8003884:	f01c f9c1 	bl	801fc0a <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8003888:	4804      	ldr	r0, [pc, #16]	; (800389c <_Z23getFont_verdana_40_4bppv+0x64>)
 800388a:	b00d      	add	sp, #52	; 0x34
 800388c:	bd30      	pop	{r4, r5, pc}
 800388e:	bf00      	nop
 8003890:	24004704 	.word	0x24004704
 8003894:	08033be0 	.word	0x08033be0
 8003898:	08033bfc 	.word	0x08033bfc
 800389c:	24004708 	.word	0x24004708
 80038a0:	08033c0c 	.word	0x08033c0c
 80038a4:	08003835 	.word	0x08003835

080038a8 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 80038a8:	2000      	movs	r0, #0
 80038aa:	4770      	bx	lr

080038ac <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 80038ac:	2000      	movs	r0, #0
 80038ae:	4770      	bx	lr

080038b0 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80038b0:	b40e      	push	{r1, r2, r3}
 80038b2:	b503      	push	{r0, r1, lr}
 80038b4:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80038b6:	2100      	movs	r1, #0
{
 80038b8:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 80038bc:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80038be:	f00e ff9b 	bl	80127f8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80038c2:	b002      	add	sp, #8
 80038c4:	f85d eb04 	ldr.w	lr, [sp], #4
 80038c8:	b003      	add	sp, #12
 80038ca:	4770      	bx	lr

080038cc <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80038cc:	b40c      	push	{r2, r3}
 80038ce:	b507      	push	{r0, r1, r2, lr}
 80038d0:	ab04      	add	r3, sp, #16
 80038d2:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 80038d6:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 80038d8:	f00e ff8e 	bl	80127f8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80038dc:	b003      	add	sp, #12
 80038de:	f85d eb04 	ldr.w	lr, [sp], #4
 80038e2:	b002      	add	sp, #8
 80038e4:	4770      	bx	lr
	...

080038e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 80038e8:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 80038ea:	b510      	push	{r4, lr}
 80038ec:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 80038ee:	b373      	cbz	r3, 800394e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 80038f0:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 80038f2:	b92b      	cbnz	r3, 8003900 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 80038f4:	4b18      	ldr	r3, [pc, #96]	; (8003958 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 80038f6:	21c0      	movs	r1, #192	; 0xc0
 80038f8:	4a18      	ldr	r2, [pc, #96]	; (800395c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
            return buffer[pos];
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 80038fa:	4819      	ldr	r0, [pc, #100]	; (8003960 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 80038fc:	f01c fb70 	bl	801ffe0 <__assert_func>
            return buffer[pos];
 8003900:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8003902:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8003906:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8003908:	b30b      	cbz	r3, 800394e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 800390a:	f010 fb93 	bl	8014034 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 800390e:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8003910:	2b01      	cmp	r3, #1
 8003912:	d803      	bhi.n	800391c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8003914:	4b13      	ldr	r3, [pc, #76]	; (8003964 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8003916:	21c5      	movs	r1, #197	; 0xc5
 8003918:	4a13      	ldr	r2, [pc, #76]	; (8003968 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 800391a:	e7ee      	b.n	80038fa <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 800391c:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 800391e:	f640 103f 	movw	r0, #2367	; 0x93f
 8003922:	1c53      	adds	r3, r2, #1
 8003924:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8003926:	2b09      	cmp	r3, #9
 8003928:	4619      	mov	r1, r3
 800392a:	bf88      	it	hi
 800392c:	f1a3 010a 	subhi.w	r1, r3, #10
 8003930:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8003934:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8003936:	4281      	cmp	r1, r0
 8003938:	d109      	bne.n	800394e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 800393a:	2b0a      	cmp	r3, #10
 800393c:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8003940:	bf28      	it	cs
 8003942:	2300      	movcs	r3, #0
            return buffer[pos];
 8003944:	8c50      	ldrh	r0, [r2, #34]	; 0x22
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8003946:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800394a:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 800394c:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 800394e:	4620      	mov	r0, r4
}
 8003950:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8003954:	f010 ba52 	b.w	8013dfc <_ZN8touchgfx12TextProvider11getNextCharEv>
 8003958:	08022408 	.word	0x08022408
 800395c:	08022411 	.word	0x08022411
 8003960:	080224bc 	.word	0x080224bc
 8003964:	08022514 	.word	0x08022514
 8003968:	08022522 	.word	0x08022522

0800396c <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 800396c:	f010 b9fe 	b.w	8013d6c <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08003970 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8003970:	b510      	push	{r4, lr}
 8003972:	b086      	sub	sp, #24
 8003974:	ac02      	add	r4, sp, #8
 8003976:	e884 0006 	stmia.w	r4, {r1, r2}
 800397a:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 800397c:	ab0a      	add	r3, sp, #40	; 0x28
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 800397e:	4621      	mov	r1, r4
    va_start(pArg, format);
 8003980:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8003982:	9301      	str	r3, [sp, #4]
 8003984:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003986:	9300      	str	r3, [sp, #0]
 8003988:	9b08      	ldr	r3, [sp, #32]
 800398a:	f00d fb7e 	bl	801108a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800398e:	b006      	add	sp, #24
 8003990:	bd10      	pop	{r4, pc}
	...

08003994 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8003994:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8003996:	bb18      	cbnz	r0, 80039e0 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8003998:	4b12      	ldr	r3, [pc, #72]	; (80039e4 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 800399a:	4813      	ldr	r0, [pc, #76]	; (80039e8 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 800399c:	681b      	ldr	r3, [r3, #0]
 800399e:	4913      	ldr	r1, [pc, #76]	; (80039ec <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 80039a0:	b1b3      	cbz	r3, 80039d0 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 80039a2:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 80039a4:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 80039a6:	441a      	add	r2, r3
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 80039a8:	441c      	add	r4, r3
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 80039aa:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 80039ac:	685a      	ldr	r2, [r3, #4]
 80039ae:	441a      	add	r2, r3
 80039b0:	600a      	str	r2, [r1, #0]
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 80039b2:	4b0f      	ldr	r3, [pc, #60]	; (80039f0 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 80039b4:	2200      	movs	r2, #0
 80039b6:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 80039b8:	f000 f838 	bl	8003a2c <_ZN17TypedTextDatabase8getFontsEv>
 80039bc:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 80039be:	f000 f833 	bl	8003a28 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 80039c2:	4b0c      	ldr	r3, [pc, #48]	; (80039f4 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 80039c4:	601c      	str	r4, [r3, #0]
        fonts = f;
 80039c6:	4b0c      	ldr	r3, [pc, #48]	; (80039f8 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 80039c8:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 80039ca:	4b0c      	ldr	r3, [pc, #48]	; (80039fc <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 80039cc:	8018      	strh	r0, [r3, #0]
    }
}
 80039ce:	e007      	b.n	80039e0 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 80039d0:	4b0b      	ldr	r3, [pc, #44]	; (8003a00 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 80039d2:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 80039d4:	4b0b      	ldr	r3, [pc, #44]	; (8003a04 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 80039d6:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 80039d8:	4b0b      	ldr	r3, [pc, #44]	; (8003a08 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 80039da:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 80039dc:	2c00      	cmp	r4, #0
 80039de:	d1e8      	bne.n	80039b2 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 80039e0:	bd38      	pop	{r3, r4, r5, pc}
 80039e2:	bf00      	nop
 80039e4:	24004730 	.word	0x24004730
 80039e8:	24004734 	.word	0x24004734
 80039ec:	24004738 	.word	0x24004738
 80039f0:	2400473c 	.word	0x2400473c
 80039f4:	2400e124 	.word	0x2400e124
 80039f8:	2400e12c 	.word	0x2400e12c
 80039fc:	2400e128 	.word	0x2400e128
 8003a00:	901703a4 	.word	0x901703a4
 8003a04:	9017039c 	.word	0x9017039c
 8003a08:	901703cc 	.word	0x901703cc

08003a0c <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8003a0c:	4b04      	ldr	r3, [pc, #16]	; (8003a20 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8003a0e:	681b      	ldr	r3, [r3, #0]
 8003a10:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8003a14:	4b03      	ldr	r3, [pc, #12]	; (8003a24 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8003a16:	681b      	ldr	r3, [r3, #0]
}
 8003a18:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8003a1c:	4770      	bx	lr
 8003a1e:	bf00      	nop
 8003a20:	24004738 	.word	0x24004738
 8003a24:	24004734 	.word	0x24004734

08003a28 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8003a28:	2002      	movs	r0, #2
 8003a2a:	4770      	bx	lr

08003a2c <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8003a2c:	4800      	ldr	r0, [pc, #0]	; (8003a30 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8003a2e:	4770      	bx	lr
 8003a30:	24004740 	.word	0x24004740

08003a34 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_consolab_160_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8003a34:	b510      	push	{r4, lr}
};
 8003a36:	4c07      	ldr	r4, [pc, #28]	; (8003a54 <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
    &(getFont_verdana_20_4bpp()),
 8003a38:	f7ff fec4 	bl	80037c4 <_Z23getFont_verdana_20_4bppv>
};
 8003a3c:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8003a3e:	f7ff fefb 	bl	8003838 <_Z23getFont_verdana_40_4bppv>
};
 8003a42:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 8003a44:	f7ff fe84 	bl	8003750 <_Z23getFont_verdana_10_4bppv>
};
 8003a48:	60a0      	str	r0, [r4, #8]
    &(getFont_consolab_160_4bpp())
 8003a4a:	f7ff fe45 	bl	80036d8 <_Z25getFont_consolab_160_4bppv>
};
 8003a4e:	60e0      	str	r0, [r4, #12]
} // namespace TypedTextDatabase
 8003a50:	bd10      	pop	{r4, pc}
 8003a52:	bf00      	nop
 8003a54:	24004740 	.word	0x24004740

08003a58 <_ZN13ModelListener10secondTickEv>:
    }

    virtual void secondTick() { }
 8003a58:	4770      	bx	lr

08003a5a <_ZN13ModelListener19testPinStateChangedEb>:
    virtual void testPinStateChanged(bool state) { }
 8003a5a:	4770      	bx	lr

08003a5c <_ZN14BlankPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~BlankPresenter() {};
 8003a5c:	4770      	bx	lr

08003a5e <_ZThn4_N14BlankPresenterD1Ev>:
 8003a5e:	3804      	subs	r0, #4
 8003a60:	4770      	bx	lr

08003a62 <_ZN14BlankPresenter10deactivateEv>:
}

void BlankPresenter::activate()
{

}
 8003a62:	4770      	bx	lr

08003a64 <_ZN14BlankPresenterD0Ev>:
 8003a64:	b510      	push	{r4, lr}
 8003a66:	4604      	mov	r4, r0
 8003a68:	2110      	movs	r1, #16
 8003a6a:	f01c f8c0 	bl	801fbee <_ZdlPvj>
 8003a6e:	4620      	mov	r0, r4
 8003a70:	bd10      	pop	{r4, pc}

08003a72 <_ZThn4_N14BlankPresenterD0Ev>:
 8003a72:	f1a0 0004 	sub.w	r0, r0, #4
 8003a76:	e7f5      	b.n	8003a64 <_ZN14BlankPresenterD0Ev>

08003a78 <_ZN14BlankPresenterC1ER9BlankView>:
    ModelListener() : model(0) {}
 8003a78:	2200      	movs	r2, #0
    : view(v)
 8003a7a:	60c1      	str	r1, [r0, #12]
 8003a7c:	6082      	str	r2, [r0, #8]
 8003a7e:	4a04      	ldr	r2, [pc, #16]	; (8003a90 <_ZN14BlankPresenterC1ER9BlankView+0x18>)
BlankPresenter::BlankPresenter(BlankView& v)
 8003a80:	b510      	push	{r4, lr}
    : view(v)
 8003a82:	f102 0408 	add.w	r4, r2, #8
 8003a86:	3220      	adds	r2, #32
 8003a88:	6004      	str	r4, [r0, #0]
 8003a8a:	6042      	str	r2, [r0, #4]
}
 8003a8c:	bd10      	pop	{r4, pc}
 8003a8e:	bf00      	nop
 8003a90:	080225f4 	.word	0x080225f4

08003a94 <_ZN9BlankViewD1Ev>:

class BlankView : public BlankViewBase
{
public:
    BlankView();
    virtual ~BlankView() {}
 8003a94:	4770      	bx	lr

08003a96 <_ZN9BlankView14tearDownScreenEv>:
}

void BlankView::tearDownScreen()
{
    BlankViewBase::tearDownScreen();
}
 8003a96:	4770      	bx	lr

08003a98 <_ZN9BlankView11setupScreenEv>:
    BlankViewBase::setupScreen();
 8003a98:	f7fe bd65 	b.w	8002566 <_ZN13BlankViewBase11setupScreenEv>

08003a9c <_ZN9BlankViewD0Ev>:
 8003a9c:	b510      	push	{r4, lr}
 8003a9e:	4604      	mov	r4, r0
 8003aa0:	2170      	movs	r1, #112	; 0x70
 8003aa2:	f01c f8a4 	bl	801fbee <_ZdlPvj>
 8003aa6:	4620      	mov	r0, r4
 8003aa8:	bd10      	pop	{r4, pc}
	...

08003aac <_ZN9BlankViewC1Ev>:
BlankView::BlankView()
 8003aac:	b510      	push	{r4, lr}
 8003aae:	4604      	mov	r4, r0
 8003ab0:	f7fe fd7e 	bl	80025b0 <_ZN13BlankViewBaseC1Ev>
 8003ab4:	4b01      	ldr	r3, [pc, #4]	; (8003abc <_ZN9BlankViewC1Ev+0x10>)
}
 8003ab6:	4620      	mov	r0, r4
BlankView::BlankView()
 8003ab8:	6023      	str	r3, [r4, #0]
}
 8003aba:	bd10      	pop	{r4, pc}
 8003abc:	0802262c 	.word	0x0802262c

08003ac0 <_ZN13BoomPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    void deactivate();

    ~BoomPresenter() {};
 8003ac0:	4770      	bx	lr

08003ac2 <_ZThn4_N13BoomPresenterD1Ev>:
 8003ac2:	3804      	subs	r0, #4
 8003ac4:	4770      	bx	lr

08003ac6 <_ZN13BoomPresenter10deactivateEv>:
}

void BoomPresenter::deactivate()
{

}
 8003ac6:	4770      	bx	lr

08003ac8 <_ZN13BoomPresenterD0Ev>:
 8003ac8:	b510      	push	{r4, lr}
 8003aca:	4604      	mov	r4, r0
 8003acc:	2110      	movs	r1, #16
 8003ace:	f01c f88e 	bl	801fbee <_ZdlPvj>
 8003ad2:	4620      	mov	r0, r4
 8003ad4:	bd10      	pop	{r4, pc}

08003ad6 <_ZThn4_N13BoomPresenterD0Ev>:
 8003ad6:	f1a0 0004 	sub.w	r0, r0, #4
 8003ada:	e7f5      	b.n	8003ac8 <_ZN13BoomPresenterD0Ev>

08003adc <_ZN13BoomPresenter8activateEv>:
{
 8003adc:	b082      	sub	sp, #8
    sendMessage({ MSG_SET_LEDS, HALBridge::LEDS_NONE });
 8003ade:	2300      	movs	r3, #0
 8003ae0:	3004      	adds	r0, #4
 8003ae2:	f88d 3000 	strb.w	r3, [sp]
 8003ae6:	9301      	str	r3, [sp, #4]
 8003ae8:	ab02      	add	r3, sp, #8
 8003aea:	e913 0006 	ldmdb	r3, {r1, r2}
}
 8003aee:	b002      	add	sp, #8
    sendMessage({ MSG_SET_LEDS, HALBridge::LEDS_NONE });
 8003af0:	f000 ba36 	b.w	8003f60 <_ZN13ModelListener11sendMessageE9UIMessage>

08003af4 <_ZN13BoomPresenterC1ER8BoomView>:
 8003af4:	2200      	movs	r2, #0
    : view(v)
 8003af6:	60c1      	str	r1, [r0, #12]
 8003af8:	6082      	str	r2, [r0, #8]
 8003afa:	4a04      	ldr	r2, [pc, #16]	; (8003b0c <_ZN13BoomPresenterC1ER8BoomView+0x18>)
BoomPresenter::BoomPresenter(BoomView& v)
 8003afc:	b510      	push	{r4, lr}
    : view(v)
 8003afe:	f102 0408 	add.w	r4, r2, #8
 8003b02:	3220      	adds	r2, #32
 8003b04:	6004      	str	r4, [r0, #0]
 8003b06:	6042      	str	r2, [r0, #4]
}
 8003b08:	bd10      	pop	{r4, pc}
 8003b0a:	bf00      	nop
 8003b0c:	08022658 	.word	0x08022658

08003b10 <_ZN8BoomViewD1Ev>:

class BoomView : public BoomViewBase
{
public:
    BoomView();
    ~BoomView() {}
 8003b10:	4770      	bx	lr

08003b12 <_ZN8BoomView14tearDownScreenEv>:
}

void BoomView::tearDownScreen()
{
    BoomViewBase::tearDownScreen();
 8003b12:	4770      	bx	lr

08003b14 <_ZN8BoomView11setupScreenEv>:
    BoomViewBase::setupScreen();
 8003b14:	f7fe bd83 	b.w	800261e <_ZN12BoomViewBase11setupScreenEv>

08003b18 <_ZN8BoomViewD0Ev>:
 8003b18:	b510      	push	{r4, lr}
 8003b1a:	4604      	mov	r4, r0
 8003b1c:	219c      	movs	r1, #156	; 0x9c
 8003b1e:	f01c f866 	bl	801fbee <_ZdlPvj>
 8003b22:	4620      	mov	r0, r4
 8003b24:	bd10      	pop	{r4, pc}
	...

08003b28 <_ZN8BoomViewC1Ev>:
BoomView::BoomView()
 8003b28:	b510      	push	{r4, lr}
 8003b2a:	4604      	mov	r4, r0
 8003b2c:	f7fe fda2 	bl	8002674 <_ZN12BoomViewBaseC1Ev>
 8003b30:	4b01      	ldr	r3, [pc, #4]	; (8003b38 <_ZN8BoomViewC1Ev+0x10>)
}
 8003b32:	4620      	mov	r0, r4
BoomView::BoomView()
 8003b34:	6023      	str	r3, [r4, #0]
}
 8003b36:	bd10      	pop	{r4, pc}
 8003b38:	08022690 	.word	0x08022690

08003b3c <_ZN18CountdownPresenterD1Ev>:
     */
    virtual void deactivate();

    void secondTick();

    virtual ~CountdownPresenter() {};
 8003b3c:	4770      	bx	lr

08003b3e <_ZThn4_N18CountdownPresenterD1Ev>:
 8003b3e:	3804      	subs	r0, #4
 8003b40:	4770      	bx	lr

08003b42 <_ZN18CountdownPresenter10deactivateEv>:
}

void CountdownPresenter::activate()
{

}
 8003b42:	4770      	bx	lr

08003b44 <_ZN18CountdownPresenterD0Ev>:
 8003b44:	b510      	push	{r4, lr}
 8003b46:	4604      	mov	r4, r0
 8003b48:	2110      	movs	r1, #16
 8003b4a:	f01c f850 	bl	801fbee <_ZdlPvj>
 8003b4e:	4620      	mov	r0, r4
 8003b50:	bd10      	pop	{r4, pc}

08003b52 <_ZThn4_N18CountdownPresenterD0Ev>:
 8003b52:	f1a0 0004 	sub.w	r0, r0, #4
 8003b56:	e7f5      	b.n	8003b44 <_ZN18CountdownPresenterD0Ev>

08003b58 <_ZN18CountdownPresenter10secondTickEv>:

}

void CountdownPresenter::secondTick()
{
    view.handleSecondTick();
 8003b58:	68c0      	ldr	r0, [r0, #12]
 8003b5a:	f000 b83d 	b.w	8003bd8 <_ZN13CountdownView16handleSecondTickEv>

08003b5e <_ZThn4_N18CountdownPresenter10secondTickEv>:
    void secondTick();
 8003b5e:	f1a0 0004 	sub.w	r0, r0, #4
 8003b62:	f7ff bff9 	b.w	8003b58 <_ZN18CountdownPresenter10secondTickEv>
	...

08003b68 <_ZN18CountdownPresenterC1ER13CountdownView>:
 8003b68:	2200      	movs	r2, #0
    : view(v)
 8003b6a:	60c1      	str	r1, [r0, #12]
 8003b6c:	6082      	str	r2, [r0, #8]
 8003b6e:	4a04      	ldr	r2, [pc, #16]	; (8003b80 <_ZN18CountdownPresenterC1ER13CountdownView+0x18>)
CountdownPresenter::CountdownPresenter(CountdownView& v)
 8003b70:	b510      	push	{r4, lr}
    : view(v)
 8003b72:	f102 0408 	add.w	r4, r2, #8
 8003b76:	3224      	adds	r2, #36	; 0x24
 8003b78:	6004      	str	r4, [r0, #0]
 8003b7a:	6042      	str	r2, [r0, #4]
}
 8003b7c:	bd10      	pop	{r4, pc}
 8003b7e:	bf00      	nop
 8003b80:	080226bc 	.word	0x080226bc

08003b84 <_ZN13CountdownViewD1Ev>:

class CountdownView : public CountdownViewBase
{
public:
    CountdownView();
    ~CountdownView() {}
 8003b84:	4770      	bx	lr

08003b86 <_ZN13CountdownView14tearDownScreenEv>:
}

void CountdownView::tearDownScreen()
{
    CountdownViewBase::tearDownScreen();
}
 8003b86:	4770      	bx	lr

08003b88 <_ZN13CountdownView11setupScreenEv>:
    CountdownViewBase::setupScreen();
 8003b88:	f7fe be02 	b.w	8002790 <_ZN17CountdownViewBase11setupScreenEv>

08003b8c <_ZN13CountdownViewD0Ev>:
 8003b8c:	b510      	push	{r4, lr}
 8003b8e:	4604      	mov	r4, r0
 8003b90:	f44f 7184 	mov.w	r1, #264	; 0x108
 8003b94:	f01c f82b 	bl	801fbee <_ZdlPvj>
 8003b98:	4620      	mov	r0, r4
 8003b9a:	bd10      	pop	{r4, pc}

08003b9c <_ZN13CountdownViewC1Ev>:
CountdownView::CountdownView()
 8003b9c:	b510      	push	{r4, lr}
 8003b9e:	4604      	mov	r4, r0
 8003ba0:	f7fe fe22 	bl	80027e8 <_ZN17CountdownViewBaseC1Ev>
 8003ba4:	4b03      	ldr	r3, [pc, #12]	; (8003bb4 <_ZN13CountdownViewC1Ev+0x18>)
}
 8003ba6:	4620      	mov	r0, r4
CountdownView::CountdownView()
 8003ba8:	6023      	str	r3, [r4, #0]
 8003baa:	230a      	movs	r3, #10
 8003bac:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
}
 8003bb0:	bd10      	pop	{r4, pc}
 8003bb2:	bf00      	nop
 8003bb4:	080226f8 	.word	0x080226f8

08003bb8 <_ZN13CountdownView11clockUpdateEv>:

void CountdownView::clockUpdate()
{
 8003bb8:	b507      	push	{r0, r1, r2, lr}
 8003bba:	4603      	mov	r3, r0
    clock.setTime24Hour(0, 0, timeLeft);
 8003bbc:	2200      	movs	r2, #0
 8003bbe:	306c      	adds	r0, #108	; 0x6c
 8003bc0:	f893 3104 	ldrb.w	r3, [r3, #260]	; 0x104
 8003bc4:	4611      	mov	r1, r2
 8003bc6:	9001      	str	r0, [sp, #4]
 8003bc8:	f008 fcf1 	bl	800c5ae <_ZN8touchgfx13AbstractClock13setTime24HourEhhh>
    clock.invalidate();
 8003bcc:	9801      	ldr	r0, [sp, #4]
}
 8003bce:	b003      	add	sp, #12
 8003bd0:	f85d eb04 	ldr.w	lr, [sp], #4
    clock.invalidate();
 8003bd4:	f00e bf32 	b.w	8012a3c <_ZNK8touchgfx8Drawable10invalidateEv>

08003bd8 <_ZN13CountdownView16handleSecondTickEv>:

void CountdownView::handleSecondTick()
{
    if (timeLeft > 0) {
 8003bd8:	f8d0 2104 	ldr.w	r2, [r0, #260]	; 0x104
{
 8003bdc:	b508      	push	{r3, lr}
    if (timeLeft > 0) {
 8003bde:	b132      	cbz	r2, 8003bee <_ZN13CountdownView16handleSecondTickEv+0x16>
        timeLeft--;
 8003be0:	3a01      	subs	r2, #1
        clockUpdate();
    }
    else application().gotoBoomScreenNoTransition();
}
 8003be2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        timeLeft--;
 8003be6:	f8c0 2104 	str.w	r2, [r0, #260]	; 0x104
        clockUpdate();
 8003bea:	f7ff bfe5 	b.w	8003bb8 <_ZN13CountdownView11clockUpdateEv>
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003bee:	f00d ff25 	bl	8011a3c <_ZN8touchgfx11Application11getInstanceEv>
}
 8003bf2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    else application().gotoBoomScreenNoTransition();
 8003bf6:	f7ff bae9 	b.w	80031cc <_ZN23FrontendApplicationBase26gotoBoomScreenNoTransitionEv>

08003bfa <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8003bfa:	4770      	bx	lr

08003bfc <_ZN19FrontendApplicationD0Ev>:
 8003bfc:	b510      	push	{r4, lr}
 8003bfe:	4604      	mov	r4, r0
 8003c00:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8003c04:	f01b fff3 	bl	801fbee <_ZdlPvj>
 8003c08:	4620      	mov	r0, r4
 8003c0a:	bd10      	pop	{r4, pc}

08003c0c <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8003c0c:	b510      	push	{r4, lr}
 8003c0e:	4604      	mov	r4, r0
    {
        model.tick();
 8003c10:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 8003c14:	f000 f954 	bl	8003ec0 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8003c18:	4620      	mov	r0, r4
    }
 8003c1a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8003c1e:	f00d bdaf 	b.w	8011780 <_ZN8touchgfx11Application15handleTickEventEv>
	...

08003c24 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8003c24:	b510      	push	{r4, lr}
 8003c26:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8003c28:	f7ff fa84 	bl	8003134 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8003c2c:	4b01      	ldr	r3, [pc, #4]	; (8003c34 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
{

}
 8003c2e:	4620      	mov	r0, r4
    : FrontendApplicationBase(m, heap)
 8003c30:	6023      	str	r3, [r4, #0]
}
 8003c32:	bd10      	pop	{r4, pc}
 8003c34:	0802272c 	.word	0x0802272c

08003c38 <_ZN16InitialPresenterD1Ev>:
     */
    void deactivate();

    void testPinStateChanged(bool state);

    ~InitialPresenter() {};
 8003c38:	4770      	bx	lr

08003c3a <_ZThn4_N16InitialPresenterD1Ev>:
 8003c3a:	3804      	subs	r0, #4
 8003c3c:	4770      	bx	lr

08003c3e <_ZN16InitialPresenter10deactivateEv>:
}

void InitialPresenter::activate()
{

}
 8003c3e:	4770      	bx	lr

08003c40 <_ZN16InitialPresenterD0Ev>:
 8003c40:	b510      	push	{r4, lr}
 8003c42:	4604      	mov	r4, r0
 8003c44:	2110      	movs	r1, #16
 8003c46:	f01b ffd2 	bl	801fbee <_ZdlPvj>
 8003c4a:	4620      	mov	r0, r4
 8003c4c:	bd10      	pop	{r4, pc}

08003c4e <_ZThn4_N16InitialPresenterD0Ev>:
 8003c4e:	f1a0 0004 	sub.w	r0, r0, #4
 8003c52:	e7f5      	b.n	8003c40 <_ZN16InitialPresenterD0Ev>

08003c54 <_ZN16InitialPresenter19testPinStateChangedEb>:

}

void InitialPresenter::testPinStateChanged(bool state)
{
    view.testPinStateChanged(state);
 8003c54:	68c0      	ldr	r0, [r0, #12]
 8003c56:	f000 b8ef 	b.w	8003e38 <_ZN11InitialView19testPinStateChangedEb>

08003c5a <_ZThn4_N16InitialPresenter19testPinStateChangedEb>:
    void testPinStateChanged(bool state);
 8003c5a:	f1a0 0004 	sub.w	r0, r0, #4
 8003c5e:	f7ff bff9 	b.w	8003c54 <_ZN16InitialPresenter19testPinStateChangedEb>
	...

08003c64 <_ZN16InitialPresenterC1ER11InitialView>:
 8003c64:	2200      	movs	r2, #0
    : view(v)
 8003c66:	60c1      	str	r1, [r0, #12]
 8003c68:	6082      	str	r2, [r0, #8]
 8003c6a:	4a04      	ldr	r2, [pc, #16]	; (8003c7c <_ZN16InitialPresenterC1ER11InitialView+0x18>)
InitialPresenter::InitialPresenter(InitialView& v)
 8003c6c:	b510      	push	{r4, lr}
    : view(v)
 8003c6e:	f102 0408 	add.w	r4, r2, #8
 8003c72:	3224      	adds	r2, #36	; 0x24
 8003c74:	6004      	str	r4, [r0, #0]
 8003c76:	6042      	str	r2, [r0, #4]
}
 8003c78:	bd10      	pop	{r4, pc}
 8003c7a:	bf00      	nop
 8003c7c:	08022770 	.word	0x08022770

08003c80 <_ZN11InitialViewD1Ev>:

class InitialView : public InitialViewBase
{
public:
    InitialView();
    ~InitialView() {}
 8003c80:	4770      	bx	lr

08003c82 <_ZN11InitialView14tearDownScreenEv>:
}

void InitialView::tearDownScreen()
{
    InitialViewBase::tearDownScreen();
}
 8003c82:	4770      	bx	lr

08003c84 <_ZN11InitialView11setupScreenEv>:
{
 8003c84:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8003c86:	4604      	mov	r4, r0
    sensorOverride = true;
 8003c88:	2501      	movs	r5, #1
    InitialViewBase::setupScreen();
 8003c8a:	f7ff fb1d 	bl	80032c8 <_ZN15InitialViewBase11setupScreenEv>
    sensorOverride = true;
 8003c8e:	f504 5640 	add.w	r6, r4, #12288	; 0x3000
    sensorOverrideToggle.forceState(sensorOverride);
 8003c92:	f104 00e0 	add.w	r0, r4, #224	; 0xe0
 8003c96:	4629      	mov	r1, r5
    sensorOverride = true;
 8003c98:	f886 51e0 	strb.w	r5, [r6, #480]	; 0x1e0
    sensorOverrideToggle.forceState(sensorOverride);
 8003c9c:	9001      	str	r0, [sp, #4]
 8003c9e:	f00b f89c 	bl	800edda <_ZN8touchgfx12ToggleButton10forceStateEb>
    sensorOverrideToggle.invalidate();
 8003ca2:	9801      	ldr	r0, [sp, #4]
 8003ca4:	f00e feca 	bl	8012a3c <_ZNK8touchgfx8Drawable10invalidateEv>
    gauge1.setValue(coreTemp);
 8003ca8:	f8d6 11d8 	ldr.w	r1, [r6, #472]	; 0x1d8
 8003cac:	f504 708c 	add.w	r0, r4, #280	; 0x118
 8003cb0:	f00b fe66 	bl	800f980 <_ZN8touchgfx5Gauge8setValueEi>
    presenter->sendMessage({ MSG_SET_LEDS, HALBridge::LEDS_GREEN });
 8003cb4:	2300      	movs	r3, #0
 8003cb6:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8003cb8:	f88d 3008 	strb.w	r3, [sp, #8]
 8003cbc:	ab04      	add	r3, sp, #16
 8003cbe:	9503      	str	r5, [sp, #12]
 8003cc0:	3004      	adds	r0, #4
 8003cc2:	e913 0006 	ldmdb	r3, {r1, r2}
}
 8003cc6:	b004      	add	sp, #16
 8003cc8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    presenter->sendMessage({ MSG_SET_LEDS, HALBridge::LEDS_GREEN });
 8003ccc:	f000 b948 	b.w	8003f60 <_ZN13ModelListener11sendMessageE9UIMessage>

08003cd0 <_ZN11InitialView15handleTickEventEv>:

void InitialView::handleTickEvent()
{
 8003cd0:	b530      	push	{r4, r5, lr}
    if (coolingEnabled && coreTemp > 20) coreTemp--;
 8003cd2:	f500 5540 	add.w	r5, r0, #12288	; 0x3000
{
 8003cd6:	b08b      	sub	sp, #44	; 0x2c
 8003cd8:	4604      	mov	r4, r0
    if (coolingEnabled && coreTemp > 20) coreTemp--;
 8003cda:	f895 21e2 	ldrb.w	r2, [r5, #482]	; 0x1e2
 8003cde:	f8d5 31d8 	ldr.w	r3, [r5, #472]	; 0x1d8
 8003ce2:	2a00      	cmp	r2, #0
 8003ce4:	d051      	beq.n	8003d8a <_ZN11InitialView15handleTickEventEv+0xba>
 8003ce6:	2b14      	cmp	r3, #20
 8003ce8:	d902      	bls.n	8003cf0 <_ZN11InitialView15handleTickEventEv+0x20>
 8003cea:	3b01      	subs	r3, #1
    if (!coolingEnabled && coreTemp < 1000) coreTemp++;
 8003cec:	f8c5 31d8 	str.w	r3, [r5, #472]	; 0x1d8
    if (coreTemp == lastCoreTemp) return;
 8003cf0:	e9d5 1376 	ldrd	r1, r3, [r5, #472]	; 0x1d8
 8003cf4:	4299      	cmp	r1, r3
 8003cf6:	d04d      	beq.n	8003d94 <_ZN11InitialView15handleTickEventEv+0xc4>
    gauge1.setValue(coreTemp);
 8003cf8:	f504 708c 	add.w	r0, r4, #280	; 0x118
 8003cfc:	9001      	str	r0, [sp, #4]
 8003cfe:	f00b fe3f 	bl	800f980 <_ZN8touchgfx5Gauge8setValueEi>
    gauge1.invalidate();
 8003d02:	9801      	ldr	r0, [sp, #4]
 8003d04:	f00e fe9a 	bl	8012a3c <_ZNK8touchgfx8Drawable10invalidateEv>
    if (coreTemp < 20) presenter->sendMessage({ MSG_SET_LEDS, HALBridge::LEDS_BLUE });
 8003d08:	f8d5 31d8 	ldr.w	r3, [r5, #472]	; 0x1d8
 8003d0c:	2b13      	cmp	r3, #19
 8003d0e:	d815      	bhi.n	8003d3c <_ZN11InitialView15handleTickEventEv+0x6c>
 8003d10:	2300      	movs	r3, #0
 8003d12:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8003d14:	f88d 3008 	strb.w	r3, [sp, #8]
 8003d18:	2308      	movs	r3, #8
 8003d1a:	9902      	ldr	r1, [sp, #8]
 8003d1c:	461a      	mov	r2, r3
 8003d1e:	9303      	str	r3, [sp, #12]
    else if (coreTemp >= 20 && coreTemp < 50) presenter->sendMessage({ MSG_SET_LEDS, HALBridge::LEDS_GREEN });
    else if (coreTemp >= 50 && coreTemp < 100) presenter->sendMessage({ MSG_SET_LEDS, HALBridge::LEDS_ORANGE });
 8003d20:	3004      	adds	r0, #4
    else if (coreTemp > 100) presenter->sendMessage({ MSG_SET_LEDS, HALBridge::LEDS_RED });
 8003d22:	f000 f91d 	bl	8003f60 <_ZN13ModelListener11sendMessageE9UIMessage>
    if (coreTemp > 150) {
 8003d26:	f8d5 31d8 	ldr.w	r3, [r5, #472]	; 0x1d8
 8003d2a:	2b96      	cmp	r3, #150	; 0x96
 8003d2c:	d932      	bls.n	8003d94 <_ZN11InitialView15handleTickEventEv+0xc4>
 8003d2e:	f00d fe85 	bl	8011a3c <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoCountdownScreenWipeTransitionEast();

    }
}
 8003d32:	b00b      	add	sp, #44	; 0x2c
 8003d34:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
        application().gotoCountdownScreenWipeTransitionEast();
 8003d38:	f7ff ba38 	b.w	80031ac <_ZN23FrontendApplicationBase37gotoCountdownScreenWipeTransitionEastEv>
    else if (coreTemp >= 20 && coreTemp < 50) presenter->sendMessage({ MSG_SET_LEDS, HALBridge::LEDS_GREEN });
 8003d3c:	f1a3 0214 	sub.w	r2, r3, #20
 8003d40:	2a1d      	cmp	r2, #29
 8003d42:	d808      	bhi.n	8003d56 <_ZN11InitialView15handleTickEventEv+0x86>
 8003d44:	2300      	movs	r3, #0
 8003d46:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8003d48:	f88d 3010 	strb.w	r3, [sp, #16]
 8003d4c:	2301      	movs	r3, #1
 8003d4e:	9904      	ldr	r1, [sp, #16]
 8003d50:	461a      	mov	r2, r3
 8003d52:	9305      	str	r3, [sp, #20]
 8003d54:	e7e4      	b.n	8003d20 <_ZN11InitialView15handleTickEventEv+0x50>
    else if (coreTemp >= 50 && coreTemp < 100) presenter->sendMessage({ MSG_SET_LEDS, HALBridge::LEDS_ORANGE });
 8003d56:	f1a3 0232 	sub.w	r2, r3, #50	; 0x32
 8003d5a:	2a31      	cmp	r2, #49	; 0x31
 8003d5c:	d808      	bhi.n	8003d70 <_ZN11InitialView15handleTickEventEv+0xa0>
 8003d5e:	2300      	movs	r3, #0
 8003d60:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8003d62:	f88d 3018 	strb.w	r3, [sp, #24]
 8003d66:	2302      	movs	r3, #2
 8003d68:	9906      	ldr	r1, [sp, #24]
 8003d6a:	461a      	mov	r2, r3
 8003d6c:	9307      	str	r3, [sp, #28]
 8003d6e:	e7d7      	b.n	8003d20 <_ZN11InitialView15handleTickEventEv+0x50>
    else if (coreTemp > 100) presenter->sendMessage({ MSG_SET_LEDS, HALBridge::LEDS_RED });
 8003d70:	2b64      	cmp	r3, #100	; 0x64
 8003d72:	d00f      	beq.n	8003d94 <_ZN11InitialView15handleTickEventEv+0xc4>
 8003d74:	2300      	movs	r3, #0
 8003d76:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8003d78:	f88d 3020 	strb.w	r3, [sp, #32]
 8003d7c:	2304      	movs	r3, #4
 8003d7e:	9309      	str	r3, [sp, #36]	; 0x24
 8003d80:	ab0a      	add	r3, sp, #40	; 0x28
 8003d82:	e913 0006 	ldmdb	r3, {r1, r2}
 8003d86:	4410      	add	r0, r2
 8003d88:	e7cb      	b.n	8003d22 <_ZN11InitialView15handleTickEventEv+0x52>
    if (!coolingEnabled && coreTemp < 1000) coreTemp++;
 8003d8a:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8003d8e:	d2af      	bcs.n	8003cf0 <_ZN11InitialView15handleTickEventEv+0x20>
 8003d90:	3301      	adds	r3, #1
 8003d92:	e7ab      	b.n	8003cec <_ZN11InitialView15handleTickEventEv+0x1c>
}
 8003d94:	b00b      	add	sp, #44	; 0x2c
 8003d96:	bd30      	pop	{r4, r5, pc}

08003d98 <_ZN11InitialViewD0Ev>:
 8003d98:	b510      	push	{r4, lr}
 8003d9a:	4604      	mov	r4, r0
 8003d9c:	f243 11e4 	movw	r1, #12772	; 0x31e4
 8003da0:	f01b ff25 	bl	801fbee <_ZdlPvj>
 8003da4:	4620      	mov	r0, r4
 8003da6:	bd10      	pop	{r4, pc}

08003da8 <_ZNK8touchgfx6Bitmap5getIdEv>:
    /**
     * Gets the id of this Bitmap.
     *
     * @return The id of this Bitmap.
     */
    BitmapId getId() const
 8003da8:	b508      	push	{r3, lr}
    {
        assert(bitmaps != 0 && "Bitmap database has not been initialized.");
 8003daa:	4b05      	ldr	r3, [pc, #20]	; (8003dc0 <_ZNK8touchgfx6Bitmap5getIdEv+0x18>)
 8003dac:	681b      	ldr	r3, [r3, #0]
 8003dae:	b92b      	cbnz	r3, 8003dbc <_ZNK8touchgfx6Bitmap5getIdEv+0x14>
 8003db0:	4b04      	ldr	r3, [pc, #16]	; (8003dc4 <_ZNK8touchgfx6Bitmap5getIdEv+0x1c>)
 8003db2:	2187      	movs	r1, #135	; 0x87
 8003db4:	4a04      	ldr	r2, [pc, #16]	; (8003dc8 <_ZNK8touchgfx6Bitmap5getIdEv+0x20>)
 8003db6:	4805      	ldr	r0, [pc, #20]	; (8003dcc <_ZNK8touchgfx6Bitmap5getIdEv+0x24>)
 8003db8:	f01c f912 	bl	801ffe0 <__assert_func>
        return bitmapId;
    }
 8003dbc:	8800      	ldrh	r0, [r0, #0]
 8003dbe:	bd08      	pop	{r3, pc}
 8003dc0:	2400e15c 	.word	0x2400e15c
 8003dc4:	080227a4 	.word	0x080227a4
 8003dc8:	080227e0 	.word	0x080227e0
 8003dcc:	08022813 	.word	0x08022813

08003dd0 <_ZN11InitialView21sensorOverrideChangedEv>:
    sensorState = state;
    coolingEnabled = sensorOverride ? true : !state;
}

void InitialView::sensorOverrideChanged()
{
 8003dd0:	b538      	push	{r3, r4, r5, lr}
 8003dd2:	4604      	mov	r4, r0
     * @return True if the button has been toggled, i.e. the pressed state is shown when the
     *         button is not pressed.
     */
    bool getState() const
    {
        return up.getId() == originalPressed.getId();
 8003dd4:	f500 7087 	add.w	r0, r0, #270	; 0x10e
 8003dd8:	f7ff ffe6 	bl	8003da8 <_ZNK8touchgfx6Bitmap5getIdEv>
 8003ddc:	4605      	mov	r5, r0
 8003dde:	f504 708a 	add.w	r0, r4, #276	; 0x114
    sensorOverride = sensorOverrideToggle.getState();
 8003de2:	f504 5440 	add.w	r4, r4, #12288	; 0x3000
 8003de6:	f7ff ffdf 	bl	8003da8 <_ZNK8touchgfx6Bitmap5getIdEv>
 8003dea:	4285      	cmp	r5, r0
 8003dec:	bf14      	ite	ne
 8003dee:	2300      	movne	r3, #0
 8003df0:	2301      	moveq	r3, #1
 8003df2:	f884 31e0 	strb.w	r3, [r4, #480]	; 0x1e0
    coolingEnabled = sensorOverride ? true : !sensorState;
 8003df6:	bf0e      	itee	eq
 8003df8:	2301      	moveq	r3, #1
 8003dfa:	f894 31e1 	ldrbne.w	r3, [r4, #481]	; 0x1e1
 8003dfe:	f083 0301 	eorne.w	r3, r3, #1
 8003e02:	f884 31e2 	strb.w	r3, [r4, #482]	; 0x1e2

}
 8003e06:	bd38      	pop	{r3, r4, r5, pc}

08003e08 <_ZN11InitialViewC1Ev>:
InitialView::InitialView()
 8003e08:	b510      	push	{r4, lr}
 8003e0a:	4604      	mov	r4, r0
 8003e0c:	f7ff fae2 	bl	80033d4 <_ZN15InitialViewBaseC1Ev>
 8003e10:	4b08      	ldr	r3, [pc, #32]	; (8003e34 <_ZN11InitialViewC1Ev+0x2c>)
 8003e12:	2114      	movs	r1, #20
 8003e14:	2200      	movs	r2, #0
}
 8003e16:	4620      	mov	r0, r4
InitialView::InitialView()
 8003e18:	6023      	str	r3, [r4, #0]
 8003e1a:	f504 5340 	add.w	r3, r4, #12288	; 0x3000
 8003e1e:	e9c3 1276 	strd	r1, r2, [r3, #472]	; 0x1d8
 8003e22:	f240 1201 	movw	r2, #257	; 0x101
 8003e26:	f8a3 21e0 	strh.w	r2, [r3, #480]	; 0x1e0
 8003e2a:	2201      	movs	r2, #1
 8003e2c:	f883 21e2 	strb.w	r2, [r3, #482]	; 0x1e2
}
 8003e30:	bd10      	pop	{r4, pc}
 8003e32:	bf00      	nop
 8003e34:	08022870 	.word	0x08022870

08003e38 <_ZN11InitialView19testPinStateChangedEb>:
    sensorState = state;
 8003e38:	f500 5040 	add.w	r0, r0, #12288	; 0x3000
    coolingEnabled = sensorOverride ? true : !state;
 8003e3c:	f890 31e0 	ldrb.w	r3, [r0, #480]	; 0x1e0
    sensorState = state;
 8003e40:	f880 11e1 	strb.w	r1, [r0, #481]	; 0x1e1
    coolingEnabled = sensorOverride ? true : !state;
 8003e44:	b90b      	cbnz	r3, 8003e4a <_ZN11InitialView19testPinStateChangedEb+0x12>
 8003e46:	f081 0301 	eor.w	r3, r1, #1
 8003e4a:	f880 31e2 	strb.w	r3, [r0, #482]	; 0x1e2
}
 8003e4e:	4770      	bx	lr

08003e50 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 8003e50:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
      this->_M_impl._M_map_size = std::max((size_t) _S_initial_map_size,
 8003e54:	2308      	movs	r3, #8
	: _M_map(), _M_map_size(), _M_start(), _M_finish()
 8003e56:	2500      	movs	r5, #0
 8003e58:	4604      	mov	r4, r0
      this->_M_impl._M_map_size = std::max((size_t) _S_initial_map_size,
 8003e5a:	6043      	str	r3, [r0, #4]
	: _M_map(), _M_map_size(), _M_start(), _M_finish()
 8003e5c:	6005      	str	r5, [r0, #0]
      : _M_cur(), _M_first(), _M_last(), _M_node() { }
 8003e5e:	e9c0 5502 	strd	r5, r5, [r0, #8]
 8003e62:	e9c0 5504 	strd	r5, r5, [r0, #16]
 8003e66:	e9c0 5506 	strd	r5, r5, [r0, #24]
 8003e6a:	e9c0 5508 	strd	r5, r5, [r0, #32]
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 8003e6e:	2020      	movs	r0, #32
 8003e70:	f01b fece 	bl	801fc10 <_Znwj>
			       + (this->_M_impl._M_map_size - __num_nodes) / 2);
 8003e74:	6866      	ldr	r6, [r4, #4]
 8003e76:	4607      	mov	r7, r0
      this->_M_impl._M_map = _M_allocate_map(this->_M_impl._M_map_size);
 8003e78:	6020      	str	r0, [r4, #0]
			       + (this->_M_impl._M_map_size - __num_nodes) / 2);
 8003e7a:	3e01      	subs	r6, #1
 8003e7c:	0876      	lsrs	r6, r6, #1
      _Map_pointer __nstart = (this->_M_impl._M_map
 8003e7e:	eb00 0886 	add.w	r8, r0, r6, lsl #2
 8003e82:	f44f 7000 	mov.w	r0, #512	; 0x200
 8003e86:	f01b fec3 	bl	801fc10 <_Znwj>
	_M_last = _M_first + difference_type(_S_buffer_size());
 8003e8a:	f500 7300 	add.w	r3, r0, #512	; 0x200
	_M_node = __new_node;
 8003e8e:	f8c4 8014 	str.w	r8, [r4, #20]
	_M_last = _M_first + difference_type(_S_buffer_size());
 8003e92:	6123      	str	r3, [r4, #16]
	_M_first = *__new_node;
 8003e94:	60e0      	str	r0, [r4, #12]
	_M_node = __new_node;
 8003e96:	f8c4 8024 	str.w	r8, [r4, #36]	; 0x24
      this->_M_impl._M_start._M_cur = _M_impl._M_start._M_first;
 8003e9a:	60a0      	str	r0, [r4, #8]
      this->_M_impl._M_finish._M_cur = (this->_M_impl._M_finish._M_first
 8003e9c:	61a0      	str	r0, [r4, #24]
 8003e9e:	6325      	str	r5, [r4, #48]	; 0x30
	    *__cur = this->_M_allocate_node();
 8003ea0:	f847 0026 	str.w	r0, [r7, r6, lsl #2]
	_M_last = _M_first + difference_type(_S_buffer_size());
 8003ea4:	e9c4 0307 	strd	r0, r3, [r4, #28]
 8003ea8:	2301      	movs	r3, #1
 8003eaa:	e9c4 550a 	strd	r5, r5, [r4, #40]	; 0x28
 8003eae:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
		LEDS_BLUE = 8,
		LEDS_ALL = 15
	};
	static bool getTestPinState()
	{
		return HAL_BRIDGE_GetTestPinState();
 8003eb2:	f7fc fc27 	bl	8000704 <HAL_BRIDGE_GetTestPinState>
{
	lastTestPinState = HALBridge::getTestPinState();
 8003eb6:	f884 0034 	strb.w	r0, [r4, #52]	; 0x34
}
 8003eba:	4620      	mov	r0, r4
 8003ebc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08003ec0 <_ZN5Model4tickEv>:
      { return __x._M_cur == __y._M_cur; }
 8003ec0:	6883      	ldr	r3, [r0, #8]
  Model tick executed on each UI frame, typically @60FPS.
 */
void Model::tick()
{
    // message handling:
    if (!messageQueue.empty()) {
 8003ec2:	6982      	ldr	r2, [r0, #24]
 8003ec4:	429a      	cmp	r2, r3
{
 8003ec6:	b570      	push	{r4, r5, r6, lr}
 8003ec8:	4604      	mov	r4, r0
    if (!messageQueue.empty()) {
 8003eca:	d019      	beq.n	8003f00 <_ZN5Model4tickEv+0x40>
      void
      pop_front() _GLIBCXX_NOEXCEPT
      {
	__glibcxx_requires_nonempty();
	if (this->_M_impl._M_start._M_cur
	    != this->_M_impl._M_start._M_last - 1)
 8003ecc:	6922      	ldr	r2, [r4, #16]
       : _M_cur(__x._M_cur), _M_first(__x._M_first),
 8003ece:	68c0      	ldr	r0, [r0, #12]
	    != this->_M_impl._M_start._M_last - 1)
 8003ed0:	3a08      	subs	r2, #8
        UIMessage m = messageQueue.front();
 8003ed2:	781e      	ldrb	r6, [r3, #0]
 8003ed4:	685d      	ldr	r5, [r3, #4]
	if (this->_M_impl._M_start._M_cur
 8003ed6:	4293      	cmp	r3, r2
 8003ed8:	d033      	beq.n	8003f42 <_ZN5Model4tickEv+0x82>
	  {
	    _Alloc_traits::destroy(_M_get_Tp_allocator(),
				   this->_M_impl._M_start._M_cur);
	    ++this->_M_impl._M_start._M_cur;
 8003eda:	3308      	adds	r3, #8
    {
      _Alloc_traits::destroy(_M_get_Tp_allocator(),
			     this->_M_impl._M_start._M_cur);
      _M_deallocate_node(this->_M_impl._M_start._M_first);
      this->_M_impl._M_start._M_set_node(this->_M_impl._M_start._M_node + 1);
      this->_M_impl._M_start._M_cur = this->_M_impl._M_start._M_first;
 8003edc:	60a3      	str	r3, [r4, #8]
        messageQueue.pop();
        switch (m.id)
 8003ede:	b97e      	cbnz	r6, 8003f00 <_ZN5Model4tickEv+0x40>
	}
	static void setLEDs(int state)
	{
		HAL_BRIDGE_SetLED1((state & LEDS_GREEN) > 0);
 8003ee0:	f005 0001 	and.w	r0, r5, #1
 8003ee4:	f7fc fc1a 	bl	800071c <HAL_BRIDGE_SetLED1>
		HAL_BRIDGE_SetLED2((state & LEDS_ORANGE) > 0);
 8003ee8:	f3c5 0040 	ubfx	r0, r5, #1, #1
 8003eec:	f7fc fc20 	bl	8000730 <HAL_BRIDGE_SetLED2>
		HAL_BRIDGE_SetLED3((state & LEDS_RED) > 0);
 8003ef0:	f3c5 0080 	ubfx	r0, r5, #2, #1
 8003ef4:	f7fc fc26 	bl	8000744 <HAL_BRIDGE_SetLED3>
		HAL_BRIDGE_SetLED4((state & LEDS_BLUE) > 0);
 8003ef8:	f3c5 00c0 	ubfx	r0, r5, #3, #1
 8003efc:	f7fc fc2c 	bl	8000758 <HAL_BRIDGE_SetLED4>
		return HAL_BRIDGE_GetTestPinState();
 8003f00:	f7fc fc00 	bl	8000704 <HAL_BRIDGE_GetTestPinState>
            break;
        }
    }
    // GPIO polling:
    bool testPinState = HALBridge::getTestPinState();
    if (frame == 0 || testPinState != lastTestPinState) modelListener->testPinStateChanged(lastTestPinState = testPinState);
 8003f04:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8003f06:	4601      	mov	r1, r0
 8003f08:	b11b      	cbz	r3, 8003f12 <_ZN5Model4tickEv+0x52>
 8003f0a:	f894 3034 	ldrb.w	r3, [r4, #52]	; 0x34
 8003f0e:	4283      	cmp	r3, r0
 8003f10:	d005      	beq.n	8003f1e <_ZN5Model4tickEv+0x5e>
 8003f12:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8003f14:	6803      	ldr	r3, [r0, #0]
 8003f16:	68db      	ldr	r3, [r3, #12]
 8003f18:	f884 1034 	strb.w	r1, [r4, #52]	; 0x34
 8003f1c:	4798      	blx	r3
    // frame counter, second ticks:
    frame++;
 8003f1e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8003f20:	223c      	movs	r2, #60	; 0x3c
 8003f22:	3301      	adds	r3, #1
 8003f24:	fbb3 f1f2 	udiv	r1, r3, r2
 8003f28:	62e3      	str	r3, [r4, #44]	; 0x2c
 8003f2a:	fb02 3311 	mls	r3, r2, r1, r3
    if ((frame % 60) == 0) {
 8003f2e:	b9ab      	cbnz	r3, 8003f5c <_ZN5Model4tickEv+0x9c>
        second++;
 8003f30:	6b23      	ldr	r3, [r4, #48]	; 0x30
        modelListener->secondTick();
 8003f32:	6aa0      	ldr	r0, [r4, #40]	; 0x28
        second++;
 8003f34:	3301      	adds	r3, #1
 8003f36:	6323      	str	r3, [r4, #48]	; 0x30
        modelListener->secondTick();
 8003f38:	6803      	ldr	r3, [r0, #0]
    }
}
 8003f3a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        modelListener->secondTick();
 8003f3e:	689b      	ldr	r3, [r3, #8]
 8003f40:	4718      	bx	r3
	::operator delete(__p
 8003f42:	f44f 7100 	mov.w	r1, #512	; 0x200
 8003f46:	f01b fe52 	bl	801fbee <_ZdlPvj>
      this->_M_impl._M_start._M_set_node(this->_M_impl._M_start._M_node + 1);
 8003f4a:	6963      	ldr	r3, [r4, #20]
 8003f4c:	1d1a      	adds	r2, r3, #4
	_M_first = *__new_node;
 8003f4e:	685b      	ldr	r3, [r3, #4]
	_M_node = __new_node;
 8003f50:	6162      	str	r2, [r4, #20]
	_M_last = _M_first + difference_type(_S_buffer_size());
 8003f52:	f503 7200 	add.w	r2, r3, #512	; 0x200
	_M_first = *__new_node;
 8003f56:	60e3      	str	r3, [r4, #12]
	_M_last = _M_first + difference_type(_S_buffer_size());
 8003f58:	6122      	str	r2, [r4, #16]
 8003f5a:	e7bf      	b.n	8003edc <_ZN5Model4tickEv+0x1c>
}
 8003f5c:	bd70      	pop	{r4, r5, r6, pc}
	...

08003f60 <_ZN13ModelListener11sendMessageE9UIMessage>:
/*
  Sends a message to the model's message queue.
  @param uint32_t id message identifier.
*/
void ModelListener::sendMessage(UIMessage message)
{
 8003f60:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
	model->messageQueue.push(message);
 8003f64:	6844      	ldr	r4, [r0, #4]
{
 8003f66:	466f      	mov	r7, sp
	    != this->_M_impl._M_finish._M_last - 1)
 8003f68:	6a23      	ldr	r3, [r4, #32]
	if (this->_M_impl._M_finish._M_cur
 8003f6a:	69a6      	ldr	r6, [r4, #24]
	    != this->_M_impl._M_finish._M_last - 1)
 8003f6c:	3b08      	subs	r3, #8
	if (this->_M_impl._M_finish._M_cur
 8003f6e:	429e      	cmp	r6, r3
 8003f70:	e887 0006 	stmia.w	r7, {r1, r2}
 8003f74:	d008      	beq.n	8003f88 <_ZN13ModelListener11sendMessageE9UIMessage+0x28>
#if __cplusplus >= 201103L
      template<typename _Up, typename... _Args>
	void
	construct(_Up* __p, _Args&&... __args)
	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 8003f76:	e897 0003 	ldmia.w	r7, {r0, r1}
 8003f7a:	e886 0005 	stmia.w	r6, {r0, r2}
	    ++this->_M_impl._M_finish._M_cur;
 8003f7e:	3608      	adds	r6, #8
 8003f80:	61a6      	str	r6, [r4, #24]
}
 8003f82:	b003      	add	sp, #12
 8003f84:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	  * (__x._M_node - __y._M_node - 1) + (__x._M_cur - __x._M_first)
 8003f88:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8003f8a:	6961      	ldr	r1, [r4, #20]
 8003f8c:	69e3      	ldr	r3, [r4, #28]
 8003f8e:	eba2 0801 	sub.w	r8, r2, r1
	  + (__y._M_last - __y._M_cur);
 8003f92:	68a0      	ldr	r0, [r4, #8]
	  * (__x._M_node - __y._M_node - 1) + (__x._M_cur - __x._M_first)
 8003f94:	1af6      	subs	r6, r6, r3
 8003f96:	ea4f 05a8 	mov.w	r5, r8, asr #2
 8003f9a:	1e6b      	subs	r3, r5, #1
 8003f9c:	019b      	lsls	r3, r3, #6
 8003f9e:	eb03 06e6 	add.w	r6, r3, r6, asr #3
	  + (__y._M_last - __y._M_cur);
 8003fa2:	6923      	ldr	r3, [r4, #16]
 8003fa4:	1a1b      	subs	r3, r3, r0
 8003fa6:	eb06 06e3 	add.w	r6, r6, r3, asr #3
	if (size() == max_size())
 8003faa:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 8003fae:	429e      	cmp	r6, r3
 8003fb0:	d102      	bne.n	8003fb8 <_ZN13ModelListener11sendMessageE9UIMessage+0x58>
	  __throw_length_error(
 8003fb2:	4834      	ldr	r0, [pc, #208]	; (8004084 <_ZN13ModelListener11sendMessageE9UIMessage+0x124>)
 8003fb4:	f01b fe43 	bl	801fc3e <_ZSt20__throw_length_errorPKc>
       */
      void
      _M_reserve_map_at_back(size_type __nodes_to_add = 1)
      {
	if (__nodes_to_add + 1 > this->_M_impl._M_map_size
	    - (this->_M_impl._M_finish._M_node - this->_M_impl._M_map))
 8003fb8:	e9d4 6300 	ldrd	r6, r3, [r4]
 8003fbc:	1b90      	subs	r0, r2, r6
 8003fbe:	eba3 00a0 	sub.w	r0, r3, r0, asr #2
	if (__nodes_to_add + 1 > this->_M_impl._M_map_size
 8003fc2:	2801      	cmp	r0, #1
 8003fc4:	d81f      	bhi.n	8004006 <_ZN13ModelListener11sendMessageE9UIMessage+0xa6>
    deque<_Tp, _Alloc>::
    _M_reallocate_map(size_type __nodes_to_add, bool __add_at_front)
    {
      const size_type __old_num_nodes
	= this->_M_impl._M_finish._M_node - this->_M_impl._M_start._M_node + 1;
      const size_type __new_num_nodes = __old_num_nodes + __nodes_to_add;
 8003fc6:	3502      	adds	r5, #2

      _Map_pointer __new_nstart;
      if (this->_M_impl._M_map_size > 2 * __new_num_nodes)
 8003fc8:	ebb3 0f45 	cmp.w	r3, r5, lsl #1
 8003fcc:	d937      	bls.n	800403e <_ZN13ModelListener11sendMessageE9UIMessage+0xde>
	{
	  __new_nstart = this->_M_impl._M_map + (this->_M_impl._M_map_size
					 - __new_num_nodes) / 2
 8003fce:	1b5d      	subs	r5, r3, r5
			 + (__add_at_front ? __nodes_to_add : 0);
	  if (__new_nstart < this->_M_impl._M_start._M_node)
	    std::copy(this->_M_impl._M_start._M_node,
 8003fd0:	1d13      	adds	r3, r2, #4
					 - __new_num_nodes) / 2
 8003fd2:	086d      	lsrs	r5, r5, #1
					   is_move_assignable<_Tp>,
					   is_copy_assignable<_Tp>>;
	  // trivial types can have deleted assignment
	  static_assert( __assignable::type::value, "type is not assignable" );
#endif
	  const ptrdiff_t _Num = __last - __first;
 8003fd4:	1a5a      	subs	r2, r3, r1
	  __new_nstart = this->_M_impl._M_map + (this->_M_impl._M_map_size
 8003fd6:	eb06 0585 	add.w	r5, r6, r5, lsl #2
	  if (__new_nstart < this->_M_impl._M_start._M_node)
 8003fda:	42a9      	cmp	r1, r5
 8003fdc:	d928      	bls.n	8004030 <_ZN13ModelListener11sendMessageE9UIMessage+0xd0>
	  if (_Num)
 8003fde:	4299      	cmp	r1, r3
 8003fe0:	d002      	beq.n	8003fe8 <_ZN13ModelListener11sendMessageE9UIMessage+0x88>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 8003fe2:	4628      	mov	r0, r5
	  // trivial types can have deleted assignment
	  static_assert( __assignable::type::value, "type is not assignable" );
#endif
	  const ptrdiff_t _Num = __last - __first;
	  if (_Num)
	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
 8003fe4:	f01c f888 	bl	80200f8 <memmove>
	_M_first = *__new_node;
 8003fe8:	682b      	ldr	r3, [r5, #0]
	_M_node = __new_node;
 8003fea:	6165      	str	r5, [r4, #20]
	_M_first = *__new_node;
 8003fec:	60e3      	str	r3, [r4, #12]
	_M_last = _M_first + difference_type(_S_buffer_size());
 8003fee:	f503 7300 	add.w	r3, r3, #512	; 0x200
 8003ff2:	6123      	str	r3, [r4, #16]
	  this->_M_impl._M_map = __new_map;
	  this->_M_impl._M_map_size = __new_map_size;
	}

      this->_M_impl._M_start._M_set_node(__new_nstart);
      this->_M_impl._M_finish._M_set_node(__new_nstart + __old_num_nodes - 1);
 8003ff4:	eb05 0308 	add.w	r3, r5, r8
	_M_node = __new_node;
 8003ff8:	6263      	str	r3, [r4, #36]	; 0x24
	_M_first = *__new_node;
 8003ffa:	f855 3008 	ldr.w	r3, [r5, r8]
 8003ffe:	61e3      	str	r3, [r4, #28]
	_M_last = _M_first + difference_type(_S_buffer_size());
 8004000:	f503 7300 	add.w	r3, r3, #512	; 0x200
 8004004:	6223      	str	r3, [r4, #32]
	*(this->_M_impl._M_finish._M_node + 1) = this->_M_allocate_node();
 8004006:	6a65      	ldr	r5, [r4, #36]	; 0x24
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 8004008:	f44f 7000 	mov.w	r0, #512	; 0x200
 800400c:	f01b fe00 	bl	801fc10 <_Znwj>
 8004010:	6068      	str	r0, [r5, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 8004012:	69a3      	ldr	r3, [r4, #24]
 8004014:	e897 0003 	ldmia.w	r7, {r0, r1}
 8004018:	e883 0003 	stmia.w	r3, {r0, r1}
	    this->_M_impl._M_finish._M_set_node(this->_M_impl._M_finish._M_node
 800401c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800401e:	1d1a      	adds	r2, r3, #4
	_M_first = *__new_node;
 8004020:	685b      	ldr	r3, [r3, #4]
	_M_node = __new_node;
 8004022:	6262      	str	r2, [r4, #36]	; 0x24
	_M_last = _M_first + difference_type(_S_buffer_size());
 8004024:	f503 7200 	add.w	r2, r3, #512	; 0x200
	_M_first = *__new_node;
 8004028:	61e3      	str	r3, [r4, #28]
	_M_last = _M_first + difference_type(_S_buffer_size());
 800402a:	6222      	str	r2, [r4, #32]
	    this->_M_impl._M_finish._M_cur = this->_M_impl._M_finish._M_first;
 800402c:	61a3      	str	r3, [r4, #24]
 800402e:	e7a8      	b.n	8003f82 <_ZN13ModelListener11sendMessageE9UIMessage+0x22>
	  if (_Num)
 8004030:	4299      	cmp	r1, r3
 8004032:	d0d9      	beq.n	8003fe8 <_ZN13ModelListener11sendMessageE9UIMessage+0x88>
	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
 8004034:	f108 0004 	add.w	r0, r8, #4
 8004038:	1a80      	subs	r0, r0, r2
 800403a:	4428      	add	r0, r5
 800403c:	e7d2      	b.n	8003fe4 <_ZN13ModelListener11sendMessageE9UIMessage+0x84>
	  size_type __new_map_size = this->_M_impl._M_map_size
 800403e:	1c9e      	adds	r6, r3, #2
 8004040:	2b01      	cmp	r3, #1
 8004042:	bf2c      	ite	cs
 8004044:	18f6      	addcs	r6, r6, r3
 8004046:	3601      	addcc	r6, #1
	if (__n > this->_M_max_size())
 8004048:	f1b6 5f00 	cmp.w	r6, #536870912	; 0x20000000
 800404c:	d301      	bcc.n	8004052 <_ZN13ModelListener11sendMessageE9UIMessage+0xf2>
	  std::__throw_bad_alloc();
 800404e:	f01b fdf3 	bl	801fc38 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 8004052:	00b0      	lsls	r0, r6, #2
	  __new_nstart = __new_map + (__new_map_size - __new_num_nodes) / 2
 8004054:	1b75      	subs	r5, r6, r5
 8004056:	f01b fddb 	bl	801fc10 <_Znwj>
	  std::copy(this->_M_impl._M_start._M_node,
 800405a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800405c:	6961      	ldr	r1, [r4, #20]
	  __new_nstart = __new_map + (__new_map_size - __new_num_nodes) / 2
 800405e:	086d      	lsrs	r5, r5, #1
	  std::copy(this->_M_impl._M_start._M_node,
 8004060:	3204      	adds	r2, #4
 8004062:	4681      	mov	r9, r0
	  __new_nstart = __new_map + (__new_map_size - __new_num_nodes) / 2
 8004064:	eb00 0585 	add.w	r5, r0, r5, lsl #2
	  if (_Num)
 8004068:	4291      	cmp	r1, r2
 800406a:	d003      	beq.n	8004074 <_ZN13ModelListener11sendMessageE9UIMessage+0x114>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 800406c:	1a52      	subs	r2, r2, r1
 800406e:	4628      	mov	r0, r5
 8004070:	f01c f842 	bl	80200f8 <memmove>
	::operator delete(__p
 8004074:	6861      	ldr	r1, [r4, #4]
 8004076:	6820      	ldr	r0, [r4, #0]
 8004078:	0089      	lsls	r1, r1, #2
 800407a:	f01b fdb8 	bl	801fbee <_ZdlPvj>
	  this->_M_impl._M_map_size = __new_map_size;
 800407e:	e9c4 9600 	strd	r9, r6, [r4]
 8004082:	e7b1      	b.n	8003fe8 <_ZN13ModelListener11sendMessageE9UIMessage+0x88>
 8004084:	080228a0 	.word	0x080228a0

08004088 <FT6X06_GetCapabilities>:
{
  /* Prevent unused argument(s) compilation warning */  
  (void)(pObj);
  
  /* Store component's capabilities */
  Capabilities->MultiTouch = 1;
 8004088:	2301      	movs	r3, #1
  Capabilities->Gesture    = 0;  /* Gesture feature is currently not activated on FW chipset */
  Capabilities->MaxTouch   = FT6X06_MAX_NB_TOUCH;
  Capabilities->MaxXl      = FT6X06_MAX_X_LENGTH;
  Capabilities->MaxYl      = FT6X06_MAX_Y_LENGTH;
 800408a:	f44f 7248 	mov.w	r2, #800	; 0x320
  
  return FT6X06_OK;
}
 800408e:	2000      	movs	r0, #0
  Capabilities->MultiTouch = 1;
 8004090:	800b      	strh	r3, [r1, #0]
  Capabilities->MaxTouch   = FT6X06_MAX_NB_TOUCH;
 8004092:	2302      	movs	r3, #2
 8004094:	708b      	strb	r3, [r1, #2]
  Capabilities->MaxYl      = FT6X06_MAX_Y_LENGTH;
 8004096:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 800409a:	e9c1 2301 	strd	r2, r3, [r1, #4]
}
 800409e:	4770      	bx	lr

080040a0 <FT6X06_DeInit>:
  * @param  pObj Component object pointer
  * @retval Component status
  */
int32_t FT6X06_DeInit(FT6X06_Object_t *pObj)
{
  if(pObj->IsInitialized == 1U)
 80040a0:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 80040a4:	2b01      	cmp	r3, #1
  {
    pObj->IsInitialized = 0;
 80040a6:	bf04      	itt	eq
 80040a8:	2300      	moveq	r3, #0
 80040aa:	f880 3024 	strbeq.w	r3, [r0, #36]	; 0x24
  }
  
  return FT6X06_OK;
}
 80040ae:	2000      	movs	r0, #0
 80040b0:	4770      	bx	lr

080040b2 <FT6X06_ITStatus>:
  /* Prevent unused argument(s) compilation warning */  
  (void)(pObj);
  
  /* Always return FT6X06_OK as feature not supported by FT6X06 */
  return FT6X06_OK;
}
 80040b2:	2000      	movs	r0, #0
 80040b4:	4770      	bx	lr

080040b6 <ReadRegWrap>:
  * @param  pData The target register value to be read
  * @param  Length buffer size to be read
  * @retval Component status.
  */
static int32_t ReadRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
 80040b6:	b410      	push	{r4}
  FT6X06_Object_t *pObj = (FT6X06_Object_t *)handle;

  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
 80040b8:	6904      	ldr	r4, [r0, #16]
 80040ba:	8900      	ldrh	r0, [r0, #8]
 80040bc:	46a4      	mov	ip, r4
}
 80040be:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
 80040c2:	4760      	bx	ip

080040c4 <WriteRegWrap>:
  * @param  pData The target register value to be written
  * @param  Length buffer size to be written
  * @retval Component status.
  */
static int32_t WriteRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
 80040c4:	b410      	push	{r4}
  FT6X06_Object_t *pObj = (FT6X06_Object_t *)handle;

  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
 80040c6:	68c4      	ldr	r4, [r0, #12]
 80040c8:	8900      	ldrh	r0, [r0, #8]
 80040ca:	46a4      	mov	ip, r4
}
 80040cc:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
 80040d0:	4760      	bx	ip

080040d2 <FT6X06_GestureConfig>:
{
 80040d2:	e92d 4320 	stmdb	sp!, {r5, r8, r9, lr}
  ret = ft6x06_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
 80040d6:	f100 0818 	add.w	r8, r0, #24
{
 80040da:	4689      	mov	r9, r1
  ret = ft6x06_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
 80040dc:	7809      	ldrb	r1, [r1, #0]
 80040de:	4640      	mov	r0, r8
 80040e0:	f000 f918 	bl	8004314 <ft6x06_radian_value>
 80040e4:	4605      	mov	r5, r0
  ret += ft6x06_offset_left_right(&pObj->Ctx, (uint8_t)GestureInit->OffsetLeftRight);
 80040e6:	f899 1004 	ldrb.w	r1, [r9, #4]
 80040ea:	4640      	mov	r0, r8
 80040ec:	f000 f91e 	bl	800432c <ft6x06_offset_left_right>
 80040f0:	4405      	add	r5, r0
  ret += ft6x06_offset_up_down(&pObj->Ctx, (uint8_t)GestureInit->OffsetUpDown);
 80040f2:	f899 1008 	ldrb.w	r1, [r9, #8]
 80040f6:	4640      	mov	r0, r8
 80040f8:	f000 f924 	bl	8004344 <ft6x06_offset_up_down>
 80040fc:	4405      	add	r5, r0
  ret += ft6x06_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
 80040fe:	f899 100c 	ldrb.w	r1, [r9, #12]
 8004102:	4640      	mov	r0, r8
 8004104:	f000 f92a 	bl	800435c <ft6x06_disatnce_left_right>
 8004108:	4405      	add	r5, r0
  ret += ft6x06_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
 800410a:	f899 1010 	ldrb.w	r1, [r9, #16]
 800410e:	4640      	mov	r0, r8
 8004110:	f000 f930 	bl	8004374 <ft6x06_distance_up_down>
 8004114:	4405      	add	r5, r0
  ret += ft6x06_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
 8004116:	f899 1014 	ldrb.w	r1, [r9, #20]
 800411a:	4640      	mov	r0, r8
 800411c:	f000 f936 	bl	800438c <ft6x06_distance_zoom>
  if(ret != FT6X06_OK)
 8004120:	42c5      	cmn	r5, r0
}
 8004122:	bf14      	ite	ne
 8004124:	f04f 30ff 	movne.w	r0, #4294967295
 8004128:	2000      	moveq	r0, #0
 800412a:	e8bd 8320 	ldmia.w	sp!, {r5, r8, r9, pc}

0800412e <FT6X06_ReadID>:
{
 800412e:	b513      	push	{r0, r1, r4, lr}
 8004130:	460c      	mov	r4, r1
  ret = ft6x06_chip_id(&pObj->Ctx, &ft6x06_id);
 8004132:	3018      	adds	r0, #24
 8004134:	f10d 0107 	add.w	r1, sp, #7
 8004138:	f000 f940 	bl	80043bc <ft6x06_chip_id>
  *Id = (uint32_t) ft6x06_id;
 800413c:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8004140:	6023      	str	r3, [r4, #0]
}
 8004142:	b002      	add	sp, #8
 8004144:	bd10      	pop	{r4, pc}

08004146 <FT6X06_GetState>:
{
 8004146:	b537      	push	{r0, r1, r2, r4, r5, lr}
  if(ft6x06_td_status(&pObj->Ctx, &nb_touch) != FT6X06_OK)
 8004148:	f100 0518 	add.w	r5, r0, #24
{
 800414c:	460c      	mov	r4, r1
  if(ft6x06_td_status(&pObj->Ctx, &nb_touch) != FT6X06_OK)
 800414e:	a901      	add	r1, sp, #4
 8004150:	4628      	mov	r0, r5
 8004152:	f000 f8d2 	bl	80042fa <ft6x06_td_status>
 8004156:	bb08      	cbnz	r0, 800419c <FT6X06_GetState+0x56>
    if(nb_touch > FT6X06_MAX_NB_TOUCH)
 8004158:	f89d 3004 	ldrb.w	r3, [sp, #4]
      ret = (int32_t)nb_touch;
 800415c:	2b02      	cmp	r3, #2
 800415e:	bf98      	it	ls
 8004160:	4618      	movls	r0, r3
  if(ft6x06_read_reg(&pObj->Ctx, FT6X06_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT6X06_OK)
 8004162:	2304      	movs	r3, #4
  State->TouchDetected = (uint32_t)FT6X06_DetectTouch(pObj);
 8004164:	6020      	str	r0, [r4, #0]
  if(ft6x06_read_reg(&pObj->Ctx, FT6X06_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT6X06_OK)
 8004166:	2103      	movs	r1, #3
 8004168:	4628      	mov	r0, r5
 800416a:	eb0d 0203 	add.w	r2, sp, r3
 800416e:	f000 f8b1 	bl	80042d4 <ft6x06_read_reg>
 8004172:	b9b0      	cbnz	r0, 80041a2 <FT6X06_GetState+0x5c>
    State->TouchX = (((uint32_t)data[0] & FT6X06_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT6X06_P1_XL_TP_BIT_MASK);
 8004174:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8004178:	f89d 2005 	ldrb.w	r2, [sp, #5]
 800417c:	021b      	lsls	r3, r3, #8
 800417e:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8004182:	4313      	orrs	r3, r2
    State->TouchY = (((uint32_t)data[2] & FT6X06_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT6X06_P1_YL_TP_BIT_MASK);
 8004184:	f89d 2007 	ldrb.w	r2, [sp, #7]
    State->TouchX = (((uint32_t)data[0] & FT6X06_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT6X06_P1_XL_TP_BIT_MASK);
 8004188:	6063      	str	r3, [r4, #4]
    State->TouchY = (((uint32_t)data[2] & FT6X06_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT6X06_P1_YL_TP_BIT_MASK);
 800418a:	f89d 3006 	ldrb.w	r3, [sp, #6]
 800418e:	021b      	lsls	r3, r3, #8
 8004190:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8004194:	4313      	orrs	r3, r2
 8004196:	60a3      	str	r3, [r4, #8]
}
 8004198:	b003      	add	sp, #12
 800419a:	bd30      	pop	{r4, r5, pc}
    ret = FT6X06_ERROR;
 800419c:	f04f 30ff 	mov.w	r0, #4294967295
 80041a0:	e7df      	b.n	8004162 <FT6X06_GetState+0x1c>
    ret = FT6X06_ERROR;
 80041a2:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
 80041a6:	e7f7      	b.n	8004198 <FT6X06_GetState+0x52>

080041a8 <FT6X06_GetGesture>:
  return ft6x06_gest_id(&pObj->Ctx, GestureId);
 80041a8:	3018      	adds	r0, #24
 80041aa:	f000 b8a1 	b.w	80042f0 <ft6x06_gest_id>

080041ae <FT6X06_EnableIT>:
  return ft6x06_g_mode(&pObj->Ctx, FT6X06_G_MODE_INTERRUPT_TRIGGER);
 80041ae:	2101      	movs	r1, #1
 80041b0:	3018      	adds	r0, #24
 80041b2:	f000 b8f7 	b.w	80043a4 <ft6x06_g_mode>

080041b6 <FT6X06_DisableIT>:
  return ft6x06_g_mode(&pObj->Ctx, FT6X06_G_MODE_INTERRUPT_POLLING);
 80041b6:	2100      	movs	r1, #0
 80041b8:	3018      	adds	r0, #24
 80041ba:	f000 b8f3 	b.w	80043a4 <ft6x06_g_mode>

080041be <FT6X06_Init>:
{
 80041be:	b510      	push	{r4, lr}
  if(pObj->IsInitialized == 0U)
 80041c0:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
{
 80041c4:	4604      	mov	r4, r0
  if(pObj->IsInitialized == 0U)
 80041c6:	b96b      	cbnz	r3, 80041e4 <FT6X06_Init+0x26>
    pObj->IO.Init();
 80041c8:	6803      	ldr	r3, [r0, #0]
 80041ca:	4798      	blx	r3
    ret += FT6X06_DisableIT(pObj);
 80041cc:	4620      	mov	r0, r4
 80041ce:	f7ff fff2 	bl	80041b6 <FT6X06_DisableIT>
  if(ret != FT6X06_OK)
 80041d2:	3800      	subs	r0, #0
    pObj->IsInitialized = 1;
 80041d4:	f04f 0301 	mov.w	r3, #1
  if(ret != FT6X06_OK)
 80041d8:	bf18      	it	ne
 80041da:	2001      	movne	r0, #1
    pObj->IsInitialized = 1;
 80041dc:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
  if(ret != FT6X06_OK)
 80041e0:	4240      	negs	r0, r0
}
 80041e2:	bd10      	pop	{r4, pc}
  int32_t ret = FT6X06_OK;
 80041e4:	2000      	movs	r0, #0
  return ret;
 80041e6:	e7fc      	b.n	80041e2 <FT6X06_Init+0x24>

080041e8 <FT6X06_ClearIT>:
 80041e8:	2000      	movs	r0, #0
 80041ea:	4770      	bx	lr

080041ec <FT6X06_GetMultiTouchState>:
{
 80041ec:	b530      	push	{r4, r5, lr}
  if(ft6x06_td_status(&pObj->Ctx, &nb_touch) != FT6X06_OK)
 80041ee:	f100 0518 	add.w	r5, r0, #24
{
 80041f2:	b085      	sub	sp, #20
 80041f4:	460c      	mov	r4, r1
  if(ft6x06_td_status(&pObj->Ctx, &nb_touch) != FT6X06_OK)
 80041f6:	4628      	mov	r0, r5
 80041f8:	a901      	add	r1, sp, #4
 80041fa:	f000 f87e 	bl	80042fa <ft6x06_td_status>
 80041fe:	2800      	cmp	r0, #0
 8004200:	d145      	bne.n	800428e <FT6X06_GetMultiTouchState+0xa2>
    if(nb_touch > FT6X06_MAX_NB_TOUCH)
 8004202:	f89d 3004 	ldrb.w	r3, [sp, #4]
      ret = (int32_t)nb_touch;
 8004206:	2b02      	cmp	r3, #2
 8004208:	bf98      	it	ls
 800420a:	4618      	movls	r0, r3
  State->TouchDetected = (uint32_t)FT6X06_DetectTouch(pObj);
 800420c:	6020      	str	r0, [r4, #0]
  if(ft6x06_read_reg(&pObj->Ctx, FT6X06_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT6X06_OK)
 800420e:	230c      	movs	r3, #12
 8004210:	aa01      	add	r2, sp, #4
 8004212:	2103      	movs	r1, #3
 8004214:	4628      	mov	r0, r5
 8004216:	f000 f85d 	bl	80042d4 <ft6x06_read_reg>
 800421a:	2800      	cmp	r0, #0
 800421c:	d13a      	bne.n	8004294 <FT6X06_GetMultiTouchState+0xa8>
    State->TouchX[0] = (((uint32_t)data[0] & FT6X06_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT6X06_P1_XL_TP_BIT_MASK);
 800421e:	f89d 2004 	ldrb.w	r2, [sp, #4]
 8004222:	f89d 1005 	ldrb.w	r1, [sp, #5]
 8004226:	0213      	lsls	r3, r2, #8
    State->TouchEvent[0] = (((uint32_t)data[0] & FT6X06_P1_XH_EF_BIT_MASK) >> FT6X06_P1_XH_EF_BIT_POSITION);
 8004228:	0992      	lsrs	r2, r2, #6
    State->TouchX[0] = (((uint32_t)data[0] & FT6X06_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT6X06_P1_XL_TP_BIT_MASK);
 800422a:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchEvent[0] = (((uint32_t)data[0] & FT6X06_P1_XH_EF_BIT_MASK) >> FT6X06_P1_XH_EF_BIT_POSITION);
 800422e:	61e2      	str	r2, [r4, #28]
    State->TouchX[0] = (((uint32_t)data[0] & FT6X06_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT6X06_P1_XL_TP_BIT_MASK);
 8004230:	430b      	orrs	r3, r1
    State->TouchY[0] = (((uint32_t)data[2] & FT6X06_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT6X06_P1_YL_TP_BIT_MASK);
 8004232:	f89d 1007 	ldrb.w	r1, [sp, #7]
    State->TouchX[1] = (((uint32_t)data[6] & FT6X06_P2_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[7] & FT6X06_P2_XL_TP_BIT_MASK);
 8004236:	f89d 200a 	ldrb.w	r2, [sp, #10]
    State->TouchX[0] = (((uint32_t)data[0] & FT6X06_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT6X06_P1_XL_TP_BIT_MASK);
 800423a:	6063      	str	r3, [r4, #4]
    State->TouchY[0] = (((uint32_t)data[2] & FT6X06_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT6X06_P1_YL_TP_BIT_MASK);
 800423c:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8004240:	021b      	lsls	r3, r3, #8
 8004242:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8004246:	430b      	orrs	r3, r1
    State->TouchX[1] = (((uint32_t)data[6] & FT6X06_P2_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[7] & FT6X06_P2_XL_TP_BIT_MASK);
 8004248:	f89d 100b 	ldrb.w	r1, [sp, #11]
    State->TouchY[0] = (((uint32_t)data[2] & FT6X06_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT6X06_P1_YL_TP_BIT_MASK);
 800424c:	60e3      	str	r3, [r4, #12]
    State->TouchWeight[0] = ((uint32_t)data[4] & FT6X06_P1_WEIGHT_BIT_MASK);
 800424e:	f89d 3008 	ldrb.w	r3, [sp, #8]
 8004252:	6163      	str	r3, [r4, #20]
    State->TouchArea[0] = ((uint32_t)data[5] & FT6X06_P1_MISC_BIT_MASK) >> FT6X06_P1_MISC_BIT_POSITION;
 8004254:	f89d 3009 	ldrb.w	r3, [sp, #9]
 8004258:	091b      	lsrs	r3, r3, #4
 800425a:	6263      	str	r3, [r4, #36]	; 0x24
    State->TouchX[1] = (((uint32_t)data[6] & FT6X06_P2_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[7] & FT6X06_P2_XL_TP_BIT_MASK);
 800425c:	0213      	lsls	r3, r2, #8
    State->TouchEvent[1] = (((uint32_t)data[6] & FT6X06_P2_XH_EF_BIT_MASK) >> FT6X06_P2_XH_EF_BIT_POSITION);
 800425e:	0992      	lsrs	r2, r2, #6
    State->TouchX[1] = (((uint32_t)data[6] & FT6X06_P2_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[7] & FT6X06_P2_XL_TP_BIT_MASK);
 8004260:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchEvent[1] = (((uint32_t)data[6] & FT6X06_P2_XH_EF_BIT_MASK) >> FT6X06_P2_XH_EF_BIT_POSITION);
 8004264:	6222      	str	r2, [r4, #32]
    State->TouchX[1] = (((uint32_t)data[6] & FT6X06_P2_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[7] & FT6X06_P2_XL_TP_BIT_MASK);
 8004266:	430b      	orrs	r3, r1
    State->TouchY[1] = (((uint32_t)data[8] & FT6X06_P2_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[9] & FT6X06_P2_YL_TP_BIT_MASK);
 8004268:	f89d 100d 	ldrb.w	r1, [sp, #13]
    State->TouchX[1] = (((uint32_t)data[6] & FT6X06_P2_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[7] & FT6X06_P2_XL_TP_BIT_MASK);
 800426c:	60a3      	str	r3, [r4, #8]
    State->TouchY[1] = (((uint32_t)data[8] & FT6X06_P2_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[9] & FT6X06_P2_YL_TP_BIT_MASK);
 800426e:	f89d 300c 	ldrb.w	r3, [sp, #12]
 8004272:	021b      	lsls	r3, r3, #8
 8004274:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8004278:	430b      	orrs	r3, r1
 800427a:	6123      	str	r3, [r4, #16]
    State->TouchWeight[1] = ((uint32_t)data[10] & FT6X06_P2_WEIGHT_BIT_MASK);
 800427c:	f89d 300e 	ldrb.w	r3, [sp, #14]
 8004280:	61a3      	str	r3, [r4, #24]
    State->TouchArea[1] = ((uint32_t)data[11] & FT6X06_P2_MISC_BIT_MASK) >> FT6X06_P2_MISC_BIT_POSITION;
 8004282:	f89d 300f 	ldrb.w	r3, [sp, #15]
 8004286:	091b      	lsrs	r3, r3, #4
 8004288:	62a3      	str	r3, [r4, #40]	; 0x28
}
 800428a:	b005      	add	sp, #20
 800428c:	bd30      	pop	{r4, r5, pc}
    ret = FT6X06_ERROR;
 800428e:	f04f 30ff 	mov.w	r0, #4294967295
 8004292:	e7bb      	b.n	800420c <FT6X06_GetMultiTouchState+0x20>
    ret = FT6X06_ERROR;
 8004294:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;  
 8004298:	e7f7      	b.n	800428a <FT6X06_GetMultiTouchState+0x9e>
	...

0800429c <FT6X06_RegisterBusIO>:
  if (pObj == NULL)
 800429c:	b190      	cbz	r0, 80042c4 <FT6X06_RegisterBusIO+0x28>
    pObj->IO.DeInit    = pIO->DeInit;
 800429e:	684a      	ldr	r2, [r1, #4]
    pObj->IO.Init      = pIO->Init;
 80042a0:	680b      	ldr	r3, [r1, #0]
    pObj->IO.DeInit    = pIO->DeInit;
 80042a2:	6042      	str	r2, [r0, #4]
    pObj->IO.Address   = pIO->Address;
 80042a4:	890a      	ldrh	r2, [r1, #8]
    pObj->IO.Init      = pIO->Init;
 80042a6:	6003      	str	r3, [r0, #0]
    pObj->IO.Address   = pIO->Address;
 80042a8:	8102      	strh	r2, [r0, #8]
    pObj->IO.WriteReg  = pIO->WriteReg;
 80042aa:	68ca      	ldr	r2, [r1, #12]
 80042ac:	60c2      	str	r2, [r0, #12]
    pObj->IO.ReadReg   = pIO->ReadReg;
 80042ae:	690a      	ldr	r2, [r1, #16]
 80042b0:	6102      	str	r2, [r0, #16]
    pObj->IO.GetTick   = pIO->GetTick;
 80042b2:	694a      	ldr	r2, [r1, #20]
    pObj->Ctx.handle   = pObj;
 80042b4:	6200      	str	r0, [r0, #32]
    pObj->IO.GetTick   = pIO->GetTick;
 80042b6:	6142      	str	r2, [r0, #20]
    pObj->Ctx.ReadReg  = ReadRegWrap;
 80042b8:	4a04      	ldr	r2, [pc, #16]	; (80042cc <FT6X06_RegisterBusIO+0x30>)
 80042ba:	61c2      	str	r2, [r0, #28]
    pObj->Ctx.WriteReg = WriteRegWrap;
 80042bc:	4a04      	ldr	r2, [pc, #16]	; (80042d0 <FT6X06_RegisterBusIO+0x34>)
 80042be:	6182      	str	r2, [r0, #24]
    if(pObj->IO.Init != NULL)
 80042c0:	b103      	cbz	r3, 80042c4 <FT6X06_RegisterBusIO+0x28>
      ret = pObj->IO.Init();
 80042c2:	4718      	bx	r3
}
 80042c4:	f04f 30ff 	mov.w	r0, #4294967295
 80042c8:	4770      	bx	lr
 80042ca:	bf00      	nop
 80042cc:	080040b7 	.word	0x080040b7
 80042d0:	080040c5 	.word	0x080040c5

080042d4 <ft6x06_read_reg>:
*                 I2C or SPI reading functions
* Input         : Register Address, length of buffer
* Output        : pdata Read
*******************************************************************************/
int32_t ft6x06_read_reg(ft6x06_ctx_t *ctx, uint8_t reg, uint8_t* pdata, uint16_t length)
{
 80042d4:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
 80042d6:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
 80042da:	46a4      	mov	ip, r4
}
 80042dc:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
 80042e0:	4760      	bx	ip

080042e2 <ft6x06_write_reg>:
*                 I2C or SPI writing function
* Input         : Register Address, pdata to be written, length of buffer
* Output        : None
*******************************************************************************/
int32_t ft6x06_write_reg(ft6x06_ctx_t *ctx, uint8_t reg, uint8_t *pdata, uint16_t length)
{
 80042e2:	b410      	push	{r4}
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
 80042e4:	6804      	ldr	r4, [r0, #0]
 80042e6:	6880      	ldr	r0, [r0, #8]
 80042e8:	46a4      	mov	ip, r4
}
 80042ea:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
 80042ee:	4760      	bx	ip

080042f0 <ft6x06_gest_id>:
* Output         : Status of GEST_ID register
* Return         : Status [FT6X06_ERROR, FT6X06_OK]
*******************************************************************************/
int32_t  ft6x06_gest_id(ft6x06_ctx_t *ctx, uint8_t *value)
{
  return ft6x06_read_reg(ctx, FT6X06_GEST_ID_REG, (uint8_t *)value, 1);
 80042f0:	2301      	movs	r3, #1
{
 80042f2:	460a      	mov	r2, r1
  return ft6x06_read_reg(ctx, FT6X06_GEST_ID_REG, (uint8_t *)value, 1);
 80042f4:	4619      	mov	r1, r3
 80042f6:	f7ff bfed 	b.w	80042d4 <ft6x06_read_reg>

080042fa <ft6x06_td_status>:
* Input          : Pointer to uint8_t
* Output         : Status of TD_STATUS register
* Return         : Status [FT6X06_ERROR, FT6X06_OK]
*******************************************************************************/
int32_t  ft6x06_td_status(ft6x06_ctx_t *ctx, uint8_t *value)
{
 80042fa:	b510      	push	{r4, lr}
  int32_t ret;
  
  ret = ft6x06_read_reg(ctx, FT6X06_TD_STAT_REG, (uint8_t *)value, 1);
 80042fc:	460a      	mov	r2, r1
{
 80042fe:	460c      	mov	r4, r1
  ret = ft6x06_read_reg(ctx, FT6X06_TD_STAT_REG, (uint8_t *)value, 1);
 8004300:	2301      	movs	r3, #1
 8004302:	2102      	movs	r1, #2
 8004304:	f7ff ffe6 	bl	80042d4 <ft6x06_read_reg>
  
  if(ret == 0)
 8004308:	b918      	cbnz	r0, 8004312 <ft6x06_td_status+0x18>
  {
    *value &= FT6X06_TD_STATUS_BIT_MASK; 
 800430a:	7823      	ldrb	r3, [r4, #0]
 800430c:	f003 030f 	and.w	r3, r3, #15
 8004310:	7023      	strb	r3, [r4, #0]
    *value = *value >> FT6X06_TD_STATUS_BIT_POSITION; 
  }
  
  return ret;
}
 8004312:	bd10      	pop	{r4, pc}

08004314 <ft6x06_radian_value>:
* Input          : uint8_t
* Output         : None
* Return         : Status [FT6X06_ERROR, FT6X06_OK]
*******************************************************************************/
int32_t  ft6x06_radian_value(ft6x06_ctx_t *ctx, uint8_t value)
{
 8004314:	b507      	push	{r0, r1, r2, lr}
  return ft6x06_write_reg(ctx, FT6X06_RADIAN_VALUE_REG, &value, 1);
 8004316:	2301      	movs	r3, #1
{
 8004318:	f88d 1007 	strb.w	r1, [sp, #7]
  return ft6x06_write_reg(ctx, FT6X06_RADIAN_VALUE_REG, &value, 1);
 800431c:	f10d 0207 	add.w	r2, sp, #7
 8004320:	2191      	movs	r1, #145	; 0x91
 8004322:	f7ff ffde 	bl	80042e2 <ft6x06_write_reg>
}
 8004326:	b003      	add	sp, #12
 8004328:	f85d fb04 	ldr.w	pc, [sp], #4

0800432c <ft6x06_offset_left_right>:
* Input          : uint8_t
* Output         : None
* Return         : Status [FT6X06_ERROR, FT6X06_OK]
*******************************************************************************/
int32_t  ft6x06_offset_left_right(ft6x06_ctx_t *ctx, uint8_t value)
{
 800432c:	b507      	push	{r0, r1, r2, lr}
  return ft6x06_write_reg(ctx, FT6X06_OFFSET_LR_REG, &value, 1);
 800432e:	2301      	movs	r3, #1
{
 8004330:	f88d 1007 	strb.w	r1, [sp, #7]
  return ft6x06_write_reg(ctx, FT6X06_OFFSET_LR_REG, &value, 1);
 8004334:	f10d 0207 	add.w	r2, sp, #7
 8004338:	2192      	movs	r1, #146	; 0x92
 800433a:	f7ff ffd2 	bl	80042e2 <ft6x06_write_reg>
}
 800433e:	b003      	add	sp, #12
 8004340:	f85d fb04 	ldr.w	pc, [sp], #4

08004344 <ft6x06_offset_up_down>:
* Input          : uint8_t
* Output         : None
* Return         : Status [FT6X06_ERROR, FT6X06_OK]
*******************************************************************************/
int32_t  ft6x06_offset_up_down(ft6x06_ctx_t *ctx, uint8_t value)
{
 8004344:	b507      	push	{r0, r1, r2, lr}
  return ft6x06_write_reg(ctx, FT6X06_OFFSET_UD_REG, &value, 1);
 8004346:	2301      	movs	r3, #1
{
 8004348:	f88d 1007 	strb.w	r1, [sp, #7]
  return ft6x06_write_reg(ctx, FT6X06_OFFSET_UD_REG, &value, 1);
 800434c:	f10d 0207 	add.w	r2, sp, #7
 8004350:	2193      	movs	r1, #147	; 0x93
 8004352:	f7ff ffc6 	bl	80042e2 <ft6x06_write_reg>
}
 8004356:	b003      	add	sp, #12
 8004358:	f85d fb04 	ldr.w	pc, [sp], #4

0800435c <ft6x06_disatnce_left_right>:
* Input          : uint8_t
* Output         : None
* Return         : Status [FT6X06_ERROR, FT6X06_OK]
*******************************************************************************/
int32_t  ft6x06_disatnce_left_right(ft6x06_ctx_t *ctx, uint8_t value)
{
 800435c:	b507      	push	{r0, r1, r2, lr}
  return ft6x06_write_reg(ctx, FT6X06_DISTANCE_LR_REG, &value, 1);
 800435e:	2301      	movs	r3, #1
{
 8004360:	f88d 1007 	strb.w	r1, [sp, #7]
  return ft6x06_write_reg(ctx, FT6X06_DISTANCE_LR_REG, &value, 1);
 8004364:	f10d 0207 	add.w	r2, sp, #7
 8004368:	2194      	movs	r1, #148	; 0x94
 800436a:	f7ff ffba 	bl	80042e2 <ft6x06_write_reg>
}
 800436e:	b003      	add	sp, #12
 8004370:	f85d fb04 	ldr.w	pc, [sp], #4

08004374 <ft6x06_distance_up_down>:
* Input          : uint8_t
* Output         : None
* Return         : Status [FT6X06_ERROR, FT6X06_OK]
*******************************************************************************/
int32_t  ft6x06_distance_up_down(ft6x06_ctx_t *ctx, uint8_t value)
{
 8004374:	b507      	push	{r0, r1, r2, lr}
  return ft6x06_write_reg(ctx, FT6X06_DISTANCE_UD_REG, &value, 1);
 8004376:	2301      	movs	r3, #1
{
 8004378:	f88d 1007 	strb.w	r1, [sp, #7]
  return ft6x06_write_reg(ctx, FT6X06_DISTANCE_UD_REG, &value, 1);
 800437c:	f10d 0207 	add.w	r2, sp, #7
 8004380:	2195      	movs	r1, #149	; 0x95
 8004382:	f7ff ffae 	bl	80042e2 <ft6x06_write_reg>
}
 8004386:	b003      	add	sp, #12
 8004388:	f85d fb04 	ldr.w	pc, [sp], #4

0800438c <ft6x06_distance_zoom>:
* Input          : uint8_t
* Output         : None
* Return         : Status [FT6X06_ERROR, FT6X06_OK]
*******************************************************************************/
int32_t  ft6x06_distance_zoom(ft6x06_ctx_t *ctx, uint8_t value)
{
 800438c:	b507      	push	{r0, r1, r2, lr}
  return ft6x06_write_reg(ctx, FT6X06_DISTANCE_ZOOM_REG, &value, 1);
 800438e:	2301      	movs	r3, #1
{
 8004390:	f88d 1007 	strb.w	r1, [sp, #7]
  return ft6x06_write_reg(ctx, FT6X06_DISTANCE_ZOOM_REG, &value, 1);
 8004394:	f10d 0207 	add.w	r2, sp, #7
 8004398:	2196      	movs	r1, #150	; 0x96
 800439a:	f7ff ffa2 	bl	80042e2 <ft6x06_write_reg>
}
 800439e:	b003      	add	sp, #12
 80043a0:	f85d fb04 	ldr.w	pc, [sp], #4

080043a4 <ft6x06_g_mode>:
* Input          : uint8_t
* Output         : None
* Return         : Status [FT6X06_ERROR, FT6X06_OK]
*******************************************************************************/
int32_t  ft6x06_g_mode(ft6x06_ctx_t *ctx, uint8_t value)
{
 80043a4:	b507      	push	{r0, r1, r2, lr}
  return ft6x06_write_reg(ctx, FT6X06_GMODE_REG, &value, 1);
 80043a6:	2301      	movs	r3, #1
{
 80043a8:	f88d 1007 	strb.w	r1, [sp, #7]
  return ft6x06_write_reg(ctx, FT6X06_GMODE_REG, &value, 1);
 80043ac:	f10d 0207 	add.w	r2, sp, #7
 80043b0:	21a4      	movs	r1, #164	; 0xa4
 80043b2:	f7ff ff96 	bl	80042e2 <ft6x06_write_reg>
}
 80043b6:	b003      	add	sp, #12
 80043b8:	f85d fb04 	ldr.w	pc, [sp], #4

080043bc <ft6x06_chip_id>:
* Input          : Pointer to uint8_t
* Output         : Status of FT6X06_CHIP_ID register
* Return         : Status [FT6X06_ERROR, FT6X06_OK]
*******************************************************************************/
int32_t  ft6x06_chip_id(ft6x06_ctx_t *ctx, uint8_t *value)
{
 80043bc:	460a      	mov	r2, r1
  int32_t ret;
  
  ret = ft6x06_read_reg(ctx, FT6X06_CHIP_ID_REG, (uint8_t *)value, 1);
 80043be:	2301      	movs	r3, #1
 80043c0:	21a8      	movs	r1, #168	; 0xa8
 80043c2:	f7ff bf87 	b.w	80042d4 <ft6x06_read_reg>
	...

080043c8 <IS42S32800J_ClockEnable>:
  * @param  Ctx Component object pointer
  * @param  Interface Could be FMC_SDRAM_CMD_TARGET_BANK1 or FMC_SDRAM_CMD_TARGET_BANK2
  * @retval error status
  */
int32_t IS42S32800J_ClockEnable(SDRAM_HandleTypeDef *Ctx, uint32_t Interface) 
{
 80043c8:	b508      	push	{r3, lr}
  Command.CommandMode            = IS42S32800J_CLK_ENABLE_CMD;
 80043ca:	2201      	movs	r2, #1
 80043cc:	4b07      	ldr	r3, [pc, #28]	; (80043ec <IS42S32800J_ClockEnable+0x24>)
  Command.CommandTarget          = Interface;
 80043ce:	e9c3 2100 	strd	r2, r1, [r3]
  Command.AutoRefreshNumber      = 1;
 80043d2:	609a      	str	r2, [r3, #8]
  Command.ModeRegisterDefinition = 0;
 80043d4:	2200      	movs	r2, #0

  /* Send the command */
  if(HAL_SDRAM_SendCommand(Ctx, &Command, IS42S32800J_TIMEOUT) != HAL_OK)
 80043d6:	4619      	mov	r1, r3
  Command.ModeRegisterDefinition = 0;
 80043d8:	60da      	str	r2, [r3, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, IS42S32800J_TIMEOUT) != HAL_OK)
 80043da:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80043de:	f005 f8f9 	bl	80095d4 <HAL_SDRAM_SendCommand>
 80043e2:	3800      	subs	r0, #0
 80043e4:	bf18      	it	ne
 80043e6:	2001      	movne	r0, #1
  }
  else
  {
    return IS42S32800J_OK;
  }
}
 80043e8:	4240      	negs	r0, r0
 80043ea:	bd08      	pop	{r3, pc}
 80043ec:	24004750 	.word	0x24004750

080043f0 <IS42S32800J_Precharge>:
  * @param  Ctx Component object pointer
  * @param  Interface Could be FMC_SDRAM_CMD_TARGET_BANK1 or FMC_SDRAM_CMD_TARGET_BANK2
  * @retval error status
  */
int32_t IS42S32800J_Precharge(SDRAM_HandleTypeDef *Ctx, uint32_t Interface) 
{
 80043f0:	b508      	push	{r3, lr}
  Command.CommandMode            = IS42S32800J_PALL_CMD;
 80043f2:	2202      	movs	r2, #2
 80043f4:	4b08      	ldr	r3, [pc, #32]	; (8004418 <IS42S32800J_Precharge+0x28>)
  Command.CommandTarget          = Interface;
 80043f6:	e9c3 2100 	strd	r2, r1, [r3]
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;
 80043fa:	2101      	movs	r1, #1
 80043fc:	2200      	movs	r2, #0
 80043fe:	e9c3 1202 	strd	r1, r2, [r3, #8]

  /* Send the command */
  if(HAL_SDRAM_SendCommand(Ctx, &Command, IS42S32800J_TIMEOUT) != HAL_OK)
 8004402:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8004406:	4619      	mov	r1, r3
 8004408:	f005 f8e4 	bl	80095d4 <HAL_SDRAM_SendCommand>
 800440c:	3800      	subs	r0, #0
 800440e:	bf18      	it	ne
 8004410:	2001      	movne	r0, #1
  }
  else
  {
    return IS42S32800J_OK;
  }
}
 8004412:	4240      	negs	r0, r0
 8004414:	bd08      	pop	{r3, pc}
 8004416:	bf00      	nop
 8004418:	24004750 	.word	0x24004750

0800441c <IS42S32800J_ModeRegConfig>:
int32_t IS42S32800J_ModeRegConfig(SDRAM_HandleTypeDef *Ctx, IS42S32800J_Context_t *pRegMode) 
{
  uint32_t tmpmrd;

  /* Program the external memory mode register */
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
 800441c:	e9d1 3203 	ldrd	r3, r2, [r1, #12]
{
 8004420:	b510      	push	{r4, lr}
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
 8004422:	4313      	orrs	r3, r2
                     pRegMode->BurstType     |\
 8004424:	694a      	ldr	r2, [r1, #20]
                     pRegMode->CASLatency    |\
                     pRegMode->OperationMode |\
                     pRegMode->WriteBurstMode;
  
  Command.CommandMode            = IS42S32800J_LOAD_MODE_CMD;
 8004426:	4c0b      	ldr	r4, [pc, #44]	; (8004454 <IS42S32800J_ModeRegConfig+0x38>)
                     pRegMode->BurstType     |\
 8004428:	4313      	orrs	r3, r2
                     pRegMode->CASLatency    |\
 800442a:	698a      	ldr	r2, [r1, #24]
 800442c:	4313      	orrs	r3, r2
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
 800442e:	69ca      	ldr	r2, [r1, #28]
 8004430:	4313      	orrs	r3, r2
  Command.CommandMode            = IS42S32800J_LOAD_MODE_CMD;
 8004432:	2204      	movs	r2, #4
 8004434:	6022      	str	r2, [r4, #0]
  Command.CommandTarget          = pRegMode->TargetBank;
 8004436:	680a      	ldr	r2, [r1, #0]
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = tmpmrd;
  
  /* Send the command */
  if(HAL_SDRAM_SendCommand(Ctx, &Command, IS42S32800J_TIMEOUT) != HAL_OK)
 8004438:	4621      	mov	r1, r4
  Command.CommandTarget          = pRegMode->TargetBank;
 800443a:	6062      	str	r2, [r4, #4]
  Command.AutoRefreshNumber      = 1;
 800443c:	2201      	movs	r2, #1
  Command.ModeRegisterDefinition = tmpmrd;
 800443e:	e9c4 2302 	strd	r2, r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, IS42S32800J_TIMEOUT) != HAL_OK)
 8004442:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8004446:	f005 f8c5 	bl	80095d4 <HAL_SDRAM_SendCommand>
 800444a:	3800      	subs	r0, #0
 800444c:	bf18      	it	ne
 800444e:	2001      	movne	r0, #1
  }
  else
  {
    return IS42S32800J_OK;
  }
}
 8004450:	4240      	negs	r0, r0
 8004452:	bd10      	pop	{r4, pc}
 8004454:	24004750 	.word	0x24004750

08004458 <IS42S32800J_RefreshMode>:
  * @param  RefreshMode Could be IS42S32800J_CMD_AUTOREFRESH_MODE or
  *                      IS42S32800J_CMD_SELFREFRESH_MODE
  * @retval error status
  */
int32_t IS42S32800J_RefreshMode(SDRAM_HandleTypeDef *Ctx, uint32_t Interface, uint32_t RefreshMode) 
{
 8004458:	b508      	push	{r3, lr}
  Command.CommandMode            = RefreshMode;
 800445a:	4b08      	ldr	r3, [pc, #32]	; (800447c <IS42S32800J_RefreshMode+0x24>)
  Command.CommandTarget          = Interface;
 800445c:	e9c3 2100 	strd	r2, r1, [r3]
  Command.AutoRefreshNumber      = 8;
  Command.ModeRegisterDefinition = 0;
 8004460:	2108      	movs	r1, #8
 8004462:	2200      	movs	r2, #0
 8004464:	e9c3 1202 	strd	r1, r2, [r3, #8]

  /* Send the command */
  if(HAL_SDRAM_SendCommand(Ctx, &Command, IS42S32800J_TIMEOUT) != HAL_OK)
 8004468:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800446c:	4619      	mov	r1, r3
 800446e:	f005 f8b1 	bl	80095d4 <HAL_SDRAM_SendCommand>
 8004472:	3800      	subs	r0, #0
 8004474:	bf18      	it	ne
 8004476:	2001      	movne	r0, #1
  }
  else
  {
    return IS42S32800J_OK;
  }
}
 8004478:	4240      	negs	r0, r0
 800447a:	bd08      	pop	{r3, pc}
 800447c:	24004750 	.word	0x24004750

08004480 <IS42S32800J_RefreshRate>:
  * @param  Ctx Component object pointer
  * @param  RefreshCount The refresh rate to be programmed
  * @retval error status
  */
int32_t IS42S32800J_RefreshRate(SDRAM_HandleTypeDef *Ctx, uint32_t RefreshCount) 
{
 8004480:	b508      	push	{r3, lr}
  /* Set the device refresh rate */
  if(HAL_SDRAM_ProgramRefreshRate(Ctx, RefreshCount) != HAL_OK)
 8004482:	f005 f8c6 	bl	8009612 <HAL_SDRAM_ProgramRefreshRate>
 8004486:	3800      	subs	r0, #0
 8004488:	bf18      	it	ne
 800448a:	2001      	movne	r0, #1
  }
  else
  {
    return IS42S32800J_OK;
  }
}
 800448c:	4240      	negs	r0, r0
 800448e:	bd08      	pop	{r3, pc}

08004490 <IS42S32800J_Init>:
{
 8004490:	b570      	push	{r4, r5, r6, lr}
 8004492:	460c      	mov	r4, r1
  if(IS42S32800J_ClockEnable(Ctx, pRegMode->TargetBank) == IS42S32800J_OK)
 8004494:	6809      	ldr	r1, [r1, #0]
{
 8004496:	4605      	mov	r5, r0
  if(IS42S32800J_ClockEnable(Ctx, pRegMode->TargetBank) == IS42S32800J_OK)
 8004498:	f7ff ff96 	bl	80043c8 <IS42S32800J_ClockEnable>
 800449c:	b110      	cbz	r0, 80044a4 <IS42S32800J_Init+0x14>
  int32_t ret = IS42S32800J_ERROR;
 800449e:	f04f 30ff 	mov.w	r0, #4294967295
}
 80044a2:	bd70      	pop	{r4, r5, r6, pc}
  * @retval IS42S32800J_OK
  */
static int32_t IS42S32800J_Delay(uint32_t Delay)
{  
  uint32_t tickstart;
  tickstart = HAL_GetTick();
 80044a4:	f001 fc98 	bl	8005dd8 <HAL_GetTick>
 80044a8:	4606      	mov	r6, r0
  while((HAL_GetTick() - tickstart) < Delay)
 80044aa:	f001 fc95 	bl	8005dd8 <HAL_GetTick>
 80044ae:	4286      	cmp	r6, r0
 80044b0:	d0fb      	beq.n	80044aa <IS42S32800J_Init+0x1a>
    if(IS42S32800J_Precharge(Ctx, pRegMode->TargetBank) == IS42S32800J_OK)
 80044b2:	6821      	ldr	r1, [r4, #0]
 80044b4:	4628      	mov	r0, r5
 80044b6:	f7ff ff9b 	bl	80043f0 <IS42S32800J_Precharge>
 80044ba:	2800      	cmp	r0, #0
 80044bc:	d1ef      	bne.n	800449e <IS42S32800J_Init+0xe>
      if(IS42S32800J_RefreshMode(Ctx, pRegMode->TargetBank, pRegMode->RefreshMode) == IS42S32800J_OK)
 80044be:	4628      	mov	r0, r5
 80044c0:	e9d4 1200 	ldrd	r1, r2, [r4]
 80044c4:	f7ff ffc8 	bl	8004458 <IS42S32800J_RefreshMode>
 80044c8:	2800      	cmp	r0, #0
 80044ca:	d1e8      	bne.n	800449e <IS42S32800J_Init+0xe>
        if(IS42S32800J_ModeRegConfig(Ctx, pRegMode) == IS42S32800J_OK)
 80044cc:	4621      	mov	r1, r4
 80044ce:	4628      	mov	r0, r5
 80044d0:	f7ff ffa4 	bl	800441c <IS42S32800J_ModeRegConfig>
 80044d4:	2800      	cmp	r0, #0
 80044d6:	d1e2      	bne.n	800449e <IS42S32800J_Init+0xe>
          if(IS42S32800J_RefreshRate(Ctx, pRegMode->RefreshRate) == IS42S32800J_OK)
 80044d8:	68a1      	ldr	r1, [r4, #8]
 80044da:	4628      	mov	r0, r5
 80044dc:	f7ff ffd0 	bl	8004480 <IS42S32800J_RefreshRate>
 80044e0:	3800      	subs	r0, #0
 80044e2:	bf18      	it	ne
 80044e4:	2001      	movne	r0, #1
 80044e6:	4240      	negs	r0, r0
  return ret;
 80044e8:	e7db      	b.n	80044a2 <IS42S32800J_Init+0x12>

080044ea <MT25TL01G_GetFlashInfo>:
  * @retval QSPI memory status
  */
int32_t MT25TL01G_GetFlashInfo(MT25TL01G_Info_t *pInfo)
{
  pInfo->FlashSize          = MT25TL01G_FLASH_SIZE;
  pInfo->EraseSectorSize    = (2 * MT25TL01G_SUBSECTOR_SIZE);
 80044ea:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 80044ee:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  pInfo->ProgPageSize       = MT25TL01G_PAGE_SIZE;
  pInfo->EraseSectorsNumber = (MT25TL01G_FLASH_SIZE/pInfo->EraseSectorSize);
 80044f2:	f44f 7180 	mov.w	r1, #256	; 0x100
  pInfo->EraseSectorSize    = (2 * MT25TL01G_SUBSECTOR_SIZE);
 80044f6:	e9c0 2300 	strd	r2, r3, [r0]
  pInfo->EraseSectorsNumber = (MT25TL01G_FLASH_SIZE/pInfo->EraseSectorSize);
 80044fa:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 80044fe:	e9c0 3102 	strd	r3, r1, [r0, #8]
  pInfo->ProgPagesNumber    = (MT25TL01G_FLASH_SIZE/pInfo->ProgPageSize);
 8004502:	f44f 2300 	mov.w	r3, #524288	; 0x80000
 8004506:	6103      	str	r3, [r0, #16]
  return MT25TL01G_OK;
}
 8004508:	2000      	movs	r0, #0
 800450a:	4770      	bx	lr

0800450c <MT25TL01G_AutoPollingMemReady>:
  * @param  Ctx Component object pointer
  * @param  Mode Interface mode
  * @retval QSPI memory status
  */
int32_t MT25TL01G_AutoPollingMemReady(QSPI_HandleTypeDef *Ctx, MT25TL01G_Interface_t Mode)
{
 800450c:	b500      	push	{lr}

  QSPI_CommandTypeDef     s_command;
  QSPI_AutoPollingTypeDef s_config;

  /* Configure automatic polling mode to wait for memory ready */
  s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
 800450e:	f44f 7340 	mov.w	r3, #768	; 0x300
{
 8004512:	b095      	sub	sp, #84	; 0x54
  s_command.Instruction       = MT25TL01G_READ_STATUS_REG_CMD;
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
  s_command.DataMode          = QSPI_DATA_4_LINES;
 8004514:	f04f 7240 	mov.w	r2, #50331648	; 0x3000000
  s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
 8004518:	930c      	str	r3, [sp, #48]	; 0x30
  s_command.Instruction       = MT25TL01G_READ_STATUS_REG_CMD;
 800451a:	2305      	movs	r3, #5
  s_command.DataMode          = QSPI_DATA_4_LINES;
 800451c:	920f      	str	r2, [sp, #60]	; 0x3c
  s_command.DummyCycles       = 2;
 800451e:	2202      	movs	r2, #2
  s_command.Instruction       = MT25TL01G_READ_STATUS_REG_CMD;
 8004520:	9306      	str	r3, [sp, #24]
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8004522:	2300      	movs	r3, #0
  s_command.DummyCycles       = 2;
 8004524:	920b      	str	r2, [sp, #44]	; 0x2c
  s_config.Interval        = 0x10;
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
  s_config.Mask            = MT25TL01G_SR_WIP | (MT25TL01G_SR_WIP <<8);
  s_config.StatusBytesSize = 2;

  if (HAL_QSPI_AutoPolling(Ctx, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004526:	a906      	add	r1, sp, #24
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8004528:	9313      	str	r3, [sp, #76]	; 0x4c
  s_config.Match           = 0;
 800452a:	9300      	str	r3, [sp, #0]
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
 800452c:	9304      	str	r3, [sp, #16]
  s_config.StatusBytesSize = 2;
 800452e:	9203      	str	r2, [sp, #12]
  if (HAL_QSPI_AutoPolling(Ctx, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004530:	466a      	mov	r2, sp
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8004532:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8004536:	e9cd 3311 	strd	r3, r3, [sp, #68]	; 0x44
  s_config.Interval        = 0x10;
 800453a:	2310      	movs	r3, #16
 800453c:	9302      	str	r3, [sp, #8]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 800453e:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8004542:	9305      	str	r3, [sp, #20]
  s_config.Mask            = MT25TL01G_SR_WIP | (MT25TL01G_SR_WIP <<8);
 8004544:	f240 1301 	movw	r3, #257	; 0x101
 8004548:	9301      	str	r3, [sp, #4]
  if (HAL_QSPI_AutoPolling(Ctx, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800454a:	f241 3388 	movw	r3, #5000	; 0x1388
 800454e:	f003 fc9e 	bl	8007e8e <HAL_QSPI_AutoPolling>
  {
    return MT25TL01G_ERROR_AUTOPOLLING;
 8004552:	2800      	cmp	r0, #0
  }

  return MT25TL01G_OK;

}
 8004554:	bf14      	ite	ne
 8004556:	f06f 0004 	mvnne.w	r0, #4
 800455a:	2000      	moveq	r0, #0
 800455c:	b015      	add	sp, #84	; 0x54
 800455e:	f85d fb04 	ldr.w	pc, [sp], #4

08004562 <MT25TL01G_WriteEnable>:
{
  QSPI_CommandTypeDef     s_command;
  QSPI_AutoPollingTypeDef s_config;

  /* Enable write operations */
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 8004562:	2903      	cmp	r1, #3
  s_command.DummyCycles       = 0;
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004564:	f241 3288 	movw	r2, #5000	; 0x1388
{
 8004568:	b530      	push	{r4, r5, lr}
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 800456a:	bf08      	it	eq
 800456c:	f44f 7340 	moveq.w	r3, #768	; 0x300
{
 8004570:	b095      	sub	sp, #84	; 0x54
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 8004572:	bf18      	it	ne
 8004574:	f44f 7380 	movne.w	r3, #256	; 0x100
{
 8004578:	460c      	mov	r4, r1
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800457a:	a906      	add	r1, sp, #24
{
 800457c:	4605      	mov	r5, r0
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 800457e:	930c      	str	r3, [sp, #48]	; 0x30
  s_command.Instruction       = MT25TL01G_WRITE_ENABLE_CMD;
 8004580:	2306      	movs	r3, #6
 8004582:	9306      	str	r3, [sp, #24]
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8004584:	2300      	movs	r3, #0
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8004586:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_command.DataMode          = QSPI_DATA_NONE;
 800458a:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DummyCycles       = 0;
 800458c:	930b      	str	r3, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 800458e:	9313      	str	r3, [sp, #76]	; 0x4c
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8004590:	e9cd 3311 	strd	r3, r3, [sp, #68]	; 0x44
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004594:	f003 fb80 	bl	8007c98 <HAL_QSPI_Command>
 8004598:	bb20      	cbnz	r0, 80045e4 <MT25TL01G_WriteEnable+0x82>
  {
    return MT25TL01G_ERROR_COMMAND;
  }

  /* Configure automatic polling mode to wait for write enabling */
  s_config.Match           = MT25TL01G_SR_WREN | (MT25TL01G_SR_WREN << 8);
 800459a:	f240 2302 	movw	r3, #514	; 0x202
  s_config.Mask            = MT25TL01G_SR_WREN | (MT25TL01G_SR_WREN << 8);
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
  s_config.StatusBytesSize = 2;
  s_config.Interval        = 0x10;
 800459e:	2202      	movs	r2, #2
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;

  s_command.Instruction    = MT25TL01G_READ_STATUS_REG_CMD;
  s_command.DataMode       = (Mode == MT25TL01G_QPI_MODE) ? QSPI_DATA_4_LINES : QSPI_DATA_1_LINE;
 80045a0:	2c03      	cmp	r4, #3
  s_command.Instruction    = MT25TL01G_READ_STATUS_REG_CMD;
 80045a2:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
 80045a6:	9004      	str	r0, [sp, #16]


  if (HAL_QSPI_AutoPolling(Ctx, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80045a8:	4628      	mov	r0, r5
  s_config.Mask            = MT25TL01G_SR_WREN | (MT25TL01G_SR_WREN << 8);
 80045aa:	e9cd 3300 	strd	r3, r3, [sp]
  s_config.Interval        = 0x10;
 80045ae:	f04f 0310 	mov.w	r3, #16
 80045b2:	e9cd 3202 	strd	r3, r2, [sp, #8]
  s_command.Instruction    = MT25TL01G_READ_STATUS_REG_CMD;
 80045b6:	f04f 0305 	mov.w	r3, #5
  if (HAL_QSPI_AutoPolling(Ctx, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80045ba:	466a      	mov	r2, sp
  s_command.Instruction    = MT25TL01G_READ_STATUS_REG_CMD;
 80045bc:	e9cd 1305 	strd	r1, r3, [sp, #20]
  s_command.DataMode       = (Mode == MT25TL01G_QPI_MODE) ? QSPI_DATA_4_LINES : QSPI_DATA_1_LINE;
 80045c0:	bf0c      	ite	eq
 80045c2:	f04f 7340 	moveq.w	r3, #50331648	; 0x3000000
 80045c6:	f04f 7380 	movne.w	r3, #16777216	; 0x1000000
  if (HAL_QSPI_AutoPolling(Ctx, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80045ca:	a906      	add	r1, sp, #24
  s_command.DataMode       = (Mode == MT25TL01G_QPI_MODE) ? QSPI_DATA_4_LINES : QSPI_DATA_1_LINE;
 80045cc:	930f      	str	r3, [sp, #60]	; 0x3c
  if (HAL_QSPI_AutoPolling(Ctx, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80045ce:	f241 3388 	movw	r3, #5000	; 0x1388
 80045d2:	f003 fc5c 	bl	8007e8e <HAL_QSPI_AutoPolling>
  {
    return MT25TL01G_ERROR_AUTOPOLLING;
 80045d6:	2800      	cmp	r0, #0
 80045d8:	bf0c      	ite	eq
 80045da:	2000      	moveq	r0, #0
 80045dc:	f06f 0004 	mvnne.w	r0, #4
  }

  return MT25TL01G_OK;
}
 80045e0:	b015      	add	sp, #84	; 0x54
 80045e2:	bd30      	pop	{r4, r5, pc}
    return MT25TL01G_ERROR_COMMAND;
 80045e4:	f06f 0001 	mvn.w	r0, #1
 80045e8:	e7fa      	b.n	80045e0 <MT25TL01G_WriteEnable+0x7e>

080045ea <MT25TL01G_Enter4BytesAddressMode>:
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 80045ea:	2903      	cmp	r1, #3
{
 80045ec:	b530      	push	{r4, r5, lr}
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 80045ee:	bf08      	it	eq
 80045f0:	f44f 7340 	moveq.w	r3, #768	; 0x300
{
 80045f4:	b08f      	sub	sp, #60	; 0x3c
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 80045f6:	bf18      	it	ne
 80045f8:	f44f 7380 	movne.w	r3, #256	; 0x100
{
 80045fc:	4604      	mov	r4, r0
 80045fe:	460d      	mov	r5, r1
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 8004600:	9306      	str	r3, [sp, #24]
  s_command.Instruction       = MT25TL01G_ENTER_4_BYTE_ADDR_MODE_CMD;
 8004602:	23b7      	movs	r3, #183	; 0xb7
 8004604:	9300      	str	r3, [sp, #0]
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8004606:	2300      	movs	r3, #0
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8004608:	e9cd 3307 	strd	r3, r3, [sp, #28]
  s_command.DataMode          = QSPI_DATA_NONE;
 800460c:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.DummyCycles       = 0;
 800460e:	9305      	str	r3, [sp, #20]
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8004610:	930d      	str	r3, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8004612:	e9cd 330b 	strd	r3, r3, [sp, #44]	; 0x2c
  if( MT25TL01G_WriteEnable(Ctx,Mode)!=MT25TL01G_OK)
 8004616:	f7ff ffa4 	bl	8004562 <MT25TL01G_WriteEnable>
 800461a:	b958      	cbnz	r0, 8004634 <MT25TL01G_Enter4BytesAddressMode+0x4a>
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800461c:	f241 3288 	movw	r2, #5000	; 0x1388
 8004620:	4669      	mov	r1, sp
 8004622:	4620      	mov	r0, r4
 8004624:	f003 fb38 	bl	8007c98 <HAL_QSPI_Command>
 8004628:	b920      	cbnz	r0, 8004634 <MT25TL01G_Enter4BytesAddressMode+0x4a>
  else if(MT25TL01G_AutoPollingMemReady(Ctx,Mode)!=MT25TL01G_OK)
 800462a:	4629      	mov	r1, r5
 800462c:	4620      	mov	r0, r4
 800462e:	f7ff ff6d 	bl	800450c <MT25TL01G_AutoPollingMemReady>
 8004632:	b108      	cbz	r0, 8004638 <MT25TL01G_Enter4BytesAddressMode+0x4e>
    return MT25TL01G_ERROR_COMMAND;
 8004634:	f06f 0001 	mvn.w	r0, #1
}
 8004638:	b00f      	add	sp, #60	; 0x3c
 800463a:	bd30      	pop	{r4, r5, pc}

0800463c <MT25TL01G_EnterQPIMode>:
  * @param  Ctx Component object pointer
  * @param  Mode Interface mode
  * @retval QSPI memory status
  */
int32_t MT25TL01G_EnterQPIMode(QSPI_HandleTypeDef *Ctx)
{
 800463c:	b500      	push	{lr}
  QSPI_CommandTypeDef s_command;

  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 800463e:	f44f 7380 	mov.w	r3, #256	; 0x100
{
 8004642:	b08f      	sub	sp, #60	; 0x3c
  s_command.DummyCycles       = 0;
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004644:	f241 3288 	movw	r2, #5000	; 0x1388
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8004648:	9306      	str	r3, [sp, #24]
  s_command.Instruction       = MT25TL01G_ENTER_QUAD_CMD;
 800464a:	2335      	movs	r3, #53	; 0x35
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800464c:	4669      	mov	r1, sp
  s_command.Instruction       = MT25TL01G_ENTER_QUAD_CMD;
 800464e:	9300      	str	r3, [sp, #0]
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8004650:	2300      	movs	r3, #0
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8004652:	e9cd 3307 	strd	r3, r3, [sp, #28]
  s_command.DataMode          = QSPI_DATA_NONE;
 8004656:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.DummyCycles       = 0;
 8004658:	9305      	str	r3, [sp, #20]
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 800465a:	930d      	str	r3, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 800465c:	e9cd 330b 	strd	r3, r3, [sp, #44]	; 0x2c
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004660:	f003 fb1a 	bl	8007c98 <HAL_QSPI_Command>
  {
    return MT25TL01G_ERROR_COMMAND;
 8004664:	2800      	cmp	r0, #0
  }

  return MT25TL01G_OK;
}
 8004666:	bf14      	ite	ne
 8004668:	f06f 0001 	mvnne.w	r0, #1
 800466c:	2000      	moveq	r0, #0
 800466e:	b00f      	add	sp, #60	; 0x3c
 8004670:	f85d fb04 	ldr.w	pc, [sp], #4

08004674 <MT25TL01G_ExitQPIMode>:
  * @param  Ctx Component object pointer
  * @param  Mode Interface mode
  * @retval QSPI memory status
  */
int32_t MT25TL01G_ExitQPIMode(QSPI_HandleTypeDef *Ctx)
{
 8004674:	b500      	push	{lr}
  QSPI_CommandTypeDef s_command;

  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8004676:	f44f 7380 	mov.w	r3, #256	; 0x100
{
 800467a:	b08f      	sub	sp, #60	; 0x3c
  s_command.DummyCycles       = 0;
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800467c:	f241 3288 	movw	r2, #5000	; 0x1388
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8004680:	9306      	str	r3, [sp, #24]
  s_command.Instruction       = MT25TL01G_EXIT_QUAD_CMD;
 8004682:	23f5      	movs	r3, #245	; 0xf5
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004684:	4669      	mov	r1, sp
  s_command.Instruction       = MT25TL01G_EXIT_QUAD_CMD;
 8004686:	9300      	str	r3, [sp, #0]
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8004688:	2300      	movs	r3, #0
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 800468a:	e9cd 3307 	strd	r3, r3, [sp, #28]
  s_command.DataMode          = QSPI_DATA_NONE;
 800468e:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.DummyCycles       = 0;
 8004690:	9305      	str	r3, [sp, #20]
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8004692:	930d      	str	r3, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8004694:	e9cd 330b 	strd	r3, r3, [sp, #44]	; 0x2c
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004698:	f003 fafe 	bl	8007c98 <HAL_QSPI_Command>
  {
    return MT25TL01G_ERROR_COMMAND;
 800469c:	2800      	cmp	r0, #0
  }

  return MT25TL01G_OK;
}
 800469e:	bf14      	ite	ne
 80046a0:	f06f 0001 	mvnne.w	r0, #1
 80046a4:	2000      	moveq	r0, #0
 80046a6:	b00f      	add	sp, #60	; 0x3c
 80046a8:	f85d fb04 	ldr.w	pc, [sp], #4

080046ac <MT25TL01G_EnableMemoryMappedModeDTR>:
  * @param  Ctx Component object pointer
  * @param  Mode Interface mode
  * @retval QSPI memory status
  */
int32_t MT25TL01G_EnableMemoryMappedModeDTR(QSPI_HandleTypeDef *Ctx, MT25TL01G_Interface_t Mode)
{
 80046ac:	b500      	push	{lr}
 80046ae:	b091      	sub	sp, #68	; 0x44
  QSPI_CommandTypeDef      s_command;
  QSPI_MemoryMappedTypeDef s_mem_mapped_cfg;
  switch(Mode)
 80046b0:	2903      	cmp	r1, #3
 80046b2:	d80e      	bhi.n	80046d2 <MT25TL01G_EnableMemoryMappedModeDTR+0x26>
 80046b4:	e8df f001 	tbb	[pc, r1]
 80046b8:	3f342902 	.word	0x3f342902
  {
  case MT25TL01G_SPI_MODE:                /* 1-1-1 commands, Power on H/W default setting */
    s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80046bc:	f44f 7380 	mov.w	r3, #256	; 0x100
 80046c0:	9308      	str	r3, [sp, #32]
    s_command.Instruction       = MT25TL01G_FAST_READ_4_BYTE_DTR_CMD;
 80046c2:	230e      	movs	r3, #14
 80046c4:	9302      	str	r3, [sp, #8]
    s_command.AddressMode       = QSPI_ADDRESS_1_LINE;
 80046c6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80046ca:	9309      	str	r3, [sp, #36]	; 0x24
    s_command.DataMode          = QSPI_DATA_1_LINE;
 80046cc:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
    break;
  case MT25TL01G_QPI_MODE:                 /* 4-4-4 commands */
    s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
    s_command.Instruction       = MT25TL01G_QUAD_INOUT_FAST_READ_DTR_CMD;
    s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
    s_command.DataMode          = QSPI_DATA_4_LINES;
 80046d0:	930b      	str	r3, [sp, #44]	; 0x2c
    break;
  }
  /* Configure the command for the read instruction */
  s_command.AddressSize       = QSPI_ADDRESS_32_BITS;
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
  s_command.DummyCycles       = MT25TL01G_DUMMY_CYCLES_READ_QUAD_DTR;
 80046d2:	2208      	movs	r2, #8
  s_command.AddressSize       = QSPI_ADDRESS_32_BITS;
 80046d4:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  s_command.DdrMode           = QSPI_DDR_MODE_ENABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_HALF_CLK_DELAY;
 80046d8:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000

  /* Configure the memory mapped mode */
  s_mem_mapped_cfg.TimeOutActivation = QSPI_TIMEOUT_COUNTER_DISABLE;
  s_mem_mapped_cfg.TimeOutPeriod     = 0;

  if (HAL_QSPI_MemoryMapped(Ctx, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 80046dc:	a902      	add	r1, sp, #8
  s_command.DummyCycles       = MT25TL01G_DUMMY_CYCLES_READ_QUAD_DTR;
 80046de:	9207      	str	r2, [sp, #28]
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_HALF_CLK_DELAY;
 80046e0:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
  s_command.AddressSize       = QSPI_ADDRESS_32_BITS;
 80046e4:	9305      	str	r3, [sp, #20]
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 80046e6:	2300      	movs	r3, #0
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_HALF_CLK_DELAY;
 80046e8:	e9cd c20d 	strd	ip, r2, [sp, #52]	; 0x34
  if (HAL_QSPI_MemoryMapped(Ctx, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 80046ec:	466a      	mov	r2, sp
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 80046ee:	930a      	str	r3, [sp, #40]	; 0x28
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 80046f0:	930f      	str	r3, [sp, #60]	; 0x3c
  s_mem_mapped_cfg.TimeOutPeriod     = 0;
 80046f2:	e9cd 3300 	strd	r3, r3, [sp]
  if (HAL_QSPI_MemoryMapped(Ctx, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 80046f6:	f003 fc1a 	bl	8007f2e <HAL_QSPI_MemoryMapped>
  {
    return MT25TL01G_ERROR_MEMORYMAPPED;
 80046fa:	2800      	cmp	r0, #0
  }

  return MT25TL01G_OK;
}
 80046fc:	bf14      	ite	ne
 80046fe:	f06f 0005 	mvnne.w	r0, #5
 8004702:	2000      	moveq	r0, #0
 8004704:	b011      	add	sp, #68	; 0x44
 8004706:	f85d fb04 	ldr.w	pc, [sp], #4
    s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 800470a:	f44f 7380 	mov.w	r3, #256	; 0x100
 800470e:	9308      	str	r3, [sp, #32]
    s_command.Instruction       = MT25TL01G_DUAL_OUT_FAST_READ_DTR_CMD;
 8004710:	233d      	movs	r3, #61	; 0x3d
 8004712:	9302      	str	r3, [sp, #8]
    s_command.AddressMode       = QSPI_ADDRESS_1_LINE;
 8004714:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8004718:	9309      	str	r3, [sp, #36]	; 0x24
    s_command.DataMode          = QSPI_DATA_2_LINES;
 800471a:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 800471e:	e7d7      	b.n	80046d0 <MT25TL01G_EnableMemoryMappedModeDTR+0x24>
    s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8004720:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004724:	9308      	str	r3, [sp, #32]
    s_command.Instruction       = MT25TL01G_QUAD_INOUT_FAST_READ_4_BYTE_DTR_CMD;
 8004726:	23ee      	movs	r3, #238	; 0xee
    s_command.Instruction       = MT25TL01G_QUAD_INOUT_FAST_READ_DTR_CMD;
 8004728:	9302      	str	r3, [sp, #8]
    s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
 800472a:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 800472e:	9309      	str	r3, [sp, #36]	; 0x24
    s_command.DataMode          = QSPI_DATA_4_LINES;
 8004730:	f04f 7340 	mov.w	r3, #50331648	; 0x3000000
 8004734:	e7cc      	b.n	80046d0 <MT25TL01G_EnableMemoryMappedModeDTR+0x24>
    s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
 8004736:	f44f 7340 	mov.w	r3, #768	; 0x300
 800473a:	9308      	str	r3, [sp, #32]
    s_command.Instruction       = MT25TL01G_QUAD_INOUT_FAST_READ_DTR_CMD;
 800473c:	23ed      	movs	r3, #237	; 0xed
 800473e:	e7f3      	b.n	8004728 <MT25TL01G_EnableMemoryMappedModeDTR+0x7c>

08004740 <MT25TL01G_EnableMemoryMappedModeSTR>:
  * @param  Mode Interface mode
  * @retval QSPI memory status
  */

int32_t MT25TL01G_EnableMemoryMappedModeSTR(QSPI_HandleTypeDef *Ctx, MT25TL01G_Interface_t Mode)
{
 8004740:	b500      	push	{lr}
 8004742:	b091      	sub	sp, #68	; 0x44
  QSPI_CommandTypeDef      s_command;
  QSPI_MemoryMappedTypeDef s_mem_mapped_cfg;
  switch(Mode)
 8004744:	2903      	cmp	r1, #3
 8004746:	d80e      	bhi.n	8004766 <MT25TL01G_EnableMemoryMappedModeSTR+0x26>
 8004748:	e8df f001 	tbb	[pc, r1]
 800474c:	3b302502 	.word	0x3b302502
  {
  case MT25TL01G_SPI_MODE:           /* 1-1-1 read commands */
    s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8004750:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004754:	9308      	str	r3, [sp, #32]
    s_command.Instruction       = MT25TL01G_FAST_READ_4_BYTE_ADDR_CMD;
 8004756:	230c      	movs	r3, #12
 8004758:	9302      	str	r3, [sp, #8]
    s_command.AddressMode       = QSPI_ADDRESS_1_LINE;
 800475a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800475e:	9309      	str	r3, [sp, #36]	; 0x24
    s_command.DataMode          = QSPI_DATA_1_LINE;
 8004760:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000

  case MT25TL01G_QPI_MODE:                 /* 4-4-4 commands */
    s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
    s_command.Instruction       = MT25TL01G_QUAD_INOUT_FAST_READ_CMD;
    s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
    s_command.DataMode          = QSPI_DATA_4_LINES;
 8004764:	930b      	str	r3, [sp, #44]	; 0x2c

    break;

  }
  /* Configure the command for the read instruction */
  s_command.DummyCycles       = MT25TL01G_DUMMY_CYCLES_READ;
 8004766:	2308      	movs	r3, #8

  /* Configure the memory mapped mode */
  s_mem_mapped_cfg.TimeOutActivation = QSPI_TIMEOUT_COUNTER_DISABLE;
  s_mem_mapped_cfg.TimeOutPeriod     = 0;

  if (HAL_QSPI_MemoryMapped(Ctx, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 8004768:	466a      	mov	r2, sp
 800476a:	a902      	add	r1, sp, #8
  s_command.DummyCycles       = MT25TL01G_DUMMY_CYCLES_READ;
 800476c:	9307      	str	r3, [sp, #28]
  s_command.AddressSize       = QSPI_ADDRESS_32_BITS;
 800476e:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 8004772:	9305      	str	r3, [sp, #20]
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8004774:	2300      	movs	r3, #0
 8004776:	930a      	str	r3, [sp, #40]	; 0x28
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8004778:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 800477a:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_mem_mapped_cfg.TimeOutPeriod     = 0;
 800477e:	e9cd 3300 	strd	r3, r3, [sp]
  if (HAL_QSPI_MemoryMapped(Ctx, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 8004782:	f003 fbd4 	bl	8007f2e <HAL_QSPI_MemoryMapped>
  {
    return MT25TL01G_ERROR_MEMORYMAPPED;
 8004786:	2800      	cmp	r0, #0
  }

  return MT25TL01G_OK;
}
 8004788:	bf14      	ite	ne
 800478a:	f06f 0005 	mvnne.w	r0, #5
 800478e:	2000      	moveq	r0, #0
 8004790:	b011      	add	sp, #68	; 0x44
 8004792:	f85d fb04 	ldr.w	pc, [sp], #4
    s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8004796:	f44f 7380 	mov.w	r3, #256	; 0x100
 800479a:	9308      	str	r3, [sp, #32]
    s_command.Instruction       = MT25TL01G_DUAL_INOUT_FAST_READ_4_BYTE_ADDR_CMD;
 800479c:	23bc      	movs	r3, #188	; 0xbc
 800479e:	9302      	str	r3, [sp, #8]
    s_command.AddressMode       = QSPI_ADDRESS_2_LINES;
 80047a0:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80047a4:	9309      	str	r3, [sp, #36]	; 0x24
    s_command.DataMode          = QSPI_DATA_2_LINES;
 80047a6:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 80047aa:	e7db      	b.n	8004764 <MT25TL01G_EnableMemoryMappedModeSTR+0x24>
    s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80047ac:	f44f 7380 	mov.w	r3, #256	; 0x100
 80047b0:	9308      	str	r3, [sp, #32]
    s_command.Instruction       = MT25TL01G_QUAD_INOUT_FAST_READ_4_BYTE_ADDR_CMD;
 80047b2:	23ec      	movs	r3, #236	; 0xec
    s_command.Instruction       = MT25TL01G_QUAD_INOUT_FAST_READ_CMD;
 80047b4:	9302      	str	r3, [sp, #8]
    s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
 80047b6:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 80047ba:	9309      	str	r3, [sp, #36]	; 0x24
    s_command.DataMode          = QSPI_DATA_4_LINES;
 80047bc:	f04f 7340 	mov.w	r3, #50331648	; 0x3000000
 80047c0:	e7d0      	b.n	8004764 <MT25TL01G_EnableMemoryMappedModeSTR+0x24>
    s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
 80047c2:	f44f 7340 	mov.w	r3, #768	; 0x300
 80047c6:	9308      	str	r3, [sp, #32]
    s_command.Instruction       = MT25TL01G_QUAD_INOUT_FAST_READ_CMD;
 80047c8:	23eb      	movs	r3, #235	; 0xeb
 80047ca:	e7f3      	b.n	80047b4 <MT25TL01G_EnableMemoryMappedModeSTR+0x74>

080047cc <MT25TL01G_ResetEnable>:
int32_t MT25TL01G_ResetEnable(QSPI_HandleTypeDef *Ctx, MT25TL01G_Interface_t Mode)
{
  QSPI_CommandTypeDef s_command;

  /* Initialize the reset enable command */
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 80047cc:	2903      	cmp	r1, #3
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  /* Send the command */
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80047ce:	f241 3288 	movw	r2, #5000	; 0x1388
{
 80047d2:	b500      	push	{lr}
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 80047d4:	bf08      	it	eq
 80047d6:	f44f 7340 	moveq.w	r3, #768	; 0x300
{
 80047da:	b08f      	sub	sp, #60	; 0x3c
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 80047dc:	bf18      	it	ne
 80047de:	f44f 7380 	movne.w	r3, #256	; 0x100
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80047e2:	4669      	mov	r1, sp
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 80047e4:	9306      	str	r3, [sp, #24]
  s_command.Instruction       = MT25TL01G_RESET_ENABLE_CMD;
 80047e6:	2366      	movs	r3, #102	; 0x66
 80047e8:	9300      	str	r3, [sp, #0]
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 80047ea:	2300      	movs	r3, #0
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 80047ec:	e9cd 3307 	strd	r3, r3, [sp, #28]
  s_command.DataMode          = QSPI_DATA_NONE;
 80047f0:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.DummyCycles       = 0;
 80047f2:	9305      	str	r3, [sp, #20]
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 80047f4:	930d      	str	r3, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 80047f6:	e9cd 330b 	strd	r3, r3, [sp, #44]	; 0x2c
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80047fa:	f003 fa4d 	bl	8007c98 <HAL_QSPI_Command>
  {
    return MT25TL01G_ERROR_COMMAND;
 80047fe:	2800      	cmp	r0, #0
  }

  return MT25TL01G_OK;
}
 8004800:	bf14      	ite	ne
 8004802:	f06f 0001 	mvnne.w	r0, #1
 8004806:	2000      	moveq	r0, #0
 8004808:	b00f      	add	sp, #60	; 0x3c
 800480a:	f85d fb04 	ldr.w	pc, [sp], #4

0800480e <MT25TL01G_ResetMemory>:
int32_t MT25TL01G_ResetMemory(QSPI_HandleTypeDef *Ctx, MT25TL01G_Interface_t Mode)
{
  QSPI_CommandTypeDef s_command;

  /* Initialize the reset enable command */
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 800480e:	2903      	cmp	r1, #3
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  /* Send the command */
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004810:	f241 3288 	movw	r2, #5000	; 0x1388
{
 8004814:	b500      	push	{lr}
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 8004816:	bf08      	it	eq
 8004818:	f44f 7340 	moveq.w	r3, #768	; 0x300
{
 800481c:	b08f      	sub	sp, #60	; 0x3c
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 800481e:	bf18      	it	ne
 8004820:	f44f 7380 	movne.w	r3, #256	; 0x100
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004824:	4669      	mov	r1, sp
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 8004826:	9306      	str	r3, [sp, #24]
  s_command.Instruction       = MT25TL01G_RESET_MEMORY_CMD ;
 8004828:	2399      	movs	r3, #153	; 0x99
 800482a:	9300      	str	r3, [sp, #0]
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 800482c:	2300      	movs	r3, #0
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 800482e:	e9cd 3307 	strd	r3, r3, [sp, #28]
  s_command.DataMode          = QSPI_DATA_NONE;
 8004832:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.DummyCycles       = 0;
 8004834:	9305      	str	r3, [sp, #20]
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8004836:	930d      	str	r3, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8004838:	e9cd 330b 	strd	r3, r3, [sp, #44]	; 0x2c
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800483c:	f003 fa2c 	bl	8007c98 <HAL_QSPI_Command>
  {
    return MT25TL01G_ERROR_COMMAND;
 8004840:	2800      	cmp	r0, #0
  }

  return MT25TL01G_OK;
}
 8004842:	bf14      	ite	ne
 8004844:	f06f 0001 	mvnne.w	r0, #1
 8004848:	2000      	moveq	r0, #0
 800484a:	b00f      	add	sp, #60	; 0x3c
 800484c:	f85d fb04 	ldr.w	pc, [sp], #4

08004850 <OTM8009A_ReadRegWrap>:
  * @param  pData  The target register value to be written
  * @param  Length  buffer size to be written
  * @retval error status
  */
static int32_t OTM8009A_ReadRegWrap(void *Handle, uint16_t Reg, uint8_t* pData, uint16_t Length)
{
 8004850:	b410      	push	{r4}
  OTM8009A_Object_t *pObj = (OTM8009A_Object_t *)Handle;

  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
 8004852:	6884      	ldr	r4, [r0, #8]
 8004854:	8800      	ldrh	r0, [r0, #0]
 8004856:	46a4      	mov	ip, r4
}
 8004858:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
 800485c:	4760      	bx	ip

0800485e <OTM8009A_WriteRegWrap>:
  * @param  pData  The target register value to be written
  * @param  Length  buffer size to be written
  * @retval error status
  */
static int32_t OTM8009A_WriteRegWrap(void *Handle, uint16_t Reg, uint8_t *pData, uint16_t Length)
{
 800485e:	b410      	push	{r4}
  OTM8009A_Object_t *pObj = (OTM8009A_Object_t *)Handle;

  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
 8004860:	6844      	ldr	r4, [r0, #4]
 8004862:	8800      	ldrh	r0, [r0, #0]
 8004864:	46a4      	mov	ip, r4
}
 8004866:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
 800486a:	4760      	bx	ip

0800486c <OTM8009A_IO_Delay.isra.0>:

/**
  * @brief  OTM8009A delay
  * @param  Delay  Delay in ms
  */
static int32_t OTM8009A_IO_Delay(OTM8009A_Object_t *pObj, uint32_t Delay)
 800486c:	b570      	push	{r4, r5, r6, lr}
{
  uint32_t tickstart;
  tickstart = pObj->IO.GetTick();
 800486e:	68c3      	ldr	r3, [r0, #12]
static int32_t OTM8009A_IO_Delay(OTM8009A_Object_t *pObj, uint32_t Delay)
 8004870:	4604      	mov	r4, r0
 8004872:	460d      	mov	r5, r1
  tickstart = pObj->IO.GetTick();
 8004874:	4798      	blx	r3
 8004876:	4606      	mov	r6, r0
  while((pObj->IO.GetTick() - tickstart) < Delay)
 8004878:	68e3      	ldr	r3, [r4, #12]
 800487a:	4798      	blx	r3
 800487c:	1b83      	subs	r3, r0, r6
 800487e:	42ab      	cmp	r3, r5
 8004880:	d3fa      	bcc.n	8004878 <OTM8009A_IO_Delay.isra.0+0xc>
  {
  }
  return OTM8009A_OK;
}
 8004882:	bd70      	pop	{r4, r5, r6, pc}

08004884 <OTM8009A_Init>:
{
 8004884:	e92d 4f37 	stmdb	sp!, {r0, r1, r2, r4, r5, r8, r9, sl, fp, lr}
  ret = otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 8004888:	2300      	movs	r3, #0
 800488a:	f100 0810 	add.w	r8, r0, #16
{
 800488e:	4682      	mov	sl, r0
 8004890:	4689      	mov	r9, r1
 8004892:	4693      	mov	fp, r2
  ret = otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 8004894:	4619      	mov	r1, r3
 8004896:	4add      	ldr	r2, [pc, #884]	; (8004c0c <OTM8009A_Init+0x388>)
 8004898:	4640      	mov	r0, r8
 800489a:	f000 fbad 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xFF, lcd_reg_data1, 3);
 800489e:	2303      	movs	r3, #3
  ret = otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 80048a0:	4604      	mov	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xFF, lcd_reg_data1, 3);
 80048a2:	4adb      	ldr	r2, [pc, #876]	; (8004c10 <OTM8009A_Init+0x38c>)
 80048a4:	21ff      	movs	r1, #255	; 0xff
 80048a6:	4640      	mov	r0, r8
 80048a8:	f000 fba6 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[2], 0);
 80048ac:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xFF, lcd_reg_data1, 3);
 80048ae:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[2], 0);
 80048b0:	4ad8      	ldr	r2, [pc, #864]	; (8004c14 <OTM8009A_Init+0x390>)
 80048b2:	4619      	mov	r1, r3
 80048b4:	4640      	mov	r0, r8
 80048b6:	f000 fb9f 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xFF, lcd_reg_data2, 2);
 80048ba:	2302      	movs	r3, #2
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[2], 0);
 80048bc:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xFF, lcd_reg_data2, 2);
 80048be:	4ad6      	ldr	r2, [pc, #856]	; (8004c18 <OTM8009A_Init+0x394>)
 80048c0:	21ff      	movs	r1, #255	; 0xff
 80048c2:	4640      	mov	r0, r8
 80048c4:	f000 fb98 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[2], 0);
 80048c8:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xFF, lcd_reg_data2, 2);
 80048ca:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[2], 0);
 80048cc:	4ad1      	ldr	r2, [pc, #836]	; (8004c14 <OTM8009A_Init+0x390>)
 80048ce:	4619      	mov	r1, r3
 80048d0:	4640      	mov	r0, r8
 80048d2:	f000 fb91 	bl	8004ff8 <otm8009a_write_reg>
 80048d6:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC4, &short_reg_data[3], 0);
 80048d8:	2300      	movs	r3, #0
 80048da:	4ad0      	ldr	r2, [pc, #832]	; (8004c1c <OTM8009A_Init+0x398>)
 80048dc:	21c4      	movs	r1, #196	; 0xc4
 80048de:	4640      	mov	r0, r8
 80048e0:	f000 fb8a 	bl	8004ff8 <otm8009a_write_reg>
  (void)OTM8009A_IO_Delay(pObj, 10);
 80048e4:	210a      	movs	r1, #10
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC4, &short_reg_data[3], 0);
 80048e6:	4404      	add	r4, r0
  (void)OTM8009A_IO_Delay(pObj, 10);
 80048e8:	4650      	mov	r0, sl
 80048ea:	f7ff ffbf 	bl	800486c <OTM8009A_IO_Delay.isra.0>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[4], 0);
 80048ee:	2300      	movs	r3, #0
 80048f0:	4acb      	ldr	r2, [pc, #812]	; (8004c20 <OTM8009A_Init+0x39c>)
 80048f2:	4640      	mov	r0, r8
 80048f4:	4619      	mov	r1, r3
 80048f6:	4dcb      	ldr	r5, [pc, #812]	; (8004c24 <OTM8009A_Init+0x3a0>)
 80048f8:	f000 fb7e 	bl	8004ff8 <otm8009a_write_reg>
 80048fc:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC4, &short_reg_data[5], 0);
 80048fe:	2300      	movs	r3, #0
 8004900:	4ac9      	ldr	r2, [pc, #804]	; (8004c28 <OTM8009A_Init+0x3a4>)
 8004902:	21c4      	movs	r1, #196	; 0xc4
 8004904:	4640      	mov	r0, r8
 8004906:	f000 fb77 	bl	8004ff8 <otm8009a_write_reg>
  (void)OTM8009A_IO_Delay(pObj, 10);
 800490a:	210a      	movs	r1, #10
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC4, &short_reg_data[5], 0);
 800490c:	4404      	add	r4, r0
  (void)OTM8009A_IO_Delay(pObj, 10);
 800490e:	4650      	mov	r0, sl
 8004910:	f7ff ffac 	bl	800486c <OTM8009A_IO_Delay.isra.0>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[6], 0);
 8004914:	2300      	movs	r3, #0
 8004916:	4ac5      	ldr	r2, [pc, #788]	; (8004c2c <OTM8009A_Init+0x3a8>)
 8004918:	4640      	mov	r0, r8
 800491a:	4619      	mov	r1, r3
 800491c:	f000 fb6c 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC5, &short_reg_data[7], 0);
 8004920:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[6], 0);
 8004922:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC5, &short_reg_data[7], 0);
 8004924:	4ac2      	ldr	r2, [pc, #776]	; (8004c30 <OTM8009A_Init+0x3ac>)
 8004926:	21c5      	movs	r1, #197	; 0xc5
 8004928:	4640      	mov	r0, r8
 800492a:	f000 fb65 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[8], 0);
 800492e:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC5, &short_reg_data[7], 0);
 8004930:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[8], 0);
 8004932:	4ac0      	ldr	r2, [pc, #768]	; (8004c34 <OTM8009A_Init+0x3b0>)
 8004934:	4619      	mov	r1, r3
 8004936:	4640      	mov	r0, r8
 8004938:	f000 fb5e 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC5, &short_reg_data[9], 0);
 800493c:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[8], 0);
 800493e:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC5, &short_reg_data[9], 0);
 8004940:	4abd      	ldr	r2, [pc, #756]	; (8004c38 <OTM8009A_Init+0x3b4>)
 8004942:	21c5      	movs	r1, #197	; 0xc5
 8004944:	4640      	mov	r0, r8
 8004946:	f000 fb57 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[10], 0);
 800494a:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC5, &short_reg_data[9], 0);
 800494c:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[10], 0);
 800494e:	4abb      	ldr	r2, [pc, #748]	; (8004c3c <OTM8009A_Init+0x3b8>)
 8004950:	4619      	mov	r1, r3
 8004952:	4640      	mov	r0, r8
 8004954:	f000 fb50 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC0, &short_reg_data[11], 0);
 8004958:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[10], 0);
 800495a:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC0, &short_reg_data[11], 0);
 800495c:	4ab8      	ldr	r2, [pc, #736]	; (8004c40 <OTM8009A_Init+0x3bc>)
 800495e:	21c0      	movs	r1, #192	; 0xc0
 8004960:	4640      	mov	r0, r8
 8004962:	f000 fb49 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 8004966:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC0, &short_reg_data[11], 0);
 8004968:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 800496a:	4aa8      	ldr	r2, [pc, #672]	; (8004c0c <OTM8009A_Init+0x388>)
 800496c:	4619      	mov	r1, r3
 800496e:	4640      	mov	r0, r8
 8004970:	f000 fb42 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xD9, &short_reg_data[12], 0);
 8004974:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 8004976:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xD9, &short_reg_data[12], 0);
 8004978:	4ab2      	ldr	r2, [pc, #712]	; (8004c44 <OTM8009A_Init+0x3c0>)
 800497a:	21d9      	movs	r1, #217	; 0xd9
 800497c:	4640      	mov	r0, r8
 800497e:	f000 fb3b 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[13], 0);
 8004982:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xD9, &short_reg_data[12], 0);
 8004984:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[13], 0);
 8004986:	4ab0      	ldr	r2, [pc, #704]	; (8004c48 <OTM8009A_Init+0x3c4>)
 8004988:	4619      	mov	r1, r3
 800498a:	4640      	mov	r0, r8
 800498c:	f000 fb34 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC1, &short_reg_data[14], 0);
 8004990:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[13], 0);
 8004992:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC1, &short_reg_data[14], 0);
 8004994:	4aad      	ldr	r2, [pc, #692]	; (8004c4c <OTM8009A_Init+0x3c8>)
 8004996:	21c1      	movs	r1, #193	; 0xc1
 8004998:	4640      	mov	r0, r8
 800499a:	f000 fb2d 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[15], 0);
 800499e:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC1, &short_reg_data[14], 0);
 80049a0:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[15], 0);
 80049a2:	4aab      	ldr	r2, [pc, #684]	; (8004c50 <OTM8009A_Init+0x3cc>)
 80049a4:	4619      	mov	r1, r3
 80049a6:	4640      	mov	r0, r8
 80049a8:	f000 fb26 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC1, &short_reg_data[16], 0);
 80049ac:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[15], 0);
 80049ae:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC1, &short_reg_data[16], 0);
 80049b0:	4aa8      	ldr	r2, [pc, #672]	; (8004c54 <OTM8009A_Init+0x3d0>)
 80049b2:	21c1      	movs	r1, #193	; 0xc1
 80049b4:	4640      	mov	r0, r8
 80049b6:	f000 fb1f 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[17], 0);
 80049ba:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC1, &short_reg_data[16], 0);
 80049bc:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[17], 0);
 80049be:	4aa6      	ldr	r2, [pc, #664]	; (8004c58 <OTM8009A_Init+0x3d4>)
 80049c0:	4619      	mov	r1, r3
 80049c2:	4640      	mov	r0, r8
 80049c4:	f000 fb18 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC5, &short_reg_data[18], 0);
 80049c8:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[17], 0);
 80049ca:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC5, &short_reg_data[18], 0);
 80049cc:	4aa3      	ldr	r2, [pc, #652]	; (8004c5c <OTM8009A_Init+0x3d8>)
 80049ce:	21c5      	movs	r1, #197	; 0xc5
 80049d0:	4640      	mov	r0, r8
 80049d2:	f000 fb11 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[19], 0);
 80049d6:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC5, &short_reg_data[18], 0);
 80049d8:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[19], 0);
 80049da:	4aa1      	ldr	r2, [pc, #644]	; (8004c60 <OTM8009A_Init+0x3dc>)
 80049dc:	4619      	mov	r1, r3
 80049de:	4640      	mov	r0, r8
 80049e0:	f000 fb0a 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC5, &short_reg_data[9], 0);
 80049e4:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[19], 0);
 80049e6:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC5, &short_reg_data[9], 0);
 80049e8:	4a93      	ldr	r2, [pc, #588]	; (8004c38 <OTM8009A_Init+0x3b4>)
 80049ea:	21c5      	movs	r1, #197	; 0xc5
 80049ec:	4640      	mov	r0, r8
 80049ee:	f000 fb03 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 80049f2:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC5, &short_reg_data[9], 0);
 80049f4:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 80049f6:	4a85      	ldr	r2, [pc, #532]	; (8004c0c <OTM8009A_Init+0x388>)
 80049f8:	4619      	mov	r1, r3
 80049fa:	4640      	mov	r0, r8
 80049fc:	f000 fafc 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xD8, lcd_reg_data5, 2);
 8004a00:	2302      	movs	r3, #2
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 8004a02:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xD8, lcd_reg_data5, 2);
 8004a04:	4a97      	ldr	r2, [pc, #604]	; (8004c64 <OTM8009A_Init+0x3e0>)
 8004a06:	21d8      	movs	r1, #216	; 0xd8
 8004a08:	4640      	mov	r0, r8
 8004a0a:	f000 faf5 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[20], 0);
 8004a0e:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xD8, lcd_reg_data5, 2);
 8004a10:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[20], 0);
 8004a12:	4a95      	ldr	r2, [pc, #596]	; (8004c68 <OTM8009A_Init+0x3e4>)
 8004a14:	4619      	mov	r1, r3
 8004a16:	4640      	mov	r0, r8
 8004a18:	f000 faee 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC5, &short_reg_data[21], 0);
 8004a1c:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[20], 0);
 8004a1e:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC5, &short_reg_data[21], 0);
 8004a20:	4a92      	ldr	r2, [pc, #584]	; (8004c6c <OTM8009A_Init+0x3e8>)
 8004a22:	21c5      	movs	r1, #197	; 0xc5
 8004a24:	4640      	mov	r0, r8
 8004a26:	f000 fae7 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[22], 0);
 8004a2a:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC5, &short_reg_data[21], 0);
 8004a2c:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[22], 0);
 8004a2e:	4a90      	ldr	r2, [pc, #576]	; (8004c70 <OTM8009A_Init+0x3ec>)
 8004a30:	4619      	mov	r1, r3
 8004a32:	4640      	mov	r0, r8
 8004a34:	f000 fae0 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC0, &short_reg_data[23], 0);
 8004a38:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[22], 0);
 8004a3a:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC0, &short_reg_data[23], 0);
 8004a3c:	4a8d      	ldr	r2, [pc, #564]	; (8004c74 <OTM8009A_Init+0x3f0>)
 8004a3e:	21c0      	movs	r1, #192	; 0xc0
 8004a40:	4640      	mov	r0, r8
 8004a42:	f000 fad9 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[24], 0);
 8004a46:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC0, &short_reg_data[23], 0);
 8004a48:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[24], 0);
 8004a4a:	4a8b      	ldr	r2, [pc, #556]	; (8004c78 <OTM8009A_Init+0x3f4>)
 8004a4c:	4619      	mov	r1, r3
 8004a4e:	4640      	mov	r0, r8
 8004a50:	f000 fad2 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC5, &short_reg_data[25], 0);
 8004a54:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[24], 0);
 8004a56:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC5, &short_reg_data[25], 0);
 8004a58:	4a88      	ldr	r2, [pc, #544]	; (8004c7c <OTM8009A_Init+0x3f8>)
 8004a5a:	21c5      	movs	r1, #197	; 0xc5
 8004a5c:	4640      	mov	r0, r8
 8004a5e:	f000 facb 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[13], 0);
 8004a62:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC5, &short_reg_data[25], 0);
 8004a64:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[13], 0);
 8004a66:	4a78      	ldr	r2, [pc, #480]	; (8004c48 <OTM8009A_Init+0x3c4>)
 8004a68:	4619      	mov	r1, r3
 8004a6a:	4640      	mov	r0, r8
 8004a6c:	f000 fac4 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC4, &short_reg_data[26], 0);
 8004a70:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[13], 0);
 8004a72:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC4, &short_reg_data[26], 0);
 8004a74:	4a82      	ldr	r2, [pc, #520]	; (8004c80 <OTM8009A_Init+0x3fc>)
 8004a76:	21c4      	movs	r1, #196	; 0xc4
 8004a78:	4640      	mov	r0, r8
 8004a7a:	f000 fabd 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[15], 0);
 8004a7e:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC4, &short_reg_data[26], 0);
 8004a80:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[15], 0);
 8004a82:	4a73      	ldr	r2, [pc, #460]	; (8004c50 <OTM8009A_Init+0x3cc>)
 8004a84:	4619      	mov	r1, r3
 8004a86:	4640      	mov	r0, r8
 8004a88:	f000 fab6 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC1, &short_reg_data[27], 0);
 8004a8c:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[15], 0);
 8004a8e:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC1, &short_reg_data[27], 0);
 8004a90:	4a7c      	ldr	r2, [pc, #496]	; (8004c84 <OTM8009A_Init+0x400>)
 8004a92:	21c1      	movs	r1, #193	; 0xc1
 8004a94:	4640      	mov	r0, r8
 8004a96:	f000 faaf 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[28], 0);
 8004a9a:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC1, &short_reg_data[27], 0);
 8004a9c:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[28], 0);
 8004a9e:	4a7a      	ldr	r2, [pc, #488]	; (8004c88 <OTM8009A_Init+0x404>)
 8004aa0:	4619      	mov	r1, r3
 8004aa2:	4640      	mov	r0, r8
 8004aa4:	f000 faa8 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xB3, lcd_reg_data6, 2);
 8004aa8:	2302      	movs	r3, #2
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[28], 0);
 8004aaa:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xB3, lcd_reg_data6, 2);
 8004aac:	4a77      	ldr	r2, [pc, #476]	; (8004c8c <OTM8009A_Init+0x408>)
 8004aae:	21b3      	movs	r1, #179	; 0xb3
 8004ab0:	4640      	mov	r0, r8
 8004ab2:	f000 faa1 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[2], 0);
 8004ab6:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xB3, lcd_reg_data6, 2);
 8004ab8:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[2], 0);
 8004aba:	4a56      	ldr	r2, [pc, #344]	; (8004c14 <OTM8009A_Init+0x390>)
 8004abc:	4619      	mov	r1, r3
 8004abe:	4640      	mov	r0, r8
 8004ac0:	f000 fa9a 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCE, lcd_reg_data7, 6);
 8004ac4:	2306      	movs	r3, #6
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[2], 0);
 8004ac6:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCE, lcd_reg_data7, 6);
 8004ac8:	4a71      	ldr	r2, [pc, #452]	; (8004c90 <OTM8009A_Init+0x40c>)
 8004aca:	21ce      	movs	r1, #206	; 0xce
 8004acc:	4640      	mov	r0, r8
 8004ace:	f000 fa93 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[29], 0);
 8004ad2:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCE, lcd_reg_data7, 6);
 8004ad4:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[29], 0);
 8004ad6:	4a6f      	ldr	r2, [pc, #444]	; (8004c94 <OTM8009A_Init+0x410>)
 8004ad8:	4619      	mov	r1, r3
 8004ada:	4640      	mov	r0, r8
 8004adc:	f000 fa8c 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCE, lcd_reg_data8, 14);
 8004ae0:	230e      	movs	r3, #14
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[29], 0);
 8004ae2:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCE, lcd_reg_data8, 14);
 8004ae4:	4a6c      	ldr	r2, [pc, #432]	; (8004c98 <OTM8009A_Init+0x414>)
 8004ae6:	21ce      	movs	r1, #206	; 0xce
 8004ae8:	4640      	mov	r0, r8
 8004aea:	f000 fa85 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[30], 0);
 8004aee:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCE, lcd_reg_data8, 14);
 8004af0:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[30], 0);
 8004af2:	4a6a      	ldr	r2, [pc, #424]	; (8004c9c <OTM8009A_Init+0x418>)
 8004af4:	4619      	mov	r1, r3
 8004af6:	4640      	mov	r0, r8
 8004af8:	f000 fa7e 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCE, lcd_reg_data9, 14);
 8004afc:	230e      	movs	r3, #14
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[30], 0);
 8004afe:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCE, lcd_reg_data9, 14);
 8004b00:	4a67      	ldr	r2, [pc, #412]	; (8004ca0 <OTM8009A_Init+0x41c>)
 8004b02:	21ce      	movs	r1, #206	; 0xce
 8004b04:	4640      	mov	r0, r8
 8004b06:	f000 fa77 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[31], 0);
 8004b0a:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCE, lcd_reg_data9, 14);
 8004b0c:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[31], 0);
 8004b0e:	4a65      	ldr	r2, [pc, #404]	; (8004ca4 <OTM8009A_Init+0x420>)
 8004b10:	4619      	mov	r1, r3
 8004b12:	4640      	mov	r0, r8
 8004b14:	f000 fa70 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCF, lcd_reg_data10, 10);
 8004b18:	230a      	movs	r3, #10
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[31], 0);
 8004b1a:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCF, lcd_reg_data10, 10);
 8004b1c:	4a62      	ldr	r2, [pc, #392]	; (8004ca8 <OTM8009A_Init+0x424>)
 8004b1e:	21cf      	movs	r1, #207	; 0xcf
 8004b20:	4640      	mov	r0, r8
 8004b22:	f000 fa69 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[32], 0);
 8004b26:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCF, lcd_reg_data10, 10);
 8004b28:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[32], 0);
 8004b2a:	4a60      	ldr	r2, [pc, #384]	; (8004cac <OTM8009A_Init+0x428>)
 8004b2c:	4619      	mov	r1, r3
 8004b2e:	4640      	mov	r0, r8
 8004b30:	f000 fa62 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCF, &short_reg_data[45], 0);
 8004b34:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[32], 0);
 8004b36:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCF, &short_reg_data[45], 0);
 8004b38:	4a5d      	ldr	r2, [pc, #372]	; (8004cb0 <OTM8009A_Init+0x42c>)
 8004b3a:	21cf      	movs	r1, #207	; 0xcf
 8004b3c:	4640      	mov	r0, r8
 8004b3e:	f000 fa5b 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[2], 0);
 8004b42:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCF, &short_reg_data[45], 0);
 8004b44:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[2], 0);
 8004b46:	4a33      	ldr	r2, [pc, #204]	; (8004c14 <OTM8009A_Init+0x390>)
 8004b48:	4619      	mov	r1, r3
 8004b4a:	4640      	mov	r0, r8
 8004b4c:	f000 fa54 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCB, lcd_reg_data11, 10);
 8004b50:	230a      	movs	r3, #10
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[2], 0);
 8004b52:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCB, lcd_reg_data11, 10);
 8004b54:	4a57      	ldr	r2, [pc, #348]	; (8004cb4 <OTM8009A_Init+0x430>)
 8004b56:	21cb      	movs	r1, #203	; 0xcb
 8004b58:	4640      	mov	r0, r8
 8004b5a:	f000 fa4d 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[33], 0);
 8004b5e:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCB, lcd_reg_data11, 10);
 8004b60:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[33], 0);
 8004b62:	4a55      	ldr	r2, [pc, #340]	; (8004cb8 <OTM8009A_Init+0x434>)
 8004b64:	4619      	mov	r1, r3
 8004b66:	4640      	mov	r0, r8
 8004b68:	f000 fa46 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCB, lcd_reg_data12, 15);
 8004b6c:	230f      	movs	r3, #15
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[33], 0);
 8004b6e:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCB, lcd_reg_data12, 15);
 8004b70:	4a52      	ldr	r2, [pc, #328]	; (8004cbc <OTM8009A_Init+0x438>)
 8004b72:	21cb      	movs	r1, #203	; 0xcb
 8004b74:	4640      	mov	r0, r8
 8004b76:	f000 fa3f 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[29], 0);
 8004b7a:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCB, lcd_reg_data12, 15);
 8004b7c:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[29], 0);
 8004b7e:	4a45      	ldr	r2, [pc, #276]	; (8004c94 <OTM8009A_Init+0x410>)
 8004b80:	4619      	mov	r1, r3
 8004b82:	4640      	mov	r0, r8
 8004b84:	f000 fa38 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCB, lcd_reg_data13, 15);
 8004b88:	230f      	movs	r3, #15
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[29], 0);
 8004b8a:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCB, lcd_reg_data13, 15);
 8004b8c:	4a4c      	ldr	r2, [pc, #304]	; (8004cc0 <OTM8009A_Init+0x43c>)
 8004b8e:	21cb      	movs	r1, #203	; 0xcb
 8004b90:	4640      	mov	r0, r8
 8004b92:	f000 fa31 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[30], 0);
 8004b96:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCB, lcd_reg_data13, 15);
 8004b98:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[30], 0);
 8004b9a:	4a40      	ldr	r2, [pc, #256]	; (8004c9c <OTM8009A_Init+0x418>)
 8004b9c:	4619      	mov	r1, r3
 8004b9e:	4640      	mov	r0, r8
 8004ba0:	f000 fa2a 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCB, lcd_reg_data14, 10);
 8004ba4:	230a      	movs	r3, #10
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[30], 0);
 8004ba6:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCB, lcd_reg_data14, 10);
 8004ba8:	4a46      	ldr	r2, [pc, #280]	; (8004cc4 <OTM8009A_Init+0x440>)
 8004baa:	21cb      	movs	r1, #203	; 0xcb
 8004bac:	4640      	mov	r0, r8
 8004bae:	f000 fa23 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[31], 0);
 8004bb2:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCB, lcd_reg_data14, 10);
 8004bb4:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[31], 0);
 8004bb6:	4a3b      	ldr	r2, [pc, #236]	; (8004ca4 <OTM8009A_Init+0x420>)
 8004bb8:	4619      	mov	r1, r3
 8004bba:	4640      	mov	r0, r8
 8004bbc:	f000 fa1c 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCB, lcd_reg_data15, 15);
 8004bc0:	230f      	movs	r3, #15
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[31], 0);
 8004bc2:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCB, lcd_reg_data15, 15);
 8004bc4:	4a40      	ldr	r2, [pc, #256]	; (8004cc8 <OTM8009A_Init+0x444>)
 8004bc6:	21cb      	movs	r1, #203	; 0xcb
 8004bc8:	4640      	mov	r0, r8
 8004bca:	f000 fa15 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[32], 0);
 8004bce:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCB, lcd_reg_data15, 15);
 8004bd0:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[32], 0);
 8004bd2:	4a36      	ldr	r2, [pc, #216]	; (8004cac <OTM8009A_Init+0x428>)
 8004bd4:	4619      	mov	r1, r3
 8004bd6:	4640      	mov	r0, r8
 8004bd8:	f000 fa0e 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCB, lcd_reg_data16, 15);
 8004bdc:	230f      	movs	r3, #15
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[32], 0);
 8004bde:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCB, lcd_reg_data16, 15);
 8004be0:	4a3a      	ldr	r2, [pc, #232]	; (8004ccc <OTM8009A_Init+0x448>)
 8004be2:	21cb      	movs	r1, #203	; 0xcb
 8004be4:	4640      	mov	r0, r8
 8004be6:	f000 fa07 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[34], 0);
 8004bea:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCB, lcd_reg_data16, 15);
 8004bec:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[34], 0);
 8004bee:	4a38      	ldr	r2, [pc, #224]	; (8004cd0 <OTM8009A_Init+0x44c>)
 8004bf0:	4619      	mov	r1, r3
 8004bf2:	4640      	mov	r0, r8
 8004bf4:	f000 fa00 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCB, lcd_reg_data17, 10);
 8004bf8:	230a      	movs	r3, #10
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[34], 0);
 8004bfa:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCB, lcd_reg_data17, 10);
 8004bfc:	4a35      	ldr	r2, [pc, #212]	; (8004cd4 <OTM8009A_Init+0x450>)
 8004bfe:	21cb      	movs	r1, #203	; 0xcb
 8004c00:	4640      	mov	r0, r8
 8004c02:	f000 f9f9 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[35], 0);
 8004c06:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCB, lcd_reg_data17, 10);
 8004c08:	4404      	add	r4, r0
 8004c0a:	e065      	b.n	8004cd8 <OTM8009A_Init+0x454>
 8004c0c:	080229e5 	.word	0x080229e5
 8004c10:	080228d8 	.word	0x080228d8
 8004c14:	080229e6 	.word	0x080229e6
 8004c18:	08022953 	.word	0x08022953
 8004c1c:	080229e7 	.word	0x080229e7
 8004c20:	080229e8 	.word	0x080229e8
 8004c24:	24004760 	.word	0x24004760
 8004c28:	080229e9 	.word	0x080229e9
 8004c2c:	080229ea 	.word	0x080229ea
 8004c30:	080229eb 	.word	0x080229eb
 8004c34:	080229ec 	.word	0x080229ec
 8004c38:	080229ed 	.word	0x080229ed
 8004c3c:	080229ee 	.word	0x080229ee
 8004c40:	080229ef 	.word	0x080229ef
 8004c44:	080229f0 	.word	0x080229f0
 8004c48:	080229f1 	.word	0x080229f1
 8004c4c:	080229f2 	.word	0x080229f2
 8004c50:	080229f3 	.word	0x080229f3
 8004c54:	080229f4 	.word	0x080229f4
 8004c58:	080229f5 	.word	0x080229f5
 8004c5c:	080229f6 	.word	0x080229f6
 8004c60:	080229f7 	.word	0x080229f7
 8004c64:	080229be 	.word	0x080229be
 8004c68:	080229f8 	.word	0x080229f8
 8004c6c:	080229f9 	.word	0x080229f9
 8004c70:	080229fa 	.word	0x080229fa
 8004c74:	080229fb 	.word	0x080229fb
 8004c78:	080229fc 	.word	0x080229fc
 8004c7c:	080229fd 	.word	0x080229fd
 8004c80:	080229fe 	.word	0x080229fe
 8004c84:	080229ff 	.word	0x080229ff
 8004c88:	08022a00 	.word	0x08022a00
 8004c8c:	080229c0 	.word	0x080229c0
 8004c90:	080229c2 	.word	0x080229c2
 8004c94:	08022a01 	.word	0x08022a01
 8004c98:	080229c8 	.word	0x080229c8
 8004c9c:	08022a02 	.word	0x08022a02
 8004ca0:	080229d6 	.word	0x080229d6
 8004ca4:	08022a03 	.word	0x08022a03
 8004ca8:	080228db 	.word	0x080228db
 8004cac:	08022a04 	.word	0x08022a04
 8004cb0:	08022a11 	.word	0x08022a11
 8004cb4:	080228e5 	.word	0x080228e5
 8004cb8:	08022a05 	.word	0x08022a05
 8004cbc:	080228ef 	.word	0x080228ef
 8004cc0:	080228fe 	.word	0x080228fe
 8004cc4:	0802290d 	.word	0x0802290d
 8004cc8:	08022917 	.word	0x08022917
 8004ccc:	08022926 	.word	0x08022926
 8004cd0:	08022a06 	.word	0x08022a06
 8004cd4:	08022935 	.word	0x08022935
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[35], 0);
 8004cd8:	4a99      	ldr	r2, [pc, #612]	; (8004f40 <OTM8009A_Init+0x6bc>)
 8004cda:	4619      	mov	r1, r3
 8004cdc:	4640      	mov	r0, r8
 8004cde:	f000 f98b 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCB, lcd_reg_data18, 10);
 8004ce2:	230a      	movs	r3, #10
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[35], 0);
 8004ce4:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCB, lcd_reg_data18, 10);
 8004ce6:	4a97      	ldr	r2, [pc, #604]	; (8004f44 <OTM8009A_Init+0x6c0>)
 8004ce8:	21cb      	movs	r1, #203	; 0xcb
 8004cea:	4640      	mov	r0, r8
 8004cec:	f000 f984 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[2], 0);
 8004cf0:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCB, lcd_reg_data18, 10);
 8004cf2:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[2], 0);
 8004cf4:	4a94      	ldr	r2, [pc, #592]	; (8004f48 <OTM8009A_Init+0x6c4>)
 8004cf6:	4619      	mov	r1, r3
 8004cf8:	4640      	mov	r0, r8
 8004cfa:	f000 f97d 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCC, lcd_reg_data19, 10);
 8004cfe:	230a      	movs	r3, #10
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[2], 0);
 8004d00:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCC, lcd_reg_data19, 10);
 8004d02:	4a92      	ldr	r2, [pc, #584]	; (8004f4c <OTM8009A_Init+0x6c8>)
 8004d04:	21cc      	movs	r1, #204	; 0xcc
 8004d06:	4640      	mov	r0, r8
 8004d08:	f000 f976 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[33], 0);
 8004d0c:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCC, lcd_reg_data19, 10);
 8004d0e:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[33], 0);
 8004d10:	4a8f      	ldr	r2, [pc, #572]	; (8004f50 <OTM8009A_Init+0x6cc>)
 8004d12:	4619      	mov	r1, r3
 8004d14:	4640      	mov	r0, r8
 8004d16:	f000 f96f 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCC, lcd_reg_data20, 15);
 8004d1a:	230f      	movs	r3, #15
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[33], 0);
 8004d1c:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCC, lcd_reg_data20, 15);
 8004d1e:	4a8d      	ldr	r2, [pc, #564]	; (8004f54 <OTM8009A_Init+0x6d0>)
 8004d20:	21cc      	movs	r1, #204	; 0xcc
 8004d22:	4640      	mov	r0, r8
 8004d24:	f000 f968 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[29], 0);
 8004d28:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCC, lcd_reg_data20, 15);
 8004d2a:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[29], 0);
 8004d2c:	4a8a      	ldr	r2, [pc, #552]	; (8004f58 <OTM8009A_Init+0x6d4>)
 8004d2e:	4619      	mov	r1, r3
 8004d30:	4640      	mov	r0, r8
 8004d32:	f000 f961 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCC, lcd_reg_data21, 15);
 8004d36:	230f      	movs	r3, #15
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[29], 0);
 8004d38:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCC, lcd_reg_data21, 15);
 8004d3a:	4a88      	ldr	r2, [pc, #544]	; (8004f5c <OTM8009A_Init+0x6d8>)
 8004d3c:	21cc      	movs	r1, #204	; 0xcc
 8004d3e:	4640      	mov	r0, r8
 8004d40:	f000 f95a 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[30], 0);
 8004d44:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCC, lcd_reg_data21, 15);
 8004d46:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[30], 0);
 8004d48:	4a85      	ldr	r2, [pc, #532]	; (8004f60 <OTM8009A_Init+0x6dc>)
 8004d4a:	4619      	mov	r1, r3
 8004d4c:	4640      	mov	r0, r8
 8004d4e:	f000 f953 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCC, lcd_reg_data22, 10);
 8004d52:	230a      	movs	r3, #10
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[30], 0);
 8004d54:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCC, lcd_reg_data22, 10);
 8004d56:	4a83      	ldr	r2, [pc, #524]	; (8004f64 <OTM8009A_Init+0x6e0>)
 8004d58:	21cc      	movs	r1, #204	; 0xcc
 8004d5a:	4640      	mov	r0, r8
 8004d5c:	f000 f94c 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[31], 0);
 8004d60:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCC, lcd_reg_data22, 10);
 8004d62:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[31], 0);
 8004d64:	4a80      	ldr	r2, [pc, #512]	; (8004f68 <OTM8009A_Init+0x6e4>)
 8004d66:	4619      	mov	r1, r3
 8004d68:	4640      	mov	r0, r8
 8004d6a:	f000 f945 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCC, lcd_reg_data23, 15);
 8004d6e:	230f      	movs	r3, #15
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[31], 0);
 8004d70:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCC, lcd_reg_data23, 15);
 8004d72:	4a7e      	ldr	r2, [pc, #504]	; (8004f6c <OTM8009A_Init+0x6e8>)
 8004d74:	21cc      	movs	r1, #204	; 0xcc
 8004d76:	4640      	mov	r0, r8
 8004d78:	f000 f93e 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[32], 0);
 8004d7c:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCC, lcd_reg_data23, 15);
 8004d7e:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[32], 0);
 8004d80:	4a7b      	ldr	r2, [pc, #492]	; (8004f70 <OTM8009A_Init+0x6ec>)
 8004d82:	4619      	mov	r1, r3
 8004d84:	4640      	mov	r0, r8
 8004d86:	f000 f937 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCC, lcd_reg_data24, 15);
 8004d8a:	230f      	movs	r3, #15
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[32], 0);
 8004d8c:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCC, lcd_reg_data24, 15);
 8004d8e:	4a79      	ldr	r2, [pc, #484]	; (8004f74 <OTM8009A_Init+0x6f0>)
 8004d90:	21cc      	movs	r1, #204	; 0xcc
 8004d92:	4640      	mov	r0, r8
 8004d94:	f000 f930 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[13], 0);
 8004d98:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCC, lcd_reg_data24, 15);
 8004d9a:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[13], 0);
 8004d9c:	4a76      	ldr	r2, [pc, #472]	; (8004f78 <OTM8009A_Init+0x6f4>)
 8004d9e:	4619      	mov	r1, r3
 8004da0:	4640      	mov	r0, r8
 8004da2:	f000 f929 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC5, &short_reg_data[46], 0);
 8004da6:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[13], 0);
 8004da8:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC5, &short_reg_data[46], 0);
 8004daa:	4a74      	ldr	r2, [pc, #464]	; (8004f7c <OTM8009A_Init+0x6f8>)
 8004dac:	21c5      	movs	r1, #197	; 0xc5
 8004dae:	4640      	mov	r0, r8
 8004db0:	f000 f922 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[47], 0);
 8004db4:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC5, &short_reg_data[46], 0);
 8004db6:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[47], 0);
 8004db8:	4a71      	ldr	r2, [pc, #452]	; (8004f80 <OTM8009A_Init+0x6fc>)
 8004dba:	4619      	mov	r1, r3
 8004dbc:	4640      	mov	r0, r8
 8004dbe:	f000 f91b 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xF5, &short_reg_data[48], 0);
 8004dc2:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[47], 0);
 8004dc4:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xF5, &short_reg_data[48], 0);
 8004dc6:	4a6f      	ldr	r2, [pc, #444]	; (8004f84 <OTM8009A_Init+0x700>)
 8004dc8:	21f5      	movs	r1, #245	; 0xf5
 8004dca:	4640      	mov	r0, r8
 8004dcc:	f000 f914 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[49], 0);
 8004dd0:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xF5, &short_reg_data[48], 0);
 8004dd2:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[49], 0);
 8004dd4:	4a6c      	ldr	r2, [pc, #432]	; (8004f88 <OTM8009A_Init+0x704>)
 8004dd6:	4619      	mov	r1, r3
 8004dd8:	4640      	mov	r0, r8
 8004dda:	f000 f90d 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC6, &short_reg_data[50], 0);
 8004dde:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[49], 0);
 8004de0:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC6, &short_reg_data[50], 0);
 8004de2:	4a6a      	ldr	r2, [pc, #424]	; (8004f8c <OTM8009A_Init+0x708>)
 8004de4:	21c6      	movs	r1, #198	; 0xc6
 8004de6:	4640      	mov	r0, r8
 8004de8:	f000 f906 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 8004dec:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC6, &short_reg_data[50], 0);
 8004dee:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 8004df0:	4a67      	ldr	r2, [pc, #412]	; (8004f90 <OTM8009A_Init+0x70c>)
 8004df2:	4619      	mov	r1, r3
 8004df4:	4640      	mov	r0, r8
 8004df6:	f000 f8ff 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xFF, lcd_reg_data25, 3);
 8004dfa:	2303      	movs	r3, #3
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 8004dfc:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xFF, lcd_reg_data25, 3);
 8004dfe:	4a65      	ldr	r2, [pc, #404]	; (8004f94 <OTM8009A_Init+0x710>)
 8004e00:	21ff      	movs	r1, #255	; 0xff
 8004e02:	4640      	mov	r0, r8
 8004e04:	f000 f8f8 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 8004e08:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xFF, lcd_reg_data25, 3);
 8004e0a:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 8004e0c:	4a60      	ldr	r2, [pc, #384]	; (8004f90 <OTM8009A_Init+0x70c>)
 8004e0e:	4619      	mov	r1, r3
 8004e10:	4640      	mov	r0, r8
 8004e12:	f000 f8f1 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 8004e16:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 8004e18:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 8004e1a:	4a5d      	ldr	r2, [pc, #372]	; (8004f90 <OTM8009A_Init+0x70c>)
 8004e1c:	4619      	mov	r1, r3
 8004e1e:	4640      	mov	r0, r8
 8004e20:	f000 f8ea 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xE1, lcd_reg_data3, 16);
 8004e24:	2310      	movs	r3, #16
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 8004e26:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xE1, lcd_reg_data3, 16);
 8004e28:	4a5b      	ldr	r2, [pc, #364]	; (8004f98 <OTM8009A_Init+0x714>)
 8004e2a:	21e1      	movs	r1, #225	; 0xe1
 8004e2c:	4640      	mov	r0, r8
 8004e2e:	f000 f8e3 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 8004e32:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xE1, lcd_reg_data3, 16);
 8004e34:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 8004e36:	4a56      	ldr	r2, [pc, #344]	; (8004f90 <OTM8009A_Init+0x70c>)
 8004e38:	4619      	mov	r1, r3
 8004e3a:	4640      	mov	r0, r8
 8004e3c:	f000 f8dc 	bl	8004ff8 <otm8009a_write_reg>
 8004e40:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xE2, lcd_reg_data4, 16);
 8004e42:	2310      	movs	r3, #16
 8004e44:	4a55      	ldr	r2, [pc, #340]	; (8004f9c <OTM8009A_Init+0x718>)
 8004e46:	21e2      	movs	r1, #226	; 0xe2
 8004e48:	4640      	mov	r0, r8
 8004e4a:	f000 f8d5 	bl	8004ff8 <otm8009a_write_reg>
 8004e4e:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_SLPOUT, &short_reg_data[36], 0);
 8004e50:	2300      	movs	r3, #0
 8004e52:	4a53      	ldr	r2, [pc, #332]	; (8004fa0 <OTM8009A_Init+0x71c>)
 8004e54:	2111      	movs	r1, #17
 8004e56:	4640      	mov	r0, r8
 8004e58:	f000 f8ce 	bl	8004ff8 <otm8009a_write_reg>
  (void)OTM8009A_IO_Delay(pObj, 120);
 8004e5c:	2178      	movs	r1, #120	; 0x78
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_SLPOUT, &short_reg_data[36], 0);
 8004e5e:	4404      	add	r4, r0
  (void)OTM8009A_IO_Delay(pObj, 120);
 8004e60:	4650      	mov	r0, sl
 8004e62:	f7ff fd03 	bl	800486c <OTM8009A_IO_Delay.isra.0>
  switch(ColorCoding)
 8004e66:	f1b9 0f00 	cmp.w	r9, #0
 8004e6a:	d062      	beq.n	8004f32 <OTM8009A_Init+0x6ae>
 8004e6c:	f1b9 0f02 	cmp.w	r9, #2
 8004e70:	d108      	bne.n	8004e84 <OTM8009A_Init+0x600>
    ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_COLMOD, &short_reg_data[37], 0);
 8004e72:	2300      	movs	r3, #0
 8004e74:	4a4b      	ldr	r2, [pc, #300]	; (8004fa4 <OTM8009A_Init+0x720>)
    ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_COLMOD, &short_reg_data[38], 0);
 8004e76:	213a      	movs	r1, #58	; 0x3a
 8004e78:	4640      	mov	r0, r8
 8004e7a:	f000 f8bd 	bl	8004ff8 <otm8009a_write_reg>
 8004e7e:	4404      	add	r4, r0
    OTM8009ACtx.ColorCode = OTM8009A_FORMAT_RGB888;
 8004e80:	f8c5 9004 	str.w	r9, [r5, #4]
  if(Orientation == OTM8009A_ORIENTATION_LANDSCAPE)
 8004e84:	f1bb 0f01 	cmp.w	fp, #1
 8004e88:	d156      	bne.n	8004f38 <OTM8009A_Init+0x6b4>
	uint8_t tmp = OTM8009A_MADCTR_MODE_LANDSCAPE;
 8004e8a:	2360      	movs	r3, #96	; 0x60
    ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_MADCTR, &tmp, 0);
 8004e8c:	f10d 0207 	add.w	r2, sp, #7
 8004e90:	2136      	movs	r1, #54	; 0x36
 8004e92:	4640      	mov	r0, r8
	uint8_t tmp = OTM8009A_MADCTR_MODE_LANDSCAPE;
 8004e94:	f88d 3007 	strb.w	r3, [sp, #7]
    ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_MADCTR, &tmp, 0);
 8004e98:	2300      	movs	r3, #0
 8004e9a:	f000 f8ad 	bl	8004ff8 <otm8009a_write_reg>
 8004e9e:	4404      	add	r4, r0
    ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_CASET, LcdRegData27, 4);
 8004ea0:	2304      	movs	r3, #4
 8004ea2:	4a41      	ldr	r2, [pc, #260]	; (8004fa8 <OTM8009A_Init+0x724>)
 8004ea4:	212a      	movs	r1, #42	; 0x2a
 8004ea6:	4640      	mov	r0, r8
 8004ea8:	f000 f8a6 	bl	8004ff8 <otm8009a_write_reg>
 8004eac:	4404      	add	r4, r0
    ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_PASET, LcdRegData28, 4);
 8004eae:	2304      	movs	r3, #4
 8004eb0:	4a3e      	ldr	r2, [pc, #248]	; (8004fac <OTM8009A_Init+0x728>)
 8004eb2:	212b      	movs	r1, #43	; 0x2b
 8004eb4:	4640      	mov	r0, r8
 8004eb6:	f000 f89f 	bl	8004ff8 <otm8009a_write_reg>
 8004eba:	4404      	add	r4, r0
    OTM8009ACtx.Orientation = OTM8009A_ORIENTATION_LANDSCAPE;
 8004ebc:	f8c5 b000 	str.w	fp, [r5]
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_WRDISBV, &short_reg_data[39], 0);
 8004ec0:	2300      	movs	r3, #0
 8004ec2:	4a3b      	ldr	r2, [pc, #236]	; (8004fb0 <OTM8009A_Init+0x72c>)
 8004ec4:	2151      	movs	r1, #81	; 0x51
 8004ec6:	4640      	mov	r0, r8
 8004ec8:	f000 f896 	bl	8004ff8 <otm8009a_write_reg>
  OTM8009ACtx.Brightness = ((uint32_t)short_reg_data[39] / 0xFFU) * 100U;
 8004ecc:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_WRDISBV, &short_reg_data[39], 0);
 8004ece:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_WRCTRLD, &short_reg_data[40], 0);
 8004ed0:	4a38      	ldr	r2, [pc, #224]	; (8004fb4 <OTM8009A_Init+0x730>)
 8004ed2:	2153      	movs	r1, #83	; 0x53
 8004ed4:	4640      	mov	r0, r8
  OTM8009ACtx.Brightness = ((uint32_t)short_reg_data[39] / 0xFFU) * 100U;
 8004ed6:	60ab      	str	r3, [r5, #8]
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_WRCTRLD, &short_reg_data[40], 0);
 8004ed8:	f000 f88e 	bl	8004ff8 <otm8009a_write_reg>
 8004edc:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_WRCABC, &short_reg_data[41], 0);
 8004ede:	2300      	movs	r3, #0
 8004ee0:	4a35      	ldr	r2, [pc, #212]	; (8004fb8 <OTM8009A_Init+0x734>)
 8004ee2:	2155      	movs	r1, #85	; 0x55
 8004ee4:	4640      	mov	r0, r8
 8004ee6:	f000 f887 	bl	8004ff8 <otm8009a_write_reg>
 8004eea:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_WRCABCMB, &short_reg_data[42], 0);
 8004eec:	2300      	movs	r3, #0
 8004eee:	4a33      	ldr	r2, [pc, #204]	; (8004fbc <OTM8009A_Init+0x738>)
 8004ef0:	215e      	movs	r1, #94	; 0x5e
 8004ef2:	4640      	mov	r0, r8
 8004ef4:	f000 f880 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_DISPON, &short_reg_data[43], 0);
 8004ef8:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_WRCABCMB, &short_reg_data[42], 0);
 8004efa:	1825      	adds	r5, r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_DISPON, &short_reg_data[43], 0);
 8004efc:	4a30      	ldr	r2, [pc, #192]	; (8004fc0 <OTM8009A_Init+0x73c>)
 8004efe:	2129      	movs	r1, #41	; 0x29
 8004f00:	4640      	mov	r0, r8
 8004f02:	f000 f879 	bl	8004ff8 <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 8004f06:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_DISPON, &short_reg_data[43], 0);
 8004f08:	4405      	add	r5, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 8004f0a:	4a21      	ldr	r2, [pc, #132]	; (8004f90 <OTM8009A_Init+0x70c>)
 8004f0c:	4619      	mov	r1, r3
 8004f0e:	4640      	mov	r0, r8
 8004f10:	f000 f872 	bl	8004ff8 <otm8009a_write_reg>
 8004f14:	4405      	add	r5, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_RAMWR, &short_reg_data[44], 0);
 8004f16:	2300      	movs	r3, #0
 8004f18:	4a2a      	ldr	r2, [pc, #168]	; (8004fc4 <OTM8009A_Init+0x740>)
 8004f1a:	212c      	movs	r1, #44	; 0x2c
 8004f1c:	4640      	mov	r0, r8
 8004f1e:	f000 f86b 	bl	8004ff8 <otm8009a_write_reg>
  if(ret != OTM8009A_OK)
 8004f22:	42c5      	cmn	r5, r0
}
 8004f24:	bf14      	ite	ne
 8004f26:	f04f 30ff 	movne.w	r0, #4294967295
 8004f2a:	2000      	moveq	r0, #0
 8004f2c:	b003      	add	sp, #12
 8004f2e:	e8bd 8f30 	ldmia.w	sp!, {r4, r5, r8, r9, sl, fp, pc}
    ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_COLMOD, &short_reg_data[38], 0);
 8004f32:	464b      	mov	r3, r9
 8004f34:	4a24      	ldr	r2, [pc, #144]	; (8004fc8 <OTM8009A_Init+0x744>)
 8004f36:	e79e      	b.n	8004e76 <OTM8009A_Init+0x5f2>
    OTM8009ACtx.Orientation = OTM8009A_ORIENTATION_PORTRAIT;
 8004f38:	2300      	movs	r3, #0
 8004f3a:	602b      	str	r3, [r5, #0]
 8004f3c:	e7c0      	b.n	8004ec0 <OTM8009A_Init+0x63c>
 8004f3e:	bf00      	nop
 8004f40:	08022a07 	.word	0x08022a07
 8004f44:	0802293f 	.word	0x0802293f
 8004f48:	080229e6 	.word	0x080229e6
 8004f4c:	08022949 	.word	0x08022949
 8004f50:	08022a05 	.word	0x08022a05
 8004f54:	08022955 	.word	0x08022955
 8004f58:	08022a01 	.word	0x08022a01
 8004f5c:	08022964 	.word	0x08022964
 8004f60:	08022a02 	.word	0x08022a02
 8004f64:	08022973 	.word	0x08022973
 8004f68:	08022a03 	.word	0x08022a03
 8004f6c:	0802297d 	.word	0x0802297d
 8004f70:	08022a04 	.word	0x08022a04
 8004f74:	0802298c 	.word	0x0802298c
 8004f78:	080229f1 	.word	0x080229f1
 8004f7c:	08022a12 	.word	0x08022a12
 8004f80:	08022a13 	.word	0x08022a13
 8004f84:	08022a14 	.word	0x08022a14
 8004f88:	08022a15 	.word	0x08022a15
 8004f8c:	08022a16 	.word	0x08022a16
 8004f90:	080229e5 	.word	0x080229e5
 8004f94:	0802299b 	.word	0x0802299b
 8004f98:	0802299e 	.word	0x0802299e
 8004f9c:	080229ae 	.word	0x080229ae
 8004fa0:	08022a08 	.word	0x08022a08
 8004fa4:	08022a09 	.word	0x08022a09
 8004fa8:	080228d0 	.word	0x080228d0
 8004fac:	080228d4 	.word	0x080228d4
 8004fb0:	08022a0b 	.word	0x08022a0b
 8004fb4:	08022a0c 	.word	0x08022a0c
 8004fb8:	08022a0d 	.word	0x08022a0d
 8004fbc:	08022a0e 	.word	0x08022a0e
 8004fc0:	08022a0f 	.word	0x08022a0f
 8004fc4:	08022a10 	.word	0x08022a10
 8004fc8:	08022a0a 	.word	0x08022a0a

08004fcc <OTM8009A_RegisterBusIO>:
  if(pObj == NULL)
 8004fcc:	b160      	cbz	r0, 8004fe8 <OTM8009A_RegisterBusIO+0x1c>
    pObj->IO.WriteReg  = pIO->WriteReg;
 8004fce:	684b      	ldr	r3, [r1, #4]
 8004fd0:	6043      	str	r3, [r0, #4]
    pObj->IO.ReadReg   = pIO->ReadReg;
 8004fd2:	688b      	ldr	r3, [r1, #8]
 8004fd4:	6083      	str	r3, [r0, #8]
    pObj->IO.GetTick   = pIO->GetTick;
 8004fd6:	68cb      	ldr	r3, [r1, #12]
    pObj->Ctx.handle   = pObj;
 8004fd8:	6180      	str	r0, [r0, #24]
    pObj->IO.GetTick   = pIO->GetTick;
 8004fda:	60c3      	str	r3, [r0, #12]
    pObj->Ctx.ReadReg  = OTM8009A_ReadRegWrap;
 8004fdc:	4b04      	ldr	r3, [pc, #16]	; (8004ff0 <OTM8009A_RegisterBusIO+0x24>)
 8004fde:	6143      	str	r3, [r0, #20]
    pObj->Ctx.WriteReg = OTM8009A_WriteRegWrap;
 8004fe0:	4b04      	ldr	r3, [pc, #16]	; (8004ff4 <OTM8009A_RegisterBusIO+0x28>)
 8004fe2:	6103      	str	r3, [r0, #16]
  int32_t ret = OTM8009A_OK;
 8004fe4:	2000      	movs	r0, #0
 8004fe6:	4770      	bx	lr
    ret = OTM8009A_ERROR;
 8004fe8:	f04f 30ff 	mov.w	r0, #4294967295
}
 8004fec:	4770      	bx	lr
 8004fee:	bf00      	nop
 8004ff0:	08004851 	.word	0x08004851
 8004ff4:	0800485f 	.word	0x0800485f

08004ff8 <otm8009a_write_reg>:
*                 I2C or SPI writing function
* Input         : Register Address, Data to be written, length of buffer
* Output        : None
*******************************************************************************/
int32_t otm8009a_write_reg(otm8009a_ctx_t *ctx, uint16_t reg, const uint8_t *pdata, uint16_t length)
{
 8004ff8:	b410      	push	{r4}
  return ctx->WriteReg(ctx->handle, reg, (uint8_t *)pdata, length);
 8004ffa:	6804      	ldr	r4, [r0, #0]
 8004ffc:	6880      	ldr	r0, [r0, #8]
 8004ffe:	46a4      	mov	ip, r4
}
 8005000:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->WriteReg(ctx->handle, reg, (uint8_t *)pdata, length);
 8005004:	4760      	bx	ip
	...

08005008 <BSP_I2C4_DeInit>:
  */
int32_t BSP_I2C4_DeInit(void)
{
  int32_t ret  = BSP_ERROR_NONE;

  I2c4InitCounter--;
 8005008:	4a10      	ldr	r2, [pc, #64]	; (800504c <BSP_I2C4_DeInit+0x44>)
{
 800500a:	b508      	push	{r3, lr}
  I2c4InitCounter--;
 800500c:	6813      	ldr	r3, [r2, #0]
 800500e:	3b01      	subs	r3, #1
 8005010:	6013      	str	r3, [r2, #0]
  if (I2c4InitCounter == 0U)
 8005012:	b10b      	cbz	r3, 8005018 <BSP_I2C4_DeInit+0x10>
  int32_t ret  = BSP_ERROR_NONE;
 8005014:	2000      	movs	r0, #0
      ret = BSP_ERROR_BUS_FAILURE;
    }
  }

  return ret;
}
 8005016:	bd08      	pop	{r3, pc}
  /* Prevent unused argument(s) compilation warning */
  UNUSED(phi2c);

  /* Configure I2C Tx, Rx as alternate function */
  gpio_init_structure.Pin = BUS_I2C4_SCL_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SCL_GPIO_PORT, gpio_init_structure.Pin );
 8005018:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 800501c:	480c      	ldr	r0, [pc, #48]	; (8005050 <BSP_I2C4_DeInit+0x48>)
 800501e:	f001 fe0b 	bl	8006c38 <HAL_GPIO_DeInit>
  gpio_init_structure.Pin = BUS_I2C4_SDA_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SDA_GPIO_PORT, gpio_init_structure.Pin);
 8005022:	480b      	ldr	r0, [pc, #44]	; (8005050 <BSP_I2C4_DeInit+0x48>)
 8005024:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8005028:	f001 fe06 	bl	8006c38 <HAL_GPIO_DeInit>

  /* Disable I2C clock */
  BUS_I2C4_CLK_DISABLE();
 800502c:	4a09      	ldr	r2, [pc, #36]	; (8005054 <BSP_I2C4_DeInit+0x4c>)
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
 800502e:	480a      	ldr	r0, [pc, #40]	; (8005058 <BSP_I2C4_DeInit+0x50>)
  BUS_I2C4_CLK_DISABLE();
 8005030:	f8d2 30f4 	ldr.w	r3, [r2, #244]	; 0xf4
 8005034:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8005038:	f8c2 30f4 	str.w	r3, [r2, #244]	; 0xf4
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
 800503c:	f002 f8a4 	bl	8007188 <HAL_I2C_DeInit>
 8005040:	2800      	cmp	r0, #0
 8005042:	d0e7      	beq.n	8005014 <BSP_I2C4_DeInit+0xc>
      ret = BSP_ERROR_BUS_FAILURE;
 8005044:	f06f 0007 	mvn.w	r0, #7
  return ret;
 8005048:	e7e5      	b.n	8005016 <BSP_I2C4_DeInit+0xe>
 800504a:	bf00      	nop
 800504c:	2400476c 	.word	0x2400476c
 8005050:	58020c00 	.word	0x58020c00
 8005054:	58024400 	.word	0x58024400
 8005058:	24005174 	.word	0x24005174

0800505c <MX_I2C4_Init>:
  hI2c->Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
 800505c:	2300      	movs	r3, #0
 800505e:	2201      	movs	r2, #1
{
 8005060:	b510      	push	{r4, lr}
  hI2c->Init.Timing           = timing;
 8005062:	6041      	str	r1, [r0, #4]
{
 8005064:	4604      	mov	r4, r0
  hI2c->Init.NoStretchMode    = I2C_NOSTRETCH_DISABLE;
 8005066:	6203      	str	r3, [r0, #32]
  hI2c->Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
 8005068:	e9c0 3202 	strd	r3, r2, [r0, #8]
  hI2c->Init.OwnAddress2      = 0;
 800506c:	e9c0 3304 	strd	r3, r3, [r0, #16]
  hI2c->Init.GeneralCallMode  = I2C_GENERALCALL_DISABLE;
 8005070:	e9c0 3306 	strd	r3, r3, [r0, #24]
  if (HAL_I2C_Init(hI2c) != HAL_OK)
 8005074:	f002 f836 	bl	80070e4 <HAL_I2C_Init>
 8005078:	4601      	mov	r1, r0
 800507a:	b108      	cbz	r0, 8005080 <MX_I2C4_Init+0x24>
    status = HAL_ERROR;
 800507c:	2001      	movs	r0, #1
}
 800507e:	bd10      	pop	{r4, pc}
    if (HAL_I2CEx_ConfigAnalogFilter(hI2c, analog_filter) != HAL_OK)
 8005080:	4620      	mov	r0, r4
 8005082:	f002 fa12 	bl	80074aa <HAL_I2CEx_ConfigAnalogFilter>
 8005086:	4601      	mov	r1, r0
 8005088:	2800      	cmp	r0, #0
 800508a:	d1f7      	bne.n	800507c <MX_I2C4_Init+0x20>
      if (HAL_I2CEx_ConfigDigitalFilter(hI2c, I2C_DIGITAL_FILTER_COEF) != HAL_OK)
 800508c:	4620      	mov	r0, r4
 800508e:	f002 fa32 	bl	80074f6 <HAL_I2CEx_ConfigDigitalFilter>
    status = HAL_ERROR;
 8005092:	3800      	subs	r0, #0
 8005094:	bf18      	it	ne
 8005096:	2001      	movne	r0, #1
 8005098:	e7f1      	b.n	800507e <MX_I2C4_Init+0x22>
	...

0800509c <BSP_I2C4_Init>:
  hbus_i2c4.Instance = BUS_I2C4;
 800509c:	4ba3      	ldr	r3, [pc, #652]	; (800532c <BSP_I2C4_Init+0x290>)
 800509e:	48a4      	ldr	r0, [pc, #656]	; (8005330 <BSP_I2C4_Init+0x294>)
{
 80050a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  hbus_i2c4.Instance = BUS_I2C4;
 80050a4:	6003      	str	r3, [r0, #0]
{
 80050a6:	b093      	sub	sp, #76	; 0x4c
  if (I2c4InitCounter == 0U)
 80050a8:	4ba2      	ldr	r3, [pc, #648]	; (8005334 <BSP_I2C4_Init+0x298>)
 80050aa:	681a      	ldr	r2, [r3, #0]
 80050ac:	9200      	str	r2, [sp, #0]
 80050ae:	2a00      	cmp	r2, #0
 80050b0:	f040 80cf 	bne.w	8005252 <BSP_I2C4_Init+0x1b6>
    I2c4InitCounter++;
 80050b4:	2201      	movs	r2, #1
 80050b6:	601a      	str	r2, [r3, #0]
    if (HAL_I2C_GetState(&hbus_i2c4) == HAL_I2C_STATE_RESET)
 80050b8:	f002 f9f2 	bl	80074a0 <HAL_I2C_GetState>
 80050bc:	2800      	cmp	r0, #0
 80050be:	f040 80c8 	bne.w	8005252 <BSP_I2C4_Init+0x1b6>
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
 80050c2:	4d9d      	ldr	r5, [pc, #628]	; (8005338 <BSP_I2C4_Init+0x29c>)
  gpio_init_structure.Mode      = GPIO_MODE_AF_OD;
 80050c4:	f04f 0812 	mov.w	r8, #18
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
 80050c8:	2702      	movs	r7, #2
 80050ca:	2604      	movs	r6, #4
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
 80050cc:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
 80050d0:	a90d      	add	r1, sp, #52	; 0x34
 80050d2:	489a      	ldr	r0, [pc, #616]	; (800533c <BSP_I2C4_Init+0x2a0>)
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
 80050d4:	f043 0308 	orr.w	r3, r3, #8
 80050d8:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
 80050dc:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
 80050e0:	f003 0308 	and.w	r3, r3, #8
 80050e4:	930a      	str	r3, [sp, #40]	; 0x28
 80050e6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
 80050e8:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
 80050ec:	f043 0308 	orr.w	r3, r3, #8
 80050f0:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
 80050f4:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
 80050f8:	f003 0308 	and.w	r3, r3, #8
 80050fc:	930b      	str	r3, [sp, #44]	; 0x2c
 80050fe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  gpio_init_structure.Mode      = GPIO_MODE_AF_OD;
 8005100:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8005104:	e9cd 380d 	strd	r3, r8, [sp, #52]	; 0x34
  gpio_init_structure.Pull      = GPIO_NOPULL;
 8005108:	9b00      	ldr	r3, [sp, #0]
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
 800510a:	e9cd 7610 	strd	r7, r6, [sp, #64]	; 0x40
  gpio_init_structure.Pull      = GPIO_NOPULL;
 800510e:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
 8005110:	f001 fca6 	bl	8006a60 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
 8005114:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
 8005118:	a90d      	add	r1, sp, #52	; 0x34
 800511a:	4888      	ldr	r0, [pc, #544]	; (800533c <BSP_I2C4_Init+0x2a0>)
  gpio_init_structure.Alternate = BUS_I2C4_SDA_AF;
 800511c:	9611      	str	r6, [sp, #68]	; 0x44
  gpio_init_structure.Mode      = GPIO_MODE_AF_OD;
 800511e:	e9cd 380d 	strd	r3, r8, [sp, #52]	; 0x34
  gpio_init_structure.Pull      = GPIO_NOPULL;
 8005122:	9b00      	ldr	r3, [sp, #0]
  gpio_init_structure.Speed     = GPIO_SPEED_FREQ_HIGH;
 8005124:	e9cd 370f 	strd	r3, r7, [sp, #60]	; 0x3c
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
 8005128:	f001 fc9a 	bl	8006a60 <HAL_GPIO_Init>
  BUS_I2C4_CLK_ENABLE();
 800512c:	f8d5 30f4 	ldr.w	r3, [r5, #244]	; 0xf4
 8005130:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8005134:	f8c5 30f4 	str.w	r3, [r5, #244]	; 0xf4
 8005138:	f8d5 30f4 	ldr.w	r3, [r5, #244]	; 0xf4
 800513c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005140:	930c      	str	r3, [sp, #48]	; 0x30
 8005142:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  BUS_I2C4_FORCE_RESET();
 8005144:	f8d5 309c 	ldr.w	r3, [r5, #156]	; 0x9c
 8005148:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800514c:	f8c5 309c 	str.w	r3, [r5, #156]	; 0x9c
  BUS_I2C4_RELEASE_RESET();
 8005150:	f8d5 309c 	ldr.w	r3, [r5, #156]	; 0x9c
 8005154:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8005158:	f8c5 309c 	str.w	r3, [r5, #156]	; 0x9c
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
 800515c:	f003 fc02 	bl	8008964 <HAL_RCC_GetPCLK2Freq>
  if((clock_src_freq != 0U) && (i2c_freq != 0U))
 8005160:	2800      	cmp	r0, #0
 8005162:	d070      	beq.n	8005246 <BSP_I2C4_Init+0x1aa>
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
 8005164:	4b76      	ldr	r3, [pc, #472]	; (8005340 <BSP_I2C4_Init+0x2a4>)
  uint32_t prev_presc = I2C_PRESC_MAX;
 8005166:	f04f 0810 	mov.w	r8, #16
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
 800516a:	f8df 91dc 	ldr.w	r9, [pc, #476]	; 8005348 <BSP_I2C4_Init+0x2ac>
 800516e:	f04f 0a14 	mov.w	sl, #20
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
 8005172:	eb03 0350 	add.w	r3, r3, r0, lsr #1
 8005176:	fbb3 f0f0 	udiv	r0, r3, r0
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
 800517a:	eb00 0240 	add.w	r2, r0, r0, lsl #1
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
 800517e:	f640 13f6 	movw	r3, #2550	; 0x9f6
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
 8005182:	4601      	mov	r1, r0
  tsdadel_min = (int32_t)I2C_Charac[I2C_speed].tfall + (int32_t)I2C_Charac[I2C_speed].hddat_min -
 8005184:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
 8005188:	eba3 0380 	sub.w	r3, r3, r0, lsl #2
  tsdadel_min = (int32_t)I2C_Charac[I2C_speed].tfall + (int32_t)I2C_Charac[I2C_speed].hddat_min -
 800518c:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 8005190:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8005194:	32e2      	adds	r2, #226	; 0xe2
  if (tsdadel_min <= 0)
 8005196:	9302      	str	r3, [sp, #8]
 8005198:	4b6a      	ldr	r3, [pc, #424]	; (8005344 <BSP_I2C4_Init+0x2a8>)
 800519a:	ea22 7be2 	bic.w	fp, r2, r2, asr #31
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
 800519e:	9a00      	ldr	r2, [sp, #0]
 80051a0:	681b      	ldr	r3, [r3, #0]
 80051a2:	4696      	mov	lr, r2
{
 80051a4:	468c      	mov	ip, r1
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
 80051a6:	2600      	movs	r6, #0
      if (tscldel >= (uint32_t)tscldel_min)
 80051a8:	f240 3479 	movw	r4, #889	; 0x379
 80051ac:	9601      	str	r6, [sp, #4]
      uint32_t tscldel = (scldel + 1U) * (presc + 1U) * ti2cclk;
 80051ae:	3601      	adds	r6, #1
      if (tscldel >= (uint32_t)tscldel_min)
 80051b0:	45a4      	cmp	ip, r4
 80051b2:	d959      	bls.n	8005268 <BSP_I2C4_Init+0x1cc>
 80051b4:	2500      	movs	r5, #0
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
 80051b6:	462f      	mov	r7, r5
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
 80051b8:	45ab      	cmp	fp, r5
 80051ba:	d851      	bhi.n	8005260 <BSP_I2C4_Init+0x1c4>
 80051bc:	9c02      	ldr	r4, [sp, #8]
 80051be:	42ac      	cmp	r4, r5
 80051c0:	d34e      	bcc.n	8005260 <BSP_I2C4_Init+0x1c4>
            if(presc != prev_presc)
 80051c2:	4590      	cmp	r8, r2
 80051c4:	d04c      	beq.n	8005260 <BSP_I2C4_Init+0x1c4>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
 80051c6:	fb0a f803 	mul.w	r8, sl, r3
              I2c_valid_timing_nbr ++;
 80051ca:	3301      	adds	r3, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
 80051cc:	9c01      	ldr	r4, [sp, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
 80051ce:	eb09 0e08 	add.w	lr, r9, r8
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
 80051d2:	2b7f      	cmp	r3, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
 80051d4:	f849 2008 	str.w	r2, [r9, r8]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
 80051d8:	e9ce 4701 	strd	r4, r7, [lr, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
 80051dc:	d93d      	bls.n	800525a <BSP_I2C4_Init+0x1be>
 80051de:	4a59      	ldr	r2, [pc, #356]	; (8005344 <BSP_I2C4_Init+0x2a8>)
 80051e0:	6013      	str	r3, [r2, #0]
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
 80051e2:	4b58      	ldr	r3, [pc, #352]	; (8005344 <BSP_I2C4_Init+0x2a8>)
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
 80051e4:	f242 7210 	movw	r2, #10000	; 0x2710
 80051e8:	4957      	ldr	r1, [pc, #348]	; (8005348 <BSP_I2C4_Init+0x2ac>)
 80051ea:	2700      	movs	r7, #0
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
 80051ec:	681b      	ldr	r3, [r3, #0]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
 80051ee:	9203      	str	r2, [sp, #12]
 80051f0:	f04f 32ff 	mov.w	r2, #4294967295
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
 80051f4:	9305      	str	r3, [sp, #20]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
 80051f6:	0043      	lsls	r3, r0, #1
 80051f8:	f103 0432 	add.w	r4, r3, #50	; 0x32
 80051fc:	f5c3 5b90 	rsb	fp, r3, #4608	; 0x1200
 8005200:	f5a3 5311 	sub.w	r3, r3, #9280	; 0x2440
 8005204:	f10b 0b0c 	add.w	fp, fp, #12
 8005208:	9409      	str	r4, [sp, #36]	; 0x24
 800520a:	3b0a      	subs	r3, #10
 800520c:	9302      	str	r3, [sp, #8]
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
 800520e:	9b05      	ldr	r3, [sp, #20]
 8005210:	429f      	cmp	r7, r3
 8005212:	d134      	bne.n	800527e <BSP_I2C4_Init+0x1e2>
        if (idx < I2C_VALID_TIMING_NBR)
 8005214:	2a7f      	cmp	r2, #127	; 0x7f
 8005216:	d816      	bhi.n	8005246 <BSP_I2C4_Init+0x1aa>
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
 8005218:	2314      	movs	r3, #20
 800521a:	435a      	muls	r2, r3
 800521c:	4b4a      	ldr	r3, [pc, #296]	; (8005348 <BSP_I2C4_Init+0x2ac>)
 800521e:	1899      	adds	r1, r3, r2
 8005220:	589b      	ldr	r3, [r3, r2]
                ((I2c_valid_timing[idx].scll & 0xFFU) << 0);
 8005222:	7c0c      	ldrb	r4, [r1, #16]
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
 8005224:	ea44 7403 	orr.w	r4, r4, r3, lsl #28
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
 8005228:	684b      	ldr	r3, [r1, #4]
 800522a:	051b      	lsls	r3, r3, #20
 800522c:	f403 0370 	and.w	r3, r3, #15728640	; 0xf00000
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
 8005230:	431c      	orrs	r4, r3
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
 8005232:	688b      	ldr	r3, [r1, #8]
 8005234:	041b      	lsls	r3, r3, #16
 8005236:	f403 2370 	and.w	r3, r3, #983040	; 0xf0000
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
 800523a:	431c      	orrs	r4, r3
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
 800523c:	68cb      	ldr	r3, [r1, #12]
 800523e:	021b      	lsls	r3, r3, #8
 8005240:	b29b      	uxth	r3, r3
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
 8005242:	4323      	orrs	r3, r4
 8005244:	9300      	str	r3, [sp, #0]
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
 8005246:	9900      	ldr	r1, [sp, #0]
 8005248:	4839      	ldr	r0, [pc, #228]	; (8005330 <BSP_I2C4_Init+0x294>)
 800524a:	f7ff ff07 	bl	800505c <MX_I2C4_Init>
 800524e:	2800      	cmp	r0, #0
 8005250:	d169      	bne.n	8005326 <BSP_I2C4_Init+0x28a>
  int32_t ret = BSP_ERROR_NONE;
 8005252:	2000      	movs	r0, #0
}
 8005254:	b013      	add	sp, #76	; 0x4c
 8005256:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800525a:	4690      	mov	r8, r2
 800525c:	f04f 0e01 	mov.w	lr, #1
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
 8005260:	3701      	adds	r7, #1
 8005262:	440d      	add	r5, r1
 8005264:	2f10      	cmp	r7, #16
 8005266:	d1a7      	bne.n	80051b8 <BSP_I2C4_Init+0x11c>
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
 8005268:	2e10      	cmp	r6, #16
 800526a:	448c      	add	ip, r1
 800526c:	d19c      	bne.n	80051a8 <BSP_I2C4_Init+0x10c>
  for (presc = 0; presc < I2C_PRESC_MAX; presc++)
 800526e:	3201      	adds	r2, #1
 8005270:	4401      	add	r1, r0
 8005272:	2a10      	cmp	r2, #16
 8005274:	d196      	bne.n	80051a4 <BSP_I2C4_Init+0x108>
 8005276:	f1be 0f00 	cmp.w	lr, #0
 800527a:	d1b0      	bne.n	80051de <BSP_I2C4_Init+0x142>
 800527c:	e7b1      	b.n	80051e2 <BSP_I2C4_Init+0x146>
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
 800527e:	680b      	ldr	r3, [r1, #0]
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
 8005280:	f04f 0c00 	mov.w	ip, #0
 8005284:	9c09      	ldr	r4, [sp, #36]	; 0x24
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
 8005286:	fb03 0300 	mla	r3, r3, r0, r0
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
 800528a:	441c      	add	r4, r3
 800528c:	ebab 0503 	sub.w	r5, fp, r3
 8005290:	9404      	str	r4, [sp, #16]
 8005292:	006c      	lsls	r4, r5, #1
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
 8005294:	9d04      	ldr	r5, [sp, #16]
 8005296:	9401      	str	r4, [sp, #4]
 8005298:	9c02      	ldr	r4, [sp, #8]
 800529a:	441c      	add	r4, r3
 800529c:	9408      	str	r4, [sp, #32]
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
 800529e:	f241 245c 	movw	r4, #4700	; 0x125c
 80052a2:	f8cd c018 	str.w	ip, [sp, #24]
 80052a6:	f1a5 0632 	sub.w	r6, r5, #50	; 0x32
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
 80052aa:	f10c 0c01 	add.w	ip, ip, #1
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
 80052ae:	42a5      	cmp	r5, r4
 80052b0:	d92e      	bls.n	8005310 <BSP_I2C4_Init+0x274>
 80052b2:	ebb0 0f96 	cmp.w	r0, r6, lsr #2
 80052b6:	d22b      	bcs.n	8005310 <BSP_I2C4_Init+0x274>
 80052b8:	9c08      	ldr	r4, [sp, #32]
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
 80052ba:	f04f 0e00 	mov.w	lr, #0
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
 80052be:	f8dd 8010 	ldr.w	r8, [sp, #16]
 80052c2:	1966      	adds	r6, r4, r5
 80052c4:	f8dd 9004 	ldr.w	r9, [sp, #4]
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
 80052c8:	f206 6a83 	addw	sl, r6, #1667	; 0x683
 80052cc:	f241 0447 	movw	r4, #4167	; 0x1047
 80052d0:	f8cd e01c 	str.w	lr, [sp, #28]
          uint32_t tscl_h = tafdel_min + dnf_delay + (2U * ti2cclk) + ((sclh + 1U) * tpresc);
 80052d4:	f10e 0e01 	add.w	lr, lr, #1
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
 80052d8:	45a2      	cmp	sl, r4
 80052da:	d812      	bhi.n	8005302 <BSP_I2C4_Init+0x266>
 80052dc:	f5b8 6f7a 	cmp.w	r8, #4000	; 0xfa0
 80052e0:	d30f      	bcc.n	8005302 <BSP_I2C4_Init+0x266>
 80052e2:	4540      	cmp	r0, r8
 80052e4:	d20d      	bcs.n	8005302 <BSP_I2C4_Init+0x266>
              error = -error;
 80052e6:	ea36 0a26 	bics.w	sl, r6, r6, asr #32
 80052ea:	bf28      	it	cs
 80052ec:	46ca      	movcs	sl, r9
            if ((uint32_t)error < prev_error)
 80052ee:	9c03      	ldr	r4, [sp, #12]
 80052f0:	45a2      	cmp	sl, r4
 80052f2:	d206      	bcs.n	8005302 <BSP_I2C4_Init+0x266>
              I2c_valid_timing[count].scll = scll;
 80052f4:	9a06      	ldr	r2, [sp, #24]
              I2c_valid_timing[count].sclh = sclh;
 80052f6:	f8cd a00c 	str.w	sl, [sp, #12]
              I2c_valid_timing[count].scll = scll;
 80052fa:	610a      	str	r2, [r1, #16]
              I2c_valid_timing[count].sclh = sclh;
 80052fc:	9a07      	ldr	r2, [sp, #28]
 80052fe:	60ca      	str	r2, [r1, #12]
 8005300:	463a      	mov	r2, r7
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
 8005302:	f5be 7f80 	cmp.w	lr, #256	; 0x100
 8005306:	eba9 0903 	sub.w	r9, r9, r3
 800530a:	441e      	add	r6, r3
 800530c:	4498      	add	r8, r3
 800530e:	d1db      	bne.n	80052c8 <BSP_I2C4_Init+0x22c>
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
 8005310:	9c01      	ldr	r4, [sp, #4]
 8005312:	f5bc 7f80 	cmp.w	ip, #256	; 0x100
 8005316:	441d      	add	r5, r3
 8005318:	eba4 0403 	sub.w	r4, r4, r3
 800531c:	9401      	str	r4, [sp, #4]
 800531e:	d1be      	bne.n	800529e <BSP_I2C4_Init+0x202>
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
 8005320:	3701      	adds	r7, #1
 8005322:	3114      	adds	r1, #20
 8005324:	e773      	b.n	800520e <BSP_I2C4_Init+0x172>
          ret = BSP_ERROR_BUS_FAILURE;
 8005326:	f06f 0007 	mvn.w	r0, #7
  return ret;
 800532a:	e793      	b.n	8005254 <BSP_I2C4_Init+0x1b8>
 800532c:	58001c00 	.word	0x58001c00
 8005330:	24005174 	.word	0x24005174
 8005334:	2400476c 	.word	0x2400476c
 8005338:	58024400 	.word	0x58024400
 800533c:	58020c00 	.word	0x58020c00
 8005340:	3b9aca00 	.word	0x3b9aca00
 8005344:	24005170 	.word	0x24005170
 8005348:	24004770 	.word	0x24004770

0800534c <BSP_I2C4_WriteReg>:
{
 800534c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_WriteReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if(HAL_I2C_Mem_Write(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
 800534e:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 8005352:	9200      	str	r2, [sp, #0]
 8005354:	460a      	mov	r2, r1
 8005356:	4601      	mov	r1, r0
 8005358:	4808      	ldr	r0, [pc, #32]	; (800537c <BSP_I2C4_WriteReg+0x30>)
 800535a:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800535e:	2301      	movs	r3, #1
 8005360:	f001 ff2b 	bl	80071ba <HAL_I2C_Mem_Write>
 8005364:	b140      	cbz	r0, 8005378 <BSP_I2C4_WriteReg+0x2c>
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
 8005366:	4805      	ldr	r0, [pc, #20]	; (800537c <BSP_I2C4_WriteReg+0x30>)
 8005368:	f002 f89d 	bl	80074a6 <HAL_I2C_GetError>
      ret =  BSP_ERROR_PERIPH_FAILURE;
 800536c:	2804      	cmp	r0, #4
 800536e:	bf0c      	ite	eq
 8005370:	f06f 0065 	mvneq.w	r0, #101	; 0x65
 8005374:	f06f 0003 	mvnne.w	r0, #3
}
 8005378:	b004      	add	sp, #16
 800537a:	bd10      	pop	{r4, pc}
 800537c:	24005174 	.word	0x24005174

08005380 <BSP_I2C4_ReadReg>:
{
 8005380:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_ReadReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if (HAL_I2C_Mem_Read(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
 8005382:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 8005386:	9200      	str	r2, [sp, #0]
 8005388:	460a      	mov	r2, r1
 800538a:	4601      	mov	r1, r0
 800538c:	4808      	ldr	r0, [pc, #32]	; (80053b0 <BSP_I2C4_ReadReg+0x30>)
 800538e:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8005392:	2301      	movs	r3, #1
 8005394:	f001 ffc8 	bl	8007328 <HAL_I2C_Mem_Read>
 8005398:	b140      	cbz	r0, 80053ac <BSP_I2C4_ReadReg+0x2c>
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
 800539a:	4805      	ldr	r0, [pc, #20]	; (80053b0 <BSP_I2C4_ReadReg+0x30>)
 800539c:	f002 f883 	bl	80074a6 <HAL_I2C_GetError>
      ret =  BSP_ERROR_PERIPH_FAILURE;
 80053a0:	2804      	cmp	r0, #4
 80053a2:	bf0c      	ite	eq
 80053a4:	f06f 0065 	mvneq.w	r0, #101	; 0x65
 80053a8:	f06f 0003 	mvnne.w	r0, #3
}
 80053ac:	b004      	add	sp, #16
 80053ae:	bd10      	pop	{r4, pc}
 80053b0:	24005174 	.word	0x24005174

080053b4 <BSP_GetTick>:
  return (int32_t)HAL_GetTick();
 80053b4:	f000 bd10 	b.w	8005dd8 <HAL_GetTick>

080053b8 <MX_QSPI_Init>:
  */
__weak HAL_StatusTypeDef MX_QSPI_Init(QSPI_HandleTypeDef *hQspi, MX_QSPI_Init_t *Config)
{
  /* QSPI initialization */
  /* QSPI freq = SYSCLK /(1 + ClockPrescaler) Mhz */
  hQspi->Instance                = QUADSPI;
 80053b8:	4a09      	ldr	r2, [pc, #36]	; (80053e0 <MX_QSPI_Init+0x28>)
  hQspi->Init.ClockPrescaler     = Config->ClockPrescaler;
  hQspi->Init.FifoThreshold      = 1;
  hQspi->Init.SampleShifting     = Config->SampleShifting;
  hQspi->Init.FlashSize          = Config->FlashSize;
  hQspi->Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_4_CYCLE; /* Min 50ns for nonRead */
  hQspi->Init.ClockMode          = QSPI_CLOCK_MODE_0;
 80053ba:	f44f 7c40 	mov.w	ip, #768	; 0x300
  hQspi->Instance                = QUADSPI;
 80053be:	6002      	str	r2, [r0, #0]
  hQspi->Init.ClockPrescaler     = Config->ClockPrescaler;
 80053c0:	684a      	ldr	r2, [r1, #4]
 80053c2:	6042      	str	r2, [r0, #4]
  hQspi->Init.FifoThreshold      = 1;
 80053c4:	2201      	movs	r2, #1
 80053c6:	6082      	str	r2, [r0, #8]
  hQspi->Init.SampleShifting     = Config->SampleShifting;
 80053c8:	688a      	ldr	r2, [r1, #8]
 80053ca:	60c2      	str	r2, [r0, #12]
  hQspi->Init.FlashSize          = Config->FlashSize;
 80053cc:	680a      	ldr	r2, [r1, #0]
 80053ce:	6102      	str	r2, [r0, #16]
  hQspi->Init.ClockMode          = QSPI_CLOCK_MODE_0;
 80053d0:	2200      	movs	r2, #0
 80053d2:	e9c0 c205 	strd	ip, r2, [r0, #20]
  hQspi->Init.FlashID            = QSPI_FLASH_ID_1;
 80053d6:	61c2      	str	r2, [r0, #28]
  hQspi->Init.DualFlash          = Config->DualFlashMode;
 80053d8:	68ca      	ldr	r2, [r1, #12]
 80053da:	6202      	str	r2, [r0, #32]

  return HAL_QSPI_Init(hQspi);
 80053dc:	f002 bc0e 	b.w	8007bfc <HAL_QSPI_Init>
 80053e0:	52005000 	.word	0x52005000

080053e4 <BSP_QSPI_EnableMemoryMappedMode>:
  *         Only 1 Instance can running MMP mode. And it will lock system at this mode.
  * @param  Instance  QSPI instance
  * @retval BSP status
  */
int32_t BSP_QSPI_EnableMemoryMappedMode(uint32_t Instance)
{
 80053e4:	b510      	push	{r4, lr}
  int32_t ret = BSP_ERROR_NONE;

  /* Check if the instance is supported */
  if(Instance >= QSPI_INSTANCES_NUMBER)
 80053e6:	b988      	cbnz	r0, 800540c <BSP_QSPI_EnableMemoryMappedMode+0x28>
  }
  else
  {
    if(QSPI_Ctx[Instance].TransferRate == BSP_QSPI_STR_TRANSFER)
    {
      if(MT25TL01G_EnableMemoryMappedModeSTR(&hqspi, QSPI_Ctx[Instance].InterfaceMode) != MT25TL01G_OK)
 80053e8:	4c0a      	ldr	r4, [pc, #40]	; (8005414 <BSP_QSPI_EnableMemoryMappedMode+0x30>)
 80053ea:	480b      	ldr	r0, [pc, #44]	; (8005418 <BSP_QSPI_EnableMemoryMappedMode+0x34>)
    if(QSPI_Ctx[Instance].TransferRate == BSP_QSPI_STR_TRANSFER)
 80053ec:	78a3      	ldrb	r3, [r4, #2]
      if(MT25TL01G_EnableMemoryMappedModeSTR(&hqspi, QSPI_Ctx[Instance].InterfaceMode) != MT25TL01G_OK)
 80053ee:	7861      	ldrb	r1, [r4, #1]
    if(QSPI_Ctx[Instance].TransferRate == BSP_QSPI_STR_TRANSFER)
 80053f0:	b94b      	cbnz	r3, 8005406 <BSP_QSPI_EnableMemoryMappedMode+0x22>
      if(MT25TL01G_EnableMemoryMappedModeSTR(&hqspi, QSPI_Ctx[Instance].InterfaceMode) != MT25TL01G_OK)
 80053f2:	f7ff f9a5 	bl	8004740 <MT25TL01G_EnableMemoryMappedModeSTR>
 80053f6:	b110      	cbz	r0, 80053fe <BSP_QSPI_EnableMemoryMappedMode+0x1a>
      {
        ret = BSP_ERROR_COMPONENT_FAILURE;
 80053f8:	f06f 0004 	mvn.w	r0, #4
    }
  }

  /* Return BSP status */
  return ret;
}
 80053fc:	bd10      	pop	{r4, pc}
        QSPI_Ctx[Instance].IsInitialized = QSPI_ACCESS_MMP;
 80053fe:	2302      	movs	r3, #2
  int32_t ret = BSP_ERROR_NONE;
 8005400:	2000      	movs	r0, #0
        QSPI_Ctx[Instance].IsInitialized = QSPI_ACCESS_MMP;
 8005402:	7023      	strb	r3, [r4, #0]
 8005404:	e7fa      	b.n	80053fc <BSP_QSPI_EnableMemoryMappedMode+0x18>
      if(MT25TL01G_EnableMemoryMappedModeDTR(&hqspi, QSPI_Ctx[Instance].InterfaceMode) != MT25TL01G_OK)
 8005406:	f7ff f951 	bl	80046ac <MT25TL01G_EnableMemoryMappedModeDTR>
 800540a:	e7f4      	b.n	80053f6 <BSP_QSPI_EnableMemoryMappedMode+0x12>
    ret = BSP_ERROR_WRONG_PARAM;
 800540c:	f06f 0001 	mvn.w	r0, #1
  return ret;
 8005410:	e7f4      	b.n	80053fc <BSP_QSPI_EnableMemoryMappedMode+0x18>
 8005412:	bf00      	nop
 8005414:	240051c0 	.word	0x240051c0
 8005418:	240002bc 	.word	0x240002bc

0800541c <BSP_QSPI_ConfigFlash>:
  * @param  Mode      QSPI mode
  * @param  Rate      QSPI transfer rate
  * @retval BSP status
  */
int32_t BSP_QSPI_ConfigFlash(uint32_t Instance, BSP_QSPI_Interface_t Mode, BSP_QSPI_Transfer_t Rate)
{
 800541c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800541e:	460c      	mov	r4, r1
 8005420:	4617      	mov	r7, r2
  int32_t ret = BSP_ERROR_NONE;

  /* Check if the instance is supported */
  if(Instance >= QSPI_INSTANCES_NUMBER)
 8005422:	bb28      	cbnz	r0, 8005470 <BSP_QSPI_ConfigFlash+0x54>
    ret = BSP_ERROR_WRONG_PARAM;
  }
  else
  {
    /* Check if MMP mode locked ************************************************/
    if(QSPI_Ctx[Instance].IsInitialized == QSPI_ACCESS_MMP)
 8005424:	4d17      	ldr	r5, [pc, #92]	; (8005484 <BSP_QSPI_ConfigFlash+0x68>)
 8005426:	782b      	ldrb	r3, [r5, #0]
 8005428:	2b02      	cmp	r3, #2
 800542a:	d024      	beq.n	8005476 <BSP_QSPI_ConfigFlash+0x5a>
      ret = BSP_ERROR_QSPI_MMP_LOCK_FAILURE;
    }
    else
    {
      /* Setup MCU transfer rate setting ***************************************************/
      hqspi.Init.SampleShifting = (Rate == BSP_QSPI_STR_TRANSFER) ? QSPI_SAMPLE_SHIFTING_HALFCYCLE : QSPI_SAMPLE_SHIFTING_NONE;
 800542c:	2a00      	cmp	r2, #0
 800542e:	4e16      	ldr	r6, [pc, #88]	; (8005488 <BSP_QSPI_ConfigFlash+0x6c>)
 8005430:	bf08      	it	eq
 8005432:	2010      	moveq	r0, #16
 8005434:	60f0      	str	r0, [r6, #12]

      if(HAL_QSPI_Init(&hqspi)!= HAL_OK)
 8005436:	4630      	mov	r0, r6
 8005438:	f002 fbe0 	bl	8007bfc <HAL_QSPI_Init>
 800543c:	b9f0      	cbnz	r0, 800547c <BSP_QSPI_ConfigFlash+0x60>
        ret = BSP_ERROR_PERIPH_FAILURE;
      }
      else
      {
        /* Setup Flash interface ***************************************************/
        switch(QSPI_Ctx[Instance].InterfaceMode)
 800543e:	786b      	ldrb	r3, [r5, #1]
 8005440:	2b03      	cmp	r3, #3
 8005442:	d10f      	bne.n	8005464 <BSP_QSPI_ConfigFlash+0x48>
        {
        case MT25TL01G_QPI_MODE :               /* 4-4-4 commands */
          if(Mode != MT25TL01G_QPI_MODE)
 8005444:	2c03      	cmp	r4, #3
 8005446:	d105      	bne.n	8005454 <BSP_QSPI_ConfigFlash+0x38>

        /* Update QSPI context if all operations are well done */
        if(ret == BSP_ERROR_NONE)
        {
          /* Update current status parameter *****************************************/
          QSPI_Ctx[Instance].IsInitialized = QSPI_ACCESS_INDIRECT;
 8005448:	2301      	movs	r3, #1
          QSPI_Ctx[Instance].InterfaceMode = Mode;
          QSPI_Ctx[Instance].TransferRate  = Rate;
 800544a:	2000      	movs	r0, #0
          QSPI_Ctx[Instance].InterfaceMode = Mode;
 800544c:	706c      	strb	r4, [r5, #1]
          QSPI_Ctx[Instance].IsInitialized = QSPI_ACCESS_INDIRECT;
 800544e:	702b      	strb	r3, [r5, #0]
          QSPI_Ctx[Instance].TransferRate  = Rate;
 8005450:	70af      	strb	r7, [r5, #2]
    }
  }

  /* Return BSP status */
  return ret;
}
 8005452:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            if(MT25TL01G_ExitQPIMode(&hqspi) != MT25TL01G_OK)
 8005454:	4630      	mov	r0, r6
 8005456:	f7ff f90d 	bl	8004674 <MT25TL01G_ExitQPIMode>
 800545a:	2800      	cmp	r0, #0
 800545c:	d0f4      	beq.n	8005448 <BSP_QSPI_ConfigFlash+0x2c>
              ret = BSP_ERROR_COMPONENT_FAILURE;
 800545e:	f06f 0004 	mvn.w	r0, #4
 8005462:	e7f6      	b.n	8005452 <BSP_QSPI_ConfigFlash+0x36>
          if(Mode == MT25TL01G_QPI_MODE)
 8005464:	2c03      	cmp	r4, #3
 8005466:	d1ef      	bne.n	8005448 <BSP_QSPI_ConfigFlash+0x2c>
            if(MT25TL01G_EnterQPIMode(&hqspi) != MT25TL01G_OK)
 8005468:	4630      	mov	r0, r6
 800546a:	f7ff f8e7 	bl	800463c <MT25TL01G_EnterQPIMode>
 800546e:	e7f4      	b.n	800545a <BSP_QSPI_ConfigFlash+0x3e>
    ret = BSP_ERROR_WRONG_PARAM;
 8005470:	f06f 0001 	mvn.w	r0, #1
 8005474:	e7ed      	b.n	8005452 <BSP_QSPI_ConfigFlash+0x36>
      ret = BSP_ERROR_QSPI_MMP_LOCK_FAILURE;
 8005476:	f06f 0019 	mvn.w	r0, #25
 800547a:	e7ea      	b.n	8005452 <BSP_QSPI_ConfigFlash+0x36>
        ret = BSP_ERROR_PERIPH_FAILURE;
 800547c:	f06f 0003 	mvn.w	r0, #3
  return ret;
 8005480:	e7e7      	b.n	8005452 <BSP_QSPI_ConfigFlash+0x36>
 8005482:	bf00      	nop
 8005484:	240051c0 	.word	0x240051c0
 8005488:	240002bc 	.word	0x240002bc

0800548c <BSP_QSPI_Init>:
{
 800548c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005490:	460d      	mov	r5, r1
 8005492:	b0a4      	sub	sp, #144	; 0x90
  if(Instance >= QSPI_INSTANCES_NUMBER)
 8005494:	4604      	mov	r4, r0
 8005496:	2800      	cmp	r0, #0
 8005498:	f040 81ac 	bne.w	80057f4 <BSP_QSPI_Init+0x368>
    if(QSPI_Ctx[Instance].IsInitialized == QSPI_ACCESS_NONE)
 800549c:	4e03      	ldr	r6, [pc, #12]	; (80054ac <BSP_QSPI_Init+0x20>)
 800549e:	7833      	ldrb	r3, [r6, #0]
 80054a0:	b133      	cbz	r3, 80054b0 <BSP_QSPI_Init+0x24>
  int32_t ret = BSP_ERROR_NONE;
 80054a2:	2000      	movs	r0, #0
}
 80054a4:	b024      	add	sp, #144	; 0x90
 80054a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80054aa:	bf00      	nop
 80054ac:	240051c0 	.word	0x240051c0
{
  GPIO_InitTypeDef gpio_init_structure;

  /*##-1- Enable peripherals and GPIO Clocks #################################*/
  /* Enable the QuadSPI memory interface clock */
  QSPI_CLK_ENABLE();
 80054b0:	4bc2      	ldr	r3, [pc, #776]	; (80057bc <BSP_QSPI_Init+0x330>)
  QSPI_BK2_D3_GPIO_CLK_ENABLE();

  /*##-2- Configure peripheral GPIO ##########################################*/
  /* QSPI CLK GPIO pin configuration  */
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 80054b2:	f04f 0904 	mov.w	r9, #4
  gpio_init_structure.Speed     = GPIO_SPEED_FREQ_VERY_HIGH;
  gpio_init_structure.Pull      = GPIO_NOPULL;
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 80054b6:	2709      	movs	r7, #9
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 80054b8:	a916      	add	r1, sp, #88	; 0x58
  QSPI_CLK_ENABLE();
 80054ba:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4

  /* QSPI CS GPIO pin configuration  */
  gpio_init_structure.Pin       = QSPI_BK1_CS_PIN;
 80054be:	f04f 0840 	mov.w	r8, #64	; 0x40
  gpio_init_structure.Pull      = GPIO_PULLUP;
  gpio_init_structure.Alternate = GPIO_AF10_QUADSPI;
 80054c2:	f04f 0a0a 	mov.w	sl, #10
  QSPI_CLK_ENABLE();
 80054c6:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80054ca:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
 80054ce:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 80054d2:	f402 4280 	and.w	r2, r2, #16384	; 0x4000
 80054d6:	9201      	str	r2, [sp, #4]
 80054d8:	9a01      	ldr	r2, [sp, #4]
  QSPI_FORCE_RESET();
 80054da:	6fda      	ldr	r2, [r3, #124]	; 0x7c
 80054dc:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80054e0:	67da      	str	r2, [r3, #124]	; 0x7c
  QSPI_RELEASE_RESET();
 80054e2:	6fda      	ldr	r2, [r3, #124]	; 0x7c
 80054e4:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 80054e8:	67da      	str	r2, [r3, #124]	; 0x7c
  QSPI_CLK_GPIO_CLK_ENABLE();
 80054ea:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80054ee:	f042 0202 	orr.w	r2, r2, #2
 80054f2:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 80054f6:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80054fa:	f002 0202 	and.w	r2, r2, #2
 80054fe:	9202      	str	r2, [sp, #8]
 8005500:	9a02      	ldr	r2, [sp, #8]
  QSPI_BK1_CS_GPIO_CLK_ENABLE();
 8005502:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8005506:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800550a:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 800550e:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8005512:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8005516:	9203      	str	r2, [sp, #12]
 8005518:	9a03      	ldr	r2, [sp, #12]
  QSPI_BK1_D0_GPIO_CLK_ENABLE();
 800551a:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 800551e:	f042 0208 	orr.w	r2, r2, #8
 8005522:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8005526:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 800552a:	f002 0208 	and.w	r2, r2, #8
 800552e:	9204      	str	r2, [sp, #16]
 8005530:	9a04      	ldr	r2, [sp, #16]
  QSPI_BK1_D1_GPIO_CLK_ENABLE();
 8005532:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8005536:	f042 0220 	orr.w	r2, r2, #32
 800553a:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 800553e:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8005542:	f002 0220 	and.w	r2, r2, #32
 8005546:	9205      	str	r2, [sp, #20]
 8005548:	9a05      	ldr	r2, [sp, #20]
  QSPI_BK1_D2_GPIO_CLK_ENABLE();
 800554a:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 800554e:	f042 0220 	orr.w	r2, r2, #32
 8005552:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8005556:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 800555a:	f002 0220 	and.w	r2, r2, #32
 800555e:	9206      	str	r2, [sp, #24]
 8005560:	9a06      	ldr	r2, [sp, #24]
  QSPI_BK1_D3_GPIO_CLK_ENABLE();
 8005562:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8005566:	f042 0220 	orr.w	r2, r2, #32
 800556a:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 800556e:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8005572:	f002 0220 	and.w	r2, r2, #32
 8005576:	9207      	str	r2, [sp, #28]
 8005578:	9a07      	ldr	r2, [sp, #28]
  QSPI_BK2_CS_GPIO_CLK_ENABLE();
 800557a:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 800557e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8005582:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8005586:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 800558a:	f002 0240 	and.w	r2, r2, #64	; 0x40
 800558e:	9208      	str	r2, [sp, #32]
 8005590:	9a08      	ldr	r2, [sp, #32]
  QSPI_BK2_D0_GPIO_CLK_ENABLE();
 8005592:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8005596:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800559a:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 800559e:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80055a2:	f002 0280 	and.w	r2, r2, #128	; 0x80
 80055a6:	9209      	str	r2, [sp, #36]	; 0x24
 80055a8:	9a09      	ldr	r2, [sp, #36]	; 0x24
  QSPI_BK2_D1_GPIO_CLK_ENABLE();
 80055aa:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80055ae:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80055b2:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 80055b6:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80055ba:	f002 0280 	and.w	r2, r2, #128	; 0x80
 80055be:	920a      	str	r2, [sp, #40]	; 0x28
 80055c0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  QSPI_BK2_D2_GPIO_CLK_ENABLE();
 80055c2:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80055c6:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80055ca:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 80055ce:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80055d2:	f002 0240 	and.w	r2, r2, #64	; 0x40
 80055d6:	920b      	str	r2, [sp, #44]	; 0x2c
 80055d8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  QSPI_BK2_D3_GPIO_CLK_ENABLE();
 80055da:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80055de:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80055e2:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 80055e6:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80055ea:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80055ee:	930c      	str	r3, [sp, #48]	; 0x30
 80055f0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 80055f2:	2302      	movs	r3, #2
 80055f4:	e9cd 9316 	strd	r9, r3, [sp, #88]	; 0x58
  gpio_init_structure.Speed     = GPIO_SPEED_FREQ_VERY_HIGH;
 80055f8:	2303      	movs	r3, #3
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 80055fa:	971a      	str	r7, [sp, #104]	; 0x68
  gpio_init_structure.Pull      = GPIO_NOPULL;
 80055fc:	e9cd 0318 	strd	r0, r3, [sp, #96]	; 0x60
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 8005600:	486f      	ldr	r0, [pc, #444]	; (80057c0 <BSP_QSPI_Init+0x334>)
 8005602:	f001 fa2d 	bl	8006a60 <HAL_GPIO_Init>
  gpio_init_structure.Pull      = GPIO_PULLUP;
 8005606:	2301      	movs	r3, #1
  HAL_GPIO_Init(QSPI_BK1_CS_GPIO_PORT, &gpio_init_structure);
 8005608:	a916      	add	r1, sp, #88	; 0x58
 800560a:	486e      	ldr	r0, [pc, #440]	; (80057c4 <BSP_QSPI_Init+0x338>)
  gpio_init_structure.Pull      = GPIO_PULLUP;
 800560c:	9318      	str	r3, [sp, #96]	; 0x60
  gpio_init_structure.Pin       = QSPI_BK1_CS_PIN;
 800560e:	f8cd 8058 	str.w	r8, [sp, #88]	; 0x58
  gpio_init_structure.Alternate = GPIO_AF10_QUADSPI;
 8005612:	f8cd a068 	str.w	sl, [sp, #104]	; 0x68
  HAL_GPIO_Init(QSPI_BK1_CS_GPIO_PORT, &gpio_init_structure);
 8005616:	f001 fa23 	bl	8006a60 <HAL_GPIO_Init>

  /* QSPI D0 GPIO pin configuration  */
  gpio_init_structure.Pin       = QSPI_BK1_D0_PIN;
 800561a:	f44f 6300 	mov.w	r3, #2048	; 0x800
  gpio_init_structure.Pull      = GPIO_NOPULL;
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
  HAL_GPIO_Init(QSPI_BK1_D0_GPIO_PORT, &gpio_init_structure);
 800561e:	a916      	add	r1, sp, #88	; 0x58
 8005620:	4869      	ldr	r0, [pc, #420]	; (80057c8 <BSP_QSPI_Init+0x33c>)
  gpio_init_structure.Pin       = QSPI_BK1_D0_PIN;
 8005622:	9316      	str	r3, [sp, #88]	; 0x58
  gpio_init_structure.Pull      = GPIO_NOPULL;
 8005624:	9418      	str	r4, [sp, #96]	; 0x60
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 8005626:	971a      	str	r7, [sp, #104]	; 0x68
  HAL_GPIO_Init(QSPI_BK1_D0_GPIO_PORT, &gpio_init_structure);
 8005628:	f001 fa1a 	bl	8006a60 <HAL_GPIO_Init>

  gpio_init_structure.Pin       = QSPI_BK2_D0_PIN;
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
  HAL_GPIO_Init(QSPI_BK2_D0_GPIO_PORT, &gpio_init_structure);
 800562c:	a916      	add	r1, sp, #88	; 0x58
  gpio_init_structure.Pin       = QSPI_BK2_D0_PIN;
 800562e:	f8cd 9058 	str.w	r9, [sp, #88]	; 0x58
  HAL_GPIO_Init(QSPI_BK2_D0_GPIO_PORT, &gpio_init_structure);
 8005632:	4866      	ldr	r0, [pc, #408]	; (80057cc <BSP_QSPI_Init+0x340>)

  /* QSPI D1 GPIO pin configuration  */
  gpio_init_structure.Pin       = QSPI_BK1_D1_PIN;
 8005634:	f44f 7900 	mov.w	r9, #512	; 0x200
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 8005638:	971a      	str	r7, [sp, #104]	; 0x68
  HAL_GPIO_Init(QSPI_BK2_D0_GPIO_PORT, &gpio_init_structure);
 800563a:	f001 fa11 	bl	8006a60 <HAL_GPIO_Init>
  gpio_init_structure.Alternate = GPIO_AF10_QUADSPI;
  HAL_GPIO_Init(QSPI_BK1_D1_GPIO_PORT, &gpio_init_structure);
 800563e:	a916      	add	r1, sp, #88	; 0x58
 8005640:	4863      	ldr	r0, [pc, #396]	; (80057d0 <BSP_QSPI_Init+0x344>)
  gpio_init_structure.Pin       = QSPI_BK1_D1_PIN;
 8005642:	f8cd 9058 	str.w	r9, [sp, #88]	; 0x58
  gpio_init_structure.Alternate = GPIO_AF10_QUADSPI;
 8005646:	f8cd a068 	str.w	sl, [sp, #104]	; 0x68
  HAL_GPIO_Init(QSPI_BK1_D1_GPIO_PORT, &gpio_init_structure);
 800564a:	f001 fa09 	bl	8006a60 <HAL_GPIO_Init>

  gpio_init_structure.Pin       = QSPI_BK2_D1_PIN;
 800564e:	2308      	movs	r3, #8
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
  HAL_GPIO_Init(QSPI_BK2_D1_GPIO_PORT, &gpio_init_structure);
 8005650:	a916      	add	r1, sp, #88	; 0x58
 8005652:	485e      	ldr	r0, [pc, #376]	; (80057cc <BSP_QSPI_Init+0x340>)
  gpio_init_structure.Pin       = QSPI_BK2_D1_PIN;
 8005654:	9316      	str	r3, [sp, #88]	; 0x58
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 8005656:	971a      	str	r7, [sp, #104]	; 0x68
  HAL_GPIO_Init(QSPI_BK2_D1_GPIO_PORT, &gpio_init_structure);
 8005658:	f001 fa02 	bl	8006a60 <HAL_GPIO_Init>

  /* QSPI D2 GPIO pin configuration  */
  gpio_init_structure.Pin       = QSPI_BK1_D2_PIN;
 800565c:	2380      	movs	r3, #128	; 0x80
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
  HAL_GPIO_Init(QSPI_BK1_D2_GPIO_PORT, &gpio_init_structure);
 800565e:	a916      	add	r1, sp, #88	; 0x58
 8005660:	485b      	ldr	r0, [pc, #364]	; (80057d0 <BSP_QSPI_Init+0x344>)
  gpio_init_structure.Pin       = QSPI_BK1_D2_PIN;
 8005662:	9316      	str	r3, [sp, #88]	; 0x58
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 8005664:	971a      	str	r7, [sp, #104]	; 0x68
  HAL_GPIO_Init(QSPI_BK1_D2_GPIO_PORT, &gpio_init_structure);
 8005666:	f001 f9fb 	bl	8006a60 <HAL_GPIO_Init>

  gpio_init_structure.Pin       = QSPI_BK2_D2_PIN;
  HAL_GPIO_Init(QSPI_BK2_D2_GPIO_PORT, &gpio_init_structure);
 800566a:	a916      	add	r1, sp, #88	; 0x58
 800566c:	4855      	ldr	r0, [pc, #340]	; (80057c4 <BSP_QSPI_Init+0x338>)
  gpio_init_structure.Pin       = QSPI_BK2_D2_PIN;
 800566e:	f8cd 9058 	str.w	r9, [sp, #88]	; 0x58
  HAL_GPIO_Init(QSPI_BK2_D2_GPIO_PORT, &gpio_init_structure);
 8005672:	f001 f9f5 	bl	8006a60 <HAL_GPIO_Init>

  /* QSPI D3 GPIO pin configuration  */
  gpio_init_structure.Pin       = QSPI_BK1_D3_PIN;
  HAL_GPIO_Init(QSPI_BK1_D3_GPIO_PORT, &gpio_init_structure);
 8005676:	a916      	add	r1, sp, #88	; 0x58
 8005678:	4855      	ldr	r0, [pc, #340]	; (80057d0 <BSP_QSPI_Init+0x344>)
  gpio_init_structure.Pin       = QSPI_BK1_D3_PIN;
 800567a:	f8cd 8058 	str.w	r8, [sp, #88]	; 0x58
  HAL_GPIO_Init(QSPI_BK1_D3_GPIO_PORT, &gpio_init_structure);
 800567e:	f001 f9ef 	bl	8006a60 <HAL_GPIO_Init>

  gpio_init_structure.Pin       = QSPI_BK2_D3_PIN;
 8005682:	f44f 4380 	mov.w	r3, #16384	; 0x4000
  HAL_GPIO_Init(QSPI_BK2_D3_GPIO_PORT, &gpio_init_structure);
 8005686:	a916      	add	r1, sp, #88	; 0x58
 8005688:	484e      	ldr	r0, [pc, #312]	; (80057c4 <BSP_QSPI_Init+0x338>)
  gpio_init_structure.Pin       = QSPI_BK2_D3_PIN;
 800568a:	9316      	str	r3, [sp, #88]	; 0x58
  HAL_GPIO_Init(QSPI_BK2_D3_GPIO_PORT, &gpio_init_structure);
 800568c:	f001 f9e8 	bl	8006a60 <HAL_GPIO_Init>

  /*##-3- Configure the NVIC for QSPI #########################################*/
  /* NVIC configuration for QSPI interrupt */
  HAL_NVIC_SetPriority(QUADSPI_IRQn, 0x0F, 0);
 8005690:	4622      	mov	r2, r4
 8005692:	210f      	movs	r1, #15
 8005694:	205c      	movs	r0, #92	; 0x5c
 8005696:	f000 fbcf 	bl	8005e38 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(QUADSPI_IRQn);
 800569a:	205c      	movs	r0, #92	; 0x5c
 800569c:	f000 fbfe 	bl	8005e9c <HAL_NVIC_EnableIRQ>
        (void)MT25TL01G_GetFlashInfo(&pInfo);
 80056a0:	a811      	add	r0, sp, #68	; 0x44
 80056a2:	f7fe ff22 	bl	80044ea <MT25TL01G_GetFlashInfo>
        qspi_init.ClockPrescaler = PrescalerTab[Init->TransferRate];
 80056a6:	786a      	ldrb	r2, [r5, #1]
 80056a8:	4b4a      	ldr	r3, [pc, #296]	; (80057d4 <BSP_QSPI_Init+0x348>)
        qspi_init.DualFlashMode  = QSPI_DUALFLASH_ENABLE;
 80056aa:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
        qspi_init.ClockPrescaler = PrescalerTab[Init->TransferRate];
 80056ae:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80056b2:	930e      	str	r3, [sp, #56]	; 0x38
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 80056b4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80056b6:	fa93 f3a3 	rbit	r3, r3
        qspi_init.SampleShifting = (Init->TransferRate == BSP_QSPI_STR_TRANSFER) ? QSPI_SAMPLE_SHIFTING_HALFCYCLE : QSPI_SAMPLE_SHIFTING_NONE;
 80056ba:	2a00      	cmp	r2, #0
  return __builtin_clz(value);
 80056bc:	fab3 f383 	clz	r3, r3
        if(MX_QSPI_Init(&hqspi, &qspi_init) != HAL_OK)
 80056c0:	a90d      	add	r1, sp, #52	; 0x34
 80056c2:	4845      	ldr	r0, [pc, #276]	; (80057d8 <BSP_QSPI_Init+0x34c>)
        qspi_init.SampleShifting = (Init->TransferRate == BSP_QSPI_STR_TRANSFER) ? QSPI_SAMPLE_SHIFTING_HALFCYCLE : QSPI_SAMPLE_SHIFTING_NONE;
 80056c4:	bf08      	it	eq
 80056c6:	2410      	moveq	r4, #16
        qspi_init.FlashSize      = (uint32_t)POSITION_VAL((uint32_t)pInfo.FlashSize) - 1U;
 80056c8:	3b01      	subs	r3, #1
        qspi_init.SampleShifting = (Init->TransferRate == BSP_QSPI_STR_TRANSFER) ? QSPI_SAMPLE_SHIFTING_HALFCYCLE : QSPI_SAMPLE_SHIFTING_NONE;
 80056ca:	940f      	str	r4, [sp, #60]	; 0x3c
        qspi_init.FlashSize      = (uint32_t)POSITION_VAL((uint32_t)pInfo.FlashSize) - 1U;
 80056cc:	930d      	str	r3, [sp, #52]	; 0x34
        if(MX_QSPI_Init(&hqspi, &qspi_init) != HAL_OK)
 80056ce:	f7ff fe73 	bl	80053b8 <MX_QSPI_Init>
 80056d2:	2800      	cmp	r0, #0
 80056d4:	f040 8091 	bne.w	80057fa <BSP_QSPI_Init+0x36e>
static int32_t QSPI_ResetMemory(uint32_t Instance)
{
  int32_t ret = BSP_ERROR_NONE;

  /* Send RESET ENABLE command in QPI mode (QUAD I/Os, 4-4-4) */
  if(MT25TL01G_ResetEnable(&hqspi, MT25TL01G_QPI_MODE) != MT25TL01G_OK)
 80056d8:	2103      	movs	r1, #3
 80056da:	483f      	ldr	r0, [pc, #252]	; (80057d8 <BSP_QSPI_Init+0x34c>)
 80056dc:	f7ff f876 	bl	80047cc <MT25TL01G_ResetEnable>
 80056e0:	2800      	cmp	r0, #0
 80056e2:	d17c      	bne.n	80057de <BSP_QSPI_Init+0x352>
  {
    ret =BSP_ERROR_COMPONENT_FAILURE;
  }/* Send RESET memory command in QPI mode (QUAD I/Os, 4-4-4) */
  else if(MT25TL01G_ResetMemory(&hqspi, MT25TL01G_QPI_MODE) != MT25TL01G_OK)
 80056e4:	2103      	movs	r1, #3
 80056e6:	483c      	ldr	r0, [pc, #240]	; (80057d8 <BSP_QSPI_Init+0x34c>)
 80056e8:	f7ff f891 	bl	800480e <MT25TL01G_ResetMemory>
 80056ec:	2800      	cmp	r0, #0
 80056ee:	d176      	bne.n	80057de <BSP_QSPI_Init+0x352>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }/* Wait Flash ready */
  else if(MT25TL01G_AutoPollingMemReady(&hqspi, QSPI_Ctx[Instance].InterfaceMode) != MT25TL01G_OK)
 80056f0:	7871      	ldrb	r1, [r6, #1]
 80056f2:	4839      	ldr	r0, [pc, #228]	; (80057d8 <BSP_QSPI_Init+0x34c>)
 80056f4:	f7fe ff0a 	bl	800450c <MT25TL01G_AutoPollingMemReady>
 80056f8:	4601      	mov	r1, r0
 80056fa:	2800      	cmp	r0, #0
 80056fc:	d16f      	bne.n	80057de <BSP_QSPI_Init+0x352>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }/* Send RESET ENABLE command in SPI mode (1-1-1) */
  else if(MT25TL01G_ResetEnable(&hqspi, BSP_QSPI_SPI_MODE) != MT25TL01G_OK)
 80056fe:	4836      	ldr	r0, [pc, #216]	; (80057d8 <BSP_QSPI_Init+0x34c>)
 8005700:	f7ff f864 	bl	80047cc <MT25TL01G_ResetEnable>
 8005704:	4601      	mov	r1, r0
 8005706:	2800      	cmp	r0, #0
 8005708:	d169      	bne.n	80057de <BSP_QSPI_Init+0x352>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }/* Send RESET memory command in SPI mode (1-1-1) */
  else if(MT25TL01G_ResetMemory(&hqspi, BSP_QSPI_SPI_MODE) != MT25TL01G_OK)
 800570a:	4833      	ldr	r0, [pc, #204]	; (80057d8 <BSP_QSPI_Init+0x34c>)
 800570c:	f7ff f87f 	bl	800480e <MT25TL01G_ResetMemory>
 8005710:	4601      	mov	r1, r0
 8005712:	2800      	cmp	r0, #0
 8005714:	d163      	bne.n	80057de <BSP_QSPI_Init+0x352>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }
  else
  {
    QSPI_Ctx[Instance].IsInitialized = QSPI_ACCESS_INDIRECT;  /* After reset S/W setting to indirect access   */
 8005716:	2301      	movs	r3, #1
    QSPI_Ctx[Instance].InterfaceMode = BSP_QSPI_SPI_MODE;     /* After reset H/W back to SPI mode by default  */
    QSPI_Ctx[Instance].TransferRate  = BSP_QSPI_STR_TRANSFER; /* After reset S/W setting to STR mode          */
 8005718:	70b0      	strb	r0, [r6, #2]
        else if(MT25TL01G_AutoPollingMemReady(&hqspi, QSPI_Ctx[Instance].InterfaceMode) != MT25TL01G_OK)
 800571a:	482f      	ldr	r0, [pc, #188]	; (80057d8 <BSP_QSPI_Init+0x34c>)
    QSPI_Ctx[Instance].IsInitialized = QSPI_ACCESS_INDIRECT;  /* After reset S/W setting to indirect access   */
 800571c:	8033      	strh	r3, [r6, #0]
        else if(MT25TL01G_AutoPollingMemReady(&hqspi, QSPI_Ctx[Instance].InterfaceMode) != MT25TL01G_OK)
 800571e:	f7fe fef5 	bl	800450c <MT25TL01G_AutoPollingMemReady>
 8005722:	2800      	cmp	r0, #0
 8005724:	d15b      	bne.n	80057de <BSP_QSPI_Init+0x352>
        else if(MT25TL01G_Enter4BytesAddressMode(&hqspi, QSPI_Ctx[Instance].InterfaceMode) != MT25TL01G_OK)
 8005726:	7871      	ldrb	r1, [r6, #1]
 8005728:	482b      	ldr	r0, [pc, #172]	; (80057d8 <BSP_QSPI_Init+0x34c>)
 800572a:	f7fe ff5e 	bl	80045ea <MT25TL01G_Enter4BytesAddressMode>
 800572e:	2800      	cmp	r0, #0
 8005730:	d155      	bne.n	80057de <BSP_QSPI_Init+0x352>
    int32_t ret= BSP_ERROR_NONE;
    QSPI_CommandTypeDef s_command;
  uint16_t reg=0;

  /* Initialize the read volatile configuration register command */
  s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
 8005732:	f44f 7340 	mov.w	r3, #768	; 0x300
  uint16_t reg=0;
 8005736:	f8ad 0002 	strh.w	r0, [sp, #2]
  s_command.Instruction       = MT25TL01G_READ_VOL_CFG_REG_CMD;
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
  s_command.DataMode          = QSPI_DATA_4_LINES;
  s_command.DummyCycles       = 0;
 800573a:	901b      	str	r0, [sp, #108]	; 0x6c
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  /* Configure the command */
  if (HAL_QSPI_Command(&hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800573c:	f241 3288 	movw	r2, #5000	; 0x1388
  s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
 8005740:	931c      	str	r3, [sp, #112]	; 0x70
  s_command.Instruction       = MT25TL01G_READ_VOL_CFG_REG_CMD;
 8005742:	2385      	movs	r3, #133	; 0x85
  if (HAL_QSPI_Command(&hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8005744:	a916      	add	r1, sp, #88	; 0x58
  s_command.Instruction       = MT25TL01G_READ_VOL_CFG_REG_CMD;
 8005746:	9316      	str	r3, [sp, #88]	; 0x58
  s_command.DataMode          = QSPI_DATA_4_LINES;
 8005748:	f04f 7340 	mov.w	r3, #50331648	; 0x3000000
 800574c:	931f      	str	r3, [sp, #124]	; 0x7c
  s_command.NbData            = 2;
 800574e:	2302      	movs	r3, #2
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8005750:	e9cd 001d 	strd	r0, r0, [sp, #116]	; 0x74
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
 8005754:	e9cd 3020 	strd	r3, r0, [sp, #128]	; 0x80
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8005758:	e9cd 0022 	strd	r0, r0, [sp, #136]	; 0x88
  if (HAL_QSPI_Command(&hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800575c:	481e      	ldr	r0, [pc, #120]	; (80057d8 <BSP_QSPI_Init+0x34c>)
 800575e:	f002 fa9b 	bl	8007c98 <HAL_QSPI_Command>
 8005762:	2800      	cmp	r0, #0
 8005764:	d13b      	bne.n	80057de <BSP_QSPI_Init+0x352>
  {
    return BSP_ERROR_COMPONENT_FAILURE;
  }

  /* Reception of the data */
  if (HAL_QSPI_Receive(&hqspi, (uint8_t *)(&reg), HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8005766:	f241 3288 	movw	r2, #5000	; 0x1388
 800576a:	f10d 0102 	add.w	r1, sp, #2
 800576e:	481a      	ldr	r0, [pc, #104]	; (80057d8 <BSP_QSPI_Init+0x34c>)
 8005770:	f002 fb2e 	bl	8007dd0 <HAL_QSPI_Receive>
 8005774:	bb98      	cbnz	r0, 80057de <BSP_QSPI_Init+0x352>
  {
    return BSP_ERROR_COMPONENT_FAILURE;
  }

  /* Enable write operations */
  if (MT25TL01G_WriteEnable(&hqspi, QSPI_Ctx[Instance].InterfaceMode) != MT25TL01G_OK)
 8005776:	7871      	ldrb	r1, [r6, #1]
 8005778:	4817      	ldr	r0, [pc, #92]	; (80057d8 <BSP_QSPI_Init+0x34c>)
 800577a:	f7fe fef2 	bl	8004562 <MT25TL01G_WriteEnable>
 800577e:	bb70      	cbnz	r0, 80057de <BSP_QSPI_Init+0x352>
  {
    return BSP_ERROR_COMPONENT_FAILURE;
  }

  /* Update volatile configuration register (with new dummy cycles) */
  s_command.Instruction = MT25TL01G_WRITE_VOL_CFG_REG_CMD;
 8005780:	2381      	movs	r3, #129	; 0x81
  MODIFY_REG(reg, 0xF0F0, ((MT25TL01G_DUMMY_CYCLES_READ_QUAD << 4) |
                               (MT25TL01G_DUMMY_CYCLES_READ_QUAD << 12)));

  /* Configure the write volatile configuration register command */
  if (HAL_QSPI_Command(&hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8005782:	f241 3288 	movw	r2, #5000	; 0x1388
 8005786:	a916      	add	r1, sp, #88	; 0x58
 8005788:	4813      	ldr	r0, [pc, #76]	; (80057d8 <BSP_QSPI_Init+0x34c>)
  s_command.Instruction = MT25TL01G_WRITE_VOL_CFG_REG_CMD;
 800578a:	9316      	str	r3, [sp, #88]	; 0x58
  MODIFY_REG(reg, 0xF0F0, ((MT25TL01G_DUMMY_CYCLES_READ_QUAD << 4) |
 800578c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8005790:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8005794:	051b      	lsls	r3, r3, #20
 8005796:	0d1b      	lsrs	r3, r3, #20
 8005798:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800579c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80057a0:	f8ad 3002 	strh.w	r3, [sp, #2]
  if (HAL_QSPI_Command(&hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80057a4:	f002 fa78 	bl	8007c98 <HAL_QSPI_Command>
 80057a8:	b9c8      	cbnz	r0, 80057de <BSP_QSPI_Init+0x352>
  {
    return BSP_ERROR_COMPONENT_FAILURE;
  }

  /* Transmission of the data */
  if (HAL_QSPI_Transmit(&hqspi, (uint8_t *)(&reg), HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80057aa:	f241 3288 	movw	r2, #5000	; 0x1388
 80057ae:	f10d 0102 	add.w	r1, sp, #2
 80057b2:	4809      	ldr	r0, [pc, #36]	; (80057d8 <BSP_QSPI_Init+0x34c>)
 80057b4:	f002 fab3 	bl	8007d1e <HAL_QSPI_Transmit>
 80057b8:	e010      	b.n	80057dc <BSP_QSPI_Init+0x350>
 80057ba:	bf00      	nop
 80057bc:	58024400 	.word	0x58024400
 80057c0:	58020400 	.word	0x58020400
 80057c4:	58021800 	.word	0x58021800
 80057c8:	58020c00 	.word	0x58020c00
 80057cc:	58021c00 	.word	0x58021c00
 80057d0:	58021400 	.word	0x58021400
 80057d4:	08022a18 	.word	0x08022a18
 80057d8:	240002bc 	.word	0x240002bc
 80057dc:	b110      	cbz	r0, 80057e4 <BSP_QSPI_Init+0x358>
            ret = BSP_ERROR_COMPONENT_FAILURE;
 80057de:	f06f 0004 	mvn.w	r0, #4
 80057e2:	e65f      	b.n	80054a4 <BSP_QSPI_Init+0x18>
          if(BSP_QSPI_ConfigFlash(Instance, Init->InterfaceMode, Init->TransferRate) != BSP_ERROR_NONE)
 80057e4:	786a      	ldrb	r2, [r5, #1]
 80057e6:	7829      	ldrb	r1, [r5, #0]
 80057e8:	f7ff fe18 	bl	800541c <BSP_QSPI_ConfigFlash>
 80057ec:	2800      	cmp	r0, #0
 80057ee:	f43f ae58 	beq.w	80054a2 <BSP_QSPI_Init+0x16>
 80057f2:	e7f4      	b.n	80057de <BSP_QSPI_Init+0x352>
    ret = BSP_ERROR_WRONG_PARAM;
 80057f4:	f06f 0001 	mvn.w	r0, #1
 80057f8:	e654      	b.n	80054a4 <BSP_QSPI_Init+0x18>
          ret = BSP_ERROR_PERIPH_FAILURE;
 80057fa:	f06f 0003 	mvn.w	r0, #3
  return ret;
 80057fe:	e651      	b.n	80054a4 <BSP_QSPI_Init+0x18>

08005800 <BSP_SDRAM_DeInit>:
  * @brief  DeInitializes the SDRAM device.
  * @param Instance  SDRAM Instance
  * @retval BSP status
  */
int32_t BSP_SDRAM_DeInit(uint32_t Instance)
{
 8005800:	b510      	push	{r4, lr}
  int32_t ret = BSP_ERROR_NONE;

  if(Instance >=SDRAM_INSTANCES_NBR)
 8005802:	4604      	mov	r4, r0
 8005804:	b970      	cbnz	r0, 8005824 <BSP_SDRAM_DeInit+0x24>
    ret =  BSP_ERROR_WRONG_PARAM;
  }
  else
  {
    /* SDRAM device de-initialization */
    hsdram[Instance].Instance = FMC_SDRAM_DEVICE;
 8005806:	4b09      	ldr	r3, [pc, #36]	; (800582c <BSP_SDRAM_DeInit+0x2c>)
 8005808:	4809      	ldr	r0, [pc, #36]	; (8005830 <BSP_SDRAM_DeInit+0x30>)
 800580a:	6003      	str	r3, [r0, #0]

    (void)HAL_SDRAM_DeInit(&hsdram[Instance]);
 800580c:	f003 fed4 	bl	80095b8 <HAL_SDRAM_DeInit>
  static MDMA_HandleTypeDef mdma_handle;

  /* Prevent unused argument(s) compilation warning */
  UNUSED(hsdram);
  /* Disable NVIC configuration for MDMA interrupt */
  HAL_NVIC_DisableIRQ(SDRAM_MDMAx_IRQn);
 8005810:	207a      	movs	r0, #122	; 0x7a
 8005812:	f000 fb51 	bl	8005eb8 <HAL_NVIC_DisableIRQ>

  /* Deinitialize the stream for new transfer */
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
 8005816:	4807      	ldr	r0, [pc, #28]	; (8005834 <BSP_SDRAM_DeInit+0x34>)
 8005818:	4b07      	ldr	r3, [pc, #28]	; (8005838 <BSP_SDRAM_DeInit+0x38>)
 800581a:	6003      	str	r3, [r0, #0]
  (void)HAL_MDMA_DeInit(&mdma_handle);
 800581c:	f002 f8bb 	bl	8007996 <HAL_MDMA_DeInit>
    ret = BSP_ERROR_NONE;
 8005820:	4620      	mov	r0, r4
}
 8005822:	bd10      	pop	{r4, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
 8005824:	f06f 0001 	mvn.w	r0, #1
  return ret;
 8005828:	e7fb      	b.n	8005822 <BSP_SDRAM_DeInit+0x22>
 800582a:	bf00      	nop
 800582c:	52004140 	.word	0x52004140
 8005830:	240051cc 	.word	0x240051cc
 8005834:	24005200 	.word	0x24005200
 8005838:	52000040 	.word	0x52000040

0800583c <MX_SDRAM_Init>:
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
 800583c:	2201      	movs	r2, #1
 800583e:	4915      	ldr	r1, [pc, #84]	; (8005894 <MX_SDRAM_Init+0x58>)
  hsdram->Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
 8005840:	4b15      	ldr	r3, [pc, #84]	; (8005898 <MX_SDRAM_Init+0x5c>)
{
 8005842:	b510      	push	{r4, lr}
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
 8005844:	e9c0 1200 	strd	r1, r2, [r0]
  hSdram->Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_9;
 8005848:	6082      	str	r2, [r0, #8]
  hSdram->Init.MemoryDataWidth    = FMC_SDRAM_MEM_BUS_WIDTH_32;
 800584a:	2104      	movs	r1, #4
 800584c:	2220      	movs	r2, #32
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
 800584e:	2440      	movs	r4, #64	; 0x40
{
 8005850:	b088      	sub	sp, #32
  hSdram->Init.MemoryDataWidth    = FMC_SDRAM_MEM_BUS_WIDTH_32;
 8005852:	e9c0 1203 	strd	r1, r2, [r0, #12]
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
 8005856:	f44f 72c0 	mov.w	r2, #384	; 0x180
 800585a:	e9c0 4205 	strd	r4, r2, [r0, #20]
  hSdram->Init.SDClockPeriod      = FMC_SDRAM_CLOCK_PERIOD_2;
 800585e:	2200      	movs	r2, #0
 8005860:	f44f 6400 	mov.w	r4, #2048	; 0x800
 8005864:	e9c0 2407 	strd	r2, r4, [r0, #28]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
 8005868:	f44f 5480 	mov.w	r4, #4096	; 0x1000
 800586c:	6244      	str	r4, [r0, #36]	; 0x24
  hsdram->Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
 800586e:	629a      	str	r2, [r3, #40]	; 0x28
  sdram_timing.ExitSelfRefreshDelay = 7;
 8005870:	2207      	movs	r2, #7
 8005872:	2302      	movs	r3, #2
  sdram_timing.RowCycleDelay        = 7;
 8005874:	e9cd 1203 	strd	r1, r2, [sp, #12]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
 8005878:	4469      	add	r1, sp
  sdram_timing.RCDDelay             = 2;
 800587a:	9307      	str	r3, [sp, #28]
  sdram_timing.ExitSelfRefreshDelay = 7;
 800587c:	e9cd 3201 	strd	r3, r2, [sp, #4]
  sdram_timing.RPDelay              = 2;
 8005880:	e9cd 3305 	strd	r3, r3, [sp, #20]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
 8005884:	f003 fe70 	bl	8009568 <HAL_SDRAM_Init>
}
 8005888:	3800      	subs	r0, #0
 800588a:	bf18      	it	ne
 800588c:	2001      	movne	r0, #1
 800588e:	b008      	add	sp, #32
 8005890:	bd10      	pop	{r4, pc}
 8005892:	bf00      	nop
 8005894:	52004140 	.word	0x52004140
 8005898:	240051cc 	.word	0x240051cc

0800589c <BSP_SDRAM_Init>:
{
 800589c:	b5f0      	push	{r4, r5, r6, r7, lr}
  if(Instance >=SDRAM_INSTANCES_NBR)
 800589e:	4605      	mov	r5, r0
{
 80058a0:	b08f      	sub	sp, #60	; 0x3c
  if(Instance >=SDRAM_INSTANCES_NBR)
 80058a2:	2800      	cmp	r0, #0
 80058a4:	f040 80dd 	bne.w	8005a62 <BSP_SDRAM_Init+0x1c6>
  __HAL_RCC_FMC_CLK_ENABLE();
 80058a8:	4b71      	ldr	r3, [pc, #452]	; (8005a70 <BSP_SDRAM_Init+0x1d4>)
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
 80058aa:	2703      	movs	r7, #3
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 80058ac:	a909      	add	r1, sp, #36	; 0x24
 80058ae:	4871      	ldr	r0, [pc, #452]	; (8005a74 <BSP_SDRAM_Init+0x1d8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 80058b0:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
  mdma_handle.Init.Request                  = MDMA_REQUEST_SW;
 80058b4:	4c70      	ldr	r4, [pc, #448]	; (8005a78 <BSP_SDRAM_Init+0x1dc>)
  __HAL_RCC_FMC_CLK_ENABLE();
 80058b6:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
 80058ba:	4e70      	ldr	r6, [pc, #448]	; (8005a7c <BSP_SDRAM_Init+0x1e0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 80058bc:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
 80058c0:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 80058c4:	f402 5280 	and.w	r2, r2, #4096	; 0x1000
 80058c8:	9201      	str	r2, [sp, #4]
 80058ca:	9a01      	ldr	r2, [sp, #4]
  SDRAM_MDMAx_CLK_ENABLE();
 80058cc:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 80058d0:	f042 0201 	orr.w	r2, r2, #1
 80058d4:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
 80058d8:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 80058dc:	f002 0201 	and.w	r2, r2, #1
 80058e0:	9202      	str	r2, [sp, #8]
 80058e2:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80058e4:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80058e8:	f042 0208 	orr.w	r2, r2, #8
 80058ec:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 80058f0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80058f4:	f002 0208 	and.w	r2, r2, #8
 80058f8:	9203      	str	r2, [sp, #12]
 80058fa:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80058fc:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8005900:	f042 0210 	orr.w	r2, r2, #16
 8005904:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8005908:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 800590c:	f002 0210 	and.w	r2, r2, #16
 8005910:	9204      	str	r2, [sp, #16]
 8005912:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8005914:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8005918:	f042 0220 	orr.w	r2, r2, #32
 800591c:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8005920:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8005924:	f002 0220 	and.w	r2, r2, #32
 8005928:	9205      	str	r2, [sp, #20]
 800592a:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 800592c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8005930:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8005934:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8005938:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 800593c:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8005940:	9206      	str	r2, [sp, #24]
 8005942:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8005944:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8005948:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800594c:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8005950:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8005954:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8005958:	9207      	str	r2, [sp, #28]
 800595a:	9a07      	ldr	r2, [sp, #28]
  __HAL_RCC_GPIOI_CLK_ENABLE();
 800595c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8005960:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005964:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
  gpio_init_structure.Pull      = GPIO_PULLUP;
 8005968:	2202      	movs	r2, #2
  __HAL_RCC_GPIOI_CLK_ENABLE();
 800596a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800596e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005972:	9308      	str	r3, [sp, #32]
 8005974:	9b08      	ldr	r3, [sp, #32]
  gpio_init_structure.Pull      = GPIO_PULLUP;
 8005976:	2301      	movs	r3, #1
 8005978:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
 800597c:	230c      	movs	r3, #12
 800597e:	e9cd 730c 	strd	r7, r3, [sp, #48]	; 0x30
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 8005982:	f24c 7303 	movw	r3, #50947	; 0xc703
 8005986:	9309      	str	r3, [sp, #36]	; 0x24
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 8005988:	f001 f86a 	bl	8006a60 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 800598c:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 8005990:	a909      	add	r1, sp, #36	; 0x24
 8005992:	483b      	ldr	r0, [pc, #236]	; (8005a80 <BSP_SDRAM_Init+0x1e4>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 8005994:	9309      	str	r3, [sp, #36]	; 0x24
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 8005996:	f001 f863 	bl	8006a60 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 800599a:	f64f 033f 	movw	r3, #63551	; 0xf83f
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 800599e:	a909      	add	r1, sp, #36	; 0x24
 80059a0:	4838      	ldr	r0, [pc, #224]	; (8005a84 <BSP_SDRAM_Init+0x1e8>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 80059a2:	9309      	str	r3, [sp, #36]	; 0x24
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 80059a4:	f001 f85c 	bl	8006a60 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 /*| GPIO_PIN_3 */|\
 80059a8:	f248 1337 	movw	r3, #33079	; 0x8137
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 80059ac:	a909      	add	r1, sp, #36	; 0x24
 80059ae:	4836      	ldr	r0, [pc, #216]	; (8005a88 <BSP_SDRAM_Init+0x1ec>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 /*| GPIO_PIN_3 */|\
 80059b0:	9309      	str	r3, [sp, #36]	; 0x24
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 80059b2:	f001 f855 	bl	8006a60 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 | GPIO_PIN_8 | GPIO_PIN_9 |\
 80059b6:	f64f 73e0 	movw	r3, #65504	; 0xffe0
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 80059ba:	a909      	add	r1, sp, #36	; 0x24
 80059bc:	4833      	ldr	r0, [pc, #204]	; (8005a8c <BSP_SDRAM_Init+0x1f0>)
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 | GPIO_PIN_8 | GPIO_PIN_9 |\
 80059be:	9309      	str	r3, [sp, #36]	; 0x24
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 80059c0:	f001 f84e 	bl	8006a60 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 80059c4:	f240 63ff 	movw	r3, #1791	; 0x6ff
  HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 80059c8:	a909      	add	r1, sp, #36	; 0x24
 80059ca:	4831      	ldr	r0, [pc, #196]	; (8005a90 <BSP_SDRAM_Init+0x1f4>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 80059cc:	9309      	str	r3, [sp, #36]	; 0x24
  HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 80059ce:	f001 f847 	bl	8006a60 <HAL_GPIO_Init>
  mdma_handle.Init.TransferTriggerMode      = MDMA_BLOCK_TRANSFER;
 80059d2:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 80059d6:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
  mdma_handle.Init.DestinationInc           = MDMA_DEST_INC_WORD;
 80059da:	f240 2002 	movw	r0, #514	; 0x202
 80059de:	f640 0208 	movw	r2, #2056	; 0x808
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
 80059e2:	6334      	str	r4, [r6, #48]	; 0x30
 80059e4:	6426      	str	r6, [r4, #64]	; 0x40
  mdma_handle.Init.TransferTriggerMode      = MDMA_BLOCK_TRANSFER;
 80059e6:	e9c4 1301 	strd	r1, r3, [r4, #4]
  mdma_handle.Init.DestinationInc           = MDMA_DEST_INC_WORD;
 80059ea:	e9c4 0205 	strd	r0, r2, [r4, #20]
  mdma_handle.Init.Priority                 = MDMA_PRIORITY_HIGH;
 80059ee:	2380      	movs	r3, #128	; 0x80
  mdma_handle.Init.SourceDataSize           = MDMA_SRC_DATASIZE_WORD;
 80059f0:	2220      	movs	r2, #32
  (void)HAL_MDMA_DeInit(&mdma_handle);
 80059f2:	4620      	mov	r0, r4
  mdma_handle.Init.BufferTransferLength     = 128;
 80059f4:	62a3      	str	r3, [r4, #40]	; 0x28
  mdma_handle.Init.DestDataSize             = MDMA_DEST_DATASIZE_WORD;
 80059f6:	e9c4 2307 	strd	r2, r3, [r4, #28]
  mdma_handle.Init.Endianness               = MDMA_LITTLE_ENDIANNESS_PRESERVE;
 80059fa:	e9c4 3503 	strd	r3, r5, [r4, #12]
  mdma_handle.Init.DataAlignment            = MDMA_DATAALIGN_PACKENABLE;
 80059fe:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
  mdma_handle.Instance                      = SDRAM_MDMAx_CHANNEL;
 8005a02:	4b24      	ldr	r3, [pc, #144]	; (8005a94 <BSP_SDRAM_Init+0x1f8>)
  mdma_handle.Init.DataAlignment            = MDMA_DATAALIGN_PACKENABLE;
 8005a04:	6262      	str	r2, [r4, #36]	; 0x24
  mdma_handle.Instance                      = SDRAM_MDMAx_CHANNEL;
 8005a06:	6023      	str	r3, [r4, #0]
  mdma_handle.Init.DestBurst                = MDMA_DEST_BURST_SINGLE;
 8005a08:	e9c4 550b 	strd	r5, r5, [r4, #44]	; 0x2c
  mdma_handle.Init.DestBlockAddressOffset   = 0;
 8005a0c:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
  (void)HAL_MDMA_DeInit(&mdma_handle);
 8005a10:	f001 ffc1 	bl	8007996 <HAL_MDMA_DeInit>
  (void)HAL_MDMA_Init(&mdma_handle);
 8005a14:	4620      	mov	r0, r4
 8005a16:	f001 ff4f 	bl	80078b8 <HAL_MDMA_Init>
  HAL_NVIC_SetPriority(SDRAM_MDMAx_IRQn, BSP_SDRAM_IT_PRIORITY, 0);
 8005a1a:	462a      	mov	r2, r5
 8005a1c:	210f      	movs	r1, #15
 8005a1e:	207a      	movs	r0, #122	; 0x7a
 8005a20:	f000 fa0a 	bl	8005e38 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(SDRAM_MDMAx_IRQn);
 8005a24:	207a      	movs	r0, #122	; 0x7a
 8005a26:	f000 fa39 	bl	8005e9c <HAL_NVIC_EnableIRQ>
    if(MX_SDRAM_Init(&hsdram[0]) != HAL_OK)
 8005a2a:	4630      	mov	r0, r6
 8005a2c:	f7ff ff06 	bl	800583c <MX_SDRAM_Init>
 8005a30:	b9d0      	cbnz	r0, 8005a68 <BSP_SDRAM_Init+0x1cc>
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
 8005a32:	4919      	ldr	r1, [pc, #100]	; (8005a98 <BSP_SDRAM_Init+0x1fc>)
 8005a34:	2308      	movs	r3, #8
      pRegMode.RefreshMode     = IS42S32800J_AUTOREFRESH_MODE_CMD;
 8005a36:	e9c1 3700 	strd	r3, r7, [r1]
      pRegMode.RefreshRate     = REFRESH_COUNT;
 8005a3a:	f240 6303 	movw	r3, #1539	; 0x603
      pRegMode.BurstType       = IS42S32800J_BURST_TYPE_SEQUENTIAL;
 8005a3e:	6108      	str	r0, [r1, #16]
      pRegMode.BurstLength     = IS42S32800J_BURST_LENGTH_1;
 8005a40:	e9c1 3002 	strd	r3, r0, [r1, #8]
      pRegMode.CASLatency      = IS42S32800J_CAS_LATENCY_3;
 8005a44:	2330      	movs	r3, #48	; 0x30
      pRegMode.OperationMode   = IS42S32800J_OPERATING_MODE_STANDARD;
 8005a46:	e9c1 3005 	strd	r3, r0, [r1, #20]
      pRegMode.WriteBurstMode  = IS42S32800J_WRITEBURST_MODE_SINGLE;
 8005a4a:	f44f 7300 	mov.w	r3, #512	; 0x200
      if(IS42S32800J_Init(&hsdram[0], &pRegMode) != IS42S32800J_OK)
 8005a4e:	4630      	mov	r0, r6
      pRegMode.WriteBurstMode  = IS42S32800J_WRITEBURST_MODE_SINGLE;
 8005a50:	61cb      	str	r3, [r1, #28]
      if(IS42S32800J_Init(&hsdram[0], &pRegMode) != IS42S32800J_OK)
 8005a52:	f7fe fd1d 	bl	8004490 <IS42S32800J_Init>
        ret =  BSP_ERROR_COMPONENT_FAILURE;
 8005a56:	2800      	cmp	r0, #0
 8005a58:	bf18      	it	ne
 8005a5a:	f06f 0004 	mvnne.w	r0, #4
}
 8005a5e:	b00f      	add	sp, #60	; 0x3c
 8005a60:	bdf0      	pop	{r4, r5, r6, r7, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
 8005a62:	f06f 0001 	mvn.w	r0, #1
 8005a66:	e7fa      	b.n	8005a5e <BSP_SDRAM_Init+0x1c2>
      ret = BSP_ERROR_NO_INIT;
 8005a68:	f04f 30ff 	mov.w	r0, #4294967295
 8005a6c:	e7f7      	b.n	8005a5e <BSP_SDRAM_Init+0x1c2>
 8005a6e:	bf00      	nop
 8005a70:	58024400 	.word	0x58024400
 8005a74:	58020c00 	.word	0x58020c00
 8005a78:	2400526c 	.word	0x2400526c
 8005a7c:	240051cc 	.word	0x240051cc
 8005a80:	58021000 	.word	0x58021000
 8005a84:	58021400 	.word	0x58021400
 8005a88:	58021800 	.word	0x58021800
 8005a8c:	58021c00 	.word	0x58021c00
 8005a90:	58022000 	.word	0x58022000
 8005a94:	52000040 	.word	0x52000040
 8005a98:	240052d8 	.word	0x240052d8

08005a9c <BSP_TS_Init>:
  * @param  Instance TS instance. Could be only 0.
  * @param  TS_Init  TS Init structure
  * @retval BSP status
  */
int32_t BSP_TS_Init(uint32_t Instance, TS_Init_t *TS_Init)
{
 8005a9c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005aa0:	460c      	mov	r4, r1
 8005aa2:	b08c      	sub	sp, #48	; 0x30
  int32_t ret = BSP_ERROR_NONE;

  if((Instance >=TS_INSTANCES_NBR) || (TS_Init->Width == 0U) ||( TS_Init->Width > TS_MAX_WIDTH) ||\
 8005aa4:	4606      	mov	r6, r0
 8005aa6:	2800      	cmp	r0, #0
 8005aa8:	d171      	bne.n	8005b8e <BSP_TS_Init+0xf2>
 8005aaa:	680b      	ldr	r3, [r1, #0]
 8005aac:	1e5a      	subs	r2, r3, #1
 8005aae:	f5b2 7f48 	cmp.w	r2, #800	; 0x320
 8005ab2:	d26c      	bcs.n	8005b8e <BSP_TS_Init+0xf2>
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
 8005ab4:	684a      	ldr	r2, [r1, #4]
  if((Instance >=TS_INSTANCES_NBR) || (TS_Init->Width == 0U) ||( TS_Init->Width > TS_MAX_WIDTH) ||\
 8005ab6:	1e51      	subs	r1, r2, #1
 8005ab8:	f5b1 7ff0 	cmp.w	r1, #480	; 0x1e0
 8005abc:	d267      	bcs.n	8005b8e <BSP_TS_Init+0xf2>
                         (TS_Init->Accuracy > TS_MIN((TS_Init->Width), (TS_Init->Height))))
 8005abe:	4293      	cmp	r3, r2
 8005ac0:	bf28      	it	cs
 8005ac2:	4613      	movcs	r3, r2
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
 8005ac4:	68e2      	ldr	r2, [r4, #12]
 8005ac6:	429a      	cmp	r2, r3
 8005ac8:	d861      	bhi.n	8005b8e <BSP_TS_Init+0xf2>
  int32_t ret;
  FT6X06_IO_t              IOCtx;
  static FT6X06_Object_t   FT6X06Obj;
  FT6X06_Capabilities_t    Cap;
  uint32_t id, i;
  uint32_t const i2c_address[] = {TS_I2C_ADDRESS, TS_I2C_ADDRESS_A02};
 8005aca:	2370      	movs	r3, #112	; 0x70
 8005acc:	2254      	movs	r2, #84	; 0x54
 8005ace:	f10d 0a04 	add.w	sl, sp, #4

  for(i = 0; i < 2UL; i++)
  {
    IOCtx.Address     = (uint16_t)i2c_address[i];

    if(FT6X06_RegisterBusIO (&FT6X06Obj, &IOCtx) != FT6X06_OK)
 8005ad2:	4f32      	ldr	r7, [pc, #200]	; (8005b9c <BSP_TS_Init+0x100>)
    }
    else
    {

      (void)FT6X06_GetCapabilities(&FT6X06Obj, &Cap);
      Ts_CompObj[Instance] = &FT6X06Obj;
 8005ad4:	f8df 80e4 	ldr.w	r8, [pc, #228]	; 8005bbc <BSP_TS_Init+0x120>
      Ts_Drv = (TS_Drv_t *) &FT6X06_TS_Driver;
 8005ad8:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005bc0 <BSP_TS_Init+0x124>
  uint32_t const i2c_address[] = {TS_I2C_ADDRESS, TS_I2C_ADDRESS_A02};
 8005adc:	e9cd 2301 	strd	r2, r3, [sp, #4]
  IOCtx.Init        = BSP_I2C4_Init;
 8005ae0:	4b2f      	ldr	r3, [pc, #188]	; (8005ba0 <BSP_TS_Init+0x104>)
 8005ae2:	9306      	str	r3, [sp, #24]
  IOCtx.DeInit      = BSP_I2C4_DeInit;
 8005ae4:	4b2f      	ldr	r3, [pc, #188]	; (8005ba4 <BSP_TS_Init+0x108>)
 8005ae6:	9307      	str	r3, [sp, #28]
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
 8005ae8:	4b2f      	ldr	r3, [pc, #188]	; (8005ba8 <BSP_TS_Init+0x10c>)
 8005aea:	930a      	str	r3, [sp, #40]	; 0x28
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
 8005aec:	4b2f      	ldr	r3, [pc, #188]	; (8005bac <BSP_TS_Init+0x110>)
 8005aee:	9309      	str	r3, [sp, #36]	; 0x24
  IOCtx.GetTick     = BSP_GetTick;
 8005af0:	4b2f      	ldr	r3, [pc, #188]	; (8005bb0 <BSP_TS_Init+0x114>)
 8005af2:	930b      	str	r3, [sp, #44]	; 0x2c
    IOCtx.Address     = (uint16_t)i2c_address[i];
 8005af4:	f85a 3b04 	ldr.w	r3, [sl], #4
    if(FT6X06_RegisterBusIO (&FT6X06Obj, &IOCtx) != FT6X06_OK)
 8005af8:	a906      	add	r1, sp, #24
 8005afa:	4828      	ldr	r0, [pc, #160]	; (8005b9c <BSP_TS_Init+0x100>)
    IOCtx.Address     = (uint16_t)i2c_address[i];
 8005afc:	f8ad 3020 	strh.w	r3, [sp, #32]
    if(FT6X06_RegisterBusIO (&FT6X06Obj, &IOCtx) != FT6X06_OK)
 8005b00:	f7fe fbcc 	bl	800429c <FT6X06_RegisterBusIO>
 8005b04:	b118      	cbz	r0, 8005b0e <BSP_TS_Init+0x72>
  for(i = 0; i < 2UL; i++)
 8005b06:	2e01      	cmp	r6, #1
 8005b08:	d044      	beq.n	8005b94 <BSP_TS_Init+0xf8>
 8005b0a:	2601      	movs	r6, #1
 8005b0c:	e7f2      	b.n	8005af4 <BSP_TS_Init+0x58>
    else if(FT6X06_ReadID(&FT6X06Obj, &id) != FT6X06_OK)
 8005b0e:	4669      	mov	r1, sp
 8005b10:	4638      	mov	r0, r7
 8005b12:	f7fe fb0c 	bl	800412e <FT6X06_ReadID>
 8005b16:	2800      	cmp	r0, #0
 8005b18:	d1f5      	bne.n	8005b06 <BSP_TS_Init+0x6a>
    else if(id != FT6X06_ID)
 8005b1a:	9b00      	ldr	r3, [sp, #0]
 8005b1c:	2b11      	cmp	r3, #17
 8005b1e:	d1f2      	bne.n	8005b06 <BSP_TS_Init+0x6a>
      (void)FT6X06_GetCapabilities(&FT6X06Obj, &Cap);
 8005b20:	a903      	add	r1, sp, #12
 8005b22:	4638      	mov	r0, r7
 8005b24:	f7fe fab0 	bl	8004088 <FT6X06_GetCapabilities>
      Ts_Drv = (TS_Drv_t *) &FT6X06_TS_Driver;
 8005b28:	4b22      	ldr	r3, [pc, #136]	; (8005bb4 <BSP_TS_Init+0x118>)

      if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT6X06_OK)
 8005b2a:	4638      	mov	r0, r7
      Ts_CompObj[Instance] = &FT6X06Obj;
 8005b2c:	f8c8 7000 	str.w	r7, [r8]
      Ts_Drv = (TS_Drv_t *) &FT6X06_TS_Driver;
 8005b30:	f8c9 3000 	str.w	r3, [r9]
      if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT6X06_OK)
 8005b34:	681b      	ldr	r3, [r3, #0]
 8005b36:	4798      	blx	r3
 8005b38:	4605      	mov	r5, r0
 8005b3a:	2800      	cmp	r0, #0
 8005b3c:	d1e3      	bne.n	8005b06 <BSP_TS_Init+0x6a>
      Ts_Ctx[Instance].Width             = TS_Init->Width;
 8005b3e:	6823      	ldr	r3, [r4, #0]
      if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
 8005b40:	a906      	add	r1, sp, #24
      Ts_Ctx[Instance].Width             = TS_Init->Width;
 8005b42:	4e1d      	ldr	r6, [pc, #116]	; (8005bb8 <BSP_TS_Init+0x11c>)
      if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
 8005b44:	f8d8 0000 	ldr.w	r0, [r8]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
 8005b48:	6033      	str	r3, [r6, #0]
      Ts_Ctx[Instance].Height            = TS_Init->Height;
 8005b4a:	6863      	ldr	r3, [r4, #4]
 8005b4c:	6073      	str	r3, [r6, #4]
      Ts_Ctx[Instance].Orientation       = TS_Init->Orientation;
 8005b4e:	68a3      	ldr	r3, [r4, #8]
 8005b50:	60b3      	str	r3, [r6, #8]
      Ts_Ctx[Instance].Accuracy          = TS_Init->Accuracy;
 8005b52:	68e3      	ldr	r3, [r4, #12]
 8005b54:	60f3      	str	r3, [r6, #12]
      if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
 8005b56:	f8d9 3000 	ldr.w	r3, [r9]
 8005b5a:	69db      	ldr	r3, [r3, #28]
 8005b5c:	4798      	blx	r3
 8005b5e:	2800      	cmp	r0, #0
 8005b60:	da02      	bge.n	8005b68 <BSP_TS_Init+0xcc>
        ret = BSP_ERROR_COMPONENT_FAILURE;
 8005b62:	f06f 0504 	mvn.w	r5, #4
 8005b66:	e00e      	b.n	8005b86 <BSP_TS_Init+0xea>
        Ts_Ctx[Instance].MaxX = Capabilities.MaxXl;
 8005b68:	9b07      	ldr	r3, [sp, #28]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
 8005b6a:	6822      	ldr	r2, [r4, #0]
        Ts_Ctx[Instance].MaxX = Capabilities.MaxXl;
 8005b6c:	6133      	str	r3, [r6, #16]
        Ts_Ctx[Instance].MaxY = Capabilities.MaxYl;
 8005b6e:	9b08      	ldr	r3, [sp, #32]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
 8005b70:	6861      	ldr	r1, [r4, #4]
        Ts_Ctx[Instance].MaxY = Capabilities.MaxYl;
 8005b72:	6173      	str	r3, [r6, #20]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
 8005b74:	68e3      	ldr	r3, [r4, #12]
 8005b76:	441a      	add	r2, r3
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
 8005b78:	440b      	add	r3, r1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
 8005b7a:	3201      	adds	r2, #1
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
 8005b7c:	3301      	adds	r3, #1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
 8005b7e:	61b2      	str	r2, [r6, #24]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
 8005b80:	6273      	str	r3, [r6, #36]	; 0x24
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
 8005b82:	e9c6 2307 	strd	r2, r3, [r6, #28]
}
 8005b86:	4628      	mov	r0, r5
 8005b88:	b00c      	add	sp, #48	; 0x30
 8005b8a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    ret = BSP_ERROR_WRONG_PARAM;
 8005b8e:	f06f 0501 	mvn.w	r5, #1
  return ret;
 8005b92:	e7f8      	b.n	8005b86 <BSP_TS_Init+0xea>
      ret = BSP_ERROR_NO_INIT;
 8005b94:	f04f 35ff 	mov.w	r5, #4294967295
 8005b98:	e7f5      	b.n	8005b86 <BSP_TS_Init+0xea>
 8005b9a:	bf00      	nop
 8005b9c:	240052f8 	.word	0x240052f8
 8005ba0:	0800509d 	.word	0x0800509d
 8005ba4:	08005009 	.word	0x08005009
 8005ba8:	08005381 	.word	0x08005381
 8005bac:	0800534d 	.word	0x0800534d
 8005bb0:	080053b5 	.word	0x080053b5
 8005bb4:	24000018 	.word	0x24000018
 8005bb8:	24005324 	.word	0x24005324
 8005bbc:	24005320 	.word	0x24005320
 8005bc0:	2400534c 	.word	0x2400534c

08005bc4 <BSP_TS_GetState>:
{
 8005bc4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8005bc8:	460e      	mov	r6, r1
  if(Instance >= TS_INSTANCES_NBR)
 8005bca:	2800      	cmp	r0, #0
 8005bcc:	d151      	bne.n	8005c72 <BSP_TS_GetState+0xae>
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
 8005bce:	4b2a      	ldr	r3, [pc, #168]	; (8005c78 <BSP_TS_GetState+0xb4>)
 8005bd0:	a901      	add	r1, sp, #4
 8005bd2:	4a2a      	ldr	r2, [pc, #168]	; (8005c7c <BSP_TS_GetState+0xb8>)
 8005bd4:	681b      	ldr	r3, [r3, #0]
 8005bd6:	6810      	ldr	r0, [r2, #0]
 8005bd8:	691b      	ldr	r3, [r3, #16]
 8005bda:	4798      	blx	r3
 8005bdc:	2800      	cmp	r0, #0
 8005bde:	db45      	blt.n	8005c6c <BSP_TS_GetState+0xa8>
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
 8005be0:	4927      	ldr	r1, [pc, #156]	; (8005c80 <BSP_TS_GetState+0xbc>)
    else if(state.TouchDetected != 0U)
 8005be2:	9801      	ldr	r0, [sp, #4]
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
 8005be4:	f8d1 c018 	ldr.w	ip, [r1, #24]
      y_diff = (TS_State->TouchY > Ts_Ctx[Instance].PreviousY[0])?
 8005be8:	6a0f      	ldr	r7, [r1, #32]
    else if(state.TouchDetected != 0U)
 8005bea:	2800      	cmp	r0, #0
 8005bec:	d03a      	beq.n	8005c64 <BSP_TS_GetState+0xa0>
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
 8005bee:	688b      	ldr	r3, [r1, #8]
        x_oriented = Ts_Ctx[Instance].MaxX - x_oriented - 1UL;
 8005bf0:	f8d1 8010 	ldr.w	r8, [r1, #16]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
 8005bf4:	071c      	lsls	r4, r3, #28
        y_oriented = Ts_Ctx[Instance].MaxY - y_oriented - 1UL;
 8005bf6:	f8d1 e014 	ldr.w	lr, [r1, #20]
      y_oriented = state.TouchY;
 8005bfa:	e9dd 5202 	ldrd	r5, r2, [sp, #8]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
 8005bfe:	bf42      	ittt	mi
 8005c00:	462c      	movmi	r4, r5
        x_oriented = state.TouchY;
 8005c02:	4615      	movmi	r5, r2
        y_oriented = state.TouchX;
 8005c04:	4622      	movmi	r2, r4
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_X) == TS_SWAP_X)
 8005c06:	079c      	lsls	r4, r3, #30
        x_oriented = Ts_Ctx[Instance].MaxX - x_oriented - 1UL;
 8005c08:	bf44      	itt	mi
 8005c0a:	f108 34ff 	addmi.w	r4, r8, #4294967295
 8005c0e:	1b65      	submi	r5, r4, r5
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_Y) == TS_SWAP_Y)
 8005c10:	075b      	lsls	r3, r3, #29
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
 8005c12:	680c      	ldr	r4, [r1, #0]
        y_oriented = Ts_Ctx[Instance].MaxY - y_oriented - 1UL;
 8005c14:	bf48      	it	mi
 8005c16:	f10e 33ff 	addmi.w	r3, lr, #4294967295
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
 8005c1a:	fb05 f404 	mul.w	r4, r5, r4
        y_oriented = Ts_Ctx[Instance].MaxY - y_oriented - 1UL;
 8005c1e:	bf48      	it	mi
 8005c20:	1a9a      	submi	r2, r3, r2
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
 8005c22:	684b      	ldr	r3, [r1, #4]
      TS_State->TouchDetected = state.TouchDetected;
 8005c24:	6030      	str	r0, [r6, #0]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
 8005c26:	4353      	muls	r3, r2
      if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
 8005c28:	68c8      	ldr	r0, [r1, #12]
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
 8005c2a:	fbb4 f4f8 	udiv	r4, r4, r8
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
 8005c2e:	fbb3 f3fe 	udiv	r3, r3, lr
               (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
 8005c32:	4564      	cmp	r4, ip
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
 8005c34:	6074      	str	r4, [r6, #4]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
 8005c36:	60b3      	str	r3, [r6, #8]
               (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
 8005c38:	bf8c      	ite	hi
 8005c3a:	eba4 050c 	subhi.w	r5, r4, ip
 8005c3e:	ebac 0504 	subls.w	r5, ip, r4
               (TS_State->TouchY - Ts_Ctx[Instance].PreviousY[0]):
 8005c42:	42bb      	cmp	r3, r7
 8005c44:	bf8c      	ite	hi
 8005c46:	1bda      	subhi	r2, r3, r7
 8005c48:	1afa      	subls	r2, r7, r3
      if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
 8005c4a:	42a8      	cmp	r0, r5
 8005c4c:	d301      	bcc.n	8005c52 <BSP_TS_GetState+0x8e>
 8005c4e:	4290      	cmp	r0, r2
 8005c50:	d205      	bcs.n	8005c5e <BSP_TS_GetState+0x9a>
        Ts_Ctx[Instance].PreviousX[0] = TS_State->TouchX;
 8005c52:	618c      	str	r4, [r1, #24]
        Ts_Ctx[Instance].PreviousY[0] = TS_State->TouchY;
 8005c54:	620b      	str	r3, [r1, #32]
  int32_t ret = BSP_ERROR_NONE;
 8005c56:	2000      	movs	r0, #0
}
 8005c58:	b004      	add	sp, #16
 8005c5a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
 8005c5e:	e9c6 c701 	strd	ip, r7, [r6, #4]
 8005c62:	e7f8      	b.n	8005c56 <BSP_TS_GetState+0x92>
      TS_State->TouchX = Ts_Ctx[Instance].PreviousX[0];
 8005c64:	e9c6 0c00 	strd	r0, ip, [r6]
      TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
 8005c68:	60b7      	str	r7, [r6, #8]
 8005c6a:	e7f5      	b.n	8005c58 <BSP_TS_GetState+0x94>
      ret = BSP_ERROR_COMPONENT_FAILURE;
 8005c6c:	f06f 0004 	mvn.w	r0, #4
 8005c70:	e7f2      	b.n	8005c58 <BSP_TS_GetState+0x94>
    ret = BSP_ERROR_WRONG_PARAM;
 8005c72:	f06f 0001 	mvn.w	r0, #1
  return ret;
 8005c76:	e7ef      	b.n	8005c58 <BSP_TS_GetState+0x94>
 8005c78:	2400534c 	.word	0x2400534c
 8005c7c:	24005320 	.word	0x24005320
 8005c80:	24005324 	.word	0x24005324

08005c84 <SystemInit>:
  */
void SystemInit (void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
 8005c84:	4b2d      	ldr	r3, [pc, #180]	; (8005d3c <SystemInit+0xb8>)
 8005c86:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 8005c8a:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8005c8e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  #endif

    /*SEVONPEND enabled so that an interrupt coming from the CPU(n) interrupt signal is
     detectable by the CPU after a WFI/WFE instruction.*/
 SCB->SCR |= SCB_SCR_SEVONPEND_Msk;
 8005c92:	691a      	ldr	r2, [r3, #16]
 8005c94:	f042 0210 	orr.w	r2, r2, #16
 8005c98:	611a      	str	r2, [r3, #16]

#ifdef CORE_CM7
  /* Reset the RCC clock configuration to the default reset state ------------*/
   /* Increasing the CPU frequency */
  if(FLASH_LATENCY_DEFAULT  > (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
 8005c9a:	4a29      	ldr	r2, [pc, #164]	; (8005d40 <SystemInit+0xbc>)
 8005c9c:	6813      	ldr	r3, [r2, #0]
 8005c9e:	f003 030f 	and.w	r3, r3, #15
 8005ca2:	2b06      	cmp	r3, #6
 8005ca4:	d805      	bhi.n	8005cb2 <SystemInit+0x2e>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
	MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
 8005ca6:	6813      	ldr	r3, [r2, #0]
 8005ca8:	f023 030f 	bic.w	r3, r3, #15
 8005cac:	f043 0307 	orr.w	r3, r3, #7
 8005cb0:	6013      	str	r3, [r2, #0]
  }

  /* Set HSION bit */
  RCC->CR |= RCC_CR_HSION;
 8005cb2:	4b24      	ldr	r3, [pc, #144]	; (8005d44 <SystemInit+0xc0>)
 8005cb4:	681a      	ldr	r2, [r3, #0]
 8005cb6:	f042 0201 	orr.w	r2, r2, #1
 8005cba:	601a      	str	r2, [r3, #0]

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
 8005cbc:	2200      	movs	r2, #0
 8005cbe:	611a      	str	r2, [r3, #16]

  /* Reset HSEON, HSECSSON, CSION, RC48ON, CSIKERON, PLL1ON, PLL2ON and PLL3ON bits */
  RCC->CR &= 0xEAF6ED7FU;
 8005cc0:	4a21      	ldr	r2, [pc, #132]	; (8005d48 <SystemInit+0xc4>)
 8005cc2:	6819      	ldr	r1, [r3, #0]
 8005cc4:	400a      	ands	r2, r1

   /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLASH_LATENCY_DEFAULT  < (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
 8005cc6:	491e      	ldr	r1, [pc, #120]	; (8005d40 <SystemInit+0xbc>)
  RCC->CR &= 0xEAF6ED7FU;
 8005cc8:	601a      	str	r2, [r3, #0]
  if(FLASH_LATENCY_DEFAULT  < (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
 8005cca:	680a      	ldr	r2, [r1, #0]
 8005ccc:	0712      	lsls	r2, r2, #28
 8005cce:	d505      	bpl.n	8005cdc <SystemInit+0x58>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
	MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
 8005cd0:	680a      	ldr	r2, [r1, #0]
 8005cd2:	f022 020f 	bic.w	r2, r2, #15
 8005cd6:	f042 0207 	orr.w	r2, r2, #7
 8005cda:	600a      	str	r2, [r1, #0]
  }

  /* Reset D1CFGR register */
  RCC->D1CFGR = 0x00000000;
 8005cdc:	2200      	movs	r2, #0

  /* Reset D3CFGR register */
  RCC->D3CFGR = 0x00000000;

  /* Reset PLLCKSELR register */
  RCC->PLLCKSELR = 0x02020200;
 8005cde:	491b      	ldr	r1, [pc, #108]	; (8005d4c <SystemInit+0xc8>)
  RCC->D1CFGR = 0x00000000;
 8005ce0:	619a      	str	r2, [r3, #24]
  RCC->D2CFGR = 0x00000000;
 8005ce2:	61da      	str	r2, [r3, #28]
  RCC->D3CFGR = 0x00000000;
 8005ce4:	621a      	str	r2, [r3, #32]
  RCC->PLLCKSELR = 0x02020200;
 8005ce6:	6299      	str	r1, [r3, #40]	; 0x28

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x01FF0000;
 8005ce8:	4919      	ldr	r1, [pc, #100]	; (8005d50 <SystemInit+0xcc>)
 8005cea:	62d9      	str	r1, [r3, #44]	; 0x2c
  /* Reset PLL1DIVR register */
  RCC->PLL1DIVR = 0x01010280;
 8005cec:	4919      	ldr	r1, [pc, #100]	; (8005d54 <SystemInit+0xd0>)
 8005cee:	6319      	str	r1, [r3, #48]	; 0x30
  /* Reset PLL1FRACR register */
  RCC->PLL1FRACR = 0x00000000;
 8005cf0:	635a      	str	r2, [r3, #52]	; 0x34

  /* Reset PLL2DIVR register */
  RCC->PLL2DIVR = 0x01010280;
 8005cf2:	6399      	str	r1, [r3, #56]	; 0x38

  /* Reset PLL2FRACR register */

  RCC->PLL2FRACR = 0x00000000;
 8005cf4:	63da      	str	r2, [r3, #60]	; 0x3c
  /* Reset PLL3DIVR register */
  RCC->PLL3DIVR = 0x01010280;
 8005cf6:	6419      	str	r1, [r3, #64]	; 0x40

  /* Reset PLL3FRACR register */
  RCC->PLL3FRACR = 0x00000000;
 8005cf8:	645a      	str	r2, [r3, #68]	; 0x44

  /* Reset HSEBYP bit */
  RCC->CR &= 0xFFFBFFFFU;
 8005cfa:	6819      	ldr	r1, [r3, #0]
 8005cfc:	f421 2180 	bic.w	r1, r1, #262144	; 0x40000
 8005d00:	6019      	str	r1, [r3, #0]

  /* Disable all interrupts */
  RCC->CIER = 0x00000000;
 8005d02:	661a      	str	r2, [r3, #96]	; 0x60

  /* Enable CortexM7 HSEM EXTI line (line 78)*/
  EXTI_D2->EMR3 |= 0x4000UL;
 8005d04:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 8005d08:	f8d2 30e4 	ldr.w	r3, [r2, #228]	; 0xe4
 8005d0c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8005d10:	f8c2 30e4 	str.w	r3, [r2, #228]	; 0xe4


  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
 8005d14:	4b10      	ldr	r3, [pc, #64]	; (8005d58 <SystemInit+0xd4>)
 8005d16:	681b      	ldr	r3, [r3, #0]
 8005d18:	0c1b      	lsrs	r3, r3, #16
 8005d1a:	041b      	lsls	r3, r3, #16
 8005d1c:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8005d20:	d203      	bcs.n	8005d2a <SystemInit+0xa6>
  {
    /* if stm32h7 revY*/
    /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
    *((__IO uint32_t*)0x51008108) = 0x000000001U;
 8005d22:	4b0e      	ldr	r3, [pc, #56]	; (8005d5c <SystemInit+0xd8>)
 8005d24:	2201      	movs	r2, #1
 8005d26:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108
  /*
   * Disable the FMC bank1 (enabled after reset).
   * This, prevents CPU speculation access on this bank which blocks the use of FMC during
   * 24us. During this time the others FMC master (such as LTDC) cannot use it!
   */
  FMC_Bank1_R->BTCR[0] = 0x000030D2;
 8005d2a:	4b0d      	ldr	r3, [pc, #52]	; (8005d60 <SystemInit+0xdc>)
 8005d2c:	f243 02d2 	movw	r2, #12498	; 0x30d2
 8005d30:	601a      	str	r2, [r3, #0]

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = D1_AXISRAM_BASE  | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AXI-RAM */
#else
  SCB->VTOR = FLASH_BANK1_BASE | VECT_TAB_OFFSET;       /* Vector Table Relocation in Internal FLASH */
 8005d32:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8005d36:	4b01      	ldr	r3, [pc, #4]	; (8005d3c <SystemInit+0xb8>)
 8005d38:	609a      	str	r2, [r3, #8]
#else
#error Please #define CORE_CM4 or CORE_CM7
#endif
#endif

}
 8005d3a:	4770      	bx	lr
 8005d3c:	e000ed00 	.word	0xe000ed00
 8005d40:	52002000 	.word	0x52002000
 8005d44:	58024400 	.word	0x58024400
 8005d48:	eaf6ed7f 	.word	0xeaf6ed7f
 8005d4c:	02020200 	.word	0x02020200
 8005d50:	01ff0000 	.word	0x01ff0000
 8005d54:	01010280 	.word	0x01010280
 8005d58:	5c001000 	.word	0x5c001000
 8005d5c:	51008000 	.word	0x51008000
 8005d60:	52004000 	.word	0x52004000

08005d64 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8005d64:	b510      	push	{r4, lr}
   __HAL_ART_CONFIG_BASE_ADDRESS(0x08100000UL);  /* Configure the Cortex-M4 ART Base address to the Flash Bank 2 : */
   __HAL_ART_ENABLE();                           /* Enable the Cortex-M4 ART */
#endif /* DUAL_CORE &&  CORE_CM4 */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8005d66:	2003      	movs	r0, #3
 8005d68:	f000 f854 	bl	8005e14 <HAL_NVIC_SetPriorityGrouping>

  /* Update the SystemCoreClock global variable */
#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
 8005d6c:	f002 fc00 	bl	8008570 <HAL_RCC_GetSysClockFreq>
 8005d70:	490f      	ldr	r1, [pc, #60]	; (8005db0 <HAL_Init+0x4c>)
 8005d72:	4a10      	ldr	r2, [pc, #64]	; (8005db4 <HAL_Init+0x50>)
 8005d74:	698b      	ldr	r3, [r1, #24]
 8005d76:	f3c3 2303 	ubfx	r3, r3, #8, #4
 8005d7a:	5cd3      	ldrb	r3, [r2, r3]
 8005d7c:	f003 031f 	and.w	r3, r3, #31
 8005d80:	40d8      	lsrs	r0, r3
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

  /* Update the SystemD2Clock global variable */
#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
 8005d82:	698b      	ldr	r3, [r1, #24]
 8005d84:	f003 030f 	and.w	r3, r3, #15
 8005d88:	5cd3      	ldrb	r3, [r2, r3]
 8005d8a:	4a0b      	ldr	r2, [pc, #44]	; (8005db8 <HAL_Init+0x54>)
 8005d8c:	f003 031f 	and.w	r3, r3, #31
 8005d90:	fa20 f303 	lsr.w	r3, r0, r3
 8005d94:	6013      	str	r3, [r2, #0]
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
 8005d96:	4b09      	ldr	r3, [pc, #36]	; (8005dbc <HAL_Init+0x58>)
 8005d98:	6018      	str	r0, [r3, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 8005d9a:	2000      	movs	r0, #0
 8005d9c:	f7fb fb54 	bl	8001448 <HAL_InitTick>
 8005da0:	4604      	mov	r4, r0
 8005da2:	b918      	cbnz	r0, 8005dac <HAL_Init+0x48>
  {
    return HAL_ERROR;
  }

  /* Init the low level hardware */
  HAL_MspInit();
 8005da4:	f7fb f8e0 	bl	8000f68 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8005da8:	4620      	mov	r0, r4
 8005daa:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8005dac:	2401      	movs	r4, #1
 8005dae:	e7fb      	b.n	8005da8 <HAL_Init+0x44>
 8005db0:	58024400 	.word	0x58024400
 8005db4:	08022a20 	.word	0x08022a20
 8005db8:	2400004c 	.word	0x2400004c
 8005dbc:	24000048 	.word	0x24000048

08005dc0 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += (uint32_t)uwTickFreq;
 8005dc0:	4a03      	ldr	r2, [pc, #12]	; (8005dd0 <HAL_IncTick+0x10>)
 8005dc2:	4b04      	ldr	r3, [pc, #16]	; (8005dd4 <HAL_IncTick+0x14>)
 8005dc4:	6811      	ldr	r1, [r2, #0]
 8005dc6:	781b      	ldrb	r3, [r3, #0]
 8005dc8:	440b      	add	r3, r1
 8005dca:	6013      	str	r3, [r2, #0]
}
 8005dcc:	4770      	bx	lr
 8005dce:	bf00      	nop
 8005dd0:	24005350 	.word	0x24005350
 8005dd4:	24000050 	.word	0x24000050

08005dd8 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8005dd8:	4b01      	ldr	r3, [pc, #4]	; (8005de0 <HAL_GetTick+0x8>)
 8005dda:	6818      	ldr	r0, [r3, #0]
}
 8005ddc:	4770      	bx	lr
 8005dde:	bf00      	nop
 8005de0:	24005350 	.word	0x24005350

08005de4 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8005de4:	b538      	push	{r3, r4, r5, lr}
 8005de6:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8005de8:	f7ff fff6 	bl	8005dd8 <HAL_GetTick>
 8005dec:	4605      	mov	r5, r0
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8005dee:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8005df0:	bf1e      	ittt	ne
 8005df2:	4b04      	ldrne	r3, [pc, #16]	; (8005e04 <HAL_Delay+0x20>)
 8005df4:	781b      	ldrbne	r3, [r3, #0]
 8005df6:	18e4      	addne	r4, r4, r3
  }

  while ((HAL_GetTick() - tickstart) < wait)
 8005df8:	f7ff ffee 	bl	8005dd8 <HAL_GetTick>
 8005dfc:	1b43      	subs	r3, r0, r5
 8005dfe:	42a3      	cmp	r3, r4
 8005e00:	d3fa      	bcc.n	8005df8 <HAL_Delay+0x14>
  {
  }
}
 8005e02:	bd38      	pop	{r3, r4, r5, pc}
 8005e04:	24000050 	.word	0x24000050

08005e08 <HAL_GetREVID>:
  * @brief  Returns the device revision identifier.
  * @retval Device revision identifier
  */
uint32_t HAL_GetREVID(void)
{
   return((DBGMCU->IDCODE) >> 16);
 8005e08:	4b01      	ldr	r3, [pc, #4]	; (8005e10 <HAL_GetREVID+0x8>)
 8005e0a:	6818      	ldr	r0, [r3, #0]
}
 8005e0c:	0c00      	lsrs	r0, r0, #16
 8005e0e:	4770      	bx	lr
 8005e10:	5c001000 	.word	0x5c001000

08005e14 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8005e14:	4907      	ldr	r1, [pc, #28]	; (8005e34 <HAL_NVIC_SetPriorityGrouping+0x20>)
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8005e16:	0203      	lsls	r3, r0, #8
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8005e18:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8005e1a:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8005e1e:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8005e22:	0412      	lsls	r2, r2, #16
 8005e24:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8005e26:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8005e28:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8005e2c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 8005e30:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8005e32:	4770      	bx	lr
 8005e34:	e000ed00 	.word	0xe000ed00

08005e38 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8005e38:	4b16      	ldr	r3, [pc, #88]	; (8005e94 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8005e3a:	b530      	push	{r4, r5, lr}
 8005e3c:	68dc      	ldr	r4, [r3, #12]
 8005e3e:	f3c4 2402 	ubfx	r4, r4, #8, #3
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8005e42:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8005e46:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8005e48:	2d04      	cmp	r5, #4
 8005e4a:	bf28      	it	cs
 8005e4c:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8005e4e:	2b06      	cmp	r3, #6
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8005e50:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8005e54:	bf8c      	ite	hi
 8005e56:	3c03      	subhi	r4, #3
 8005e58:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8005e5a:	fa03 f505 	lsl.w	r5, r3, r5
  if ((int32_t)(IRQn) >= 0)
 8005e5e:	2800      	cmp	r0, #0
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8005e60:	fa03 f304 	lsl.w	r3, r3, r4
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8005e64:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8005e68:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8005e6c:	fa01 f104 	lsl.w	r1, r1, r4
 8005e70:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8005e74:	ea4f 1303 	mov.w	r3, r3, lsl #4
 8005e78:	b2db      	uxtb	r3, r3
  if ((int32_t)(IRQn) >= 0)
 8005e7a:	db06      	blt.n	8005e8a <HAL_NVIC_SetPriority+0x52>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8005e7c:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 8005e80:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 8005e84:	f880 3300 	strb.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8005e88:	bd30      	pop	{r4, r5, pc}
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8005e8a:	f000 000f 	and.w	r0, r0, #15
 8005e8e:	4a02      	ldr	r2, [pc, #8]	; (8005e98 <HAL_NVIC_SetPriority+0x60>)
 8005e90:	5413      	strb	r3, [r2, r0]
 8005e92:	e7f9      	b.n	8005e88 <HAL_NVIC_SetPriority+0x50>
 8005e94:	e000ed00 	.word	0xe000ed00
 8005e98:	e000ed14 	.word	0xe000ed14

08005e9c <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8005e9c:	2800      	cmp	r0, #0
 8005e9e:	db08      	blt.n	8005eb2 <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8005ea0:	2301      	movs	r3, #1
 8005ea2:	0942      	lsrs	r2, r0, #5
 8005ea4:	f000 001f 	and.w	r0, r0, #31
 8005ea8:	fa03 f000 	lsl.w	r0, r3, r0
 8005eac:	4b01      	ldr	r3, [pc, #4]	; (8005eb4 <HAL_NVIC_EnableIRQ+0x18>)
 8005eae:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8005eb2:	4770      	bx	lr
 8005eb4:	e000e100 	.word	0xe000e100

08005eb8 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8005eb8:	2800      	cmp	r0, #0
 8005eba:	db0d      	blt.n	8005ed8 <HAL_NVIC_DisableIRQ+0x20>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8005ebc:	0943      	lsrs	r3, r0, #5
 8005ebe:	2201      	movs	r2, #1
 8005ec0:	f000 001f 	and.w	r0, r0, #31
 8005ec4:	3320      	adds	r3, #32
 8005ec6:	fa02 f000 	lsl.w	r0, r2, r0
 8005eca:	4a04      	ldr	r2, [pc, #16]	; (8005edc <HAL_NVIC_DisableIRQ+0x24>)
 8005ecc:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 8005ed0:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8005ed4:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
 8005ed8:	4770      	bx	lr
 8005eda:	bf00      	nop
 8005edc:	e000e100 	.word	0xe000e100

08005ee0 <HAL_MPU_Disable>:
  __ASM volatile ("dmb 0xF":::"memory");
 8005ee0:	f3bf 8f5f 	dmb	sy
{
  /* Make sure outstanding transfers are done */
  __DMB();

  /* Disable fault exceptions */
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
 8005ee4:	4b04      	ldr	r3, [pc, #16]	; (8005ef8 <HAL_MPU_Disable+0x18>)
 8005ee6:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8005ee8:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8005eec:	625a      	str	r2, [r3, #36]	; 0x24

  /* Disable the MPU and clear the control register*/
  MPU->CTRL = 0;
 8005eee:	2200      	movs	r2, #0
 8005ef0:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
}
 8005ef4:	4770      	bx	lr
 8005ef6:	bf00      	nop
 8005ef8:	e000ed00 	.word	0xe000ed00

08005efc <HAL_MPU_Enable>:
  * @retval None
  */
void HAL_MPU_Enable(uint32_t MPU_Control)
{
  /* Enable the MPU */
  MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
 8005efc:	4b06      	ldr	r3, [pc, #24]	; (8005f18 <HAL_MPU_Enable+0x1c>)
 8005efe:	f040 0001 	orr.w	r0, r0, #1
 8005f02:	f8c3 0094 	str.w	r0, [r3, #148]	; 0x94

  /* Enable fault exceptions */
  SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
 8005f06:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8005f08:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8005f0c:	625a      	str	r2, [r3, #36]	; 0x24
  __ASM volatile ("dsb 0xF":::"memory");
 8005f0e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8005f12:	f3bf 8f6f 	isb	sy

  /* Ensure MPU setting take effects */
  __DSB();
  __ISB();
}
 8005f16:	4770      	bx	lr
 8005f18:	e000ed00 	.word	0xe000ed00

08005f1c <HAL_MPU_ConfigRegion>:
  /* Check the parameters */
  assert_param(IS_MPU_REGION_NUMBER(MPU_Init->Number));
  assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));

  /* Set the Region number */
  MPU->RNR = MPU_Init->Number;
 8005f1c:	7843      	ldrb	r3, [r0, #1]
 8005f1e:	4a14      	ldr	r2, [pc, #80]	; (8005f70 <HAL_MPU_ConfigRegion+0x54>)
{
 8005f20:	b510      	push	{r4, lr}
  MPU->RNR = MPU_Init->Number;
 8005f22:	f8c2 3098 	str.w	r3, [r2, #152]	; 0x98

  if ((MPU_Init->Enable) != 0UL)
 8005f26:	7801      	ldrb	r1, [r0, #0]
 8005f28:	b1e9      	cbz	r1, 8005f66 <HAL_MPU_ConfigRegion+0x4a>
    assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
    assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
    assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
    assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));

    MPU->RBAR = MPU_Init->BaseAddress;
 8005f2a:	6843      	ldr	r3, [r0, #4]
 8005f2c:	f8c2 309c 	str.w	r3, [r2, #156]	; 0x9c
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 8005f30:	7ac3      	ldrb	r3, [r0, #11]
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 8005f32:	7b04      	ldrb	r4, [r0, #12]
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 8005f34:	061b      	lsls	r3, r3, #24
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 8005f36:	ea43 7304 	orr.w	r3, r3, r4, lsl #28
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
                ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8005f3a:	430b      	orrs	r3, r1
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
 8005f3c:	7a81      	ldrb	r1, [r0, #10]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8005f3e:	ea43 43c1 	orr.w	r3, r3, r1, lsl #19
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
 8005f42:	7b41      	ldrb	r1, [r0, #13]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8005f44:	ea43 4381 	orr.w	r3, r3, r1, lsl #18
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
 8005f48:	7b81      	ldrb	r1, [r0, #14]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8005f4a:	ea43 4341 	orr.w	r3, r3, r1, lsl #17
                ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
 8005f4e:	7bc1      	ldrb	r1, [r0, #15]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8005f50:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
 8005f54:	7a41      	ldrb	r1, [r0, #9]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8005f56:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8005f5a:	7a01      	ldrb	r1, [r0, #8]
 8005f5c:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 8005f60:	f8c2 30a0 	str.w	r3, [r2, #160]	; 0xa0
  else
  {
    MPU->RBAR = 0x00;
    MPU->RASR = 0x00;
  }
}
 8005f64:	bd10      	pop	{r4, pc}
    MPU->RBAR = 0x00;
 8005f66:	f8c2 109c 	str.w	r1, [r2, #156]	; 0x9c
    MPU->RASR = 0x00;
 8005f6a:	f8c2 10a0 	str.w	r1, [r2, #160]	; 0xa0
}
 8005f6e:	e7f9      	b.n	8005f64 <HAL_MPU_ConfigRegion+0x48>
 8005f70:	e000ed00 	.word	0xe000ed00

08005f74 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8005f74:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8005f76:	4604      	mov	r4, r0
 8005f78:	b908      	cbnz	r0, 8005f7e <HAL_CRC_Init+0xa>
  {
    return HAL_ERROR;
 8005f7a:	2001      	movs	r0, #1
  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;

  /* Return function status */
  return HAL_OK;
}
 8005f7c:	bd10      	pop	{r4, pc}
  if (hcrc->State == HAL_CRC_STATE_RESET)
 8005f7e:	7f43      	ldrb	r3, [r0, #29]
 8005f80:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005f84:	b913      	cbnz	r3, 8005f8c <HAL_CRC_Init+0x18>
    hcrc->Lock = HAL_UNLOCKED;
 8005f86:	7702      	strb	r2, [r0, #28]
    HAL_CRC_MspInit(hcrc);
 8005f88:	f7fb f806 	bl	8000f98 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_BUSY;
 8005f8c:	2302      	movs	r3, #2
 8005f8e:	7763      	strb	r3, [r4, #29]
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
 8005f90:	7923      	ldrb	r3, [r4, #4]
 8005f92:	b9e3      	cbnz	r3, 8005fce <HAL_CRC_Init+0x5a>
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
 8005f94:	6823      	ldr	r3, [r4, #0]
 8005f96:	4a13      	ldr	r2, [pc, #76]	; (8005fe4 <HAL_CRC_Init+0x70>)
 8005f98:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
 8005f9a:	689a      	ldr	r2, [r3, #8]
 8005f9c:	f022 0218 	bic.w	r2, r2, #24
 8005fa0:	609a      	str	r2, [r3, #8]
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 8005fa2:	7962      	ldrb	r2, [r4, #5]
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 8005fa4:	6823      	ldr	r3, [r4, #0]
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 8005fa6:	b9d2      	cbnz	r2, 8005fde <HAL_CRC_Init+0x6a>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 8005fa8:	f04f 32ff 	mov.w	r2, #4294967295
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 8005fac:	611a      	str	r2, [r3, #16]
  return HAL_OK;
 8005fae:	2000      	movs	r0, #0
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 8005fb0:	689a      	ldr	r2, [r3, #8]
 8005fb2:	6961      	ldr	r1, [r4, #20]
 8005fb4:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8005fb8:	430a      	orrs	r2, r1
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 8005fba:	69a1      	ldr	r1, [r4, #24]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 8005fbc:	609a      	str	r2, [r3, #8]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 8005fbe:	689a      	ldr	r2, [r3, #8]
 8005fc0:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8005fc4:	430a      	orrs	r2, r1
 8005fc6:	609a      	str	r2, [r3, #8]
  hcrc->State = HAL_CRC_STATE_READY;
 8005fc8:	2301      	movs	r3, #1
 8005fca:	7763      	strb	r3, [r4, #29]
  return HAL_OK;
 8005fcc:	e7d6      	b.n	8005f7c <HAL_CRC_Init+0x8>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
 8005fce:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
 8005fd2:	4620      	mov	r0, r4
 8005fd4:	f000 f808 	bl	8005fe8 <HAL_CRCEx_Polynomial_Set>
 8005fd8:	2800      	cmp	r0, #0
 8005fda:	d0e2      	beq.n	8005fa2 <HAL_CRC_Init+0x2e>
 8005fdc:	e7cd      	b.n	8005f7a <HAL_CRC_Init+0x6>
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 8005fde:	6922      	ldr	r2, [r4, #16]
 8005fe0:	e7e4      	b.n	8005fac <HAL_CRC_Init+0x38>
 8005fe2:	bf00      	nop
 8005fe4:	04c11db7 	.word	0x04c11db7

08005fe8 <HAL_CRCEx_Polynomial_Set>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRCEx_Polynomial_Set(CRC_HandleTypeDef *hcrc, uint32_t Pol, uint32_t PolyLength)
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
 8005fe8:	231f      	movs	r3, #31
{
 8005fea:	b510      	push	{r4, lr}
   * definition. HAL_ERROR is reported if Pol degree is
   * larger than that indicated by PolyLength.
   * Look for MSB position: msb will contain the degree of
   *  the second to the largest polynomial member. E.g., for
   *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
  while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
 8005fec:	3b01      	subs	r3, #1
 8005fee:	d31c      	bcc.n	800602a <HAL_CRCEx_Polynomial_Set+0x42>
 8005ff0:	fa21 f403 	lsr.w	r4, r1, r3
 8005ff4:	07e4      	lsls	r4, r4, #31
 8005ff6:	d5f9      	bpl.n	8005fec <HAL_CRCEx_Polynomial_Set+0x4>
  {
  }

  switch (PolyLength)
 8005ff8:	2a10      	cmp	r2, #16
 8005ffa:	d012      	beq.n	8006022 <HAL_CRCEx_Polynomial_Set+0x3a>
 8005ffc:	d804      	bhi.n	8006008 <HAL_CRCEx_Polynomial_Set+0x20>
 8005ffe:	b13a      	cbz	r2, 8006010 <HAL_CRCEx_Polynomial_Set+0x28>
 8006000:	2a08      	cmp	r2, #8
 8006002:	d010      	beq.n	8006026 <HAL_CRCEx_Polynomial_Set+0x3e>
      }
      break;
    case CRC_POLYLENGTH_8B:
      if (msb >= HAL_CRC_LENGTH_8B)
      {
        status =   HAL_ERROR;
 8006004:	2001      	movs	r0, #1

    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
 8006006:	e00b      	b.n	8006020 <HAL_CRCEx_Polynomial_Set+0x38>
  switch (PolyLength)
 8006008:	2a18      	cmp	r2, #24
 800600a:	d1fb      	bne.n	8006004 <HAL_CRCEx_Polynomial_Set+0x1c>
      if (msb >= HAL_CRC_LENGTH_7B)
 800600c:	2b06      	cmp	r3, #6
      if (msb >= HAL_CRC_LENGTH_16B)
 800600e:	d8f9      	bhi.n	8006004 <HAL_CRCEx_Polynomial_Set+0x1c>
    WRITE_REG(hcrc->Instance->POL, Pol);
 8006010:	6800      	ldr	r0, [r0, #0]
 8006012:	6141      	str	r1, [r0, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
 8006014:	6883      	ldr	r3, [r0, #8]
 8006016:	f023 0318 	bic.w	r3, r3, #24
 800601a:	431a      	orrs	r2, r3
 800601c:	6082      	str	r2, [r0, #8]
 800601e:	2000      	movs	r0, #0
}
 8006020:	bd10      	pop	{r4, pc}
      if (msb >= HAL_CRC_LENGTH_8B)
 8006022:	2b07      	cmp	r3, #7
 8006024:	e7f3      	b.n	800600e <HAL_CRCEx_Polynomial_Set+0x26>
      if (msb >= HAL_CRC_LENGTH_16B)
 8006026:	2b0f      	cmp	r3, #15
 8006028:	e7f1      	b.n	800600e <HAL_CRCEx_Polynomial_Set+0x26>
  switch (PolyLength)
 800602a:	2a00      	cmp	r2, #0
 800602c:	d1ea      	bne.n	8006004 <HAL_CRCEx_Polynomial_Set+0x1c>
 800602e:	e7ef      	b.n	8006010 <HAL_CRCEx_Polynomial_Set+0x28>

08006030 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8006030:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8006032:	4604      	mov	r4, r0
 8006034:	2800      	cmp	r0, #0
 8006036:	d036      	beq.n	80060a6 <HAL_DMA2D_Init+0x76>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 8006038:	f890 3061 	ldrb.w	r3, [r0, #97]	; 0x61
 800603c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006040:	b91b      	cbnz	r3, 800604a <HAL_DMA2D_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8006042:	f880 2060 	strb.w	r2, [r0, #96]	; 0x60
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8006046:	f7fa ffbf 	bl	8000fc8 <HAL_DMA2D_MspInit>
  }
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800604a:	2302      	movs	r3, #2

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
 800604c:	69e0      	ldr	r0, [r4, #28]
 800604e:	6862      	ldr	r2, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8006050:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
 8006054:	6823      	ldr	r3, [r4, #0]
 8006056:	4302      	orrs	r2, r0

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
 8006058:	69a0      	ldr	r0, [r4, #24]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
 800605a:	6819      	ldr	r1, [r3, #0]
 800605c:	f421 21e0 	bic.w	r1, r1, #458752	; 0x70000
 8006060:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 8006064:	430a      	orrs	r2, r1
 8006066:	601a      	str	r2, [r3, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
 8006068:	6b59      	ldr	r1, [r3, #52]	; 0x34
 800606a:	68a2      	ldr	r2, [r4, #8]
 800606c:	f421 7183 	bic.w	r1, r1, #262	; 0x106
 8006070:	4302      	orrs	r2, r0
 8006072:	f021 0101 	bic.w	r1, r1, #1
 8006076:	430a      	orrs	r2, r1
             hdma2d->Init.ColorMode | hdma2d->Init.BytesSwap);

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8006078:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
 800607a:	635a      	str	r2, [r3, #52]	; 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 800607c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800607e:	0c12      	lsrs	r2, r2, #16
 8006080:	0412      	lsls	r2, r2, #16
 8006082:	430a      	orrs	r2, r1
 8006084:	641a      	str	r2, [r3, #64]	; 0x40
  /* DMA2D OPFCCR AI and RBS fields setting (Output Alpha Inversion)*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
 8006086:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8006088:	e9d4 0204 	ldrd	r0, r2, [r4, #16]
 800608c:	f421 1140 	bic.w	r1, r1, #3145728	; 0x300000
 8006090:	0552      	lsls	r2, r2, #21
 8006092:	ea42 5200 	orr.w	r2, r2, r0, lsl #20
             ((hdma2d->Init.AlphaInverted << DMA2D_OPFCCR_AI_Pos) | \
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8006096:	2000      	movs	r0, #0
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
 8006098:	430a      	orrs	r2, r1
 800609a:	635a      	str	r2, [r3, #52]	; 0x34

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800609c:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800609e:	6660      	str	r0, [r4, #100]	; 0x64
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80060a0:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61

  return HAL_OK;
}
 80060a4:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80060a6:	2001      	movs	r0, #1
 80060a8:	e7fc      	b.n	80060a4 <HAL_DMA2D_Init+0x74>

080060aa <HAL_DMA2D_LineEventCallback>:
 80060aa:	4770      	bx	lr

080060ac <HAL_DMA2D_CLUTLoadingCpltCallback>:
 80060ac:	4770      	bx	lr

080060ae <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80060ae:	6803      	ldr	r3, [r0, #0]
{
 80060b0:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80060b2:	685e      	ldr	r6, [r3, #4]
{
 80060b4:	4604      	mov	r4, r0
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 80060b6:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 80060b8:	07f2      	lsls	r2, r6, #31
 80060ba:	d514      	bpl.n	80060e6 <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 80060bc:	05e9      	lsls	r1, r5, #23
 80060be:	d512      	bpl.n	80060e6 <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 80060c0:	681a      	ldr	r2, [r3, #0]
 80060c2:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80060c6:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 80060c8:	6e42      	ldr	r2, [r0, #100]	; 0x64
 80060ca:	f042 0201 	orr.w	r2, r2, #1
 80060ce:	6642      	str	r2, [r0, #100]	; 0x64

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 80060d0:	2201      	movs	r2, #1
 80060d2:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80060d4:	2304      	movs	r3, #4
 80060d6:	f880 3061 	strb.w	r3, [r0, #97]	; 0x61

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80060da:	2300      	movs	r3, #0
 80060dc:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60

      if (hdma2d->XferErrorCallback != NULL)
 80060e0:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80060e2:	b103      	cbz	r3, 80060e6 <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 80060e4:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 80060e6:	06b2      	lsls	r2, r6, #26
 80060e8:	d516      	bpl.n	8006118 <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 80060ea:	04ab      	lsls	r3, r5, #18
 80060ec:	d514      	bpl.n	8006118 <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 80060ee:	6823      	ldr	r3, [r4, #0]
 80060f0:	681a      	ldr	r2, [r3, #0]
 80060f2:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80060f6:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 80060f8:	2220      	movs	r2, #32
 80060fa:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 80060fc:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80060fe:	f043 0302 	orr.w	r3, r3, #2
 8006102:	6663      	str	r3, [r4, #100]	; 0x64

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8006104:	2304      	movs	r3, #4
 8006106:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800610a:	2300      	movs	r3, #0
 800610c:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60

      if (hdma2d->XferErrorCallback != NULL)
 8006110:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006112:	b10b      	cbz	r3, 8006118 <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8006114:	4620      	mov	r0, r4
 8006116:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8006118:	0730      	lsls	r0, r6, #28
 800611a:	d516      	bpl.n	800614a <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 800611c:	0529      	lsls	r1, r5, #20
 800611e:	d514      	bpl.n	800614a <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8006120:	6823      	ldr	r3, [r4, #0]
 8006122:	681a      	ldr	r2, [r3, #0]
 8006124:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8006128:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 800612a:	2208      	movs	r2, #8
 800612c:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 800612e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8006130:	f043 0304 	orr.w	r3, r3, #4
 8006134:	6663      	str	r3, [r4, #100]	; 0x64

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8006136:	2304      	movs	r3, #4
 8006138:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800613c:	2300      	movs	r3, #0
 800613e:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60

      if (hdma2d->XferErrorCallback != NULL)
 8006142:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006144:	b10b      	cbz	r3, 800614a <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8006146:	4620      	mov	r0, r4
 8006148:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 800614a:	0772      	lsls	r2, r6, #29
 800614c:	d50b      	bpl.n	8006166 <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 800614e:	056b      	lsls	r3, r5, #21
 8006150:	d509      	bpl.n	8006166 <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8006152:	6823      	ldr	r3, [r4, #0]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 8006154:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8006156:	681a      	ldr	r2, [r3, #0]
 8006158:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800615c:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 800615e:	2204      	movs	r2, #4
 8006160:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 8006162:	f7ff ffa2 	bl	80060aa <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8006166:	07b0      	lsls	r0, r6, #30
 8006168:	d514      	bpl.n	8006194 <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 800616a:	05a9      	lsls	r1, r5, #22
 800616c:	d512      	bpl.n	8006194 <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 800616e:	6823      	ldr	r3, [r4, #0]
 8006170:	681a      	ldr	r2, [r3, #0]
 8006172:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8006176:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8006178:	2202      	movs	r2, #2
 800617a:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 800617c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800617e:	6663      	str	r3, [r4, #100]	; 0x64

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8006180:	2301      	movs	r3, #1
 8006182:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8006186:	2300      	movs	r3, #0
 8006188:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60

      if (hdma2d->XferCpltCallback != NULL)
 800618c:	6a23      	ldr	r3, [r4, #32]
 800618e:	b10b      	cbz	r3, 8006194 <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 8006190:	4620      	mov	r0, r4
 8006192:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8006194:	06f2      	lsls	r2, r6, #27
 8006196:	d513      	bpl.n	80061c0 <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8006198:	04eb      	lsls	r3, r5, #19
 800619a:	d511      	bpl.n	80061c0 <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 800619c:	6823      	ldr	r3, [r4, #0]

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 800619e:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 80061a0:	681a      	ldr	r2, [r3, #0]
 80061a2:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 80061a6:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 80061a8:	2210      	movs	r2, #16
 80061aa:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80061ac:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80061ae:	6663      	str	r3, [r4, #100]	; 0x64
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80061b0:	2301      	movs	r3, #1
 80061b2:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
 80061b6:	2300      	movs	r3, #0
 80061b8:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 80061bc:	f7ff ff76 	bl	80060ac <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 80061c0:	bd70      	pop	{r4, r5, r6, pc}

080061c2 <DSI_ShortWrite>:
static HAL_StatusTypeDef DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                        uint32_t ChannelID,
                                        uint32_t Mode,
                                        uint32_t Param1,
                                        uint32_t Param2)
{
 80061c2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80061c6:	4607      	mov	r7, r0
 80061c8:	460d      	mov	r5, r1
 80061ca:	4614      	mov	r4, r2
 80061cc:	461e      	mov	r6, r3
  uint32_t tickstart;

  /* Get tick */
  tickstart = HAL_GetTick();
 80061ce:	f7ff fe03 	bl	8005dd8 <HAL_GetTick>
 80061d2:	4680      	mov	r8, r0

  /* Wait for Command FIFO Empty */
  while ((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 80061d4:	683b      	ldr	r3, [r7, #0]
 80061d6:	6f5a      	ldr	r2, [r3, #116]	; 0x74
 80061d8:	07d2      	lsls	r2, r2, #31
 80061da:	d50a      	bpl.n	80061f2 <DSI_ShortWrite+0x30>
    }
  }

  /* Configure the packet to send a short DCS command with 0 or 1 parameter */
  /* Update the DSI packet header with new information */
  hdsi->Instance->GHCR = (Mode | (ChannelID << 6U) | (Param1 << 8U) | (Param2 << 16U));
 80061dc:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
 80061e0:	9906      	ldr	r1, [sp, #24]

  return HAL_OK;
 80061e2:	2000      	movs	r0, #0
  hdsi->Instance->GHCR = (Mode | (ChannelID << 6U) | (Param1 << 8U) | (Param2 << 16U));
 80061e4:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 80061e8:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
 80061ec:	66dc      	str	r4, [r3, #108]	; 0x6c
}
 80061ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 80061f2:	f7ff fdf1 	bl	8005dd8 <HAL_GetTick>
 80061f6:	eba0 0008 	sub.w	r0, r0, r8
 80061fa:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 80061fe:	d9e9      	bls.n	80061d4 <DSI_ShortWrite+0x12>
      return HAL_TIMEOUT;
 8006200:	2003      	movs	r0, #3
 8006202:	e7f4      	b.n	80061ee <DSI_ShortWrite+0x2c>

08006204 <HAL_DSI_ConfigErrorMonitor>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigErrorMonitor(DSI_HandleTypeDef *hdsi, uint32_t ActiveErrors)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8006204:	7c03      	ldrb	r3, [r0, #16]
 8006206:	2b01      	cmp	r3, #1
 8006208:	d05c      	beq.n	80062c4 <HAL_DSI_ConfigErrorMonitor+0xc0>

  hdsi->Instance->IER[0U] = 0U;
 800620a:	2200      	movs	r2, #0
 800620c:	6803      	ldr	r3, [r0, #0]
 800620e:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 8006212:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8

  /* Store active errors to the handle */
  hdsi->ErrorMsk = ActiveErrors;

  if ((ActiveErrors & HAL_DSI_ERROR_ACK) != 0U)
 8006216:	07ca      	lsls	r2, r1, #31
  hdsi->ErrorMsk = ActiveErrors;
 8006218:	6181      	str	r1, [r0, #24]
  if ((ActiveErrors & HAL_DSI_ERROR_ACK) != 0U)
 800621a:	d507      	bpl.n	800622c <HAL_DSI_ConfigErrorMonitor+0x28>
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 800621c:	f8d3 20c4 	ldr.w	r2, [r3, #196]	; 0xc4
 8006220:	ea6f 4212 	mvn.w	r2, r2, lsr #16
 8006224:	ea6f 4202 	mvn.w	r2, r2, lsl #16
 8006228:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PHY) != 0U)
 800622c:	078a      	lsls	r2, r1, #30
 800622e:	d505      	bpl.n	800623c <HAL_DSI_ConfigErrorMonitor+0x38>
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_PHY_MASK;
 8006230:	f8d3 20c4 	ldr.w	r2, [r3, #196]	; 0xc4
 8006234:	f442 12f8 	orr.w	r2, r2, #2031616	; 0x1f0000
 8006238:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_TX) != 0U)
 800623c:	074a      	lsls	r2, r1, #29
 800623e:	d505      	bpl.n	800624c <HAL_DSI_ConfigErrorMonitor+0x48>
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_TX_MASK;
 8006240:	f8d3 20c8 	ldr.w	r2, [r3, #200]	; 0xc8
 8006244:	f042 0201 	orr.w	r2, r2, #1
 8006248:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_RX) != 0U)
 800624c:	070a      	lsls	r2, r1, #28
 800624e:	d505      	bpl.n	800625c <HAL_DSI_ConfigErrorMonitor+0x58>
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_RX_MASK;
 8006250:	f8d3 20c8 	ldr.w	r2, [r3, #200]	; 0xc8
 8006254:	f042 0202 	orr.w	r2, r2, #2
 8006258:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_ECC) != 0U)
 800625c:	06ca      	lsls	r2, r1, #27
 800625e:	d505      	bpl.n	800626c <HAL_DSI_ConfigErrorMonitor+0x68>
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_ECC_MASK;
 8006260:	f8d3 20c8 	ldr.w	r2, [r3, #200]	; 0xc8
 8006264:	f042 020c 	orr.w	r2, r2, #12
 8006268:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_CRC) != 0U)
 800626c:	068a      	lsls	r2, r1, #26
 800626e:	d505      	bpl.n	800627c <HAL_DSI_ConfigErrorMonitor+0x78>
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_CRC_MASK;
 8006270:	f8d3 20c8 	ldr.w	r2, [r3, #200]	; 0xc8
 8006274:	f042 0210 	orr.w	r2, r2, #16
 8006278:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PSE) != 0U)
 800627c:	064a      	lsls	r2, r1, #25
 800627e:	d505      	bpl.n	800628c <HAL_DSI_ConfigErrorMonitor+0x88>
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_PSE_MASK;
 8006280:	f8d3 20c8 	ldr.w	r2, [r3, #200]	; 0xc8
 8006284:	f042 0220 	orr.w	r2, r2, #32
 8006288:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_EOT) != 0U)
 800628c:	060a      	lsls	r2, r1, #24
 800628e:	d505      	bpl.n	800629c <HAL_DSI_ConfigErrorMonitor+0x98>
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_EOT_MASK;
 8006290:	f8d3 20c8 	ldr.w	r2, [r3, #200]	; 0xc8
 8006294:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8006298:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_OVF) != 0U)
 800629c:	05ca      	lsls	r2, r1, #23
 800629e:	d505      	bpl.n	80062ac <HAL_DSI_ConfigErrorMonitor+0xa8>
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_OVF_MASK;
 80062a0:	f8d3 20c8 	ldr.w	r2, [r3, #200]	; 0xc8
 80062a4:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80062a8:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_GEN) != 0U)
 80062ac:	058a      	lsls	r2, r1, #22
 80062ae:	d505      	bpl.n	80062bc <HAL_DSI_ConfigErrorMonitor+0xb8>
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_GEN_MASK;
 80062b0:	f8d3 20c8 	ldr.w	r2, [r3, #200]	; 0xc8
 80062b4:	f442 52f8 	orr.w	r2, r2, #7936	; 0x1f00
 80062b8:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
  }

  /* Process Unlocked */
  __HAL_UNLOCK(hdsi);
 80062bc:	2300      	movs	r3, #0
 80062be:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 80062c0:	4618      	mov	r0, r3
 80062c2:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 80062c4:	2002      	movs	r0, #2
}
 80062c6:	4770      	bx	lr

080062c8 <HAL_DSI_Init>:
{
 80062c8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80062ca:	460d      	mov	r5, r1
  if (hdsi == NULL)
 80062cc:	4604      	mov	r4, r0
 80062ce:	2800      	cmp	r0, #0
 80062d0:	f000 80a9 	beq.w	8006426 <HAL_DSI_Init+0x15e>
  if (hdsi->State == HAL_DSI_STATE_RESET)
 80062d4:	7c43      	ldrb	r3, [r0, #17]
 80062d6:	b90b      	cbnz	r3, 80062dc <HAL_DSI_Init+0x14>
    HAL_DSI_MspInit(hdsi);
 80062d8:	f7fa fe9a 	bl	8001010 <HAL_DSI_MspInit>
  hdsi->State = HAL_DSI_STATE_BUSY;
 80062dc:	2303      	movs	r3, #3
 80062de:	7463      	strb	r3, [r4, #17]
  __HAL_DSI_REG_ENABLE(hdsi);
 80062e0:	2300      	movs	r3, #0
 80062e2:	9300      	str	r3, [sp, #0]
 80062e4:	6823      	ldr	r3, [r4, #0]
 80062e6:	f8d3 2430 	ldr.w	r2, [r3, #1072]	; 0x430
 80062ea:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 80062ee:	f8c3 2430 	str.w	r2, [r3, #1072]	; 0x430
 80062f2:	f8d3 3430 	ldr.w	r3, [r3, #1072]	; 0x430
 80062f6:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 80062fa:	9300      	str	r3, [sp, #0]
 80062fc:	9b00      	ldr	r3, [sp, #0]
  tickstart = HAL_GetTick();
 80062fe:	f7ff fd6b 	bl	8005dd8 <HAL_GetTick>
 8006302:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_RRS) == 0U)
 8006304:	6822      	ldr	r2, [r4, #0]
 8006306:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 800630a:	04d9      	lsls	r1, r3, #19
 800630c:	d57a      	bpl.n	8006404 <HAL_DSI_Init+0x13c>
  hdsi->Instance->WRPCR &= ~(DSI_WRPCR_PLL_NDIV | DSI_WRPCR_PLL_IDF | DSI_WRPCR_PLL_ODF);
 800630e:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 8006312:	f423 335e 	bic.w	r3, r3, #227328	; 0x37800
 8006316:	f423 73fe 	bic.w	r3, r3, #508	; 0x1fc
 800631a:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << DSI_WRPCR_PLL_NDIV_Pos) | \
 800631e:	f8d2 1430 	ldr.w	r1, [r2, #1072]	; 0x430
                            ((PLLInit->PLLIDF) << DSI_WRPCR_PLL_IDF_Pos) | \
 8006322:	e9d5 0300 	ldrd	r0, r3, [r5]
 8006326:	02db      	lsls	r3, r3, #11
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << DSI_WRPCR_PLL_NDIV_Pos) | \
 8006328:	ea43 0380 	orr.w	r3, r3, r0, lsl #2
                            ((PLLInit->PLLODF) << DSI_WRPCR_PLL_ODF_Pos));
 800632c:	68a8      	ldr	r0, [r5, #8]
                            ((PLLInit->PLLIDF) << DSI_WRPCR_PLL_IDF_Pos) | \
 800632e:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
  HAL_Delay(1);
 8006332:	2001      	movs	r0, #1
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << DSI_WRPCR_PLL_NDIV_Pos) | \
 8006334:	430b      	orrs	r3, r1
 8006336:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
  __HAL_DSI_PLL_ENABLE(hdsi);
 800633a:	2300      	movs	r3, #0
 800633c:	9301      	str	r3, [sp, #4]
 800633e:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 8006342:	f043 0301 	orr.w	r3, r3, #1
 8006346:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
 800634a:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 800634e:	f003 0301 	and.w	r3, r3, #1
 8006352:	9301      	str	r3, [sp, #4]
 8006354:	9b01      	ldr	r3, [sp, #4]
  HAL_Delay(1);
 8006356:	f7ff fd45 	bl	8005de4 <HAL_Delay>
  tickstart = HAL_GetTick();
 800635a:	f7ff fd3d 	bl	8005dd8 <HAL_GetTick>
 800635e:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_PLLLS) == 0U)
 8006360:	6823      	ldr	r3, [r4, #0]
 8006362:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 8006366:	05d2      	lsls	r2, r2, #23
 8006368:	d556      	bpl.n	8006418 <HAL_DSI_Init+0x150>
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 800636a:	f8d3 20a0 	ldr.w	r2, [r3, #160]	; 0xa0
  unitIntervalx4 = (4000000U * tempIDF * ((1UL << (0x3U & PLLInit->PLLODF)))) / ((HSE_VALUE / 1000U) * PLLInit->PLLNDIV);
 800636e:	f246 10a8 	movw	r0, #25000	; 0x61a8
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 8006372:	6861      	ldr	r1, [r4, #4]
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 8006374:	f042 0206 	orr.w	r2, r2, #6
 8006378:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
  hdsi->Instance->CLCR &= ~(DSI_CLCR_DPCC | DSI_CLCR_ACR);
 800637c:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 8006380:	f022 0203 	bic.w	r2, r2, #3
 8006384:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 8006388:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 800638c:	430a      	orrs	r2, r1
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 800638e:	68e1      	ldr	r1, [r4, #12]
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 8006390:	f042 0201 	orr.w	r2, r2, #1
 8006394:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 8006398:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 800639c:	f022 0203 	bic.w	r2, r2, #3
 80063a0:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 80063a4:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 80063a8:	430a      	orrs	r2, r1
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 80063aa:	68a1      	ldr	r1, [r4, #8]
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 80063ac:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 80063b0:	689a      	ldr	r2, [r3, #8]
 80063b2:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 80063b6:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 80063b8:	689a      	ldr	r2, [r3, #8]
 80063ba:	430a      	orrs	r2, r1
  unitIntervalx4 = (4000000U * tempIDF * ((1UL << (0x3U & PLLInit->PLLODF)))) / ((HSE_VALUE / 1000U) * PLLInit->PLLNDIV);
 80063bc:	491b      	ldr	r1, [pc, #108]	; (800642c <HAL_DSI_Init+0x164>)
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 80063be:	609a      	str	r2, [r3, #8]
  unitIntervalx4 = (4000000U * tempIDF * ((1UL << (0x3U & PLLInit->PLLODF)))) / ((HSE_VALUE / 1000U) * PLLInit->PLLNDIV);
 80063c0:	686a      	ldr	r2, [r5, #4]
 80063c2:	2a01      	cmp	r2, #1
 80063c4:	bf38      	it	cc
 80063c6:	2201      	movcc	r2, #1
 80063c8:	434a      	muls	r2, r1
 80063ca:	68a9      	ldr	r1, [r5, #8]
 80063cc:	f001 0103 	and.w	r1, r1, #3
 80063d0:	408a      	lsls	r2, r1
 80063d2:	6829      	ldr	r1, [r5, #0]
 80063d4:	4341      	muls	r1, r0
  hdsi->Instance->IER[0U] = 0U;
 80063d6:	2000      	movs	r0, #0
  unitIntervalx4 = (4000000U * tempIDF * ((1UL << (0x3U & PLLInit->PLLODF)))) / ((HSE_VALUE / 1000U) * PLLInit->PLLNDIV);
 80063d8:	fbb2 f2f1 	udiv	r2, r2, r1
  hdsi->Instance->WPCR[0U] &= ~DSI_WPCR0_UIX4;
 80063dc:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
 80063e0:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 80063e4:	f8c3 1418 	str.w	r1, [r3, #1048]	; 0x418
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 80063e8:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
 80063ec:	430a      	orrs	r2, r1
 80063ee:	f8c3 2418 	str.w	r2, [r3, #1048]	; 0x418
  hdsi->Instance->IER[0U] = 0U;
 80063f2:	f8c3 00c4 	str.w	r0, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 80063f6:	f8c3 00c8 	str.w	r0, [r3, #200]	; 0xc8
  hdsi->State = HAL_DSI_STATE_READY;
 80063fa:	2301      	movs	r3, #1
  hdsi->ErrorCode = HAL_DSI_ERROR_NONE;
 80063fc:	6160      	str	r0, [r4, #20]
  hdsi->ErrorMsk = 0U;
 80063fe:	61a0      	str	r0, [r4, #24]
  hdsi->State = HAL_DSI_STATE_READY;
 8006400:	7463      	strb	r3, [r4, #17]
  return HAL_OK;
 8006402:	e007      	b.n	8006414 <HAL_DSI_Init+0x14c>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 8006404:	f7ff fce8 	bl	8005dd8 <HAL_GetTick>
 8006408:	1b80      	subs	r0, r0, r6
 800640a:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800640e:	f67f af79 	bls.w	8006304 <HAL_DSI_Init+0x3c>
      return HAL_TIMEOUT;
 8006412:	2003      	movs	r0, #3
}
 8006414:	b002      	add	sp, #8
 8006416:	bd70      	pop	{r4, r5, r6, pc}
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 8006418:	f7ff fcde 	bl	8005dd8 <HAL_GetTick>
 800641c:	1b80      	subs	r0, r0, r6
 800641e:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8006422:	d99d      	bls.n	8006360 <HAL_DSI_Init+0x98>
 8006424:	e7f5      	b.n	8006412 <HAL_DSI_Init+0x14a>
    return HAL_ERROR;
 8006426:	2001      	movs	r0, #1
 8006428:	e7f4      	b.n	8006414 <HAL_DSI_Init+0x14c>
 800642a:	bf00      	nop
 800642c:	003d0900 	.word	0x003d0900

08006430 <HAL_DSI_ErrorCallback>:
 8006430:	4770      	bx	lr

08006432 <HAL_DSI_IRQHandler>:
{
  uint32_t ErrorStatus0;
  uint32_t ErrorStatus1;

  /* Tearing Effect Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 8006432:	6803      	ldr	r3, [r0, #0]
 8006434:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 8006438:	07d1      	lsls	r1, r2, #31
{
 800643a:	b510      	push	{r4, lr}
 800643c:	4604      	mov	r4, r0
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 800643e:	d508      	bpl.n	8006452 <HAL_DSI_IRQHandler+0x20>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_TE) != 0U)
 8006440:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 8006444:	07d2      	lsls	r2, r2, #31
 8006446:	d504      	bpl.n	8006452 <HAL_DSI_IRQHandler+0x20>
    {
      /* Clear the Tearing Effect Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_TE);
 8006448:	2201      	movs	r2, #1
 800644a:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Tearing Effect callback */
      hdsi->TearingEffectCallback(hdsi);
#else
      /*Call legacy Tearing Effect callback*/
      HAL_DSI_TearingEffectCallback(hdsi);
 800644e:	f7fb fba7 	bl	8001ba0 <HAL_DSI_TearingEffectCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* End of Refresh Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_ER) != 0U)
 8006452:	6823      	ldr	r3, [r4, #0]
 8006454:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 8006458:	0791      	lsls	r1, r2, #30
 800645a:	d509      	bpl.n	8006470 <HAL_DSI_IRQHandler+0x3e>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_ER) != 0U)
 800645c:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 8006460:	0792      	lsls	r2, r2, #30
 8006462:	d505      	bpl.n	8006470 <HAL_DSI_IRQHandler+0x3e>
    {
      /* Clear the End of Refresh Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_ER);
 8006464:	2202      	movs	r2, #2
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered End of refresh callback */
      hdsi->EndOfRefreshCallback(hdsi);
#else
      /*Call Legacy End of refresh callback */
      HAL_DSI_EndOfRefreshCallback(hdsi);
 8006466:	4620      	mov	r0, r4
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_ER);
 8006468:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
      HAL_DSI_EndOfRefreshCallback(hdsi);
 800646c:	f7fb fbca 	bl	8001c04 <HAL_DSI_EndOfRefreshCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* Error Interrupts management ***********************************************/
  if (hdsi->ErrorMsk != 0U)
 8006470:	69a3      	ldr	r3, [r4, #24]
 8006472:	2b00      	cmp	r3, #0
 8006474:	d04e      	beq.n	8006514 <HAL_DSI_IRQHandler+0xe2>
  {
    ErrorStatus0 = hdsi->Instance->ISR[0U];
 8006476:	6821      	ldr	r1, [r4, #0]
 8006478:	f8d1 20bc 	ldr.w	r2, [r1, #188]	; 0xbc
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 800647c:	f8d1 30c4 	ldr.w	r3, [r1, #196]	; 0xc4
    ErrorStatus1 = hdsi->Instance->ISR[1U];
 8006480:	f8d1 00c0 	ldr.w	r0, [r1, #192]	; 0xc0
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 8006484:	401a      	ands	r2, r3
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 8006486:	f8d1 30c8 	ldr.w	r3, [r1, #200]	; 0xc8

    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 800648a:	b291      	uxth	r1, r2
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 800648c:	4003      	ands	r3, r0
    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 800648e:	b119      	cbz	r1, 8006498 <HAL_DSI_IRQHandler+0x66>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ACK;
 8006490:	6961      	ldr	r1, [r4, #20]
 8006492:	f041 0101 	orr.w	r1, r1, #1
 8006496:	6161      	str	r1, [r4, #20]
    }

    if ((ErrorStatus0 & DSI_ERROR_PHY_MASK) != 0U)
 8006498:	f412 1ff8 	tst.w	r2, #2031616	; 0x1f0000
 800649c:	d003      	beq.n	80064a6 <HAL_DSI_IRQHandler+0x74>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PHY;
 800649e:	6962      	ldr	r2, [r4, #20]
 80064a0:	f042 0202 	orr.w	r2, r2, #2
 80064a4:	6162      	str	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_TX_MASK) != 0U)
 80064a6:	07d8      	lsls	r0, r3, #31
 80064a8:	d503      	bpl.n	80064b2 <HAL_DSI_IRQHandler+0x80>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_TX;
 80064aa:	6962      	ldr	r2, [r4, #20]
 80064ac:	f042 0204 	orr.w	r2, r2, #4
 80064b0:	6162      	str	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_RX_MASK) != 0U)
 80064b2:	0799      	lsls	r1, r3, #30
 80064b4:	d503      	bpl.n	80064be <HAL_DSI_IRQHandler+0x8c>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_RX;
 80064b6:	6962      	ldr	r2, [r4, #20]
 80064b8:	f042 0208 	orr.w	r2, r2, #8
 80064bc:	6162      	str	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_ECC_MASK) != 0U)
 80064be:	f013 0f0c 	tst.w	r3, #12
 80064c2:	d003      	beq.n	80064cc <HAL_DSI_IRQHandler+0x9a>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ECC;
 80064c4:	6962      	ldr	r2, [r4, #20]
 80064c6:	f042 0210 	orr.w	r2, r2, #16
 80064ca:	6162      	str	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_CRC_MASK) != 0U)
 80064cc:	06da      	lsls	r2, r3, #27
 80064ce:	d503      	bpl.n	80064d8 <HAL_DSI_IRQHandler+0xa6>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_CRC;
 80064d0:	6962      	ldr	r2, [r4, #20]
 80064d2:	f042 0220 	orr.w	r2, r2, #32
 80064d6:	6162      	str	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_PSE_MASK) != 0U)
 80064d8:	0698      	lsls	r0, r3, #26
 80064da:	d503      	bpl.n	80064e4 <HAL_DSI_IRQHandler+0xb2>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PSE;
 80064dc:	6962      	ldr	r2, [r4, #20]
 80064de:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80064e2:	6162      	str	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_EOT_MASK) != 0U)
 80064e4:	0659      	lsls	r1, r3, #25
 80064e6:	d503      	bpl.n	80064f0 <HAL_DSI_IRQHandler+0xbe>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_EOT;
 80064e8:	6962      	ldr	r2, [r4, #20]
 80064ea:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80064ee:	6162      	str	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_OVF_MASK) != 0U)
 80064f0:	061a      	lsls	r2, r3, #24
 80064f2:	d503      	bpl.n	80064fc <HAL_DSI_IRQHandler+0xca>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_OVF;
 80064f4:	6962      	ldr	r2, [r4, #20]
 80064f6:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80064fa:	6162      	str	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_GEN_MASK) != 0U)
 80064fc:	f413 5ff8 	tst.w	r3, #7936	; 0x1f00
 8006500:	d003      	beq.n	800650a <HAL_DSI_IRQHandler+0xd8>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_GEN;
 8006502:	6963      	ldr	r3, [r4, #20]
 8006504:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8006508:	6163      	str	r3, [r4, #20]
    }

    /* Check only selected errors */
    if (hdsi->ErrorCode != HAL_DSI_ERROR_NONE)
 800650a:	6963      	ldr	r3, [r4, #20]
 800650c:	b113      	cbz	r3, 8006514 <HAL_DSI_IRQHandler+0xe2>
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Error callback */
      hdsi->ErrorCallback(hdsi);
#else
      /*Call Legacy Error callback */
      HAL_DSI_ErrorCallback(hdsi);
 800650e:	4620      	mov	r0, r4
 8006510:	f7ff ff8e 	bl	8006430 <HAL_DSI_ErrorCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }
}
 8006514:	bd10      	pop	{r4, pc}

08006516 <HAL_DSI_SetGenericVCID>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetGenericVCID(DSI_HandleTypeDef *hdsi, uint32_t VirtualChannelID)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8006516:	7c03      	ldrb	r3, [r0, #16]
 8006518:	2b01      	cmp	r3, #1
 800651a:	d00b      	beq.n	8006534 <HAL_DSI_SetGenericVCID+0x1e>

  /* Update the GVCID register */
  hdsi->Instance->GVCIDR &= ~DSI_GVCIDR_VCID;
 800651c:	6803      	ldr	r3, [r0, #0]
 800651e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8006520:	f022 0203 	bic.w	r2, r2, #3
 8006524:	631a      	str	r2, [r3, #48]	; 0x30
  hdsi->Instance->GVCIDR |= VirtualChannelID;
 8006526:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8006528:	4311      	orrs	r1, r2
 800652a:	6319      	str	r1, [r3, #48]	; 0x30

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800652c:	2300      	movs	r3, #0
 800652e:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8006530:	4618      	mov	r0, r3
 8006532:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8006534:	2002      	movs	r0, #2
}
 8006536:	4770      	bx	lr

08006538 <HAL_DSI_ConfigAdaptedCommandMode>:
  * @param  CmdCfg  pointer to a DSI_CmdCfgTypeDef structure that contains
  *                 the DSI command mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigAdaptedCommandMode(DSI_HandleTypeDef *hdsi, DSI_CmdCfgTypeDef *CmdCfg)
{
 8006538:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 800653a:	7c03      	ldrb	r3, [r0, #16]
 800653c:	2b01      	cmp	r3, #1
 800653e:	d06a      	beq.n	8006616 <HAL_DSI_ConfigAdaptedCommandMode+0xde>
  assert_param(IS_DSI_DE_POLARITY(CmdCfg->DEPolarity));
  assert_param(IS_DSI_VSYNC_POLARITY(CmdCfg->VSPolarity));
  assert_param(IS_DSI_HSYNC_POLARITY(CmdCfg->HSPolarity));

  /* Select command mode by setting CMDM and DSIM bits */
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 8006540:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;

  /* Select the virtual channel for the LTDC interface traffic */
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 8006542:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 8006544:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006546:	f042 0201 	orr.w	r2, r2, #1
 800654a:	635a      	str	r2, [r3, #52]	; 0x34
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
 800654c:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 8006550:	f022 0201 	bic.w	r2, r2, #1
 8006554:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;
 8006558:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 800655c:	f042 0201 	orr.w	r2, r2, #1
 8006560:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
 8006564:	68da      	ldr	r2, [r3, #12]
 8006566:	f022 0203 	bic.w	r2, r2, #3
 800656a:	60da      	str	r2, [r3, #12]
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 800656c:	68da      	ldr	r2, [r3, #12]
 800656e:	4322      	orrs	r2, r4
 8006570:	60da      	str	r2, [r3, #12]

  /* Configure the polarity of control signals */
  hdsi->Instance->LPCR &= ~(DSI_LPCR_DEP | DSI_LPCR_VSP | DSI_LPCR_HSP);
 8006572:	695a      	ldr	r2, [r3, #20]
 8006574:	f022 0207 	bic.w	r2, r2, #7
 8006578:	615a      	str	r2, [r3, #20]
  hdsi->Instance->LPCR |= (CmdCfg->DEPolarity | CmdCfg->VSPolarity | CmdCfg->HSPolarity);
 800657a:	695c      	ldr	r4, [r3, #20]
 800657c:	e9d1 5206 	ldrd	r5, r2, [r1, #24]
 8006580:	432a      	orrs	r2, r5
 8006582:	694d      	ldr	r5, [r1, #20]
 8006584:	432a      	orrs	r2, r5

  /* Select the color coding for the host */
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 8006586:	684d      	ldr	r5, [r1, #4]
  hdsi->Instance->LPCR |= (CmdCfg->DEPolarity | CmdCfg->VSPolarity | CmdCfg->HSPolarity);
 8006588:	4322      	orrs	r2, r4
 800658a:	615a      	str	r2, [r3, #20]
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 800658c:	691a      	ldr	r2, [r3, #16]
 800658e:	f022 020f 	bic.w	r2, r2, #15
 8006592:	611a      	str	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 8006594:	691c      	ldr	r4, [r3, #16]
 8006596:	432c      	orrs	r4, r5
 8006598:	611c      	str	r4, [r3, #16]

  /* Select the color coding for the wrapper */
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_COLMUX;
 800659a:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 800659e:	f024 040e 	bic.w	r4, r4, #14
 80065a2:	f8c3 4400 	str.w	r4, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 80065a6:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400

  /* Configure the maximum allowed size for write memory command */
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 80065aa:	688c      	ldr	r4, [r1, #8]
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 80065ac:	ea42 0245 	orr.w	r2, r2, r5, lsl #1
 80065b0:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
 80065b4:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 80065b6:	0c12      	lsrs	r2, r2, #16
 80065b8:	0412      	lsls	r2, r2, #16
 80065ba:	665a      	str	r2, [r3, #100]	; 0x64
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 80065bc:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 80065be:	4322      	orrs	r2, r4
 80065c0:	665a      	str	r2, [r3, #100]	; 0x64

  /* Configure the tearing effect source and polarity and select the refresh mode */
  hdsi->Instance->WCFGR &= ~(DSI_WCFGR_TESRC | DSI_WCFGR_TEPOL | DSI_WCFGR_AR | DSI_WCFGR_VSPOL);
 80065c2:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 80065c6:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 80065ca:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 80065ce:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 80065d2:	e9d1 2503 	ldrd	r2, r5, [r1, #12]
 80065d6:	432a      	orrs	r2, r5
 80065d8:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 80065da:	432a      	orrs	r2, r5
 80065dc:	6a0d      	ldr	r5, [r1, #32]
                            CmdCfg->VSyncPol);

  /* Configure the tearing effect acknowledge request */
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 80065de:	6a89      	ldr	r1, [r1, #40]	; 0x28
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 80065e0:	432a      	orrs	r2, r5
 80065e2:	4322      	orrs	r2, r4
 80065e4:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
 80065e8:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 80065ea:	f022 0201 	bic.w	r2, r2, #1
 80065ee:	669a      	str	r2, [r3, #104]	; 0x68
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 80065f0:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 80065f2:	430a      	orrs	r2, r1
 80065f4:	669a      	str	r2, [r3, #104]	; 0x68

  /* Enable the Tearing Effect interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_TE);
 80065f6:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 80065fa:	f042 0201 	orr.w	r2, r2, #1
 80065fe:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Enable the End of Refresh interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_ER);
 8006602:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 8006606:	f042 0202 	orr.w	r2, r2, #2
 800660a:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800660e:	2300      	movs	r3, #0
 8006610:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8006612:	4618      	mov	r0, r3
}
 8006614:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 8006616:	2002      	movs	r0, #2
 8006618:	e7fc      	b.n	8006614 <HAL_DSI_ConfigAdaptedCommandMode+0xdc>
	...

0800661c <HAL_DSI_ConfigCommand>:
  * @param  LPCmd  pointer to a DSI_LPCmdTypeDef structure that contains
  *                the DSI command transmission mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigCommand(DSI_HandleTypeDef *hdsi, DSI_LPCmdTypeDef *LPCmd)
{
 800661c:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 800661e:	7c03      	ldrb	r3, [r0, #16]
 8006620:	2b01      	cmp	r3, #1
 8006622:	d02a      	beq.n	800667a <HAL_DSI_ConfigCommand+0x5e>
  assert_param(IS_DSI_LP_DLW(LPCmd->LPDcsLongWrite));
  assert_param(IS_DSI_LP_MRDP(LPCmd->LPMaxReadPacket));
  assert_param(IS_DSI_ACK_REQUEST(LPCmd->AcknowledgeRequest));

  /* Select High-speed or Low-power for command transmission */
  hdsi->Instance->CMCR &= ~(DSI_CMCR_GSW0TX | \
 8006624:	6802      	ldr	r2, [r0, #0]
 8006626:	4b16      	ldr	r3, [pc, #88]	; (8006680 <HAL_DSI_ConfigCommand+0x64>)
 8006628:	6e94      	ldr	r4, [r2, #104]	; 0x68
 800662a:	4023      	ands	r3, r4
 800662c:	6693      	str	r3, [r2, #104]	; 0x68
                            DSI_CMCR_DSW0TX | \
                            DSI_CMCR_DSW1TX | \
                            DSI_CMCR_DSR0TX | \
                            DSI_CMCR_DLWTX  | \
                            DSI_CMCR_MRDPS);
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 800662e:	6e94      	ldr	r4, [r2, #104]	; 0x68
 8006630:	e9d1 3500 	ldrd	r3, r5, [r1]
 8006634:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteOneP | \
 8006636:	688d      	ldr	r5, [r1, #8]
 8006638:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteTwoP | \
 800663a:	68cd      	ldr	r5, [r1, #12]
 800663c:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadNoP   | \
 800663e:	690d      	ldr	r5, [r1, #16]
 8006640:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadOneP  | \
 8006642:	694d      	ldr	r5, [r1, #20]
 8006644:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadTwoP  | \
 8006646:	698d      	ldr	r5, [r1, #24]
 8006648:	432b      	orrs	r3, r5
                           LPCmd->LPGenLongWrite      | \
 800664a:	69cd      	ldr	r5, [r1, #28]
 800664c:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteNoP  | \
 800664e:	6a0d      	ldr	r5, [r1, #32]
 8006650:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteOneP | \
 8006652:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 8006654:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortReadNoP   | \
 8006656:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8006658:	432b      	orrs	r3, r5
                           LPCmd->LPDcsLongWrite      | \
 800665a:	6acd      	ldr	r5, [r1, #44]	; 0x2c
                           LPCmd->LPMaxReadPacket);

  /* Configure the acknowledge request after each packet transmission */
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 800665c:	6b09      	ldr	r1, [r1, #48]	; 0x30
                           LPCmd->LPDcsLongWrite      | \
 800665e:	432b      	orrs	r3, r5
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 8006660:	4323      	orrs	r3, r4
 8006662:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
 8006664:	6e93      	ldr	r3, [r2, #104]	; 0x68
 8006666:	f023 0302 	bic.w	r3, r3, #2
 800666a:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 800666c:	6e93      	ldr	r3, [r2, #104]	; 0x68
 800666e:	430b      	orrs	r3, r1
 8006670:	6693      	str	r3, [r2, #104]	; 0x68

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8006672:	2300      	movs	r3, #0
 8006674:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8006676:	4618      	mov	r0, r3
}
 8006678:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800667a:	2002      	movs	r0, #2
 800667c:	e7fc      	b.n	8006678 <HAL_DSI_ConfigCommand+0x5c>
 800667e:	bf00      	nop
 8006680:	fef080ff 	.word	0xfef080ff

08006684 <HAL_DSI_ConfigFlowControl>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigFlowControl(DSI_HandleTypeDef *hdsi, uint32_t FlowControl)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8006684:	7c03      	ldrb	r3, [r0, #16]
 8006686:	2b01      	cmp	r3, #1
 8006688:	d00b      	beq.n	80066a2 <HAL_DSI_ConfigFlowControl+0x1e>

  /* Check the parameters */
  assert_param(IS_DSI_FLOW_CONTROL(FlowControl));

  /* Set the DSI Host Protocol Configuration Register */
  hdsi->Instance->PCR &= ~DSI_FLOW_CONTROL_ALL;
 800668a:	6803      	ldr	r3, [r0, #0]
 800668c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800668e:	f022 021f 	bic.w	r2, r2, #31
 8006692:	62da      	str	r2, [r3, #44]	; 0x2c
  hdsi->Instance->PCR |= FlowControl;
 8006694:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8006696:	4311      	orrs	r1, r2
 8006698:	62d9      	str	r1, [r3, #44]	; 0x2c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800669a:	2300      	movs	r3, #0
 800669c:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800669e:	4618      	mov	r0, r3
 80066a0:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 80066a2:	2002      	movs	r0, #2
}
 80066a4:	4770      	bx	lr

080066a6 <HAL_DSI_ConfigPhyTimer>:
  * @param  PhyTimers  DSI_PHY_TimerTypeDef structure that contains
  *                    the DSI PHY timing parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigPhyTimer(DSI_HandleTypeDef *hdsi, DSI_PHY_TimerTypeDef *PhyTimers)
{
 80066a6:	b530      	push	{r4, r5, lr}
  uint32_t maxTime;
  /* Process locked */
  __HAL_LOCK(hdsi);
 80066a8:	7c03      	ldrb	r3, [r0, #16]
 80066aa:	2b01      	cmp	r3, #1
 80066ac:	d035      	beq.n	800671a <HAL_DSI_ConfigPhyTimer+0x74>
     Register (DSI_CLTCR).
     But the DSI Host is not calculating LP2HS_TIME + HS2LP_TIME but 2 x HS2LP_TIME.

     Workaround : Configure HS2LP_TIME and LP2HS_TIME with the same value being the max of HS2LP_TIME or LP2HS_TIME.
    */
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 80066ae:	6803      	ldr	r3, [r0, #0]
  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 80066b0:	e9d1 2400 	ldrd	r2, r4, [r1]
 80066b4:	4294      	cmp	r4, r2
 80066b6:	bf38      	it	cc
 80066b8:	4614      	movcc	r4, r2
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 80066ba:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 80066be:	f002 22fc 	and.w	r2, r2, #4227922944	; 0xfc00fc00
 80066c2:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
  hdsi->Instance->CLTCR |= (maxTime | ((maxTime) << 16U));
 80066c6:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 80066ca:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 80066ce:	4322      	orrs	r2, r4
 80066d0:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98

  /* Data lane timer configuration */
  hdsi->Instance->DLTCR &= ~(DSI_DLTCR_MRD_TIME | DSI_DLTCR_LP2HS_TIME | DSI_DLTCR_HS2LP_TIME);
 80066d4:	f8d3 209c 	ldr.w	r2, [r3, #156]	; 0x9c
 80066d8:	f402 4200 	and.w	r2, r2, #32768	; 0x8000
 80066dc:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 80066e0:	f8d3 409c 	ldr.w	r4, [r3, #156]	; 0x9c
                              PhyTimers->DataLaneHS2LPTime) << 24U));
 80066e4:	e9d1 2502 	ldrd	r2, r5, [r1, #8]
 80066e8:	0612      	lsls	r2, r2, #24
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 80066ea:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 80066ee:	690d      	ldr	r5, [r1, #16]

  /* Configure the wait period to request HS transmission after a stop state */
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 80066f0:	6949      	ldr	r1, [r1, #20]
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 80066f2:	432a      	orrs	r2, r5
 80066f4:	4322      	orrs	r2, r4
 80066f6:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
 80066fa:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 80066fe:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8006702:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 8006706:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 800670a:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800670e:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8006712:	2300      	movs	r3, #0
 8006714:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8006716:	4618      	mov	r0, r3
}
 8006718:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800671a:	2002      	movs	r0, #2
 800671c:	e7fc      	b.n	8006718 <HAL_DSI_ConfigPhyTimer+0x72>
	...

08006720 <HAL_DSI_ConfigHostTimeouts>:
  * @param  HostTimeouts  DSI_HOST_TimeoutTypeDef structure that contains
  *                       the DSI host timeout parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigHostTimeouts(DSI_HandleTypeDef *hdsi, DSI_HOST_TimeoutTypeDef *HostTimeouts)
{
 8006720:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 8006722:	7c03      	ldrb	r3, [r0, #16]
 8006724:	2b01      	cmp	r3, #1
 8006726:	d05c      	beq.n	80067e2 <HAL_DSI_ConfigHostTimeouts+0xc2>

  /* Set the timeout clock division factor */
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 8006728:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 800672a:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 800672c:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);

  /* Low-power reception timeout */
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 800672e:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 8006730:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8006734:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 8006736:	689a      	ldr	r2, [r3, #8]
 8006738:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 800673c:	684c      	ldr	r4, [r1, #4]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 800673e:	609a      	str	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 8006740:	6f9a      	ldr	r2, [r3, #120]	; 0x78
 8006742:	b292      	uxth	r2, r2
 8006744:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 8006746:	6f9a      	ldr	r2, [r3, #120]	; 0x78
 8006748:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 800674c:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
 800674e:	4a26      	ldr	r2, [pc, #152]	; (80067e8 <HAL_DSI_ConfigHostTimeouts+0xc8>)
 8006750:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 8006752:	4014      	ands	r4, r2
 8006754:	679c      	str	r4, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 8006756:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 8006758:	432c      	orrs	r4, r5

  /* High-speed read timeout */
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 800675a:	68cd      	ldr	r5, [r1, #12]
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 800675c:	679c      	str	r4, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 800675e:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
 8006760:	4014      	ands	r4, r2
 8006762:	67dc      	str	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 8006764:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
 8006766:	432c      	orrs	r4, r5

  /* Low-power read timeout */
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 8006768:	690d      	ldr	r5, [r1, #16]
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 800676a:	67dc      	str	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 800676c:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
 8006770:	4014      	ands	r4, r2
 8006772:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 8006776:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
 800677a:	432c      	orrs	r4, r5

  /* High-speed write timeout */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 800677c:	694d      	ldr	r5, [r1, #20]
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 800677e:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 8006782:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 8006786:	4014      	ands	r4, r2
 8006788:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 800678c:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 8006790:	432c      	orrs	r4, r5
 8006792:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84

  /* High-speed write presp mode */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_PM;
 8006796:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 800679a:	f024 7480 	bic.w	r4, r4, #16777216	; 0x1000000
 800679e:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWritePrespMode;
 80067a2:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 80067a6:	698d      	ldr	r5, [r1, #24]
 80067a8:	432c      	orrs	r4, r5

  /* Low-speed write timeout */
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 80067aa:	69cd      	ldr	r5, [r1, #28]

  /* BTA timeout */
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 80067ac:	6a09      	ldr	r1, [r1, #32]
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWritePrespMode;
 80067ae:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 80067b2:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
 80067b6:	4014      	ands	r4, r2
 80067b8:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 80067bc:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
 80067c0:	432c      	orrs	r4, r5
 80067c2:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
 80067c6:	f8d3 408c 	ldr.w	r4, [r3, #140]	; 0x8c
 80067ca:	4022      	ands	r2, r4
 80067cc:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 80067d0:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 80067d4:	430a      	orrs	r2, r1
 80067d6:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 80067da:	2300      	movs	r3, #0
 80067dc:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 80067de:	4618      	mov	r0, r3
}
 80067e0:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 80067e2:	2002      	movs	r0, #2
 80067e4:	e7fc      	b.n	80067e0 <HAL_DSI_ConfigHostTimeouts+0xc0>
 80067e6:	bf00      	nop
 80067e8:	ffff0000 	.word	0xffff0000

080067ec <HAL_DSI_Start>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Start(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 80067ec:	7c03      	ldrb	r3, [r0, #16]
{
 80067ee:	b082      	sub	sp, #8
  __HAL_LOCK(hdsi);
 80067f0:	2b01      	cmp	r3, #1
 80067f2:	d01c      	beq.n	800682e <HAL_DSI_Start+0x42>

  /* Enable the DSI host */
  __HAL_DSI_ENABLE(hdsi);
 80067f4:	6802      	ldr	r2, [r0, #0]
 80067f6:	2300      	movs	r3, #0
 80067f8:	9300      	str	r3, [sp, #0]
 80067fa:	6851      	ldr	r1, [r2, #4]
 80067fc:	f041 0101 	orr.w	r1, r1, #1
 8006800:	6051      	str	r1, [r2, #4]
 8006802:	6851      	ldr	r1, [r2, #4]
 8006804:	f001 0101 	and.w	r1, r1, #1
 8006808:	9100      	str	r1, [sp, #0]
 800680a:	9900      	ldr	r1, [sp, #0]

  /* Enable the DSI wrapper */
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 800680c:	9301      	str	r3, [sp, #4]
 800680e:	f8d2 1404 	ldr.w	r1, [r2, #1028]	; 0x404
 8006812:	f041 0108 	orr.w	r1, r1, #8
 8006816:	f8c2 1404 	str.w	r1, [r2, #1028]	; 0x404
 800681a:	f8d2 2404 	ldr.w	r2, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800681e:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8006820:	4618      	mov	r0, r3
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 8006822:	f002 0208 	and.w	r2, r2, #8
 8006826:	9201      	str	r2, [sp, #4]
 8006828:	9a01      	ldr	r2, [sp, #4]
}
 800682a:	b002      	add	sp, #8
 800682c:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800682e:	2002      	movs	r0, #2
 8006830:	e7fb      	b.n	800682a <HAL_DSI_Start+0x3e>

08006832 <HAL_DSI_Refresh>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Refresh(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8006832:	7c03      	ldrb	r3, [r0, #16]
 8006834:	2b01      	cmp	r3, #1
 8006836:	d00a      	beq.n	800684e <HAL_DSI_Refresh+0x1c>

  /* Update the display */
  hdsi->Instance->WCR |= DSI_WCR_LTDCEN;
 8006838:	6802      	ldr	r2, [r0, #0]
 800683a:	f8d2 3404 	ldr.w	r3, [r2, #1028]	; 0x404
 800683e:	f043 0304 	orr.w	r3, r3, #4
 8006842:	f8c2 3404 	str.w	r3, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8006846:	2300      	movs	r3, #0
 8006848:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800684a:	4618      	mov	r0, r3
 800684c:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800684e:	2002      	movs	r0, #2
}
 8006850:	4770      	bx	lr

08006852 <HAL_DSI_ShortWrite>:
HAL_StatusTypeDef HAL_DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                     uint32_t ChannelID,
                                     uint32_t Mode,
                                     uint32_t Param1,
                                     uint32_t Param2)
{
 8006852:	b537      	push	{r0, r1, r2, r4, r5, lr}
  HAL_StatusTypeDef status;
  /* Check the parameters */
  assert_param(IS_DSI_SHORT_WRITE_PACKET_TYPE(Mode));

  /* Process locked */
  __HAL_LOCK(hdsi);
 8006854:	7c05      	ldrb	r5, [r0, #16]
{
 8006856:	4604      	mov	r4, r0
  __HAL_LOCK(hdsi);
 8006858:	2d01      	cmp	r5, #1
 800685a:	d009      	beq.n	8006870 <HAL_DSI_ShortWrite+0x1e>
 800685c:	2501      	movs	r5, #1
 800685e:	7405      	strb	r5, [r0, #16]

  status = DSI_ShortWrite(hdsi, ChannelID, Mode, Param1, Param2);
 8006860:	9d06      	ldr	r5, [sp, #24]
 8006862:	9500      	str	r5, [sp, #0]
 8006864:	f7ff fcad 	bl	80061c2 <DSI_ShortWrite>

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8006868:	2300      	movs	r3, #0
 800686a:	7423      	strb	r3, [r4, #16]

  return status;
}
 800686c:	b003      	add	sp, #12
 800686e:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 8006870:	2002      	movs	r0, #2
 8006872:	e7fb      	b.n	800686c <HAL_DSI_ShortWrite+0x1a>

08006874 <HAL_DSI_LongWrite>:
                                    uint32_t ChannelID,
                                    uint32_t Mode,
                                    uint32_t NbParams,
                                    uint32_t Param1,
                                    uint8_t *ParametersTable)
{
 8006874:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006878:	461c      	mov	r4, r3
  uint32_t tickstart;
  uint32_t fifoword;
  uint8_t *pparams = ParametersTable;

  /* Process locked */
  __HAL_LOCK(hdsi);
 800687a:	7c03      	ldrb	r3, [r0, #16]
{
 800687c:	4606      	mov	r6, r0
 800687e:	460f      	mov	r7, r1
  __HAL_LOCK(hdsi);
 8006880:	2b01      	cmp	r3, #1
{
 8006882:	4615      	mov	r5, r2
 8006884:	e9dd 980a 	ldrd	r9, r8, [sp, #40]	; 0x28
  __HAL_LOCK(hdsi);
 8006888:	d053      	beq.n	8006932 <HAL_DSI_LongWrite+0xbe>
 800688a:	2301      	movs	r3, #1
 800688c:	7403      	strb	r3, [r0, #16]

  /* Check the parameters */
  assert_param(IS_DSI_LONG_WRITE_PACKET_TYPE(Mode));

  /* Get tick */
  tickstart = HAL_GetTick();
 800688e:	f7ff faa3 	bl	8005dd8 <HAL_GetTick>
 8006892:	4683      	mov	fp, r0

  /* Wait for Command FIFO Empty */
  while ((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 8006894:	6831      	ldr	r1, [r6, #0]
 8006896:	6f4b      	ldr	r3, [r1, #116]	; 0x74
 8006898:	f013 0a01 	ands.w	sl, r3, #1
 800689c:	d01a      	beq.n	80068d4 <HAL_DSI_LongWrite+0x60>
    }
  }

  /* Set the DCS code on payload byte 1, and the other parameters on the write FIFO command*/
  fifoword = Param1;
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 800689e:	2c03      	cmp	r4, #3
 80068a0:	4620      	mov	r0, r4

  for (count = 0U; count < nbBytes; count++)
 80068a2:	f04f 0200 	mov.w	r2, #0
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 80068a6:	bf28      	it	cs
 80068a8:	2003      	movcs	r0, #3
  for (count = 0U; count < nbBytes; count++)
 80068aa:	4282      	cmp	r2, r0
 80068ac:	d11e      	bne.n	80068ec <HAL_DSI_LongWrite+0x78>
  {
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
  }
  hdsi->Instance->GPDR = fifoword;

  uicounter = NbParams - nbBytes;
 80068ae:	1aa3      	subs	r3, r4, r2
  pparams += nbBytes;
 80068b0:	4442      	add	r2, r8
  hdsi->Instance->GPDR = fifoword;
 80068b2:	f8c1 9070 	str.w	r9, [r1, #112]	; 0x70
  /* Set the Next parameters on the write FIFO command*/
  while (uicounter != 0U)
 80068b6:	bb1b      	cbnz	r3, 8006900 <HAL_DSI_LongWrite+0x8c>

  /* Configure the packet to send a long DCS command */
  DSI_ConfigPacketHeader(hdsi->Instance,
                         ChannelID,
                         Mode,
                         ((NbParams + 1U) & 0x00FFU),
 80068b8:	3401      	adds	r4, #1
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 80068ba:	ea45 1587 	orr.w	r5, r5, r7, lsl #6
                         (((NbParams + 1U) & 0xFF00U) >> 8U));

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);

  return HAL_OK;
 80068be:	4618      	mov	r0, r3
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 80068c0:	0222      	lsls	r2, r4, #8
 80068c2:	0224      	lsls	r4, r4, #8
 80068c4:	b292      	uxth	r2, r2
 80068c6:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 80068ca:	4315      	orrs	r5, r2
 80068cc:	432c      	orrs	r4, r5
 80068ce:	66cc      	str	r4, [r1, #108]	; 0x6c
  __HAL_UNLOCK(hdsi);
 80068d0:	7433      	strb	r3, [r6, #16]
  return HAL_OK;
 80068d2:	e009      	b.n	80068e8 <HAL_DSI_LongWrite+0x74>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 80068d4:	f7ff fa80 	bl	8005dd8 <HAL_GetTick>
 80068d8:	eba0 000b 	sub.w	r0, r0, fp
 80068dc:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 80068e0:	d9d8      	bls.n	8006894 <HAL_DSI_LongWrite+0x20>
      return HAL_TIMEOUT;
 80068e2:	2003      	movs	r0, #3
      __HAL_UNLOCK(hdsi);
 80068e4:	f886 a010 	strb.w	sl, [r6, #16]
}
 80068e8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
 80068ec:	f818 3002 	ldrb.w	r3, [r8, r2]
 80068f0:	3201      	adds	r2, #1
 80068f2:	ea4f 0cc2 	mov.w	ip, r2, lsl #3
 80068f6:	fa03 f30c 	lsl.w	r3, r3, ip
 80068fa:	ea49 0903 	orr.w	r9, r9, r3
  for (count = 0U; count < nbBytes; count++)
 80068fe:	e7d4      	b.n	80068aa <HAL_DSI_LongWrite+0x36>
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 8006900:	2b04      	cmp	r3, #4
    fifoword = 0U;
 8006902:	f04f 0c00 	mov.w	ip, #0
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 8006906:	469e      	mov	lr, r3
    for (count = 0U; count < nbBytes; count++)
 8006908:	4660      	mov	r0, ip
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 800690a:	bf28      	it	cs
 800690c:	f04f 0e04 	movcs.w	lr, #4
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 8006910:	f812 8000 	ldrb.w	r8, [r2, r0]
 8006914:	ea4f 09c0 	mov.w	r9, r0, lsl #3
    for (count = 0U; count < nbBytes; count++)
 8006918:	3001      	adds	r0, #1
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 800691a:	fa08 f809 	lsl.w	r8, r8, r9
    for (count = 0U; count < nbBytes; count++)
 800691e:	4586      	cmp	lr, r0
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 8006920:	ea4c 0c08 	orr.w	ip, ip, r8
    for (count = 0U; count < nbBytes; count++)
 8006924:	d1f4      	bne.n	8006910 <HAL_DSI_LongWrite+0x9c>
    uicounter -= nbBytes;
 8006926:	eba3 030e 	sub.w	r3, r3, lr
    pparams += nbBytes;
 800692a:	4472      	add	r2, lr
    hdsi->Instance->GPDR = fifoword;
 800692c:	f8c1 c070 	str.w	ip, [r1, #112]	; 0x70
    pparams += nbBytes;
 8006930:	e7c1      	b.n	80068b6 <HAL_DSI_LongWrite+0x42>
  __HAL_LOCK(hdsi);
 8006932:	2002      	movs	r0, #2
 8006934:	e7d8      	b.n	80068e8 <HAL_DSI_LongWrite+0x74>

08006936 <HAL_DSI_Read>:
                               uint8_t *Array,
                               uint32_t Size,
                               uint32_t Mode,
                               uint32_t DCSCmd,
                               uint8_t *ParametersTable)
{
 8006936:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800693a:	461e      	mov	r6, r3
  uint32_t fifoword;
  uint32_t nbbytes;
  uint32_t count;

  /* Process locked */
  __HAL_LOCK(hdsi);
 800693c:	7c03      	ldrb	r3, [r0, #16]
{
 800693e:	4605      	mov	r5, r0
 8006940:	460c      	mov	r4, r1
  __HAL_LOCK(hdsi);
 8006942:	2b01      	cmp	r3, #1
{
 8006944:	4617      	mov	r7, r2
 8006946:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 800694a:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
  __HAL_LOCK(hdsi);
 800694e:	d06f      	beq.n	8006a30 <HAL_DSI_Read+0xfa>
 8006950:	2301      	movs	r3, #1

  /* Check the parameters */
  assert_param(IS_DSI_READ_PACKET_TYPE(Mode));

  if (datasize > 2U)
 8006952:	2e02      	cmp	r6, #2
  __HAL_LOCK(hdsi);
 8006954:	7403      	strb	r3, [r0, #16]
  if (datasize > 2U)
 8006956:	d90d      	bls.n	8006974 <HAL_DSI_Read+0x3e>
  {
    /* set max return packet size */
    if (DSI_ShortWrite(hdsi, ChannelNbr, DSI_MAX_RETURN_PKT_SIZE, ((datasize) & 0xFFU),
 8006958:	f3c6 2307 	ubfx	r3, r6, #8, #8
 800695c:	2237      	movs	r2, #55	; 0x37
 800695e:	9300      	str	r3, [sp, #0]
 8006960:	b2f3      	uxtb	r3, r6
 8006962:	f7ff fc2e 	bl	80061c2 <DSI_ShortWrite>
 8006966:	b128      	cbz	r0, 8006974 <HAL_DSI_Read+0x3e>
                       (((datasize) >> 8U) & 0xFFU)) != HAL_OK)
    {
      /* Process Unlocked */
      __HAL_UNLOCK(hdsi);
 8006968:	2300      	movs	r3, #0

      return HAL_ERROR;
 800696a:	2001      	movs	r0, #1
      __HAL_UNLOCK(hdsi);
 800696c:	742b      	strb	r3, [r5, #16]

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);

  return HAL_OK;
}
 800696e:	b003      	add	sp, #12
 8006970:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  if (Mode == DSI_DCS_SHORT_PKT_READ)
 8006974:	f1b9 0f06 	cmp.w	r9, #6
 8006978:	d10f      	bne.n	800699a <HAL_DSI_Read+0x64>
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 800697a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    DSI_ConfigPacketHeader(hdsi->Instance, ChannelNbr, Mode, DCSCmd, 0U);
 800697c:	682a      	ldr	r2, [r5, #0]
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 800697e:	021b      	lsls	r3, r3, #8
 8006980:	ea43 1484 	orr.w	r4, r3, r4, lsl #6
 8006984:	f044 0406 	orr.w	r4, r4, #6
 8006988:	66d4      	str	r4, [r2, #108]	; 0x6c
  tickstart = HAL_GetTick();
 800698a:	f7ff fa25 	bl	8005dd8 <HAL_GetTick>
 800698e:	4604      	mov	r4, r0
  while (((int32_t)(datasize)) > 0)
 8006990:	2e00      	cmp	r6, #0
 8006992:	dc27      	bgt.n	80069e4 <HAL_DSI_Read+0xae>
  __HAL_UNLOCK(hdsi);
 8006994:	2000      	movs	r0, #0
 8006996:	7428      	strb	r0, [r5, #16]
  return HAL_OK;
 8006998:	e7e9      	b.n	800696e <HAL_DSI_Read+0x38>
  else if (Mode == DSI_GEN_SHORT_PKT_READ_P0)
 800699a:	f1b9 0f04 	cmp.w	r9, #4
 800699e:	d105      	bne.n	80069ac <HAL_DSI_Read+0x76>
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 80069a0:	01a4      	lsls	r4, r4, #6
    DSI_ConfigPacketHeader(hdsi->Instance, ChannelNbr, Mode, 0U, 0U);
 80069a2:	682b      	ldr	r3, [r5, #0]
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 80069a4:	f044 0404 	orr.w	r4, r4, #4
 80069a8:	66dc      	str	r4, [r3, #108]	; 0x6c
}
 80069aa:	e7ee      	b.n	800698a <HAL_DSI_Read+0x54>
  else if (Mode == DSI_GEN_SHORT_PKT_READ_P1)
 80069ac:	f1b9 0f14 	cmp.w	r9, #20
 80069b0:	d108      	bne.n	80069c4 <HAL_DSI_Read+0x8e>
    DSI_ConfigPacketHeader(hdsi->Instance, ChannelNbr, Mode, ParametersTable[0U], 0U);
 80069b2:	f898 1000 	ldrb.w	r1, [r8]
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 80069b6:	01a4      	lsls	r4, r4, #6
    DSI_ConfigPacketHeader(hdsi->Instance, ChannelNbr, Mode, ParametersTable[0U], 0U);
 80069b8:	682b      	ldr	r3, [r5, #0]
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 80069ba:	ea44 2401 	orr.w	r4, r4, r1, lsl #8
 80069be:	f044 0414 	orr.w	r4, r4, #20
 80069c2:	e7f1      	b.n	80069a8 <HAL_DSI_Read+0x72>
  else if (Mode == DSI_GEN_SHORT_PKT_READ_P2)
 80069c4:	f1b9 0f24 	cmp.w	r9, #36	; 0x24
 80069c8:	d1ce      	bne.n	8006968 <HAL_DSI_Read+0x32>
    DSI_ConfigPacketHeader(hdsi->Instance, ChannelNbr, Mode, ParametersTable[0U], ParametersTable[1U]);
 80069ca:	f898 1001 	ldrb.w	r1, [r8, #1]
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 80069ce:	01a4      	lsls	r4, r4, #6
    DSI_ConfigPacketHeader(hdsi->Instance, ChannelNbr, Mode, ParametersTable[0U], ParametersTable[1U]);
 80069d0:	f898 2000 	ldrb.w	r2, [r8]
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 80069d4:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
    DSI_ConfigPacketHeader(hdsi->Instance, ChannelNbr, Mode, ParametersTable[0U], ParametersTable[1U]);
 80069d8:	682b      	ldr	r3, [r5, #0]
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 80069da:	ea44 2402 	orr.w	r4, r4, r2, lsl #8
 80069de:	f044 0424 	orr.w	r4, r4, #36	; 0x24
 80069e2:	e7e1      	b.n	80069a8 <HAL_DSI_Read+0x72>
    if ((hdsi->Instance->GPSR & DSI_GPSR_PRDFE) == 0U)
 80069e4:	682a      	ldr	r2, [r5, #0]
 80069e6:	6f53      	ldr	r3, [r2, #116]	; 0x74
 80069e8:	f013 0310 	ands.w	r3, r3, #16
 80069ec:	d10d      	bne.n	8006a0a <HAL_DSI_Read+0xd4>
      nbbytes = (datasize < 4U) ? datasize : 4U;
 80069ee:	2e04      	cmp	r6, #4
      fifoword = hdsi->Instance->GPDR;
 80069f0:	6f10      	ldr	r0, [r2, #112]	; 0x70
      nbbytes = (datasize < 4U) ? datasize : 4U;
 80069f2:	4632      	mov	r2, r6
 80069f4:	bf28      	it	cs
 80069f6:	2204      	movcs	r2, #4
        *pdata = (uint8_t)(fifoword >> (8U * count));
 80069f8:	00d9      	lsls	r1, r3, #3
 80069fa:	fa20 f101 	lsr.w	r1, r0, r1
 80069fe:	54f9      	strb	r1, [r7, r3]
      for (count = 0U; count < nbbytes; count++)
 8006a00:	3301      	adds	r3, #1
 8006a02:	429a      	cmp	r2, r3
 8006a04:	d1f8      	bne.n	80069f8 <HAL_DSI_Read+0xc2>
        pdata++;
 8006a06:	4417      	add	r7, r2
        datasize--;
 8006a08:	1ab6      	subs	r6, r6, r2
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 8006a0a:	f7ff f9e5 	bl	8005dd8 <HAL_GetTick>
 8006a0e:	1b00      	subs	r0, r0, r4
 8006a10:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8006a14:	d903      	bls.n	8006a1e <HAL_DSI_Read+0xe8>
      __HAL_UNLOCK(hdsi);
 8006a16:	2300      	movs	r3, #0
      return HAL_TIMEOUT;
 8006a18:	2003      	movs	r0, #3
      __HAL_UNLOCK(hdsi);
 8006a1a:	742b      	strb	r3, [r5, #16]
      return HAL_TIMEOUT;
 8006a1c:	e7a7      	b.n	800696e <HAL_DSI_Read+0x38>
    if ((hdsi->Instance->GPSR & DSI_GPSR_RCB) == 0U)
 8006a1e:	682b      	ldr	r3, [r5, #0]
 8006a20:	6f5a      	ldr	r2, [r3, #116]	; 0x74
 8006a22:	0652      	lsls	r2, r2, #25
 8006a24:	d4b4      	bmi.n	8006990 <HAL_DSI_Read+0x5a>
      if ((hdsi->Instance->ISR[1U] & DSI_ISR1_PSE) == DSI_ISR1_PSE)
 8006a26:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 8006a2a:	069b      	lsls	r3, r3, #26
 8006a2c:	d49c      	bmi.n	8006968 <HAL_DSI_Read+0x32>
 8006a2e:	e7af      	b.n	8006990 <HAL_DSI_Read+0x5a>
  __HAL_LOCK(hdsi);
 8006a30:	2002      	movs	r0, #2
 8006a32:	e79c      	b.n	800696e <HAL_DSI_Read+0x38>

08006a34 <HAL_DSI_SetLowPowerRXFilter>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetLowPowerRXFilter(DSI_HandleTypeDef *hdsi, uint32_t Frequency)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8006a34:	7c03      	ldrb	r3, [r0, #16]
 8006a36:	2b01      	cmp	r3, #1
 8006a38:	d010      	beq.n	8006a5c <HAL_DSI_SetLowPowerRXFilter+0x28>

  /* Low-Power RX low-pass Filtering Tuning */
  hdsi->Instance->WPCR[1U] &= ~DSI_WPCR1_LPRXFT;
 8006a3a:	6803      	ldr	r3, [r0, #0]
 8006a3c:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 8006a40:	f022 62c0 	bic.w	r2, r2, #100663296	; 0x6000000
 8006a44:	f8c3 241c 	str.w	r2, [r3, #1052]	; 0x41c
  hdsi->Instance->WPCR[1U] |= Frequency << 25U;
 8006a48:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 8006a4c:	ea42 6141 	orr.w	r1, r2, r1, lsl #25
 8006a50:	f8c3 141c 	str.w	r1, [r3, #1052]	; 0x41c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8006a54:	2300      	movs	r3, #0
 8006a56:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8006a58:	4618      	mov	r0, r3
 8006a5a:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8006a5c:	2002      	movs	r0, #2
}
 8006a5e:	4770      	bx	lr

08006a60 <HAL_GPIO_Init>:
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8006a60:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t position = 0x00U;
 8006a64:	2300      	movs	r3, #0
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8006a66:	f8df 91cc 	ldr.w	r9, [pc, #460]	; 8006c34 <HAL_GPIO_Init+0x1d4>
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
 8006a6a:	f04f 44b0 	mov.w	r4, #1476395008	; 0x58000000
  while (((GPIO_Init->Pin) >> position) != 0x00U)
 8006a6e:	680a      	ldr	r2, [r1, #0]
 8006a70:	fa32 f503 	lsrs.w	r5, r2, r3
 8006a74:	d102      	bne.n	8006a7c <HAL_GPIO_Init+0x1c>
      }
    }

    position++;
  }
}
 8006a76:	b003      	add	sp, #12
 8006a78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
 8006a7c:	f04f 0e01 	mov.w	lr, #1
 8006a80:	fa0e fe03 	lsl.w	lr, lr, r3
    if (iocurrent != 0x00U)
 8006a84:	ea1e 0202 	ands.w	r2, lr, r2
 8006a88:	f000 80bd 	beq.w	8006c06 <HAL_GPIO_Init+0x1a6>
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8006a8c:	684e      	ldr	r6, [r1, #4]
 8006a8e:	ea4f 0843 	mov.w	r8, r3, lsl #1
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
 8006a92:	f04f 0c03 	mov.w	ip, #3
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8006a96:	f006 0503 	and.w	r5, r6, #3
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
 8006a9a:	fa0c fc08 	lsl.w	ip, ip, r8
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8006a9e:	1e6f      	subs	r7, r5, #1
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
 8006aa0:	ea6f 0c0c 	mvn.w	ip, ip
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8006aa4:	2f01      	cmp	r7, #1
 8006aa6:	d834      	bhi.n	8006b12 <HAL_GPIO_Init+0xb2>
        temp = GPIOx->OSPEEDR;
 8006aa8:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
 8006aaa:	ea07 0a0c 	and.w	sl, r7, ip
        temp |= (GPIO_Init->Speed << (position * 2U));
 8006aae:	68cf      	ldr	r7, [r1, #12]
 8006ab0:	fa07 f708 	lsl.w	r7, r7, r8
 8006ab4:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OSPEEDR = temp;
 8006ab8:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8006aba:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
 8006abc:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8006ac0:	f3c6 1700 	ubfx	r7, r6, #4, #1
 8006ac4:	409f      	lsls	r7, r3
 8006ac6:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 8006aca:	6047      	str	r7, [r0, #4]
      temp = GPIOx->PUPDR;
 8006acc:	68c7      	ldr	r7, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8006ace:	2d02      	cmp	r5, #2
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
 8006ad0:	ea07 0e0c 	and.w	lr, r7, ip
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 8006ad4:	688f      	ldr	r7, [r1, #8]
 8006ad6:	fa07 f708 	lsl.w	r7, r7, r8
 8006ada:	ea47 070e 	orr.w	r7, r7, lr
      GPIOx->PUPDR = temp;
 8006ade:	60c7      	str	r7, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8006ae0:	d119      	bne.n	8006b16 <HAL_GPIO_Init+0xb6>
        temp = GPIOx->AFR[position >> 3U];
 8006ae2:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
 8006ae6:	f003 0b07 	and.w	fp, r3, #7
 8006aea:	f04f 0e0f 	mov.w	lr, #15
 8006aee:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
 8006af2:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
        temp = GPIOx->AFR[position >> 3U];
 8006af6:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
 8006afa:	fa0e fe0b 	lsl.w	lr, lr, fp
 8006afe:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
 8006b02:	690f      	ldr	r7, [r1, #16]
 8006b04:	fa07 f70b 	lsl.w	r7, r7, fp
 8006b08:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 8006b0c:	f8ca 7020 	str.w	r7, [sl, #32]
 8006b10:	e001      	b.n	8006b16 <HAL_GPIO_Init+0xb6>
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8006b12:	2d03      	cmp	r5, #3
 8006b14:	d1da      	bne.n	8006acc <HAL_GPIO_Init+0x6c>
      temp = GPIOx->MODER;
 8006b16:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8006b18:	fa05 f508 	lsl.w	r5, r5, r8
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8006b1c:	f416 3f40 	tst.w	r6, #196608	; 0x30000
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
 8006b20:	ea07 070c 	and.w	r7, r7, ip
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8006b24:	ea47 0705 	orr.w	r7, r7, r5
      GPIOx->MODER = temp;
 8006b28:	6007      	str	r7, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8006b2a:	d06c      	beq.n	8006c06 <HAL_GPIO_Init+0x1a6>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8006b2c:	f8d9 50f4 	ldr.w	r5, [r9, #244]	; 0xf4
 8006b30:	f023 0703 	bic.w	r7, r3, #3
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
 8006b34:	f003 0c03 	and.w	ip, r3, #3
 8006b38:	f04f 0e0f 	mov.w	lr, #15
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8006b3c:	f045 0502 	orr.w	r5, r5, #2
 8006b40:	f107 47b0 	add.w	r7, r7, #1476395008	; 0x58000000
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
 8006b44:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8006b48:	f8c9 50f4 	str.w	r5, [r9, #244]	; 0xf4
 8006b4c:	f507 6780 	add.w	r7, r7, #1024	; 0x400
 8006b50:	f8d9 50f4 	ldr.w	r5, [r9, #244]	; 0xf4
 8006b54:	f005 0502 	and.w	r5, r5, #2
 8006b58:	9501      	str	r5, [sp, #4]
 8006b5a:	9d01      	ldr	r5, [sp, #4]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
 8006b5c:	fa0e f50c 	lsl.w	r5, lr, ip
        temp = SYSCFG->EXTICR[position >> 2U];
 8006b60:	f8d7 8008 	ldr.w	r8, [r7, #8]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
 8006b64:	ea28 0e05 	bic.w	lr, r8, r5
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
 8006b68:	4d31      	ldr	r5, [pc, #196]	; (8006c30 <HAL_GPIO_Init+0x1d0>)
 8006b6a:	42a8      	cmp	r0, r5
 8006b6c:	d04d      	beq.n	8006c0a <HAL_GPIO_Init+0x1aa>
 8006b6e:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006b72:	42a8      	cmp	r0, r5
 8006b74:	d04b      	beq.n	8006c0e <HAL_GPIO_Init+0x1ae>
 8006b76:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006b7a:	42a8      	cmp	r0, r5
 8006b7c:	d049      	beq.n	8006c12 <HAL_GPIO_Init+0x1b2>
 8006b7e:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006b82:	42a8      	cmp	r0, r5
 8006b84:	d047      	beq.n	8006c16 <HAL_GPIO_Init+0x1b6>
 8006b86:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006b8a:	42a8      	cmp	r0, r5
 8006b8c:	d045      	beq.n	8006c1a <HAL_GPIO_Init+0x1ba>
 8006b8e:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006b92:	42a8      	cmp	r0, r5
 8006b94:	d043      	beq.n	8006c1e <HAL_GPIO_Init+0x1be>
 8006b96:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006b9a:	42a8      	cmp	r0, r5
 8006b9c:	d041      	beq.n	8006c22 <HAL_GPIO_Init+0x1c2>
 8006b9e:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006ba2:	42a8      	cmp	r0, r5
 8006ba4:	d03f      	beq.n	8006c26 <HAL_GPIO_Init+0x1c6>
 8006ba6:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006baa:	42a8      	cmp	r0, r5
 8006bac:	d03d      	beq.n	8006c2a <HAL_GPIO_Init+0x1ca>
 8006bae:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006bb2:	42a8      	cmp	r0, r5
 8006bb4:	bf0c      	ite	eq
 8006bb6:	2509      	moveq	r5, #9
 8006bb8:	250a      	movne	r5, #10
 8006bba:	fa05 f50c 	lsl.w	r5, r5, ip
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8006bbe:	f416 1f80 	tst.w	r6, #1048576	; 0x100000
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
 8006bc2:	ea45 050e 	orr.w	r5, r5, lr
        SYSCFG->EXTICR[position >> 2U] = temp;
 8006bc6:	60bd      	str	r5, [r7, #8]
        temp &= ~(iocurrent);
 8006bc8:	ea6f 0702 	mvn.w	r7, r2
        temp = EXTI->RTSR1;
 8006bcc:	6825      	ldr	r5, [r4, #0]
        temp &= ~(iocurrent);
 8006bce:	bf0c      	ite	eq
 8006bd0:	403d      	andeq	r5, r7
          temp |= iocurrent;
 8006bd2:	4315      	orrne	r5, r2
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8006bd4:	f416 1f00 	tst.w	r6, #2097152	; 0x200000
        EXTI->RTSR1 = temp;
 8006bd8:	6025      	str	r5, [r4, #0]
        temp = EXTI->FTSR1;
 8006bda:	6865      	ldr	r5, [r4, #4]
        temp &= ~(iocurrent);
 8006bdc:	bf0c      	ite	eq
 8006bde:	403d      	andeq	r5, r7
          temp |= iocurrent;
 8006be0:	4315      	orrne	r5, r2
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8006be2:	f416 3f00 	tst.w	r6, #131072	; 0x20000
        EXTI->FTSR1 = temp;
 8006be6:	6065      	str	r5, [r4, #4]
        temp = EXTI_CurrentCPU->EMR1;
 8006be8:	f8d4 5084 	ldr.w	r5, [r4, #132]	; 0x84
        temp &= ~(iocurrent);
 8006bec:	bf0c      	ite	eq
 8006bee:	403d      	andeq	r5, r7
          temp |= iocurrent;
 8006bf0:	4315      	orrne	r5, r2
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8006bf2:	03f6      	lsls	r6, r6, #15
        EXTI_CurrentCPU->EMR1 = temp;
 8006bf4:	f8c4 5084 	str.w	r5, [r4, #132]	; 0x84
        temp = EXTI_CurrentCPU->IMR1;
 8006bf8:	f8d4 5080 	ldr.w	r5, [r4, #128]	; 0x80
        temp &= ~(iocurrent);
 8006bfc:	bf54      	ite	pl
 8006bfe:	403d      	andpl	r5, r7
          temp |= iocurrent;
 8006c00:	4315      	orrmi	r5, r2
        EXTI_CurrentCPU->IMR1 = temp;
 8006c02:	f8c4 5080 	str.w	r5, [r4, #128]	; 0x80
    position++;
 8006c06:	3301      	adds	r3, #1
 8006c08:	e731      	b.n	8006a6e <HAL_GPIO_Init+0xe>
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
 8006c0a:	2500      	movs	r5, #0
 8006c0c:	e7d5      	b.n	8006bba <HAL_GPIO_Init+0x15a>
 8006c0e:	2501      	movs	r5, #1
 8006c10:	e7d3      	b.n	8006bba <HAL_GPIO_Init+0x15a>
 8006c12:	2502      	movs	r5, #2
 8006c14:	e7d1      	b.n	8006bba <HAL_GPIO_Init+0x15a>
 8006c16:	2503      	movs	r5, #3
 8006c18:	e7cf      	b.n	8006bba <HAL_GPIO_Init+0x15a>
 8006c1a:	2504      	movs	r5, #4
 8006c1c:	e7cd      	b.n	8006bba <HAL_GPIO_Init+0x15a>
 8006c1e:	2505      	movs	r5, #5
 8006c20:	e7cb      	b.n	8006bba <HAL_GPIO_Init+0x15a>
 8006c22:	2506      	movs	r5, #6
 8006c24:	e7c9      	b.n	8006bba <HAL_GPIO_Init+0x15a>
 8006c26:	2507      	movs	r5, #7
 8006c28:	e7c7      	b.n	8006bba <HAL_GPIO_Init+0x15a>
 8006c2a:	2508      	movs	r5, #8
 8006c2c:	e7c5      	b.n	8006bba <HAL_GPIO_Init+0x15a>
 8006c2e:	bf00      	nop
 8006c30:	58020000 	.word	0x58020000
 8006c34:	58024400 	.word	0x58024400

08006c38 <HAL_GPIO_DeInit>:
  * @param  GPIO_Pin: specifies the port bit to be written.
  *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
  * @retval None
  */
void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
{
 8006c38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t position = 0x00U;
 8006c3c:	2200      	movs	r2, #0
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      /* Clear the External Interrupt or Event for the current IO */
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
 8006c3e:	f8df 812c 	ldr.w	r8, [pc, #300]	; 8006d6c <HAL_GPIO_DeInit+0x134>
 8006c42:	f8df 912c 	ldr.w	r9, [pc, #300]	; 8006d70 <HAL_GPIO_DeInit+0x138>
 8006c46:	f8df a12c 	ldr.w	sl, [pc, #300]	; 8006d74 <HAL_GPIO_DeInit+0x13c>
 8006c4a:	f8df b12c 	ldr.w	fp, [pc, #300]	; 8006d78 <HAL_GPIO_DeInit+0x140>
  while ((GPIO_Pin >> position) != 0x00U)
 8006c4e:	fa31 f302 	lsrs.w	r3, r1, r2
 8006c52:	d101      	bne.n	8006c58 <HAL_GPIO_DeInit+0x20>
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
    }

    position++;
  }
}
 8006c54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    iocurrent = GPIO_Pin & (1UL << position) ;
 8006c58:	2301      	movs	r3, #1
 8006c5a:	fa03 fc02 	lsl.w	ip, r3, r2
    if (iocurrent != 0x00U)
 8006c5e:	ea1c 0601 	ands.w	r6, ip, r1
 8006c62:	d06d      	beq.n	8006d40 <HAL_GPIO_DeInit+0x108>
      tmp = SYSCFG->EXTICR[position >> 2U];
 8006c64:	f022 0403 	bic.w	r4, r2, #3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
 8006c68:	f002 0703 	and.w	r7, r2, #3
 8006c6c:	250f      	movs	r5, #15
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
 8006c6e:	4b3e      	ldr	r3, [pc, #248]	; (8006d68 <HAL_GPIO_DeInit+0x130>)
 8006c70:	f104 44b0 	add.w	r4, r4, #1476395008	; 0x58000000
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
 8006c74:	00bf      	lsls	r7, r7, #2
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
 8006c76:	4298      	cmp	r0, r3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
 8006c78:	fa05 f507 	lsl.w	r5, r5, r7
      tmp = SYSCFG->EXTICR[position >> 2U];
 8006c7c:	f8d4 e408 	ldr.w	lr, [r4, #1032]	; 0x408
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
 8006c80:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8006c84:	ea05 0e0e 	and.w	lr, r5, lr
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
 8006c88:	d05c      	beq.n	8006d44 <HAL_GPIO_DeInit+0x10c>
 8006c8a:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8006c8e:	4298      	cmp	r0, r3
 8006c90:	d05a      	beq.n	8006d48 <HAL_GPIO_DeInit+0x110>
 8006c92:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8006c96:	4298      	cmp	r0, r3
 8006c98:	d058      	beq.n	8006d4c <HAL_GPIO_DeInit+0x114>
 8006c9a:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8006c9e:	4298      	cmp	r0, r3
 8006ca0:	d056      	beq.n	8006d50 <HAL_GPIO_DeInit+0x118>
 8006ca2:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8006ca6:	4298      	cmp	r0, r3
 8006ca8:	d054      	beq.n	8006d54 <HAL_GPIO_DeInit+0x11c>
 8006caa:	4540      	cmp	r0, r8
 8006cac:	d054      	beq.n	8006d58 <HAL_GPIO_DeInit+0x120>
 8006cae:	4548      	cmp	r0, r9
 8006cb0:	d054      	beq.n	8006d5c <HAL_GPIO_DeInit+0x124>
 8006cb2:	4550      	cmp	r0, sl
 8006cb4:	d054      	beq.n	8006d60 <HAL_GPIO_DeInit+0x128>
 8006cb6:	4558      	cmp	r0, fp
 8006cb8:	d054      	beq.n	8006d64 <HAL_GPIO_DeInit+0x12c>
 8006cba:	f503 53a0 	add.w	r3, r3, #5120	; 0x1400
 8006cbe:	4298      	cmp	r0, r3
 8006cc0:	bf0c      	ite	eq
 8006cc2:	2309      	moveq	r3, #9
 8006cc4:	230a      	movne	r3, #10
 8006cc6:	40bb      	lsls	r3, r7
 8006cc8:	4573      	cmp	r3, lr
 8006cca:	d119      	bne.n	8006d00 <HAL_GPIO_DeInit+0xc8>
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
 8006ccc:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8006cd0:	f8d3 7080 	ldr.w	r7, [r3, #128]	; 0x80
 8006cd4:	ea27 0706 	bic.w	r7, r7, r6
 8006cd8:	f8c3 7080 	str.w	r7, [r3, #128]	; 0x80
        EXTI_CurrentCPU->EMR1 &= ~(iocurrent);
 8006cdc:	f8d3 7084 	ldr.w	r7, [r3, #132]	; 0x84
 8006ce0:	ea27 0706 	bic.w	r7, r7, r6
 8006ce4:	f8c3 7084 	str.w	r7, [r3, #132]	; 0x84
        EXTI->FTSR1 &= ~(iocurrent);
 8006ce8:	685f      	ldr	r7, [r3, #4]
 8006cea:	ea27 0706 	bic.w	r7, r7, r6
 8006cee:	605f      	str	r7, [r3, #4]
        EXTI->RTSR1 &= ~(iocurrent);
 8006cf0:	681f      	ldr	r7, [r3, #0]
 8006cf2:	ea27 0606 	bic.w	r6, r7, r6
 8006cf6:	601e      	str	r6, [r3, #0]
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
 8006cf8:	68a3      	ldr	r3, [r4, #8]
 8006cfa:	ea23 0305 	bic.w	r3, r3, r5
 8006cfe:	60a3      	str	r3, [r4, #8]
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
 8006d00:	2503      	movs	r5, #3
 8006d02:	0053      	lsls	r3, r2, #1
 8006d04:	6804      	ldr	r4, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
 8006d06:	f002 0707 	and.w	r7, r2, #7
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
 8006d0a:	fa05 f303 	lsl.w	r3, r5, r3
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
 8006d0e:	260f      	movs	r6, #15
 8006d10:	00bf      	lsls	r7, r7, #2
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
 8006d12:	431c      	orrs	r4, r3
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
 8006d14:	40be      	lsls	r6, r7
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
 8006d16:	6004      	str	r4, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
 8006d18:	fa22 f405 	lsr.w	r4, r2, r5
 8006d1c:	eb00 0484 	add.w	r4, r0, r4, lsl #2
 8006d20:	6a25      	ldr	r5, [r4, #32]
 8006d22:	ea25 0606 	bic.w	r6, r5, r6
 8006d26:	6226      	str	r6, [r4, #32]
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
 8006d28:	68c4      	ldr	r4, [r0, #12]
 8006d2a:	ea24 0403 	bic.w	r4, r4, r3
 8006d2e:	60c4      	str	r4, [r0, #12]
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT0 << position) ;
 8006d30:	6844      	ldr	r4, [r0, #4]
 8006d32:	ea24 040c 	bic.w	r4, r4, ip
 8006d36:	6044      	str	r4, [r0, #4]
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
 8006d38:	6884      	ldr	r4, [r0, #8]
 8006d3a:	ea24 0303 	bic.w	r3, r4, r3
 8006d3e:	6083      	str	r3, [r0, #8]
    position++;
 8006d40:	3201      	adds	r2, #1
 8006d42:	e784      	b.n	8006c4e <HAL_GPIO_DeInit+0x16>
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
 8006d44:	2300      	movs	r3, #0
 8006d46:	e7be      	b.n	8006cc6 <HAL_GPIO_DeInit+0x8e>
 8006d48:	2301      	movs	r3, #1
 8006d4a:	e7bc      	b.n	8006cc6 <HAL_GPIO_DeInit+0x8e>
 8006d4c:	2302      	movs	r3, #2
 8006d4e:	e7ba      	b.n	8006cc6 <HAL_GPIO_DeInit+0x8e>
 8006d50:	2303      	movs	r3, #3
 8006d52:	e7b8      	b.n	8006cc6 <HAL_GPIO_DeInit+0x8e>
 8006d54:	2304      	movs	r3, #4
 8006d56:	e7b6      	b.n	8006cc6 <HAL_GPIO_DeInit+0x8e>
 8006d58:	2305      	movs	r3, #5
 8006d5a:	e7b4      	b.n	8006cc6 <HAL_GPIO_DeInit+0x8e>
 8006d5c:	2306      	movs	r3, #6
 8006d5e:	e7b2      	b.n	8006cc6 <HAL_GPIO_DeInit+0x8e>
 8006d60:	2307      	movs	r3, #7
 8006d62:	e7b0      	b.n	8006cc6 <HAL_GPIO_DeInit+0x8e>
 8006d64:	2308      	movs	r3, #8
 8006d66:	e7ae      	b.n	8006cc6 <HAL_GPIO_DeInit+0x8e>
 8006d68:	58020000 	.word	0x58020000
 8006d6c:	58021400 	.word	0x58021400
 8006d70:	58021800 	.word	0x58021800
 8006d74:	58021c00 	.word	0x58021c00
 8006d78:	58022000 	.word	0x58022000

08006d7c <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != 0x00U)
 8006d7c:	6903      	ldr	r3, [r0, #16]
 8006d7e:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 8006d80:	bf14      	ite	ne
 8006d82:	2001      	movne	r0, #1
 8006d84:	2000      	moveq	r0, #0
 8006d86:	4770      	bx	lr

08006d88 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 8006d88:	b10a      	cbz	r2, 8006d8e <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
 8006d8a:	6181      	str	r1, [r0, #24]
  }
}
 8006d8c:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
 8006d8e:	0409      	lsls	r1, r1, #16
 8006d90:	e7fb      	b.n	8006d8a <HAL_GPIO_WritePin+0x2>
	...

08006d94 <HAL_HSEM_FastTake>:
    /*take success when MasterID match and take bit set*/
    return HAL_OK;
  }
#else  
  /* Read the RLR register to take the semaphore */
  if (HSEM->RLR[SemID] == (HSEM_CR_COREID_CURRENT | HSEM_RLR_LOCK))
 8006d94:	4b04      	ldr	r3, [pc, #16]	; (8006da8 <HAL_HSEM_FastTake+0x14>)
 8006d96:	3020      	adds	r0, #32
 8006d98:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
  }
#endif

  /* Semaphore take fails */
  return HAL_ERROR;
}
 8006d9c:	4b03      	ldr	r3, [pc, #12]	; (8006dac <HAL_HSEM_FastTake+0x18>)
 8006d9e:	1ac0      	subs	r0, r0, r3
 8006da0:	bf18      	it	ne
 8006da2:	2001      	movne	r0, #1
 8006da4:	4770      	bx	lr
 8006da6:	bf00      	nop
 8006da8:	58026400 	.word	0x58026400
 8006dac:	80000300 	.word	0x80000300

08006db0 <HAL_HSEM_Release>:

  /* Clear the semaphore by writing to the R register : the MasterID , the processID and take bit = 0  */
#if  USE_MULTI_CORE_SHARED_CODE != 0U
  HSEM->R[SemID] = (ProcessID | ((HAL_GetCurrentCPUID() << POSITION_VAL(HSEM_R_MASTERID)) & HSEM_R_MASTERID));
#else
  HSEM->R[SemID] = (ProcessID | HSEM_CR_COREID_CURRENT);
 8006db0:	f441 7140 	orr.w	r1, r1, #768	; 0x300
 8006db4:	4b01      	ldr	r3, [pc, #4]	; (8006dbc <HAL_HSEM_Release+0xc>)
 8006db6:	f843 1020 	str.w	r1, [r3, r0, lsl #2]
#endif

}
 8006dba:	4770      	bx	lr
 8006dbc:	58026400 	.word	0x58026400

08006dc0 <I2C_Flush_TXDR>:
  */
static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c)
{
  /* If a pending TXIS flag is set */
  /* Write a dummy data in TXDR to clear it */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
 8006dc0:	6803      	ldr	r3, [r0, #0]
 8006dc2:	699a      	ldr	r2, [r3, #24]
 8006dc4:	0791      	lsls	r1, r2, #30
 8006dc6:	d501      	bpl.n	8006dcc <I2C_Flush_TXDR+0xc>
  {
    hi2c->Instance->TXDR = 0x00U;
 8006dc8:	2200      	movs	r2, #0
 8006dca:	629a      	str	r2, [r3, #40]	; 0x28
  }

  /* Flush TX register if not empty */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8006dcc:	699a      	ldr	r2, [r3, #24]
 8006dce:	07d2      	lsls	r2, r2, #31
 8006dd0:	d403      	bmi.n	8006dda <I2C_Flush_TXDR+0x1a>
  {
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
 8006dd2:	699a      	ldr	r2, [r3, #24]
 8006dd4:	f042 0201 	orr.w	r2, r2, #1
 8006dd8:	619a      	str	r2, [r3, #24]
  }
}
 8006dda:	4770      	bx	lr

08006ddc <I2C_TransferConfig>:
  *     @arg @ref I2C_GENERATE_START_WRITE Generate Restart for write request.
  * @retval None
  */
static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t Size, uint32_t Mode,
                               uint32_t Request)
{
 8006ddc:	b530      	push	{r4, r5, lr}
 8006dde:	9d03      	ldr	r5, [sp, #12]
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* Declaration of tmp to prevent undefined behavior of volatile usage */
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8006de0:	f3c1 0109 	ubfx	r1, r1, #0, #10
                            (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
                              (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
 8006de4:	6804      	ldr	r4, [r0, #0]
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8006de6:	432b      	orrs	r3, r5
  MODIFY_REG(hi2c->Instance->CR2, \
 8006de8:	6860      	ldr	r0, [r4, #4]
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8006dea:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  MODIFY_REG(hi2c->Instance->CR2, \
 8006dee:	4a05      	ldr	r2, [pc, #20]	; (8006e04 <I2C_TransferConfig+0x28>)
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8006df0:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->CR2, \
 8006df2:	ea42 5255 	orr.w	r2, r2, r5, lsr #21
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8006df6:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
  MODIFY_REG(hi2c->Instance->CR2, \
 8006dfa:	ea20 0002 	bic.w	r0, r0, r2
 8006dfe:	4303      	orrs	r3, r0
 8006e00:	6063      	str	r3, [r4, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
                I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
 8006e02:	bd30      	pop	{r4, r5, pc}
 8006e04:	03ff63ff 	.word	0x03ff63ff

08006e08 <I2C_IsErrorOccurred>:
{
 8006e08:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  uint32_t itflag   = hi2c->Instance->ISR;
 8006e0c:	6803      	ldr	r3, [r0, #0]
{
 8006e0e:	4605      	mov	r5, r0
 8006e10:	4688      	mov	r8, r1
 8006e12:	4617      	mov	r7, r2
  uint32_t itflag   = hi2c->Instance->ISR;
 8006e14:	699c      	ldr	r4, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
 8006e16:	f014 0410 	ands.w	r4, r4, #16
 8006e1a:	d079      	beq.n	8006f10 <I2C_IsErrorOccurred+0x108>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8006e1c:	2210      	movs	r2, #16
  HAL_StatusTypeDef status = HAL_OK;
 8006e1e:	2600      	movs	r6, #0
              hi2c->State = HAL_I2C_STATE_READY;
 8006e20:	f04f 0920 	mov.w	r9, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8006e24:	61da      	str	r2, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
 8006e26:	682b      	ldr	r3, [r5, #0]
 8006e28:	699a      	ldr	r2, [r3, #24]
 8006e2a:	0694      	lsls	r4, r2, #26
 8006e2c:	d436      	bmi.n	8006e9c <I2C_IsErrorOccurred+0x94>
 8006e2e:	b10e      	cbz	r6, 8006e34 <I2C_IsErrorOccurred+0x2c>
    error_code |= HAL_I2C_ERROR_AF;
 8006e30:	2404      	movs	r4, #4
 8006e32:	e039      	b.n	8006ea8 <I2C_IsErrorOccurred+0xa0>
      if (Timeout != HAL_MAX_DELAY)
 8006e34:	f1b8 3fff 	cmp.w	r8, #4294967295
 8006e38:	d0f6      	beq.n	8006e28 <I2C_IsErrorOccurred+0x20>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 8006e3a:	f7fe ffcd 	bl	8005dd8 <HAL_GetTick>
 8006e3e:	1bc0      	subs	r0, r0, r7
 8006e40:	4540      	cmp	r0, r8
 8006e42:	d802      	bhi.n	8006e4a <I2C_IsErrorOccurred+0x42>
 8006e44:	f1b8 0f00 	cmp.w	r8, #0
 8006e48:	d1ed      	bne.n	8006e26 <I2C_IsErrorOccurred+0x1e>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
 8006e4a:	682b      	ldr	r3, [r5, #0]
 8006e4c:	6859      	ldr	r1, [r3, #4]
          tmp2 = hi2c->Mode;
 8006e4e:	f895 2042 	ldrb.w	r2, [r5, #66]	; 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
 8006e52:	6998      	ldr	r0, [r3, #24]
          tmp2 = hi2c->Mode;
 8006e54:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
 8006e56:	0400      	lsls	r0, r0, #16
 8006e58:	d50a      	bpl.n	8006e70 <I2C_IsErrorOccurred+0x68>
 8006e5a:	0449      	lsls	r1, r1, #17
 8006e5c:	d408      	bmi.n	8006e70 <I2C_IsErrorOccurred+0x68>
              (tmp1 != I2C_CR2_STOP) && \
 8006e5e:	2a20      	cmp	r2, #32
 8006e60:	d006      	beq.n	8006e70 <I2C_IsErrorOccurred+0x68>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
 8006e62:	685a      	ldr	r2, [r3, #4]
 8006e64:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8006e68:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
 8006e6a:	f7fe ffb5 	bl	8005dd8 <HAL_GetTick>
 8006e6e:	4607      	mov	r7, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8006e70:	682b      	ldr	r3, [r5, #0]
 8006e72:	699c      	ldr	r4, [r3, #24]
 8006e74:	f014 0420 	ands.w	r4, r4, #32
 8006e78:	d1d5      	bne.n	8006e26 <I2C_IsErrorOccurred+0x1e>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
 8006e7a:	f7fe ffad 	bl	8005dd8 <HAL_GetTick>
 8006e7e:	1bc0      	subs	r0, r0, r7
 8006e80:	2819      	cmp	r0, #25
 8006e82:	d9f5      	bls.n	8006e70 <I2C_IsErrorOccurred+0x68>
              hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8006e84:	6c6b      	ldr	r3, [r5, #68]	; 0x44
              status = HAL_ERROR;
 8006e86:	2601      	movs	r6, #1
              __HAL_UNLOCK(hi2c);
 8006e88:	f885 4040 	strb.w	r4, [r5, #64]	; 0x40
              hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8006e8c:	f043 0320 	orr.w	r3, r3, #32
 8006e90:	646b      	str	r3, [r5, #68]	; 0x44
              hi2c->State = HAL_I2C_STATE_READY;
 8006e92:	f885 9041 	strb.w	r9, [r5, #65]	; 0x41
              hi2c->Mode = HAL_I2C_MODE_NONE;
 8006e96:	f885 4042 	strb.w	r4, [r5, #66]	; 0x42
              status = HAL_ERROR;
 8006e9a:	e7e9      	b.n	8006e70 <I2C_IsErrorOccurred+0x68>
    if (status == HAL_OK)
 8006e9c:	2e00      	cmp	r6, #0
 8006e9e:	d1c7      	bne.n	8006e30 <I2C_IsErrorOccurred+0x28>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8006ea0:	2220      	movs	r2, #32
    error_code |= HAL_I2C_ERROR_AF;
 8006ea2:	2404      	movs	r4, #4
    status = HAL_ERROR;
 8006ea4:	2601      	movs	r6, #1
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8006ea6:	61da      	str	r2, [r3, #28]
  itflag = hi2c->Instance->ISR;
 8006ea8:	682b      	ldr	r3, [r5, #0]
 8006eaa:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
 8006eac:	05d0      	lsls	r0, r2, #23
 8006eae:	d505      	bpl.n	8006ebc <I2C_IsErrorOccurred+0xb4>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
 8006eb0:	f44f 7180 	mov.w	r1, #256	; 0x100
    error_code |= HAL_I2C_ERROR_BERR;
 8006eb4:	f044 0401 	orr.w	r4, r4, #1
    status = HAL_ERROR;
 8006eb8:	2601      	movs	r6, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
 8006eba:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
 8006ebc:	0551      	lsls	r1, r2, #21
 8006ebe:	d505      	bpl.n	8006ecc <I2C_IsErrorOccurred+0xc4>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
 8006ec0:	f44f 6180 	mov.w	r1, #1024	; 0x400
    error_code |= HAL_I2C_ERROR_OVR;
 8006ec4:	f044 0408 	orr.w	r4, r4, #8
    status = HAL_ERROR;
 8006ec8:	2601      	movs	r6, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
 8006eca:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
 8006ecc:	0592      	lsls	r2, r2, #22
 8006ece:	d521      	bpl.n	8006f14 <I2C_IsErrorOccurred+0x10c>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
 8006ed0:	f44f 7200 	mov.w	r2, #512	; 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
 8006ed4:	f044 0402 	orr.w	r4, r4, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
 8006ed8:	61da      	str	r2, [r3, #28]
    I2C_Flush_TXDR(hi2c);
 8006eda:	4628      	mov	r0, r5
    __HAL_UNLOCK(hi2c);
 8006edc:	2601      	movs	r6, #1
    I2C_Flush_TXDR(hi2c);
 8006ede:	f7ff ff6f 	bl	8006dc0 <I2C_Flush_TXDR>
    I2C_RESET_CR2(hi2c);
 8006ee2:	682a      	ldr	r2, [r5, #0]
 8006ee4:	6853      	ldr	r3, [r2, #4]
 8006ee6:	f023 73ff 	bic.w	r3, r3, #33423360	; 0x1fe0000
 8006eea:	f423 338b 	bic.w	r3, r3, #71168	; 0x11600
 8006eee:	f423 73ff 	bic.w	r3, r3, #510	; 0x1fe
 8006ef2:	f023 0301 	bic.w	r3, r3, #1
 8006ef6:	6053      	str	r3, [r2, #4]
    hi2c->ErrorCode |= error_code;
 8006ef8:	6c6b      	ldr	r3, [r5, #68]	; 0x44
 8006efa:	431c      	orrs	r4, r3
    hi2c->State = HAL_I2C_STATE_READY;
 8006efc:	2320      	movs	r3, #32
    hi2c->ErrorCode |= error_code;
 8006efe:	646c      	str	r4, [r5, #68]	; 0x44
    hi2c->State = HAL_I2C_STATE_READY;
 8006f00:	f885 3041 	strb.w	r3, [r5, #65]	; 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8006f04:	2300      	movs	r3, #0
 8006f06:	f885 3042 	strb.w	r3, [r5, #66]	; 0x42
    __HAL_UNLOCK(hi2c);
 8006f0a:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
 8006f0e:	e003      	b.n	8006f18 <I2C_IsErrorOccurred+0x110>
  HAL_StatusTypeDef status = HAL_OK;
 8006f10:	4626      	mov	r6, r4
 8006f12:	e7c9      	b.n	8006ea8 <I2C_IsErrorOccurred+0xa0>
  if (status != HAL_OK)
 8006f14:	2e00      	cmp	r6, #0
 8006f16:	d1e0      	bne.n	8006eda <I2C_IsErrorOccurred+0xd2>
}
 8006f18:	4630      	mov	r0, r6
 8006f1a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

08006f1e <I2C_WaitOnTXISFlagUntilTimeout>:
{
 8006f1e:	b570      	push	{r4, r5, r6, lr}
 8006f20:	4604      	mov	r4, r0
 8006f22:	460d      	mov	r5, r1
 8006f24:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 8006f26:	6823      	ldr	r3, [r4, #0]
 8006f28:	699b      	ldr	r3, [r3, #24]
 8006f2a:	079b      	lsls	r3, r3, #30
 8006f2c:	d501      	bpl.n	8006f32 <I2C_WaitOnTXISFlagUntilTimeout+0x14>
  return HAL_OK;
 8006f2e:	2000      	movs	r0, #0
}
 8006f30:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 8006f32:	4632      	mov	r2, r6
 8006f34:	4629      	mov	r1, r5
 8006f36:	4620      	mov	r0, r4
 8006f38:	f7ff ff66 	bl	8006e08 <I2C_IsErrorOccurred>
 8006f3c:	b9a0      	cbnz	r0, 8006f68 <I2C_WaitOnTXISFlagUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
 8006f3e:	1c6a      	adds	r2, r5, #1
 8006f40:	d0f1      	beq.n	8006f26 <I2C_WaitOnTXISFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006f42:	f7fe ff49 	bl	8005dd8 <HAL_GetTick>
 8006f46:	1b80      	subs	r0, r0, r6
 8006f48:	42a8      	cmp	r0, r5
 8006f4a:	d801      	bhi.n	8006f50 <I2C_WaitOnTXISFlagUntilTimeout+0x32>
 8006f4c:	2d00      	cmp	r5, #0
 8006f4e:	d1ea      	bne.n	8006f26 <I2C_WaitOnTXISFlagUntilTimeout+0x8>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8006f50:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8006f52:	f043 0320 	orr.w	r3, r3, #32
 8006f56:	6463      	str	r3, [r4, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8006f58:	2320      	movs	r3, #32
 8006f5a:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8006f5e:	2300      	movs	r3, #0
 8006f60:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
        __HAL_UNLOCK(hi2c);
 8006f64:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
      return HAL_ERROR;
 8006f68:	2001      	movs	r0, #1
 8006f6a:	e7e1      	b.n	8006f30 <I2C_WaitOnTXISFlagUntilTimeout+0x12>

08006f6c <I2C_WaitOnFlagUntilTimeout>:
{
 8006f6c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006f70:	9f06      	ldr	r7, [sp, #24]
 8006f72:	4604      	mov	r4, r0
 8006f74:	4688      	mov	r8, r1
 8006f76:	4616      	mov	r6, r2
 8006f78:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8006f7a:	6822      	ldr	r2, [r4, #0]
 8006f7c:	6993      	ldr	r3, [r2, #24]
 8006f7e:	ea38 0303 	bics.w	r3, r8, r3
 8006f82:	bf0c      	ite	eq
 8006f84:	2301      	moveq	r3, #1
 8006f86:	2300      	movne	r3, #0
 8006f88:	42b3      	cmp	r3, r6
 8006f8a:	d001      	beq.n	8006f90 <I2C_WaitOnFlagUntilTimeout+0x24>
  return HAL_OK;
 8006f8c:	2000      	movs	r0, #0
 8006f8e:	e015      	b.n	8006fbc <I2C_WaitOnFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
 8006f90:	1c6b      	adds	r3, r5, #1
 8006f92:	d0f3      	beq.n	8006f7c <I2C_WaitOnFlagUntilTimeout+0x10>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006f94:	f7fe ff20 	bl	8005dd8 <HAL_GetTick>
 8006f98:	1bc0      	subs	r0, r0, r7
 8006f9a:	42a8      	cmp	r0, r5
 8006f9c:	d801      	bhi.n	8006fa2 <I2C_WaitOnFlagUntilTimeout+0x36>
 8006f9e:	2d00      	cmp	r5, #0
 8006fa0:	d1eb      	bne.n	8006f7a <I2C_WaitOnFlagUntilTimeout+0xe>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8006fa2:	6c63      	ldr	r3, [r4, #68]	; 0x44
        __HAL_UNLOCK(hi2c);
 8006fa4:	2001      	movs	r0, #1
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8006fa6:	f043 0320 	orr.w	r3, r3, #32
 8006faa:	6463      	str	r3, [r4, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8006fac:	2320      	movs	r3, #32
 8006fae:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8006fb2:	2300      	movs	r3, #0
 8006fb4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
        __HAL_UNLOCK(hi2c);
 8006fb8:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8006fbc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08006fc0 <I2C_RequestMemoryWrite>:
{
 8006fc0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8006fc4:	461e      	mov	r6, r3
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 8006fc6:	4b18      	ldr	r3, [pc, #96]	; (8007028 <I2C_RequestMemoryWrite+0x68>)
{
 8006fc8:	4605      	mov	r5, r0
 8006fca:	4614      	mov	r4, r2
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 8006fcc:	9300      	str	r3, [sp, #0]
 8006fce:	b2f2      	uxtb	r2, r6
 8006fd0:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
{
 8006fd4:	e9dd 7808 	ldrd	r7, r8, [sp, #32]
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 8006fd8:	f7ff ff00 	bl	8006ddc <I2C_TransferConfig>
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006fdc:	4628      	mov	r0, r5
 8006fde:	4642      	mov	r2, r8
 8006fe0:	4639      	mov	r1, r7
 8006fe2:	f7ff ff9c 	bl	8006f1e <I2C_WaitOnTXISFlagUntilTimeout>
 8006fe6:	b118      	cbz	r0, 8006ff0 <I2C_RequestMemoryWrite+0x30>
    return HAL_ERROR;
 8006fe8:	2001      	movs	r0, #1
}
 8006fea:	b002      	add	sp, #8
 8006fec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8006ff0:	2e01      	cmp	r6, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8006ff2:	682b      	ldr	r3, [r5, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8006ff4:	d10d      	bne.n	8007012 <I2C_RequestMemoryWrite+0x52>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8006ff6:	b2e4      	uxtb	r4, r4
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
 8006ff8:	2200      	movs	r2, #0
 8006ffa:	2180      	movs	r1, #128	; 0x80
 8006ffc:	4628      	mov	r0, r5
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8006ffe:	629c      	str	r4, [r3, #40]	; 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
 8007000:	463b      	mov	r3, r7
 8007002:	f8cd 8000 	str.w	r8, [sp]
 8007006:	f7ff ffb1 	bl	8006f6c <I2C_WaitOnFlagUntilTimeout>
    return HAL_ERROR;
 800700a:	3800      	subs	r0, #0
 800700c:	bf18      	it	ne
 800700e:	2001      	movne	r0, #1
 8007010:	e7eb      	b.n	8006fea <I2C_RequestMemoryWrite+0x2a>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8007012:	0a22      	lsrs	r2, r4, #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8007014:	4639      	mov	r1, r7
 8007016:	4628      	mov	r0, r5
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8007018:	629a      	str	r2, [r3, #40]	; 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800701a:	4642      	mov	r2, r8
 800701c:	f7ff ff7f 	bl	8006f1e <I2C_WaitOnTXISFlagUntilTimeout>
 8007020:	2800      	cmp	r0, #0
 8007022:	d1e1      	bne.n	8006fe8 <I2C_RequestMemoryWrite+0x28>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8007024:	682b      	ldr	r3, [r5, #0]
 8007026:	e7e6      	b.n	8006ff6 <I2C_RequestMemoryWrite+0x36>
 8007028:	80002000 	.word	0x80002000

0800702c <I2C_RequestMemoryRead>:
{
 800702c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8007030:	461e      	mov	r6, r3
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 8007032:	4b18      	ldr	r3, [pc, #96]	; (8007094 <I2C_RequestMemoryRead+0x68>)
{
 8007034:	4605      	mov	r5, r0
 8007036:	4614      	mov	r4, r2
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 8007038:	9300      	str	r3, [sp, #0]
 800703a:	b2f2      	uxtb	r2, r6
 800703c:	2300      	movs	r3, #0
{
 800703e:	e9dd 7808 	ldrd	r7, r8, [sp, #32]
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 8007042:	f7ff fecb 	bl	8006ddc <I2C_TransferConfig>
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8007046:	4628      	mov	r0, r5
 8007048:	4642      	mov	r2, r8
 800704a:	4639      	mov	r1, r7
 800704c:	f7ff ff67 	bl	8006f1e <I2C_WaitOnTXISFlagUntilTimeout>
 8007050:	b118      	cbz	r0, 800705a <I2C_RequestMemoryRead+0x2e>
    return HAL_ERROR;
 8007052:	2001      	movs	r0, #1
}
 8007054:	b002      	add	sp, #8
 8007056:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800705a:	2e01      	cmp	r6, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 800705c:	682b      	ldr	r3, [r5, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800705e:	d10d      	bne.n	800707c <I2C_RequestMemoryRead+0x50>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8007060:	b2e4      	uxtb	r4, r4
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
 8007062:	2200      	movs	r2, #0
 8007064:	2140      	movs	r1, #64	; 0x40
 8007066:	4628      	mov	r0, r5
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8007068:	629c      	str	r4, [r3, #40]	; 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
 800706a:	463b      	mov	r3, r7
 800706c:	f8cd 8000 	str.w	r8, [sp]
 8007070:	f7ff ff7c 	bl	8006f6c <I2C_WaitOnFlagUntilTimeout>
    return HAL_ERROR;
 8007074:	3800      	subs	r0, #0
 8007076:	bf18      	it	ne
 8007078:	2001      	movne	r0, #1
 800707a:	e7eb      	b.n	8007054 <I2C_RequestMemoryRead+0x28>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 800707c:	0a22      	lsrs	r2, r4, #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800707e:	4639      	mov	r1, r7
 8007080:	4628      	mov	r0, r5
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8007082:	629a      	str	r2, [r3, #40]	; 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8007084:	4642      	mov	r2, r8
 8007086:	f7ff ff4a 	bl	8006f1e <I2C_WaitOnTXISFlagUntilTimeout>
 800708a:	2800      	cmp	r0, #0
 800708c:	d1e1      	bne.n	8007052 <I2C_RequestMemoryRead+0x26>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 800708e:	682b      	ldr	r3, [r5, #0]
 8007090:	e7e6      	b.n	8007060 <I2C_RequestMemoryRead+0x34>
 8007092:	bf00      	nop
 8007094:	80002000 	.word	0x80002000

08007098 <I2C_WaitOnSTOPFlagUntilTimeout>:
{
 8007098:	b570      	push	{r4, r5, r6, lr}
 800709a:	4604      	mov	r4, r0
 800709c:	460d      	mov	r5, r1
 800709e:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 80070a0:	6823      	ldr	r3, [r4, #0]
 80070a2:	699b      	ldr	r3, [r3, #24]
 80070a4:	069b      	lsls	r3, r3, #26
 80070a6:	d501      	bpl.n	80070ac <I2C_WaitOnSTOPFlagUntilTimeout+0x14>
  return HAL_OK;
 80070a8:	2000      	movs	r0, #0
}
 80070aa:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 80070ac:	4632      	mov	r2, r6
 80070ae:	4629      	mov	r1, r5
 80070b0:	4620      	mov	r0, r4
 80070b2:	f7ff fea9 	bl	8006e08 <I2C_IsErrorOccurred>
 80070b6:	b990      	cbnz	r0, 80070de <I2C_WaitOnSTOPFlagUntilTimeout+0x46>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80070b8:	f7fe fe8e 	bl	8005dd8 <HAL_GetTick>
 80070bc:	1b80      	subs	r0, r0, r6
 80070be:	42a8      	cmp	r0, r5
 80070c0:	d801      	bhi.n	80070c6 <I2C_WaitOnSTOPFlagUntilTimeout+0x2e>
 80070c2:	2d00      	cmp	r5, #0
 80070c4:	d1ec      	bne.n	80070a0 <I2C_WaitOnSTOPFlagUntilTimeout+0x8>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 80070c6:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80070c8:	f043 0320 	orr.w	r3, r3, #32
 80070cc:	6463      	str	r3, [r4, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 80070ce:	2320      	movs	r3, #32
 80070d0:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 80070d4:	2300      	movs	r3, #0
 80070d6:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
        __HAL_UNLOCK(hi2c);
 80070da:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
      return HAL_ERROR;
 80070de:	2001      	movs	r0, #1
 80070e0:	e7e3      	b.n	80070aa <I2C_WaitOnSTOPFlagUntilTimeout+0x12>

080070e2 <HAL_I2C_MspInit>:
}
 80070e2:	4770      	bx	lr

080070e4 <HAL_I2C_Init>:
{
 80070e4:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 80070e6:	4604      	mov	r4, r0
 80070e8:	2800      	cmp	r0, #0
 80070ea:	d04a      	beq.n	8007182 <HAL_I2C_Init+0x9e>
  if (hi2c->State == HAL_I2C_STATE_RESET)
 80070ec:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 80070f0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80070f4:	b91b      	cbnz	r3, 80070fe <HAL_I2C_Init+0x1a>
    hi2c->Lock = HAL_UNLOCKED;
 80070f6:	f880 2040 	strb.w	r2, [r0, #64]	; 0x40
    HAL_I2C_MspInit(hi2c);
 80070fa:	f7ff fff2 	bl	80070e2 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 80070fe:	2324      	movs	r3, #36	; 0x24
 8007100:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_I2C_DISABLE(hi2c);
 8007104:	6823      	ldr	r3, [r4, #0]
 8007106:	681a      	ldr	r2, [r3, #0]
 8007108:	f022 0201 	bic.w	r2, r2, #1
 800710c:	601a      	str	r2, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 800710e:	6862      	ldr	r2, [r4, #4]
 8007110:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8007114:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
 8007116:	689a      	ldr	r2, [r3, #8]
 8007118:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800711c:	609a      	str	r2, [r3, #8]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 800711e:	e9d4 2102 	ldrd	r2, r1, [r4, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8007122:	2901      	cmp	r1, #1
 8007124:	d124      	bne.n	8007170 <HAL_I2C_Init+0x8c>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 8007126:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800712a:	609a      	str	r2, [r3, #8]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 800712c:	685a      	ldr	r2, [r3, #4]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800712e:	2000      	movs	r0, #0
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 8007130:	f042 7200 	orr.w	r2, r2, #33554432	; 0x2000000
 8007134:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8007138:	605a      	str	r2, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 800713a:	68da      	ldr	r2, [r3, #12]
 800713c:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8007140:	60da      	str	r2, [r3, #12]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 8007142:	e9d4 2104 	ldrd	r2, r1, [r4, #16]
 8007146:	430a      	orrs	r2, r1
                          (hi2c->Init.OwnAddress2Masks << 8));
 8007148:	69a1      	ldr	r1, [r4, #24]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 800714a:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800714e:	60da      	str	r2, [r3, #12]
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 8007150:	e9d4 2107 	ldrd	r2, r1, [r4, #28]
 8007154:	430a      	orrs	r2, r1
 8007156:	601a      	str	r2, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
 8007158:	681a      	ldr	r2, [r3, #0]
 800715a:	f042 0201 	orr.w	r2, r2, #1
 800715e:	601a      	str	r2, [r3, #0]
  hi2c->State = HAL_I2C_STATE_READY;
 8007160:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8007162:	6460      	str	r0, [r4, #68]	; 0x44
  hi2c->State = HAL_I2C_STATE_READY;
 8007164:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
 8007168:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 800716a:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
}
 800716e:	bd10      	pop	{r4, pc}
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 8007170:	f442 4204 	orr.w	r2, r2, #33792	; 0x8400
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 8007174:	2902      	cmp	r1, #2
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 8007176:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 8007178:	d1d8      	bne.n	800712c <HAL_I2C_Init+0x48>
    hi2c->Instance->CR2 = (I2C_CR2_ADD10);
 800717a:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800717e:	605a      	str	r2, [r3, #4]
 8007180:	e7d4      	b.n	800712c <HAL_I2C_Init+0x48>
    return HAL_ERROR;
 8007182:	2001      	movs	r0, #1
 8007184:	e7f3      	b.n	800716e <HAL_I2C_Init+0x8a>

08007186 <HAL_I2C_MspDeInit>:
 8007186:	4770      	bx	lr

08007188 <HAL_I2C_DeInit>:
{
 8007188:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 800718a:	4604      	mov	r4, r0
 800718c:	b198      	cbz	r0, 80071b6 <HAL_I2C_DeInit+0x2e>
  __HAL_I2C_DISABLE(hi2c);
 800718e:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 8007190:	2324      	movs	r3, #36	; 0x24
 8007192:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41
  __HAL_I2C_DISABLE(hi2c);
 8007196:	6813      	ldr	r3, [r2, #0]
 8007198:	f023 0301 	bic.w	r3, r3, #1
 800719c:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
 800719e:	f7ff fff2 	bl	8007186 <HAL_I2C_MspDeInit>
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80071a2:	2000      	movs	r0, #0
 80071a4:	6460      	str	r0, [r4, #68]	; 0x44
  __HAL_UNLOCK(hi2c);
 80071a6:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_RESET;
 80071aa:	f884 0041 	strb.w	r0, [r4, #65]	; 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
 80071ae:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 80071b0:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
}
 80071b4:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80071b6:	2001      	movs	r0, #1
 80071b8:	e7fc      	b.n	80071b4 <HAL_I2C_DeInit+0x2c>

080071ba <HAL_I2C_Mem_Write>:
{
 80071ba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80071be:	b085      	sub	sp, #20
 80071c0:	469b      	mov	fp, r3
 80071c2:	4604      	mov	r4, r0
 80071c4:	460f      	mov	r7, r1
 80071c6:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 80071ca:	4692      	mov	sl, r2
 80071cc:	f8dd 9040 	ldr.w	r9, [sp, #64]	; 0x40
 80071d0:	9303      	str	r3, [sp, #12]
  if (hi2c->State == HAL_I2C_STATE_READY)
 80071d2:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 80071d6:	2b20      	cmp	r3, #32
 80071d8:	f040 80a3 	bne.w	8007322 <HAL_I2C_Mem_Write+0x168>
    if ((pData == NULL) || (Size == 0U))
 80071dc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80071de:	b10b      	cbz	r3, 80071e4 <HAL_I2C_Mem_Write+0x2a>
 80071e0:	9b03      	ldr	r3, [sp, #12]
 80071e2:	b933      	cbnz	r3, 80071f2 <HAL_I2C_Mem_Write+0x38>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 80071e4:	f44f 7300 	mov.w	r3, #512	; 0x200
 80071e8:	6463      	str	r3, [r4, #68]	; 0x44
      return HAL_ERROR;
 80071ea:	2001      	movs	r0, #1
}
 80071ec:	b005      	add	sp, #20
 80071ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    __HAL_LOCK(hi2c);
 80071f2:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 80071f6:	2b01      	cmp	r3, #1
 80071f8:	f000 8093 	beq.w	8007322 <HAL_I2C_Mem_Write+0x168>
 80071fc:	2501      	movs	r5, #1
 80071fe:	f880 5040 	strb.w	r5, [r0, #64]	; 0x40
    tickstart = HAL_GetTick();
 8007202:	f7fe fde9 	bl	8005dd8 <HAL_GetTick>
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8007206:	2319      	movs	r3, #25
 8007208:	9000      	str	r0, [sp, #0]
    tickstart = HAL_GetTick();
 800720a:	4606      	mov	r6, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 800720c:	462a      	mov	r2, r5
 800720e:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8007212:	4620      	mov	r0, r4
 8007214:	f7ff feaa 	bl	8006f6c <I2C_WaitOnFlagUntilTimeout>
 8007218:	4680      	mov	r8, r0
 800721a:	2800      	cmp	r0, #0
 800721c:	d1e5      	bne.n	80071ea <HAL_I2C_Mem_Write+0x30>
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800721e:	2321      	movs	r3, #33	; 0x21
    hi2c->XferISR   = NULL;
 8007220:	6360      	str	r0, [r4, #52]	; 0x34
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8007222:	4652      	mov	r2, sl
 8007224:	4639      	mov	r1, r7
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8007226:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800722a:	2340      	movs	r3, #64	; 0x40
 800722c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
    hi2c->pBuffPtr  = pData;
 8007230:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8007232:	6460      	str	r0, [r4, #68]	; 0x44
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8007234:	4620      	mov	r0, r4
    hi2c->pBuffPtr  = pData;
 8007236:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount = Size;
 8007238:	9b03      	ldr	r3, [sp, #12]
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800723a:	e9cd 9600 	strd	r9, r6, [sp]
    hi2c->XferCount = Size;
 800723e:	8563      	strh	r3, [r4, #42]	; 0x2a
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8007240:	465b      	mov	r3, fp
 8007242:	f7ff febd 	bl	8006fc0 <I2C_RequestMemoryWrite>
 8007246:	b110      	cbz	r0, 800724e <HAL_I2C_Mem_Write+0x94>
      __HAL_UNLOCK(hi2c);
 8007248:	f884 8040 	strb.w	r8, [r4, #64]	; 0x40
      return HAL_ERROR;
 800724c:	e7cd      	b.n	80071ea <HAL_I2C_Mem_Write+0x30>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 800724e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8007250:	b29b      	uxth	r3, r3
 8007252:	2bff      	cmp	r3, #255	; 0xff
 8007254:	d955      	bls.n	8007302 <HAL_I2C_Mem_Write+0x148>
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8007256:	22ff      	movs	r2, #255	; 0xff
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 8007258:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 800725c:	9000      	str	r0, [sp, #0]
      hi2c->XferSize = MAX_NBYTE_SIZE;
 800725e:	8522      	strh	r2, [r4, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8007260:	4639      	mov	r1, r7
 8007262:	4620      	mov	r0, r4
 8007264:	f7ff fdba 	bl	8006ddc <I2C_TransferConfig>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8007268:	4632      	mov	r2, r6
 800726a:	4649      	mov	r1, r9
 800726c:	4620      	mov	r0, r4
 800726e:	f7ff fe56 	bl	8006f1e <I2C_WaitOnTXISFlagUntilTimeout>
 8007272:	2800      	cmp	r0, #0
 8007274:	d1b9      	bne.n	80071ea <HAL_I2C_Mem_Write+0x30>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
 8007276:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007278:	6822      	ldr	r2, [r4, #0]
 800727a:	f813 1b01 	ldrb.w	r1, [r3], #1
 800727e:	6291      	str	r1, [r2, #40]	; 0x28
      hi2c->pBuffPtr++;
 8007280:	6263      	str	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8007282:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8007284:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8007286:	3b01      	subs	r3, #1
      hi2c->XferSize--;
 8007288:	3a01      	subs	r2, #1
      hi2c->XferCount--;
 800728a:	b29b      	uxth	r3, r3
      hi2c->XferSize--;
 800728c:	b292      	uxth	r2, r2
      hi2c->XferCount--;
 800728e:	8563      	strh	r3, [r4, #42]	; 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8007290:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8007292:	8522      	strh	r2, [r4, #40]	; 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8007294:	b29b      	uxth	r3, r3
 8007296:	b1ab      	cbz	r3, 80072c4 <HAL_I2C_Mem_Write+0x10a>
 8007298:	b9a2      	cbnz	r2, 80072c4 <HAL_I2C_Mem_Write+0x10a>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 800729a:	464b      	mov	r3, r9
 800729c:	2180      	movs	r1, #128	; 0x80
 800729e:	4620      	mov	r0, r4
 80072a0:	9600      	str	r6, [sp, #0]
 80072a2:	f7ff fe63 	bl	8006f6c <I2C_WaitOnFlagUntilTimeout>
 80072a6:	2800      	cmp	r0, #0
 80072a8:	d19f      	bne.n	80071ea <HAL_I2C_Mem_Write+0x30>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 80072aa:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80072ac:	b29b      	uxth	r3, r3
 80072ae:	2bff      	cmp	r3, #255	; 0xff
 80072b0:	d92f      	bls.n	8007312 <HAL_I2C_Mem_Write+0x158>
          hi2c->XferSize = MAX_NBYTE_SIZE;
 80072b2:	22ff      	movs	r2, #255	; 0xff
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 80072b4:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 80072b8:	9000      	str	r0, [sp, #0]
          hi2c->XferSize = MAX_NBYTE_SIZE;
 80072ba:	8522      	strh	r2, [r4, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 80072bc:	4639      	mov	r1, r7
 80072be:	4620      	mov	r0, r4
 80072c0:	f7ff fd8c 	bl	8006ddc <I2C_TransferConfig>
    } while (hi2c->XferCount > 0U);
 80072c4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80072c6:	b29b      	uxth	r3, r3
 80072c8:	2b00      	cmp	r3, #0
 80072ca:	d1cd      	bne.n	8007268 <HAL_I2C_Mem_Write+0xae>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80072cc:	4632      	mov	r2, r6
 80072ce:	4649      	mov	r1, r9
 80072d0:	4620      	mov	r0, r4
 80072d2:	f7ff fee1 	bl	8007098 <I2C_WaitOnSTOPFlagUntilTimeout>
 80072d6:	2800      	cmp	r0, #0
 80072d8:	d187      	bne.n	80071ea <HAL_I2C_Mem_Write+0x30>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80072da:	6823      	ldr	r3, [r4, #0]
 80072dc:	2120      	movs	r1, #32
 80072de:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
 80072e0:	685a      	ldr	r2, [r3, #4]
 80072e2:	f022 72ff 	bic.w	r2, r2, #33423360	; 0x1fe0000
 80072e6:	f422 328b 	bic.w	r2, r2, #71168	; 0x11600
 80072ea:	f422 72ff 	bic.w	r2, r2, #510	; 0x1fe
 80072ee:	f022 0201 	bic.w	r2, r2, #1
 80072f2:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 80072f4:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
 80072f8:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 80072fc:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
    return HAL_OK;
 8007300:	e774      	b.n	80071ec <HAL_I2C_Mem_Write+0x32>
      hi2c->XferSize = hi2c->XferCount;
 8007302:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8007304:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8007308:	9000      	str	r0, [sp, #0]
      hi2c->XferSize = hi2c->XferCount;
 800730a:	b292      	uxth	r2, r2
 800730c:	8522      	strh	r2, [r4, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 800730e:	b2d2      	uxtb	r2, r2
 8007310:	e7a6      	b.n	8007260 <HAL_I2C_Mem_Write+0xa6>
          hi2c->XferSize = hi2c->XferCount;
 8007312:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8007314:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8007318:	9000      	str	r0, [sp, #0]
          hi2c->XferSize = hi2c->XferCount;
 800731a:	b292      	uxth	r2, r2
 800731c:	8522      	strh	r2, [r4, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 800731e:	b2d2      	uxtb	r2, r2
 8007320:	e7cc      	b.n	80072bc <HAL_I2C_Mem_Write+0x102>
    return HAL_BUSY;
 8007322:	2002      	movs	r0, #2
 8007324:	e762      	b.n	80071ec <HAL_I2C_Mem_Write+0x32>
	...

08007328 <HAL_I2C_Mem_Read>:
{
 8007328:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800732c:	b085      	sub	sp, #20
 800732e:	469b      	mov	fp, r3
 8007330:	4604      	mov	r4, r0
 8007332:	460f      	mov	r7, r1
 8007334:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8007338:	4692      	mov	sl, r2
 800733a:	f8dd 9040 	ldr.w	r9, [sp, #64]	; 0x40
 800733e:	9303      	str	r3, [sp, #12]
  if (hi2c->State == HAL_I2C_STATE_READY)
 8007340:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 8007344:	2b20      	cmp	r3, #32
 8007346:	f040 80a7 	bne.w	8007498 <HAL_I2C_Mem_Read+0x170>
    if ((pData == NULL) || (Size == 0U))
 800734a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800734c:	b10b      	cbz	r3, 8007352 <HAL_I2C_Mem_Read+0x2a>
 800734e:	9b03      	ldr	r3, [sp, #12]
 8007350:	b933      	cbnz	r3, 8007360 <HAL_I2C_Mem_Read+0x38>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 8007352:	f44f 7300 	mov.w	r3, #512	; 0x200
 8007356:	6463      	str	r3, [r4, #68]	; 0x44
      return HAL_ERROR;
 8007358:	2001      	movs	r0, #1
}
 800735a:	b005      	add	sp, #20
 800735c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    __HAL_LOCK(hi2c);
 8007360:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 8007364:	2b01      	cmp	r3, #1
 8007366:	f000 8097 	beq.w	8007498 <HAL_I2C_Mem_Read+0x170>
 800736a:	2501      	movs	r5, #1
 800736c:	f880 5040 	strb.w	r5, [r0, #64]	; 0x40
    tickstart = HAL_GetTick();
 8007370:	f7fe fd32 	bl	8005dd8 <HAL_GetTick>
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8007374:	2319      	movs	r3, #25
 8007376:	9000      	str	r0, [sp, #0]
    tickstart = HAL_GetTick();
 8007378:	4606      	mov	r6, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 800737a:	462a      	mov	r2, r5
 800737c:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8007380:	4620      	mov	r0, r4
 8007382:	f7ff fdf3 	bl	8006f6c <I2C_WaitOnFlagUntilTimeout>
 8007386:	4680      	mov	r8, r0
 8007388:	2800      	cmp	r0, #0
 800738a:	d1e5      	bne.n	8007358 <HAL_I2C_Mem_Read+0x30>
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800738c:	2322      	movs	r3, #34	; 0x22
    hi2c->XferISR   = NULL;
 800738e:	6360      	str	r0, [r4, #52]	; 0x34
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8007390:	4652      	mov	r2, sl
 8007392:	4639      	mov	r1, r7
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8007394:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8007398:	2340      	movs	r3, #64	; 0x40
 800739a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
    hi2c->pBuffPtr  = pData;
 800739e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80073a0:	6460      	str	r0, [r4, #68]	; 0x44
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80073a2:	4620      	mov	r0, r4
    hi2c->pBuffPtr  = pData;
 80073a4:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount = Size;
 80073a6:	9b03      	ldr	r3, [sp, #12]
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80073a8:	e9cd 9600 	strd	r9, r6, [sp]
    hi2c->XferCount = Size;
 80073ac:	8563      	strh	r3, [r4, #42]	; 0x2a
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80073ae:	465b      	mov	r3, fp
 80073b0:	f7ff fe3c 	bl	800702c <I2C_RequestMemoryRead>
 80073b4:	b110      	cbz	r0, 80073bc <HAL_I2C_Mem_Read+0x94>
      __HAL_UNLOCK(hi2c);
 80073b6:	f884 8040 	strb.w	r8, [r4, #64]	; 0x40
      return HAL_ERROR;
 80073ba:	e7cd      	b.n	8007358 <HAL_I2C_Mem_Read+0x30>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 80073bc:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80073be:	b29b      	uxth	r3, r3
 80073c0:	2bff      	cmp	r3, #255	; 0xff
 80073c2:	4b36      	ldr	r3, [pc, #216]	; (800749c <HAL_I2C_Mem_Read+0x174>)
 80073c4:	d958      	bls.n	8007478 <HAL_I2C_Mem_Read+0x150>
      hi2c->XferSize = MAX_NBYTE_SIZE;
 80073c6:	22ff      	movs	r2, #255	; 0xff
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 80073c8:	9300      	str	r3, [sp, #0]
 80073ca:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
      hi2c->XferSize = MAX_NBYTE_SIZE;
 80073ce:	8522      	strh	r2, [r4, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 80073d0:	4639      	mov	r1, r7
 80073d2:	4620      	mov	r0, r4
 80073d4:	f7ff fd02 	bl	8006ddc <I2C_TransferConfig>
      if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
 80073d8:	464b      	mov	r3, r9
 80073da:	2200      	movs	r2, #0
 80073dc:	2104      	movs	r1, #4
 80073de:	4620      	mov	r0, r4
 80073e0:	9600      	str	r6, [sp, #0]
 80073e2:	f7ff fdc3 	bl	8006f6c <I2C_WaitOnFlagUntilTimeout>
 80073e6:	2800      	cmp	r0, #0
 80073e8:	d1b6      	bne.n	8007358 <HAL_I2C_Mem_Read+0x30>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
 80073ea:	6823      	ldr	r3, [r4, #0]
 80073ec:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80073ee:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80073f0:	701a      	strb	r2, [r3, #0]
      hi2c->pBuffPtr++;
 80073f2:	6a63      	ldr	r3, [r4, #36]	; 0x24
      hi2c->XferSize--;
 80073f4:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      hi2c->pBuffPtr++;
 80073f6:	3301      	adds	r3, #1
      hi2c->XferSize--;
 80073f8:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 80073fa:	6263      	str	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 80073fc:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 80073fe:	b292      	uxth	r2, r2
      hi2c->XferCount--;
 8007400:	3b01      	subs	r3, #1
      hi2c->XferSize--;
 8007402:	8522      	strh	r2, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8007404:	b29b      	uxth	r3, r3
 8007406:	8563      	strh	r3, [r4, #42]	; 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8007408:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800740a:	b29b      	uxth	r3, r3
 800740c:	b1ab      	cbz	r3, 800743a <HAL_I2C_Mem_Read+0x112>
 800740e:	b9a2      	cbnz	r2, 800743a <HAL_I2C_Mem_Read+0x112>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 8007410:	464b      	mov	r3, r9
 8007412:	2180      	movs	r1, #128	; 0x80
 8007414:	4620      	mov	r0, r4
 8007416:	9600      	str	r6, [sp, #0]
 8007418:	f7ff fda8 	bl	8006f6c <I2C_WaitOnFlagUntilTimeout>
 800741c:	2800      	cmp	r0, #0
 800741e:	d19b      	bne.n	8007358 <HAL_I2C_Mem_Read+0x30>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8007420:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8007422:	b29b      	uxth	r3, r3
 8007424:	2bff      	cmp	r3, #255	; 0xff
 8007426:	d92f      	bls.n	8007488 <HAL_I2C_Mem_Read+0x160>
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8007428:	22ff      	movs	r2, #255	; 0xff
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE,
 800742a:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 800742e:	9000      	str	r0, [sp, #0]
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8007430:	8522      	strh	r2, [r4, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8007432:	4639      	mov	r1, r7
 8007434:	4620      	mov	r0, r4
 8007436:	f7ff fcd1 	bl	8006ddc <I2C_TransferConfig>
    } while (hi2c->XferCount > 0U);
 800743a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800743c:	b29b      	uxth	r3, r3
 800743e:	2b00      	cmp	r3, #0
 8007440:	d1ca      	bne.n	80073d8 <HAL_I2C_Mem_Read+0xb0>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8007442:	4632      	mov	r2, r6
 8007444:	4649      	mov	r1, r9
 8007446:	4620      	mov	r0, r4
 8007448:	f7ff fe26 	bl	8007098 <I2C_WaitOnSTOPFlagUntilTimeout>
 800744c:	2800      	cmp	r0, #0
 800744e:	d183      	bne.n	8007358 <HAL_I2C_Mem_Read+0x30>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8007450:	6823      	ldr	r3, [r4, #0]
 8007452:	2120      	movs	r1, #32
 8007454:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
 8007456:	685a      	ldr	r2, [r3, #4]
 8007458:	f022 72ff 	bic.w	r2, r2, #33423360	; 0x1fe0000
 800745c:	f422 328b 	bic.w	r2, r2, #71168	; 0x11600
 8007460:	f422 72ff 	bic.w	r2, r2, #510	; 0x1fe
 8007464:	f022 0201 	bic.w	r2, r2, #1
 8007468:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 800746a:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
 800746e:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 8007472:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
    return HAL_OK;
 8007476:	e770      	b.n	800735a <HAL_I2C_Mem_Read+0x32>
      hi2c->XferSize = hi2c->XferCount;
 8007478:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 800747a:	9300      	str	r3, [sp, #0]
 800747c:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
      hi2c->XferSize = hi2c->XferCount;
 8007480:	b292      	uxth	r2, r2
 8007482:	8522      	strh	r2, [r4, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8007484:	b2d2      	uxtb	r2, r2
 8007486:	e7a3      	b.n	80073d0 <HAL_I2C_Mem_Read+0xa8>
          hi2c->XferSize = hi2c->XferCount;
 8007488:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 800748a:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 800748e:	9000      	str	r0, [sp, #0]
          hi2c->XferSize = hi2c->XferCount;
 8007490:	b292      	uxth	r2, r2
 8007492:	8522      	strh	r2, [r4, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8007494:	b2d2      	uxtb	r2, r2
 8007496:	e7cc      	b.n	8007432 <HAL_I2C_Mem_Read+0x10a>
    return HAL_BUSY;
 8007498:	2002      	movs	r0, #2
 800749a:	e75e      	b.n	800735a <HAL_I2C_Mem_Read+0x32>
 800749c:	80002400 	.word	0x80002400

080074a0 <HAL_I2C_GetState>:
  return hi2c->State;
 80074a0:	f890 0041 	ldrb.w	r0, [r0, #65]	; 0x41
}
 80074a4:	4770      	bx	lr

080074a6 <HAL_I2C_GetError>:
  return hi2c->ErrorCode;
 80074a6:	6c40      	ldr	r0, [r0, #68]	; 0x44
}
 80074a8:	4770      	bx	lr

080074aa <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter New state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 80074aa:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 80074ac:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 80074b0:	2b20      	cmp	r3, #32
 80074b2:	b2dc      	uxtb	r4, r3
 80074b4:	d11d      	bne.n	80074f2 <HAL_I2CEx_ConfigAnalogFilter+0x48>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 80074b6:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 80074ba:	2b01      	cmp	r3, #1
 80074bc:	d019      	beq.n	80074f2 <HAL_I2CEx_ConfigAnalogFilter+0x48>

    hi2c->State = HAL_I2C_STATE_BUSY;
 80074be:	2324      	movs	r3, #36	; 0x24
 80074c0:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 80074c4:	6803      	ldr	r3, [r0, #0]
 80074c6:	681a      	ldr	r2, [r3, #0]
 80074c8:	f022 0201 	bic.w	r2, r2, #1
 80074cc:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
 80074ce:	681a      	ldr	r2, [r3, #0]
 80074d0:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 80074d4:	601a      	str	r2, [r3, #0]

    /* Set analog filter bit*/
    hi2c->Instance->CR1 |= AnalogFilter;
 80074d6:	681a      	ldr	r2, [r3, #0]
 80074d8:	4311      	orrs	r1, r2
 80074da:	6019      	str	r1, [r3, #0]

    __HAL_I2C_ENABLE(hi2c);
 80074dc:	681a      	ldr	r2, [r3, #0]
 80074de:	f042 0201 	orr.w	r2, r2, #1
 80074e2:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80074e4:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 80074e6:	f880 4041 	strb.w	r4, [r0, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
 80074ea:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40

    return HAL_OK;
 80074ee:	4618      	mov	r0, r3
  }
  else
  {
    return HAL_BUSY;
  }
}
 80074f0:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 80074f2:	2002      	movs	r0, #2
 80074f4:	e7fc      	b.n	80074f0 <HAL_I2CEx_ConfigAnalogFilter+0x46>

080074f6 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between Min_Data=0x00 and Max_Data=0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 80074f6:	b510      	push	{r4, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 80074f8:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 80074fc:	2b20      	cmp	r3, #32
 80074fe:	b2dc      	uxtb	r4, r3
 8007500:	d11c      	bne.n	800753c <HAL_I2CEx_ConfigDigitalFilter+0x46>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 8007502:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 8007506:	2b01      	cmp	r3, #1
 8007508:	d018      	beq.n	800753c <HAL_I2CEx_ConfigDigitalFilter+0x46>

    hi2c->State = HAL_I2C_STATE_BUSY;
 800750a:	2324      	movs	r3, #36	; 0x24
 800750c:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8007510:	6803      	ldr	r3, [r0, #0]
 8007512:	681a      	ldr	r2, [r3, #0]
 8007514:	f022 0201 	bic.w	r2, r2, #1
 8007518:	601a      	str	r2, [r3, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->CR1;
 800751a:	681a      	ldr	r2, [r3, #0]

    /* Reset I2Cx DNF bits [11:8] */
    tmpreg &= ~(I2C_CR1_DNF);
 800751c:	f422 6270 	bic.w	r2, r2, #3840	; 0xf00

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter << 8U;
 8007520:	ea42 2101 	orr.w	r1, r2, r1, lsl #8

    /* Store the new register value */
    hi2c->Instance->CR1 = tmpreg;
 8007524:	6019      	str	r1, [r3, #0]

    __HAL_I2C_ENABLE(hi2c);
 8007526:	681a      	ldr	r2, [r3, #0]
 8007528:	f042 0201 	orr.w	r2, r2, #1
 800752c:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800752e:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 8007530:	f880 4041 	strb.w	r4, [r0, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
 8007534:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40

    return HAL_OK;
 8007538:	4618      	mov	r0, r3
  }
  else
  {
    return HAL_BUSY;
  }
}
 800753a:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 800753c:	2002      	movs	r0, #2
 800753e:	e7fc      	b.n	800753a <HAL_I2CEx_ConfigDigitalFilter+0x44>

08007540 <LTDC_SetConfig>:
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8007540:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8007542:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8007544:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8007548:	3284      	adds	r2, #132	; 0x84
 800754a:	1883      	adds	r3, r0, r2
{
 800754c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8007550:	68c6      	ldr	r6, [r0, #12]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8007552:	f10c 0701 	add.w	r7, ip, #1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8007556:	685d      	ldr	r5, [r3, #4]

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8007558:	f04f 0e00 	mov.w	lr, #0
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800755c:	684c      	ldr	r4, [r1, #4]
 800755e:	f3c6 460b 	ubfx	r6, r6, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8007562:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8007566:	f8d1 9018 	ldr.w	r9, [r1, #24]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800756a:	4426      	add	r6, r4
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800756c:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800756e:	68c5      	ldr	r5, [r0, #12]
 8007570:	f3c5 450b 	ubfx	r5, r5, #16, #12
 8007574:	443d      	add	r5, r7
 8007576:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800757a:	68ce      	ldr	r6, [r1, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800757c:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800757e:	68c5      	ldr	r5, [r0, #12]
 8007580:	f3c5 050a 	ubfx	r5, r5, #0, #11
 8007584:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8007586:	689d      	ldr	r5, [r3, #8]
 8007588:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 800758c:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800758e:	688d      	ldr	r5, [r1, #8]
 8007590:	68c7      	ldr	r7, [r0, #12]
 8007592:	3501      	adds	r5, #1
 8007594:	f3c7 070a 	ubfx	r7, r7, #0, #11
 8007598:	443d      	add	r5, r7
 800759a:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800759e:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 80075a0:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 80075a2:	691d      	ldr	r5, [r3, #16]
 80075a4:	f025 0507 	bic.w	r5, r5, #7
 80075a8:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 80075aa:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 80075ac:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 80075ae:	f891 7032 	ldrb.w	r7, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 80075b2:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 80075b6:	f8c3 e018 	str.w	lr, [r3, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 80075ba:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 80075be:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 80075c2:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 80075c6:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 80075ca:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 80075cc:	695d      	ldr	r5, [r3, #20]
 80075ce:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 80075d2:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 80075d4:	694d      	ldr	r5, [r1, #20]
 80075d6:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 80075d8:	69dd      	ldr	r5, [r3, #28]
 80075da:	f425 65e0 	bic.w	r5, r5, #1792	; 0x700
 80075de:	f025 0507 	bic.w	r5, r5, #7
 80075e2:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 80075e4:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 80075e8:	433d      	orrs	r5, r7
 80075ea:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 80075ec:	6a9d      	ldr	r5, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 80075ee:	6a4d      	ldr	r5, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 80075f0:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 80075f4:	629d      	str	r5, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 80075f6:	b31e      	cbz	r6, 8007640 <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 80075f8:	2e01      	cmp	r6, #1
 80075fa:	d023      	beq.n	8007644 <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 80075fc:	1eb5      	subs	r5, r6, #2
 80075fe:	2d02      	cmp	r5, #2
 8007600:	d922      	bls.n	8007648 <LTDC_SetConfig+0x108>
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 8007602:	2e07      	cmp	r6, #7
 8007604:	bf0c      	ite	eq
 8007606:	2502      	moveq	r5, #2
 8007608:	2501      	movne	r5, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800760a:	6ade      	ldr	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
 800760c:	eba4 040c 	sub.w	r4, r4, ip
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8007610:	f006 26e0 	and.w	r6, r6, #3758153728	; 0xe000e000
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
 8007614:	436c      	muls	r4, r5
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8007616:	62de      	str	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
 8007618:	3407      	adds	r4, #7
 800761a:	6a8e      	ldr	r6, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800761c:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
 800761e:	436e      	muls	r6, r5
 8007620:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 8007624:	62dc      	str	r4, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8007626:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 8007628:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 800762c:	f024 0407 	bic.w	r4, r4, #7
 8007630:	631c      	str	r4, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8007632:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8007634:	5883      	ldr	r3, [r0, r2]
 8007636:	f043 0301 	orr.w	r3, r3, #1
 800763a:	5083      	str	r3, [r0, r2]
}
 800763c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 8007640:	2504      	movs	r5, #4
 8007642:	e7e2      	b.n	800760a <LTDC_SetConfig+0xca>
    tmp = 3U;
 8007644:	2503      	movs	r5, #3
 8007646:	e7e0      	b.n	800760a <LTDC_SetConfig+0xca>
    tmp = 2U;
 8007648:	2502      	movs	r5, #2
 800764a:	e7de      	b.n	800760a <LTDC_SetConfig+0xca>

0800764c <HAL_LTDC_Init>:
{
 800764c:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 800764e:	4604      	mov	r4, r0
 8007650:	2800      	cmp	r0, #0
 8007652:	d063      	beq.n	800771c <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8007654:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 8007658:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800765c:	b91b      	cbnz	r3, 8007666 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 800765e:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 8007662:	f7f9 fd23 	bl	80010ac <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8007666:	2302      	movs	r3, #2
 8007668:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800766c:	6823      	ldr	r3, [r4, #0]
 800766e:	699a      	ldr	r2, [r3, #24]
 8007670:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 8007674:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8007676:	6999      	ldr	r1, [r3, #24]
 8007678:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 800767c:	4302      	orrs	r2, r0
 800767e:	68e0      	ldr	r0, [r4, #12]
 8007680:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8007682:	6920      	ldr	r0, [r4, #16]
 8007684:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8007686:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8007688:	430a      	orrs	r2, r1
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800768a:	4925      	ldr	r1, [pc, #148]	; (8007720 <HAL_LTDC_Init+0xd4>)
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800768c:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800768e:	689a      	ldr	r2, [r3, #8]
 8007690:	400a      	ands	r2, r1
 8007692:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8007694:	689a      	ldr	r2, [r3, #8]
 8007696:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800769a:	69a0      	ldr	r0, [r4, #24]
 800769c:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800769e:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 80076a0:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 80076a2:	68da      	ldr	r2, [r3, #12]
 80076a4:	400a      	ands	r2, r1
 80076a6:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 80076a8:	68da      	ldr	r2, [r3, #12]
 80076aa:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80076ae:	6a20      	ldr	r0, [r4, #32]
 80076b0:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 80076b2:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 80076b4:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 80076b6:	691a      	ldr	r2, [r3, #16]
 80076b8:	400a      	ands	r2, r1
 80076ba:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 80076bc:	691a      	ldr	r2, [r3, #16]
 80076be:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80076c2:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80076c4:	4302      	orrs	r2, r0
 80076c6:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 80076c8:	695a      	ldr	r2, [r3, #20]
 80076ca:	4011      	ands	r1, r2
 80076cc:	6159      	str	r1, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 80076ce:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 80076d0:	695a      	ldr	r2, [r3, #20]
 80076d2:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80076d6:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80076d8:	430a      	orrs	r2, r1
 80076da:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 80076dc:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 80076de:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 80076e2:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 80076e6:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 80076ea:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 80076ec:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 80076ee:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 80076f2:	430a      	orrs	r2, r1
 80076f4:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 80076f8:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80076fc:	2000      	movs	r0, #0
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 80076fe:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8007700:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007702:	f042 0206 	orr.w	r2, r2, #6
 8007706:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 8007708:	699a      	ldr	r2, [r3, #24]
 800770a:	f042 0201 	orr.w	r2, r2, #1
 800770e:	619a      	str	r2, [r3, #24]
  hltdc->State = HAL_LTDC_STATE_READY;
 8007710:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8007712:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 8007716:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 800771a:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800771c:	2001      	movs	r0, #1
 800771e:	e7fc      	b.n	800771a <HAL_LTDC_Init+0xce>
 8007720:	f000f800 	.word	0xf000f800

08007724 <HAL_LTDC_ErrorCallback>:
 8007724:	4770      	bx	lr

08007726 <HAL_LTDC_LineEventCallback>:
 8007726:	4770      	bx	lr

08007728 <HAL_LTDC_ReloadEventCallback>:
 8007728:	4770      	bx	lr

0800772a <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800772a:	6803      	ldr	r3, [r0, #0]
{
 800772c:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800772e:	6b9e      	ldr	r6, [r3, #56]	; 0x38
{
 8007730:	4604      	mov	r4, r0
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8007732:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8007734:	0772      	lsls	r2, r6, #29
 8007736:	d514      	bpl.n	8007762 <HAL_LTDC_IRQHandler+0x38>
 8007738:	0769      	lsls	r1, r5, #29
 800773a:	d512      	bpl.n	8007762 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800773c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800773e:	f022 0204 	bic.w	r2, r2, #4
 8007742:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8007744:	2204      	movs	r2, #4
 8007746:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8007748:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800774c:	f043 0301 	orr.w	r3, r3, #1
 8007750:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 8007754:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8007756:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800775a:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800775e:	f7ff ffe1 	bl	8007724 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8007762:	07b2      	lsls	r2, r6, #30
 8007764:	d516      	bpl.n	8007794 <HAL_LTDC_IRQHandler+0x6a>
 8007766:	07ab      	lsls	r3, r5, #30
 8007768:	d514      	bpl.n	8007794 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800776a:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ErrorCallback(hltdc);
 800776c:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800776e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007770:	f022 0202 	bic.w	r2, r2, #2
 8007774:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8007776:	2202      	movs	r2, #2
 8007778:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800777a:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800777e:	4313      	orrs	r3, r2
 8007780:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8007784:	2304      	movs	r3, #4
 8007786:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800778a:	2300      	movs	r3, #0
 800778c:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8007790:	f7ff ffc8 	bl	8007724 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8007794:	07f0      	lsls	r0, r6, #31
 8007796:	d510      	bpl.n	80077ba <HAL_LTDC_IRQHandler+0x90>
 8007798:	07e9      	lsls	r1, r5, #31
 800779a:	d50e      	bpl.n	80077ba <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800779c:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_LineEventCallback(hltdc);
 800779e:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 80077a0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80077a2:	f022 0201 	bic.w	r2, r2, #1
 80077a6:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 80077a8:	2201      	movs	r2, #1
 80077aa:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 80077ac:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 80077ae:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80077b2:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 80077b6:	f7ff ffb6 	bl	8007726 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 80077ba:	0732      	lsls	r2, r6, #28
 80077bc:	d511      	bpl.n	80077e2 <HAL_LTDC_IRQHandler+0xb8>
 80077be:	072b      	lsls	r3, r5, #28
 80077c0:	d50f      	bpl.n	80077e2 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 80077c2:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ReloadEventCallback(hltdc);
 80077c4:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 80077c6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80077c8:	f022 0208 	bic.w	r2, r2, #8
 80077cc:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 80077ce:	2208      	movs	r2, #8
 80077d0:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 80077d2:	2301      	movs	r3, #1
 80077d4:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80077d8:	2300      	movs	r3, #0
 80077da:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 80077de:	f7ff ffa3 	bl	8007728 <HAL_LTDC_ReloadEventCallback>
}
 80077e2:	bd70      	pop	{r4, r5, r6, pc}

080077e4 <HAL_LTDC_ConfigLayer>:
{
 80077e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 80077e8:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
{
 80077ec:	4606      	mov	r6, r0
 80077ee:	460f      	mov	r7, r1
 80077f0:	4694      	mov	ip, r2
  __HAL_LOCK(hltdc);
 80077f2:	2b01      	cmp	r3, #1
 80077f4:	f04f 0002 	mov.w	r0, #2
 80077f8:	d01f      	beq.n	800783a <HAL_LTDC_ConfigLayer+0x56>
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80077fa:	2434      	movs	r4, #52	; 0x34
  __HAL_LOCK(hltdc);
 80077fc:	f04f 0801 	mov.w	r8, #1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8007800:	460d      	mov	r5, r1
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8007802:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8007806:	fb04 6402 	mla	r4, r4, r2, r6
  __HAL_LOCK(hltdc);
 800780a:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800780e:	3438      	adds	r4, #56	; 0x38
 8007810:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007812:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007814:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007816:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007818:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800781a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800781c:	682b      	ldr	r3, [r5, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 800781e:	4630      	mov	r0, r6
 8007820:	4662      	mov	r2, ip
 8007822:	4639      	mov	r1, r7
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8007824:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8007826:	f7ff fe8b 	bl	8007540 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800782a:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 800782c:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800782e:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 8007832:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8007836:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 800783a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08007840 <HAL_LTDC_SetPitch>:
{
 8007840:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hltdc);
 8007842:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8007846:	2b01      	cmp	r3, #1
 8007848:	f04f 0302 	mov.w	r3, #2
 800784c:	d02c      	beq.n	80078a8 <HAL_LTDC_SetPitch+0x68>
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 800784e:	2434      	movs	r4, #52	; 0x34
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8007850:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 8007854:	fb04 0402 	mla	r4, r4, r2, r0
 8007858:	6ca4      	ldr	r4, [r4, #72]	; 0x48
  if (pixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800785a:	b33c      	cbz	r4, 80078ac <HAL_LTDC_SetPitch+0x6c>
  else if (pixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800785c:	2c01      	cmp	r4, #1
 800785e:	d027      	beq.n	80078b0 <HAL_LTDC_SetPitch+0x70>
  else if ((pixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8007860:	1ea5      	subs	r5, r4, #2
 8007862:	429d      	cmp	r5, r3
 8007864:	d902      	bls.n	800786c <HAL_LTDC_SetPitch+0x2c>
    tmp = 1U;
 8007866:	2c07      	cmp	r4, #7
 8007868:	bf18      	it	ne
 800786a:	2301      	movne	r3, #1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 800786c:	01d2      	lsls	r2, r2, #7
 800786e:	6804      	ldr	r4, [r0, #0]
  pitchUpdate = ((LinePitchInPixels * tmp) << 16U);
 8007870:	434b      	muls	r3, r1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 8007872:	3284      	adds	r2, #132	; 0x84
 8007874:	4422      	add	r2, r4
 8007876:	6ad4      	ldr	r4, [r2, #44]	; 0x2c
 8007878:	f024 54ff 	bic.w	r4, r4, #534773760	; 0x1fe00000
 800787c:	f424 14f8 	bic.w	r4, r4, #2031616	; 0x1f0000
 8007880:	62d4      	str	r4, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 8007882:	4c0c      	ldr	r4, [pc, #48]	; (80078b4 <HAL_LTDC_SetPitch+0x74>)
 8007884:	6a65      	ldr	r5, [r4, #36]	; 0x24
 8007886:	f045 0501 	orr.w	r5, r5, #1
 800788a:	6265      	str	r5, [r4, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR |= pitchUpdate;
 800788c:	6ad5      	ldr	r5, [r2, #44]	; 0x2c
 800788e:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 8007892:	62d3      	str	r3, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 8007894:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007896:	f043 0301 	orr.w	r3, r3, #1
 800789a:	6263      	str	r3, [r4, #36]	; 0x24
  hltdc->State = HAL_LTDC_STATE_READY;
 800789c:	2301      	movs	r3, #1
 800789e:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 80078a2:	2300      	movs	r3, #0
 80078a4:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 80078a8:	4618      	mov	r0, r3
 80078aa:	bd30      	pop	{r4, r5, pc}
    tmp = 4U;
 80078ac:	2304      	movs	r3, #4
 80078ae:	e7dd      	b.n	800786c <HAL_LTDC_SetPitch+0x2c>
    tmp = 3U;
 80078b0:	2303      	movs	r3, #3
 80078b2:	e7db      	b.n	800786c <HAL_LTDC_SetPitch+0x2c>
 80078b4:	50001000 	.word	0x50001000

080078b8 <HAL_MDMA_Init>:
  * @param  hmdma: Pointer to a MDMA_HandleTypeDef structure that contains
  *               the configuration information for the specified MDMA Channel.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_MDMA_Init(MDMA_HandleTypeDef *hmdma)
{
 80078b8:	b538      	push	{r3, r4, r5, lr}
 80078ba:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80078bc:	f7fe fa8c 	bl	8005dd8 <HAL_GetTick>
 80078c0:	4605      	mov	r5, r0

  /* Check the MDMA peripheral handle */
  if(hmdma == NULL)
 80078c2:	2c00      	cmp	r4, #0
 80078c4:	d061      	beq.n	800798a <HAL_MDMA_Init+0xd2>
  assert_param(IS_MDMA_BLOCK_ADDR_OFFSET(hmdma->Init.SourceBlockAddressOffset));
  assert_param(IS_MDMA_BLOCK_ADDR_OFFSET(hmdma->Init.DestBlockAddressOffset));


  /* Allocate lock resource */
  __HAL_UNLOCK(hmdma);
 80078c6:	2300      	movs	r3, #0

  /* Change MDMA peripheral state */
  hmdma->State = HAL_MDMA_STATE_BUSY;

  /* Disable the MDMA channel */
  __HAL_MDMA_DISABLE(hmdma);
 80078c8:	6822      	ldr	r2, [r4, #0]
  __HAL_UNLOCK(hmdma);
 80078ca:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  hmdma->State = HAL_MDMA_STATE_BUSY;
 80078ce:	2302      	movs	r3, #2
 80078d0:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_MDMA_DISABLE(hmdma);
 80078d4:	68d3      	ldr	r3, [r2, #12]
 80078d6:	f023 0301 	bic.w	r3, r3, #1
 80078da:	60d3      	str	r3, [r2, #12]

  /* Check if the MDMA channel is effectively disabled */
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
 80078dc:	6823      	ldr	r3, [r4, #0]
 80078de:	68da      	ldr	r2, [r3, #12]
 80078e0:	07d2      	lsls	r2, r2, #31
 80078e2:	d448      	bmi.n	8007976 <HAL_MDMA_Init+0xbe>
static void MDMA_Init(MDMA_HandleTypeDef *hmdma)
{
  uint32_t blockoffset;

  /* Prepare the MDMA Channel configuration */
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
 80078e4:	e9d4 2103 	ldrd	r2, r1, [r4, #12]
 80078e8:	430a      	orrs	r2, r1
 80078ea:	60da      	str	r2, [r3, #12]
  /* Write new CTCR Register value */
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
                           hmdma->Init.SourceDataSize | hmdma->Init.DestDataSize   | \
                           hmdma->Init.DataAlignment  | hmdma->Init.SourceBurst    | \
                           hmdma->Init.DestBurst                                   | \
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
 80078ec:	e9d4 2105 	ldrd	r2, r1, [r4, #20]
 80078f0:	430a      	orrs	r2, r1
 80078f2:	69e1      	ldr	r1, [r4, #28]
 80078f4:	430a      	orrs	r2, r1
 80078f6:	6a21      	ldr	r1, [r4, #32]
 80078f8:	430a      	orrs	r2, r1
 80078fa:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80078fc:	430a      	orrs	r2, r1
 80078fe:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8007900:	430a      	orrs	r2, r1
 8007902:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8007904:	430a      	orrs	r2, r1
 8007906:	68a1      	ldr	r1, [r4, #8]
 8007908:	430a      	orrs	r2, r1
 800790a:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800790c:	3901      	subs	r1, #1
 800790e:	ea42 4281 	orr.w	r2, r2, r1, lsl #18
                           hmdma->Init.TransferTriggerMode;

  /* If SW request set the CTCR register to SW Request Mode */
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
 8007912:	6861      	ldr	r1, [r4, #4]
 8007914:	f1b1 4f80 	cmp.w	r1, #1073741824	; 0x40000000
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
 8007918:	611a      	str	r2, [r3, #16]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
 800791a:	d103      	bne.n	8007924 <HAL_MDMA_Init+0x6c>
    -If the request is done by SW : BWM could be set to 1 or 0.
    -If the request is done by a peripheral :
    If mask address not set (0) => BWM must be set to 0
    If mask address set (different than 0) => BWM could be set to 1 or 0
    */
    hmdma->Instance->CTCR |= (MDMA_CTCR_SWRM | MDMA_CTCR_BWM);
 800791c:	691a      	ldr	r2, [r3, #16]
 800791e:	f042 4240 	orr.w	r2, r2, #3221225472	; 0xc0000000
 8007922:	611a      	str	r2, [r3, #16]
  }

  /* Reset CBNDTR Register */
  hmdma->Instance->CBNDTR = 0;
 8007924:	2200      	movs	r2, #0
 8007926:	615a      	str	r2, [r3, #20]

  /* if block source address offset is negative set the Block Repeat Source address Update Mode to decrement */
  if(hmdma->Init.SourceBlockAddressOffset < 0)
 8007928:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800792a:	2a00      	cmp	r2, #0
 800792c:	da04      	bge.n	8007938 <HAL_MDMA_Init+0x80>
  {
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
 800792e:	6958      	ldr	r0, [r3, #20]
    /* Write new CBRUR Register value : source repeat block offset */
    blockoffset = (uint32_t)(- hmdma->Init.SourceBlockAddressOffset);
 8007930:	4252      	negs	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
 8007932:	f440 2080 	orr.w	r0, r0, #262144	; 0x40000
 8007936:	6158      	str	r0, [r3, #20]
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
  }
  else
  {
    /* Write new CBRUR Register value : source repeat block offset */
    hmdma->Instance->CBRUR = (((uint32_t)hmdma->Init.SourceBlockAddressOffset) & 0x0000FFFFU);
 8007938:	b292      	uxth	r2, r2
 800793a:	621a      	str	r2, [r3, #32]
  }

  /* If block destination address offset is negative set the Block Repeat destination address Update Mode to decrement */
  if(hmdma->Init.DestBlockAddressOffset < 0)
 800793c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800793e:	2a00      	cmp	r2, #0
 8007940:	da25      	bge.n	800798e <HAL_MDMA_Init+0xd6>
  {
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
 8007942:	6958      	ldr	r0, [r3, #20]
    /* Write new CBRUR Register value : destination repeat block offset */
    blockoffset = (uint32_t)(- hmdma->Init.DestBlockAddressOffset);
 8007944:	4252      	negs	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
 8007946:	f440 2000 	orr.w	r0, r0, #524288	; 0x80000
 800794a:	6158      	str	r0, [r3, #20]
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
 800794c:	6a18      	ldr	r0, [r3, #32]
  }
  else
  {
    /*write new CBRUR Register value : destination repeat block offset */
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
 800794e:	ea40 4202 	orr.w	r2, r0, r2, lsl #16
  }

  /* if HW request set the HW request and the requet CleraMask and ClearData MaskData, */
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
 8007952:	f1b1 4f80 	cmp.w	r1, #1073741824	; 0x40000000
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
 8007956:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
 8007958:	f04f 0200 	mov.w	r2, #0
 800795c:	d019      	beq.n	8007992 <HAL_MDMA_Init+0xda>
  {
    /* Set the HW request in CTRB register  */
    hmdma->Instance->CTBR = hmdma->Init.Request & MDMA_CTBR_TSEL;
 800795e:	b2c9      	uxtb	r1, r1
 8007960:	6299      	str	r1, [r3, #40]	; 0x28
  {
    hmdma->Instance->CTBR = 0;
  }

  /* Write Link Address Register */
  hmdma->Instance->CLAR =  0;
 8007962:	625a      	str	r2, [r3, #36]	; 0x24
  return HAL_OK;
 8007964:	2000      	movs	r0, #0
  hmdma->State = HAL_MDMA_STATE_READY;
 8007966:	2301      	movs	r3, #1
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
 8007968:	66a2      	str	r2, [r4, #104]	; 0x68
  hmdma->LinkedListNodeCounter  = 0;
 800796a:	6662      	str	r2, [r4, #100]	; 0x64
  hmdma->State = HAL_MDMA_STATE_READY;
 800796c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hmdma->LastLinkedListNodeAddress   = 0;
 8007970:	e9c4 2217 	strd	r2, r2, [r4, #92]	; 0x5c
}
 8007974:	bd38      	pop	{r3, r4, r5, pc}
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
 8007976:	f7fe fa2f 	bl	8005dd8 <HAL_GetTick>
 800797a:	1b40      	subs	r0, r0, r5
 800797c:	2805      	cmp	r0, #5
 800797e:	d9ad      	bls.n	80078dc <HAL_MDMA_Init+0x24>
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
 8007980:	2340      	movs	r3, #64	; 0x40
 8007982:	66a3      	str	r3, [r4, #104]	; 0x68
      hmdma->State = HAL_MDMA_STATE_ERROR;
 8007984:	2303      	movs	r3, #3
 8007986:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    return HAL_ERROR;
 800798a:	2001      	movs	r0, #1
 800798c:	e7f2      	b.n	8007974 <HAL_MDMA_Init+0xbc>
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
 800798e:	6a18      	ldr	r0, [r3, #32]
 8007990:	e7dd      	b.n	800794e <HAL_MDMA_Init+0x96>
    hmdma->Instance->CTBR = 0;
 8007992:	629a      	str	r2, [r3, #40]	; 0x28
 8007994:	e7e5      	b.n	8007962 <HAL_MDMA_Init+0xaa>

08007996 <HAL_MDMA_DeInit>:
  if(hmdma == NULL)
 8007996:	b1d8      	cbz	r0, 80079d0 <HAL_MDMA_DeInit+0x3a>
  __HAL_MDMA_DISABLE(hmdma);
 8007998:	6802      	ldr	r2, [r0, #0]
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
 800799a:	211f      	movs	r1, #31
  __HAL_MDMA_DISABLE(hmdma);
 800799c:	68d3      	ldr	r3, [r2, #12]
 800799e:	f023 0301 	bic.w	r3, r3, #1
 80079a2:	60d3      	str	r3, [r2, #12]
  hmdma->Instance->CCR  = 0;
 80079a4:	2300      	movs	r3, #0
 80079a6:	60d3      	str	r3, [r2, #12]
  hmdma->Instance->CTCR = 0;
 80079a8:	6113      	str	r3, [r2, #16]
  hmdma->Instance->CBNDTR = 0;
 80079aa:	6153      	str	r3, [r2, #20]
  hmdma->Instance->CSAR = 0;
 80079ac:	6193      	str	r3, [r2, #24]
  hmdma->Instance->CDAR = 0;
 80079ae:	61d3      	str	r3, [r2, #28]
  hmdma->Instance->CBRUR = 0;
 80079b0:	6213      	str	r3, [r2, #32]
  hmdma->Instance->CLAR = 0;
 80079b2:	6253      	str	r3, [r2, #36]	; 0x24
  hmdma->Instance->CTBR = 0;
 80079b4:	6293      	str	r3, [r2, #40]	; 0x28
  hmdma->Instance->CMAR = 0;
 80079b6:	6313      	str	r3, [r2, #48]	; 0x30
  hmdma->Instance->CMDR = 0;
 80079b8:	6353      	str	r3, [r2, #52]	; 0x34
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
 80079ba:	6051      	str	r1, [r2, #4]
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
 80079bc:	6683      	str	r3, [r0, #104]	; 0x68
  hmdma->LinkedListNodeCounter  = 0;
 80079be:	6643      	str	r3, [r0, #100]	; 0x64
  hmdma->State = HAL_MDMA_STATE_RESET;
 80079c0:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
  __HAL_UNLOCK(hmdma);
 80079c4:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  hmdma->LastLinkedListNodeAddress   = 0;
 80079c8:	e9c0 3317 	strd	r3, r3, [r0, #92]	; 0x5c
  return HAL_OK;
 80079cc:	4618      	mov	r0, r3
 80079ce:	4770      	bx	lr
    return HAL_ERROR;
 80079d0:	2001      	movs	r0, #1
}
 80079d2:	4770      	bx	lr

080079d4 <HAL_PWREx_ConfigSupply>:
  *         PWR_SMPS_2V5_SUPPLIES_EXT are used only for lines that supports SMPS
  *         regulator.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_PWREx_ConfigSupply (uint32_t SupplySource)
{
 80079d4:	b570      	push	{r4, r5, r6, lr}

  /* Check if supply source was configured */
#if defined (PWR_FLAG_SCUEN)
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
#else
  if ((PWR->CR3 & (PWR_CR3_SMPSEN | PWR_CR3_LDOEN | PWR_CR3_BYPASS)) != (PWR_CR3_SMPSEN | PWR_CR3_LDOEN))
 80079d6:	4d1c      	ldr	r5, [pc, #112]	; (8007a48 <HAL_PWREx_ConfigSupply+0x74>)
{
 80079d8:	4604      	mov	r4, r0
  if ((PWR->CR3 & (PWR_CR3_SMPSEN | PWR_CR3_LDOEN | PWR_CR3_BYPASS)) != (PWR_CR3_SMPSEN | PWR_CR3_LDOEN))
 80079da:	68eb      	ldr	r3, [r5, #12]
 80079dc:	f003 0307 	and.w	r3, r3, #7
 80079e0:	2b06      	cmp	r3, #6
 80079e2:	d006      	beq.n	80079f2 <HAL_PWREx_ConfigSupply+0x1e>
#endif /* defined (PWR_FLAG_SCUEN) */
  {
    /* Check supply configuration */
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
 80079e4:	68e8      	ldr	r0, [r5, #12]
 80079e6:	f000 003f 	and.w	r0, r0, #63	; 0x3f
    {
      /* Supply configuration update locked, can't apply a new supply config */
      return HAL_ERROR;
 80079ea:	1b00      	subs	r0, r0, r4
 80079ec:	bf18      	it	ne
 80079ee:	2001      	movne	r0, #1
    }
  }
#endif /* defined (SMPS) */

  return HAL_OK;
}
 80079f0:	bd70      	pop	{r4, r5, r6, pc}
  MODIFY_REG (PWR->CR3, PWR_SUPPLY_CONFIG_MASK, SupplySource);
 80079f2:	68eb      	ldr	r3, [r5, #12]
 80079f4:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 80079f8:	4303      	orrs	r3, r0
 80079fa:	60eb      	str	r3, [r5, #12]
  tickstart = HAL_GetTick ();
 80079fc:	f7fe f9ec 	bl	8005dd8 <HAL_GetTick>
 8007a00:	4606      	mov	r6, r0
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
 8007a02:	686b      	ldr	r3, [r5, #4]
 8007a04:	049a      	lsls	r2, r3, #18
 8007a06:	d508      	bpl.n	8007a1a <HAL_PWREx_ConfigSupply+0x46>
      (SupplySource == PWR_SMPS_2V5_SUPPLIES_EXT_AND_LDO) ||
 8007a08:	f1a4 031d 	sub.w	r3, r4, #29
 8007a0c:	2b01      	cmp	r3, #1
 8007a0e:	d90c      	bls.n	8007a2a <HAL_PWREx_ConfigSupply+0x56>
      (SupplySource == PWR_SMPS_1V8_SUPPLIES_EXT)         ||
 8007a10:	3c2d      	subs	r4, #45	; 0x2d
 8007a12:	2c01      	cmp	r4, #1
 8007a14:	d909      	bls.n	8007a2a <HAL_PWREx_ConfigSupply+0x56>
  return HAL_OK;
 8007a16:	2000      	movs	r0, #0
 8007a18:	e7ea      	b.n	80079f0 <HAL_PWREx_ConfigSupply+0x1c>
    if ((HAL_GetTick () - tickstart) > PWR_FLAG_SETTING_DELAY)
 8007a1a:	f7fe f9dd 	bl	8005dd8 <HAL_GetTick>
 8007a1e:	1b80      	subs	r0, r0, r6
 8007a20:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8007a24:	d9ed      	bls.n	8007a02 <HAL_PWREx_ConfigSupply+0x2e>
      return HAL_ERROR;
 8007a26:	2001      	movs	r0, #1
 8007a28:	e7e2      	b.n	80079f0 <HAL_PWREx_ConfigSupply+0x1c>
    tickstart = HAL_GetTick ();
 8007a2a:	f7fe f9d5 	bl	8005dd8 <HAL_GetTick>
    while (__HAL_PWR_GET_FLAG (PWR_FLAG_SMPSEXTRDY) == 0U)
 8007a2e:	4d06      	ldr	r5, [pc, #24]	; (8007a48 <HAL_PWREx_ConfigSupply+0x74>)
    tickstart = HAL_GetTick ();
 8007a30:	4604      	mov	r4, r0
    while (__HAL_PWR_GET_FLAG (PWR_FLAG_SMPSEXTRDY) == 0U)
 8007a32:	68eb      	ldr	r3, [r5, #12]
 8007a34:	03db      	lsls	r3, r3, #15
 8007a36:	d4ee      	bmi.n	8007a16 <HAL_PWREx_ConfigSupply+0x42>
      if ((HAL_GetTick () - tickstart) > PWR_FLAG_SETTING_DELAY)
 8007a38:	f7fe f9ce 	bl	8005dd8 <HAL_GetTick>
 8007a3c:	1b00      	subs	r0, r0, r4
 8007a3e:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8007a42:	d9f6      	bls.n	8007a32 <HAL_PWREx_ConfigSupply+0x5e>
 8007a44:	e7ef      	b.n	8007a26 <HAL_PWREx_ConfigSupply+0x52>
 8007a46:	bf00      	nop
 8007a48:	58024800 	.word	0x58024800

08007a4c <QSPI_Config>:
  *            @arg QSPI_FUNCTIONAL_MODE_AUTO_POLLING: Automatic polling mode
  *            @arg QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED: Memory-mapped mode
  * @retval None
  */
static void QSPI_Config(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, uint32_t FunctionalMode)
{
 8007a4c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  assert_param(IS_QSPI_FUNCTIONAL_MODE(FunctionalMode));

  if ((cmd->DataMode != QSPI_DATA_NONE) && (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED))
 8007a50:	6a4e      	ldr	r6, [r1, #36]	; 0x24
 8007a52:	b136      	cbz	r6, 8007a62 <QSPI_Config+0x16>
 8007a54:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
 8007a58:	d003      	beq.n	8007a62 <QSPI_Config+0x16>
  {
    /* Configure QSPI: DLR register with the number of data to read or write */
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 8007a5a:	6a8b      	ldr	r3, [r1, #40]	; 0x28
 8007a5c:	6804      	ldr	r4, [r0, #0]
 8007a5e:	3b01      	subs	r3, #1
 8007a60:	6123      	str	r3, [r4, #16]
  }

  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 8007a62:	f8d1 9018 	ldr.w	r9, [r1, #24]
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
    {
      /* Configure QSPI: ABR register with alternate bytes value */
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);

      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8007a66:	e9d1 7507 	ldrd	r7, r5, [r1, #28]
  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 8007a6a:	f1b9 0f00 	cmp.w	r9, #0
 8007a6e:	d04f      	beq.n	8007b10 <QSPI_Config+0xc4>
      {
        /*---- Command with instruction, address and alternate bytes ----*/
        /* Configure QSPI: CCR register with all communications parameters */
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8007a70:	694b      	ldr	r3, [r1, #20]
 8007a72:	ea46 0909 	orr.w	r9, r6, r9
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 8007a76:	6800      	ldr	r0, [r0, #0]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8007a78:	f8d1 a000 	ldr.w	sl, [r1]
 8007a7c:	ea4f 4c83 	mov.w	ip, r3, lsl #18
 8007a80:	f8d1 e034 	ldr.w	lr, [r1, #52]	; 0x34
 8007a84:	ea49 0902 	orr.w	r9, r9, r2
 8007a88:	e9d1 480b 	ldrd	r4, r8, [r1, #44]	; 0x2c
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 8007a8c:	b335      	cbz	r5, 8007adc <QSPI_Config+0x90>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 8007a8e:	688b      	ldr	r3, [r1, #8]
 8007a90:	ea49 0505 	orr.w	r5, r9, r5
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8007a94:	690e      	ldr	r6, [r1, #16]
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 8007a96:	61c3      	str	r3, [r0, #28]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8007a98:	b19f      	cbz	r7, 8007ac2 <QSPI_Config+0x76>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8007a9a:	ea4a 0307 	orr.w	r3, sl, r7
 8007a9e:	4323      	orrs	r3, r4
 8007aa0:	68cc      	ldr	r4, [r1, #12]
 8007aa2:	ea43 0308 	orr.w	r3, r3, r8
 8007aa6:	ea43 030e 	orr.w	r3, r3, lr
 8007aaa:	4333      	orrs	r3, r6
 8007aac:	4323      	orrs	r3, r4
 8007aae:	ea43 030c 	orr.w	r3, r3, ip
 8007ab2:	432b      	orrs	r3, r5
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
                                         cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos) |
                                         cmd->AlternateByteMode | cmd->AddressSize |
                                         cmd->AddressMode | cmd->InstructionMode | FunctionalMode));

        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8007ab4:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8007ab8:	6143      	str	r3, [r0, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8007aba:	d00d      	beq.n	8007ad8 <QSPI_Config+0x8c>
        {
          /* Configure QSPI: AR register with address value */
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 8007abc:	684b      	ldr	r3, [r1, #4]
 8007abe:	6183      	str	r3, [r0, #24]
 8007ac0:	e00a      	b.n	8007ad8 <QSPI_Config+0x8c>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8007ac2:	ea4a 0304 	orr.w	r3, sl, r4
 8007ac6:	ea43 0308 	orr.w	r3, r3, r8
 8007aca:	ea43 030e 	orr.w	r3, r3, lr
 8007ace:	4333      	orrs	r3, r6
 8007ad0:	ea43 030c 	orr.w	r3, r3, ip
 8007ad4:	432b      	orrs	r3, r5
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8007ad6:	6143      	str	r3, [r0, #20]
                                           cmd->InstructionMode | FunctionalMode));
        }
      }
    }
  }
}
 8007ad8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8007adc:	b16f      	cbz	r7, 8007afa <QSPI_Config+0xae>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8007ade:	ea4a 0307 	orr.w	r3, sl, r7
 8007ae2:	4323      	orrs	r3, r4
 8007ae4:	68cc      	ldr	r4, [r1, #12]
 8007ae6:	ea43 0308 	orr.w	r3, r3, r8
 8007aea:	ea43 030e 	orr.w	r3, r3, lr
 8007aee:	4323      	orrs	r3, r4
 8007af0:	ea43 030c 	orr.w	r3, r3, ip
 8007af4:	ea43 0309 	orr.w	r3, r3, r9
 8007af8:	e7dc      	b.n	8007ab4 <QSPI_Config+0x68>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8007afa:	ea4a 0304 	orr.w	r3, sl, r4
 8007afe:	ea43 0308 	orr.w	r3, r3, r8
 8007b02:	ea43 030e 	orr.w	r3, r3, lr
 8007b06:	ea43 030c 	orr.w	r3, r3, ip
 8007b0a:	ea43 0309 	orr.w	r3, r3, r9
 8007b0e:	e7e2      	b.n	8007ad6 <QSPI_Config+0x8a>
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 8007b10:	b365      	cbz	r5, 8007b6c <QSPI_Config+0x120>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 8007b12:	6804      	ldr	r4, [r0, #0]
 8007b14:	688b      	ldr	r3, [r1, #8]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8007b16:	6908      	ldr	r0, [r1, #16]
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 8007b18:	61e3      	str	r3, [r4, #28]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8007b1a:	ea46 0305 	orr.w	r3, r6, r5
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8007b1e:	694e      	ldr	r6, [r1, #20]
 8007b20:	ea43 0502 	orr.w	r5, r3, r2
 8007b24:	f8d1 c034 	ldr.w	ip, [r1, #52]	; 0x34
 8007b28:	04b6      	lsls	r6, r6, #18
 8007b2a:	e9d1 830b 	ldrd	r8, r3, [r1, #44]	; 0x2c
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8007b2e:	b1a7      	cbz	r7, 8007b5a <QSPI_Config+0x10e>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8007b30:	4338      	orrs	r0, r7
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8007b32:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8007b36:	ea40 0008 	orr.w	r0, r0, r8
 8007b3a:	ea43 0300 	orr.w	r3, r3, r0
 8007b3e:	68c8      	ldr	r0, [r1, #12]
 8007b40:	ea43 030c 	orr.w	r3, r3, ip
 8007b44:	ea43 0300 	orr.w	r3, r3, r0
 8007b48:	ea43 0306 	orr.w	r3, r3, r6
 8007b4c:	ea43 0305 	orr.w	r3, r3, r5
 8007b50:	6163      	str	r3, [r4, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8007b52:	d0c1      	beq.n	8007ad8 <QSPI_Config+0x8c>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 8007b54:	684b      	ldr	r3, [r1, #4]
 8007b56:	61a3      	str	r3, [r4, #24]
 8007b58:	e7be      	b.n	8007ad8 <QSPI_Config+0x8c>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8007b5a:	ea40 0008 	orr.w	r0, r0, r8
 8007b5e:	4303      	orrs	r3, r0
 8007b60:	ea43 030c 	orr.w	r3, r3, ip
 8007b64:	4333      	orrs	r3, r6
 8007b66:	432b      	orrs	r3, r5
 8007b68:	6163      	str	r3, [r4, #20]
 8007b6a:	e7b5      	b.n	8007ad8 <QSPI_Config+0x8c>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8007b6c:	b17f      	cbz	r7, 8007b8e <QSPI_Config+0x142>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8007b6e:	ea46 0307 	orr.w	r3, r6, r7
 8007b72:	6acc      	ldr	r4, [r1, #44]	; 0x2c
 8007b74:	6800      	ldr	r0, [r0, #0]
 8007b76:	4313      	orrs	r3, r2
 8007b78:	4323      	orrs	r3, r4
 8007b7a:	6b0c      	ldr	r4, [r1, #48]	; 0x30
 8007b7c:	4323      	orrs	r3, r4
 8007b7e:	6b4c      	ldr	r4, [r1, #52]	; 0x34
 8007b80:	4323      	orrs	r3, r4
 8007b82:	68cc      	ldr	r4, [r1, #12]
 8007b84:	4323      	orrs	r3, r4
 8007b86:	694c      	ldr	r4, [r1, #20]
 8007b88:	ea43 4384 	orr.w	r3, r3, r4, lsl #18
 8007b8c:	e792      	b.n	8007ab4 <QSPI_Config+0x68>
        if (cmd->DataMode != QSPI_DATA_NONE)
 8007b8e:	2e00      	cmp	r6, #0
 8007b90:	d0a2      	beq.n	8007ad8 <QSPI_Config+0x8c>
          WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8007b92:	6acb      	ldr	r3, [r1, #44]	; 0x2c
 8007b94:	6800      	ldr	r0, [r0, #0]
 8007b96:	4333      	orrs	r3, r6
 8007b98:	6b0e      	ldr	r6, [r1, #48]	; 0x30
 8007b9a:	431a      	orrs	r2, r3
 8007b9c:	694b      	ldr	r3, [r1, #20]
 8007b9e:	4332      	orrs	r2, r6
 8007ba0:	6b4e      	ldr	r6, [r1, #52]	; 0x34
 8007ba2:	4332      	orrs	r2, r6
 8007ba4:	ea42 4283 	orr.w	r2, r2, r3, lsl #18
 8007ba8:	6142      	str	r2, [r0, #20]
}
 8007baa:	e795      	b.n	8007ad8 <QSPI_Config+0x8c>

08007bac <QSPI_WaitFlagStateUntilTimeout>:
{
 8007bac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007bb0:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8007bb4:	4604      	mov	r4, r0
 8007bb6:	460e      	mov	r6, r1
 8007bb8:	4615      	mov	r5, r2
 8007bba:	461f      	mov	r7, r3
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 8007bbc:	6822      	ldr	r2, [r4, #0]
 8007bbe:	6893      	ldr	r3, [r2, #8]
 8007bc0:	4233      	tst	r3, r6
 8007bc2:	bf14      	ite	ne
 8007bc4:	2301      	movne	r3, #1
 8007bc6:	2300      	moveq	r3, #0
 8007bc8:	42ab      	cmp	r3, r5
 8007bca:	d101      	bne.n	8007bd0 <QSPI_WaitFlagStateUntilTimeout+0x24>
  return HAL_OK;
 8007bcc:	2000      	movs	r0, #0
 8007bce:	e012      	b.n	8007bf6 <QSPI_WaitFlagStateUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
 8007bd0:	f1b8 3fff 	cmp.w	r8, #4294967295
 8007bd4:	d0f3      	beq.n	8007bbe <QSPI_WaitFlagStateUntilTimeout+0x12>
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8007bd6:	f7fe f8ff 	bl	8005dd8 <HAL_GetTick>
 8007bda:	1bc0      	subs	r0, r0, r7
 8007bdc:	4540      	cmp	r0, r8
 8007bde:	d802      	bhi.n	8007be6 <QSPI_WaitFlagStateUntilTimeout+0x3a>
 8007be0:	f1b8 0f00 	cmp.w	r8, #0
 8007be4:	d1ea      	bne.n	8007bbc <QSPI_WaitFlagStateUntilTimeout+0x10>
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 8007be6:	2304      	movs	r3, #4
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 8007be8:	2001      	movs	r0, #1
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 8007bea:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 8007bee:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8007bf0:	f043 0301 	orr.w	r3, r3, #1
 8007bf4:	6463      	str	r3, [r4, #68]	; 0x44
}
 8007bf6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08007bfc <HAL_QSPI_Init>:
{
 8007bfc:	b530      	push	{r4, r5, lr}
 8007bfe:	4604      	mov	r4, r0
 8007c00:	b085      	sub	sp, #20
  uint32_t tickstart = HAL_GetTick();
 8007c02:	f7fe f8e9 	bl	8005dd8 <HAL_GetTick>
 8007c06:	4603      	mov	r3, r0
  if(hqspi == NULL)
 8007c08:	2c00      	cmp	r4, #0
 8007c0a:	d040      	beq.n	8007c8e <HAL_QSPI_Init+0x92>
  if(hqspi->State == HAL_QSPI_STATE_RESET)
 8007c0c:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8007c10:	b93a      	cbnz	r2, 8007c22 <HAL_QSPI_Init+0x26>
 8007c12:	9003      	str	r0, [sp, #12]
    HAL_QSPI_MspInit(hqspi);
 8007c14:	4620      	mov	r0, r4
 8007c16:	f7f9 fa85 	bl	8001124 <HAL_QSPI_MspInit>
  hqspi->Timeout = Timeout;
 8007c1a:	f241 3288 	movw	r2, #5000	; 0x1388
 8007c1e:	9b03      	ldr	r3, [sp, #12]
 8007c20:	64a2      	str	r2, [r4, #72]	; 0x48
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 8007c22:	6820      	ldr	r0, [r4, #0]
 8007c24:	68a1      	ldr	r1, [r4, #8]
 8007c26:	6802      	ldr	r2, [r0, #0]
 8007c28:	3901      	subs	r1, #1
 8007c2a:	f422 6270 	bic.w	r2, r2, #3840	; 0xf00
 8007c2e:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8007c32:	2120      	movs	r1, #32
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 8007c34:	6002      	str	r2, [r0, #0]
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8007c36:	4620      	mov	r0, r4
 8007c38:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8007c3a:	9200      	str	r2, [sp, #0]
 8007c3c:	2200      	movs	r2, #0
 8007c3e:	f7ff ffb5 	bl	8007bac <QSPI_WaitFlagStateUntilTimeout>
  if(status == HAL_OK)
 8007c42:	bb10      	cbnz	r0, 8007c8a <HAL_QSPI_Init+0x8e>
    MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PRESCALER | QUADSPI_CR_SSHIFT | QUADSPI_CR_FSEL | QUADSPI_CR_DFM),
 8007c44:	6822      	ldr	r2, [r4, #0]
 8007c46:	69e5      	ldr	r5, [r4, #28]
 8007c48:	68e3      	ldr	r3, [r4, #12]
 8007c4a:	6811      	ldr	r1, [r2, #0]
 8007c4c:	432b      	orrs	r3, r5
 8007c4e:	6a25      	ldr	r5, [r4, #32]
 8007c50:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8007c54:	432b      	orrs	r3, r5
 8007c56:	6865      	ldr	r5, [r4, #4]
 8007c58:	f021 01d0 	bic.w	r1, r1, #208	; 0xd0
 8007c5c:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
 8007c60:	430b      	orrs	r3, r1
 8007c62:	6013      	str	r3, [r2, #0]
    MODIFY_REG(hqspi->Instance->DCR, (QUADSPI_DCR_FSIZE | QUADSPI_DCR_CSHT | QUADSPI_DCR_CKMODE),
 8007c64:	6855      	ldr	r5, [r2, #4]
 8007c66:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
 8007c6a:	430b      	orrs	r3, r1
 8007c6c:	6921      	ldr	r1, [r4, #16]
 8007c6e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8007c72:	4908      	ldr	r1, [pc, #32]	; (8007c94 <HAL_QSPI_Init+0x98>)
 8007c74:	4029      	ands	r1, r5
 8007c76:	430b      	orrs	r3, r1
 8007c78:	6053      	str	r3, [r2, #4]
    __HAL_QSPI_ENABLE(hqspi);
 8007c7a:	6813      	ldr	r3, [r2, #0]
 8007c7c:	f043 0301 	orr.w	r3, r3, #1
 8007c80:	6013      	str	r3, [r2, #0]
    hqspi->State = HAL_QSPI_STATE_READY;
 8007c82:	2301      	movs	r3, #1
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8007c84:	6460      	str	r0, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_READY;
 8007c86:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
}
 8007c8a:	b005      	add	sp, #20
 8007c8c:	bd30      	pop	{r4, r5, pc}
    return HAL_ERROR;
 8007c8e:	2001      	movs	r0, #1
 8007c90:	e7fb      	b.n	8007c8a <HAL_QSPI_Init+0x8e>
 8007c92:	bf00      	nop
 8007c94:	ffe0f8fe 	.word	0xffe0f8fe

08007c98 <HAL_QSPI_Command>:
{
 8007c98:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8007c9c:	4604      	mov	r4, r0
 8007c9e:	b085      	sub	sp, #20
 8007ca0:	4617      	mov	r7, r2
 8007ca2:	4689      	mov	r9, r1
  uint32_t tickstart = HAL_GetTick();
 8007ca4:	f7fe f898 	bl	8005dd8 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8007ca8:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
  uint32_t tickstart = HAL_GetTick();
 8007cac:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8007cae:	2a01      	cmp	r2, #1
 8007cb0:	d033      	beq.n	8007d1a <HAL_QSPI_Command+0x82>
 8007cb2:	2201      	movs	r2, #1
 8007cb4:	2602      	movs	r6, #2
 8007cb6:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8007cba:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8007cbe:	2a01      	cmp	r2, #1
 8007cc0:	fa5f f882 	uxtb.w	r8, r2
 8007cc4:	d127      	bne.n	8007d16 <HAL_QSPI_Command+0x7e>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8007cc6:	2200      	movs	r2, #0
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8007cc8:	9003      	str	r0, [sp, #12]
 8007cca:	2120      	movs	r1, #32
 8007ccc:	4620      	mov	r0, r4
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8007cce:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8007cd0:	9700      	str	r7, [sp, #0]
    hqspi->State = HAL_QSPI_STATE_BUSY;
 8007cd2:	f884 6041 	strb.w	r6, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8007cd6:	f7ff ff69 	bl	8007bac <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8007cda:	4605      	mov	r5, r0
 8007cdc:	b9a0      	cbnz	r0, 8007d08 <HAL_QSPI_Command+0x70>
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 8007cde:	4602      	mov	r2, r0
 8007ce0:	4649      	mov	r1, r9
 8007ce2:	4620      	mov	r0, r4
 8007ce4:	f7ff feb2 	bl	8007a4c <QSPI_Config>
      if (cmd->DataMode == QSPI_DATA_NONE)
 8007ce8:	f8d9 2024 	ldr.w	r2, [r9, #36]	; 0x24
 8007cec:	9b03      	ldr	r3, [sp, #12]
 8007cee:	b94a      	cbnz	r2, 8007d04 <HAL_QSPI_Command+0x6c>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8007cf0:	4642      	mov	r2, r8
 8007cf2:	4631      	mov	r1, r6
 8007cf4:	4620      	mov	r0, r4
 8007cf6:	9700      	str	r7, [sp, #0]
 8007cf8:	f7ff ff58 	bl	8007bac <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 8007cfc:	4605      	mov	r5, r0
 8007cfe:	b918      	cbnz	r0, 8007d08 <HAL_QSPI_Command+0x70>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8007d00:	6823      	ldr	r3, [r4, #0]
 8007d02:	60de      	str	r6, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 8007d04:	f884 8041 	strb.w	r8, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8007d08:	2300      	movs	r3, #0
 8007d0a:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8007d0e:	4628      	mov	r0, r5
 8007d10:	b005      	add	sp, #20
 8007d12:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    status = HAL_BUSY;
 8007d16:	4635      	mov	r5, r6
 8007d18:	e7f6      	b.n	8007d08 <HAL_QSPI_Command+0x70>
  __HAL_LOCK(hqspi);
 8007d1a:	2502      	movs	r5, #2
 8007d1c:	e7f7      	b.n	8007d0e <HAL_QSPI_Command+0x76>

08007d1e <HAL_QSPI_Transmit>:
{
 8007d1e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007d20:	4604      	mov	r4, r0
 8007d22:	b085      	sub	sp, #20
 8007d24:	4616      	mov	r6, r2
 8007d26:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 8007d28:	f7fe f856 	bl	8005dd8 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8007d2c:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
  uint32_t tickstart = HAL_GetTick();
 8007d30:	4603      	mov	r3, r0
  __IO uint32_t *data_reg = &hqspi->Instance->DR;
 8007d32:	6825      	ldr	r5, [r4, #0]
  __HAL_LOCK(hqspi);
 8007d34:	2a01      	cmp	r2, #1
 8007d36:	d049      	beq.n	8007dcc <HAL_QSPI_Transmit+0xae>
 8007d38:	2201      	movs	r2, #1
 8007d3a:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8007d3e:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8007d42:	2a01      	cmp	r2, #1
 8007d44:	b2d0      	uxtb	r0, r2
 8007d46:	d13f      	bne.n	8007dc8 <HAL_QSPI_Transmit+0xaa>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8007d48:	2200      	movs	r2, #0
 8007d4a:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 8007d4c:	2f00      	cmp	r7, #0
 8007d4e:	d036      	beq.n	8007dbe <HAL_QSPI_Transmit+0xa0>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_TX;
 8007d50:	2212      	movs	r2, #18
 8007d52:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->TxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 8007d56:	692a      	ldr	r2, [r5, #16]
 8007d58:	3201      	adds	r2, #1
 8007d5a:	62e2      	str	r2, [r4, #44]	; 0x2c
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8007d5c:	692a      	ldr	r2, [r5, #16]
      hqspi->pTxBuffPtr = pData;
 8007d5e:	6267      	str	r7, [r4, #36]	; 0x24
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8007d60:	3201      	adds	r2, #1
 8007d62:	62a2      	str	r2, [r4, #40]	; 0x28
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 8007d64:	696a      	ldr	r2, [r5, #20]
 8007d66:	f022 6240 	bic.w	r2, r2, #201326592	; 0xc000000
 8007d6a:	616a      	str	r2, [r5, #20]
      while(hqspi->TxXferCount > 0U)
 8007d6c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8007d6e:	b98a      	cbnz	r2, 8007d94 <HAL_QSPI_Transmit+0x76>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8007d70:	2201      	movs	r2, #1
 8007d72:	2102      	movs	r1, #2
 8007d74:	4620      	mov	r0, r4
 8007d76:	9600      	str	r6, [sp, #0]
 8007d78:	f7ff ff18 	bl	8007bac <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 8007d7c:	b910      	cbnz	r0, 8007d84 <HAL_QSPI_Transmit+0x66>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8007d7e:	6823      	ldr	r3, [r4, #0]
 8007d80:	2202      	movs	r2, #2
 8007d82:	60da      	str	r2, [r3, #12]
      hqspi->State = HAL_QSPI_STATE_READY;
 8007d84:	2301      	movs	r3, #1
 8007d86:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8007d8a:	2300      	movs	r3, #0
 8007d8c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8007d90:	b005      	add	sp, #20
 8007d92:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_FT, SET, tickstart, Timeout);
 8007d94:	2201      	movs	r2, #1
 8007d96:	2104      	movs	r1, #4
 8007d98:	4620      	mov	r0, r4
 8007d9a:	9600      	str	r6, [sp, #0]
 8007d9c:	9303      	str	r3, [sp, #12]
 8007d9e:	f7ff ff05 	bl	8007bac <QSPI_WaitFlagStateUntilTimeout>
        if (status != HAL_OK)
 8007da2:	2800      	cmp	r0, #0
 8007da4:	d1ee      	bne.n	8007d84 <HAL_QSPI_Transmit+0x66>
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 8007da6:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 8007da8:	9b03      	ldr	r3, [sp, #12]
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 8007daa:	7812      	ldrb	r2, [r2, #0]
 8007dac:	f885 2020 	strb.w	r2, [r5, #32]
        hqspi->pTxBuffPtr++;
 8007db0:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8007db2:	3201      	adds	r2, #1
 8007db4:	6262      	str	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 8007db6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8007db8:	3a01      	subs	r2, #1
 8007dba:	62e2      	str	r2, [r4, #44]	; 0x2c
 8007dbc:	e7d6      	b.n	8007d6c <HAL_QSPI_Transmit+0x4e>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 8007dbe:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8007dc0:	f043 0308 	orr.w	r3, r3, #8
 8007dc4:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 8007dc6:	e7e0      	b.n	8007d8a <HAL_QSPI_Transmit+0x6c>
    status = HAL_BUSY;
 8007dc8:	2002      	movs	r0, #2
 8007dca:	e7de      	b.n	8007d8a <HAL_QSPI_Transmit+0x6c>
  __HAL_LOCK(hqspi);
 8007dcc:	2002      	movs	r0, #2
 8007dce:	e7df      	b.n	8007d90 <HAL_QSPI_Transmit+0x72>

08007dd0 <HAL_QSPI_Receive>:
{
 8007dd0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007dd2:	4604      	mov	r4, r0
 8007dd4:	b085      	sub	sp, #20
 8007dd6:	4616      	mov	r6, r2
 8007dd8:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 8007dda:	f7fd fffd 	bl	8005dd8 <HAL_GetTick>
  uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
 8007dde:	6825      	ldr	r5, [r4, #0]
  uint32_t tickstart = HAL_GetTick();
 8007de0:	4603      	mov	r3, r0
  uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
 8007de2:	f8d5 c018 	ldr.w	ip, [r5, #24]
  __HAL_LOCK(hqspi);
 8007de6:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8007dea:	2a01      	cmp	r2, #1
 8007dec:	d04d      	beq.n	8007e8a <HAL_QSPI_Receive+0xba>
 8007dee:	2201      	movs	r2, #1
 8007df0:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8007df4:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8007df8:	2a01      	cmp	r2, #1
 8007dfa:	b2d0      	uxtb	r0, r2
 8007dfc:	d143      	bne.n	8007e86 <HAL_QSPI_Receive+0xb6>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8007dfe:	2200      	movs	r2, #0
 8007e00:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 8007e02:	2f00      	cmp	r7, #0
 8007e04:	d03a      	beq.n	8007e7c <HAL_QSPI_Receive+0xac>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_RX;
 8007e06:	2222      	movs	r2, #34	; 0x22
 8007e08:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->RxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 8007e0c:	692a      	ldr	r2, [r5, #16]
 8007e0e:	3201      	adds	r2, #1
 8007e10:	63a2      	str	r2, [r4, #56]	; 0x38
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8007e12:	692a      	ldr	r2, [r5, #16]
      hqspi->pRxBuffPtr = pData;
 8007e14:	6327      	str	r7, [r4, #48]	; 0x30
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8007e16:	3201      	adds	r2, #1
 8007e18:	6362      	str	r2, [r4, #52]	; 0x34
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 8007e1a:	6969      	ldr	r1, [r5, #20]
 8007e1c:	f021 6140 	bic.w	r1, r1, #201326592	; 0xc000000
 8007e20:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
 8007e24:	6169      	str	r1, [r5, #20]
      WRITE_REG(hqspi->Instance->AR, addr_reg);
 8007e26:	f8c5 c018 	str.w	ip, [r5, #24]
      while(hqspi->RxXferCount > 0U)
 8007e2a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8007e2c:	b98a      	cbnz	r2, 8007e52 <HAL_QSPI_Receive+0x82>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8007e2e:	2201      	movs	r2, #1
 8007e30:	2102      	movs	r1, #2
 8007e32:	4620      	mov	r0, r4
 8007e34:	9600      	str	r6, [sp, #0]
 8007e36:	f7ff feb9 	bl	8007bac <QSPI_WaitFlagStateUntilTimeout>
        if  (status == HAL_OK)
 8007e3a:	b910      	cbnz	r0, 8007e42 <HAL_QSPI_Receive+0x72>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8007e3c:	6823      	ldr	r3, [r4, #0]
 8007e3e:	2202      	movs	r2, #2
 8007e40:	60da      	str	r2, [r3, #12]
      hqspi->State = HAL_QSPI_STATE_READY;
 8007e42:	2301      	movs	r3, #1
 8007e44:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8007e48:	2300      	movs	r3, #0
 8007e4a:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8007e4e:	b005      	add	sp, #20
 8007e50:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, (QSPI_FLAG_FT | QSPI_FLAG_TC), SET, tickstart, Timeout);
 8007e52:	2201      	movs	r2, #1
 8007e54:	2106      	movs	r1, #6
 8007e56:	4620      	mov	r0, r4
 8007e58:	9600      	str	r6, [sp, #0]
 8007e5a:	9303      	str	r3, [sp, #12]
 8007e5c:	f7ff fea6 	bl	8007bac <QSPI_WaitFlagStateUntilTimeout>
        if  (status != HAL_OK)
 8007e60:	2800      	cmp	r0, #0
 8007e62:	d1ee      	bne.n	8007e42 <HAL_QSPI_Receive+0x72>
        *hqspi->pRxBuffPtr = *((__IO uint8_t *)data_reg);
 8007e64:	f895 1020 	ldrb.w	r1, [r5, #32]
 8007e68:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 8007e6a:	9b03      	ldr	r3, [sp, #12]
        *hqspi->pRxBuffPtr = *((__IO uint8_t *)data_reg);
 8007e6c:	7011      	strb	r1, [r2, #0]
        hqspi->pRxBuffPtr++;
 8007e6e:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8007e70:	3201      	adds	r2, #1
 8007e72:	6322      	str	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 8007e74:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8007e76:	3a01      	subs	r2, #1
 8007e78:	63a2      	str	r2, [r4, #56]	; 0x38
 8007e7a:	e7d6      	b.n	8007e2a <HAL_QSPI_Receive+0x5a>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 8007e7c:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8007e7e:	f043 0308 	orr.w	r3, r3, #8
 8007e82:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 8007e84:	e7e0      	b.n	8007e48 <HAL_QSPI_Receive+0x78>
    status = HAL_BUSY;
 8007e86:	2002      	movs	r0, #2
 8007e88:	e7de      	b.n	8007e48 <HAL_QSPI_Receive+0x78>
  __HAL_LOCK(hqspi);
 8007e8a:	2002      	movs	r0, #2
 8007e8c:	e7df      	b.n	8007e4e <HAL_QSPI_Receive+0x7e>

08007e8e <HAL_QSPI_AutoPolling>:
{
 8007e8e:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8007e92:	4604      	mov	r4, r0
 8007e94:	4615      	mov	r5, r2
 8007e96:	461e      	mov	r6, r3
 8007e98:	4688      	mov	r8, r1
  uint32_t tickstart = HAL_GetTick();
 8007e9a:	f7fd ff9d 	bl	8005dd8 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8007e9e:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
  uint32_t tickstart = HAL_GetTick();
 8007ea2:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8007ea4:	2a01      	cmp	r2, #1
 8007ea6:	d040      	beq.n	8007f2a <HAL_QSPI_AutoPolling+0x9c>
 8007ea8:	2201      	movs	r2, #1
 8007eaa:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8007eae:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8007eb2:	2a01      	cmp	r2, #1
 8007eb4:	b2d7      	uxtb	r7, r2
 8007eb6:	d136      	bne.n	8007f26 <HAL_QSPI_AutoPolling+0x98>
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 8007eb8:	2142      	movs	r1, #66	; 0x42
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8007eba:	2200      	movs	r2, #0
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8007ebc:	9003      	str	r0, [sp, #12]
 8007ebe:	4620      	mov	r0, r4
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8007ec0:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8007ec2:	9600      	str	r6, [sp, #0]
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 8007ec4:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8007ec8:	2120      	movs	r1, #32
 8007eca:	f7ff fe6f 	bl	8007bac <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8007ece:	bb20      	cbnz	r0, 8007f1a <HAL_QSPI_AutoPolling+0x8c>
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 8007ed0:	6821      	ldr	r1, [r4, #0]
 8007ed2:	682a      	ldr	r2, [r5, #0]
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 8007ed4:	6928      	ldr	r0, [r5, #16]
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 8007ed6:	628a      	str	r2, [r1, #40]	; 0x28
      WRITE_REG(hqspi->Instance->PSMKR, cfg->Mask);
 8007ed8:	686a      	ldr	r2, [r5, #4]
 8007eda:	624a      	str	r2, [r1, #36]	; 0x24
      WRITE_REG(hqspi->Instance->PIR, cfg->Interval);
 8007edc:	68aa      	ldr	r2, [r5, #8]
 8007ede:	62ca      	str	r2, [r1, #44]	; 0x2c
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 8007ee0:	680a      	ldr	r2, [r1, #0]
 8007ee2:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 8007ee6:	4302      	orrs	r2, r0
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 8007ee8:	4620      	mov	r0, r4
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 8007eea:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8007eee:	600a      	str	r2, [r1, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 8007ef0:	4641      	mov	r1, r8
      cmd->NbData = cfg->StatusBytesSize;
 8007ef2:	68ea      	ldr	r2, [r5, #12]
 8007ef4:	f8c8 2028 	str.w	r2, [r8, #40]	; 0x28
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 8007ef8:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8007efc:	f7ff fda6 	bl	8007a4c <QSPI_Config>
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_SM, SET, tickstart, Timeout);
 8007f00:	9b03      	ldr	r3, [sp, #12]
 8007f02:	463a      	mov	r2, r7
 8007f04:	2108      	movs	r1, #8
 8007f06:	4620      	mov	r0, r4
 8007f08:	9600      	str	r6, [sp, #0]
 8007f0a:	f7ff fe4f 	bl	8007bac <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 8007f0e:	b920      	cbnz	r0, 8007f1a <HAL_QSPI_AutoPolling+0x8c>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_SM);
 8007f10:	6823      	ldr	r3, [r4, #0]
 8007f12:	2208      	movs	r2, #8
 8007f14:	60da      	str	r2, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 8007f16:	f884 7041 	strb.w	r7, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8007f1a:	2300      	movs	r3, #0
 8007f1c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8007f20:	b004      	add	sp, #16
 8007f22:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    status = HAL_BUSY;
 8007f26:	2002      	movs	r0, #2
 8007f28:	e7f7      	b.n	8007f1a <HAL_QSPI_AutoPolling+0x8c>
  __HAL_LOCK(hqspi);
 8007f2a:	2002      	movs	r0, #2
 8007f2c:	e7f8      	b.n	8007f20 <HAL_QSPI_AutoPolling+0x92>

08007f2e <HAL_QSPI_MemoryMapped>:
{
 8007f2e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007f30:	4604      	mov	r4, r0
 8007f32:	4616      	mov	r6, r2
 8007f34:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 8007f36:	f7fd ff4f 	bl	8005dd8 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8007f3a:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
  uint32_t tickstart = HAL_GetTick();
 8007f3e:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8007f40:	2a01      	cmp	r2, #1
 8007f42:	d033      	beq.n	8007fac <HAL_QSPI_MemoryMapped+0x7e>
 8007f44:	2201      	movs	r2, #1
 8007f46:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8007f4a:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8007f4e:	2a01      	cmp	r2, #1
 8007f50:	d12a      	bne.n	8007fa8 <HAL_QSPI_MemoryMapped+0x7a>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8007f52:	2200      	movs	r2, #0
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 8007f54:	2182      	movs	r1, #130	; 0x82
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8007f56:	4620      	mov	r0, r4
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8007f58:	6462      	str	r2, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 8007f5a:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8007f5e:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8007f60:	9100      	str	r1, [sp, #0]
 8007f62:	2120      	movs	r1, #32
 8007f64:	f7ff fe22 	bl	8007bac <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8007f68:	4605      	mov	r5, r0
 8007f6a:	b9b8      	cbnz	r0, 8007f9c <HAL_QSPI_MemoryMapped+0x6e>
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 8007f6c:	6823      	ldr	r3, [r4, #0]
 8007f6e:	6872      	ldr	r2, [r6, #4]
 8007f70:	6818      	ldr	r0, [r3, #0]
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 8007f72:	2a08      	cmp	r2, #8
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 8007f74:	f020 0008 	bic.w	r0, r0, #8
 8007f78:	ea40 0002 	orr.w	r0, r0, r2
 8007f7c:	6018      	str	r0, [r3, #0]
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 8007f7e:	d107      	bne.n	8007f90 <HAL_QSPI_MemoryMapped+0x62>
        WRITE_REG(hqspi->Instance->LPTR, cfg->TimeOutPeriod);
 8007f80:	6832      	ldr	r2, [r6, #0]
 8007f82:	631a      	str	r2, [r3, #48]	; 0x30
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TO);
 8007f84:	2210      	movs	r2, #16
 8007f86:	60da      	str	r2, [r3, #12]
        __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TO);
 8007f88:	681a      	ldr	r2, [r3, #0]
 8007f8a:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8007f8e:	601a      	str	r2, [r3, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED);
 8007f90:	f04f 6240 	mov.w	r2, #201326592	; 0xc000000
 8007f94:	4639      	mov	r1, r7
 8007f96:	4620      	mov	r0, r4
 8007f98:	f7ff fd58 	bl	8007a4c <QSPI_Config>
  __HAL_UNLOCK(hqspi);
 8007f9c:	2300      	movs	r3, #0
 8007f9e:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8007fa2:	4628      	mov	r0, r5
 8007fa4:	b003      	add	sp, #12
 8007fa6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    status = HAL_BUSY;
 8007fa8:	2502      	movs	r5, #2
 8007faa:	e7f7      	b.n	8007f9c <HAL_QSPI_MemoryMapped+0x6e>
  __HAL_LOCK(hqspi);
 8007fac:	2502      	movs	r5, #2
 8007fae:	e7f8      	b.n	8007fa2 <HAL_QSPI_MemoryMapped+0x74>

08007fb0 <HAL_RCC_OscConfig>:
  *         supported by this function. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8007fb0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  uint32_t tickstart;
  uint32_t temp1_pllckcfg, temp2_pllckcfg;

    /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8007fb2:	4604      	mov	r4, r0
 8007fb4:	b908      	cbnz	r0, 8007fba <HAL_RCC_OscConfig+0xa>
         (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
         ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
         ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
         ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct->PLL.PLLR - 1U)))
      {
        return HAL_ERROR;
 8007fb6:	2001      	movs	r0, #1
 8007fb8:	e08b      	b.n	80080d2 <HAL_RCC_OscConfig+0x122>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8007fba:	6803      	ldr	r3, [r0, #0]
 8007fbc:	07df      	lsls	r7, r3, #31
 8007fbe:	d45e      	bmi.n	800807e <HAL_RCC_OscConfig+0xce>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8007fc0:	6823      	ldr	r3, [r4, #0]
 8007fc2:	079e      	lsls	r6, r3, #30
 8007fc4:	f100 80af 	bmi.w	8008126 <HAL_RCC_OscConfig+0x176>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
 8007fc8:	6823      	ldr	r3, [r4, #0]
 8007fca:	06da      	lsls	r2, r3, #27
 8007fcc:	d527      	bpl.n	800801e <HAL_RCC_OscConfig+0x6e>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8007fce:	4b9e      	ldr	r3, [pc, #632]	; (8008248 <HAL_RCC_OscConfig+0x298>)
 8007fd0:	691a      	ldr	r2, [r3, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
 8007fd2:	6a99      	ldr	r1, [r3, #40]	; 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8007fd4:	f002 0238 	and.w	r2, r2, #56	; 0x38
    if((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
 8007fd8:	2a08      	cmp	r2, #8
 8007fda:	d007      	beq.n	8007fec <HAL_RCC_OscConfig+0x3c>
 8007fdc:	2a18      	cmp	r2, #24
 8007fde:	f040 8107 	bne.w	80081f0 <HAL_RCC_OscConfig+0x240>
 8007fe2:	f001 0203 	and.w	r2, r1, #3
 8007fe6:	2a01      	cmp	r2, #1
 8007fe8:	f040 8102 	bne.w	80081f0 <HAL_RCC_OscConfig+0x240>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
 8007fec:	681b      	ldr	r3, [r3, #0]
 8007fee:	05db      	lsls	r3, r3, #23
 8007ff0:	d502      	bpl.n	8007ff8 <HAL_RCC_OscConfig+0x48>
 8007ff2:	69e3      	ldr	r3, [r4, #28]
 8007ff4:	2b80      	cmp	r3, #128	; 0x80
 8007ff6:	d1de      	bne.n	8007fb6 <HAL_RCC_OscConfig+0x6>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
 8007ff8:	f7fd ff06 	bl	8005e08 <HAL_GetREVID>
 8007ffc:	f241 0303 	movw	r3, #4099	; 0x1003
 8008000:	6a21      	ldr	r1, [r4, #32]
 8008002:	4298      	cmp	r0, r3
 8008004:	4b90      	ldr	r3, [pc, #576]	; (8008248 <HAL_RCC_OscConfig+0x298>)
 8008006:	f200 80ec 	bhi.w	80081e2 <HAL_RCC_OscConfig+0x232>
 800800a:	685a      	ldr	r2, [r3, #4]
 800800c:	2920      	cmp	r1, #32
 800800e:	f022 42f8 	bic.w	r2, r2, #2080374784	; 0x7c000000
 8008012:	bf0c      	ite	eq
 8008014:	f042 4280 	orreq.w	r2, r2, #1073741824	; 0x40000000
 8008018:	ea42 6281 	orrne.w	r2, r2, r1, lsl #26
 800801c:	605a      	str	r2, [r3, #4]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800801e:	6823      	ldr	r3, [r4, #0]
 8008020:	0719      	lsls	r1, r3, #28
 8008022:	f100 8127 	bmi.w	8008274 <HAL_RCC_OscConfig+0x2c4>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 8008026:	6823      	ldr	r3, [r4, #0]
 8008028:	069a      	lsls	r2, r3, #26
 800802a:	f100 8148 	bmi.w	80082be <HAL_RCC_OscConfig+0x30e>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800802e:	6823      	ldr	r3, [r4, #0]
 8008030:	075d      	lsls	r5, r3, #29
 8008032:	d51e      	bpl.n	8008072 <HAL_RCC_OscConfig+0xc2>
    PWR->CR1 |= PWR_CR1_DBP;
 8008034:	4d85      	ldr	r5, [pc, #532]	; (800824c <HAL_RCC_OscConfig+0x29c>)
 8008036:	682b      	ldr	r3, [r5, #0]
 8008038:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800803c:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800803e:	f7fd fecb 	bl	8005dd8 <HAL_GetTick>
 8008042:	4606      	mov	r6, r0
    while((PWR->CR1 & PWR_CR1_DBP) == 0U)
 8008044:	682b      	ldr	r3, [r5, #0]
 8008046:	05da      	lsls	r2, r3, #23
 8008048:	f140 815e 	bpl.w	8008308 <HAL_RCC_OscConfig+0x358>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800804c:	68a3      	ldr	r3, [r4, #8]
 800804e:	4d7e      	ldr	r5, [pc, #504]	; (8008248 <HAL_RCC_OscConfig+0x298>)
 8008050:	2b01      	cmp	r3, #1
 8008052:	f040 8160 	bne.w	8008316 <HAL_RCC_OscConfig+0x366>
 8008056:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8008058:	f043 0301 	orr.w	r3, r3, #1
 800805c:	672b      	str	r3, [r5, #112]	; 0x70
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800805e:	f241 3788 	movw	r7, #5000	; 0x1388
      tickstart = HAL_GetTick();
 8008062:	f7fd feb9 	bl	8005dd8 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8008066:	4e78      	ldr	r6, [pc, #480]	; (8008248 <HAL_RCC_OscConfig+0x298>)
      tickstart = HAL_GetTick();
 8008068:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 800806a:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800806c:	079b      	lsls	r3, r3, #30
 800806e:	f140 8178 	bpl.w	8008362 <HAL_RCC_OscConfig+0x3b2>
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8008072:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8008074:	2800      	cmp	r0, #0
 8008076:	f040 817b 	bne.w	8008370 <HAL_RCC_OscConfig+0x3c0>
      }
    }
  }
  return HAL_OK;
 800807a:	2000      	movs	r0, #0
 800807c:	e029      	b.n	80080d2 <HAL_RCC_OscConfig+0x122>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 800807e:	4b72      	ldr	r3, [pc, #456]	; (8008248 <HAL_RCC_OscConfig+0x298>)
 8008080:	691a      	ldr	r2, [r3, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
 8008082:	6a99      	ldr	r1, [r3, #40]	; 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8008084:	f002 0238 	and.w	r2, r2, #56	; 0x38
    if((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
 8008088:	2a10      	cmp	r2, #16
 800808a:	d005      	beq.n	8008098 <HAL_RCC_OscConfig+0xe8>
 800808c:	2a18      	cmp	r2, #24
 800808e:	d10a      	bne.n	80080a6 <HAL_RCC_OscConfig+0xf6>
 8008090:	f001 0203 	and.w	r2, r1, #3
 8008094:	2a02      	cmp	r2, #2
 8008096:	d106      	bne.n	80080a6 <HAL_RCC_OscConfig+0xf6>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8008098:	681b      	ldr	r3, [r3, #0]
 800809a:	039d      	lsls	r5, r3, #14
 800809c:	d590      	bpl.n	8007fc0 <HAL_RCC_OscConfig+0x10>
 800809e:	6863      	ldr	r3, [r4, #4]
 80080a0:	2b00      	cmp	r3, #0
 80080a2:	d18d      	bne.n	8007fc0 <HAL_RCC_OscConfig+0x10>
 80080a4:	e787      	b.n	8007fb6 <HAL_RCC_OscConfig+0x6>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80080a6:	6862      	ldr	r2, [r4, #4]
 80080a8:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 80080ac:	d112      	bne.n	80080d4 <HAL_RCC_OscConfig+0x124>
 80080ae:	681a      	ldr	r2, [r3, #0]
 80080b0:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 80080b4:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 80080b6:	f7fd fe8f 	bl	8005dd8 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 80080ba:	4e63      	ldr	r6, [pc, #396]	; (8008248 <HAL_RCC_OscConfig+0x298>)
        tickstart = HAL_GetTick();
 80080bc:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 80080be:	6833      	ldr	r3, [r6, #0]
 80080c0:	0398      	lsls	r0, r3, #14
 80080c2:	f53f af7d 	bmi.w	8007fc0 <HAL_RCC_OscConfig+0x10>
          if((uint32_t) (HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80080c6:	f7fd fe87 	bl	8005dd8 <HAL_GetTick>
 80080ca:	1b40      	subs	r0, r0, r5
 80080cc:	2864      	cmp	r0, #100	; 0x64
 80080ce:	d9f6      	bls.n	80080be <HAL_RCC_OscConfig+0x10e>
            return HAL_TIMEOUT;
 80080d0:	2003      	movs	r0, #3
}
 80080d2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80080d4:	4d5c      	ldr	r5, [pc, #368]	; (8008248 <HAL_RCC_OscConfig+0x298>)
 80080d6:	682b      	ldr	r3, [r5, #0]
 80080d8:	b99a      	cbnz	r2, 8008102 <HAL_RCC_OscConfig+0x152>
 80080da:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80080de:	602b      	str	r3, [r5, #0]
 80080e0:	682b      	ldr	r3, [r5, #0]
 80080e2:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80080e6:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 80080e8:	f7fd fe76 	bl	8005dd8 <HAL_GetTick>
 80080ec:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
 80080ee:	682b      	ldr	r3, [r5, #0]
 80080f0:	0399      	lsls	r1, r3, #14
 80080f2:	f57f af65 	bpl.w	8007fc0 <HAL_RCC_OscConfig+0x10>
          if((uint32_t) (HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80080f6:	f7fd fe6f 	bl	8005dd8 <HAL_GetTick>
 80080fa:	1b80      	subs	r0, r0, r6
 80080fc:	2864      	cmp	r0, #100	; 0x64
 80080fe:	d9f6      	bls.n	80080ee <HAL_RCC_OscConfig+0x13e>
 8008100:	e7e6      	b.n	80080d0 <HAL_RCC_OscConfig+0x120>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8008102:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 8008106:	d107      	bne.n	8008118 <HAL_RCC_OscConfig+0x168>
 8008108:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800810c:	602b      	str	r3, [r5, #0]
 800810e:	682b      	ldr	r3, [r5, #0]
 8008110:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8008114:	602b      	str	r3, [r5, #0]
 8008116:	e7ce      	b.n	80080b6 <HAL_RCC_OscConfig+0x106>
 8008118:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800811c:	602b      	str	r3, [r5, #0]
 800811e:	682b      	ldr	r3, [r5, #0]
 8008120:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8008124:	e7f6      	b.n	8008114 <HAL_RCC_OscConfig+0x164>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8008126:	4b48      	ldr	r3, [pc, #288]	; (8008248 <HAL_RCC_OscConfig+0x298>)
 8008128:	68e1      	ldr	r1, [r4, #12]
 800812a:	691a      	ldr	r2, [r3, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
 800812c:	6a98      	ldr	r0, [r3, #40]	; 0x28
    if((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
 800812e:	f012 0238 	ands.w	r2, r2, #56	; 0x38
 8008132:	d003      	beq.n	800813c <HAL_RCC_OscConfig+0x18c>
 8008134:	2a18      	cmp	r2, #24
 8008136:	d12b      	bne.n	8008190 <HAL_RCC_OscConfig+0x1e0>
 8008138:	0782      	lsls	r2, r0, #30
 800813a:	d129      	bne.n	8008190 <HAL_RCC_OscConfig+0x1e0>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
 800813c:	681b      	ldr	r3, [r3, #0]
 800813e:	075b      	lsls	r3, r3, #29
 8008140:	d502      	bpl.n	8008148 <HAL_RCC_OscConfig+0x198>
 8008142:	2900      	cmp	r1, #0
 8008144:	f43f af37 	beq.w	8007fb6 <HAL_RCC_OscConfig+0x6>
          __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
 8008148:	4d3f      	ldr	r5, [pc, #252]	; (8008248 <HAL_RCC_OscConfig+0x298>)
 800814a:	682a      	ldr	r2, [r5, #0]
 800814c:	f022 0219 	bic.w	r2, r2, #25
 8008150:	430a      	orrs	r2, r1
 8008152:	602a      	str	r2, [r5, #0]
          tickstart = HAL_GetTick();
 8008154:	f7fd fe40 	bl	8005dd8 <HAL_GetTick>
 8008158:	4606      	mov	r6, r0
          while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 800815a:	682b      	ldr	r3, [r5, #0]
 800815c:	075f      	lsls	r7, r3, #29
 800815e:	d511      	bpl.n	8008184 <HAL_RCC_OscConfig+0x1d4>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8008160:	f7fd fe52 	bl	8005e08 <HAL_GetREVID>
 8008164:	f241 0303 	movw	r3, #4099	; 0x1003
 8008168:	6922      	ldr	r2, [r4, #16]
 800816a:	4298      	cmp	r0, r3
 800816c:	686b      	ldr	r3, [r5, #4]
 800816e:	d822      	bhi.n	80081b6 <HAL_RCC_OscConfig+0x206>
 8008170:	f423 337c 	bic.w	r3, r3, #258048	; 0x3f000
 8008174:	2a40      	cmp	r2, #64	; 0x40
 8008176:	bf0c      	ite	eq
 8008178:	f443 3300 	orreq.w	r3, r3, #131072	; 0x20000
 800817c:	ea43 3302 	orrne.w	r3, r3, r2, lsl #12
 8008180:	606b      	str	r3, [r5, #4]
 8008182:	e721      	b.n	8007fc8 <HAL_RCC_OscConfig+0x18>
            if((uint32_t) (HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8008184:	f7fd fe28 	bl	8005dd8 <HAL_GetTick>
 8008188:	1b80      	subs	r0, r0, r6
 800818a:	2802      	cmp	r0, #2
 800818c:	d9e5      	bls.n	800815a <HAL_RCC_OscConfig+0x1aa>
 800818e:	e79f      	b.n	80080d0 <HAL_RCC_OscConfig+0x120>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
 8008190:	681a      	ldr	r2, [r3, #0]
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8008192:	b1a9      	cbz	r1, 80081c0 <HAL_RCC_OscConfig+0x210>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
 8008194:	f022 0219 	bic.w	r2, r2, #25
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8008198:	4d2b      	ldr	r5, [pc, #172]	; (8008248 <HAL_RCC_OscConfig+0x298>)
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
 800819a:	430a      	orrs	r2, r1
 800819c:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800819e:	f7fd fe1b 	bl	8005dd8 <HAL_GetTick>
 80081a2:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 80081a4:	682b      	ldr	r3, [r5, #0]
 80081a6:	0758      	lsls	r0, r3, #29
 80081a8:	d4da      	bmi.n	8008160 <HAL_RCC_OscConfig+0x1b0>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 80081aa:	f7fd fe15 	bl	8005dd8 <HAL_GetTick>
 80081ae:	1b80      	subs	r0, r0, r6
 80081b0:	2802      	cmp	r0, #2
 80081b2:	d9f7      	bls.n	80081a4 <HAL_RCC_OscConfig+0x1f4>
 80081b4:	e78c      	b.n	80080d0 <HAL_RCC_OscConfig+0x120>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80081b6:	f023 43fe 	bic.w	r3, r3, #2130706432	; 0x7f000000
 80081ba:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 80081be:	e7df      	b.n	8008180 <HAL_RCC_OscConfig+0x1d0>
        __HAL_RCC_HSI_DISABLE();
 80081c0:	f022 0201 	bic.w	r2, r2, #1
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
 80081c4:	4e20      	ldr	r6, [pc, #128]	; (8008248 <HAL_RCC_OscConfig+0x298>)
        __HAL_RCC_HSI_DISABLE();
 80081c6:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 80081c8:	f7fd fe06 	bl	8005dd8 <HAL_GetTick>
 80081cc:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
 80081ce:	6833      	ldr	r3, [r6, #0]
 80081d0:	0759      	lsls	r1, r3, #29
 80081d2:	f57f aef9 	bpl.w	8007fc8 <HAL_RCC_OscConfig+0x18>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 80081d6:	f7fd fdff 	bl	8005dd8 <HAL_GetTick>
 80081da:	1b40      	subs	r0, r0, r5
 80081dc:	2802      	cmp	r0, #2
 80081de:	d9f6      	bls.n	80081ce <HAL_RCC_OscConfig+0x21e>
 80081e0:	e776      	b.n	80080d0 <HAL_RCC_OscConfig+0x120>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
 80081e2:	68da      	ldr	r2, [r3, #12]
 80081e4:	f022 527c 	bic.w	r2, r2, #1056964608	; 0x3f000000
 80081e8:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
 80081ec:	60da      	str	r2, [r3, #12]
 80081ee:	e716      	b.n	800801e <HAL_RCC_OscConfig+0x6e>
      if((RCC_OscInitStruct->CSIState)!= RCC_CSI_OFF)
 80081f0:	69e2      	ldr	r2, [r4, #28]
 80081f2:	b36a      	cbz	r2, 8008250 <HAL_RCC_OscConfig+0x2a0>
        __HAL_RCC_CSI_ENABLE();
 80081f4:	681a      	ldr	r2, [r3, #0]
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
 80081f6:	4d14      	ldr	r5, [pc, #80]	; (8008248 <HAL_RCC_OscConfig+0x298>)
        __HAL_RCC_CSI_ENABLE();
 80081f8:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80081fc:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 80081fe:	f7fd fdeb 	bl	8005dd8 <HAL_GetTick>
 8008202:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
 8008204:	682b      	ldr	r3, [r5, #0]
 8008206:	05df      	lsls	r7, r3, #23
 8008208:	d511      	bpl.n	800822e <HAL_RCC_OscConfig+0x27e>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
 800820a:	f7fd fdfd 	bl	8005e08 <HAL_GetREVID>
 800820e:	f241 0303 	movw	r3, #4099	; 0x1003
 8008212:	6a22      	ldr	r2, [r4, #32]
 8008214:	4298      	cmp	r0, r3
 8008216:	d810      	bhi.n	800823a <HAL_RCC_OscConfig+0x28a>
 8008218:	686b      	ldr	r3, [r5, #4]
 800821a:	2a20      	cmp	r2, #32
 800821c:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
 8008220:	bf0c      	ite	eq
 8008222:	f043 4380 	orreq.w	r3, r3, #1073741824	; 0x40000000
 8008226:	ea43 6382 	orrne.w	r3, r3, r2, lsl #26
 800822a:	606b      	str	r3, [r5, #4]
 800822c:	e6f7      	b.n	800801e <HAL_RCC_OscConfig+0x6e>
          if((HAL_GetTick() - tickstart ) > CSI_TIMEOUT_VALUE)
 800822e:	f7fd fdd3 	bl	8005dd8 <HAL_GetTick>
 8008232:	1b80      	subs	r0, r0, r6
 8008234:	2802      	cmp	r0, #2
 8008236:	d9e5      	bls.n	8008204 <HAL_RCC_OscConfig+0x254>
 8008238:	e74a      	b.n	80080d0 <HAL_RCC_OscConfig+0x120>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
 800823a:	68eb      	ldr	r3, [r5, #12]
 800823c:	f023 537c 	bic.w	r3, r3, #1056964608	; 0x3f000000
 8008240:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8008244:	60eb      	str	r3, [r5, #12]
 8008246:	e6ea      	b.n	800801e <HAL_RCC_OscConfig+0x6e>
 8008248:	58024400 	.word	0x58024400
 800824c:	58024800 	.word	0x58024800
        __HAL_RCC_CSI_DISABLE();
 8008250:	681a      	ldr	r2, [r3, #0]
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
 8008252:	4e9f      	ldr	r6, [pc, #636]	; (80084d0 <HAL_RCC_OscConfig+0x520>)
        __HAL_RCC_CSI_DISABLE();
 8008254:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8008258:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800825a:	f7fd fdbd 	bl	8005dd8 <HAL_GetTick>
 800825e:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
 8008260:	6833      	ldr	r3, [r6, #0]
 8008262:	05d8      	lsls	r0, r3, #23
 8008264:	f57f aedb 	bpl.w	800801e <HAL_RCC_OscConfig+0x6e>
          if((HAL_GetTick() - tickstart ) > CSI_TIMEOUT_VALUE)
 8008268:	f7fd fdb6 	bl	8005dd8 <HAL_GetTick>
 800826c:	1b40      	subs	r0, r0, r5
 800826e:	2802      	cmp	r0, #2
 8008270:	d9f6      	bls.n	8008260 <HAL_RCC_OscConfig+0x2b0>
 8008272:	e72d      	b.n	80080d0 <HAL_RCC_OscConfig+0x120>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 8008274:	6963      	ldr	r3, [r4, #20]
 8008276:	4d96      	ldr	r5, [pc, #600]	; (80084d0 <HAL_RCC_OscConfig+0x520>)
 8008278:	b183      	cbz	r3, 800829c <HAL_RCC_OscConfig+0x2ec>
      __HAL_RCC_LSI_ENABLE();
 800827a:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 800827c:	f043 0301 	orr.w	r3, r3, #1
 8008280:	676b      	str	r3, [r5, #116]	; 0x74
      tickstart = HAL_GetTick();
 8008282:	f7fd fda9 	bl	8005dd8 <HAL_GetTick>
 8008286:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
 8008288:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 800828a:	079b      	lsls	r3, r3, #30
 800828c:	f53f aecb 	bmi.w	8008026 <HAL_RCC_OscConfig+0x76>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8008290:	f7fd fda2 	bl	8005dd8 <HAL_GetTick>
 8008294:	1b80      	subs	r0, r0, r6
 8008296:	2802      	cmp	r0, #2
 8008298:	d9f6      	bls.n	8008288 <HAL_RCC_OscConfig+0x2d8>
 800829a:	e719      	b.n	80080d0 <HAL_RCC_OscConfig+0x120>
      __HAL_RCC_LSI_DISABLE();
 800829c:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 800829e:	f023 0301 	bic.w	r3, r3, #1
 80082a2:	676b      	str	r3, [r5, #116]	; 0x74
      tickstart = HAL_GetTick();
 80082a4:	f7fd fd98 	bl	8005dd8 <HAL_GetTick>
 80082a8:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
 80082aa:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 80082ac:	079f      	lsls	r7, r3, #30
 80082ae:	f57f aeba 	bpl.w	8008026 <HAL_RCC_OscConfig+0x76>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80082b2:	f7fd fd91 	bl	8005dd8 <HAL_GetTick>
 80082b6:	1b80      	subs	r0, r0, r6
 80082b8:	2802      	cmp	r0, #2
 80082ba:	d9f6      	bls.n	80082aa <HAL_RCC_OscConfig+0x2fa>
 80082bc:	e708      	b.n	80080d0 <HAL_RCC_OscConfig+0x120>
    if((RCC_OscInitStruct->HSI48State)!= RCC_HSI48_OFF)
 80082be:	69a3      	ldr	r3, [r4, #24]
 80082c0:	4d83      	ldr	r5, [pc, #524]	; (80084d0 <HAL_RCC_OscConfig+0x520>)
 80082c2:	b183      	cbz	r3, 80082e6 <HAL_RCC_OscConfig+0x336>
      __HAL_RCC_HSI48_ENABLE();
 80082c4:	682b      	ldr	r3, [r5, #0]
 80082c6:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80082ca:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 80082cc:	f7fd fd84 	bl	8005dd8 <HAL_GetTick>
 80082d0:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
 80082d2:	682b      	ldr	r3, [r5, #0]
 80082d4:	0498      	lsls	r0, r3, #18
 80082d6:	f53f aeaa 	bmi.w	800802e <HAL_RCC_OscConfig+0x7e>
        if((HAL_GetTick() - tickstart ) > HSI48_TIMEOUT_VALUE)
 80082da:	f7fd fd7d 	bl	8005dd8 <HAL_GetTick>
 80082de:	1b80      	subs	r0, r0, r6
 80082e0:	2802      	cmp	r0, #2
 80082e2:	d9f6      	bls.n	80082d2 <HAL_RCC_OscConfig+0x322>
 80082e4:	e6f4      	b.n	80080d0 <HAL_RCC_OscConfig+0x120>
      __HAL_RCC_HSI48_DISABLE();
 80082e6:	682b      	ldr	r3, [r5, #0]
 80082e8:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80082ec:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 80082ee:	f7fd fd73 	bl	8005dd8 <HAL_GetTick>
 80082f2:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
 80082f4:	682b      	ldr	r3, [r5, #0]
 80082f6:	0499      	lsls	r1, r3, #18
 80082f8:	f57f ae99 	bpl.w	800802e <HAL_RCC_OscConfig+0x7e>
        if((HAL_GetTick() - tickstart ) > HSI48_TIMEOUT_VALUE)
 80082fc:	f7fd fd6c 	bl	8005dd8 <HAL_GetTick>
 8008300:	1b80      	subs	r0, r0, r6
 8008302:	2802      	cmp	r0, #2
 8008304:	d9f6      	bls.n	80082f4 <HAL_RCC_OscConfig+0x344>
 8008306:	e6e3      	b.n	80080d0 <HAL_RCC_OscConfig+0x120>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 8008308:	f7fd fd66 	bl	8005dd8 <HAL_GetTick>
 800830c:	1b80      	subs	r0, r0, r6
 800830e:	2864      	cmp	r0, #100	; 0x64
 8008310:	f67f ae98 	bls.w	8008044 <HAL_RCC_OscConfig+0x94>
 8008314:	e6dc      	b.n	80080d0 <HAL_RCC_OscConfig+0x120>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8008316:	b9b3      	cbnz	r3, 8008346 <HAL_RCC_OscConfig+0x396>
 8008318:	6f2b      	ldr	r3, [r5, #112]	; 0x70
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800831a:	f241 3788 	movw	r7, #5000	; 0x1388
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800831e:	f023 0301 	bic.w	r3, r3, #1
 8008322:	672b      	str	r3, [r5, #112]	; 0x70
 8008324:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8008326:	f023 0304 	bic.w	r3, r3, #4
 800832a:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 800832c:	f7fd fd54 	bl	8005dd8 <HAL_GetTick>
 8008330:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
 8008332:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8008334:	0798      	lsls	r0, r3, #30
 8008336:	f57f ae9c 	bpl.w	8008072 <HAL_RCC_OscConfig+0xc2>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800833a:	f7fd fd4d 	bl	8005dd8 <HAL_GetTick>
 800833e:	1b80      	subs	r0, r0, r6
 8008340:	42b8      	cmp	r0, r7
 8008342:	d9f6      	bls.n	8008332 <HAL_RCC_OscConfig+0x382>
 8008344:	e6c4      	b.n	80080d0 <HAL_RCC_OscConfig+0x120>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8008346:	2b05      	cmp	r3, #5
 8008348:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800834a:	d103      	bne.n	8008354 <HAL_RCC_OscConfig+0x3a4>
 800834c:	f043 0304 	orr.w	r3, r3, #4
 8008350:	672b      	str	r3, [r5, #112]	; 0x70
 8008352:	e680      	b.n	8008056 <HAL_RCC_OscConfig+0xa6>
 8008354:	f023 0301 	bic.w	r3, r3, #1
 8008358:	672b      	str	r3, [r5, #112]	; 0x70
 800835a:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800835c:	f023 0304 	bic.w	r3, r3, #4
 8008360:	e67c      	b.n	800805c <HAL_RCC_OscConfig+0xac>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8008362:	f7fd fd39 	bl	8005dd8 <HAL_GetTick>
 8008366:	1b40      	subs	r0, r0, r5
 8008368:	42b8      	cmp	r0, r7
 800836a:	f67f ae7e 	bls.w	800806a <HAL_RCC_OscConfig+0xba>
 800836e:	e6af      	b.n	80080d0 <HAL_RCC_OscConfig+0x120>
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL1)
 8008370:	4d57      	ldr	r5, [pc, #348]	; (80084d0 <HAL_RCC_OscConfig+0x520>)
 8008372:	692b      	ldr	r3, [r5, #16]
 8008374:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8008378:	2b18      	cmp	r3, #24
 800837a:	d07a      	beq.n	8008472 <HAL_RCC_OscConfig+0x4c2>
        __HAL_RCC_PLL_DISABLE();
 800837c:	682b      	ldr	r3, [r5, #0]
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800837e:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 8008380:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8008384:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8008386:	d167      	bne.n	8008458 <HAL_RCC_OscConfig+0x4a8>
        tickstart = HAL_GetTick();
 8008388:	f7fd fd26 	bl	8005dd8 <HAL_GetTick>
 800838c:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
 800838e:	682b      	ldr	r3, [r5, #0]
 8008390:	0199      	lsls	r1, r3, #6
 8008392:	d45b      	bmi.n	800844c <HAL_RCC_OscConfig+0x49c>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8008394:	6aab      	ldr	r3, [r5, #40]	; 0x28
 8008396:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8008398:	f423 737c 	bic.w	r3, r3, #1008	; 0x3f0
 800839c:	f023 0303 	bic.w	r3, r3, #3
 80083a0:	4313      	orrs	r3, r2
 80083a2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80083a4:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
 80083a8:	62ab      	str	r3, [r5, #40]	; 0x28
 80083aa:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80083ac:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80083ae:	3b01      	subs	r3, #1
 80083b0:	3a01      	subs	r2, #1
 80083b2:	025b      	lsls	r3, r3, #9
 80083b4:	0412      	lsls	r2, r2, #16
 80083b6:	b29b      	uxth	r3, r3
 80083b8:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
 80083bc:	4313      	orrs	r3, r2
 80083be:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80083c0:	3a01      	subs	r2, #1
 80083c2:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80083c6:	4313      	orrs	r3, r2
 80083c8:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 80083ca:	3a01      	subs	r2, #1
 80083cc:	0612      	lsls	r2, r2, #24
 80083ce:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
 80083d2:	4313      	orrs	r3, r2
 80083d4:	632b      	str	r3, [r5, #48]	; 0x30
         __HAL_RCC_PLLFRACN_DISABLE();
 80083d6:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 80083d8:	f023 0301 	bic.w	r3, r3, #1
 80083dc:	62eb      	str	r3, [r5, #44]	; 0x2c
         __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
 80083de:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 80083e0:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 80083e2:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 80083e6:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 80083ea:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80083ee:	636b      	str	r3, [r5, #52]	; 0x34
        __HAL_RCC_PLL_VCIRANGE(RCC_OscInitStruct->PLL.PLLRGE) ;
 80083f0:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 80083f2:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80083f4:	f023 030c 	bic.w	r3, r3, #12
 80083f8:	4313      	orrs	r3, r2
 80083fa:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLL_VCORANGE(RCC_OscInitStruct->PLL.PLLVCOSEL) ;
 80083fc:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 80083fe:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8008400:	f023 0302 	bic.w	r3, r3, #2
 8008404:	4313      	orrs	r3, r2
 8008406:	62eb      	str	r3, [r5, #44]	; 0x2c
         __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 8008408:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800840a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800840e:	62eb      	str	r3, [r5, #44]	; 0x2c
         __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8008410:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8008412:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8008416:	62eb      	str	r3, [r5, #44]	; 0x2c
         __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
 8008418:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800841a:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800841e:	62eb      	str	r3, [r5, #44]	; 0x2c
         __HAL_RCC_PLLFRACN_ENABLE();
 8008420:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8008422:	f043 0301 	orr.w	r3, r3, #1
 8008426:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLL_ENABLE();
 8008428:	682b      	ldr	r3, [r5, #0]
 800842a:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800842e:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8008430:	f7fd fcd2 	bl	8005dd8 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 8008434:	4d26      	ldr	r5, [pc, #152]	; (80084d0 <HAL_RCC_OscConfig+0x520>)
        tickstart = HAL_GetTick();
 8008436:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 8008438:	682b      	ldr	r3, [r5, #0]
 800843a:	019a      	lsls	r2, r3, #6
 800843c:	f53f ae1d 	bmi.w	800807a <HAL_RCC_OscConfig+0xca>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8008440:	f7fd fcca 	bl	8005dd8 <HAL_GetTick>
 8008444:	1b00      	subs	r0, r0, r4
 8008446:	2802      	cmp	r0, #2
 8008448:	d9f6      	bls.n	8008438 <HAL_RCC_OscConfig+0x488>
 800844a:	e641      	b.n	80080d0 <HAL_RCC_OscConfig+0x120>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800844c:	f7fd fcc4 	bl	8005dd8 <HAL_GetTick>
 8008450:	1b80      	subs	r0, r0, r6
 8008452:	2802      	cmp	r0, #2
 8008454:	d99b      	bls.n	800838e <HAL_RCC_OscConfig+0x3de>
 8008456:	e63b      	b.n	80080d0 <HAL_RCC_OscConfig+0x120>
        tickstart = HAL_GetTick();
 8008458:	f7fd fcbe 	bl	8005dd8 <HAL_GetTick>
 800845c:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
 800845e:	682b      	ldr	r3, [r5, #0]
 8008460:	019b      	lsls	r3, r3, #6
 8008462:	f57f ae0a 	bpl.w	800807a <HAL_RCC_OscConfig+0xca>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8008466:	f7fd fcb7 	bl	8005dd8 <HAL_GetTick>
 800846a:	1b00      	subs	r0, r0, r4
 800846c:	2802      	cmp	r0, #2
 800846e:	d9f6      	bls.n	800845e <HAL_RCC_OscConfig+0x4ae>
 8008470:	e62e      	b.n	80080d0 <HAL_RCC_OscConfig+0x120>
      if(((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8008472:	2801      	cmp	r0, #1
      temp1_pllckcfg = RCC->PLLCKSELR;
 8008474:	6aaa      	ldr	r2, [r5, #40]	; 0x28
      temp2_pllckcfg = RCC->PLL1DIVR;
 8008476:	6b2b      	ldr	r3, [r5, #48]	; 0x30
      if(((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8008478:	f43f ae2b 	beq.w	80080d2 <HAL_RCC_OscConfig+0x122>
	 (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800847c:	f002 0103 	and.w	r1, r2, #3
      if(((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8008480:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8008482:	4281      	cmp	r1, r0
 8008484:	f47f ad97 	bne.w	8007fb6 <HAL_RCC_OscConfig+0x6>
         ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
 8008488:	f3c2 1205 	ubfx	r2, r2, #4, #6
	 (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800848c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800848e:	428a      	cmp	r2, r1
 8008490:	f47f ad91 	bne.w	8007fb6 <HAL_RCC_OscConfig+0x6>
         (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
 8008494:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8008496:	f3c3 0108 	ubfx	r1, r3, #0, #9
 800849a:	3a01      	subs	r2, #1
         ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
 800849c:	4291      	cmp	r1, r2
 800849e:	f47f ad8a 	bne.w	8007fb6 <HAL_RCC_OscConfig+0x6>
         ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
 80084a2:	6b62      	ldr	r2, [r4, #52]	; 0x34
 80084a4:	f3c3 2146 	ubfx	r1, r3, #9, #7
 80084a8:	3a01      	subs	r2, #1
         (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
 80084aa:	4291      	cmp	r1, r2
 80084ac:	f47f ad83 	bne.w	8007fb6 <HAL_RCC_OscConfig+0x6>
         ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
 80084b0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80084b2:	f3c3 4106 	ubfx	r1, r3, #16, #7
 80084b6:	3a01      	subs	r2, #1
         ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
 80084b8:	4291      	cmp	r1, r2
 80084ba:	f47f ad7c 	bne.w	8007fb6 <HAL_RCC_OscConfig+0x6>
         ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct->PLL.PLLR - 1U)))
 80084be:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 80084c0:	f3c3 6306 	ubfx	r3, r3, #24, #7
 80084c4:	3801      	subs	r0, #1
  return HAL_OK;
 80084c6:	1a18      	subs	r0, r3, r0
 80084c8:	bf18      	it	ne
 80084ca:	2001      	movne	r0, #1
 80084cc:	e601      	b.n	80080d2 <HAL_RCC_OscConfig+0x122>
 80084ce:	bf00      	nop
 80084d0:	58024400 	.word	0x58024400

080084d4 <HAL_RCC_MCOConfig>:
  *          This parameter can be one of the following values:
  *            @arg RCC_MCODIV_1 up to RCC_MCODIV_15  : divider applied to MCOx clock
  * @retval None
  */
void HAL_RCC_MCOConfig(uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
{
 80084d4:	b570      	push	{r4, r5, r6, lr}
 80084d6:	4c23      	ldr	r4, [pc, #140]	; (8008564 <HAL_RCC_MCOConfig+0x90>)
 80084d8:	b088      	sub	sp, #32
 80084da:	460e      	mov	r6, r1
 80084dc:	4615      	mov	r5, r2
  if(RCC_MCOx == RCC_MCO1)
  {
    assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));

    /* MCO1 Clock Enable */
    MCO1_CLK_ENABLE();
 80084de:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
  if(RCC_MCOx == RCC_MCO1)
 80084e2:	b9f8      	cbnz	r0, 8008524 <HAL_RCC_MCOConfig+0x50>
    MCO1_CLK_ENABLE();
 80084e4:	f043 0301 	orr.w	r3, r3, #1

    /* Configure the MCO1 pin in alternate function mode */
    GPIO_InitStruct.Pin = MCO1_PIN;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80084e8:	f44f 7c80 	mov.w	ip, #256	; 0x100
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
    HAL_GPIO_Init(MCO1_GPIO_PORT, &GPIO_InitStruct);
 80084ec:	a903      	add	r1, sp, #12
    MCO1_CLK_ENABLE();
 80084ee:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
 80084f2:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
    GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 80084f6:	9007      	str	r0, [sp, #28]
    MCO1_CLK_ENABLE();
 80084f8:	f003 0301 	and.w	r3, r3, #1
 80084fc:	9301      	str	r3, [sp, #4]
 80084fe:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8008500:	2302      	movs	r3, #2
 8008502:	e9cd c303 	strd	ip, r3, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8008506:	2303      	movs	r3, #3
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8008508:	e9cd 0305 	strd	r0, r3, [sp, #20]
    HAL_GPIO_Init(MCO1_GPIO_PORT, &GPIO_InitStruct);
 800850c:	4816      	ldr	r0, [pc, #88]	; (8008568 <HAL_RCC_MCOConfig+0x94>)
 800850e:	f7fe faa7 	bl	8006a60 <HAL_GPIO_Init>

    /* Mask MCO1 and MCO1PRE[3:0] bits then Select MCO1 clock source and pre-scaler */
    MODIFY_REG(RCC->CFGR, (RCC_CFGR_MCO1 | RCC_CFGR_MCO1PRE), (RCC_MCOSource | RCC_MCODiv));
 8008512:	6923      	ldr	r3, [r4, #16]
 8008514:	f023 73fe 	bic.w	r3, r3, #33292288	; 0x1fc0000
 8008518:	ea43 0106 	orr.w	r1, r3, r6
 800851c:	4329      	orrs	r1, r5
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
    HAL_GPIO_Init(MCO2_GPIO_PORT, &GPIO_InitStruct);

    /* Mask MCO2 and MCO2PRE[3:0] bits then Select MCO2 clock source and pre-scaler */
    MODIFY_REG(RCC->CFGR, (RCC_CFGR_MCO2 | RCC_CFGR_MCO2PRE), (RCC_MCOSource | (RCC_MCODiv << 7U)));
 800851e:	6121      	str	r1, [r4, #16]
  }
}
 8008520:	b008      	add	sp, #32
 8008522:	bd70      	pop	{r4, r5, r6, pc}
    MCO2_CLK_ENABLE();
 8008524:	f043 0304 	orr.w	r3, r3, #4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8008528:	f44f 7200 	mov.w	r2, #512	; 0x200
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800852c:	2103      	movs	r1, #3
    HAL_GPIO_Init(MCO2_GPIO_PORT, &GPIO_InitStruct);
 800852e:	480f      	ldr	r0, [pc, #60]	; (800856c <HAL_RCC_MCOConfig+0x98>)
    MCO2_CLK_ENABLE();
 8008530:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
 8008534:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
 8008538:	f003 0304 	and.w	r3, r3, #4
 800853c:	9302      	str	r3, [sp, #8]
 800853e:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8008540:	2302      	movs	r3, #2
 8008542:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8008546:	2300      	movs	r3, #0
 8008548:	e9cd 3105 	strd	r3, r1, [sp, #20]
    HAL_GPIO_Init(MCO2_GPIO_PORT, &GPIO_InitStruct);
 800854c:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 800854e:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(MCO2_GPIO_PORT, &GPIO_InitStruct);
 8008550:	f7fe fa86 	bl	8006a60 <HAL_GPIO_Init>
    MODIFY_REG(RCC->CFGR, (RCC_CFGR_MCO2 | RCC_CFGR_MCO2PRE), (RCC_MCOSource | (RCC_MCODiv << 7U)));
 8008554:	6923      	ldr	r3, [r4, #16]
 8008556:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
 800855a:	ea43 0106 	orr.w	r1, r3, r6
 800855e:	ea41 11c5 	orr.w	r1, r1, r5, lsl #7
 8008562:	e7dc      	b.n	800851e <HAL_RCC_MCOConfig+0x4a>
 8008564:	58024400 	.word	0x58024400
 8008568:	58020000 	.word	0x58020000
 800856c:	58020800 	.word	0x58020800

08008570 <HAL_RCC_GetSysClockFreq>:
  float_t fracn1, pllvco;
  uint32_t sysclockfreq;

  /* Get SYSCLK source -------------------------------------------------------*/

  switch (RCC->CFGR & RCC_CFGR_SWS)
 8008570:	4b48      	ldr	r3, [pc, #288]	; (8008694 <HAL_RCC_GetSysClockFreq+0x124>)
 8008572:	691a      	ldr	r2, [r3, #16]
 8008574:	f002 0238 	and.w	r2, r2, #56	; 0x38
 8008578:	2a10      	cmp	r2, #16
{
 800857a:	b530      	push	{r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800857c:	f000 8086 	beq.w	800868c <HAL_RCC_GetSysClockFreq+0x11c>
 8008580:	2a18      	cmp	r2, #24
 8008582:	d00c      	beq.n	800859e <HAL_RCC_GetSysClockFreq+0x2e>
 8008584:	2a00      	cmp	r2, #0
 8008586:	f040 8083 	bne.w	8008690 <HAL_RCC_GetSysClockFreq+0x120>
  {
  case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */

   if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 800858a:	681a      	ldr	r2, [r3, #0]
 800858c:	4842      	ldr	r0, [pc, #264]	; (8008698 <HAL_RCC_GetSysClockFreq+0x128>)
 800858e:	f012 0f20 	tst.w	r2, #32
 8008592:	d003      	beq.n	800859c <HAL_RCC_GetSysClockFreq+0x2c>
      {
        sysclockfreq = (uint32_t) (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER()>> 3));
 8008594:	681b      	ldr	r3, [r3, #0]
 8008596:	f3c3 03c1 	ubfx	r3, r3, #3, #2
 800859a:	40d8      	lsrs	r0, r3
    sysclockfreq = CSI_VALUE;
    break;
  }

  return sysclockfreq;
}
 800859c:	bd30      	pop	{r4, r5, pc}
    pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 800859e:	6a99      	ldr	r1, [r3, #40]	; 0x28
    pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> 4)  ;
 80085a0:	6a9d      	ldr	r5, [r3, #40]	; 0x28
    pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN)>>RCC_PLLCFGR_PLL1FRACEN_Pos);
 80085a2:	6adc      	ldr	r4, [r3, #44]	; 0x2c
    if (pllm != 0U)
 80085a4:	f415 7f7c 	tst.w	r5, #1008	; 0x3f0
    pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> 4)  ;
 80085a8:	f3c5 1005 	ubfx	r0, r5, #4, #6
    fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
 80085ac:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    if (pllm != 0U)
 80085ae:	d0f5      	beq.n	800859c <HAL_RCC_GetSysClockFreq+0x2c>
    fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
 80085b0:	f3c2 02cc 	ubfx	r2, r2, #3, #13
    pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN)>>RCC_PLLCFGR_PLL1FRACEN_Pos);
 80085b4:	f004 0401 	and.w	r4, r4, #1
          pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
 80085b8:	ee07 0a90 	vmov	s15, r0
    pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 80085bc:	f001 0103 	and.w	r1, r1, #3
    fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
 80085c0:	4362      	muls	r2, r4
 80085c2:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
          pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
 80085c6:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 80085ca:	2901      	cmp	r1, #1
    fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
 80085cc:	ee07 2a90 	vmov	s15, r2
          pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
 80085d0:	eefa 7ae9 	vcvt.f32.s32	s15, s15, #13
 80085d4:	d04c      	beq.n	8008670 <HAL_RCC_GetSysClockFreq+0x100>
 80085d6:	2902      	cmp	r1, #2
 80085d8:	d03c      	beq.n	8008654 <HAL_RCC_GetSysClockFreq+0xe4>
 80085da:	2900      	cmp	r1, #0
 80085dc:	d148      	bne.n	8008670 <HAL_RCC_GetSysClockFreq+0x100>
       if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 80085de:	681a      	ldr	r2, [r3, #0]
 80085e0:	0692      	lsls	r2, r2, #26
 80085e2:	d527      	bpl.n	8008634 <HAL_RCC_GetSysClockFreq+0xc4>
          hsivalue= (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER()>> 3));
 80085e4:	6819      	ldr	r1, [r3, #0]
 80085e6:	4a2c      	ldr	r2, [pc, #176]	; (8008698 <HAL_RCC_GetSysClockFreq+0x128>)
 80085e8:	f3c1 01c1 	ubfx	r1, r1, #3, #2
          pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
 80085ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
          hsivalue= (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER()>> 3));
 80085ee:	40ca      	lsrs	r2, r1
          pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
 80085f0:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80085f4:	ee07 2a10 	vmov	s14, r2
 80085f8:	eef8 5ac7 	vcvt.f32.s32	s11, s14
 80085fc:	ee85 7aa6 	vdiv.f32	s14, s11, s13
 8008600:	ee06 3a90 	vmov	s13, r3
 8008604:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8008608:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800860c:	ee77 7a86 	vadd.f32	s15, s15, s12
      pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >>9) + 1U ) ;
 8008610:	4b20      	ldr	r3, [pc, #128]	; (8008694 <HAL_RCC_GetSysClockFreq+0x124>)
        pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
 8008612:	ee67 7a87 	vmul.f32	s15, s15, s14
      pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >>9) + 1U ) ;
 8008616:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008618:	f3c3 2346 	ubfx	r3, r3, #9, #7
 800861c:	3301      	adds	r3, #1
      sysclockfreq =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
 800861e:	ee07 3a10 	vmov	s14, r3
 8008622:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8008626:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800862a:	eefc 7ac7 	vcvt.u32.f32	s15, s14
 800862e:	ee17 0a90 	vmov	r0, s15
 8008632:	e7b3      	b.n	800859c <HAL_RCC_GetSysClockFreq+0x2c>
          pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
 8008634:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008636:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800863a:	ee07 3a10 	vmov	s14, r3
 800863e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8008642:	ee77 7a27 	vadd.f32	s15, s14, s15
 8008646:	ee77 7a86 	vadd.f32	s15, s15, s12
 800864a:	ed9f 6a14 	vldr	s12, [pc, #80]	; 800869c <HAL_RCC_GetSysClockFreq+0x12c>
        pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
 800864e:	ee86 7a26 	vdiv.f32	s14, s12, s13
 8008652:	e7dd      	b.n	8008610 <HAL_RCC_GetSysClockFreq+0xa0>
        pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
 8008654:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008656:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800865a:	ee07 3a10 	vmov	s14, r3
 800865e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8008662:	ee77 7a27 	vadd.f32	s15, s14, s15
 8008666:	ee77 7a86 	vadd.f32	s15, s15, s12
 800866a:	ed9f 6a0d 	vldr	s12, [pc, #52]	; 80086a0 <HAL_RCC_GetSysClockFreq+0x130>
 800866e:	e7ee      	b.n	800864e <HAL_RCC_GetSysClockFreq+0xde>
        pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
 8008670:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008672:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8008676:	ee07 3a10 	vmov	s14, r3
 800867a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800867e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8008682:	ee77 7a86 	vadd.f32	s15, s15, s12
 8008686:	ed9f 6a07 	vldr	s12, [pc, #28]	; 80086a4 <HAL_RCC_GetSysClockFreq+0x134>
 800868a:	e7e0      	b.n	800864e <HAL_RCC_GetSysClockFreq+0xde>
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800868c:	4806      	ldr	r0, [pc, #24]	; (80086a8 <HAL_RCC_GetSysClockFreq+0x138>)
 800868e:	e785      	b.n	800859c <HAL_RCC_GetSysClockFreq+0x2c>
    sysclockfreq = CSI_VALUE;
 8008690:	4806      	ldr	r0, [pc, #24]	; (80086ac <HAL_RCC_GetSysClockFreq+0x13c>)
 8008692:	e783      	b.n	800859c <HAL_RCC_GetSysClockFreq+0x2c>
 8008694:	58024400 	.word	0x58024400
 8008698:	03d09000 	.word	0x03d09000
 800869c:	4c742400 	.word	0x4c742400
 80086a0:	4bbebc20 	.word	0x4bbebc20
 80086a4:	4a742400 	.word	0x4a742400
 80086a8:	017d7840 	.word	0x017d7840
 80086ac:	003d0900 	.word	0x003d0900

080086b0 <HAL_RCC_ClockConfig>:
{
 80086b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80086b4:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 80086b6:	4604      	mov	r4, r0
 80086b8:	b910      	cbnz	r0, 80086c0 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 80086ba:	2001      	movs	r0, #1
}
 80086bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 80086c0:	4a88      	ldr	r2, [pc, #544]	; (80088e4 <HAL_RCC_ClockConfig+0x234>)
 80086c2:	6813      	ldr	r3, [r2, #0]
 80086c4:	f003 030f 	and.w	r3, r3, #15
 80086c8:	428b      	cmp	r3, r1
 80086ca:	f0c0 8093 	bcc.w	80087f4 <HAL_RCC_ClockConfig+0x144>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
 80086ce:	6823      	ldr	r3, [r4, #0]
 80086d0:	075f      	lsls	r7, r3, #29
 80086d2:	f100 809b 	bmi.w	800880c <HAL_RCC_ClockConfig+0x15c>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80086d6:	071e      	lsls	r6, r3, #28
 80086d8:	d50b      	bpl.n	80086f2 <HAL_RCC_ClockConfig+0x42>
    if((RCC_ClkInitStruct->APB1CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
 80086da:	4983      	ldr	r1, [pc, #524]	; (80088e8 <HAL_RCC_ClockConfig+0x238>)
 80086dc:	6966      	ldr	r6, [r4, #20]
 80086de:	69c8      	ldr	r0, [r1, #28]
 80086e0:	f000 0070 	and.w	r0, r0, #112	; 0x70
 80086e4:	4286      	cmp	r6, r0
 80086e6:	d904      	bls.n	80086f2 <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
 80086e8:	69ca      	ldr	r2, [r1, #28]
 80086ea:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 80086ee:	4332      	orrs	r2, r6
 80086f0:	61ca      	str	r2, [r1, #28]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80086f2:	06d8      	lsls	r0, r3, #27
 80086f4:	d50b      	bpl.n	800870e <HAL_RCC_ClockConfig+0x5e>
    if((RCC_ClkInitStruct->APB2CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
 80086f6:	497c      	ldr	r1, [pc, #496]	; (80088e8 <HAL_RCC_ClockConfig+0x238>)
 80086f8:	69a6      	ldr	r6, [r4, #24]
 80086fa:	69c8      	ldr	r0, [r1, #28]
 80086fc:	f400 60e0 	and.w	r0, r0, #1792	; 0x700
 8008700:	4286      	cmp	r6, r0
 8008702:	d904      	bls.n	800870e <HAL_RCC_ClockConfig+0x5e>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
 8008704:	69ca      	ldr	r2, [r1, #28]
 8008706:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800870a:	4332      	orrs	r2, r6
 800870c:	61ca      	str	r2, [r1, #28]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
 800870e:	0699      	lsls	r1, r3, #26
 8008710:	d50b      	bpl.n	800872a <HAL_RCC_ClockConfig+0x7a>
    if((RCC_ClkInitStruct->APB4CLKDivider) > (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
 8008712:	4975      	ldr	r1, [pc, #468]	; (80088e8 <HAL_RCC_ClockConfig+0x238>)
 8008714:	69e6      	ldr	r6, [r4, #28]
 8008716:	6a08      	ldr	r0, [r1, #32]
 8008718:	f000 0070 	and.w	r0, r0, #112	; 0x70
 800871c:	4286      	cmp	r6, r0
 800871e:	d904      	bls.n	800872a <HAL_RCC_ClockConfig+0x7a>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider) );
 8008720:	6a0a      	ldr	r2, [r1, #32]
 8008722:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8008726:	4332      	orrs	r2, r6
 8008728:	620a      	str	r2, [r1, #32]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800872a:	079a      	lsls	r2, r3, #30
 800872c:	d50b      	bpl.n	8008746 <HAL_RCC_ClockConfig+0x96>
    if((RCC_ClkInitStruct->AHBCLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_HPRE))
 800872e:	496e      	ldr	r1, [pc, #440]	; (80088e8 <HAL_RCC_ClockConfig+0x238>)
 8008730:	68e6      	ldr	r6, [r4, #12]
 8008732:	6988      	ldr	r0, [r1, #24]
 8008734:	f000 000f 	and.w	r0, r0, #15
 8008738:	4286      	cmp	r6, r0
 800873a:	d904      	bls.n	8008746 <HAL_RCC_ClockConfig+0x96>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800873c:	698a      	ldr	r2, [r1, #24]
 800873e:	f022 020f 	bic.w	r2, r2, #15
 8008742:	4332      	orrs	r2, r6
 8008744:	618a      	str	r2, [r1, #24]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8008746:	07df      	lsls	r7, r3, #31
 8008748:	d46e      	bmi.n	8008828 <HAL_RCC_ClockConfig+0x178>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800874a:	6823      	ldr	r3, [r4, #0]
 800874c:	079e      	lsls	r6, r3, #30
 800874e:	f100 80a1 	bmi.w	8008894 <HAL_RCC_ClockConfig+0x1e4>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8008752:	4964      	ldr	r1, [pc, #400]	; (80088e4 <HAL_RCC_ClockConfig+0x234>)
 8008754:	680a      	ldr	r2, [r1, #0]
 8008756:	f002 020f 	and.w	r2, r2, #15
 800875a:	42aa      	cmp	r2, r5
 800875c:	f200 80a8 	bhi.w	80088b0 <HAL_RCC_ClockConfig+0x200>
 if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
 8008760:	0758      	lsls	r0, r3, #29
 8008762:	f100 80b1 	bmi.w	80088c8 <HAL_RCC_ClockConfig+0x218>
 if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8008766:	0719      	lsls	r1, r3, #28
 8008768:	d50b      	bpl.n	8008782 <HAL_RCC_ClockConfig+0xd2>
   if((RCC_ClkInitStruct->APB1CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
 800876a:	495f      	ldr	r1, [pc, #380]	; (80088e8 <HAL_RCC_ClockConfig+0x238>)
 800876c:	6965      	ldr	r5, [r4, #20]
 800876e:	69c8      	ldr	r0, [r1, #28]
 8008770:	f000 0070 	and.w	r0, r0, #112	; 0x70
 8008774:	4285      	cmp	r5, r0
 8008776:	d204      	bcs.n	8008782 <HAL_RCC_ClockConfig+0xd2>
     MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
 8008778:	69ca      	ldr	r2, [r1, #28]
 800877a:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 800877e:	432a      	orrs	r2, r5
 8008780:	61ca      	str	r2, [r1, #28]
 if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8008782:	06da      	lsls	r2, r3, #27
 8008784:	d50b      	bpl.n	800879e <HAL_RCC_ClockConfig+0xee>
   if((RCC_ClkInitStruct->APB2CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
 8008786:	4958      	ldr	r1, [pc, #352]	; (80088e8 <HAL_RCC_ClockConfig+0x238>)
 8008788:	69a5      	ldr	r5, [r4, #24]
 800878a:	69c8      	ldr	r0, [r1, #28]
 800878c:	f400 60e0 	and.w	r0, r0, #1792	; 0x700
 8008790:	4285      	cmp	r5, r0
 8008792:	d204      	bcs.n	800879e <HAL_RCC_ClockConfig+0xee>
     MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
 8008794:	69ca      	ldr	r2, [r1, #28]
 8008796:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800879a:	432a      	orrs	r2, r5
 800879c:	61ca      	str	r2, [r1, #28]
 if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
 800879e:	069b      	lsls	r3, r3, #26
 80087a0:	d50b      	bpl.n	80087ba <HAL_RCC_ClockConfig+0x10a>
   if((RCC_ClkInitStruct->APB4CLKDivider) < (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
 80087a2:	4a51      	ldr	r2, [pc, #324]	; (80088e8 <HAL_RCC_ClockConfig+0x238>)
 80087a4:	69e0      	ldr	r0, [r4, #28]
 80087a6:	6a11      	ldr	r1, [r2, #32]
 80087a8:	f001 0170 	and.w	r1, r1, #112	; 0x70
 80087ac:	4288      	cmp	r0, r1
 80087ae:	d204      	bcs.n	80087ba <HAL_RCC_ClockConfig+0x10a>
     MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider) );
 80087b0:	6a13      	ldr	r3, [r2, #32]
 80087b2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80087b6:	4303      	orrs	r3, r0
 80087b8:	6213      	str	r3, [r2, #32]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
 80087ba:	f7ff fed9 	bl	8008570 <HAL_RCC_GetSysClockFreq>
 80087be:	494a      	ldr	r1, [pc, #296]	; (80088e8 <HAL_RCC_ClockConfig+0x238>)
 80087c0:	4a4a      	ldr	r2, [pc, #296]	; (80088ec <HAL_RCC_ClockConfig+0x23c>)
 80087c2:	698b      	ldr	r3, [r1, #24]
 80087c4:	f3c3 2303 	ubfx	r3, r3, #8, #4
 80087c8:	5cd3      	ldrb	r3, [r2, r3]
 80087ca:	f003 031f 	and.w	r3, r3, #31
 80087ce:	40d8      	lsrs	r0, r3
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
 80087d0:	698b      	ldr	r3, [r1, #24]
 80087d2:	f003 030f 	and.w	r3, r3, #15
 80087d6:	5cd3      	ldrb	r3, [r2, r3]
 80087d8:	4a45      	ldr	r2, [pc, #276]	; (80088f0 <HAL_RCC_ClockConfig+0x240>)
 80087da:	f003 031f 	and.w	r3, r3, #31
 80087de:	fa20 f303 	lsr.w	r3, r0, r3
 80087e2:	6013      	str	r3, [r2, #0]
  SystemCoreClock = common_system_clock;
 80087e4:	4b43      	ldr	r3, [pc, #268]	; (80088f4 <HAL_RCC_ClockConfig+0x244>)
 80087e6:	6018      	str	r0, [r3, #0]
  halstatus = HAL_InitTick (uwTickPrio);
 80087e8:	4b43      	ldr	r3, [pc, #268]	; (80088f8 <HAL_RCC_ClockConfig+0x248>)
}
 80087ea:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  halstatus = HAL_InitTick (uwTickPrio);
 80087ee:	6818      	ldr	r0, [r3, #0]
 80087f0:	f7f8 be2a 	b.w	8001448 <HAL_InitTick>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80087f4:	6813      	ldr	r3, [r2, #0]
 80087f6:	f023 030f 	bic.w	r3, r3, #15
 80087fa:	430b      	orrs	r3, r1
 80087fc:	6013      	str	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 80087fe:	6813      	ldr	r3, [r2, #0]
 8008800:	f003 030f 	and.w	r3, r3, #15
 8008804:	428b      	cmp	r3, r1
 8008806:	f47f af58 	bne.w	80086ba <HAL_RCC_ClockConfig+0xa>
 800880a:	e760      	b.n	80086ce <HAL_RCC_ClockConfig+0x1e>
    if((RCC_ClkInitStruct->APB3CLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
 800880c:	4936      	ldr	r1, [pc, #216]	; (80088e8 <HAL_RCC_ClockConfig+0x238>)
 800880e:	6926      	ldr	r6, [r4, #16]
 8008810:	6988      	ldr	r0, [r1, #24]
 8008812:	f000 0070 	and.w	r0, r0, #112	; 0x70
 8008816:	4286      	cmp	r6, r0
 8008818:	f67f af5d 	bls.w	80086d6 <HAL_RCC_ClockConfig+0x26>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
 800881c:	698a      	ldr	r2, [r1, #24]
 800881e:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8008822:	4332      	orrs	r2, r6
 8008824:	618a      	str	r2, [r1, #24]
 8008826:	e756      	b.n	80086d6 <HAL_RCC_ClockConfig+0x26>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1CPRE, RCC_ClkInitStruct->SYSCLKDivider);
 8008828:	4b2f      	ldr	r3, [pc, #188]	; (80088e8 <HAL_RCC_ClockConfig+0x238>)
 800882a:	68a1      	ldr	r1, [r4, #8]
 800882c:	699a      	ldr	r2, [r3, #24]
 800882e:	f422 6270 	bic.w	r2, r2, #3840	; 0xf00
 8008832:	430a      	orrs	r2, r1
 8008834:	619a      	str	r2, [r3, #24]
      if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8008836:	6862      	ldr	r2, [r4, #4]
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 8008838:	681b      	ldr	r3, [r3, #0]
      if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800883a:	2a02      	cmp	r2, #2
 800883c:	d11d      	bne.n	800887a <HAL_RCC_ClockConfig+0x1ca>
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 800883e:	f413 3f00 	tst.w	r3, #131072	; 0x20000
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8008842:	f43f af3a 	beq.w	80086ba <HAL_RCC_ClockConfig+0xa>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
 8008846:	4e28      	ldr	r6, [pc, #160]	; (80088e8 <HAL_RCC_ClockConfig+0x238>)
          if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8008848:	f241 3888 	movw	r8, #5000	; 0x1388
      MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
 800884c:	6933      	ldr	r3, [r6, #16]
 800884e:	f023 0307 	bic.w	r3, r3, #7
 8008852:	4313      	orrs	r3, r2
 8008854:	6133      	str	r3, [r6, #16]
      tickstart = HAL_GetTick();
 8008856:	f7fd fabf 	bl	8005dd8 <HAL_GetTick>
 800885a:	4607      	mov	r7, r0
        while (__HAL_RCC_GET_SYSCLK_SOURCE() !=  (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800885c:	6933      	ldr	r3, [r6, #16]
 800885e:	6862      	ldr	r2, [r4, #4]
 8008860:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8008864:	ebb3 0fc2 	cmp.w	r3, r2, lsl #3
 8008868:	f43f af6f 	beq.w	800874a <HAL_RCC_ClockConfig+0x9a>
          if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 800886c:	f7fd fab4 	bl	8005dd8 <HAL_GetTick>
 8008870:	1bc0      	subs	r0, r0, r7
 8008872:	4540      	cmp	r0, r8
 8008874:	d9f2      	bls.n	800885c <HAL_RCC_ClockConfig+0x1ac>
            return HAL_TIMEOUT;
 8008876:	2003      	movs	r0, #3
 8008878:	e720      	b.n	80086bc <HAL_RCC_ClockConfig+0xc>
      else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 800887a:	2a03      	cmp	r2, #3
 800887c:	d102      	bne.n	8008884 <HAL_RCC_ClockConfig+0x1d4>
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 800887e:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8008882:	e7de      	b.n	8008842 <HAL_RCC_ClockConfig+0x192>
      else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_CSI)
 8008884:	2a01      	cmp	r2, #1
 8008886:	d102      	bne.n	800888e <HAL_RCC_ClockConfig+0x1de>
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
 8008888:	f413 7f80 	tst.w	r3, #256	; 0x100
 800888c:	e7d9      	b.n	8008842 <HAL_RCC_ClockConfig+0x192>
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 800888e:	f013 0f04 	tst.w	r3, #4
 8008892:	e7d6      	b.n	8008842 <HAL_RCC_ClockConfig+0x192>
    if((RCC_ClkInitStruct->AHBCLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_HPRE))
 8008894:	4914      	ldr	r1, [pc, #80]	; (80088e8 <HAL_RCC_ClockConfig+0x238>)
 8008896:	68e6      	ldr	r6, [r4, #12]
 8008898:	6988      	ldr	r0, [r1, #24]
 800889a:	f000 000f 	and.w	r0, r0, #15
 800889e:	4286      	cmp	r6, r0
 80088a0:	f4bf af57 	bcs.w	8008752 <HAL_RCC_ClockConfig+0xa2>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 80088a4:	698a      	ldr	r2, [r1, #24]
 80088a6:	f022 020f 	bic.w	r2, r2, #15
 80088aa:	4332      	orrs	r2, r6
 80088ac:	618a      	str	r2, [r1, #24]
 80088ae:	e750      	b.n	8008752 <HAL_RCC_ClockConfig+0xa2>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80088b0:	680a      	ldr	r2, [r1, #0]
 80088b2:	f022 020f 	bic.w	r2, r2, #15
 80088b6:	432a      	orrs	r2, r5
 80088b8:	600a      	str	r2, [r1, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 80088ba:	680a      	ldr	r2, [r1, #0]
 80088bc:	f002 020f 	and.w	r2, r2, #15
 80088c0:	42aa      	cmp	r2, r5
 80088c2:	f47f aefa 	bne.w	80086ba <HAL_RCC_ClockConfig+0xa>
 80088c6:	e74b      	b.n	8008760 <HAL_RCC_ClockConfig+0xb0>
   if((RCC_ClkInitStruct->APB3CLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
 80088c8:	4907      	ldr	r1, [pc, #28]	; (80088e8 <HAL_RCC_ClockConfig+0x238>)
 80088ca:	6925      	ldr	r5, [r4, #16]
 80088cc:	6988      	ldr	r0, [r1, #24]
 80088ce:	f000 0070 	and.w	r0, r0, #112	; 0x70
 80088d2:	4285      	cmp	r5, r0
 80088d4:	f4bf af47 	bcs.w	8008766 <HAL_RCC_ClockConfig+0xb6>
     MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
 80088d8:	698a      	ldr	r2, [r1, #24]
 80088da:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 80088de:	432a      	orrs	r2, r5
 80088e0:	618a      	str	r2, [r1, #24]
 80088e2:	e740      	b.n	8008766 <HAL_RCC_ClockConfig+0xb6>
 80088e4:	52002000 	.word	0x52002000
 80088e8:	58024400 	.word	0x58024400
 80088ec:	08022a20 	.word	0x08022a20
 80088f0:	2400004c 	.word	0x2400004c
 80088f4:	24000048 	.word	0x24000048
 80088f8:	24000054 	.word	0x24000054

080088fc <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemD2Clock CMSIS variable is used to store System domain2 Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 80088fc:	b510      	push	{r4, lr}
uint32_t common_system_clock;

#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
 80088fe:	4c0c      	ldr	r4, [pc, #48]	; (8008930 <HAL_RCC_GetHCLKFreq+0x34>)
 8008900:	f7ff fe36 	bl	8008570 <HAL_RCC_GetSysClockFreq>
 8008904:	490b      	ldr	r1, [pc, #44]	; (8008934 <HAL_RCC_GetHCLKFreq+0x38>)
 8008906:	69a3      	ldr	r3, [r4, #24]
 8008908:	f3c3 2303 	ubfx	r3, r3, #8, #4
 800890c:	5cca      	ldrb	r2, [r1, r3]
#else
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos] & 0x1FU);
#endif

#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
 800890e:	69a3      	ldr	r3, [r4, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
 8008910:	f002 021f 	and.w	r2, r2, #31
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
 8008914:	f003 030f 	and.w	r3, r3, #15
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
 8008918:	fa20 f202 	lsr.w	r2, r0, r2
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
 800891c:	5ccb      	ldrb	r3, [r1, r3]
 800891e:	f003 031f 	and.w	r3, r3, #31
 8008922:	fa22 f003 	lsr.w	r0, r2, r3
 8008926:	4b04      	ldr	r3, [pc, #16]	; (8008938 <HAL_RCC_GetHCLKFreq+0x3c>)
 8008928:	6018      	str	r0, [r3, #0]
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
 800892a:	4b04      	ldr	r3, [pc, #16]	; (800893c <HAL_RCC_GetHCLKFreq+0x40>)
 800892c:	601a      	str	r2, [r3, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  return SystemD2Clock;
}
 800892e:	bd10      	pop	{r4, pc}
 8008930:	58024400 	.word	0x58024400
 8008934:	08022a20 	.word	0x08022a20
 8008938:	2400004c 	.word	0x2400004c
 800893c:	24000048 	.word	0x24000048

08008940 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 8008940:	b508      	push	{r3, lr}
#if defined (RCC_D2CFGR_D2PPRE1)
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1)>> RCC_D2CFGR_D2PPRE1_Pos]) & 0x1FU));
 8008942:	f7ff ffdb 	bl	80088fc <HAL_RCC_GetHCLKFreq>
 8008946:	4b05      	ldr	r3, [pc, #20]	; (800895c <HAL_RCC_GetPCLK1Freq+0x1c>)
 8008948:	4a05      	ldr	r2, [pc, #20]	; (8008960 <HAL_RCC_GetPCLK1Freq+0x20>)
 800894a:	69db      	ldr	r3, [r3, #28]
 800894c:	f3c3 1302 	ubfx	r3, r3, #4, #3
 8008950:	5cd3      	ldrb	r3, [r2, r3]
 8008952:	f003 031f 	and.w	r3, r3, #31
#else
 /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1)>> RCC_CDCFGR2_CDPPRE1_Pos]) & 0x1FU));
#endif
}
 8008956:	40d8      	lsrs	r0, r3
 8008958:	bd08      	pop	{r3, pc}
 800895a:	bf00      	nop
 800895c:	58024400 	.word	0x58024400
 8008960:	08022a20 	.word	0x08022a20

08008964 <HAL_RCC_GetPCLK2Freq>:
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
 8008964:	b508      	push	{r3, lr}
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
#if defined(RCC_D2CFGR_D2PPRE2)
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2)>> RCC_D2CFGR_D2PPRE2_Pos]) & 0x1FU));
 8008966:	f7ff ffc9 	bl	80088fc <HAL_RCC_GetHCLKFreq>
 800896a:	4b05      	ldr	r3, [pc, #20]	; (8008980 <HAL_RCC_GetPCLK2Freq+0x1c>)
 800896c:	4a05      	ldr	r2, [pc, #20]	; (8008984 <HAL_RCC_GetPCLK2Freq+0x20>)
 800896e:	69db      	ldr	r3, [r3, #28]
 8008970:	f3c3 2302 	ubfx	r3, r3, #8, #3
 8008974:	5cd3      	ldrb	r3, [r2, r3]
 8008976:	f003 031f 	and.w	r3, r3, #31
#else
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE2)>> RCC_CDCFGR2_CDPPRE2_Pos]) & 0x1FU));
#endif
}
 800897a:	40d8      	lsrs	r0, r3
 800897c:	bd08      	pop	{r3, pc}
 800897e:	bf00      	nop
 8008980:	58024400 	.word	0x58024400
 8008984:	08022a20 	.word	0x08022a20

08008988 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
 8008988:	233f      	movs	r3, #63	; 0x3f
 800898a:	6003      	str	r3, [r0, #0]
                                 RCC_CLOCKTYPE_PCLK2 |  RCC_CLOCKTYPE_D3PCLK1  ;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800898c:	4b11      	ldr	r3, [pc, #68]	; (80089d4 <HAL_RCC_GetClockConfig+0x4c>)
 800898e:	691a      	ldr	r2, [r3, #16]
 8008990:	f002 0207 	and.w	r2, r2, #7
 8008994:	6042      	str	r2, [r0, #4]

#if defined(RCC_D1CFGR_D1CPRE)
  /* Get the SYSCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1CPRE);
 8008996:	699a      	ldr	r2, [r3, #24]
 8008998:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
 800899c:	6082      	str	r2, [r0, #8]

  /* Get the D1HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_HPRE);
 800899e:	699a      	ldr	r2, [r3, #24]
 80089a0:	f002 020f 	and.w	r2, r2, #15
 80089a4:	60c2      	str	r2, [r0, #12]

  /* Get the APB3 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB3CLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1PPRE);
 80089a6:	699a      	ldr	r2, [r3, #24]
 80089a8:	f002 0270 	and.w	r2, r2, #112	; 0x70
 80089ac:	6102      	str	r2, [r0, #16]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1);
 80089ae:	69da      	ldr	r2, [r3, #28]
 80089b0:	f002 0270 	and.w	r2, r2, #112	; 0x70
 80089b4:	6142      	str	r2, [r0, #20]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2);
 80089b6:	69da      	ldr	r2, [r3, #28]
 80089b8:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
 80089bc:	6182      	str	r2, [r0, #24]

  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
 80089be:	6a1b      	ldr	r3, [r3, #32]
 80089c0:	f003 0370 	and.w	r3, r3, #112	; 0x70
 80089c4:	61c3      	str	r3, [r0, #28]
  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->SRDCFGR & RCC_SRDCFGR_SRDPPRE);
#endif

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 80089c6:	4b04      	ldr	r3, [pc, #16]	; (80089d8 <HAL_RCC_GetClockConfig+0x50>)
 80089c8:	681b      	ldr	r3, [r3, #0]
 80089ca:	f003 030f 	and.w	r3, r3, #15
 80089ce:	600b      	str	r3, [r1, #0]
}
 80089d0:	4770      	bx	lr
 80089d2:	bf00      	nop
 80089d4:	58024400 	.word	0x58024400
 80089d8:	52002000 	.word	0x52002000

080089dc <RCCEx_PLL2_Config>:
  * @note   PLL2 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL2_Config(RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
{
 80089dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  assert_param(IS_RCC_PLL2RGE_VALUE(pll2->PLL2RGE));
  assert_param(IS_RCC_PLL2VCO_VALUE(pll2->PLL2VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll2->PLL2FRACN));

  /* Check that PLL2 OSC clock source is already set */
  if(__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
 80089de:	4c3a      	ldr	r4, [pc, #232]	; (8008ac8 <RCCEx_PLL2_Config+0xec>)
{
 80089e0:	4606      	mov	r6, r0
 80089e2:	460d      	mov	r5, r1
  if(__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
 80089e4:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80089e6:	f003 0303 	and.w	r3, r3, #3
 80089ea:	2b03      	cmp	r3, #3
 80089ec:	d069      	beq.n	8008ac2 <RCCEx_PLL2_Config+0xe6>


  else
  {
    /* Disable  PLL2. */
    __HAL_RCC_PLL2_DISABLE();
 80089ee:	6823      	ldr	r3, [r4, #0]
 80089f0:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 80089f4:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 80089f6:	f7fd f9ef 	bl	8005dd8 <HAL_GetTick>
 80089fa:	4607      	mov	r7, r0

    /* Wait till PLL is disabled */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
 80089fc:	6823      	ldr	r3, [r4, #0]
 80089fe:	011a      	lsls	r2, r3, #4
 8008a00:	d44b      	bmi.n	8008a9a <RCCEx_PLL2_Config+0xbe>
        return HAL_TIMEOUT;
      }
    }

    /* Configure PLL2 multiplication and division factors. */
    __HAL_RCC_PLL2_CONFIG(pll2->PLL2M,
 8008a02:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8008a04:	6832      	ldr	r2, [r6, #0]
 8008a06:	f423 337c 	bic.w	r3, r3, #258048	; 0x3f000
 8008a0a:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
 8008a0e:	62a3      	str	r3, [r4, #40]	; 0x28
 8008a10:	68b3      	ldr	r3, [r6, #8]
 8008a12:	68f2      	ldr	r2, [r6, #12]
 8008a14:	3b01      	subs	r3, #1
 8008a16:	3a01      	subs	r2, #1
 8008a18:	025b      	lsls	r3, r3, #9
 8008a1a:	0412      	lsls	r2, r2, #16
 8008a1c:	b29b      	uxth	r3, r3
 8008a1e:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
 8008a22:	4313      	orrs	r3, r2
 8008a24:	6872      	ldr	r2, [r6, #4]
 8008a26:	3a01      	subs	r2, #1
 8008a28:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8008a2c:	4313      	orrs	r3, r2
 8008a2e:	6932      	ldr	r2, [r6, #16]
 8008a30:	3a01      	subs	r2, #1
 8008a32:	0612      	lsls	r2, r2, #24
 8008a34:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
 8008a38:	4313      	orrs	r3, r2
 8008a3a:	63a3      	str	r3, [r4, #56]	; 0x38
                          pll2->PLL2P,
                          pll2->PLL2Q,
                          pll2->PLL2R);

    /* Select PLL2 input reference frequency range: VCI */
    __HAL_RCC_PLL2_VCIRANGE(pll2->PLL2RGE) ;
 8008a3c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008a3e:	6972      	ldr	r2, [r6, #20]
 8008a40:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 8008a44:	4313      	orrs	r3, r2
 8008a46:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Select PLL2 output frequency range : VCO */
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
 8008a48:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008a4a:	69b2      	ldr	r2, [r6, #24]
 8008a4c:	f023 0320 	bic.w	r3, r3, #32
 8008a50:	4313      	orrs	r3, r2
 8008a52:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Disable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_DISABLE();
 8008a54:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008a56:	f023 0310 	bic.w	r3, r3, #16
 8008a5a:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Configures PLL2 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
 8008a5c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008a5e:	69f2      	ldr	r2, [r6, #28]
 8008a60:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8008a64:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8008a68:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8008a6c:	63e3      	str	r3, [r4, #60]	; 0x3c

    /* Enable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_ENABLE();
 8008a6e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008a70:	f043 0310 	orr.w	r3, r3, #16
 8008a74:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Enable the PLL2 clock output */
    if(Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
 8008a76:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    if(Divider == DIVIDER_P_UPDATE)
 8008a78:	b9b5      	cbnz	r5, 8008aa8 <RCCEx_PLL2_Config+0xcc>
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
 8008a7a:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVQ);
    }
    else
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVR);
 8008a7e:	62e3      	str	r3, [r4, #44]	; 0x2c
    }

    /* Enable  PLL2. */
    __HAL_RCC_PLL2_ENABLE();
 8008a80:	4c11      	ldr	r4, [pc, #68]	; (8008ac8 <RCCEx_PLL2_Config+0xec>)
 8008a82:	6823      	ldr	r3, [r4, #0]
 8008a84:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8008a88:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8008a8a:	f7fd f9a5 	bl	8005dd8 <HAL_GetTick>
 8008a8e:	4605      	mov	r5, r0

    /* Wait till PLL2 is ready */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
 8008a90:	6823      	ldr	r3, [r4, #0]
 8008a92:	011b      	lsls	r3, r3, #4
 8008a94:	d50f      	bpl.n	8008ab6 <RCCEx_PLL2_Config+0xda>
    }

  }


  return status;
 8008a96:	2000      	movs	r0, #0
 8008a98:	e005      	b.n	8008aa6 <RCCEx_PLL2_Config+0xca>
      if( (HAL_GetTick() - tickstart ) > PLL2_TIMEOUT_VALUE)
 8008a9a:	f7fd f99d 	bl	8005dd8 <HAL_GetTick>
 8008a9e:	1bc0      	subs	r0, r0, r7
 8008aa0:	2802      	cmp	r0, #2
 8008aa2:	d9ab      	bls.n	80089fc <RCCEx_PLL2_Config+0x20>
        return HAL_TIMEOUT;
 8008aa4:	2003      	movs	r0, #3
}
 8008aa6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    else if(Divider == DIVIDER_Q_UPDATE)
 8008aa8:	2d01      	cmp	r5, #1
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVQ);
 8008aaa:	bf0c      	ite	eq
 8008aac:	f443 1380 	orreq.w	r3, r3, #1048576	; 0x100000
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVR);
 8008ab0:	f443 1300 	orrne.w	r3, r3, #2097152	; 0x200000
 8008ab4:	e7e3      	b.n	8008a7e <RCCEx_PLL2_Config+0xa2>
      if( (HAL_GetTick() - tickstart ) > PLL2_TIMEOUT_VALUE)
 8008ab6:	f7fd f98f 	bl	8005dd8 <HAL_GetTick>
 8008aba:	1b40      	subs	r0, r0, r5
 8008abc:	2802      	cmp	r0, #2
 8008abe:	d9e7      	bls.n	8008a90 <RCCEx_PLL2_Config+0xb4>
 8008ac0:	e7f0      	b.n	8008aa4 <RCCEx_PLL2_Config+0xc8>
    return HAL_ERROR;
 8008ac2:	2001      	movs	r0, #1
 8008ac4:	e7ef      	b.n	8008aa6 <RCCEx_PLL2_Config+0xca>
 8008ac6:	bf00      	nop
 8008ac8:	58024400 	.word	0x58024400

08008acc <RCCEx_PLL3_Config>:
  * @note   PLL3 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL3_Config(RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
{
 8008acc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  assert_param(IS_RCC_PLL3RGE_VALUE(pll3->PLL3RGE));
  assert_param(IS_RCC_PLL3VCO_VALUE(pll3->PLL3VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll3->PLL3FRACN));

  /* Check that PLL3 OSC clock source is already set */
  if(__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
 8008ace:	4c3a      	ldr	r4, [pc, #232]	; (8008bb8 <RCCEx_PLL3_Config+0xec>)
{
 8008ad0:	4606      	mov	r6, r0
 8008ad2:	460d      	mov	r5, r1
  if(__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
 8008ad4:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8008ad6:	f003 0303 	and.w	r3, r3, #3
 8008ada:	2b03      	cmp	r3, #3
 8008adc:	d069      	beq.n	8008bb2 <RCCEx_PLL3_Config+0xe6>


  else
  {
    /* Disable  PLL3. */
    __HAL_RCC_PLL3_DISABLE();
 8008ade:	6823      	ldr	r3, [r4, #0]
 8008ae0:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8008ae4:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8008ae6:	f7fd f977 	bl	8005dd8 <HAL_GetTick>
 8008aea:	4607      	mov	r7, r0
    /* Wait till PLL3 is ready */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
 8008aec:	6823      	ldr	r3, [r4, #0]
 8008aee:	009a      	lsls	r2, r3, #2
 8008af0:	d44b      	bmi.n	8008b8a <RCCEx_PLL3_Config+0xbe>
        return HAL_TIMEOUT;
      }
    }

    /* Configure the PLL3  multiplication and division factors. */
    __HAL_RCC_PLL3_CONFIG(pll3->PLL3M,
 8008af2:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8008af4:	6832      	ldr	r2, [r6, #0]
 8008af6:	f023 737c 	bic.w	r3, r3, #66060288	; 0x3f00000
 8008afa:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 8008afe:	62a3      	str	r3, [r4, #40]	; 0x28
 8008b00:	68b3      	ldr	r3, [r6, #8]
 8008b02:	68f2      	ldr	r2, [r6, #12]
 8008b04:	3b01      	subs	r3, #1
 8008b06:	3a01      	subs	r2, #1
 8008b08:	025b      	lsls	r3, r3, #9
 8008b0a:	0412      	lsls	r2, r2, #16
 8008b0c:	b29b      	uxth	r3, r3
 8008b0e:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
 8008b12:	4313      	orrs	r3, r2
 8008b14:	6872      	ldr	r2, [r6, #4]
 8008b16:	3a01      	subs	r2, #1
 8008b18:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8008b1c:	4313      	orrs	r3, r2
 8008b1e:	6932      	ldr	r2, [r6, #16]
 8008b20:	3a01      	subs	r2, #1
 8008b22:	0612      	lsls	r2, r2, #24
 8008b24:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
 8008b28:	4313      	orrs	r3, r2
 8008b2a:	6423      	str	r3, [r4, #64]	; 0x40
                          pll3->PLL3P,
                          pll3->PLL3Q,
                          pll3->PLL3R);

    /* Select PLL3 input reference frequency range: VCI */
    __HAL_RCC_PLL3_VCIRANGE(pll3->PLL3RGE) ;
 8008b2c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008b2e:	6972      	ldr	r2, [r6, #20]
 8008b30:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
 8008b34:	4313      	orrs	r3, r2
 8008b36:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Select PLL3 output frequency range : VCO */
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
 8008b38:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008b3a:	69b2      	ldr	r2, [r6, #24]
 8008b3c:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8008b40:	4313      	orrs	r3, r2
 8008b42:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Disable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_DISABLE();
 8008b44:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008b46:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8008b4a:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Configures PLL3 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
 8008b4c:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8008b4e:	69f2      	ldr	r2, [r6, #28]
 8008b50:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8008b54:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8008b58:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8008b5c:	6463      	str	r3, [r4, #68]	; 0x44

    /* Enable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_ENABLE();
 8008b5e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008b60:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8008b64:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Enable the PLL3 clock output */
    if(Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
 8008b66:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    if(Divider == DIVIDER_P_UPDATE)
 8008b68:	b9b5      	cbnz	r5, 8008b98 <RCCEx_PLL3_Config+0xcc>
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
 8008b6a:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVQ);
    }
    else
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVR);
 8008b6e:	62e3      	str	r3, [r4, #44]	; 0x2c
    }

    /* Enable  PLL3. */
    __HAL_RCC_PLL3_ENABLE();
 8008b70:	4c11      	ldr	r4, [pc, #68]	; (8008bb8 <RCCEx_PLL3_Config+0xec>)
 8008b72:	6823      	ldr	r3, [r4, #0]
 8008b74:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8008b78:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8008b7a:	f7fd f92d 	bl	8005dd8 <HAL_GetTick>
 8008b7e:	4605      	mov	r5, r0

    /* Wait till PLL3 is ready */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
 8008b80:	6823      	ldr	r3, [r4, #0]
 8008b82:	009b      	lsls	r3, r3, #2
 8008b84:	d50f      	bpl.n	8008ba6 <RCCEx_PLL3_Config+0xda>
    }

  }


  return status;
 8008b86:	2000      	movs	r0, #0
 8008b88:	e005      	b.n	8008b96 <RCCEx_PLL3_Config+0xca>
      if( (HAL_GetTick() - tickstart ) > PLL3_TIMEOUT_VALUE)
 8008b8a:	f7fd f925 	bl	8005dd8 <HAL_GetTick>
 8008b8e:	1bc0      	subs	r0, r0, r7
 8008b90:	2802      	cmp	r0, #2
 8008b92:	d9ab      	bls.n	8008aec <RCCEx_PLL3_Config+0x20>
        return HAL_TIMEOUT;
 8008b94:	2003      	movs	r0, #3
}
 8008b96:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    else if(Divider == DIVIDER_Q_UPDATE)
 8008b98:	2d01      	cmp	r5, #1
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVQ);
 8008b9a:	bf0c      	ite	eq
 8008b9c:	f443 0300 	orreq.w	r3, r3, #8388608	; 0x800000
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVR);
 8008ba0:	f043 7380 	orrne.w	r3, r3, #16777216	; 0x1000000
 8008ba4:	e7e3      	b.n	8008b6e <RCCEx_PLL3_Config+0xa2>
      if( (HAL_GetTick() - tickstart ) > PLL3_TIMEOUT_VALUE)
 8008ba6:	f7fd f917 	bl	8005dd8 <HAL_GetTick>
 8008baa:	1b40      	subs	r0, r0, r5
 8008bac:	2802      	cmp	r0, #2
 8008bae:	d9e7      	bls.n	8008b80 <RCCEx_PLL3_Config+0xb4>
 8008bb0:	e7f0      	b.n	8008b94 <RCCEx_PLL3_Config+0xc8>
    return HAL_ERROR;
 8008bb2:	2001      	movs	r0, #1
 8008bb4:	e7ef      	b.n	8008b96 <RCCEx_PLL3_Config+0xca>
 8008bb6:	bf00      	nop
 8008bb8:	58024400 	.word	0x58024400

08008bbc <HAL_RCCEx_PeriphCLKConfig>:
{
 8008bbc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 8008bc0:	6806      	ldr	r6, [r0, #0]
{
 8008bc2:	4605      	mov	r5, r0
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 8008bc4:	f016 6600 	ands.w	r6, r6, #134217728	; 0x8000000
 8008bc8:	d009      	beq.n	8008bde <HAL_RCCEx_PeriphCLKConfig+0x22>
    switch(PeriphClkInit->SpdifrxClockSelection)
 8008bca:	6e83      	ldr	r3, [r0, #104]	; 0x68
 8008bcc:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8008bd0:	d02e      	beq.n	8008c30 <HAL_RCCEx_PeriphCLKConfig+0x74>
 8008bd2:	d813      	bhi.n	8008bfc <HAL_RCCEx_PeriphCLKConfig+0x40>
 8008bd4:	b1f3      	cbz	r3, 8008c14 <HAL_RCCEx_PeriphCLKConfig+0x58>
 8008bd6:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8008bda:	d021      	beq.n	8008c20 <HAL_RCCEx_PeriphCLKConfig+0x64>
 8008bdc:	2601      	movs	r6, #1
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
 8008bde:	682b      	ldr	r3, [r5, #0]
 8008be0:	05db      	lsls	r3, r3, #23
 8008be2:	f140 8102 	bpl.w	8008dea <HAL_RCCEx_PeriphCLKConfig+0x22e>
    switch(PeriphClkInit->Sai1ClockSelection)
 8008be6:	6dab      	ldr	r3, [r5, #88]	; 0x58
 8008be8:	2b04      	cmp	r3, #4
 8008bea:	f200 80fd 	bhi.w	8008de8 <HAL_RCCEx_PeriphCLKConfig+0x22c>
 8008bee:	e8df f013 	tbh	[pc, r3, lsl #1]
 8008bf2:	0024      	.short	0x0024
 8008bf4:	00f5002b 	.word	0x00f5002b
 8008bf8:	00290029 	.word	0x00290029
    switch(PeriphClkInit->SpdifrxClockSelection)
 8008bfc:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 8008c00:	d1ec      	bne.n	8008bdc <HAL_RCCEx_PeriphCLKConfig+0x20>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
 8008c02:	4aa8      	ldr	r2, [pc, #672]	; (8008ea4 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8008c04:	2600      	movs	r6, #0
 8008c06:	6ea9      	ldr	r1, [r5, #104]	; 0x68
 8008c08:	6d13      	ldr	r3, [r2, #80]	; 0x50
 8008c0a:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 8008c0e:	430b      	orrs	r3, r1
 8008c10:	6513      	str	r3, [r2, #80]	; 0x50
 8008c12:	e7e4      	b.n	8008bde <HAL_RCCEx_PeriphCLKConfig+0x22>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8008c14:	4aa3      	ldr	r2, [pc, #652]	; (8008ea4 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8008c16:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8008c18:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8008c1c:	62d3      	str	r3, [r2, #44]	; 0x2c
    if(ret == HAL_OK)
 8008c1e:	e7f0      	b.n	8008c02 <HAL_RCCEx_PeriphCLKConfig+0x46>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_R_UPDATE);
 8008c20:	2102      	movs	r1, #2
 8008c22:	3004      	adds	r0, #4
 8008c24:	f7ff feda 	bl	80089dc <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE);
 8008c28:	4606      	mov	r6, r0
    if(ret == HAL_OK)
 8008c2a:	2800      	cmp	r0, #0
 8008c2c:	d1d7      	bne.n	8008bde <HAL_RCCEx_PeriphCLKConfig+0x22>
 8008c2e:	e7e8      	b.n	8008c02 <HAL_RCCEx_PeriphCLKConfig+0x46>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE);
 8008c30:	2102      	movs	r1, #2
 8008c32:	3024      	adds	r0, #36	; 0x24
 8008c34:	f7ff ff4a 	bl	8008acc <RCCEx_PLL3_Config>
 8008c38:	e7f6      	b.n	8008c28 <HAL_RCCEx_PeriphCLKConfig+0x6c>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8008c3a:	4a9a      	ldr	r2, [pc, #616]	; (8008ea4 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8008c3c:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8008c3e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8008c42:	62d3      	str	r3, [r2, #44]	; 0x2c
    switch(PeriphClkInit->Sai1ClockSelection)
 8008c44:	4634      	mov	r4, r6
 8008c46:	e004      	b.n	8008c52 <HAL_RCCEx_PeriphCLKConfig+0x96>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_P_UPDATE);
 8008c48:	2100      	movs	r1, #0
 8008c4a:	1d28      	adds	r0, r5, #4
 8008c4c:	f7ff fec6 	bl	80089dc <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_P_UPDATE);
 8008c50:	4604      	mov	r4, r0
    if(ret == HAL_OK)
 8008c52:	2c00      	cmp	r4, #0
 8008c54:	f040 80cb 	bne.w	8008dee <HAL_RCCEx_PeriphCLKConfig+0x232>
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 8008c58:	4a92      	ldr	r2, [pc, #584]	; (8008ea4 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8008c5a:	6da9      	ldr	r1, [r5, #88]	; 0x58
 8008c5c:	6d13      	ldr	r3, [r2, #80]	; 0x50
 8008c5e:	f023 0307 	bic.w	r3, r3, #7
 8008c62:	430b      	orrs	r3, r1
 8008c64:	6513      	str	r3, [r2, #80]	; 0x50
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
 8008c66:	682b      	ldr	r3, [r5, #0]
 8008c68:	059f      	lsls	r7, r3, #22
 8008c6a:	d50d      	bpl.n	8008c88 <HAL_RCCEx_PeriphCLKConfig+0xcc>
    switch(PeriphClkInit->Sai23ClockSelection)
 8008c6c:	6deb      	ldr	r3, [r5, #92]	; 0x5c
 8008c6e:	2b80      	cmp	r3, #128	; 0x80
 8008c70:	f000 80da 	beq.w	8008e28 <HAL_RCCEx_PeriphCLKConfig+0x26c>
 8008c74:	f200 80bd 	bhi.w	8008df2 <HAL_RCCEx_PeriphCLKConfig+0x236>
 8008c78:	2b00      	cmp	r3, #0
 8008c7a:	f000 80c9 	beq.w	8008e10 <HAL_RCCEx_PeriphCLKConfig+0x254>
 8008c7e:	2b40      	cmp	r3, #64	; 0x40
 8008c80:	f000 80cc 	beq.w	8008e1c <HAL_RCCEx_PeriphCLKConfig+0x260>
 8008c84:	2601      	movs	r6, #1
 8008c86:	4634      	mov	r4, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
 8008c88:	682b      	ldr	r3, [r5, #0]
 8008c8a:	0558      	lsls	r0, r3, #21
 8008c8c:	d510      	bpl.n	8008cb0 <HAL_RCCEx_PeriphCLKConfig+0xf4>
    switch(PeriphClkInit->Sai4AClockSelection)
 8008c8e:	f8d5 30a8 	ldr.w	r3, [r5, #168]	; 0xa8
 8008c92:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8008c96:	f000 80ec 	beq.w	8008e72 <HAL_RCCEx_PeriphCLKConfig+0x2b6>
 8008c9a:	f200 80cd 	bhi.w	8008e38 <HAL_RCCEx_PeriphCLKConfig+0x27c>
 8008c9e:	2b00      	cmp	r3, #0
 8008ca0:	f000 80db 	beq.w	8008e5a <HAL_RCCEx_PeriphCLKConfig+0x29e>
 8008ca4:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8008ca8:	f000 80dd 	beq.w	8008e66 <HAL_RCCEx_PeriphCLKConfig+0x2aa>
 8008cac:	2601      	movs	r6, #1
 8008cae:	4634      	mov	r4, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
 8008cb0:	682b      	ldr	r3, [r5, #0]
 8008cb2:	0519      	lsls	r1, r3, #20
 8008cb4:	d510      	bpl.n	8008cd8 <HAL_RCCEx_PeriphCLKConfig+0x11c>
    switch(PeriphClkInit->Sai4BClockSelection)
 8008cb6:	f8d5 30ac 	ldr.w	r3, [r5, #172]	; 0xac
 8008cba:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8008cbe:	f000 80ff 	beq.w	8008ec0 <HAL_RCCEx_PeriphCLKConfig+0x304>
 8008cc2:	f200 80de 	bhi.w	8008e82 <HAL_RCCEx_PeriphCLKConfig+0x2c6>
 8008cc6:	2b00      	cmp	r3, #0
 8008cc8:	f000 80ee 	beq.w	8008ea8 <HAL_RCCEx_PeriphCLKConfig+0x2ec>
 8008ccc:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8008cd0:	f000 80f0 	beq.w	8008eb4 <HAL_RCCEx_PeriphCLKConfig+0x2f8>
 8008cd4:	2601      	movs	r6, #1
 8008cd6:	4634      	mov	r4, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
 8008cd8:	682b      	ldr	r3, [r5, #0]
 8008cda:	019a      	lsls	r2, r3, #6
 8008cdc:	d50d      	bpl.n	8008cfa <HAL_RCCEx_PeriphCLKConfig+0x13e>
    switch(PeriphClkInit->QspiClockSelection)
 8008cde:	6cab      	ldr	r3, [r5, #72]	; 0x48
 8008ce0:	2b20      	cmp	r3, #32
 8008ce2:	f000 8107 	beq.w	8008ef4 <HAL_RCCEx_PeriphCLKConfig+0x338>
 8008ce6:	f200 80f3 	bhi.w	8008ed0 <HAL_RCCEx_PeriphCLKConfig+0x314>
 8008cea:	2b00      	cmp	r3, #0
 8008cec:	f000 80f3 	beq.w	8008ed6 <HAL_RCCEx_PeriphCLKConfig+0x31a>
 8008cf0:	2b10      	cmp	r3, #16
 8008cf2:	f000 80f9 	beq.w	8008ee8 <HAL_RCCEx_PeriphCLKConfig+0x32c>
 8008cf6:	2601      	movs	r6, #1
 8008cf8:	4634      	mov	r4, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
 8008cfa:	682b      	ldr	r3, [r5, #0]
 8008cfc:	04db      	lsls	r3, r3, #19
 8008cfe:	d50f      	bpl.n	8008d20 <HAL_RCCEx_PeriphCLKConfig+0x164>
    switch(PeriphClkInit->Spi123ClockSelection)
 8008d00:	6e2b      	ldr	r3, [r5, #96]	; 0x60
 8008d02:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8008d06:	f000 8119 	beq.w	8008f3c <HAL_RCCEx_PeriphCLKConfig+0x380>
 8008d0a:	f200 80fb 	bhi.w	8008f04 <HAL_RCCEx_PeriphCLKConfig+0x348>
 8008d0e:	2b00      	cmp	r3, #0
 8008d10:	f000 8108 	beq.w	8008f24 <HAL_RCCEx_PeriphCLKConfig+0x368>
 8008d14:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8008d18:	f000 810a 	beq.w	8008f30 <HAL_RCCEx_PeriphCLKConfig+0x374>
 8008d1c:	2601      	movs	r6, #1
 8008d1e:	4634      	mov	r4, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
 8008d20:	682b      	ldr	r3, [r5, #0]
 8008d22:	049f      	lsls	r7, r3, #18
 8008d24:	d50f      	bpl.n	8008d46 <HAL_RCCEx_PeriphCLKConfig+0x18a>
    switch(PeriphClkInit->Spi45ClockSelection)
 8008d26:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8008d28:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8008d2c:	f000 8126 	beq.w	8008f7c <HAL_RCCEx_PeriphCLKConfig+0x3c0>
 8008d30:	f200 810c 	bhi.w	8008f4c <HAL_RCCEx_PeriphCLKConfig+0x390>
 8008d34:	2b00      	cmp	r3, #0
 8008d36:	f000 8112 	beq.w	8008f5e <HAL_RCCEx_PeriphCLKConfig+0x3a2>
 8008d3a:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8008d3e:	f000 8117 	beq.w	8008f70 <HAL_RCCEx_PeriphCLKConfig+0x3b4>
 8008d42:	2601      	movs	r6, #1
 8008d44:	4634      	mov	r4, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
 8008d46:	682b      	ldr	r3, [r5, #0]
 8008d48:	0458      	lsls	r0, r3, #17
 8008d4a:	d510      	bpl.n	8008d6e <HAL_RCCEx_PeriphCLKConfig+0x1b2>
    switch(PeriphClkInit->Spi6ClockSelection)
 8008d4c:	f8d5 30b0 	ldr.w	r3, [r5, #176]	; 0xb0
 8008d50:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8008d54:	f000 8133 	beq.w	8008fbe <HAL_RCCEx_PeriphCLKConfig+0x402>
 8008d58:	f200 8118 	bhi.w	8008f8c <HAL_RCCEx_PeriphCLKConfig+0x3d0>
 8008d5c:	2b00      	cmp	r3, #0
 8008d5e:	f000 811e 	beq.w	8008f9e <HAL_RCCEx_PeriphCLKConfig+0x3e2>
 8008d62:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8008d66:	f000 8124 	beq.w	8008fb2 <HAL_RCCEx_PeriphCLKConfig+0x3f6>
 8008d6a:	2601      	movs	r6, #1
 8008d6c:	4634      	mov	r4, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DSI) == RCC_PERIPHCLK_DSI)
 8008d6e:	682b      	ldr	r3, [r5, #0]
 8008d70:	0159      	lsls	r1, r3, #5
 8008d72:	d514      	bpl.n	8008d9e <HAL_RCCEx_PeriphCLKConfig+0x1e2>
    switch(PeriphClkInit->DsiClockSelection)
 8008d74:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
 8008d76:	b143      	cbz	r3, 8008d8a <HAL_RCCEx_PeriphCLKConfig+0x1ce>
 8008d78:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8008d7c:	f040 8127 	bne.w	8008fce <HAL_RCCEx_PeriphCLKConfig+0x412>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_Q_UPDATE);
 8008d80:	2101      	movs	r1, #1
 8008d82:	1d28      	adds	r0, r5, #4
 8008d84:	f7ff fe2a 	bl	80089dc <RCCEx_PLL2_Config>
 8008d88:	4604      	mov	r4, r0
    if(ret == HAL_OK)
 8008d8a:	2c00      	cmp	r4, #0
 8008d8c:	f040 8122 	bne.w	8008fd4 <HAL_RCCEx_PeriphCLKConfig+0x418>
      __HAL_RCC_DSI_CONFIG(PeriphClkInit->DsiClockSelection);
 8008d90:	4a44      	ldr	r2, [pc, #272]	; (8008ea4 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8008d92:	6ce9      	ldr	r1, [r5, #76]	; 0x4c
 8008d94:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8008d96:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8008d9a:	430b      	orrs	r3, r1
 8008d9c:	64d3      	str	r3, [r2, #76]	; 0x4c
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
 8008d9e:	682b      	ldr	r3, [r5, #0]
 8008da0:	041a      	lsls	r2, r3, #16
 8008da2:	d50d      	bpl.n	8008dc0 <HAL_RCCEx_PeriphCLKConfig+0x204>
    switch(PeriphClkInit->FdcanClockSelection)
 8008da4:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8008da6:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8008daa:	f000 8115 	beq.w	8008fd8 <HAL_RCCEx_PeriphCLKConfig+0x41c>
 8008dae:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8008db2:	f000 811f 	beq.w	8008ff4 <HAL_RCCEx_PeriphCLKConfig+0x438>
 8008db6:	2b00      	cmp	r3, #0
 8008db8:	f000 8113 	beq.w	8008fe2 <HAL_RCCEx_PeriphCLKConfig+0x426>
 8008dbc:	2601      	movs	r6, #1
 8008dbe:	4634      	mov	r4, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
 8008dc0:	682b      	ldr	r3, [r5, #0]
 8008dc2:	01db      	lsls	r3, r3, #7
 8008dc4:	f140 812c 	bpl.w	8009020 <HAL_RCCEx_PeriphCLKConfig+0x464>
    switch(PeriphClkInit->FmcClockSelection)
 8008dc8:	6c6b      	ldr	r3, [r5, #68]	; 0x44
 8008dca:	2b03      	cmp	r3, #3
 8008dcc:	f200 816c 	bhi.w	80090a8 <HAL_RCCEx_PeriphCLKConfig+0x4ec>
 8008dd0:	e8df f013 	tbh	[pc, r3, lsl #1]
 8008dd4:	0118011d 	.word	0x0118011d
 8008dd8:	011d0164 	.word	0x011d0164
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_P_UPDATE);
 8008ddc:	2100      	movs	r1, #0
 8008dde:	f105 0024 	add.w	r0, r5, #36	; 0x24
 8008de2:	f7ff fe73 	bl	8008acc <RCCEx_PLL3_Config>
 8008de6:	e733      	b.n	8008c50 <HAL_RCCEx_PeriphCLKConfig+0x94>
    switch(PeriphClkInit->Sai1ClockSelection)
 8008de8:	2601      	movs	r6, #1
 8008dea:	4634      	mov	r4, r6
 8008dec:	e73b      	b.n	8008c66 <HAL_RCCEx_PeriphCLKConfig+0xaa>
 8008dee:	4626      	mov	r6, r4
 8008df0:	e739      	b.n	8008c66 <HAL_RCCEx_PeriphCLKConfig+0xaa>
    switch(PeriphClkInit->Sai23ClockSelection)
 8008df2:	2bc0      	cmp	r3, #192	; 0xc0
 8008df4:	d003      	beq.n	8008dfe <HAL_RCCEx_PeriphCLKConfig+0x242>
 8008df6:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8008dfa:	f47f af43 	bne.w	8008c84 <HAL_RCCEx_PeriphCLKConfig+0xc8>
    if(ret == HAL_OK)
 8008dfe:	b9cc      	cbnz	r4, 8008e34 <HAL_RCCEx_PeriphCLKConfig+0x278>
      __HAL_RCC_SAI23_CONFIG(PeriphClkInit->Sai23ClockSelection);
 8008e00:	4a28      	ldr	r2, [pc, #160]	; (8008ea4 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8008e02:	6de9      	ldr	r1, [r5, #92]	; 0x5c
 8008e04:	6d13      	ldr	r3, [r2, #80]	; 0x50
 8008e06:	f423 73e0 	bic.w	r3, r3, #448	; 0x1c0
 8008e0a:	430b      	orrs	r3, r1
 8008e0c:	6513      	str	r3, [r2, #80]	; 0x50
 8008e0e:	e73b      	b.n	8008c88 <HAL_RCCEx_PeriphCLKConfig+0xcc>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8008e10:	4a24      	ldr	r2, [pc, #144]	; (8008ea4 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8008e12:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8008e14:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8008e18:	62d3      	str	r3, [r2, #44]	; 0x2c
      break;
 8008e1a:	e7f0      	b.n	8008dfe <HAL_RCCEx_PeriphCLKConfig+0x242>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_P_UPDATE);
 8008e1c:	2100      	movs	r1, #0
 8008e1e:	1d28      	adds	r0, r5, #4
 8008e20:	f7ff fddc 	bl	80089dc <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_P_UPDATE);
 8008e24:	4604      	mov	r4, r0
      break;
 8008e26:	e7ea      	b.n	8008dfe <HAL_RCCEx_PeriphCLKConfig+0x242>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_P_UPDATE);
 8008e28:	2100      	movs	r1, #0
 8008e2a:	f105 0024 	add.w	r0, r5, #36	; 0x24
 8008e2e:	f7ff fe4d 	bl	8008acc <RCCEx_PLL3_Config>
 8008e32:	e7f7      	b.n	8008e24 <HAL_RCCEx_PeriphCLKConfig+0x268>
 8008e34:	4626      	mov	r6, r4
 8008e36:	e727      	b.n	8008c88 <HAL_RCCEx_PeriphCLKConfig+0xcc>
    switch(PeriphClkInit->Sai4AClockSelection)
 8008e38:	f5b3 0fc0 	cmp.w	r3, #6291456	; 0x600000
 8008e3c:	d003      	beq.n	8008e46 <HAL_RCCEx_PeriphCLKConfig+0x28a>
 8008e3e:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 8008e42:	f47f af33 	bne.w	8008cac <HAL_RCCEx_PeriphCLKConfig+0xf0>
    if(ret == HAL_OK)
 8008e46:	b9d4      	cbnz	r4, 8008e7e <HAL_RCCEx_PeriphCLKConfig+0x2c2>
      __HAL_RCC_SAI4A_CONFIG(PeriphClkInit->Sai4AClockSelection);
 8008e48:	4a16      	ldr	r2, [pc, #88]	; (8008ea4 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8008e4a:	f8d5 10a8 	ldr.w	r1, [r5, #168]	; 0xa8
 8008e4e:	6d93      	ldr	r3, [r2, #88]	; 0x58
 8008e50:	f423 0360 	bic.w	r3, r3, #14680064	; 0xe00000
 8008e54:	430b      	orrs	r3, r1
 8008e56:	6593      	str	r3, [r2, #88]	; 0x58
 8008e58:	e72a      	b.n	8008cb0 <HAL_RCCEx_PeriphCLKConfig+0xf4>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8008e5a:	4a12      	ldr	r2, [pc, #72]	; (8008ea4 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8008e5c:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8008e5e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8008e62:	62d3      	str	r3, [r2, #44]	; 0x2c
      break;
 8008e64:	e7ef      	b.n	8008e46 <HAL_RCCEx_PeriphCLKConfig+0x28a>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_P_UPDATE);
 8008e66:	2100      	movs	r1, #0
 8008e68:	1d28      	adds	r0, r5, #4
 8008e6a:	f7ff fdb7 	bl	80089dc <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_P_UPDATE);
 8008e6e:	4604      	mov	r4, r0
      break;
 8008e70:	e7e9      	b.n	8008e46 <HAL_RCCEx_PeriphCLKConfig+0x28a>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_P_UPDATE);
 8008e72:	2100      	movs	r1, #0
 8008e74:	f105 0024 	add.w	r0, r5, #36	; 0x24
 8008e78:	f7ff fe28 	bl	8008acc <RCCEx_PLL3_Config>
 8008e7c:	e7f7      	b.n	8008e6e <HAL_RCCEx_PeriphCLKConfig+0x2b2>
 8008e7e:	4626      	mov	r6, r4
 8008e80:	e716      	b.n	8008cb0 <HAL_RCCEx_PeriphCLKConfig+0xf4>
    switch(PeriphClkInit->Sai4BClockSelection)
 8008e82:	f1b3 7f40 	cmp.w	r3, #50331648	; 0x3000000
 8008e86:	d003      	beq.n	8008e90 <HAL_RCCEx_PeriphCLKConfig+0x2d4>
 8008e88:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 8008e8c:	f47f af22 	bne.w	8008cd4 <HAL_RCCEx_PeriphCLKConfig+0x118>
    if(ret == HAL_OK)
 8008e90:	b9e4      	cbnz	r4, 8008ecc <HAL_RCCEx_PeriphCLKConfig+0x310>
      __HAL_RCC_SAI4B_CONFIG(PeriphClkInit->Sai4BClockSelection);
 8008e92:	4a04      	ldr	r2, [pc, #16]	; (8008ea4 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8008e94:	f8d5 10ac 	ldr.w	r1, [r5, #172]	; 0xac
 8008e98:	6d93      	ldr	r3, [r2, #88]	; 0x58
 8008e9a:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 8008e9e:	430b      	orrs	r3, r1
 8008ea0:	6593      	str	r3, [r2, #88]	; 0x58
 8008ea2:	e719      	b.n	8008cd8 <HAL_RCCEx_PeriphCLKConfig+0x11c>
 8008ea4:	58024400 	.word	0x58024400
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8008ea8:	4a9d      	ldr	r2, [pc, #628]	; (8009120 <HAL_RCCEx_PeriphCLKConfig+0x564>)
 8008eaa:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8008eac:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8008eb0:	62d3      	str	r3, [r2, #44]	; 0x2c
      break;
 8008eb2:	e7ed      	b.n	8008e90 <HAL_RCCEx_PeriphCLKConfig+0x2d4>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_P_UPDATE);
 8008eb4:	2100      	movs	r1, #0
 8008eb6:	1d28      	adds	r0, r5, #4
 8008eb8:	f7ff fd90 	bl	80089dc <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 8008ebc:	4604      	mov	r4, r0
      break;
 8008ebe:	e7e7      	b.n	8008e90 <HAL_RCCEx_PeriphCLKConfig+0x2d4>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 8008ec0:	2100      	movs	r1, #0
 8008ec2:	f105 0024 	add.w	r0, r5, #36	; 0x24
 8008ec6:	f7ff fe01 	bl	8008acc <RCCEx_PLL3_Config>
 8008eca:	e7f7      	b.n	8008ebc <HAL_RCCEx_PeriphCLKConfig+0x300>
 8008ecc:	4626      	mov	r6, r4
 8008ece:	e703      	b.n	8008cd8 <HAL_RCCEx_PeriphCLKConfig+0x11c>
    switch(PeriphClkInit->QspiClockSelection)
 8008ed0:	2b30      	cmp	r3, #48	; 0x30
 8008ed2:	f47f af10 	bne.w	8008cf6 <HAL_RCCEx_PeriphCLKConfig+0x13a>
    if(ret == HAL_OK)
 8008ed6:	b99c      	cbnz	r4, 8008f00 <HAL_RCCEx_PeriphCLKConfig+0x344>
      __HAL_RCC_QSPI_CONFIG(PeriphClkInit->QspiClockSelection);
 8008ed8:	4a91      	ldr	r2, [pc, #580]	; (8009120 <HAL_RCCEx_PeriphCLKConfig+0x564>)
 8008eda:	6ca9      	ldr	r1, [r5, #72]	; 0x48
 8008edc:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8008ede:	f023 0330 	bic.w	r3, r3, #48	; 0x30
 8008ee2:	430b      	orrs	r3, r1
 8008ee4:	64d3      	str	r3, [r2, #76]	; 0x4c
 8008ee6:	e708      	b.n	8008cfa <HAL_RCCEx_PeriphCLKConfig+0x13e>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8008ee8:	4a8d      	ldr	r2, [pc, #564]	; (8009120 <HAL_RCCEx_PeriphCLKConfig+0x564>)
 8008eea:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8008eec:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8008ef0:	62d3      	str	r3, [r2, #44]	; 0x2c
      break;
 8008ef2:	e7f0      	b.n	8008ed6 <HAL_RCCEx_PeriphCLKConfig+0x31a>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_R_UPDATE);
 8008ef4:	2102      	movs	r1, #2
 8008ef6:	1d28      	adds	r0, r5, #4
 8008ef8:	f7ff fd70 	bl	80089dc <RCCEx_PLL2_Config>
 8008efc:	4604      	mov	r4, r0
      break;
 8008efe:	e7ea      	b.n	8008ed6 <HAL_RCCEx_PeriphCLKConfig+0x31a>
 8008f00:	4626      	mov	r6, r4
 8008f02:	e6fa      	b.n	8008cfa <HAL_RCCEx_PeriphCLKConfig+0x13e>
    switch(PeriphClkInit->Spi123ClockSelection)
 8008f04:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 8008f08:	d003      	beq.n	8008f12 <HAL_RCCEx_PeriphCLKConfig+0x356>
 8008f0a:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8008f0e:	f47f af05 	bne.w	8008d1c <HAL_RCCEx_PeriphCLKConfig+0x160>
    if(ret == HAL_OK)
 8008f12:	b9cc      	cbnz	r4, 8008f48 <HAL_RCCEx_PeriphCLKConfig+0x38c>
      __HAL_RCC_SPI123_CONFIG(PeriphClkInit->Spi123ClockSelection);
 8008f14:	4a82      	ldr	r2, [pc, #520]	; (8009120 <HAL_RCCEx_PeriphCLKConfig+0x564>)
 8008f16:	6e29      	ldr	r1, [r5, #96]	; 0x60
 8008f18:	6d13      	ldr	r3, [r2, #80]	; 0x50
 8008f1a:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8008f1e:	430b      	orrs	r3, r1
 8008f20:	6513      	str	r3, [r2, #80]	; 0x50
 8008f22:	e6fd      	b.n	8008d20 <HAL_RCCEx_PeriphCLKConfig+0x164>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8008f24:	4a7e      	ldr	r2, [pc, #504]	; (8009120 <HAL_RCCEx_PeriphCLKConfig+0x564>)
 8008f26:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8008f28:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8008f2c:	62d3      	str	r3, [r2, #44]	; 0x2c
      break;
 8008f2e:	e7f0      	b.n	8008f12 <HAL_RCCEx_PeriphCLKConfig+0x356>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_P_UPDATE);
 8008f30:	2100      	movs	r1, #0
 8008f32:	1d28      	adds	r0, r5, #4
 8008f34:	f7ff fd52 	bl	80089dc <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_P_UPDATE);
 8008f38:	4604      	mov	r4, r0
      break;
 8008f3a:	e7ea      	b.n	8008f12 <HAL_RCCEx_PeriphCLKConfig+0x356>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_P_UPDATE);
 8008f3c:	2100      	movs	r1, #0
 8008f3e:	f105 0024 	add.w	r0, r5, #36	; 0x24
 8008f42:	f7ff fdc3 	bl	8008acc <RCCEx_PLL3_Config>
 8008f46:	e7f7      	b.n	8008f38 <HAL_RCCEx_PeriphCLKConfig+0x37c>
 8008f48:	4626      	mov	r6, r4
 8008f4a:	e6e9      	b.n	8008d20 <HAL_RCCEx_PeriphCLKConfig+0x164>
    switch(PeriphClkInit->Spi45ClockSelection)
 8008f4c:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
 8008f50:	f5b2 2f80 	cmp.w	r2, #262144	; 0x40000
 8008f54:	d003      	beq.n	8008f5e <HAL_RCCEx_PeriphCLKConfig+0x3a2>
 8008f56:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 8008f5a:	f47f aef2 	bne.w	8008d42 <HAL_RCCEx_PeriphCLKConfig+0x186>
    if(ret == HAL_OK)
 8008f5e:	b99c      	cbnz	r4, 8008f88 <HAL_RCCEx_PeriphCLKConfig+0x3cc>
      __HAL_RCC_SPI45_CONFIG(PeriphClkInit->Spi45ClockSelection);
 8008f60:	4a6f      	ldr	r2, [pc, #444]	; (8009120 <HAL_RCCEx_PeriphCLKConfig+0x564>)
 8008f62:	6e69      	ldr	r1, [r5, #100]	; 0x64
 8008f64:	6d13      	ldr	r3, [r2, #80]	; 0x50
 8008f66:	f423 23e0 	bic.w	r3, r3, #458752	; 0x70000
 8008f6a:	430b      	orrs	r3, r1
 8008f6c:	6513      	str	r3, [r2, #80]	; 0x50
 8008f6e:	e6ea      	b.n	8008d46 <HAL_RCCEx_PeriphCLKConfig+0x18a>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_Q_UPDATE);
 8008f70:	2101      	movs	r1, #1
 8008f72:	1d28      	adds	r0, r5, #4
 8008f74:	f7ff fd32 	bl	80089dc <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
 8008f78:	4604      	mov	r4, r0
      break;
 8008f7a:	e7f0      	b.n	8008f5e <HAL_RCCEx_PeriphCLKConfig+0x3a2>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
 8008f7c:	2101      	movs	r1, #1
 8008f7e:	f105 0024 	add.w	r0, r5, #36	; 0x24
 8008f82:	f7ff fda3 	bl	8008acc <RCCEx_PLL3_Config>
 8008f86:	e7f7      	b.n	8008f78 <HAL_RCCEx_PeriphCLKConfig+0x3bc>
 8008f88:	4626      	mov	r6, r4
 8008f8a:	e6dc      	b.n	8008d46 <HAL_RCCEx_PeriphCLKConfig+0x18a>
    switch(PeriphClkInit->Spi6ClockSelection)
 8008f8c:	f023 5280 	bic.w	r2, r3, #268435456	; 0x10000000
 8008f90:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 8008f94:	d003      	beq.n	8008f9e <HAL_RCCEx_PeriphCLKConfig+0x3e2>
 8008f96:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 8008f9a:	f47f aee6 	bne.w	8008d6a <HAL_RCCEx_PeriphCLKConfig+0x1ae>
    if(ret == HAL_OK)
 8008f9e:	b9a4      	cbnz	r4, 8008fca <HAL_RCCEx_PeriphCLKConfig+0x40e>
      __HAL_RCC_SPI6_CONFIG(PeriphClkInit->Spi6ClockSelection);
 8008fa0:	4a5f      	ldr	r2, [pc, #380]	; (8009120 <HAL_RCCEx_PeriphCLKConfig+0x564>)
 8008fa2:	f8d5 10b0 	ldr.w	r1, [r5, #176]	; 0xb0
 8008fa6:	6d93      	ldr	r3, [r2, #88]	; 0x58
 8008fa8:	f023 43e0 	bic.w	r3, r3, #1879048192	; 0x70000000
 8008fac:	430b      	orrs	r3, r1
 8008fae:	6593      	str	r3, [r2, #88]	; 0x58
 8008fb0:	e6dd      	b.n	8008d6e <HAL_RCCEx_PeriphCLKConfig+0x1b2>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_Q_UPDATE);
 8008fb2:	2101      	movs	r1, #1
 8008fb4:	1d28      	adds	r0, r5, #4
 8008fb6:	f7ff fd11 	bl	80089dc <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
 8008fba:	4604      	mov	r4, r0
      break;
 8008fbc:	e7ef      	b.n	8008f9e <HAL_RCCEx_PeriphCLKConfig+0x3e2>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
 8008fbe:	2101      	movs	r1, #1
 8008fc0:	f105 0024 	add.w	r0, r5, #36	; 0x24
 8008fc4:	f7ff fd82 	bl	8008acc <RCCEx_PLL3_Config>
 8008fc8:	e7f7      	b.n	8008fba <HAL_RCCEx_PeriphCLKConfig+0x3fe>
 8008fca:	4626      	mov	r6, r4
 8008fcc:	e6cf      	b.n	8008d6e <HAL_RCCEx_PeriphCLKConfig+0x1b2>
    switch(PeriphClkInit->DsiClockSelection)
 8008fce:	2601      	movs	r6, #1
 8008fd0:	4634      	mov	r4, r6
 8008fd2:	e6e4      	b.n	8008d9e <HAL_RCCEx_PeriphCLKConfig+0x1e2>
 8008fd4:	4626      	mov	r6, r4
 8008fd6:	e6e2      	b.n	8008d9e <HAL_RCCEx_PeriphCLKConfig+0x1e2>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8008fd8:	4a51      	ldr	r2, [pc, #324]	; (8009120 <HAL_RCCEx_PeriphCLKConfig+0x564>)
 8008fda:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8008fdc:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8008fe0:	62d3      	str	r3, [r2, #44]	; 0x2c
    if(ret == HAL_OK)
 8008fe2:	b96c      	cbnz	r4, 8009000 <HAL_RCCEx_PeriphCLKConfig+0x444>
      __HAL_RCC_FDCAN_CONFIG(PeriphClkInit->FdcanClockSelection);
 8008fe4:	4a4e      	ldr	r2, [pc, #312]	; (8009120 <HAL_RCCEx_PeriphCLKConfig+0x564>)
 8008fe6:	6f29      	ldr	r1, [r5, #112]	; 0x70
 8008fe8:	6d13      	ldr	r3, [r2, #80]	; 0x50
 8008fea:	f023 5340 	bic.w	r3, r3, #805306368	; 0x30000000
 8008fee:	430b      	orrs	r3, r1
 8008ff0:	6513      	str	r3, [r2, #80]	; 0x50
 8008ff2:	e6e5      	b.n	8008dc0 <HAL_RCCEx_PeriphCLKConfig+0x204>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_Q_UPDATE);
 8008ff4:	2101      	movs	r1, #1
 8008ff6:	1d28      	adds	r0, r5, #4
 8008ff8:	f7ff fcf0 	bl	80089dc <RCCEx_PLL2_Config>
 8008ffc:	4604      	mov	r4, r0
      break;
 8008ffe:	e7f0      	b.n	8008fe2 <HAL_RCCEx_PeriphCLKConfig+0x426>
 8009000:	4626      	mov	r6, r4
 8009002:	e6dd      	b.n	8008dc0 <HAL_RCCEx_PeriphCLKConfig+0x204>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8009004:	4a46      	ldr	r2, [pc, #280]	; (8009120 <HAL_RCCEx_PeriphCLKConfig+0x564>)
 8009006:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8009008:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800900c:	62d3      	str	r3, [r2, #44]	; 0x2c
    if(ret == HAL_OK)
 800900e:	2c00      	cmp	r4, #0
 8009010:	d14d      	bne.n	80090ae <HAL_RCCEx_PeriphCLKConfig+0x4f2>
      __HAL_RCC_FMC_CONFIG(PeriphClkInit->FmcClockSelection);
 8009012:	4a43      	ldr	r2, [pc, #268]	; (8009120 <HAL_RCCEx_PeriphCLKConfig+0x564>)
 8009014:	6c69      	ldr	r1, [r5, #68]	; 0x44
 8009016:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8009018:	f023 0303 	bic.w	r3, r3, #3
 800901c:	430b      	orrs	r3, r1
 800901e:	64d3      	str	r3, [r2, #76]	; 0x4c
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
 8009020:	682b      	ldr	r3, [r5, #0]
 8009022:	025f      	lsls	r7, r3, #9
 8009024:	d54d      	bpl.n	80090c2 <HAL_RCCEx_PeriphCLKConfig+0x506>
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
 8009026:	4f3f      	ldr	r7, [pc, #252]	; (8009124 <HAL_RCCEx_PeriphCLKConfig+0x568>)
 8009028:	683b      	ldr	r3, [r7, #0]
 800902a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800902e:	603b      	str	r3, [r7, #0]
    tickstart = HAL_GetTick();
 8009030:	f7fc fed2 	bl	8005dd8 <HAL_GetTick>
 8009034:	4680      	mov	r8, r0
    while((PWR->CR1 & PWR_CR1_DBP) == 0U)
 8009036:	683b      	ldr	r3, [r7, #0]
 8009038:	05d8      	lsls	r0, r3, #23
 800903a:	d53a      	bpl.n	80090b2 <HAL_RCCEx_PeriphCLKConfig+0x4f6>
    if(ret == HAL_OK)
 800903c:	2c00      	cmp	r4, #0
 800903e:	d16d      	bne.n	800911c <HAL_RCCEx_PeriphCLKConfig+0x560>
      if((RCC->BDCR & RCC_BDCR_RTCSEL) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL))
 8009040:	4b37      	ldr	r3, [pc, #220]	; (8009120 <HAL_RCCEx_PeriphCLKConfig+0x564>)
 8009042:	f8d5 00b4 	ldr.w	r0, [r5, #180]	; 0xb4
 8009046:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8009048:	4042      	eors	r2, r0
 800904a:	f412 7f40 	tst.w	r2, #768	; 0x300
 800904e:	d00b      	beq.n	8009068 <HAL_RCCEx_PeriphCLKConfig+0x4ac>
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8009050:	6f1a      	ldr	r2, [r3, #112]	; 0x70
        __HAL_RCC_BACKUPRESET_FORCE();
 8009052:	6f19      	ldr	r1, [r3, #112]	; 0x70
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8009054:	f422 7240 	bic.w	r2, r2, #768	; 0x300
        __HAL_RCC_BACKUPRESET_FORCE();
 8009058:	f441 3180 	orr.w	r1, r1, #65536	; 0x10000
 800905c:	6719      	str	r1, [r3, #112]	; 0x70
        __HAL_RCC_BACKUPRESET_RELEASE();
 800905e:	6f19      	ldr	r1, [r3, #112]	; 0x70
 8009060:	f421 3180 	bic.w	r1, r1, #65536	; 0x10000
 8009064:	6719      	str	r1, [r3, #112]	; 0x70
        RCC->BDCR = tmpreg;
 8009066:	671a      	str	r2, [r3, #112]	; 0x70
      if(PeriphClkInit->RTCClockSelection == RCC_RTCCLKSOURCE_LSE)
 8009068:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 800906c:	d041      	beq.n	80090f2 <HAL_RCCEx_PeriphCLKConfig+0x536>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800906e:	f8d5 30b4 	ldr.w	r3, [r5, #180]	; 0xb4
 8009072:	492b      	ldr	r1, [pc, #172]	; (8009120 <HAL_RCCEx_PeriphCLKConfig+0x564>)
 8009074:	f403 7240 	and.w	r2, r3, #768	; 0x300
 8009078:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800907c:	d14a      	bne.n	8009114 <HAL_RCCEx_PeriphCLKConfig+0x558>
 800907e:	6908      	ldr	r0, [r1, #16]
 8009080:	4a29      	ldr	r2, [pc, #164]	; (8009128 <HAL_RCCEx_PeriphCLKConfig+0x56c>)
 8009082:	f420 507c 	bic.w	r0, r0, #16128	; 0x3f00
 8009086:	ea02 1213 	and.w	r2, r2, r3, lsr #4
 800908a:	4302      	orrs	r2, r0
 800908c:	610a      	str	r2, [r1, #16]
 800908e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8009092:	4a23      	ldr	r2, [pc, #140]	; (8009120 <HAL_RCCEx_PeriphCLKConfig+0x564>)
 8009094:	6f11      	ldr	r1, [r2, #112]	; 0x70
 8009096:	430b      	orrs	r3, r1
 8009098:	6713      	str	r3, [r2, #112]	; 0x70
 800909a:	e012      	b.n	80090c2 <HAL_RCCEx_PeriphCLKConfig+0x506>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_R_UPDATE);
 800909c:	2102      	movs	r1, #2
 800909e:	1d28      	adds	r0, r5, #4
 80090a0:	f7ff fc9c 	bl	80089dc <RCCEx_PLL2_Config>
 80090a4:	4604      	mov	r4, r0
      break;
 80090a6:	e7b2      	b.n	800900e <HAL_RCCEx_PeriphCLKConfig+0x452>
    switch(PeriphClkInit->FmcClockSelection)
 80090a8:	2601      	movs	r6, #1
 80090aa:	4634      	mov	r4, r6
 80090ac:	e7b8      	b.n	8009020 <HAL_RCCEx_PeriphCLKConfig+0x464>
 80090ae:	4626      	mov	r6, r4
 80090b0:	e7b6      	b.n	8009020 <HAL_RCCEx_PeriphCLKConfig+0x464>
      if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80090b2:	f7fc fe91 	bl	8005dd8 <HAL_GetTick>
 80090b6:	eba0 0008 	sub.w	r0, r0, r8
 80090ba:	2864      	cmp	r0, #100	; 0x64
 80090bc:	d9bb      	bls.n	8009036 <HAL_RCCEx_PeriphCLKConfig+0x47a>
        ret = HAL_TIMEOUT;
 80090be:	2603      	movs	r6, #3
 80090c0:	4634      	mov	r4, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
 80090c2:	682b      	ldr	r3, [r5, #0]
 80090c4:	07da      	lsls	r2, r3, #31
 80090c6:	d509      	bpl.n	80090dc <HAL_RCCEx_PeriphCLKConfig+0x520>
    switch(PeriphClkInit->Usart16ClockSelection)
 80090c8:	6feb      	ldr	r3, [r5, #124]	; 0x7c
 80090ca:	2b10      	cmp	r3, #16
 80090cc:	d043      	beq.n	8009156 <HAL_RCCEx_PeriphCLKConfig+0x59a>
 80090ce:	d82d      	bhi.n	800912c <HAL_RCCEx_PeriphCLKConfig+0x570>
 80090d0:	2b00      	cmp	r3, #0
 80090d2:	d031      	beq.n	8009138 <HAL_RCCEx_PeriphCLKConfig+0x57c>
 80090d4:	2b08      	cmp	r3, #8
 80090d6:	d038      	beq.n	800914a <HAL_RCCEx_PeriphCLKConfig+0x58e>
 80090d8:	2601      	movs	r6, #1
 80090da:	4634      	mov	r4, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
 80090dc:	682b      	ldr	r3, [r5, #0]
 80090de:	079b      	lsls	r3, r3, #30
 80090e0:	d54e      	bpl.n	8009180 <HAL_RCCEx_PeriphCLKConfig+0x5c4>
    switch(PeriphClkInit->Usart234578ClockSelection)
 80090e2:	6fab      	ldr	r3, [r5, #120]	; 0x78
 80090e4:	2b05      	cmp	r3, #5
 80090e6:	d861      	bhi.n	80091ac <HAL_RCCEx_PeriphCLKConfig+0x5f0>
 80090e8:	e8df f003 	tbb	[pc, r3]
 80090ec:	425a3d42 	.word	0x425a3d42
 80090f0:	4242      	.short	0x4242
        tickstart = HAL_GetTick();
 80090f2:	f7fc fe71 	bl	8005dd8 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 80090f6:	f8df 8028 	ldr.w	r8, [pc, #40]	; 8009120 <HAL_RCCEx_PeriphCLKConfig+0x564>
        tickstart = HAL_GetTick();
 80090fa:	4607      	mov	r7, r0
          if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80090fc:	f241 3988 	movw	r9, #5000	; 0x1388
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8009100:	f8d8 3070 	ldr.w	r3, [r8, #112]	; 0x70
 8009104:	0799      	lsls	r1, r3, #30
 8009106:	d4b2      	bmi.n	800906e <HAL_RCCEx_PeriphCLKConfig+0x4b2>
          if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8009108:	f7fc fe66 	bl	8005dd8 <HAL_GetTick>
 800910c:	1bc0      	subs	r0, r0, r7
 800910e:	4548      	cmp	r0, r9
 8009110:	d9f6      	bls.n	8009100 <HAL_RCCEx_PeriphCLKConfig+0x544>
 8009112:	e7d4      	b.n	80090be <HAL_RCCEx_PeriphCLKConfig+0x502>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8009114:	690a      	ldr	r2, [r1, #16]
 8009116:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
 800911a:	e7b7      	b.n	800908c <HAL_RCCEx_PeriphCLKConfig+0x4d0>
 800911c:	4626      	mov	r6, r4
 800911e:	e7d0      	b.n	80090c2 <HAL_RCCEx_PeriphCLKConfig+0x506>
 8009120:	58024400 	.word	0x58024400
 8009124:	58024800 	.word	0x58024800
 8009128:	00ffffcf 	.word	0x00ffffcf
    switch(PeriphClkInit->Usart16ClockSelection)
 800912c:	f023 0208 	bic.w	r2, r3, #8
 8009130:	2a20      	cmp	r2, #32
 8009132:	d001      	beq.n	8009138 <HAL_RCCEx_PeriphCLKConfig+0x57c>
 8009134:	2b18      	cmp	r3, #24
 8009136:	d1cf      	bne.n	80090d8 <HAL_RCCEx_PeriphCLKConfig+0x51c>
    if(ret == HAL_OK)
 8009138:	b99c      	cbnz	r4, 8009162 <HAL_RCCEx_PeriphCLKConfig+0x5a6>
      __HAL_RCC_USART16_CONFIG(PeriphClkInit->Usart16ClockSelection);
 800913a:	4a1f      	ldr	r2, [pc, #124]	; (80091b8 <HAL_RCCEx_PeriphCLKConfig+0x5fc>)
 800913c:	6fe9      	ldr	r1, [r5, #124]	; 0x7c
 800913e:	6d53      	ldr	r3, [r2, #84]	; 0x54
 8009140:	f023 0338 	bic.w	r3, r3, #56	; 0x38
 8009144:	430b      	orrs	r3, r1
 8009146:	6553      	str	r3, [r2, #84]	; 0x54
 8009148:	e7c8      	b.n	80090dc <HAL_RCCEx_PeriphCLKConfig+0x520>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_Q_UPDATE);
 800914a:	2101      	movs	r1, #1
 800914c:	1d28      	adds	r0, r5, #4
 800914e:	f7ff fc45 	bl	80089dc <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
 8009152:	4604      	mov	r4, r0
      break;
 8009154:	e7f0      	b.n	8009138 <HAL_RCCEx_PeriphCLKConfig+0x57c>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
 8009156:	2101      	movs	r1, #1
 8009158:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800915c:	f7ff fcb6 	bl	8008acc <RCCEx_PLL3_Config>
 8009160:	e7f7      	b.n	8009152 <HAL_RCCEx_PeriphCLKConfig+0x596>
 8009162:	4626      	mov	r6, r4
 8009164:	e7ba      	b.n	80090dc <HAL_RCCEx_PeriphCLKConfig+0x520>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_Q_UPDATE);
 8009166:	2101      	movs	r1, #1
 8009168:	1d28      	adds	r0, r5, #4
 800916a:	f7ff fc37 	bl	80089dc <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
 800916e:	4604      	mov	r4, r0
    if(ret == HAL_OK)
 8009170:	b9fc      	cbnz	r4, 80091b2 <HAL_RCCEx_PeriphCLKConfig+0x5f6>
      __HAL_RCC_USART234578_CONFIG(PeriphClkInit->Usart234578ClockSelection);
 8009172:	4a11      	ldr	r2, [pc, #68]	; (80091b8 <HAL_RCCEx_PeriphCLKConfig+0x5fc>)
 8009174:	6fa9      	ldr	r1, [r5, #120]	; 0x78
 8009176:	6d53      	ldr	r3, [r2, #84]	; 0x54
 8009178:	f023 0307 	bic.w	r3, r3, #7
 800917c:	430b      	orrs	r3, r1
 800917e:	6553      	str	r3, [r2, #84]	; 0x54
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
 8009180:	682b      	ldr	r3, [r5, #0]
 8009182:	075f      	lsls	r7, r3, #29
 8009184:	d52a      	bpl.n	80091dc <HAL_RCCEx_PeriphCLKConfig+0x620>
    switch(PeriphClkInit->Lpuart1ClockSelection)
 8009186:	f8d5 3094 	ldr.w	r3, [r5, #148]	; 0x94
 800918a:	2b05      	cmp	r3, #5
 800918c:	f200 813d 	bhi.w	800940a <HAL_RCCEx_PeriphCLKConfig+0x84e>
 8009190:	e8df f013 	tbh	[pc, r3, lsl #1]
 8009194:	00140019 	.word	0x00140019
 8009198:	00190135 	.word	0x00190135
 800919c:	00190019 	.word	0x00190019
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
 80091a0:	2101      	movs	r1, #1
 80091a2:	f105 0024 	add.w	r0, r5, #36	; 0x24
 80091a6:	f7ff fc91 	bl	8008acc <RCCEx_PLL3_Config>
 80091aa:	e7e0      	b.n	800916e <HAL_RCCEx_PeriphCLKConfig+0x5b2>
    switch(PeriphClkInit->Usart234578ClockSelection)
 80091ac:	2601      	movs	r6, #1
 80091ae:	4634      	mov	r4, r6
 80091b0:	e7e6      	b.n	8009180 <HAL_RCCEx_PeriphCLKConfig+0x5c4>
 80091b2:	4626      	mov	r6, r4
 80091b4:	e7e4      	b.n	8009180 <HAL_RCCEx_PeriphCLKConfig+0x5c4>
 80091b6:	bf00      	nop
 80091b8:	58024400 	.word	0x58024400
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_Q_UPDATE);
 80091bc:	2101      	movs	r1, #1
 80091be:	1d28      	adds	r0, r5, #4
 80091c0:	f7ff fc0c 	bl	80089dc <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
 80091c4:	4604      	mov	r4, r0
    if(ret == HAL_OK)
 80091c6:	2c00      	cmp	r4, #0
 80091c8:	f040 8122 	bne.w	8009410 <HAL_RCCEx_PeriphCLKConfig+0x854>
      __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
 80091cc:	4aab      	ldr	r2, [pc, #684]	; (800947c <HAL_RCCEx_PeriphCLKConfig+0x8c0>)
 80091ce:	f8d5 1094 	ldr.w	r1, [r5, #148]	; 0x94
 80091d2:	6d93      	ldr	r3, [r2, #88]	; 0x58
 80091d4:	f023 0307 	bic.w	r3, r3, #7
 80091d8:	430b      	orrs	r3, r1
 80091da:	6593      	str	r3, [r2, #88]	; 0x58
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
 80091dc:	682b      	ldr	r3, [r5, #0]
 80091de:	0698      	lsls	r0, r3, #26
 80091e0:	d510      	bpl.n	8009204 <HAL_RCCEx_PeriphCLKConfig+0x648>
    switch(PeriphClkInit->Lptim1ClockSelection)
 80091e2:	f8d5 3090 	ldr.w	r3, [r5, #144]	; 0x90
 80091e6:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80091ea:	f000 812c 	beq.w	8009446 <HAL_RCCEx_PeriphCLKConfig+0x88a>
 80091ee:	f200 8111 	bhi.w	8009414 <HAL_RCCEx_PeriphCLKConfig+0x858>
 80091f2:	2b00      	cmp	r3, #0
 80091f4:	f000 8117 	beq.w	8009426 <HAL_RCCEx_PeriphCLKConfig+0x86a>
 80091f8:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 80091fc:	f000 811d 	beq.w	800943a <HAL_RCCEx_PeriphCLKConfig+0x87e>
 8009200:	2601      	movs	r6, #1
 8009202:	4634      	mov	r4, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
 8009204:	682b      	ldr	r3, [r5, #0]
 8009206:	0659      	lsls	r1, r3, #25
 8009208:	d510      	bpl.n	800922c <HAL_RCCEx_PeriphCLKConfig+0x670>
    switch(PeriphClkInit->Lptim2ClockSelection)
 800920a:	f8d5 309c 	ldr.w	r3, [r5, #156]	; 0x9c
 800920e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8009212:	f000 813b 	beq.w	800948c <HAL_RCCEx_PeriphCLKConfig+0x8d0>
 8009216:	f200 811e 	bhi.w	8009456 <HAL_RCCEx_PeriphCLKConfig+0x89a>
 800921a:	2b00      	cmp	r3, #0
 800921c:	f000 8124 	beq.w	8009468 <HAL_RCCEx_PeriphCLKConfig+0x8ac>
 8009220:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8009224:	f000 812c 	beq.w	8009480 <HAL_RCCEx_PeriphCLKConfig+0x8c4>
 8009228:	2601      	movs	r6, #1
 800922a:	4634      	mov	r4, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
 800922c:	682b      	ldr	r3, [r5, #0]
 800922e:	061a      	lsls	r2, r3, #24
 8009230:	d510      	bpl.n	8009254 <HAL_RCCEx_PeriphCLKConfig+0x698>
    switch(PeriphClkInit->Lptim345ClockSelection)
 8009232:	f8d5 30a0 	ldr.w	r3, [r5, #160]	; 0xa0
 8009236:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 800923a:	f000 8148 	beq.w	80094ce <HAL_RCCEx_PeriphCLKConfig+0x912>
 800923e:	f200 812d 	bhi.w	800949c <HAL_RCCEx_PeriphCLKConfig+0x8e0>
 8009242:	2b00      	cmp	r3, #0
 8009244:	f000 8133 	beq.w	80094ae <HAL_RCCEx_PeriphCLKConfig+0x8f2>
 8009248:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800924c:	f000 8139 	beq.w	80094c2 <HAL_RCCEx_PeriphCLKConfig+0x906>
 8009250:	2601      	movs	r6, #1
 8009252:	4634      	mov	r4, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
 8009254:	682b      	ldr	r3, [r5, #0]
 8009256:	071b      	lsls	r3, r3, #28
 8009258:	d514      	bpl.n	8009284 <HAL_RCCEx_PeriphCLKConfig+0x6c8>
    if ((PeriphClkInit->I2c123ClockSelection )== RCC_I2C123CLKSOURCE_PLL3 )
 800925a:	f8d5 3084 	ldr.w	r3, [r5, #132]	; 0x84
 800925e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8009262:	d107      	bne.n	8009274 <HAL_RCCEx_PeriphCLKConfig+0x6b8>
        if(RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE)!= HAL_OK)
 8009264:	2102      	movs	r1, #2
 8009266:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800926a:	f7ff fc2f 	bl	8008acc <RCCEx_PLL3_Config>
          status = HAL_ERROR;
 800926e:	2800      	cmp	r0, #0
 8009270:	bf18      	it	ne
 8009272:	2601      	movne	r6, #1
      __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
 8009274:	4a81      	ldr	r2, [pc, #516]	; (800947c <HAL_RCCEx_PeriphCLKConfig+0x8c0>)
 8009276:	f8d5 1084 	ldr.w	r1, [r5, #132]	; 0x84
 800927a:	6d53      	ldr	r3, [r2, #84]	; 0x54
 800927c:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8009280:	430b      	orrs	r3, r1
 8009282:	6553      	str	r3, [r2, #84]	; 0x54
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
 8009284:	682b      	ldr	r3, [r5, #0]
 8009286:	06df      	lsls	r7, r3, #27
 8009288:	d514      	bpl.n	80092b4 <HAL_RCCEx_PeriphCLKConfig+0x6f8>
    if ((PeriphClkInit->I2c4ClockSelection) == RCC_I2C4CLKSOURCE_PLL3 )
 800928a:	f8d5 3098 	ldr.w	r3, [r5, #152]	; 0x98
 800928e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8009292:	d107      	bne.n	80092a4 <HAL_RCCEx_PeriphCLKConfig+0x6e8>
      if(RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE)!= HAL_OK)
 8009294:	2102      	movs	r1, #2
 8009296:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800929a:	f7ff fc17 	bl	8008acc <RCCEx_PLL3_Config>
        status = HAL_ERROR;
 800929e:	2800      	cmp	r0, #0
 80092a0:	bf18      	it	ne
 80092a2:	2601      	movne	r6, #1
      __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
 80092a4:	4a75      	ldr	r2, [pc, #468]	; (800947c <HAL_RCCEx_PeriphCLKConfig+0x8c0>)
 80092a6:	f8d5 1098 	ldr.w	r1, [r5, #152]	; 0x98
 80092aa:	6d93      	ldr	r3, [r2, #88]	; 0x58
 80092ac:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80092b0:	430b      	orrs	r3, r1
 80092b2:	6593      	str	r3, [r2, #88]	; 0x58
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
 80092b4:	682b      	ldr	r3, [r5, #0]
 80092b6:	0318      	lsls	r0, r3, #12
 80092b8:	d51a      	bpl.n	80092f0 <HAL_RCCEx_PeriphCLKConfig+0x734>
    switch(PeriphClkInit->AdcClockSelection)
 80092ba:	f8d5 10a4 	ldr.w	r1, [r5, #164]	; 0xa4
 80092be:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 80092c2:	f000 810c 	beq.w	80094de <HAL_RCCEx_PeriphCLKConfig+0x922>
 80092c6:	f5b1 3f00 	cmp.w	r1, #131072	; 0x20000
 80092ca:	d006      	beq.n	80092da <HAL_RCCEx_PeriphCLKConfig+0x71e>
 80092cc:	2900      	cmp	r1, #0
 80092ce:	f040 810c 	bne.w	80094ea <HAL_RCCEx_PeriphCLKConfig+0x92e>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_P_UPDATE);
 80092d2:	1d28      	adds	r0, r5, #4
 80092d4:	f7ff fb82 	bl	80089dc <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE);
 80092d8:	4604      	mov	r4, r0
    if(ret == HAL_OK)
 80092da:	2c00      	cmp	r4, #0
 80092dc:	f040 8108 	bne.w	80094f0 <HAL_RCCEx_PeriphCLKConfig+0x934>
      __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
 80092e0:	4a66      	ldr	r2, [pc, #408]	; (800947c <HAL_RCCEx_PeriphCLKConfig+0x8c0>)
 80092e2:	f8d5 10a4 	ldr.w	r1, [r5, #164]	; 0xa4
 80092e6:	6d93      	ldr	r3, [r2, #88]	; 0x58
 80092e8:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 80092ec:	430b      	orrs	r3, r1
 80092ee:	6593      	str	r3, [r2, #88]	; 0x58
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
 80092f0:	682b      	ldr	r3, [r5, #0]
 80092f2:	0359      	lsls	r1, r3, #13
 80092f4:	d51c      	bpl.n	8009330 <HAL_RCCEx_PeriphCLKConfig+0x774>
    switch(PeriphClkInit->UsbClockSelection)
 80092f6:	f8d5 3088 	ldr.w	r3, [r5, #136]	; 0x88
 80092fa:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 80092fe:	f000 80f9 	beq.w	80094f4 <HAL_RCCEx_PeriphCLKConfig+0x938>
 8009302:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 8009306:	d008      	beq.n	800931a <HAL_RCCEx_PeriphCLKConfig+0x75e>
 8009308:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 800930c:	f040 80f9 	bne.w	8009502 <HAL_RCCEx_PeriphCLKConfig+0x946>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8009310:	4a5a      	ldr	r2, [pc, #360]	; (800947c <HAL_RCCEx_PeriphCLKConfig+0x8c0>)
 8009312:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8009314:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8009318:	62d3      	str	r3, [r2, #44]	; 0x2c
    if(ret == HAL_OK)
 800931a:	2c00      	cmp	r4, #0
 800931c:	f040 80f4 	bne.w	8009508 <HAL_RCCEx_PeriphCLKConfig+0x94c>
      __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
 8009320:	4a56      	ldr	r2, [pc, #344]	; (800947c <HAL_RCCEx_PeriphCLKConfig+0x8c0>)
 8009322:	f8d5 1088 	ldr.w	r1, [r5, #136]	; 0x88
 8009326:	6d53      	ldr	r3, [r2, #84]	; 0x54
 8009328:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 800932c:	430b      	orrs	r3, r1
 800932e:	6553      	str	r3, [r2, #84]	; 0x54
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
 8009330:	682b      	ldr	r3, [r5, #0]
 8009332:	03da      	lsls	r2, r3, #15
 8009334:	d509      	bpl.n	800934a <HAL_RCCEx_PeriphCLKConfig+0x78e>
    switch(PeriphClkInit->SdmmcClockSelection)
 8009336:	6d2b      	ldr	r3, [r5, #80]	; 0x50
 8009338:	2b00      	cmp	r3, #0
 800933a:	f000 80e7 	beq.w	800950c <HAL_RCCEx_PeriphCLKConfig+0x950>
 800933e:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8009342:	f000 80f1 	beq.w	8009528 <HAL_RCCEx_PeriphCLKConfig+0x96c>
 8009346:	2601      	movs	r6, #1
 8009348:	4634      	mov	r4, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
 800934a:	682b      	ldr	r3, [r5, #0]
 800934c:	009b      	lsls	r3, r3, #2
 800934e:	d507      	bpl.n	8009360 <HAL_RCCEx_PeriphCLKConfig+0x7a4>
    if(RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE)!=HAL_OK)
 8009350:	2102      	movs	r1, #2
 8009352:	f105 0024 	add.w	r0, r5, #36	; 0x24
 8009356:	f7ff fbb9 	bl	8008acc <RCCEx_PLL3_Config>
      status=HAL_ERROR;
 800935a:	2800      	cmp	r0, #0
 800935c:	bf18      	it	ne
 800935e:	2601      	movne	r6, #1
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
 8009360:	682b      	ldr	r3, [r5, #0]
 8009362:	039f      	lsls	r7, r3, #14
 8009364:	d50b      	bpl.n	800937e <HAL_RCCEx_PeriphCLKConfig+0x7c2>
    switch(PeriphClkInit->RngClockSelection)
 8009366:	f8d5 1080 	ldr.w	r1, [r5, #128]	; 0x80
 800936a:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 800936e:	f000 80f1 	beq.w	8009554 <HAL_RCCEx_PeriphCLKConfig+0x998>
 8009372:	f200 80e1 	bhi.w	8009538 <HAL_RCCEx_PeriphCLKConfig+0x97c>
 8009376:	2900      	cmp	r1, #0
 8009378:	f000 80e4 	beq.w	8009544 <HAL_RCCEx_PeriphCLKConfig+0x988>
 800937c:	2601      	movs	r6, #1
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SWPMI1) == RCC_PERIPHCLK_SWPMI1)
 800937e:	02dc      	lsls	r4, r3, #11
 8009380:	d506      	bpl.n	8009390 <HAL_RCCEx_PeriphCLKConfig+0x7d4>
    __HAL_RCC_SWPMI1_CONFIG(PeriphClkInit->Swpmi1ClockSelection);
 8009382:	493e      	ldr	r1, [pc, #248]	; (800947c <HAL_RCCEx_PeriphCLKConfig+0x8c0>)
 8009384:	6f68      	ldr	r0, [r5, #116]	; 0x74
 8009386:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 8009388:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
 800938c:	4302      	orrs	r2, r0
 800938e:	650a      	str	r2, [r1, #80]	; 0x50
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_HRTIM1) == RCC_PERIPHCLK_HRTIM1)
 8009390:	00d8      	lsls	r0, r3, #3
 8009392:	d507      	bpl.n	80093a4 <HAL_RCCEx_PeriphCLKConfig+0x7e8>
    __HAL_RCC_HRTIM1_CONFIG(PeriphClkInit->Hrtim1ClockSelection);
 8009394:	4939      	ldr	r1, [pc, #228]	; (800947c <HAL_RCCEx_PeriphCLKConfig+0x8c0>)
 8009396:	f8d5 00b8 	ldr.w	r0, [r5, #184]	; 0xb8
 800939a:	690a      	ldr	r2, [r1, #16]
 800939c:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 80093a0:	4302      	orrs	r2, r0
 80093a2:	610a      	str	r2, [r1, #16]
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
 80093a4:	0299      	lsls	r1, r3, #10
 80093a6:	d506      	bpl.n	80093b6 <HAL_RCCEx_PeriphCLKConfig+0x7fa>
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
 80093a8:	4934      	ldr	r1, [pc, #208]	; (800947c <HAL_RCCEx_PeriphCLKConfig+0x8c0>)
 80093aa:	6ee8      	ldr	r0, [r5, #108]	; 0x6c
 80093ac:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 80093ae:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 80093b2:	4302      	orrs	r2, r0
 80093b4:	650a      	str	r2, [r1, #80]	; 0x50
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == RCC_PERIPHCLK_TIM)
 80093b6:	005a      	lsls	r2, r3, #1
 80093b8:	d509      	bpl.n	80093ce <HAL_RCCEx_PeriphCLKConfig+0x812>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 80093ba:	4a30      	ldr	r2, [pc, #192]	; (800947c <HAL_RCCEx_PeriphCLKConfig+0x8c0>)
 80093bc:	6911      	ldr	r1, [r2, #16]
 80093be:	f421 4100 	bic.w	r1, r1, #32768	; 0x8000
 80093c2:	6111      	str	r1, [r2, #16]
 80093c4:	6911      	ldr	r1, [r2, #16]
 80093c6:	f8d5 00bc 	ldr.w	r0, [r5, #188]	; 0xbc
 80093ca:	4301      	orrs	r1, r0
 80093cc:	6111      	str	r1, [r2, #16]
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CKPER) == RCC_PERIPHCLK_CKPER)
 80093ce:	2b00      	cmp	r3, #0
 80093d0:	da06      	bge.n	80093e0 <HAL_RCCEx_PeriphCLKConfig+0x824>
    __HAL_RCC_CLKP_CONFIG(PeriphClkInit->CkperClockSelection);
 80093d2:	492a      	ldr	r1, [pc, #168]	; (800947c <HAL_RCCEx_PeriphCLKConfig+0x8c0>)
 80093d4:	6d68      	ldr	r0, [r5, #84]	; 0x54
 80093d6:	6cca      	ldr	r2, [r1, #76]	; 0x4c
 80093d8:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 80093dc:	4302      	orrs	r2, r0
 80093de:	64ca      	str	r2, [r1, #76]	; 0x4c
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
 80093e0:	021b      	lsls	r3, r3, #8
 80093e2:	d507      	bpl.n	80093f4 <HAL_RCCEx_PeriphCLKConfig+0x838>
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
 80093e4:	4a25      	ldr	r2, [pc, #148]	; (800947c <HAL_RCCEx_PeriphCLKConfig+0x8c0>)
 80093e6:	f8d5 108c 	ldr.w	r1, [r5, #140]	; 0x8c
 80093ea:	6d53      	ldr	r3, [r2, #84]	; 0x54
 80093ec:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 80093f0:	430b      	orrs	r3, r1
 80093f2:	6553      	str	r3, [r2, #84]	; 0x54
}
 80093f4:	1e30      	subs	r0, r6, #0
 80093f6:	bf18      	it	ne
 80093f8:	2001      	movne	r0, #1
 80093fa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
 80093fe:	2101      	movs	r1, #1
 8009400:	f105 0024 	add.w	r0, r5, #36	; 0x24
 8009404:	f7ff fb62 	bl	8008acc <RCCEx_PLL3_Config>
 8009408:	e6dc      	b.n	80091c4 <HAL_RCCEx_PeriphCLKConfig+0x608>
    switch(PeriphClkInit->Lpuart1ClockSelection)
 800940a:	2601      	movs	r6, #1
 800940c:	4634      	mov	r4, r6
 800940e:	e6e5      	b.n	80091dc <HAL_RCCEx_PeriphCLKConfig+0x620>
 8009410:	4626      	mov	r6, r4
 8009412:	e6e3      	b.n	80091dc <HAL_RCCEx_PeriphCLKConfig+0x620>
    switch(PeriphClkInit->Lptim1ClockSelection)
 8009414:	f023 5280 	bic.w	r2, r3, #268435456	; 0x10000000
 8009418:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800941c:	d003      	beq.n	8009426 <HAL_RCCEx_PeriphCLKConfig+0x86a>
 800941e:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 8009422:	f47f aeed 	bne.w	8009200 <HAL_RCCEx_PeriphCLKConfig+0x644>
    if(ret == HAL_OK)
 8009426:	b9a4      	cbnz	r4, 8009452 <HAL_RCCEx_PeriphCLKConfig+0x896>
      __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
 8009428:	4a14      	ldr	r2, [pc, #80]	; (800947c <HAL_RCCEx_PeriphCLKConfig+0x8c0>)
 800942a:	f8d5 1090 	ldr.w	r1, [r5, #144]	; 0x90
 800942e:	6d53      	ldr	r3, [r2, #84]	; 0x54
 8009430:	f023 43e0 	bic.w	r3, r3, #1879048192	; 0x70000000
 8009434:	430b      	orrs	r3, r1
 8009436:	6553      	str	r3, [r2, #84]	; 0x54
 8009438:	e6e4      	b.n	8009204 <HAL_RCCEx_PeriphCLKConfig+0x648>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_P_UPDATE);
 800943a:	2100      	movs	r1, #0
 800943c:	1d28      	adds	r0, r5, #4
 800943e:	f7ff facd 	bl	80089dc <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE);
 8009442:	4604      	mov	r4, r0
      break;
 8009444:	e7ef      	b.n	8009426 <HAL_RCCEx_PeriphCLKConfig+0x86a>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE);
 8009446:	2102      	movs	r1, #2
 8009448:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800944c:	f7ff fb3e 	bl	8008acc <RCCEx_PLL3_Config>
 8009450:	e7f7      	b.n	8009442 <HAL_RCCEx_PeriphCLKConfig+0x886>
 8009452:	4626      	mov	r6, r4
 8009454:	e6d6      	b.n	8009204 <HAL_RCCEx_PeriphCLKConfig+0x648>
    switch(PeriphClkInit->Lptim2ClockSelection)
 8009456:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 800945a:	f5b2 5f80 	cmp.w	r2, #4096	; 0x1000
 800945e:	d003      	beq.n	8009468 <HAL_RCCEx_PeriphCLKConfig+0x8ac>
 8009460:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 8009464:	f47f aee0 	bne.w	8009228 <HAL_RCCEx_PeriphCLKConfig+0x66c>
    if(ret == HAL_OK)
 8009468:	b9b4      	cbnz	r4, 8009498 <HAL_RCCEx_PeriphCLKConfig+0x8dc>
      __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
 800946a:	4a04      	ldr	r2, [pc, #16]	; (800947c <HAL_RCCEx_PeriphCLKConfig+0x8c0>)
 800946c:	f8d5 109c 	ldr.w	r1, [r5, #156]	; 0x9c
 8009470:	6d93      	ldr	r3, [r2, #88]	; 0x58
 8009472:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8009476:	430b      	orrs	r3, r1
 8009478:	6593      	str	r3, [r2, #88]	; 0x58
 800947a:	e6d7      	b.n	800922c <HAL_RCCEx_PeriphCLKConfig+0x670>
 800947c:	58024400 	.word	0x58024400
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_P_UPDATE);
 8009480:	2100      	movs	r1, #0
 8009482:	1d28      	adds	r0, r5, #4
 8009484:	f7ff faaa 	bl	80089dc <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE);
 8009488:	4604      	mov	r4, r0
      break;
 800948a:	e7ed      	b.n	8009468 <HAL_RCCEx_PeriphCLKConfig+0x8ac>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE);
 800948c:	2102      	movs	r1, #2
 800948e:	f105 0024 	add.w	r0, r5, #36	; 0x24
 8009492:	f7ff fb1b 	bl	8008acc <RCCEx_PLL3_Config>
 8009496:	e7f7      	b.n	8009488 <HAL_RCCEx_PeriphCLKConfig+0x8cc>
 8009498:	4626      	mov	r6, r4
 800949a:	e6c7      	b.n	800922c <HAL_RCCEx_PeriphCLKConfig+0x670>
    switch(PeriphClkInit->Lptim345ClockSelection)
 800949c:	f423 5200 	bic.w	r2, r3, #8192	; 0x2000
 80094a0:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 80094a4:	d003      	beq.n	80094ae <HAL_RCCEx_PeriphCLKConfig+0x8f2>
 80094a6:	f5b3 4fc0 	cmp.w	r3, #24576	; 0x6000
 80094aa:	f47f aed1 	bne.w	8009250 <HAL_RCCEx_PeriphCLKConfig+0x694>
    if(ret == HAL_OK)
 80094ae:	b9a4      	cbnz	r4, 80094da <HAL_RCCEx_PeriphCLKConfig+0x91e>
      __HAL_RCC_LPTIM345_CONFIG(PeriphClkInit->Lptim345ClockSelection);
 80094b0:	4a2c      	ldr	r2, [pc, #176]	; (8009564 <HAL_RCCEx_PeriphCLKConfig+0x9a8>)
 80094b2:	f8d5 10a0 	ldr.w	r1, [r5, #160]	; 0xa0
 80094b6:	6d93      	ldr	r3, [r2, #88]	; 0x58
 80094b8:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 80094bc:	430b      	orrs	r3, r1
 80094be:	6593      	str	r3, [r2, #88]	; 0x58
 80094c0:	e6c8      	b.n	8009254 <HAL_RCCEx_PeriphCLKConfig+0x698>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_P_UPDATE);
 80094c2:	2100      	movs	r1, #0
 80094c4:	1d28      	adds	r0, r5, #4
 80094c6:	f7ff fa89 	bl	80089dc <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE);
 80094ca:	4604      	mov	r4, r0
      break;
 80094cc:	e7ef      	b.n	80094ae <HAL_RCCEx_PeriphCLKConfig+0x8f2>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE);
 80094ce:	2102      	movs	r1, #2
 80094d0:	f105 0024 	add.w	r0, r5, #36	; 0x24
 80094d4:	f7ff fafa 	bl	8008acc <RCCEx_PLL3_Config>
 80094d8:	e7f7      	b.n	80094ca <HAL_RCCEx_PeriphCLKConfig+0x90e>
 80094da:	4626      	mov	r6, r4
 80094dc:	e6ba      	b.n	8009254 <HAL_RCCEx_PeriphCLKConfig+0x698>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE);
 80094de:	2102      	movs	r1, #2
 80094e0:	f105 0024 	add.w	r0, r5, #36	; 0x24
 80094e4:	f7ff faf2 	bl	8008acc <RCCEx_PLL3_Config>
 80094e8:	e6f6      	b.n	80092d8 <HAL_RCCEx_PeriphCLKConfig+0x71c>
    switch(PeriphClkInit->AdcClockSelection)
 80094ea:	2601      	movs	r6, #1
 80094ec:	4634      	mov	r4, r6
 80094ee:	e6ff      	b.n	80092f0 <HAL_RCCEx_PeriphCLKConfig+0x734>
 80094f0:	4626      	mov	r6, r4
 80094f2:	e6fd      	b.n	80092f0 <HAL_RCCEx_PeriphCLKConfig+0x734>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
 80094f4:	2101      	movs	r1, #1
 80094f6:	f105 0024 	add.w	r0, r5, #36	; 0x24
 80094fa:	f7ff fae7 	bl	8008acc <RCCEx_PLL3_Config>
 80094fe:	4604      	mov	r4, r0
      break;
 8009500:	e70b      	b.n	800931a <HAL_RCCEx_PeriphCLKConfig+0x75e>
    switch(PeriphClkInit->UsbClockSelection)
 8009502:	2601      	movs	r6, #1
 8009504:	4634      	mov	r4, r6
 8009506:	e713      	b.n	8009330 <HAL_RCCEx_PeriphCLKConfig+0x774>
 8009508:	4626      	mov	r6, r4
 800950a:	e711      	b.n	8009330 <HAL_RCCEx_PeriphCLKConfig+0x774>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 800950c:	4a15      	ldr	r2, [pc, #84]	; (8009564 <HAL_RCCEx_PeriphCLKConfig+0x9a8>)
 800950e:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8009510:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8009514:	62d3      	str	r3, [r2, #44]	; 0x2c
    if(ret == HAL_OK)
 8009516:	b96c      	cbnz	r4, 8009534 <HAL_RCCEx_PeriphCLKConfig+0x978>
      __HAL_RCC_SDMMC_CONFIG(PeriphClkInit->SdmmcClockSelection);
 8009518:	4a12      	ldr	r2, [pc, #72]	; (8009564 <HAL_RCCEx_PeriphCLKConfig+0x9a8>)
 800951a:	6d29      	ldr	r1, [r5, #80]	; 0x50
 800951c:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 800951e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8009522:	430b      	orrs	r3, r1
 8009524:	64d3      	str	r3, [r2, #76]	; 0x4c
 8009526:	e710      	b.n	800934a <HAL_RCCEx_PeriphCLKConfig+0x78e>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_R_UPDATE);
 8009528:	2102      	movs	r1, #2
 800952a:	1d28      	adds	r0, r5, #4
 800952c:	f7ff fa56 	bl	80089dc <RCCEx_PLL2_Config>
 8009530:	4604      	mov	r4, r0
      break;
 8009532:	e7f0      	b.n	8009516 <HAL_RCCEx_PeriphCLKConfig+0x95a>
 8009534:	4626      	mov	r6, r4
 8009536:	e708      	b.n	800934a <HAL_RCCEx_PeriphCLKConfig+0x78e>
    switch(PeriphClkInit->RngClockSelection)
 8009538:	f421 7280 	bic.w	r2, r1, #256	; 0x100
 800953c:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 8009540:	f47f af1c 	bne.w	800937c <HAL_RCCEx_PeriphCLKConfig+0x7c0>
    if(ret == HAL_OK)
 8009544:	b964      	cbnz	r4, 8009560 <HAL_RCCEx_PeriphCLKConfig+0x9a4>
      __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
 8009546:	4807      	ldr	r0, [pc, #28]	; (8009564 <HAL_RCCEx_PeriphCLKConfig+0x9a8>)
 8009548:	6d42      	ldr	r2, [r0, #84]	; 0x54
 800954a:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 800954e:	430a      	orrs	r2, r1
 8009550:	6542      	str	r2, [r0, #84]	; 0x54
 8009552:	e714      	b.n	800937e <HAL_RCCEx_PeriphCLKConfig+0x7c2>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8009554:	4803      	ldr	r0, [pc, #12]	; (8009564 <HAL_RCCEx_PeriphCLKConfig+0x9a8>)
 8009556:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8009558:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 800955c:	62c2      	str	r2, [r0, #44]	; 0x2c
      break;
 800955e:	e7f1      	b.n	8009544 <HAL_RCCEx_PeriphCLKConfig+0x988>
 8009560:	4626      	mov	r6, r4
 8009562:	e70c      	b.n	800937e <HAL_RCCEx_PeriphCLKConfig+0x7c2>
 8009564:	58024400 	.word	0x58024400

08009568 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 8009568:	b538      	push	{r3, r4, r5, lr}
 800956a:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800956c:	4604      	mov	r4, r0
 800956e:	b1f0      	cbz	r0, 80095ae <HAL_SDRAM_Init+0x46>
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 8009570:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8009574:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8009578:	b91b      	cbnz	r3, 8009582 <HAL_SDRAM_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 800957a:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 800957e:	f7f7 fe93 	bl	80012a8 <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8009582:	2302      	movs	r3, #2

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8009584:	1d21      	adds	r1, r4, #4
 8009586:	6820      	ldr	r0, [r4, #0]
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8009588:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800958c:	f000 fa1f 	bl	80099ce <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 8009590:	6862      	ldr	r2, [r4, #4]
 8009592:	4629      	mov	r1, r5
 8009594:	6820      	ldr	r0, [r4, #0]
 8009596:	f000 fa55 	bl	8009a44 <FMC_SDRAM_Timing_Init>

  /* Enable FMC Peripheral */
  __FMC_ENABLE();
 800959a:	4a06      	ldr	r2, [pc, #24]	; (80095b4 <HAL_SDRAM_Init+0x4c>)
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;

  return HAL_OK;
 800959c:	2000      	movs	r0, #0
  __FMC_ENABLE();
 800959e:	6813      	ldr	r3, [r2, #0]
 80095a0:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 80095a4:	6013      	str	r3, [r2, #0]
  hsdram->State = HAL_SDRAM_STATE_READY;
 80095a6:	2301      	movs	r3, #1
 80095a8:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
}
 80095ac:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80095ae:	2001      	movs	r0, #1
 80095b0:	e7fc      	b.n	80095ac <HAL_SDRAM_Init+0x44>
 80095b2:	bf00      	nop
 80095b4:	52004000 	.word	0x52004000

080095b8 <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
 80095b8:	b510      	push	{r4, lr}
 80095ba:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
 80095bc:	f7f7 ff00 	bl	80013c0 <HAL_SDRAM_MspDeInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */

  /* Configure the SDRAM registers with their reset values */
  (void)FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
 80095c0:	e9d4 0100 	ldrd	r0, r1, [r4]
 80095c4:	f000 fa74 	bl	8009ab0 <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
 80095c8:	2000      	movs	r0, #0
 80095ca:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
 80095ce:	f884 002d 	strb.w	r0, [r4, #45]	; 0x2d

  return HAL_OK;
}
 80095d2:	bd10      	pop	{r4, pc}

080095d4 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 80095d4:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 80095d6:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
{
 80095da:	4605      	mov	r5, r0
 80095dc:	460e      	mov	r6, r1

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 80095de:	2b02      	cmp	r3, #2
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 80095e0:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 80095e2:	d010      	beq.n	8009606 <HAL_SDRAM_SendCommand+0x32>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 80095e4:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 80095e8:	2c01      	cmp	r4, #1
 80095ea:	d110      	bne.n	800960e <HAL_SDRAM_SendCommand+0x3a>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 80095ec:	2302      	movs	r3, #2

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 80095ee:	6828      	ldr	r0, [r5, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 80095f0:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 80095f4:	f000 fa6b 	bl	8009ace <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 80095f8:	6833      	ldr	r3, [r6, #0]
 80095fa:	2b02      	cmp	r3, #2
 80095fc:	d104      	bne.n	8009608 <HAL_SDRAM_SendCommand+0x34>
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 80095fe:	2305      	movs	r3, #5
 8009600:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8009604:	2000      	movs	r0, #0
}
 8009606:	bd70      	pop	{r4, r5, r6, pc}
      hsdram->State = HAL_SDRAM_STATE_READY;
 8009608:	f885 402c 	strb.w	r4, [r5, #44]	; 0x2c
 800960c:	e7fa      	b.n	8009604 <HAL_SDRAM_SendCommand+0x30>
    return HAL_ERROR;
 800960e:	2001      	movs	r0, #1
 8009610:	e7f9      	b.n	8009606 <HAL_SDRAM_SendCommand+0x32>

08009612 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8009612:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 8009614:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
{
 8009618:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800961a:	2b02      	cmp	r3, #2
 800961c:	b2d8      	uxtb	r0, r3
 800961e:	d00d      	beq.n	800963c <HAL_SDRAM_ProgramRefreshRate+0x2a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 8009620:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8009624:	2b01      	cmp	r3, #1
 8009626:	b2dd      	uxtb	r5, r3
 8009628:	d109      	bne.n	800963e <HAL_SDRAM_ProgramRefreshRate+0x2c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800962a:	2302      	movs	r3, #2

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800962c:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800962e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8009632:	f000 fa5e 	bl	8009af2 <FMC_SDRAM_ProgramRefreshRate>
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8009636:	2000      	movs	r0, #0
    hsdram->State = HAL_SDRAM_STATE_READY;
 8009638:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
}
 800963c:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800963e:	2001      	movs	r0, #1
 8009640:	e7fc      	b.n	800963c <HAL_SDRAM_ProgramRefreshRate+0x2a>

08009642 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 8009642:	4770      	bx	lr

08009644 <HAL_TIM_Base_Start>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 8009644:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8009648:	2b01      	cmp	r3, #1
 800964a:	d12f      	bne.n	80096ac <HAL_TIM_Base_Start+0x68>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 800964c:	2302      	movs	r3, #2

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800964e:	4a18      	ldr	r2, [pc, #96]	; (80096b0 <HAL_TIM_Base_Start+0x6c>)
  htim->State = HAL_TIM_STATE_BUSY;
 8009650:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8009654:	6803      	ldr	r3, [r0, #0]
 8009656:	4293      	cmp	r3, r2
 8009658:	d01a      	beq.n	8009690 <HAL_TIM_Base_Start+0x4c>
 800965a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800965e:	d017      	beq.n	8009690 <HAL_TIM_Base_Start+0x4c>
 8009660:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8009664:	4293      	cmp	r3, r2
 8009666:	d013      	beq.n	8009690 <HAL_TIM_Base_Start+0x4c>
 8009668:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800966c:	4293      	cmp	r3, r2
 800966e:	d00f      	beq.n	8009690 <HAL_TIM_Base_Start+0x4c>
 8009670:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8009674:	4293      	cmp	r3, r2
 8009676:	d00b      	beq.n	8009690 <HAL_TIM_Base_Start+0x4c>
 8009678:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800967c:	4293      	cmp	r3, r2
 800967e:	d007      	beq.n	8009690 <HAL_TIM_Base_Start+0x4c>
 8009680:	f5a2 426c 	sub.w	r2, r2, #60416	; 0xec00
 8009684:	4293      	cmp	r3, r2
 8009686:	d003      	beq.n	8009690 <HAL_TIM_Base_Start+0x4c>
 8009688:	f502 3294 	add.w	r2, r2, #75776	; 0x12800
 800968c:	4293      	cmp	r3, r2
 800968e:	d107      	bne.n	80096a0 <HAL_TIM_Base_Start+0x5c>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8009690:	6899      	ldr	r1, [r3, #8]
 8009692:	4a08      	ldr	r2, [pc, #32]	; (80096b4 <HAL_TIM_Base_Start+0x70>)
 8009694:	400a      	ands	r2, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8009696:	2a06      	cmp	r2, #6
 8009698:	d006      	beq.n	80096a8 <HAL_TIM_Base_Start+0x64>
 800969a:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 800969e:	d003      	beq.n	80096a8 <HAL_TIM_Base_Start+0x64>
      __HAL_TIM_ENABLE(htim);
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 80096a0:	681a      	ldr	r2, [r3, #0]
 80096a2:	f042 0201 	orr.w	r2, r2, #1
 80096a6:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 80096a8:	2000      	movs	r0, #0
}
 80096aa:	4770      	bx	lr
    return HAL_ERROR;
 80096ac:	2001      	movs	r0, #1
 80096ae:	4770      	bx	lr
 80096b0:	40010000 	.word	0x40010000
 80096b4:	00010007 	.word	0x00010007

080096b8 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 80096b8:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80096bc:	2b01      	cmp	r3, #1
 80096be:	d133      	bne.n	8009728 <HAL_TIM_Base_Start_IT+0x70>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 80096c0:	2302      	movs	r3, #2
 80096c2:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 80096c6:	6803      	ldr	r3, [r0, #0]
 80096c8:	68da      	ldr	r2, [r3, #12]
 80096ca:	f042 0201 	orr.w	r2, r2, #1
 80096ce:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 80096d0:	4a16      	ldr	r2, [pc, #88]	; (800972c <HAL_TIM_Base_Start_IT+0x74>)
 80096d2:	4293      	cmp	r3, r2
 80096d4:	d01a      	beq.n	800970c <HAL_TIM_Base_Start_IT+0x54>
 80096d6:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80096da:	d017      	beq.n	800970c <HAL_TIM_Base_Start_IT+0x54>
 80096dc:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 80096e0:	4293      	cmp	r3, r2
 80096e2:	d013      	beq.n	800970c <HAL_TIM_Base_Start_IT+0x54>
 80096e4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80096e8:	4293      	cmp	r3, r2
 80096ea:	d00f      	beq.n	800970c <HAL_TIM_Base_Start_IT+0x54>
 80096ec:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80096f0:	4293      	cmp	r3, r2
 80096f2:	d00b      	beq.n	800970c <HAL_TIM_Base_Start_IT+0x54>
 80096f4:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 80096f8:	4293      	cmp	r3, r2
 80096fa:	d007      	beq.n	800970c <HAL_TIM_Base_Start_IT+0x54>
 80096fc:	f5a2 426c 	sub.w	r2, r2, #60416	; 0xec00
 8009700:	4293      	cmp	r3, r2
 8009702:	d003      	beq.n	800970c <HAL_TIM_Base_Start_IT+0x54>
 8009704:	f502 3294 	add.w	r2, r2, #75776	; 0x12800
 8009708:	4293      	cmp	r3, r2
 800970a:	d107      	bne.n	800971c <HAL_TIM_Base_Start_IT+0x64>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800970c:	6899      	ldr	r1, [r3, #8]
 800970e:	4a08      	ldr	r2, [pc, #32]	; (8009730 <HAL_TIM_Base_Start_IT+0x78>)
 8009710:	400a      	ands	r2, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8009712:	2a06      	cmp	r2, #6
 8009714:	d006      	beq.n	8009724 <HAL_TIM_Base_Start_IT+0x6c>
 8009716:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 800971a:	d003      	beq.n	8009724 <HAL_TIM_Base_Start_IT+0x6c>
      __HAL_TIM_ENABLE(htim);
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 800971c:	681a      	ldr	r2, [r3, #0]
 800971e:	f042 0201 	orr.w	r2, r2, #1
 8009722:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 8009724:	2000      	movs	r0, #0
}
 8009726:	4770      	bx	lr
    return HAL_ERROR;
 8009728:	2001      	movs	r0, #1
 800972a:	4770      	bx	lr
 800972c:	40010000 	.word	0x40010000
 8009730:	00010007 	.word	0x00010007

08009734 <HAL_TIM_OC_DelayElapsedCallback>:
 8009734:	4770      	bx	lr

08009736 <HAL_TIM_IC_CaptureCallback>:
 8009736:	4770      	bx	lr

08009738 <HAL_TIM_PWM_PulseFinishedCallback>:
 8009738:	4770      	bx	lr

0800973a <HAL_TIM_TriggerCallback>:
 800973a:	4770      	bx	lr

0800973c <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800973c:	6803      	ldr	r3, [r0, #0]
 800973e:	691a      	ldr	r2, [r3, #16]
 8009740:	0791      	lsls	r1, r2, #30
{
 8009742:	b510      	push	{r4, lr}
 8009744:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8009746:	d50f      	bpl.n	8009768 <HAL_TIM_IRQHandler+0x2c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 8009748:	68da      	ldr	r2, [r3, #12]
 800974a:	0792      	lsls	r2, r2, #30
 800974c:	d50c      	bpl.n	8009768 <HAL_TIM_IRQHandler+0x2c>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800974e:	f06f 0202 	mvn.w	r2, #2
 8009752:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8009754:	2201      	movs	r2, #1
 8009756:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8009758:	699b      	ldr	r3, [r3, #24]
 800975a:	0799      	lsls	r1, r3, #30
 800975c:	f000 8085 	beq.w	800986a <HAL_TIM_IRQHandler+0x12e>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 8009760:	f7ff ffe9 	bl	8009736 <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8009764:	2300      	movs	r3, #0
 8009766:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 8009768:	6823      	ldr	r3, [r4, #0]
 800976a:	691a      	ldr	r2, [r3, #16]
 800976c:	0752      	lsls	r2, r2, #29
 800976e:	d510      	bpl.n	8009792 <HAL_TIM_IRQHandler+0x56>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 8009770:	68da      	ldr	r2, [r3, #12]
 8009772:	0750      	lsls	r0, r2, #29
 8009774:	d50d      	bpl.n	8009792 <HAL_TIM_IRQHandler+0x56>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 8009776:	f06f 0204 	mvn.w	r2, #4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800977a:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800977c:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800977e:	2202      	movs	r2, #2
 8009780:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8009782:	699b      	ldr	r3, [r3, #24]
 8009784:	f413 7f40 	tst.w	r3, #768	; 0x300
 8009788:	d075      	beq.n	8009876 <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_IC_CaptureCallback(htim);
 800978a:	f7ff ffd4 	bl	8009736 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800978e:	2300      	movs	r3, #0
 8009790:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 8009792:	6823      	ldr	r3, [r4, #0]
 8009794:	691a      	ldr	r2, [r3, #16]
 8009796:	0711      	lsls	r1, r2, #28
 8009798:	d50f      	bpl.n	80097ba <HAL_TIM_IRQHandler+0x7e>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800979a:	68da      	ldr	r2, [r3, #12]
 800979c:	0712      	lsls	r2, r2, #28
 800979e:	d50c      	bpl.n	80097ba <HAL_TIM_IRQHandler+0x7e>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 80097a0:	f06f 0208 	mvn.w	r2, #8
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80097a4:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 80097a6:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 80097a8:	2204      	movs	r2, #4
 80097aa:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80097ac:	69db      	ldr	r3, [r3, #28]
 80097ae:	079b      	lsls	r3, r3, #30
 80097b0:	d067      	beq.n	8009882 <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 80097b2:	f7ff ffc0 	bl	8009736 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80097b6:	2300      	movs	r3, #0
 80097b8:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 80097ba:	6823      	ldr	r3, [r4, #0]
 80097bc:	691a      	ldr	r2, [r3, #16]
 80097be:	06d0      	lsls	r0, r2, #27
 80097c0:	d510      	bpl.n	80097e4 <HAL_TIM_IRQHandler+0xa8>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 80097c2:	68da      	ldr	r2, [r3, #12]
 80097c4:	06d1      	lsls	r1, r2, #27
 80097c6:	d50d      	bpl.n	80097e4 <HAL_TIM_IRQHandler+0xa8>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 80097c8:	f06f 0210 	mvn.w	r2, #16
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80097cc:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 80097ce:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 80097d0:	2208      	movs	r2, #8
 80097d2:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80097d4:	69db      	ldr	r3, [r3, #28]
 80097d6:	f413 7f40 	tst.w	r3, #768	; 0x300
 80097da:	d058      	beq.n	800988e <HAL_TIM_IRQHandler+0x152>
        HAL_TIM_IC_CaptureCallback(htim);
 80097dc:	f7ff ffab 	bl	8009736 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80097e0:	2300      	movs	r3, #0
 80097e2:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 80097e4:	6823      	ldr	r3, [r4, #0]
 80097e6:	691a      	ldr	r2, [r3, #16]
 80097e8:	07d2      	lsls	r2, r2, #31
 80097ea:	d508      	bpl.n	80097fe <HAL_TIM_IRQHandler+0xc2>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 80097ec:	68da      	ldr	r2, [r3, #12]
 80097ee:	07d0      	lsls	r0, r2, #31
 80097f0:	d505      	bpl.n	80097fe <HAL_TIM_IRQHandler+0xc2>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 80097f2:	f06f 0201 	mvn.w	r2, #1
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 80097f6:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 80097f8:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 80097fa:	f7f7 fba9 	bl	8000f50 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 80097fe:	6823      	ldr	r3, [r4, #0]
 8009800:	691a      	ldr	r2, [r3, #16]
 8009802:	0611      	lsls	r1, r2, #24
 8009804:	d508      	bpl.n	8009818 <HAL_TIM_IRQHandler+0xdc>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8009806:	68da      	ldr	r2, [r3, #12]
 8009808:	0612      	lsls	r2, r2, #24
 800980a:	d505      	bpl.n	8009818 <HAL_TIM_IRQHandler+0xdc>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800980c:	f06f 0280 	mvn.w	r2, #128	; 0x80
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 8009810:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8009812:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 8009814:	f000 f8d9 	bl	80099ca <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break2 input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK2) != RESET)
 8009818:	6823      	ldr	r3, [r4, #0]
 800981a:	691a      	ldr	r2, [r3, #16]
 800981c:	05d0      	lsls	r0, r2, #23
 800981e:	d508      	bpl.n	8009832 <HAL_TIM_IRQHandler+0xf6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8009820:	68da      	ldr	r2, [r3, #12]
 8009822:	0611      	lsls	r1, r2, #24
 8009824:	d505      	bpl.n	8009832 <HAL_TIM_IRQHandler+0xf6>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
 8009826:	f46f 7280 	mvn.w	r2, #256	; 0x100
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->Break2Callback(htim);
#else
      HAL_TIMEx_Break2Callback(htim);
 800982a:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
 800982c:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_Break2Callback(htim);
 800982e:	f000 f8cd 	bl	80099cc <HAL_TIMEx_Break2Callback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 8009832:	6823      	ldr	r3, [r4, #0]
 8009834:	691a      	ldr	r2, [r3, #16]
 8009836:	0652      	lsls	r2, r2, #25
 8009838:	d508      	bpl.n	800984c <HAL_TIM_IRQHandler+0x110>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800983a:	68da      	ldr	r2, [r3, #12]
 800983c:	0650      	lsls	r0, r2, #25
 800983e:	d505      	bpl.n	800984c <HAL_TIM_IRQHandler+0x110>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8009840:	f06f 0240 	mvn.w	r2, #64	; 0x40
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 8009844:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8009846:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 8009848:	f7ff ff77 	bl	800973a <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800984c:	6823      	ldr	r3, [r4, #0]
 800984e:	691a      	ldr	r2, [r3, #16]
 8009850:	0691      	lsls	r1, r2, #26
 8009852:	d522      	bpl.n	800989a <HAL_TIM_IRQHandler+0x15e>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 8009854:	68da      	ldr	r2, [r3, #12]
 8009856:	0692      	lsls	r2, r2, #26
 8009858:	d51f      	bpl.n	800989a <HAL_TIM_IRQHandler+0x15e>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800985a:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 800985e:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8009860:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 8009862:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 8009866:	f000 b8af 	b.w	80099c8 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800986a:	f7ff ff63 	bl	8009734 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800986e:	4620      	mov	r0, r4
 8009870:	f7ff ff62 	bl	8009738 <HAL_TIM_PWM_PulseFinishedCallback>
 8009874:	e776      	b.n	8009764 <HAL_TIM_IRQHandler+0x28>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8009876:	f7ff ff5d 	bl	8009734 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800987a:	4620      	mov	r0, r4
 800987c:	f7ff ff5c 	bl	8009738 <HAL_TIM_PWM_PulseFinishedCallback>
 8009880:	e785      	b.n	800978e <HAL_TIM_IRQHandler+0x52>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8009882:	f7ff ff57 	bl	8009734 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8009886:	4620      	mov	r0, r4
 8009888:	f7ff ff56 	bl	8009738 <HAL_TIM_PWM_PulseFinishedCallback>
 800988c:	e793      	b.n	80097b6 <HAL_TIM_IRQHandler+0x7a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800988e:	f7ff ff51 	bl	8009734 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8009892:	4620      	mov	r0, r4
 8009894:	f7ff ff50 	bl	8009738 <HAL_TIM_PWM_PulseFinishedCallback>
 8009898:	e7a2      	b.n	80097e0 <HAL_TIM_IRQHandler+0xa4>
}
 800989a:	bd10      	pop	{r4, pc}

0800989c <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800989c:	4a30      	ldr	r2, [pc, #192]	; (8009960 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 800989e:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80098a0:	4290      	cmp	r0, r2
 80098a2:	d012      	beq.n	80098ca <TIM_Base_SetConfig+0x2e>
 80098a4:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80098a8:	d00f      	beq.n	80098ca <TIM_Base_SetConfig+0x2e>
 80098aa:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 80098ae:	4290      	cmp	r0, r2
 80098b0:	d00b      	beq.n	80098ca <TIM_Base_SetConfig+0x2e>
 80098b2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80098b6:	4290      	cmp	r0, r2
 80098b8:	d007      	beq.n	80098ca <TIM_Base_SetConfig+0x2e>
 80098ba:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80098be:	4290      	cmp	r0, r2
 80098c0:	d003      	beq.n	80098ca <TIM_Base_SetConfig+0x2e>
 80098c2:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 80098c6:	4290      	cmp	r0, r2
 80098c8:	d119      	bne.n	80098fe <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 80098ca:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 80098cc:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 80098d0:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 80098d2:	4a23      	ldr	r2, [pc, #140]	; (8009960 <TIM_Base_SetConfig+0xc4>)
 80098d4:	4290      	cmp	r0, r2
 80098d6:	d01d      	beq.n	8009914 <TIM_Base_SetConfig+0x78>
 80098d8:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80098dc:	d01a      	beq.n	8009914 <TIM_Base_SetConfig+0x78>
 80098de:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 80098e2:	4290      	cmp	r0, r2
 80098e4:	d016      	beq.n	8009914 <TIM_Base_SetConfig+0x78>
 80098e6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80098ea:	4290      	cmp	r0, r2
 80098ec:	d012      	beq.n	8009914 <TIM_Base_SetConfig+0x78>
 80098ee:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80098f2:	4290      	cmp	r0, r2
 80098f4:	d00e      	beq.n	8009914 <TIM_Base_SetConfig+0x78>
 80098f6:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 80098fa:	4290      	cmp	r0, r2
 80098fc:	d00a      	beq.n	8009914 <TIM_Base_SetConfig+0x78>
 80098fe:	4a19      	ldr	r2, [pc, #100]	; (8009964 <TIM_Base_SetConfig+0xc8>)
 8009900:	4290      	cmp	r0, r2
 8009902:	d007      	beq.n	8009914 <TIM_Base_SetConfig+0x78>
 8009904:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8009908:	4290      	cmp	r0, r2
 800990a:	d003      	beq.n	8009914 <TIM_Base_SetConfig+0x78>
 800990c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8009910:	4290      	cmp	r0, r2
 8009912:	d103      	bne.n	800991c <TIM_Base_SetConfig+0x80>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 8009914:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8009918:	68ca      	ldr	r2, [r1, #12]
 800991a:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800991c:	694a      	ldr	r2, [r1, #20]
 800991e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8009922:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 8009924:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8009926:	688b      	ldr	r3, [r1, #8]
 8009928:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800992a:	680b      	ldr	r3, [r1, #0]
 800992c:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800992e:	4b0c      	ldr	r3, [pc, #48]	; (8009960 <TIM_Base_SetConfig+0xc4>)
 8009930:	4298      	cmp	r0, r3
 8009932:	d00f      	beq.n	8009954 <TIM_Base_SetConfig+0xb8>
 8009934:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8009938:	4298      	cmp	r0, r3
 800993a:	d00b      	beq.n	8009954 <TIM_Base_SetConfig+0xb8>
 800993c:	f503 5370 	add.w	r3, r3, #15360	; 0x3c00
 8009940:	4298      	cmp	r0, r3
 8009942:	d007      	beq.n	8009954 <TIM_Base_SetConfig+0xb8>
 8009944:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8009948:	4298      	cmp	r0, r3
 800994a:	d003      	beq.n	8009954 <TIM_Base_SetConfig+0xb8>
 800994c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8009950:	4298      	cmp	r0, r3
 8009952:	d101      	bne.n	8009958 <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8009954:	690b      	ldr	r3, [r1, #16]
 8009956:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8009958:	2301      	movs	r3, #1
 800995a:	6143      	str	r3, [r0, #20]
}
 800995c:	4770      	bx	lr
 800995e:	bf00      	nop
 8009960:	40010000 	.word	0x40010000
 8009964:	40014000 	.word	0x40014000

08009968 <HAL_TIM_Base_Init>:
{
 8009968:	b510      	push	{r4, lr}
  if (htim == NULL)
 800996a:	4604      	mov	r4, r0
 800996c:	b350      	cbz	r0, 80099c4 <HAL_TIM_Base_Init+0x5c>
  if (htim->State == HAL_TIM_STATE_RESET)
 800996e:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8009972:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8009976:	b91b      	cbnz	r3, 8009980 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8009978:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800997c:	f7ff fe61 	bl	8009642 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8009980:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8009982:	6820      	ldr	r0, [r4, #0]
 8009984:	1d21      	adds	r1, r4, #4
  htim->State = HAL_TIM_STATE_BUSY;
 8009986:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800998a:	f7ff ff87 	bl	800989c <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800998e:	2301      	movs	r3, #1
  return HAL_OK;
 8009990:	2000      	movs	r0, #0
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8009992:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8009996:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800999a:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800999e:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 80099a2:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
 80099a6:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80099aa:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80099ae:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 80099b2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80099b6:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
 80099ba:	f884 3047 	strb.w	r3, [r4, #71]	; 0x47
  htim->State = HAL_TIM_STATE_READY;
 80099be:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
 80099c2:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80099c4:	2001      	movs	r0, #1
 80099c6:	e7fc      	b.n	80099c2 <HAL_TIM_Base_Init+0x5a>

080099c8 <HAL_TIMEx_CommutCallback>:
 80099c8:	4770      	bx	lr

080099ca <HAL_TIMEx_BreakCallback>:
 80099ca:	4770      	bx	lr

080099cc <HAL_TIMEx_Break2Callback>:
 80099cc:	4770      	bx	lr

080099ce <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 80099ce:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
 80099d2:	680a      	ldr	r2, [r1, #0]
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 80099d4:	f8d1 9024 	ldr.w	r9, [r1, #36]	; 0x24
 80099d8:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
 80099dc:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
 80099e0:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
 80099e4:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
 80099e8:	4323      	orrs	r3, r4
  if (Init->SDBank == FMC_SDRAM_BANK1)
 80099ea:	b9a2      	cbnz	r2, 8009a16 <FMC_SDRAM_Init+0x48>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 80099ec:	ea43 0209 	orr.w	r2, r3, r9
 80099f0:	6801      	ldr	r1, [r0, #0]
 80099f2:	432a      	orrs	r2, r5
 80099f4:	f421 41ff 	bic.w	r1, r1, #32640	; 0x7f80
 80099f8:	ea42 0308 	orr.w	r3, r2, r8
 80099fc:	f021 017f 	bic.w	r1, r1, #127	; 0x7f
 8009a00:	ea43 030e 	orr.w	r3, r3, lr
 8009a04:	ea43 030c 	orr.w	r3, r3, ip
 8009a08:	433b      	orrs	r3, r7
 8009a0a:	4333      	orrs	r3, r6
 8009a0c:	430b      	orrs	r3, r1
 8009a0e:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 8009a10:	2000      	movs	r0, #0
 8009a12:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8009a16:	6802      	ldr	r2, [r0, #0]
 8009a18:	ea43 0309 	orr.w	r3, r3, r9
 8009a1c:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
 8009a20:	4313      	orrs	r3, r2
 8009a22:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 8009a24:	ea45 0308 	orr.w	r3, r5, r8
 8009a28:	6842      	ldr	r2, [r0, #4]
 8009a2a:	ea43 030e 	orr.w	r3, r3, lr
 8009a2e:	f422 42ff 	bic.w	r2, r2, #32640	; 0x7f80
 8009a32:	ea43 030c 	orr.w	r3, r3, ip
 8009a36:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
 8009a3a:	433b      	orrs	r3, r7
 8009a3c:	4333      	orrs	r3, r6
 8009a3e:	4313      	orrs	r3, r2
 8009a40:	6043      	str	r3, [r0, #4]
 8009a42:	e7e5      	b.n	8009a10 <FMC_SDRAM_Init+0x42>

08009a44 <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8009a44:	68cb      	ldr	r3, [r1, #12]
 8009a46:	f103 3cff 	add.w	ip, r3, #4294967295
 8009a4a:	694b      	ldr	r3, [r1, #20]
{
 8009a4c:	b5f0      	push	{r4, r5, r6, r7, lr}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8009a4e:	3b01      	subs	r3, #1
 8009a50:	680f      	ldr	r7, [r1, #0]
 8009a52:	684c      	ldr	r4, [r1, #4]
 8009a54:	688e      	ldr	r6, [r1, #8]
 8009a56:	051b      	lsls	r3, r3, #20
 8009a58:	690d      	ldr	r5, [r1, #16]
 8009a5a:	3c01      	subs	r4, #1
 8009a5c:	6989      	ldr	r1, [r1, #24]
 8009a5e:	3e01      	subs	r6, #1
 8009a60:	3d01      	subs	r5, #1
 8009a62:	3f01      	subs	r7, #1
 8009a64:	3901      	subs	r1, #1
 8009a66:	0124      	lsls	r4, r4, #4
 8009a68:	0236      	lsls	r6, r6, #8
 8009a6a:	042d      	lsls	r5, r5, #16
 8009a6c:	0609      	lsls	r1, r1, #24
 8009a6e:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
  if (Bank == FMC_SDRAM_BANK1)
 8009a72:	b95a      	cbnz	r2, 8009a8c <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8009a74:	433b      	orrs	r3, r7
 8009a76:	6882      	ldr	r2, [r0, #8]
 8009a78:	4323      	orrs	r3, r4
 8009a7a:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
 8009a7e:	4333      	orrs	r3, r6
 8009a80:	432b      	orrs	r3, r5
 8009a82:	430b      	orrs	r3, r1
 8009a84:	4313      	orrs	r3, r2
 8009a86:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTRx_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTRx_TRCD_Pos)));
  }

  return HAL_OK;
}
 8009a88:	2000      	movs	r0, #0
 8009a8a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8009a8c:	6882      	ldr	r2, [r0, #8]
 8009a8e:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 8009a92:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
 8009a96:	431a      	orrs	r2, r3
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 8009a98:	ea44 0306 	orr.w	r3, r4, r6
 8009a9c:	433b      	orrs	r3, r7
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8009a9e:	6082      	str	r2, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 8009aa0:	68c2      	ldr	r2, [r0, #12]
 8009aa2:	432b      	orrs	r3, r5
 8009aa4:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
 8009aa8:	430b      	orrs	r3, r1
 8009aaa:	4313      	orrs	r3, r2
 8009aac:	60c3      	str	r3, [r0, #12]
 8009aae:	e7eb      	b.n	8009a88 <FMC_SDRAM_Timing_Init+0x44>

08009ab0 <FMC_SDRAM_DeInit>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
 8009ab0:	f44f 7234 	mov.w	r2, #720	; 0x2d0
 8009ab4:	eb00 0381 	add.w	r3, r0, r1, lsl #2
 8009ab8:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
  Device->SDTR[Bank] = 0x0FFFFFFFU;
 8009abc:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
 8009ac0:	609a      	str	r2, [r3, #8]
  Device->SDCMR      = 0x00000000U;
 8009ac2:	2300      	movs	r3, #0
 8009ac4:	6103      	str	r3, [r0, #16]
  Device->SDRTR      = 0x00000000U;
 8009ac6:	6143      	str	r3, [r0, #20]
  Device->SDSR       = 0x00000000U;
 8009ac8:	6183      	str	r3, [r0, #24]

  return HAL_OK;
}
 8009aca:	4618      	mov	r0, r3
 8009acc:	4770      	bx	lr

08009ace <FMC_SDRAM_SendCommand>:
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 8009ace:	6902      	ldr	r2, [r0, #16]
{
 8009ad0:	b510      	push	{r4, lr}
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 8009ad2:	e9d1 3400 	ldrd	r3, r4, [r1]
 8009ad6:	0d92      	lsrs	r2, r2, #22
 8009ad8:	4323      	orrs	r3, r4
 8009ada:	68cc      	ldr	r4, [r1, #12]
 8009adc:	0592      	lsls	r2, r2, #22
 8009ade:	ea43 2344 	orr.w	r3, r3, r4, lsl #9
 8009ae2:	4313      	orrs	r3, r2
 8009ae4:	688a      	ldr	r2, [r1, #8]
 8009ae6:	3a01      	subs	r2, #1
 8009ae8:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8009aec:	6103      	str	r3, [r0, #16]
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Timeout);
  return HAL_OK;
}
 8009aee:	2000      	movs	r0, #0
 8009af0:	bd10      	pop	{r4, pc}

08009af2 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 8009af2:	6943      	ldr	r3, [r0, #20]
 8009af4:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8009af8:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 8009afc:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 8009b00:	6141      	str	r1, [r0, #20]

  return HAL_OK;
}
 8009b02:	2000      	movs	r0, #0
 8009b04:	4770      	bx	lr

08009b06 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 8009b06:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 8009b08:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009b0c:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 8009b0e:	f001 fe03 	bl	800b718 <xTaskGetSchedulerState>
 8009b12:	2801      	cmp	r0, #1
 8009b14:	d003      	beq.n	8009b1e <SysTick_Handler+0x18>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 8009b16:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 8009b1a:	f000 bbcb 	b.w	800a2b4 <xPortSysTickHandler>
}
 8009b1e:	bd08      	pop	{r3, pc}

08009b20 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8009b20:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8009b24:	b92b      	cbnz	r3, 8009b32 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 8009b26:	4b06      	ldr	r3, [pc, #24]	; (8009b40 <osKernelInitialize+0x20>)
 8009b28:	6818      	ldr	r0, [r3, #0]
 8009b2a:	b928      	cbnz	r0, 8009b38 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8009b2c:	2201      	movs	r2, #1
 8009b2e:	601a      	str	r2, [r3, #0]
      stat = osOK;
 8009b30:	4770      	bx	lr
    stat = osErrorISR;
 8009b32:	f06f 0005 	mvn.w	r0, #5
 8009b36:	4770      	bx	lr
    } else {
      stat = osError;
 8009b38:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 8009b3c:	4770      	bx	lr
 8009b3e:	bf00      	nop
 8009b40:	240055b4 	.word	0x240055b4

08009b44 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8009b44:	b510      	push	{r4, lr}
 8009b46:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8009b4a:	b95c      	cbnz	r4, 8009b64 <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 8009b4c:	4b08      	ldr	r3, [pc, #32]	; (8009b70 <osKernelStart+0x2c>)
 8009b4e:	681a      	ldr	r2, [r3, #0]
 8009b50:	2a01      	cmp	r2, #1
 8009b52:	d10a      	bne.n	8009b6a <osKernelStart+0x26>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009b54:	4a07      	ldr	r2, [pc, #28]	; (8009b74 <osKernelStart+0x30>)
 8009b56:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 8009b58:	2202      	movs	r2, #2
 8009b5a:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 8009b5c:	f001 fc80 	bl	800b460 <vTaskStartScheduler>
      stat = osOK;
 8009b60:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 8009b62:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8009b64:	f06f 0005 	mvn.w	r0, #5
 8009b68:	e7fb      	b.n	8009b62 <osKernelStart+0x1e>
      stat = osError;
 8009b6a:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 8009b6e:	e7f8      	b.n	8009b62 <osKernelStart+0x1e>
 8009b70:	240055b4 	.word	0x240055b4
 8009b74:	e000ed00 	.word	0xe000ed00

08009b78 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8009b78:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009b7a:	4614      	mov	r4, r2
 8009b7c:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 8009b7e:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8009b80:	460b      	mov	r3, r1
  hTask = NULL;
 8009b82:	9205      	str	r2, [sp, #20]
 8009b84:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 8009b88:	b9d2      	cbnz	r2, 8009bc0 <osThreadNew+0x48>
 8009b8a:	b1c8      	cbz	r0, 8009bc0 <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8009b8c:	2c00      	cmp	r4, #0
 8009b8e:	d02f      	beq.n	8009bf0 <osThreadNew+0x78>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8009b90:	69a5      	ldr	r5, [r4, #24]
 8009b92:	2d00      	cmp	r5, #0
 8009b94:	bf08      	it	eq
 8009b96:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8009b98:	1e69      	subs	r1, r5, #1
 8009b9a:	46ac      	mov	ip, r5
 8009b9c:	2937      	cmp	r1, #55	; 0x37
 8009b9e:	d82b      	bhi.n	8009bf8 <osThreadNew+0x80>
 8009ba0:	6861      	ldr	r1, [r4, #4]
 8009ba2:	07c9      	lsls	r1, r1, #31
 8009ba4:	d428      	bmi.n	8009bf8 <osThreadNew+0x80>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 8009ba6:	6966      	ldr	r6, [r4, #20]
 8009ba8:	b16e      	cbz	r6, 8009bc6 <osThreadNew+0x4e>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8009baa:	08b2      	lsrs	r2, r6, #2
      if (attr->name != NULL) {
 8009bac:	6821      	ldr	r1, [r4, #0]
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8009bae:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
 8009bb2:	b157      	cbz	r7, 8009bca <osThreadNew+0x52>
 8009bb4:	f1be 0f5f 	cmp.w	lr, #95	; 0x5f
 8009bb8:	d902      	bls.n	8009bc0 <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8009bba:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8009bbc:	b104      	cbz	r4, 8009bc0 <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8009bbe:	b9ee      	cbnz	r6, 8009bfc <osThreadNew+0x84>
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 8009bc0:	9805      	ldr	r0, [sp, #20]
}
 8009bc2:	b007      	add	sp, #28
 8009bc4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8009bc6:	2280      	movs	r2, #128	; 0x80
 8009bc8:	e7f0      	b.n	8009bac <osThreadNew+0x34>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8009bca:	f1be 0f00 	cmp.w	lr, #0
 8009bce:	d1f7      	bne.n	8009bc0 <osThreadNew+0x48>
      if (mem == 0) {
 8009bd0:	6924      	ldr	r4, [r4, #16]
 8009bd2:	2c00      	cmp	r4, #0
 8009bd4:	d1f4      	bne.n	8009bc0 <osThreadNew+0x48>
 8009bd6:	460c      	mov	r4, r1
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8009bd8:	a905      	add	r1, sp, #20
 8009bda:	b292      	uxth	r2, r2
 8009bdc:	e9cd c100 	strd	ip, r1, [sp]
 8009be0:	4621      	mov	r1, r4
 8009be2:	f001 fadc 	bl	800b19e <xTaskCreate>
 8009be6:	2801      	cmp	r0, #1
            hTask = NULL;
 8009be8:	bf1c      	itt	ne
 8009bea:	2300      	movne	r3, #0
 8009bec:	9305      	strne	r3, [sp, #20]
 8009bee:	e7e7      	b.n	8009bc0 <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;
 8009bf0:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 8009bf4:	2280      	movs	r2, #128	; 0x80
 8009bf6:	e7ef      	b.n	8009bd8 <osThreadNew+0x60>
        return (NULL);
 8009bf8:	4610      	mov	r0, r2
 8009bfa:	e7e2      	b.n	8009bc2 <osThreadNew+0x4a>
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8009bfc:	e9cd 4701 	strd	r4, r7, [sp, #4]
 8009c00:	9500      	str	r5, [sp, #0]
 8009c02:	f001 fa94 	bl	800b12e <xTaskCreateStatic>
 8009c06:	9005      	str	r0, [sp, #20]
 8009c08:	e7da      	b.n	8009bc0 <osThreadNew+0x48>

08009c0a <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8009c0a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009c0c:	4604      	mov	r4, r0
 8009c0e:	460e      	mov	r6, r1
 8009c10:	4615      	mov	r5, r2
 8009c12:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8009c16:	b11a      	cbz	r2, 8009c20 <osSemaphoreNew+0x16>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 8009c18:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 8009c1a:	4620      	mov	r0, r4
 8009c1c:	b003      	add	sp, #12
 8009c1e:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8009c20:	2800      	cmp	r0, #0
 8009c22:	d0f9      	beq.n	8009c18 <osSemaphoreNew+0xe>
 8009c24:	4288      	cmp	r0, r1
 8009c26:	d3f7      	bcc.n	8009c18 <osSemaphoreNew+0xe>
    if (attr != NULL) {
 8009c28:	b1e5      	cbz	r5, 8009c64 <osSemaphoreNew+0x5a>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 8009c2a:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 8009c2e:	b1bb      	cbz	r3, 8009c60 <osSemaphoreNew+0x56>
 8009c30:	2f4f      	cmp	r7, #79	; 0x4f
 8009c32:	d9f1      	bls.n	8009c18 <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 8009c34:	2801      	cmp	r0, #1
 8009c36:	d12a      	bne.n	8009c8e <osSemaphoreNew+0x84>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8009c38:	2103      	movs	r1, #3
 8009c3a:	9100      	str	r1, [sp, #0]
 8009c3c:	4611      	mov	r1, r2
 8009c3e:	f000 fce1 	bl	800a604 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 8009c42:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8009c44:	2800      	cmp	r0, #0
 8009c46:	d0e7      	beq.n	8009c18 <osSemaphoreNew+0xe>
 8009c48:	b1de      	cbz	r6, 8009c82 <osSemaphoreNew+0x78>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8009c4a:	2300      	movs	r3, #0
 8009c4c:	461a      	mov	r2, r3
 8009c4e:	4619      	mov	r1, r3
 8009c50:	f000 fd8d 	bl	800a76e <xQueueGenericSend>
 8009c54:	2801      	cmp	r0, #1
 8009c56:	d014      	beq.n	8009c82 <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 8009c58:	4620      	mov	r0, r4
 8009c5a:	f001 f8c9 	bl	800adf0 <vQueueDelete>
 8009c5e:	e7db      	b.n	8009c18 <osSemaphoreNew+0xe>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8009c60:	2f00      	cmp	r7, #0
 8009c62:	d1d9      	bne.n	8009c18 <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 8009c64:	2c01      	cmp	r4, #1
 8009c66:	d105      	bne.n	8009c74 <osSemaphoreNew+0x6a>
            hSemaphore = xSemaphoreCreateBinary();
 8009c68:	2203      	movs	r2, #3
 8009c6a:	2100      	movs	r1, #0
 8009c6c:	4620      	mov	r0, r4
 8009c6e:	f000 fd17 	bl	800a6a0 <xQueueGenericCreate>
 8009c72:	e7e6      	b.n	8009c42 <osSemaphoreNew+0x38>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8009c74:	4620      	mov	r0, r4
 8009c76:	4631      	mov	r1, r6
 8009c78:	f000 fd5b 	bl	800a732 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8009c7c:	4604      	mov	r4, r0
 8009c7e:	2800      	cmp	r0, #0
 8009c80:	d0ca      	beq.n	8009c18 <osSemaphoreNew+0xe>
        if (attr != NULL) {
 8009c82:	b955      	cbnz	r5, 8009c9a <osSemaphoreNew+0x90>
        vQueueAddToRegistry (hSemaphore, name);
 8009c84:	4629      	mov	r1, r5
 8009c86:	4620      	mov	r0, r4
 8009c88:	f001 f88c 	bl	800ada4 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 8009c8c:	e7c5      	b.n	8009c1a <osSemaphoreNew+0x10>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 8009c8e:	461a      	mov	r2, r3
 8009c90:	f000 fd2d 	bl	800a6ee <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 8009c94:	4604      	mov	r4, r0
 8009c96:	2800      	cmp	r0, #0
 8009c98:	d0be      	beq.n	8009c18 <osSemaphoreNew+0xe>
          name = attr->name;
 8009c9a:	682d      	ldr	r5, [r5, #0]
 8009c9c:	e7f2      	b.n	8009c84 <osSemaphoreNew+0x7a>

08009c9e <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8009c9e:	b513      	push	{r0, r1, r4, lr}
 8009ca0:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8009ca2:	b308      	cbz	r0, 8009ce8 <osSemaphoreAcquire+0x4a>
 8009ca4:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8009ca8:	b1b3      	cbz	r3, 8009cd8 <osSemaphoreAcquire+0x3a>
    if (timeout != 0U) {
 8009caa:	b9e9      	cbnz	r1, 8009ce8 <osSemaphoreAcquire+0x4a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8009cac:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8009cae:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8009cb0:	f001 f828 	bl	800ad04 <xQueueReceiveFromISR>
 8009cb4:	2801      	cmp	r0, #1
 8009cb6:	d114      	bne.n	8009ce2 <osSemaphoreAcquire+0x44>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 8009cb8:	9b01      	ldr	r3, [sp, #4]
 8009cba:	b913      	cbnz	r3, 8009cc2 <osSemaphoreAcquire+0x24>
  stat = osOK;
 8009cbc:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 8009cbe:	b002      	add	sp, #8
 8009cc0:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 8009cc2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009cc6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009cca:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009cce:	f3bf 8f4f 	dsb	sy
 8009cd2:	f3bf 8f6f 	isb	sy
 8009cd6:	e7f1      	b.n	8009cbc <osSemaphoreAcquire+0x1e>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 8009cd8:	f000 ff51 	bl	800ab7e <xQueueSemaphoreTake>
 8009cdc:	2801      	cmp	r0, #1
 8009cde:	d0ed      	beq.n	8009cbc <osSemaphoreAcquire+0x1e>
      if (timeout != 0U) {
 8009ce0:	b92c      	cbnz	r4, 8009cee <osSemaphoreAcquire+0x50>
        stat = osErrorResource;
 8009ce2:	f06f 0002 	mvn.w	r0, #2
 8009ce6:	e7ea      	b.n	8009cbe <osSemaphoreAcquire+0x20>
    stat = osErrorParameter;
 8009ce8:	f06f 0003 	mvn.w	r0, #3
 8009cec:	e7e7      	b.n	8009cbe <osSemaphoreAcquire+0x20>
        stat = osErrorTimeout;
 8009cee:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8009cf2:	e7e4      	b.n	8009cbe <osSemaphoreAcquire+0x20>

08009cf4 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8009cf4:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8009cf6:	b310      	cbz	r0, 8009d3e <osSemaphoreRelease+0x4a>
 8009cf8:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8009cfc:	b1b3      	cbz	r3, 8009d2c <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 8009cfe:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8009d00:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 8009d02:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8009d04:	f000 fe48 	bl	800a998 <xQueueGiveFromISR>
 8009d08:	2801      	cmp	r0, #1
 8009d0a:	d115      	bne.n	8009d38 <osSemaphoreRelease+0x44>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 8009d0c:	9b01      	ldr	r3, [sp, #4]
 8009d0e:	b913      	cbnz	r3, 8009d16 <osSemaphoreRelease+0x22>
  stat = osOK;
 8009d10:	2000      	movs	r0, #0
      stat = osErrorResource;
    }
  }

  return (stat);
}
 8009d12:	b002      	add	sp, #8
 8009d14:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 8009d16:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009d1a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009d1e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009d22:	f3bf 8f4f 	dsb	sy
 8009d26:	f3bf 8f6f 	isb	sy
 8009d2a:	e7f1      	b.n	8009d10 <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8009d2c:	461a      	mov	r2, r3
 8009d2e:	4619      	mov	r1, r3
 8009d30:	f000 fd1d 	bl	800a76e <xQueueGenericSend>
 8009d34:	2801      	cmp	r0, #1
 8009d36:	d0eb      	beq.n	8009d10 <osSemaphoreRelease+0x1c>
      stat = osErrorResource;
 8009d38:	f06f 0002 	mvn.w	r0, #2
 8009d3c:	e7e9      	b.n	8009d12 <osSemaphoreRelease+0x1e>
    stat = osErrorParameter;
 8009d3e:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8009d42:	e7e6      	b.n	8009d12 <osSemaphoreRelease+0x1e>

08009d44 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8009d44:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009d46:	4605      	mov	r5, r0
 8009d48:	460e      	mov	r6, r1
 8009d4a:	4614      	mov	r4, r2
 8009d4c:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8009d50:	b11f      	cbz	r7, 8009d5a <osMessageQueueNew+0x16>
  hQueue = NULL;
 8009d52:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 8009d54:	4628      	mov	r0, r5
 8009d56:	b003      	add	sp, #12
 8009d58:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8009d5a:	2800      	cmp	r0, #0
 8009d5c:	d0f9      	beq.n	8009d52 <osMessageQueueNew+0xe>
 8009d5e:	2900      	cmp	r1, #0
 8009d60:	d0f7      	beq.n	8009d52 <osMessageQueueNew+0xe>
    if (attr != NULL) {
 8009d62:	b1da      	cbz	r2, 8009d9c <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8009d64:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 8009d68:	b183      	cbz	r3, 8009d8c <osMessageQueueNew+0x48>
 8009d6a:	2a4f      	cmp	r2, #79	; 0x4f
 8009d6c:	d9f1      	bls.n	8009d52 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8009d6e:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8009d70:	2a00      	cmp	r2, #0
 8009d72:	d0ee      	beq.n	8009d52 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8009d74:	434d      	muls	r5, r1
 8009d76:	6966      	ldr	r6, [r4, #20]
 8009d78:	42ae      	cmp	r6, r5
 8009d7a:	d3ea      	bcc.n	8009d52 <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 8009d7c:	9700      	str	r7, [sp, #0]
 8009d7e:	f000 fc41 	bl	800a604 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 8009d82:	4605      	mov	r5, r0
 8009d84:	2800      	cmp	r0, #0
 8009d86:	d0e4      	beq.n	8009d52 <osMessageQueueNew+0xe>
        name = attr->name;
 8009d88:	6824      	ldr	r4, [r4, #0]
 8009d8a:	e011      	b.n	8009db0 <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 8009d8c:	2a00      	cmp	r2, #0
 8009d8e:	d1e0      	bne.n	8009d52 <osMessageQueueNew+0xe>
 8009d90:	6923      	ldr	r3, [r4, #16]
 8009d92:	2b00      	cmp	r3, #0
 8009d94:	d1dd      	bne.n	8009d52 <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 8009d96:	6963      	ldr	r3, [r4, #20]
 8009d98:	2b00      	cmp	r3, #0
 8009d9a:	d1da      	bne.n	8009d52 <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 8009d9c:	4628      	mov	r0, r5
 8009d9e:	2200      	movs	r2, #0
 8009da0:	4631      	mov	r1, r6
 8009da2:	f000 fc7d 	bl	800a6a0 <xQueueGenericCreate>
    if (hQueue != NULL) {
 8009da6:	4605      	mov	r5, r0
 8009da8:	2800      	cmp	r0, #0
 8009daa:	d0d2      	beq.n	8009d52 <osMessageQueueNew+0xe>
      if (attr != NULL) {
 8009dac:	2c00      	cmp	r4, #0
 8009dae:	d1eb      	bne.n	8009d88 <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 8009db0:	4621      	mov	r1, r4
 8009db2:	4628      	mov	r0, r5
 8009db4:	f000 fff6 	bl	800ada4 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 8009db8:	e7cc      	b.n	8009d54 <osMessageQueueNew+0x10>

08009dba <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 8009dba:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009dbc:	461c      	mov	r4, r3
 8009dbe:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8009dc2:	b1c6      	cbz	r6, 8009df6 <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8009dc4:	b318      	cbz	r0, 8009e0e <osMessageQueuePut+0x54>
 8009dc6:	b311      	cbz	r1, 8009e0e <osMessageQueuePut+0x54>
 8009dc8:	bb0b      	cbnz	r3, 8009e0e <osMessageQueuePut+0x54>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8009dca:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8009dcc:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8009dce:	f000 fd81 	bl	800a8d4 <xQueueGenericSendFromISR>
 8009dd2:	2801      	cmp	r0, #1
 8009dd4:	d118      	bne.n	8009e08 <osMessageQueuePut+0x4e>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 8009dd6:	9b01      	ldr	r3, [sp, #4]
 8009dd8:	b913      	cbnz	r3, 8009de0 <osMessageQueuePut+0x26>
  stat = osOK;
 8009dda:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 8009ddc:	b002      	add	sp, #8
 8009dde:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 8009de0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009de4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009de8:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009dec:	f3bf 8f4f 	dsb	sy
 8009df0:	f3bf 8f6f 	isb	sy
 8009df4:	e7f1      	b.n	8009dda <osMessageQueuePut+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8009df6:	b150      	cbz	r0, 8009e0e <osMessageQueuePut+0x54>
 8009df8:	b149      	cbz	r1, 8009e0e <osMessageQueuePut+0x54>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8009dfa:	4633      	mov	r3, r6
 8009dfc:	4622      	mov	r2, r4
 8009dfe:	f000 fcb6 	bl	800a76e <xQueueGenericSend>
 8009e02:	2801      	cmp	r0, #1
 8009e04:	d0e9      	beq.n	8009dda <osMessageQueuePut+0x20>
        if (timeout != 0U) {
 8009e06:	b92c      	cbnz	r4, 8009e14 <osMessageQueuePut+0x5a>
          stat = osErrorResource;
 8009e08:	f06f 0002 	mvn.w	r0, #2
 8009e0c:	e7e6      	b.n	8009ddc <osMessageQueuePut+0x22>
      stat = osErrorParameter;
 8009e0e:	f06f 0003 	mvn.w	r0, #3
 8009e12:	e7e3      	b.n	8009ddc <osMessageQueuePut+0x22>
          stat = osErrorTimeout;
 8009e14:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8009e18:	e7e0      	b.n	8009ddc <osMessageQueuePut+0x22>

08009e1a <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8009e1a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009e1c:	461c      	mov	r4, r3
 8009e1e:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8009e22:	b1c3      	cbz	r3, 8009e56 <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8009e24:	b310      	cbz	r0, 8009e6c <osMessageQueueGet+0x52>
 8009e26:	b309      	cbz	r1, 8009e6c <osMessageQueueGet+0x52>
 8009e28:	bb04      	cbnz	r4, 8009e6c <osMessageQueueGet+0x52>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8009e2a:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8009e2c:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8009e2e:	f000 ff69 	bl	800ad04 <xQueueReceiveFromISR>
 8009e32:	2801      	cmp	r0, #1
 8009e34:	d117      	bne.n	8009e66 <osMessageQueueGet+0x4c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 8009e36:	9b01      	ldr	r3, [sp, #4]
 8009e38:	b913      	cbnz	r3, 8009e40 <osMessageQueueGet+0x26>
  stat = osOK;
 8009e3a:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 8009e3c:	b003      	add	sp, #12
 8009e3e:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 8009e40:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009e44:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009e48:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009e4c:	f3bf 8f4f 	dsb	sy
 8009e50:	f3bf 8f6f 	isb	sy
 8009e54:	e7f1      	b.n	8009e3a <osMessageQueueGet+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8009e56:	b148      	cbz	r0, 8009e6c <osMessageQueueGet+0x52>
 8009e58:	b141      	cbz	r1, 8009e6c <osMessageQueueGet+0x52>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8009e5a:	4622      	mov	r2, r4
 8009e5c:	f000 fdf0 	bl	800aa40 <xQueueReceive>
 8009e60:	2801      	cmp	r0, #1
 8009e62:	d0ea      	beq.n	8009e3a <osMessageQueueGet+0x20>
        if (timeout != 0U) {
 8009e64:	b92c      	cbnz	r4, 8009e72 <osMessageQueueGet+0x58>
          stat = osErrorResource;
 8009e66:	f06f 0002 	mvn.w	r0, #2
 8009e6a:	e7e7      	b.n	8009e3c <osMessageQueueGet+0x22>
      stat = osErrorParameter;
 8009e6c:	f06f 0003 	mvn.w	r0, #3
 8009e70:	e7e4      	b.n	8009e3c <osMessageQueueGet+0x22>
          stat = osErrorTimeout;
 8009e72:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8009e76:	e7e1      	b.n	8009e3c <osMessageQueueGet+0x22>

08009e78 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 8009e78:	4b03      	ldr	r3, [pc, #12]	; (8009e88 <vApplicationGetIdleTaskMemory+0x10>)
 8009e7a:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8009e7c:	4b03      	ldr	r3, [pc, #12]	; (8009e8c <vApplicationGetIdleTaskMemory+0x14>)
 8009e7e:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8009e80:	2380      	movs	r3, #128	; 0x80
 8009e82:	6013      	str	r3, [r2, #0]
}
 8009e84:	4770      	bx	lr
 8009e86:	bf00      	nop
 8009e88:	24005554 	.word	0x24005554
 8009e8c:	24005354 	.word	0x24005354

08009e90 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8009e90:	4b03      	ldr	r3, [pc, #12]	; (8009ea0 <vApplicationGetTimerTaskMemory+0x10>)
 8009e92:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8009e94:	4b03      	ldr	r3, [pc, #12]	; (8009ea4 <vApplicationGetTimerTaskMemory+0x14>)
 8009e96:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8009e98:	f44f 7380 	mov.w	r3, #256	; 0x100
 8009e9c:	6013      	str	r3, [r2, #0]
}
 8009e9e:	4770      	bx	lr
 8009ea0:	240059b8 	.word	0x240059b8
 8009ea4:	240055b8 	.word	0x240055b8

08009ea8 <prvInsertBlockIntoFreeList>:
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8009ea8:	4b0f      	ldr	r3, [pc, #60]	; (8009ee8 <prvInsertBlockIntoFreeList+0x40>)
{
 8009eaa:	b510      	push	{r4, lr}
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8009eac:	461a      	mov	r2, r3
 8009eae:	681b      	ldr	r3, [r3, #0]
 8009eb0:	4283      	cmp	r3, r0
 8009eb2:	d3fb      	bcc.n	8009eac <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 8009eb4:	6854      	ldr	r4, [r2, #4]
 8009eb6:	1911      	adds	r1, r2, r4
 8009eb8:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8009eba:	bf01      	itttt	eq
 8009ebc:	6841      	ldreq	r1, [r0, #4]
 8009ebe:	4610      	moveq	r0, r2
 8009ec0:	1909      	addeq	r1, r1, r4
 8009ec2:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8009ec4:	6844      	ldr	r4, [r0, #4]
 8009ec6:	1901      	adds	r1, r0, r4
 8009ec8:	428b      	cmp	r3, r1
 8009eca:	d107      	bne.n	8009edc <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8009ecc:	4907      	ldr	r1, [pc, #28]	; (8009eec <prvInsertBlockIntoFreeList+0x44>)
 8009ece:	6809      	ldr	r1, [r1, #0]
 8009ed0:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8009ed2:	bf1f      	itttt	ne
 8009ed4:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 8009ed6:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8009ed8:	1909      	addne	r1, r1, r4
 8009eda:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8009edc:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 8009ede:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8009ee0:	bf18      	it	ne
 8009ee2:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8009ee4:	bd10      	pop	{r4, pc}
 8009ee6:	bf00      	nop
 8009ee8:	2400da30 	.word	0x2400da30
 8009eec:	24005a18 	.word	0x24005a18

08009ef0 <pvPortMalloc>:
{
 8009ef0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009ef4:	4604      	mov	r4, r0
	vTaskSuspendAll();
 8009ef6:	f001 f97f 	bl	800b1f8 <vTaskSuspendAll>
		if( pxEnd == NULL )
 8009efa:	4842      	ldr	r0, [pc, #264]	; (800a004 <pvPortMalloc+0x114>)
 8009efc:	4d42      	ldr	r5, [pc, #264]	; (800a008 <pvPortMalloc+0x118>)
 8009efe:	6803      	ldr	r3, [r0, #0]
 8009f00:	bb0b      	cbnz	r3, 8009f46 <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 8009f02:	4942      	ldr	r1, [pc, #264]	; (800a00c <pvPortMalloc+0x11c>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8009f04:	074e      	lsls	r6, r1, #29
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8009f06:	4e42      	ldr	r6, [pc, #264]	; (800a010 <pvPortMalloc+0x120>)
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 8009f08:	bf1b      	ittet	ne
 8009f0a:	1dcb      	addne	r3, r1, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 8009f0c:	f501 4200 	addne.w	r2, r1, #32768	; 0x8000
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 8009f10:	f44f 4200 	moveq.w	r2, #32768	; 0x8000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8009f14:	f023 0307 	bicne.w	r3, r3, #7
 8009f18:	bf1c      	itt	ne
 8009f1a:	4619      	movne	r1, r3
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 8009f1c:	1ad2      	subne	r2, r2, r3
	xStart.xBlockSize = ( size_t ) 0;
 8009f1e:	2300      	movs	r3, #0
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 8009f20:	440a      	add	r2, r1
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8009f22:	6031      	str	r1, [r6, #0]
	xStart.xBlockSize = ( size_t ) 0;
 8009f24:	6073      	str	r3, [r6, #4]
	uxAddress -= xHeapStructSize;
 8009f26:	3a08      	subs	r2, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8009f28:	f022 0207 	bic.w	r2, r2, #7
	pxEnd->pxNextFreeBlock = NULL;
 8009f2c:	e9c2 3300 	strd	r3, r3, [r2]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8009f30:	1a53      	subs	r3, r2, r1
	pxEnd = ( void * ) uxAddress;
 8009f32:	6002      	str	r2, [r0, #0]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 8009f34:	e9c1 2300 	strd	r2, r3, [r1]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8009f38:	4a36      	ldr	r2, [pc, #216]	; (800a014 <pvPortMalloc+0x124>)
 8009f3a:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8009f3c:	4a36      	ldr	r2, [pc, #216]	; (800a018 <pvPortMalloc+0x128>)
 8009f3e:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8009f40:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8009f44:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 8009f46:	682f      	ldr	r7, [r5, #0]
 8009f48:	4227      	tst	r7, r4
 8009f4a:	d155      	bne.n	8009ff8 <pvPortMalloc+0x108>
			if( xWantedSize > 0 )
 8009f4c:	2c00      	cmp	r4, #0
 8009f4e:	d046      	beq.n	8009fde <pvPortMalloc+0xee>
				xWantedSize += xHeapStructSize;
 8009f50:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8009f54:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 8009f56:	bf1c      	itt	ne
 8009f58:	f023 0307 	bicne.w	r3, r3, #7
 8009f5c:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 8009f5e:	2b00      	cmp	r3, #0
 8009f60:	d04a      	beq.n	8009ff8 <pvPortMalloc+0x108>
 8009f62:	4c2d      	ldr	r4, [pc, #180]	; (800a018 <pvPortMalloc+0x128>)
 8009f64:	6826      	ldr	r6, [r4, #0]
 8009f66:	429e      	cmp	r6, r3
 8009f68:	d346      	bcc.n	8009ff8 <pvPortMalloc+0x108>
				pxBlock = xStart.pxNextFreeBlock;
 8009f6a:	4a29      	ldr	r2, [pc, #164]	; (800a010 <pvPortMalloc+0x120>)
 8009f6c:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 8009f6e:	6869      	ldr	r1, [r5, #4]
 8009f70:	4299      	cmp	r1, r3
 8009f72:	d204      	bcs.n	8009f7e <pvPortMalloc+0x8e>
 8009f74:	f8d5 c000 	ldr.w	ip, [r5]
 8009f78:	f1bc 0f00 	cmp.w	ip, #0
 8009f7c:	d115      	bne.n	8009faa <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 8009f7e:	6800      	ldr	r0, [r0, #0]
 8009f80:	42a8      	cmp	r0, r5
 8009f82:	d039      	beq.n	8009ff8 <pvPortMalloc+0x108>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8009f84:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8009f86:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8009f88:	f8d2 8000 	ldr.w	r8, [r2]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8009f8c:	2910      	cmp	r1, #16
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8009f8e:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8009f90:	d912      	bls.n	8009fb8 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 8009f92:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 8009f94:	0742      	lsls	r2, r0, #29
 8009f96:	d00b      	beq.n	8009fb0 <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 8009f98:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009f9c:	f383 8811 	msr	BASEPRI, r3
 8009fa0:	f3bf 8f6f 	isb	sy
 8009fa4:	f3bf 8f4f 	dsb	sy
 8009fa8:	e7fe      	b.n	8009fa8 <pvPortMalloc+0xb8>
 8009faa:	462a      	mov	r2, r5
 8009fac:	4665      	mov	r5, ip
 8009fae:	e7de      	b.n	8009f6e <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 8009fb0:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 8009fb2:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 8009fb4:	f7ff ff78 	bl	8009ea8 <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8009fb8:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8009fba:	4916      	ldr	r1, [pc, #88]	; (800a014 <pvPortMalloc+0x124>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8009fbc:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8009fbe:	431f      	orrs	r7, r3
					xNumberOfSuccessfulAllocations++;
 8009fc0:	4a16      	ldr	r2, [pc, #88]	; (800a01c <pvPortMalloc+0x12c>)
					pxBlock->pxNextFreeBlock = NULL;
 8009fc2:	2300      	movs	r3, #0
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8009fc4:	6808      	ldr	r0, [r1, #0]
					pxBlock->pxNextFreeBlock = NULL;
 8009fc6:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 8009fc8:	6813      	ldr	r3, [r2, #0]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8009fca:	4286      	cmp	r6, r0
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8009fcc:	6026      	str	r6, [r4, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8009fce:	f108 0408 	add.w	r4, r8, #8
					xNumberOfSuccessfulAllocations++;
 8009fd2:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8009fd6:	bf38      	it	cc
 8009fd8:	600e      	strcc	r6, [r1, #0]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8009fda:	606f      	str	r7, [r5, #4]
					xNumberOfSuccessfulAllocations++;
 8009fdc:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 8009fde:	f001 f9af 	bl	800b340 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 8009fe2:	0763      	lsls	r3, r4, #29
 8009fe4:	d00a      	beq.n	8009ffc <pvPortMalloc+0x10c>
 8009fe6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009fea:	f383 8811 	msr	BASEPRI, r3
 8009fee:	f3bf 8f6f 	isb	sy
 8009ff2:	f3bf 8f4f 	dsb	sy
 8009ff6:	e7fe      	b.n	8009ff6 <pvPortMalloc+0x106>
void *pvReturn = NULL;
 8009ff8:	2400      	movs	r4, #0
 8009ffa:	e7f0      	b.n	8009fde <pvPortMalloc+0xee>
}
 8009ffc:	4620      	mov	r0, r4
 8009ffe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a002:	bf00      	nop
 800a004:	24005a18 	.word	0x24005a18
 800a008:	2400da1c 	.word	0x2400da1c
 800a00c:	24005a1c 	.word	0x24005a1c
 800a010:	2400da30 	.word	0x2400da30
 800a014:	2400da24 	.word	0x2400da24
 800a018:	2400da20 	.word	0x2400da20
 800a01c:	2400da28 	.word	0x2400da28

0800a020 <vPortFree>:
{
 800a020:	b510      	push	{r4, lr}
	if( pv != NULL )
 800a022:	4604      	mov	r4, r0
 800a024:	b390      	cbz	r0, 800a08c <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800a026:	4a1a      	ldr	r2, [pc, #104]	; (800a090 <vPortFree+0x70>)
 800a028:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800a02c:	6812      	ldr	r2, [r2, #0]
 800a02e:	4213      	tst	r3, r2
 800a030:	d108      	bne.n	800a044 <vPortFree+0x24>
 800a032:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a036:	f383 8811 	msr	BASEPRI, r3
 800a03a:	f3bf 8f6f 	isb	sy
 800a03e:	f3bf 8f4f 	dsb	sy
 800a042:	e7fe      	b.n	800a042 <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800a044:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800a048:	b141      	cbz	r1, 800a05c <vPortFree+0x3c>
 800a04a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a04e:	f383 8811 	msr	BASEPRI, r3
 800a052:	f3bf 8f6f 	isb	sy
 800a056:	f3bf 8f4f 	dsb	sy
 800a05a:	e7fe      	b.n	800a05a <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800a05c:	ea23 0302 	bic.w	r3, r3, r2
 800a060:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 800a064:	f001 f8c8 	bl	800b1f8 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800a068:	4a0a      	ldr	r2, [pc, #40]	; (800a094 <vPortFree+0x74>)
 800a06a:	f854 3c04 	ldr.w	r3, [r4, #-4]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800a06e:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800a072:	6811      	ldr	r1, [r2, #0]
 800a074:	440b      	add	r3, r1
 800a076:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800a078:	f7ff ff16 	bl	8009ea8 <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 800a07c:	4a06      	ldr	r2, [pc, #24]	; (800a098 <vPortFree+0x78>)
 800a07e:	6813      	ldr	r3, [r2, #0]
 800a080:	3301      	adds	r3, #1
}
 800a082:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 800a086:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 800a088:	f001 b95a 	b.w	800b340 <xTaskResumeAll>
}
 800a08c:	bd10      	pop	{r4, pc}
 800a08e:	bf00      	nop
 800a090:	2400da1c 	.word	0x2400da1c
 800a094:	2400da20 	.word	0x2400da20
 800a098:	2400da2c 	.word	0x2400da2c

0800a09c <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800a09c:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800a0a0:	f04f 32ff 	mov.w	r2, #4294967295
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800a0a4:	6043      	str	r3, [r0, #4]

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800a0a6:	6103      	str	r3, [r0, #16]
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800a0a8:	e9c0 2302 	strd	r2, r3, [r0, #8]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800a0ac:	2300      	movs	r3, #0
 800a0ae:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800a0b0:	4770      	bx	lr

0800a0b2 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800a0b2:	2300      	movs	r3, #0
 800a0b4:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800a0b6:	4770      	bx	lr

0800a0b8 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800a0b8:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800a0ba:	689a      	ldr	r2, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 800a0bc:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800a0be:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800a0c0:	689a      	ldr	r2, [r3, #8]
 800a0c2:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800a0c4:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800a0c6:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800a0c8:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800a0ca:	3301      	adds	r3, #1
 800a0cc:	6003      	str	r3, [r0, #0]
}
 800a0ce:	4770      	bx	lr

0800a0d0 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800a0d0:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800a0d2:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800a0d4:	1c63      	adds	r3, r4, #1
 800a0d6:	d10a      	bne.n	800a0ee <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 800a0d8:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 800a0da:	685a      	ldr	r2, [r3, #4]
 800a0dc:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800a0de:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800a0e0:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800a0e2:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800a0e4:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800a0e6:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800a0e8:	3301      	adds	r3, #1
 800a0ea:	6003      	str	r3, [r0, #0]
}
 800a0ec:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800a0ee:	f100 0208 	add.w	r2, r0, #8
 800a0f2:	4613      	mov	r3, r2
 800a0f4:	6852      	ldr	r2, [r2, #4]
 800a0f6:	6815      	ldr	r5, [r2, #0]
 800a0f8:	42a5      	cmp	r5, r4
 800a0fa:	d9fa      	bls.n	800a0f2 <vListInsert+0x22>
 800a0fc:	e7ed      	b.n	800a0da <vListInsert+0xa>

0800a0fe <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 800a0fe:	6903      	ldr	r3, [r0, #16]

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800a100:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
 800a104:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800a106:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800a108:	6859      	ldr	r1, [r3, #4]
 800a10a:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800a10c:	bf08      	it	eq
 800a10e:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 800a110:	2200      	movs	r2, #0
 800a112:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800a114:	681a      	ldr	r2, [r3, #0]
 800a116:	3a01      	subs	r2, #1
 800a118:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 800a11a:	6818      	ldr	r0, [r3, #0]
}
 800a11c:	4770      	bx	lr
	...

0800a120 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800a120:	4808      	ldr	r0, [pc, #32]	; (800a144 <prvPortStartFirstTask+0x24>)
 800a122:	6800      	ldr	r0, [r0, #0]
 800a124:	6800      	ldr	r0, [r0, #0]
 800a126:	f380 8808 	msr	MSP, r0
 800a12a:	f04f 0000 	mov.w	r0, #0
 800a12e:	f380 8814 	msr	CONTROL, r0
 800a132:	b662      	cpsie	i
 800a134:	b661      	cpsie	f
 800a136:	f3bf 8f4f 	dsb	sy
 800a13a:	f3bf 8f6f 	isb	sy
 800a13e:	df00      	svc	0
 800a140:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800a142:	0000      	.short	0x0000
 800a144:	e000ed08 	.word	0xe000ed08

0800a148 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800a148:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800a158 <vPortEnableVFP+0x10>
 800a14c:	6801      	ldr	r1, [r0, #0]
 800a14e:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800a152:	6001      	str	r1, [r0, #0]
 800a154:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800a156:	0000      	.short	0x0000
 800a158:	e000ed88 	.word	0xe000ed88

0800a15c <prvTaskExitError>:
volatile uint32_t ulDummy = 0;
 800a15c:	2300      	movs	r3, #0
{
 800a15e:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800a160:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800a162:	4b0d      	ldr	r3, [pc, #52]	; (800a198 <prvTaskExitError+0x3c>)
 800a164:	681b      	ldr	r3, [r3, #0]
 800a166:	3301      	adds	r3, #1
 800a168:	d008      	beq.n	800a17c <prvTaskExitError+0x20>
 800a16a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a16e:	f383 8811 	msr	BASEPRI, r3
 800a172:	f3bf 8f6f 	isb	sy
 800a176:	f3bf 8f4f 	dsb	sy
 800a17a:	e7fe      	b.n	800a17a <prvTaskExitError+0x1e>
 800a17c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a180:	f383 8811 	msr	BASEPRI, r3
 800a184:	f3bf 8f6f 	isb	sy
 800a188:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800a18c:	9b01      	ldr	r3, [sp, #4]
 800a18e:	2b00      	cmp	r3, #0
 800a190:	d0fc      	beq.n	800a18c <prvTaskExitError+0x30>
}
 800a192:	b002      	add	sp, #8
 800a194:	4770      	bx	lr
 800a196:	bf00      	nop
 800a198:	24000058 	.word	0x24000058

0800a19c <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800a19c:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800a1a0:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 800a1a4:	f840 2c20 	str.w	r2, [r0, #-32]
}
 800a1a8:	3844      	subs	r0, #68	; 0x44
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800a1aa:	6403      	str	r3, [r0, #64]	; 0x40
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800a1ac:	4b03      	ldr	r3, [pc, #12]	; (800a1bc <pxPortInitialiseStack+0x20>)
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800a1ae:	63c1      	str	r1, [r0, #60]	; 0x3c
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800a1b0:	6383      	str	r3, [r0, #56]	; 0x38
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800a1b2:	f06f 0302 	mvn.w	r3, #2
 800a1b6:	6203      	str	r3, [r0, #32]
}
 800a1b8:	4770      	bx	lr
 800a1ba:	bf00      	nop
 800a1bc:	0800a15d 	.word	0x0800a15d

0800a1c0 <SVC_Handler>:
	__asm volatile (
 800a1c0:	4b07      	ldr	r3, [pc, #28]	; (800a1e0 <pxCurrentTCBConst2>)
 800a1c2:	6819      	ldr	r1, [r3, #0]
 800a1c4:	6808      	ldr	r0, [r1, #0]
 800a1c6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a1ca:	f380 8809 	msr	PSP, r0
 800a1ce:	f3bf 8f6f 	isb	sy
 800a1d2:	f04f 0000 	mov.w	r0, #0
 800a1d6:	f380 8811 	msr	BASEPRI, r0
 800a1da:	4770      	bx	lr
 800a1dc:	f3af 8000 	nop.w

0800a1e0 <pxCurrentTCBConst2>:
 800a1e0:	2400da80 	.word	0x2400da80

0800a1e4 <vPortEnterCritical>:
 800a1e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a1e8:	f383 8811 	msr	BASEPRI, r3
 800a1ec:	f3bf 8f6f 	isb	sy
 800a1f0:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800a1f4:	4a0a      	ldr	r2, [pc, #40]	; (800a220 <vPortEnterCritical+0x3c>)
 800a1f6:	6813      	ldr	r3, [r2, #0]
 800a1f8:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800a1fa:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800a1fc:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800a1fe:	d10e      	bne.n	800a21e <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800a200:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a204:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 800a208:	b2db      	uxtb	r3, r3
 800a20a:	b143      	cbz	r3, 800a21e <vPortEnterCritical+0x3a>
 800a20c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a210:	f383 8811 	msr	BASEPRI, r3
 800a214:	f3bf 8f6f 	isb	sy
 800a218:	f3bf 8f4f 	dsb	sy
 800a21c:	e7fe      	b.n	800a21c <vPortEnterCritical+0x38>
}
 800a21e:	4770      	bx	lr
 800a220:	24000058 	.word	0x24000058

0800a224 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800a224:	4a08      	ldr	r2, [pc, #32]	; (800a248 <vPortExitCritical+0x24>)
 800a226:	6813      	ldr	r3, [r2, #0]
 800a228:	b943      	cbnz	r3, 800a23c <vPortExitCritical+0x18>
 800a22a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a22e:	f383 8811 	msr	BASEPRI, r3
 800a232:	f3bf 8f6f 	isb	sy
 800a236:	f3bf 8f4f 	dsb	sy
 800a23a:	e7fe      	b.n	800a23a <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800a23c:	3b01      	subs	r3, #1
 800a23e:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800a240:	b90b      	cbnz	r3, 800a246 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800a242:	f383 8811 	msr	BASEPRI, r3
}
 800a246:	4770      	bx	lr
 800a248:	24000058 	.word	0x24000058
 800a24c:	00000000 	.word	0x00000000

0800a250 <PendSV_Handler>:
	__asm volatile
 800a250:	f3ef 8009 	mrs	r0, PSP
 800a254:	f3bf 8f6f 	isb	sy
 800a258:	4b15      	ldr	r3, [pc, #84]	; (800a2b0 <pxCurrentTCBConst>)
 800a25a:	681a      	ldr	r2, [r3, #0]
 800a25c:	f01e 0f10 	tst.w	lr, #16
 800a260:	bf08      	it	eq
 800a262:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800a266:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a26a:	6010      	str	r0, [r2, #0]
 800a26c:	e92d 0009 	stmdb	sp!, {r0, r3}
 800a270:	f04f 0050 	mov.w	r0, #80	; 0x50
 800a274:	f380 8811 	msr	BASEPRI, r0
 800a278:	f3bf 8f4f 	dsb	sy
 800a27c:	f3bf 8f6f 	isb	sy
 800a280:	f001 f93c 	bl	800b4fc <vTaskSwitchContext>
 800a284:	f04f 0000 	mov.w	r0, #0
 800a288:	f380 8811 	msr	BASEPRI, r0
 800a28c:	bc09      	pop	{r0, r3}
 800a28e:	6819      	ldr	r1, [r3, #0]
 800a290:	6808      	ldr	r0, [r1, #0]
 800a292:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a296:	f01e 0f10 	tst.w	lr, #16
 800a29a:	bf08      	it	eq
 800a29c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800a2a0:	f380 8809 	msr	PSP, r0
 800a2a4:	f3bf 8f6f 	isb	sy
 800a2a8:	4770      	bx	lr
 800a2aa:	bf00      	nop
 800a2ac:	f3af 8000 	nop.w

0800a2b0 <pxCurrentTCBConst>:
 800a2b0:	2400da80 	.word	0x2400da80

0800a2b4 <xPortSysTickHandler>:
{
 800a2b4:	b508      	push	{r3, lr}
	__asm volatile
 800a2b6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a2ba:	f383 8811 	msr	BASEPRI, r3
 800a2be:	f3bf 8f6f 	isb	sy
 800a2c2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800a2c6:	f000 ffa5 	bl	800b214 <xTaskIncrementTick>
 800a2ca:	b128      	cbz	r0, 800a2d8 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800a2cc:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a2d0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a2d4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 800a2d8:	2300      	movs	r3, #0
 800a2da:	f383 8811 	msr	BASEPRI, r3
}
 800a2de:	bd08      	pop	{r3, pc}

0800a2e0 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800a2e0:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800a2e4:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800a2e6:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800a2ea:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800a2ec:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800a2ee:	4b04      	ldr	r3, [pc, #16]	; (800a300 <vPortSetupTimerInterrupt+0x20>)
 800a2f0:	681b      	ldr	r3, [r3, #0]
 800a2f2:	fbb3 f3f1 	udiv	r3, r3, r1
 800a2f6:	3b01      	subs	r3, #1
 800a2f8:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800a2fa:	2307      	movs	r3, #7
 800a2fc:	6113      	str	r3, [r2, #16]
}
 800a2fe:	4770      	bx	lr
 800a300:	24000048 	.word	0x24000048

0800a304 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800a304:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
{
 800a308:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800a30a:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800a30e:	4a3a      	ldr	r2, [pc, #232]	; (800a3f8 <xPortStartScheduler+0xf4>)
 800a310:	4291      	cmp	r1, r2
 800a312:	d108      	bne.n	800a326 <xPortStartScheduler+0x22>
	__asm volatile
 800a314:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a318:	f383 8811 	msr	BASEPRI, r3
 800a31c:	f3bf 8f6f 	isb	sy
 800a320:	f3bf 8f4f 	dsb	sy
 800a324:	e7fe      	b.n	800a324 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800a326:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800a32a:	4b34      	ldr	r3, [pc, #208]	; (800a3fc <xPortStartScheduler+0xf8>)
 800a32c:	429a      	cmp	r2, r3
 800a32e:	d108      	bne.n	800a342 <xPortStartScheduler+0x3e>
 800a330:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a334:	f383 8811 	msr	BASEPRI, r3
 800a338:	f3bf 8f6f 	isb	sy
 800a33c:	f3bf 8f4f 	dsb	sy
 800a340:	e7fe      	b.n	800a340 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800a342:	4b2f      	ldr	r3, [pc, #188]	; (800a400 <xPortStartScheduler+0xfc>)
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800a344:	2100      	movs	r1, #0
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800a346:	781a      	ldrb	r2, [r3, #0]
 800a348:	b2d2      	uxtb	r2, r2
 800a34a:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800a34c:	22ff      	movs	r2, #255	; 0xff
 800a34e:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800a350:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800a352:	4a2c      	ldr	r2, [pc, #176]	; (800a404 <xPortStartScheduler+0x100>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800a354:	b2db      	uxtb	r3, r3
 800a356:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800a35a:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800a35e:	f003 0350 	and.w	r3, r3, #80	; 0x50
 800a362:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800a364:	2307      	movs	r3, #7
 800a366:	4a28      	ldr	r2, [pc, #160]	; (800a408 <xPortStartScheduler+0x104>)
 800a368:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800a36a:	f89d 0003 	ldrb.w	r0, [sp, #3]
 800a36e:	1e5c      	subs	r4, r3, #1
 800a370:	0600      	lsls	r0, r0, #24
 800a372:	d40c      	bmi.n	800a38e <xPortStartScheduler+0x8a>
 800a374:	b111      	cbz	r1, 800a37c <xPortStartScheduler+0x78>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800a376:	2b03      	cmp	r3, #3
 800a378:	6013      	str	r3, [r2, #0]
 800a37a:	d011      	beq.n	800a3a0 <xPortStartScheduler+0x9c>
 800a37c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a380:	f383 8811 	msr	BASEPRI, r3
 800a384:	f3bf 8f6f 	isb	sy
 800a388:	f3bf 8f4f 	dsb	sy
 800a38c:	e7fe      	b.n	800a38c <xPortStartScheduler+0x88>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800a38e:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800a392:	2101      	movs	r1, #1
 800a394:	005b      	lsls	r3, r3, #1
 800a396:	b2db      	uxtb	r3, r3
 800a398:	f88d 3003 	strb.w	r3, [sp, #3]
 800a39c:	4623      	mov	r3, r4
 800a39e:	e7e4      	b.n	800a36a <xPortStartScheduler+0x66>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800a3a0:	f44f 7340 	mov.w	r3, #768	; 0x300
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800a3a4:	f04f 24e0 	mov.w	r4, #3758153728	; 0xe000e000
	uxCriticalNesting = 0;
 800a3a8:	2500      	movs	r5, #0
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800a3aa:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800a3ac:	9b01      	ldr	r3, [sp, #4]
 800a3ae:	4a14      	ldr	r2, [pc, #80]	; (800a400 <xPortStartScheduler+0xfc>)
 800a3b0:	b2db      	uxtb	r3, r3
 800a3b2:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800a3b4:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 800a3b8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800a3bc:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800a3c0:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 800a3c4:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800a3c8:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
 800a3cc:	f7ff ff88 	bl	800a2e0 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800a3d0:	4b0e      	ldr	r3, [pc, #56]	; (800a40c <xPortStartScheduler+0x108>)
 800a3d2:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 800a3d4:	f7ff feb8 	bl	800a148 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800a3d8:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	; 0xf34
 800a3dc:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800a3e0:	f8c4 3f34 	str.w	r3, [r4, #3892]	; 0xf34
	prvPortStartFirstTask();
 800a3e4:	f7ff fe9c 	bl	800a120 <prvPortStartFirstTask>
	vTaskSwitchContext();
 800a3e8:	f001 f888 	bl	800b4fc <vTaskSwitchContext>
}
 800a3ec:	4628      	mov	r0, r5
	prvTaskExitError();
 800a3ee:	f7ff feb5 	bl	800a15c <prvTaskExitError>
}
 800a3f2:	b003      	add	sp, #12
 800a3f4:	bd30      	pop	{r4, r5, pc}
 800a3f6:	bf00      	nop
 800a3f8:	410fc271 	.word	0x410fc271
 800a3fc:	410fc270 	.word	0x410fc270
 800a400:	e000e400 	.word	0xe000e400
 800a404:	2400da38 	.word	0x2400da38
 800a408:	2400da3c 	.word	0x2400da3c
 800a40c:	24000058 	.word	0x24000058

0800a410 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800a410:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800a414:	2b0f      	cmp	r3, #15
 800a416:	d90e      	bls.n	800a436 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800a418:	4a11      	ldr	r2, [pc, #68]	; (800a460 <vPortValidateInterruptPriority+0x50>)
 800a41a:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800a41c:	4a11      	ldr	r2, [pc, #68]	; (800a464 <vPortValidateInterruptPriority+0x54>)
 800a41e:	7812      	ldrb	r2, [r2, #0]
 800a420:	429a      	cmp	r2, r3
 800a422:	d908      	bls.n	800a436 <vPortValidateInterruptPriority+0x26>
 800a424:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a428:	f383 8811 	msr	BASEPRI, r3
 800a42c:	f3bf 8f6f 	isb	sy
 800a430:	f3bf 8f4f 	dsb	sy
 800a434:	e7fe      	b.n	800a434 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800a436:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a43a:	4a0b      	ldr	r2, [pc, #44]	; (800a468 <vPortValidateInterruptPriority+0x58>)
 800a43c:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 800a440:	6812      	ldr	r2, [r2, #0]
 800a442:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800a446:	4293      	cmp	r3, r2
 800a448:	d908      	bls.n	800a45c <vPortValidateInterruptPriority+0x4c>
 800a44a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a44e:	f383 8811 	msr	BASEPRI, r3
 800a452:	f3bf 8f6f 	isb	sy
 800a456:	f3bf 8f4f 	dsb	sy
 800a45a:	e7fe      	b.n	800a45a <vPortValidateInterruptPriority+0x4a>
	}
 800a45c:	4770      	bx	lr
 800a45e:	bf00      	nop
 800a460:	e000e3f0 	.word	0xe000e3f0
 800a464:	2400da38 	.word	0x2400da38
 800a468:	2400da3c 	.word	0x2400da3c

0800a46c <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 800a46c:	b510      	push	{r4, lr}
 800a46e:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800a470:	f7ff feb8 	bl	800a1e4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800a474:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800a476:	f7ff fed5 	bl	800a224 <vPortExitCritical>

	return xReturn;
}
 800a47a:	fab4 f084 	clz	r0, r4
 800a47e:	0940      	lsrs	r0, r0, #5
 800a480:	bd10      	pop	{r4, pc}

0800a482 <prvCopyDataToQueue>:
{
 800a482:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a484:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800a486:	6c02      	ldr	r2, [r0, #64]	; 0x40
{
 800a488:	4604      	mov	r4, r0
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800a48a:	6b86      	ldr	r6, [r0, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800a48c:	b952      	cbnz	r2, 800a4a4 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800a48e:	6807      	ldr	r7, [r0, #0]
 800a490:	bb47      	cbnz	r7, 800a4e4 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800a492:	6880      	ldr	r0, [r0, #8]
 800a494:	f001 f990 	bl	800b7b8 <xTaskPriorityDisinherit>
 800a498:	4605      	mov	r5, r0
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800a49a:	60a7      	str	r7, [r4, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800a49c:	3601      	adds	r6, #1
}
 800a49e:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800a4a0:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800a4a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800a4a4:	b965      	cbnz	r5, 800a4c0 <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800a4a6:	6840      	ldr	r0, [r0, #4]
 800a4a8:	f015 fe18 	bl	80200dc <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800a4ac:	6863      	ldr	r3, [r4, #4]
 800a4ae:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a4b0:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800a4b2:	68a2      	ldr	r2, [r4, #8]
 800a4b4:	4293      	cmp	r3, r2
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800a4b6:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800a4b8:	d3f0      	bcc.n	800a49c <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800a4ba:	6823      	ldr	r3, [r4, #0]
 800a4bc:	6063      	str	r3, [r4, #4]
 800a4be:	e7ed      	b.n	800a49c <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800a4c0:	68c0      	ldr	r0, [r0, #12]
 800a4c2:	f015 fe0b 	bl	80200dc <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800a4c6:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a4c8:	68e3      	ldr	r3, [r4, #12]
 800a4ca:	4251      	negs	r1, r2
 800a4cc:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800a4ce:	6822      	ldr	r2, [r4, #0]
 800a4d0:	4293      	cmp	r3, r2
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800a4d2:	60e3      	str	r3, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800a4d4:	bf3e      	ittt	cc
 800a4d6:	68a3      	ldrcc	r3, [r4, #8]
 800a4d8:	185b      	addcc	r3, r3, r1
 800a4da:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800a4dc:	2d02      	cmp	r5, #2
 800a4de:	d101      	bne.n	800a4e4 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800a4e0:	b116      	cbz	r6, 800a4e8 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 800a4e2:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 800a4e4:	2500      	movs	r5, #0
 800a4e6:	e7d9      	b.n	800a49c <prvCopyDataToQueue+0x1a>
 800a4e8:	4635      	mov	r5, r6
 800a4ea:	e7d7      	b.n	800a49c <prvCopyDataToQueue+0x1a>

0800a4ec <prvCopyDataFromQueue>:
{
 800a4ec:	4603      	mov	r3, r0
 800a4ee:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800a4f0:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 800a4f2:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800a4f4:	b162      	cbz	r2, 800a510 <prvCopyDataFromQueue+0x24>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800a4f6:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800a4f8:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800a4fa:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800a4fc:	428c      	cmp	r4, r1
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800a4fe:	60dc      	str	r4, [r3, #12]
}
 800a500:	f85d 4b04 	ldr.w	r4, [sp], #4
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800a504:	bf24      	itt	cs
 800a506:	6819      	ldrcs	r1, [r3, #0]
 800a508:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800a50a:	68d9      	ldr	r1, [r3, #12]
 800a50c:	f015 bde6 	b.w	80200dc <memcpy>
}
 800a510:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a514:	4770      	bx	lr

0800a516 <prvUnlockQueue>:
{
 800a516:	b570      	push	{r4, r5, r6, lr}
 800a518:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800a51a:	f7ff fe63 	bl	800a1e4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800a51e:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800a522:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 800a526:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800a528:	2d00      	cmp	r5, #0
 800a52a:	dc14      	bgt.n	800a556 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 800a52c:	23ff      	movs	r3, #255	; 0xff
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800a52e:	f104 0610 	add.w	r6, r4, #16
		pxQueue->cTxLock = queueUNLOCKED;
 800a532:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800a536:	f7ff fe75 	bl	800a224 <vPortExitCritical>
	taskENTER_CRITICAL();
 800a53a:	f7ff fe53 	bl	800a1e4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800a53e:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
 800a542:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800a544:	2d00      	cmp	r5, #0
 800a546:	dc12      	bgt.n	800a56e <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 800a548:	23ff      	movs	r3, #255	; 0xff
 800a54a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 800a54e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800a552:	f7ff be67 	b.w	800a224 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800a556:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a558:	2b00      	cmp	r3, #0
 800a55a:	d0e7      	beq.n	800a52c <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800a55c:	4630      	mov	r0, r6
 800a55e:	f001 f849 	bl	800b5f4 <xTaskRemoveFromEventList>
 800a562:	b108      	cbz	r0, 800a568 <prvUnlockQueue+0x52>
						vTaskMissedYield();
 800a564:	f001 f8d2 	bl	800b70c <vTaskMissedYield>
			--cTxLock;
 800a568:	3d01      	subs	r5, #1
 800a56a:	b26d      	sxtb	r5, r5
 800a56c:	e7dc      	b.n	800a528 <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800a56e:	6923      	ldr	r3, [r4, #16]
 800a570:	2b00      	cmp	r3, #0
 800a572:	d0e9      	beq.n	800a548 <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800a574:	4630      	mov	r0, r6
 800a576:	f001 f83d 	bl	800b5f4 <xTaskRemoveFromEventList>
 800a57a:	b108      	cbz	r0, 800a580 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 800a57c:	f001 f8c6 	bl	800b70c <vTaskMissedYield>
				--cRxLock;
 800a580:	3d01      	subs	r5, #1
 800a582:	b26d      	sxtb	r5, r5
 800a584:	e7de      	b.n	800a544 <prvUnlockQueue+0x2e>

0800a586 <xQueueGenericReset>:
{
 800a586:	b538      	push	{r3, r4, r5, lr}
 800a588:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800a58a:	4604      	mov	r4, r0
 800a58c:	b940      	cbnz	r0, 800a5a0 <xQueueGenericReset+0x1a>
 800a58e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a592:	f383 8811 	msr	BASEPRI, r3
 800a596:	f3bf 8f6f 	isb	sy
 800a59a:	f3bf 8f4f 	dsb	sy
 800a59e:	e7fe      	b.n	800a59e <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 800a5a0:	f7ff fe20 	bl	800a1e4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800a5a4:	6822      	ldr	r2, [r4, #0]
 800a5a6:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800a5aa:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800a5ac:	434b      	muls	r3, r1
 800a5ae:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800a5b0:	1a5b      	subs	r3, r3, r1
 800a5b2:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800a5b4:	60a0      	str	r0, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800a5b6:	2000      	movs	r0, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800a5b8:	60e3      	str	r3, [r4, #12]
		pxQueue->cRxLock = queueUNLOCKED;
 800a5ba:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800a5bc:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800a5be:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 800a5c2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 800a5c6:	b9a5      	cbnz	r5, 800a5f2 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800a5c8:	6923      	ldr	r3, [r4, #16]
 800a5ca:	b173      	cbz	r3, 800a5ea <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800a5cc:	f104 0010 	add.w	r0, r4, #16
 800a5d0:	f001 f810 	bl	800b5f4 <xTaskRemoveFromEventList>
 800a5d4:	b148      	cbz	r0, 800a5ea <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 800a5d6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a5da:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a5de:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a5e2:	f3bf 8f4f 	dsb	sy
 800a5e6:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 800a5ea:	f7ff fe1b 	bl	800a224 <vPortExitCritical>
}
 800a5ee:	2001      	movs	r0, #1
 800a5f0:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800a5f2:	f104 0010 	add.w	r0, r4, #16
 800a5f6:	f7ff fd51 	bl	800a09c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800a5fa:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800a5fe:	f7ff fd4d 	bl	800a09c <vListInitialise>
 800a602:	e7f2      	b.n	800a5ea <xQueueGenericReset+0x64>

0800a604 <xQueueGenericCreateStatic>:
	{
 800a604:	b513      	push	{r0, r1, r4, lr}
 800a606:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800a608:	b940      	cbnz	r0, 800a61c <xQueueGenericCreateStatic+0x18>
 800a60a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a60e:	f383 8811 	msr	BASEPRI, r3
 800a612:	f3bf 8f6f 	isb	sy
 800a616:	f3bf 8f4f 	dsb	sy
 800a61a:	e7fe      	b.n	800a61a <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 800a61c:	b943      	cbnz	r3, 800a630 <xQueueGenericCreateStatic+0x2c>
 800a61e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a622:	f383 8811 	msr	BASEPRI, r3
 800a626:	f3bf 8f6f 	isb	sy
 800a62a:	f3bf 8f4f 	dsb	sy
 800a62e:	e7fe      	b.n	800a62e <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800a630:	b14a      	cbz	r2, 800a646 <xQueueGenericCreateStatic+0x42>
 800a632:	b991      	cbnz	r1, 800a65a <xQueueGenericCreateStatic+0x56>
 800a634:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a638:	f383 8811 	msr	BASEPRI, r3
 800a63c:	f3bf 8f6f 	isb	sy
 800a640:	f3bf 8f4f 	dsb	sy
 800a644:	e7fe      	b.n	800a644 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800a646:	b141      	cbz	r1, 800a65a <xQueueGenericCreateStatic+0x56>
 800a648:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a64c:	f383 8811 	msr	BASEPRI, r3
 800a650:	f3bf 8f6f 	isb	sy
 800a654:	f3bf 8f4f 	dsb	sy
 800a658:	e7fe      	b.n	800a658 <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800a65a:	2350      	movs	r3, #80	; 0x50
 800a65c:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800a65e:	9b01      	ldr	r3, [sp, #4]
 800a660:	2b50      	cmp	r3, #80	; 0x50
 800a662:	d008      	beq.n	800a676 <xQueueGenericCreateStatic+0x72>
 800a664:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a668:	f383 8811 	msr	BASEPRI, r3
 800a66c:	f3bf 8f6f 	isb	sy
 800a670:	f3bf 8f4f 	dsb	sy
 800a674:	e7fe      	b.n	800a674 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 800a676:	2900      	cmp	r1, #0
 800a678:	bf08      	it	eq
 800a67a:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800a67c:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800a67e:	2301      	movs	r3, #1
 800a680:	6022      	str	r2, [r4, #0]
 800a682:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	pxNewQueue->uxItemSize = uxItemSize;
 800a686:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800a68a:	4619      	mov	r1, r3
 800a68c:	4620      	mov	r0, r4
 800a68e:	f7ff ff7a 	bl	800a586 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 800a692:	f89d 3010 	ldrb.w	r3, [sp, #16]
	}
 800a696:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
 800a698:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 800a69c:	b002      	add	sp, #8
 800a69e:	bd10      	pop	{r4, pc}

0800a6a0 <xQueueGenericCreate>:
	{
 800a6a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a6a2:	460d      	mov	r5, r1
 800a6a4:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800a6a6:	4606      	mov	r6, r0
 800a6a8:	b940      	cbnz	r0, 800a6bc <xQueueGenericCreate+0x1c>
 800a6aa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a6ae:	f383 8811 	msr	BASEPRI, r3
 800a6b2:	f3bf 8f6f 	isb	sy
 800a6b6:	f3bf 8f4f 	dsb	sy
 800a6ba:	e7fe      	b.n	800a6ba <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a6bc:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800a6be:	3050      	adds	r0, #80	; 0x50
 800a6c0:	f7ff fc16 	bl	8009ef0 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800a6c4:	4604      	mov	r4, r0
 800a6c6:	b170      	cbz	r0, 800a6e6 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800a6c8:	2300      	movs	r3, #0
 800a6ca:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800a6ce:	b165      	cbz	r5, 800a6ea <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800a6d0:	f100 0350 	add.w	r3, r0, #80	; 0x50
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800a6d4:	2101      	movs	r1, #1
 800a6d6:	4620      	mov	r0, r4
 800a6d8:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800a6da:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800a6de:	f7ff ff52 	bl	800a586 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 800a6e2:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 800a6e6:	4620      	mov	r0, r4
 800a6e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a6ea:	4603      	mov	r3, r0
 800a6ec:	e7f2      	b.n	800a6d4 <xQueueGenericCreate+0x34>

0800a6ee <xQueueCreateCountingSemaphoreStatic>:
	{
 800a6ee:	b513      	push	{r0, r1, r4, lr}
 800a6f0:	4613      	mov	r3, r2
 800a6f2:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 800a6f4:	b940      	cbnz	r0, 800a708 <xQueueCreateCountingSemaphoreStatic+0x1a>
 800a6f6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a6fa:	f383 8811 	msr	BASEPRI, r3
 800a6fe:	f3bf 8f6f 	isb	sy
 800a702:	f3bf 8f4f 	dsb	sy
 800a706:	e7fe      	b.n	800a706 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 800a708:	4288      	cmp	r0, r1
 800a70a:	d208      	bcs.n	800a71e <xQueueCreateCountingSemaphoreStatic+0x30>
 800a70c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a710:	f383 8811 	msr	BASEPRI, r3
 800a714:	f3bf 8f6f 	isb	sy
 800a718:	f3bf 8f4f 	dsb	sy
 800a71c:	e7fe      	b.n	800a71c <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800a71e:	2202      	movs	r2, #2
 800a720:	9200      	str	r2, [sp, #0]
 800a722:	2200      	movs	r2, #0
 800a724:	4611      	mov	r1, r2
 800a726:	f7ff ff6d 	bl	800a604 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 800a72a:	b100      	cbz	r0, 800a72e <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800a72c:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800a72e:	b002      	add	sp, #8
 800a730:	bd10      	pop	{r4, pc}

0800a732 <xQueueCreateCountingSemaphore>:
	{
 800a732:	b510      	push	{r4, lr}
 800a734:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 800a736:	b940      	cbnz	r0, 800a74a <xQueueCreateCountingSemaphore+0x18>
 800a738:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a73c:	f383 8811 	msr	BASEPRI, r3
 800a740:	f3bf 8f6f 	isb	sy
 800a744:	f3bf 8f4f 	dsb	sy
 800a748:	e7fe      	b.n	800a748 <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 800a74a:	4288      	cmp	r0, r1
 800a74c:	d208      	bcs.n	800a760 <xQueueCreateCountingSemaphore+0x2e>
 800a74e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a752:	f383 8811 	msr	BASEPRI, r3
 800a756:	f3bf 8f6f 	isb	sy
 800a75a:	f3bf 8f4f 	dsb	sy
 800a75e:	e7fe      	b.n	800a75e <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800a760:	2202      	movs	r2, #2
 800a762:	2100      	movs	r1, #0
 800a764:	f7ff ff9c 	bl	800a6a0 <xQueueGenericCreate>
		if( xHandle != NULL )
 800a768:	b100      	cbz	r0, 800a76c <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800a76a:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800a76c:	bd10      	pop	{r4, pc}

0800a76e <xQueueGenericSend>:
{
 800a76e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a772:	b085      	sub	sp, #20
 800a774:	4688      	mov	r8, r1
 800a776:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800a778:	4604      	mov	r4, r0
{
 800a77a:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 800a77c:	b940      	cbnz	r0, 800a790 <xQueueGenericSend+0x22>
 800a77e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a782:	f383 8811 	msr	BASEPRI, r3
 800a786:	f3bf 8f6f 	isb	sy
 800a78a:	f3bf 8f4f 	dsb	sy
 800a78e:	e7fe      	b.n	800a78e <xQueueGenericSend+0x20>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800a790:	b951      	cbnz	r1, 800a7a8 <xQueueGenericSend+0x3a>
 800a792:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800a794:	b143      	cbz	r3, 800a7a8 <xQueueGenericSend+0x3a>
 800a796:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a79a:	f383 8811 	msr	BASEPRI, r3
 800a79e:	f3bf 8f6f 	isb	sy
 800a7a2:	f3bf 8f4f 	dsb	sy
 800a7a6:	e7fe      	b.n	800a7a6 <xQueueGenericSend+0x38>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800a7a8:	2f02      	cmp	r7, #2
 800a7aa:	d10b      	bne.n	800a7c4 <xQueueGenericSend+0x56>
 800a7ac:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800a7ae:	2b01      	cmp	r3, #1
 800a7b0:	d008      	beq.n	800a7c4 <xQueueGenericSend+0x56>
 800a7b2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a7b6:	f383 8811 	msr	BASEPRI, r3
 800a7ba:	f3bf 8f6f 	isb	sy
 800a7be:	f3bf 8f4f 	dsb	sy
 800a7c2:	e7fe      	b.n	800a7c2 <xQueueGenericSend+0x54>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800a7c4:	f000 ffa8 	bl	800b718 <xTaskGetSchedulerState>
 800a7c8:	4606      	mov	r6, r0
 800a7ca:	b950      	cbnz	r0, 800a7e2 <xQueueGenericSend+0x74>
 800a7cc:	9b01      	ldr	r3, [sp, #4]
 800a7ce:	b14b      	cbz	r3, 800a7e4 <xQueueGenericSend+0x76>
 800a7d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a7d4:	f383 8811 	msr	BASEPRI, r3
 800a7d8:	f3bf 8f6f 	isb	sy
 800a7dc:	f3bf 8f4f 	dsb	sy
 800a7e0:	e7fe      	b.n	800a7e0 <xQueueGenericSend+0x72>
 800a7e2:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 800a7e4:	f04f 0900 	mov.w	r9, #0
 800a7e8:	e037      	b.n	800a85a <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 800a7ea:	9d01      	ldr	r5, [sp, #4]
 800a7ec:	b91d      	cbnz	r5, 800a7f6 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 800a7ee:	f7ff fd19 	bl	800a224 <vPortExitCritical>
			return errQUEUE_FULL;
 800a7f2:	2000      	movs	r0, #0
 800a7f4:	e052      	b.n	800a89c <xQueueGenericSend+0x12e>
				else if( xEntryTimeSet == pdFALSE )
 800a7f6:	b916      	cbnz	r6, 800a7fe <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800a7f8:	a802      	add	r0, sp, #8
 800a7fa:	f000 ff3f 	bl	800b67c <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800a7fe:	f7ff fd11 	bl	800a224 <vPortExitCritical>
		vTaskSuspendAll();
 800a802:	f000 fcf9 	bl	800b1f8 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800a806:	f7ff fced 	bl	800a1e4 <vPortEnterCritical>
 800a80a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800a80e:	2bff      	cmp	r3, #255	; 0xff
 800a810:	d101      	bne.n	800a816 <xQueueGenericSend+0xa8>
 800a812:	f884 9044 	strb.w	r9, [r4, #68]	; 0x44
 800a816:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800a81a:	2bff      	cmp	r3, #255	; 0xff
 800a81c:	d101      	bne.n	800a822 <xQueueGenericSend+0xb4>
 800a81e:	f884 9045 	strb.w	r9, [r4, #69]	; 0x45
 800a822:	f7ff fcff 	bl	800a224 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800a826:	a901      	add	r1, sp, #4
 800a828:	a802      	add	r0, sp, #8
 800a82a:	f000 ff33 	bl	800b694 <xTaskCheckForTimeOut>
 800a82e:	2800      	cmp	r0, #0
 800a830:	d14a      	bne.n	800a8c8 <xQueueGenericSend+0x15a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800a832:	f7ff fcd7 	bl	800a1e4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800a836:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800a838:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800a83a:	429a      	cmp	r2, r3
 800a83c:	d131      	bne.n	800a8a2 <xQueueGenericSend+0x134>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800a83e:	f7ff fcf1 	bl	800a224 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800a842:	9901      	ldr	r1, [sp, #4]
 800a844:	f104 0010 	add.w	r0, r4, #16
 800a848:	f000 fe9c 	bl	800b584 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800a84c:	4620      	mov	r0, r4
 800a84e:	f7ff fe62 	bl	800a516 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800a852:	f000 fd75 	bl	800b340 <xTaskResumeAll>
 800a856:	b360      	cbz	r0, 800a8b2 <xQueueGenericSend+0x144>
 800a858:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800a85a:	f7ff fcc3 	bl	800a1e4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800a85e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800a860:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800a862:	429a      	cmp	r2, r3
 800a864:	d301      	bcc.n	800a86a <xQueueGenericSend+0xfc>
 800a866:	2f02      	cmp	r7, #2
 800a868:	d1bf      	bne.n	800a7ea <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800a86a:	463a      	mov	r2, r7
 800a86c:	4641      	mov	r1, r8
 800a86e:	4620      	mov	r0, r4
 800a870:	f7ff fe07 	bl	800a482 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800a874:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a876:	b11b      	cbz	r3, 800a880 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800a878:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800a87c:	f000 feba 	bl	800b5f4 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 800a880:	b148      	cbz	r0, 800a896 <xQueueGenericSend+0x128>
						queueYIELD_IF_USING_PREEMPTION();
 800a882:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a886:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a88a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a88e:	f3bf 8f4f 	dsb	sy
 800a892:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800a896:	f7ff fcc5 	bl	800a224 <vPortExitCritical>
				return pdPASS;
 800a89a:	2001      	movs	r0, #1
}
 800a89c:	b005      	add	sp, #20
 800a89e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 800a8a2:	f7ff fcbf 	bl	800a224 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 800a8a6:	4620      	mov	r0, r4
 800a8a8:	f7ff fe35 	bl	800a516 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800a8ac:	f000 fd48 	bl	800b340 <xTaskResumeAll>
 800a8b0:	e7d2      	b.n	800a858 <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 800a8b2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a8b6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a8ba:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a8be:	f3bf 8f4f 	dsb	sy
 800a8c2:	f3bf 8f6f 	isb	sy
 800a8c6:	e7c7      	b.n	800a858 <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 800a8c8:	4620      	mov	r0, r4
 800a8ca:	f7ff fe24 	bl	800a516 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800a8ce:	f000 fd37 	bl	800b340 <xTaskResumeAll>
 800a8d2:	e78e      	b.n	800a7f2 <xQueueGenericSend+0x84>

0800a8d4 <xQueueGenericSendFromISR>:
{
 800a8d4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800a8d8:	4689      	mov	r9, r1
 800a8da:	4690      	mov	r8, r2
 800a8dc:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800a8de:	4604      	mov	r4, r0
 800a8e0:	b940      	cbnz	r0, 800a8f4 <xQueueGenericSendFromISR+0x20>
 800a8e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a8e6:	f383 8811 	msr	BASEPRI, r3
 800a8ea:	f3bf 8f6f 	isb	sy
 800a8ee:	f3bf 8f4f 	dsb	sy
 800a8f2:	e7fe      	b.n	800a8f2 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800a8f4:	b951      	cbnz	r1, 800a90c <xQueueGenericSendFromISR+0x38>
 800a8f6:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800a8f8:	b143      	cbz	r3, 800a90c <xQueueGenericSendFromISR+0x38>
 800a8fa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a8fe:	f383 8811 	msr	BASEPRI, r3
 800a902:	f3bf 8f6f 	isb	sy
 800a906:	f3bf 8f4f 	dsb	sy
 800a90a:	e7fe      	b.n	800a90a <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800a90c:	2f02      	cmp	r7, #2
 800a90e:	d10b      	bne.n	800a928 <xQueueGenericSendFromISR+0x54>
 800a910:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800a912:	2b01      	cmp	r3, #1
 800a914:	d008      	beq.n	800a928 <xQueueGenericSendFromISR+0x54>
 800a916:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a91a:	f383 8811 	msr	BASEPRI, r3
 800a91e:	f3bf 8f6f 	isb	sy
 800a922:	f3bf 8f4f 	dsb	sy
 800a926:	e7fe      	b.n	800a926 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800a928:	f7ff fd72 	bl	800a410 <vPortValidateInterruptPriority>
	__asm volatile
 800a92c:	f3ef 8611 	mrs	r6, BASEPRI
 800a930:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a934:	f383 8811 	msr	BASEPRI, r3
 800a938:	f3bf 8f6f 	isb	sy
 800a93c:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800a940:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800a942:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800a944:	429a      	cmp	r2, r3
 800a946:	d301      	bcc.n	800a94c <xQueueGenericSendFromISR+0x78>
 800a948:	2f02      	cmp	r7, #2
 800a94a:	d123      	bne.n	800a994 <xQueueGenericSendFromISR+0xc0>
			const int8_t cTxLock = pxQueue->cTxLock;
 800a94c:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800a950:	463a      	mov	r2, r7
 800a952:	4649      	mov	r1, r9
 800a954:	4620      	mov	r0, r4
			const int8_t cTxLock = pxQueue->cTxLock;
 800a956:	b26d      	sxtb	r5, r5
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800a958:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800a95a:	f7ff fd92 	bl	800a482 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800a95e:	1c6b      	adds	r3, r5, #1
 800a960:	d113      	bne.n	800a98a <xQueueGenericSendFromISR+0xb6>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800a962:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a964:	b90b      	cbnz	r3, 800a96a <xQueueGenericSendFromISR+0x96>
			xReturn = pdPASS;
 800a966:	2001      	movs	r0, #1
 800a968:	e00b      	b.n	800a982 <xQueueGenericSendFromISR+0xae>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800a96a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800a96e:	f000 fe41 	bl	800b5f4 <xTaskRemoveFromEventList>
 800a972:	2800      	cmp	r0, #0
 800a974:	d0f7      	beq.n	800a966 <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 800a976:	f1b8 0f00 	cmp.w	r8, #0
 800a97a:	d0f4      	beq.n	800a966 <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800a97c:	2001      	movs	r0, #1
 800a97e:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 800a982:	f386 8811 	msr	BASEPRI, r6
}
 800a986:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800a98a:	3501      	adds	r5, #1
 800a98c:	b26d      	sxtb	r5, r5
 800a98e:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 800a992:	e7e8      	b.n	800a966 <xQueueGenericSendFromISR+0x92>
			xReturn = errQUEUE_FULL;
 800a994:	2000      	movs	r0, #0
 800a996:	e7f4      	b.n	800a982 <xQueueGenericSendFromISR+0xae>

0800a998 <xQueueGiveFromISR>:
{
 800a998:	b570      	push	{r4, r5, r6, lr}
 800a99a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800a99c:	4604      	mov	r4, r0
 800a99e:	b940      	cbnz	r0, 800a9b2 <xQueueGiveFromISR+0x1a>
	__asm volatile
 800a9a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a9a4:	f383 8811 	msr	BASEPRI, r3
 800a9a8:	f3bf 8f6f 	isb	sy
 800a9ac:	f3bf 8f4f 	dsb	sy
 800a9b0:	e7fe      	b.n	800a9b0 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 800a9b2:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800a9b4:	b143      	cbz	r3, 800a9c8 <xQueueGiveFromISR+0x30>
 800a9b6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a9ba:	f383 8811 	msr	BASEPRI, r3
 800a9be:	f3bf 8f6f 	isb	sy
 800a9c2:	f3bf 8f4f 	dsb	sy
 800a9c6:	e7fe      	b.n	800a9c6 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800a9c8:	6803      	ldr	r3, [r0, #0]
 800a9ca:	b953      	cbnz	r3, 800a9e2 <xQueueGiveFromISR+0x4a>
 800a9cc:	6883      	ldr	r3, [r0, #8]
 800a9ce:	b143      	cbz	r3, 800a9e2 <xQueueGiveFromISR+0x4a>
 800a9d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a9d4:	f383 8811 	msr	BASEPRI, r3
 800a9d8:	f3bf 8f6f 	isb	sy
 800a9dc:	f3bf 8f4f 	dsb	sy
 800a9e0:	e7fe      	b.n	800a9e0 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800a9e2:	f7ff fd15 	bl	800a410 <vPortValidateInterruptPriority>
	__asm volatile
 800a9e6:	f3ef 8611 	mrs	r6, BASEPRI
 800a9ea:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a9ee:	f383 8811 	msr	BASEPRI, r3
 800a9f2:	f3bf 8f6f 	isb	sy
 800a9f6:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800a9fa:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800a9fc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800a9fe:	4293      	cmp	r3, r2
 800aa00:	d91c      	bls.n	800aa3c <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 800aa02:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800aa06:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 800aa08:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 800aa0a:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800aa0c:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 800aa0e:	d110      	bne.n	800aa32 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800aa10:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800aa12:	b90b      	cbnz	r3, 800aa18 <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 800aa14:	2001      	movs	r0, #1
 800aa16:	e009      	b.n	800aa2c <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800aa18:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800aa1c:	f000 fdea 	bl	800b5f4 <xTaskRemoveFromEventList>
 800aa20:	2800      	cmp	r0, #0
 800aa22:	d0f7      	beq.n	800aa14 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 800aa24:	2d00      	cmp	r5, #0
 800aa26:	d0f5      	beq.n	800aa14 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800aa28:	2001      	movs	r0, #1
 800aa2a:	6028      	str	r0, [r5, #0]
	__asm volatile
 800aa2c:	f386 8811 	msr	BASEPRI, r6
}
 800aa30:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800aa32:	3301      	adds	r3, #1
 800aa34:	b25b      	sxtb	r3, r3
 800aa36:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800aa3a:	e7eb      	b.n	800aa14 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 800aa3c:	2000      	movs	r0, #0
 800aa3e:	e7f5      	b.n	800aa2c <xQueueGiveFromISR+0x94>

0800aa40 <xQueueReceive>:
{
 800aa40:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800aa44:	460f      	mov	r7, r1
	configASSERT( ( pxQueue ) );
 800aa46:	4604      	mov	r4, r0
{
 800aa48:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800aa4a:	b940      	cbnz	r0, 800aa5e <xQueueReceive+0x1e>
	__asm volatile
 800aa4c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800aa50:	f383 8811 	msr	BASEPRI, r3
 800aa54:	f3bf 8f6f 	isb	sy
 800aa58:	f3bf 8f4f 	dsb	sy
 800aa5c:	e7fe      	b.n	800aa5c <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800aa5e:	b951      	cbnz	r1, 800aa76 <xQueueReceive+0x36>
 800aa60:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800aa62:	b143      	cbz	r3, 800aa76 <xQueueReceive+0x36>
 800aa64:	f04f 0350 	mov.w	r3, #80	; 0x50
 800aa68:	f383 8811 	msr	BASEPRI, r3
 800aa6c:	f3bf 8f6f 	isb	sy
 800aa70:	f3bf 8f4f 	dsb	sy
 800aa74:	e7fe      	b.n	800aa74 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800aa76:	f000 fe4f 	bl	800b718 <xTaskGetSchedulerState>
 800aa7a:	4606      	mov	r6, r0
 800aa7c:	b950      	cbnz	r0, 800aa94 <xQueueReceive+0x54>
 800aa7e:	9b01      	ldr	r3, [sp, #4]
 800aa80:	b14b      	cbz	r3, 800aa96 <xQueueReceive+0x56>
 800aa82:	f04f 0350 	mov.w	r3, #80	; 0x50
 800aa86:	f383 8811 	msr	BASEPRI, r3
 800aa8a:	f3bf 8f6f 	isb	sy
 800aa8e:	f3bf 8f4f 	dsb	sy
 800aa92:	e7fe      	b.n	800aa92 <xQueueReceive+0x52>
 800aa94:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 800aa96:	f04f 0800 	mov.w	r8, #0
 800aa9a:	e03d      	b.n	800ab18 <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 800aa9c:	9d01      	ldr	r5, [sp, #4]
 800aa9e:	b91d      	cbnz	r5, 800aaa8 <xQueueReceive+0x68>
					taskEXIT_CRITICAL();
 800aaa0:	f7ff fbc0 	bl	800a224 <vPortExitCritical>
				return errQUEUE_EMPTY;
 800aaa4:	2000      	movs	r0, #0
 800aaa6:	e056      	b.n	800ab56 <xQueueReceive+0x116>
				else if( xEntryTimeSet == pdFALSE )
 800aaa8:	b916      	cbnz	r6, 800aab0 <xQueueReceive+0x70>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800aaaa:	a802      	add	r0, sp, #8
 800aaac:	f000 fde6 	bl	800b67c <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800aab0:	f7ff fbb8 	bl	800a224 <vPortExitCritical>
		vTaskSuspendAll();
 800aab4:	f000 fba0 	bl	800b1f8 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800aab8:	f7ff fb94 	bl	800a1e4 <vPortEnterCritical>
 800aabc:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800aac0:	2bff      	cmp	r3, #255	; 0xff
 800aac2:	d101      	bne.n	800aac8 <xQueueReceive+0x88>
 800aac4:	f884 8044 	strb.w	r8, [r4, #68]	; 0x44
 800aac8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800aacc:	2bff      	cmp	r3, #255	; 0xff
 800aace:	d101      	bne.n	800aad4 <xQueueReceive+0x94>
 800aad0:	f884 8045 	strb.w	r8, [r4, #69]	; 0x45
 800aad4:	f7ff fba6 	bl	800a224 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800aad8:	a901      	add	r1, sp, #4
 800aada:	a802      	add	r0, sp, #8
 800aadc:	f000 fdda 	bl	800b694 <xTaskCheckForTimeOut>
 800aae0:	2800      	cmp	r0, #0
 800aae2:	d141      	bne.n	800ab68 <xQueueReceive+0x128>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800aae4:	4620      	mov	r0, r4
 800aae6:	f7ff fcc1 	bl	800a46c <prvIsQueueEmpty>
 800aaea:	b3b8      	cbz	r0, 800ab5c <xQueueReceive+0x11c>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800aaec:	9901      	ldr	r1, [sp, #4]
 800aaee:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800aaf2:	f000 fd47 	bl	800b584 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800aaf6:	4620      	mov	r0, r4
 800aaf8:	f7ff fd0d 	bl	800a516 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800aafc:	f000 fc20 	bl	800b340 <xTaskResumeAll>
 800ab00:	b948      	cbnz	r0, 800ab16 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 800ab02:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ab06:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ab0a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ab0e:	f3bf 8f4f 	dsb	sy
 800ab12:	f3bf 8f6f 	isb	sy
 800ab16:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800ab18:	f7ff fb64 	bl	800a1e4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800ab1c:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800ab1e:	2d00      	cmp	r5, #0
 800ab20:	d0bc      	beq.n	800aa9c <xQueueReceive+0x5c>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800ab22:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 800ab24:	4639      	mov	r1, r7
 800ab26:	4620      	mov	r0, r4
 800ab28:	f7ff fce0 	bl	800a4ec <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800ab2c:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ab2e:	6923      	ldr	r3, [r4, #16]
 800ab30:	b173      	cbz	r3, 800ab50 <xQueueReceive+0x110>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ab32:	f104 0010 	add.w	r0, r4, #16
 800ab36:	f000 fd5d 	bl	800b5f4 <xTaskRemoveFromEventList>
 800ab3a:	b148      	cbz	r0, 800ab50 <xQueueReceive+0x110>
						queueYIELD_IF_USING_PREEMPTION();
 800ab3c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ab40:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ab44:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ab48:	f3bf 8f4f 	dsb	sy
 800ab4c:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800ab50:	f7ff fb68 	bl	800a224 <vPortExitCritical>
				return pdPASS;
 800ab54:	2001      	movs	r0, #1
}
 800ab56:	b004      	add	sp, #16
 800ab58:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 800ab5c:	4620      	mov	r0, r4
 800ab5e:	f7ff fcda 	bl	800a516 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800ab62:	f000 fbed 	bl	800b340 <xTaskResumeAll>
 800ab66:	e7d6      	b.n	800ab16 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 800ab68:	4620      	mov	r0, r4
 800ab6a:	f7ff fcd4 	bl	800a516 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800ab6e:	f000 fbe7 	bl	800b340 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800ab72:	4620      	mov	r0, r4
 800ab74:	f7ff fc7a 	bl	800a46c <prvIsQueueEmpty>
 800ab78:	2800      	cmp	r0, #0
 800ab7a:	d0cc      	beq.n	800ab16 <xQueueReceive+0xd6>
 800ab7c:	e792      	b.n	800aaa4 <xQueueReceive+0x64>

0800ab7e <xQueueSemaphoreTake>:
{
 800ab7e:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ab80:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 800ab82:	4604      	mov	r4, r0
{
 800ab84:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800ab86:	b940      	cbnz	r0, 800ab9a <xQueueSemaphoreTake+0x1c>
 800ab88:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ab8c:	f383 8811 	msr	BASEPRI, r3
 800ab90:	f3bf 8f6f 	isb	sy
 800ab94:	f3bf 8f4f 	dsb	sy
 800ab98:	e7fe      	b.n	800ab98 <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 800ab9a:	6c05      	ldr	r5, [r0, #64]	; 0x40
 800ab9c:	b145      	cbz	r5, 800abb0 <xQueueSemaphoreTake+0x32>
 800ab9e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800aba2:	f383 8811 	msr	BASEPRI, r3
 800aba6:	f3bf 8f6f 	isb	sy
 800abaa:	f3bf 8f4f 	dsb	sy
 800abae:	e7fe      	b.n	800abae <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800abb0:	f000 fdb2 	bl	800b718 <xTaskGetSchedulerState>
 800abb4:	4606      	mov	r6, r0
 800abb6:	b950      	cbnz	r0, 800abce <xQueueSemaphoreTake+0x50>
 800abb8:	9b01      	ldr	r3, [sp, #4]
 800abba:	b15b      	cbz	r3, 800abd4 <xQueueSemaphoreTake+0x56>
 800abbc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800abc0:	f383 8811 	msr	BASEPRI, r3
 800abc4:	f3bf 8f6f 	isb	sy
 800abc8:	f3bf 8f4f 	dsb	sy
 800abcc:	e7fe      	b.n	800abcc <xQueueSemaphoreTake+0x4e>
 800abce:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 800abd0:	2700      	movs	r7, #0
 800abd2:	e053      	b.n	800ac7c <xQueueSemaphoreTake+0xfe>
 800abd4:	4605      	mov	r5, r0
 800abd6:	e7fb      	b.n	800abd0 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 800abd8:	9b01      	ldr	r3, [sp, #4]
 800abda:	b963      	cbnz	r3, 800abf6 <xQueueSemaphoreTake+0x78>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800abdc:	b145      	cbz	r5, 800abf0 <xQueueSemaphoreTake+0x72>
 800abde:	f04f 0350 	mov.w	r3, #80	; 0x50
 800abe2:	f383 8811 	msr	BASEPRI, r3
 800abe6:	f3bf 8f6f 	isb	sy
 800abea:	f3bf 8f4f 	dsb	sy
 800abee:	e7fe      	b.n	800abee <xQueueSemaphoreTake+0x70>
					taskEXIT_CRITICAL();
 800abf0:	f7ff fb18 	bl	800a224 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800abf4:	e062      	b.n	800acbc <xQueueSemaphoreTake+0x13e>
				else if( xEntryTimeSet == pdFALSE )
 800abf6:	b916      	cbnz	r6, 800abfe <xQueueSemaphoreTake+0x80>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800abf8:	a802      	add	r0, sp, #8
 800abfa:	f000 fd3f 	bl	800b67c <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800abfe:	f7ff fb11 	bl	800a224 <vPortExitCritical>
		vTaskSuspendAll();
 800ac02:	f000 faf9 	bl	800b1f8 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800ac06:	f7ff faed 	bl	800a1e4 <vPortEnterCritical>
 800ac0a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ac0e:	2bff      	cmp	r3, #255	; 0xff
 800ac10:	d101      	bne.n	800ac16 <xQueueSemaphoreTake+0x98>
 800ac12:	f884 7044 	strb.w	r7, [r4, #68]	; 0x44
 800ac16:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ac1a:	2bff      	cmp	r3, #255	; 0xff
 800ac1c:	d101      	bne.n	800ac22 <xQueueSemaphoreTake+0xa4>
 800ac1e:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 800ac22:	f7ff faff 	bl	800a224 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800ac26:	a901      	add	r1, sp, #4
 800ac28:	a802      	add	r0, sp, #8
 800ac2a:	f000 fd33 	bl	800b694 <xTaskCheckForTimeOut>
 800ac2e:	2800      	cmp	r0, #0
 800ac30:	d14d      	bne.n	800acce <xQueueSemaphoreTake+0x150>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800ac32:	4620      	mov	r0, r4
 800ac34:	f7ff fc1a 	bl	800a46c <prvIsQueueEmpty>
 800ac38:	2800      	cmp	r0, #0
 800ac3a:	d042      	beq.n	800acc2 <xQueueSemaphoreTake+0x144>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800ac3c:	6823      	ldr	r3, [r4, #0]
 800ac3e:	b93b      	cbnz	r3, 800ac50 <xQueueSemaphoreTake+0xd2>
						taskENTER_CRITICAL();
 800ac40:	f7ff fad0 	bl	800a1e4 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800ac44:	68a0      	ldr	r0, [r4, #8]
 800ac46:	f000 fd77 	bl	800b738 <xTaskPriorityInherit>
 800ac4a:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 800ac4c:	f7ff faea 	bl	800a224 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800ac50:	9901      	ldr	r1, [sp, #4]
 800ac52:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800ac56:	f000 fc95 	bl	800b584 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800ac5a:	4620      	mov	r0, r4
 800ac5c:	f7ff fc5b 	bl	800a516 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800ac60:	f000 fb6e 	bl	800b340 <xTaskResumeAll>
 800ac64:	b948      	cbnz	r0, 800ac7a <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 800ac66:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ac6a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ac6e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ac72:	f3bf 8f4f 	dsb	sy
 800ac76:	f3bf 8f6f 	isb	sy
 800ac7a:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800ac7c:	f7ff fab2 	bl	800a1e4 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800ac80:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800ac82:	2b00      	cmp	r3, #0
 800ac84:	d0a8      	beq.n	800abd8 <xQueueSemaphoreTake+0x5a>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800ac86:	3b01      	subs	r3, #1
 800ac88:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800ac8a:	6823      	ldr	r3, [r4, #0]
 800ac8c:	b913      	cbnz	r3, 800ac94 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800ac8e:	f000 fe29 	bl	800b8e4 <pvTaskIncrementMutexHeldCount>
 800ac92:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ac94:	6923      	ldr	r3, [r4, #16]
 800ac96:	b173      	cbz	r3, 800acb6 <xQueueSemaphoreTake+0x138>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ac98:	f104 0010 	add.w	r0, r4, #16
 800ac9c:	f000 fcaa 	bl	800b5f4 <xTaskRemoveFromEventList>
 800aca0:	b148      	cbz	r0, 800acb6 <xQueueSemaphoreTake+0x138>
						queueYIELD_IF_USING_PREEMPTION();
 800aca2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800aca6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800acaa:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800acae:	f3bf 8f4f 	dsb	sy
 800acb2:	f3bf 8f6f 	isb	sy
				return pdPASS;
 800acb6:	2501      	movs	r5, #1
				taskEXIT_CRITICAL();
 800acb8:	f7ff fab4 	bl	800a224 <vPortExitCritical>
}
 800acbc:	4628      	mov	r0, r5
 800acbe:	b005      	add	sp, #20
 800acc0:	bdf0      	pop	{r4, r5, r6, r7, pc}
				prvUnlockQueue( pxQueue );
 800acc2:	4620      	mov	r0, r4
 800acc4:	f7ff fc27 	bl	800a516 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800acc8:	f000 fb3a 	bl	800b340 <xTaskResumeAll>
 800accc:	e7d5      	b.n	800ac7a <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 800acce:	4620      	mov	r0, r4
 800acd0:	f7ff fc21 	bl	800a516 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800acd4:	f000 fb34 	bl	800b340 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800acd8:	4620      	mov	r0, r4
 800acda:	f7ff fbc7 	bl	800a46c <prvIsQueueEmpty>
 800acde:	2800      	cmp	r0, #0
 800ace0:	d0cb      	beq.n	800ac7a <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 800ace2:	2d00      	cmp	r5, #0
 800ace4:	d0ea      	beq.n	800acbc <xQueueSemaphoreTake+0x13e>
						taskENTER_CRITICAL();
 800ace6:	f7ff fa7d 	bl	800a1e4 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800acea:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800acec:	b119      	cbz	r1, 800acf6 <xQueueSemaphoreTake+0x178>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800acee:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800acf0:	6819      	ldr	r1, [r3, #0]
 800acf2:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800acf6:	68a0      	ldr	r0, [r4, #8]
				return errQUEUE_EMPTY;
 800acf8:	2500      	movs	r5, #0
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800acfa:	f000 fda1 	bl	800b840 <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
 800acfe:	f7ff fa91 	bl	800a224 <vPortExitCritical>
 800ad02:	e7db      	b.n	800acbc <xQueueSemaphoreTake+0x13e>

0800ad04 <xQueueReceiveFromISR>:
{
 800ad04:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800ad08:	4689      	mov	r9, r1
 800ad0a:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 800ad0c:	4605      	mov	r5, r0
 800ad0e:	b940      	cbnz	r0, 800ad22 <xQueueReceiveFromISR+0x1e>
 800ad10:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ad14:	f383 8811 	msr	BASEPRI, r3
 800ad18:	f3bf 8f6f 	isb	sy
 800ad1c:	f3bf 8f4f 	dsb	sy
 800ad20:	e7fe      	b.n	800ad20 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800ad22:	b951      	cbnz	r1, 800ad3a <xQueueReceiveFromISR+0x36>
 800ad24:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800ad26:	b143      	cbz	r3, 800ad3a <xQueueReceiveFromISR+0x36>
 800ad28:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ad2c:	f383 8811 	msr	BASEPRI, r3
 800ad30:	f3bf 8f6f 	isb	sy
 800ad34:	f3bf 8f4f 	dsb	sy
 800ad38:	e7fe      	b.n	800ad38 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800ad3a:	f7ff fb69 	bl	800a410 <vPortValidateInterruptPriority>
	__asm volatile
 800ad3e:	f3ef 8711 	mrs	r7, BASEPRI
 800ad42:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ad46:	f383 8811 	msr	BASEPRI, r3
 800ad4a:	f3bf 8f6f 	isb	sy
 800ad4e:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800ad52:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800ad54:	b31c      	cbz	r4, 800ad9e <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 800ad56:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800ad5a:	4649      	mov	r1, r9
 800ad5c:	4628      	mov	r0, r5
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800ad5e:	3c01      	subs	r4, #1
			const int8_t cRxLock = pxQueue->cRxLock;
 800ad60:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800ad62:	f7ff fbc3 	bl	800a4ec <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800ad66:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800ad68:	1c73      	adds	r3, r6, #1
 800ad6a:	d113      	bne.n	800ad94 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ad6c:	692b      	ldr	r3, [r5, #16]
 800ad6e:	b90b      	cbnz	r3, 800ad74 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 800ad70:	2001      	movs	r0, #1
 800ad72:	e00b      	b.n	800ad8c <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ad74:	f105 0010 	add.w	r0, r5, #16
 800ad78:	f000 fc3c 	bl	800b5f4 <xTaskRemoveFromEventList>
 800ad7c:	2800      	cmp	r0, #0
 800ad7e:	d0f7      	beq.n	800ad70 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 800ad80:	f1b8 0f00 	cmp.w	r8, #0
 800ad84:	d0f4      	beq.n	800ad70 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800ad86:	2001      	movs	r0, #1
 800ad88:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 800ad8c:	f387 8811 	msr	BASEPRI, r7
}
 800ad90:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800ad94:	3601      	adds	r6, #1
 800ad96:	b276      	sxtb	r6, r6
 800ad98:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 800ad9c:	e7e8      	b.n	800ad70 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 800ad9e:	4620      	mov	r0, r4
 800ada0:	e7f4      	b.n	800ad8c <xQueueReceiveFromISR+0x88>
	...

0800ada4 <vQueueAddToRegistry>:
	{
	UBaseType_t ux;

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800ada4:	2300      	movs	r3, #0
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800ada6:	4a07      	ldr	r2, [pc, #28]	; (800adc4 <vQueueAddToRegistry+0x20>)
	{
 800ada8:	b510      	push	{r4, lr}
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800adaa:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 800adae:	b92c      	cbnz	r4, 800adbc <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800adb0:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800adb4:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800adb8:	6058      	str	r0, [r3, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 800adba:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800adbc:	3301      	adds	r3, #1
 800adbe:	2b08      	cmp	r3, #8
 800adc0:	d1f3      	bne.n	800adaa <vQueueAddToRegistry+0x6>
 800adc2:	e7fa      	b.n	800adba <vQueueAddToRegistry+0x16>
 800adc4:	2400da40 	.word	0x2400da40

0800adc8 <vQueueUnregisterQueue>:
	{
	UBaseType_t ux;

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800adc8:	2300      	movs	r3, #0
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800adca:	4a08      	ldr	r2, [pc, #32]	; (800adec <vQueueUnregisterQueue+0x24>)
	{
 800adcc:	b510      	push	{r4, lr}
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800adce:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 800add2:	684c      	ldr	r4, [r1, #4]
 800add4:	4284      	cmp	r4, r0
 800add6:	d104      	bne.n	800ade2 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800add8:	2000      	movs	r0, #0
 800adda:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 800adde:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 800ade0:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800ade2:	3301      	adds	r3, #1
 800ade4:	2b08      	cmp	r3, #8
 800ade6:	d1f2      	bne.n	800adce <vQueueUnregisterQueue+0x6>
 800ade8:	e7fa      	b.n	800ade0 <vQueueUnregisterQueue+0x18>
 800adea:	bf00      	nop
 800adec:	2400da40 	.word	0x2400da40

0800adf0 <vQueueDelete>:
{
 800adf0:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 800adf2:	4604      	mov	r4, r0
 800adf4:	b940      	cbnz	r0, 800ae08 <vQueueDelete+0x18>
	__asm volatile
 800adf6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800adfa:	f383 8811 	msr	BASEPRI, r3
 800adfe:	f3bf 8f6f 	isb	sy
 800ae02:	f3bf 8f4f 	dsb	sy
 800ae06:	e7fe      	b.n	800ae06 <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 800ae08:	f7ff ffde 	bl	800adc8 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800ae0c:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 800ae10:	b923      	cbnz	r3, 800ae1c <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 800ae12:	4620      	mov	r0, r4
}
 800ae14:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 800ae18:	f7ff b902 	b.w	800a020 <vPortFree>
}
 800ae1c:	bd10      	pop	{r4, pc}

0800ae1e <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800ae1e:	b570      	push	{r4, r5, r6, lr}
 800ae20:	4604      	mov	r4, r0
 800ae22:	460d      	mov	r5, r1
 800ae24:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800ae26:	f7ff f9dd 	bl	800a1e4 <vPortEnterCritical>
 800ae2a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ae2e:	2bff      	cmp	r3, #255	; 0xff
 800ae30:	d102      	bne.n	800ae38 <vQueueWaitForMessageRestricted+0x1a>
 800ae32:	2300      	movs	r3, #0
 800ae34:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800ae38:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ae3c:	2bff      	cmp	r3, #255	; 0xff
 800ae3e:	d102      	bne.n	800ae46 <vQueueWaitForMessageRestricted+0x28>
 800ae40:	2300      	movs	r3, #0
 800ae42:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800ae46:	f7ff f9ed 	bl	800a224 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800ae4a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800ae4c:	b92b      	cbnz	r3, 800ae5a <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800ae4e:	4632      	mov	r2, r6
 800ae50:	4629      	mov	r1, r5
 800ae52:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800ae56:	f000 fbaf 	bl	800b5b8 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 800ae5a:	4620      	mov	r0, r4
	}
 800ae5c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 800ae60:	f7ff bb59 	b.w	800a516 <prvUnlockQueue>

0800ae64 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800ae64:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ae68:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800ae6a:	f7ff f9bb 	bl	800a1e4 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800ae6e:	4b2f      	ldr	r3, [pc, #188]	; (800af2c <prvAddNewTaskToReadyList+0xc8>)
		if( pxCurrentTCB == NULL )
 800ae70:	4e2f      	ldr	r6, [pc, #188]	; (800af30 <prvAddNewTaskToReadyList+0xcc>)
		uxCurrentNumberOfTasks++;
 800ae72:	681a      	ldr	r2, [r3, #0]
 800ae74:	4f2f      	ldr	r7, [pc, #188]	; (800af34 <prvAddNewTaskToReadyList+0xd0>)
 800ae76:	3201      	adds	r2, #1
 800ae78:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 800ae7a:	6835      	ldr	r5, [r6, #0]
 800ae7c:	2d00      	cmp	r5, #0
 800ae7e:	d14a      	bne.n	800af16 <prvAddNewTaskToReadyList+0xb2>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 800ae80:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800ae82:	681b      	ldr	r3, [r3, #0]
 800ae84:	2b01      	cmp	r3, #1
 800ae86:	d11f      	bne.n	800aec8 <prvAddNewTaskToReadyList+0x64>
 800ae88:	46b8      	mov	r8, r7

static void prvInitialiseTaskLists( void )
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800ae8a:	3501      	adds	r5, #1
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800ae8c:	4640      	mov	r0, r8
 800ae8e:	f7ff f905 	bl	800a09c <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800ae92:	f108 0814 	add.w	r8, r8, #20
 800ae96:	2d38      	cmp	r5, #56	; 0x38
 800ae98:	d1f7      	bne.n	800ae8a <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 800ae9a:	f8df 80c0 	ldr.w	r8, [pc, #192]	; 800af5c <prvAddNewTaskToReadyList+0xf8>
	vListInitialise( &xDelayedTaskList2 );
 800ae9e:	4d26      	ldr	r5, [pc, #152]	; (800af38 <prvAddNewTaskToReadyList+0xd4>)
	vListInitialise( &xDelayedTaskList1 );
 800aea0:	4640      	mov	r0, r8
 800aea2:	f7ff f8fb 	bl	800a09c <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800aea6:	4628      	mov	r0, r5
 800aea8:	f7ff f8f8 	bl	800a09c <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800aeac:	4823      	ldr	r0, [pc, #140]	; (800af3c <prvAddNewTaskToReadyList+0xd8>)
 800aeae:	f7ff f8f5 	bl	800a09c <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800aeb2:	4823      	ldr	r0, [pc, #140]	; (800af40 <prvAddNewTaskToReadyList+0xdc>)
 800aeb4:	f7ff f8f2 	bl	800a09c <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800aeb8:	4822      	ldr	r0, [pc, #136]	; (800af44 <prvAddNewTaskToReadyList+0xe0>)
 800aeba:	f7ff f8ef 	bl	800a09c <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800aebe:	4b22      	ldr	r3, [pc, #136]	; (800af48 <prvAddNewTaskToReadyList+0xe4>)
 800aec0:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800aec4:	4b21      	ldr	r3, [pc, #132]	; (800af4c <prvAddNewTaskToReadyList+0xe8>)
 800aec6:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 800aec8:	4a21      	ldr	r2, [pc, #132]	; (800af50 <prvAddNewTaskToReadyList+0xec>)
 800aeca:	6813      	ldr	r3, [r2, #0]
 800aecc:	3301      	adds	r3, #1
 800aece:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 800aed0:	4a20      	ldr	r2, [pc, #128]	; (800af54 <prvAddNewTaskToReadyList+0xf0>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800aed2:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800aed4:	6811      	ldr	r1, [r2, #0]
 800aed6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800aed8:	428b      	cmp	r3, r1
 800aeda:	d900      	bls.n	800aede <prvAddNewTaskToReadyList+0x7a>
 800aedc:	6013      	str	r3, [r2, #0]
 800aede:	2014      	movs	r0, #20
 800aee0:	1d21      	adds	r1, r4, #4
 800aee2:	fb00 7003 	mla	r0, r0, r3, r7
 800aee6:	f7ff f8e7 	bl	800a0b8 <vListInsertEnd>
	taskEXIT_CRITICAL();
 800aeea:	f7ff f99b 	bl	800a224 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 800aeee:	4b1a      	ldr	r3, [pc, #104]	; (800af58 <prvAddNewTaskToReadyList+0xf4>)
 800aef0:	681b      	ldr	r3, [r3, #0]
 800aef2:	b173      	cbz	r3, 800af12 <prvAddNewTaskToReadyList+0xae>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800aef4:	6833      	ldr	r3, [r6, #0]
 800aef6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800aef8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800aefa:	429a      	cmp	r2, r3
 800aefc:	d209      	bcs.n	800af12 <prvAddNewTaskToReadyList+0xae>
			taskYIELD_IF_USING_PREEMPTION();
 800aefe:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800af02:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800af06:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800af0a:	f3bf 8f4f 	dsb	sy
 800af0e:	f3bf 8f6f 	isb	sy
}
 800af12:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 800af16:	4b10      	ldr	r3, [pc, #64]	; (800af58 <prvAddNewTaskToReadyList+0xf4>)
 800af18:	681b      	ldr	r3, [r3, #0]
 800af1a:	2b00      	cmp	r3, #0
 800af1c:	d1d4      	bne.n	800aec8 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800af1e:	6833      	ldr	r3, [r6, #0]
 800af20:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800af22:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800af24:	429a      	cmp	r2, r3
 800af26:	d8cf      	bhi.n	800aec8 <prvAddNewTaskToReadyList+0x64>
					pxCurrentTCB = pxNewTCB;
 800af28:	6034      	str	r4, [r6, #0]
 800af2a:	e7cd      	b.n	800aec8 <prvAddNewTaskToReadyList+0x64>
 800af2c:	2400deec 	.word	0x2400deec
 800af30:	2400da80 	.word	0x2400da80
 800af34:	2400da8c 	.word	0x2400da8c
 800af38:	2400df14 	.word	0x2400df14
 800af3c:	2400df34 	.word	0x2400df34
 800af40:	2400df60 	.word	0x2400df60
 800af44:	2400df4c 	.word	0x2400df4c
 800af48:	2400da84 	.word	0x2400da84
 800af4c:	2400da88 	.word	0x2400da88
 800af50:	2400def8 	.word	0x2400def8
 800af54:	2400defc 	.word	0x2400defc
 800af58:	2400df48 	.word	0x2400df48
 800af5c:	2400df00 	.word	0x2400df00

0800af60 <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 800af60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800af62:	4b15      	ldr	r3, [pc, #84]	; (800afb8 <prvAddCurrentTaskToDelayedList+0x58>)
{
 800af64:	4604      	mov	r4, r0
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800af66:	4e15      	ldr	r6, [pc, #84]	; (800afbc <prvAddCurrentTaskToDelayedList+0x5c>)
{
 800af68:	460f      	mov	r7, r1
const TickType_t xConstTickCount = xTickCount;
 800af6a:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800af6c:	6830      	ldr	r0, [r6, #0]
 800af6e:	3004      	adds	r0, #4
 800af70:	f7ff f8c5 	bl	800a0fe <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800af74:	1c63      	adds	r3, r4, #1
 800af76:	d107      	bne.n	800af88 <prvAddCurrentTaskToDelayedList+0x28>
 800af78:	b137      	cbz	r7, 800af88 <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800af7a:	6831      	ldr	r1, [r6, #0]
 800af7c:	4810      	ldr	r0, [pc, #64]	; (800afc0 <prvAddCurrentTaskToDelayedList+0x60>)
 800af7e:	3104      	adds	r1, #4

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 800af80:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800af84:	f7ff b898 	b.w	800a0b8 <vListInsertEnd>
			xTimeToWake = xConstTickCount + xTicksToWait;
 800af88:	192c      	adds	r4, r5, r4
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800af8a:	6833      	ldr	r3, [r6, #0]
 800af8c:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800af8e:	d307      	bcc.n	800afa0 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800af90:	4b0c      	ldr	r3, [pc, #48]	; (800afc4 <prvAddCurrentTaskToDelayedList+0x64>)
 800af92:	6818      	ldr	r0, [r3, #0]
 800af94:	6831      	ldr	r1, [r6, #0]
}
 800af96:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800af9a:	3104      	adds	r1, #4
 800af9c:	f7ff b898 	b.w	800a0d0 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800afa0:	4b09      	ldr	r3, [pc, #36]	; (800afc8 <prvAddCurrentTaskToDelayedList+0x68>)
 800afa2:	6818      	ldr	r0, [r3, #0]
 800afa4:	6831      	ldr	r1, [r6, #0]
 800afa6:	3104      	adds	r1, #4
 800afa8:	f7ff f892 	bl	800a0d0 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800afac:	4b07      	ldr	r3, [pc, #28]	; (800afcc <prvAddCurrentTaskToDelayedList+0x6c>)
 800afae:	681a      	ldr	r2, [r3, #0]
 800afb0:	42a2      	cmp	r2, r4
 800afb2:	d900      	bls.n	800afb6 <prvAddCurrentTaskToDelayedList+0x56>
					xNextTaskUnblockTime = xTimeToWake;
 800afb4:	601c      	str	r4, [r3, #0]
}
 800afb6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800afb8:	2400df74 	.word	0x2400df74
 800afbc:	2400da80 	.word	0x2400da80
 800afc0:	2400df4c 	.word	0x2400df4c
 800afc4:	2400da88 	.word	0x2400da88
 800afc8:	2400da84 	.word	0x2400da84
 800afcc:	2400df28 	.word	0x2400df28

0800afd0 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800afd0:	4a06      	ldr	r2, [pc, #24]	; (800afec <prvResetNextTaskUnblockTime+0x1c>)
 800afd2:	6813      	ldr	r3, [r2, #0]
 800afd4:	6819      	ldr	r1, [r3, #0]
 800afd6:	4b06      	ldr	r3, [pc, #24]	; (800aff0 <prvResetNextTaskUnblockTime+0x20>)
 800afd8:	b919      	cbnz	r1, 800afe2 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 800afda:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800afde:	601a      	str	r2, [r3, #0]
}
 800afe0:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800afe2:	6812      	ldr	r2, [r2, #0]
 800afe4:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800afe6:	68d2      	ldr	r2, [r2, #12]
 800afe8:	6852      	ldr	r2, [r2, #4]
 800afea:	e7f8      	b.n	800afde <prvResetNextTaskUnblockTime+0xe>
 800afec:	2400da84 	.word	0x2400da84
 800aff0:	2400df28 	.word	0x2400df28

0800aff4 <prvDeleteTCB>:
	{
 800aff4:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800aff6:	f890 305d 	ldrb.w	r3, [r0, #93]	; 0x5d
	{
 800affa:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800affc:	b93b      	cbnz	r3, 800b00e <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 800affe:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800b000:	f7ff f80e 	bl	800a020 <vPortFree>
				vPortFree( pxTCB );
 800b004:	4620      	mov	r0, r4
	}
 800b006:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 800b00a:	f7ff b809 	b.w	800a020 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800b00e:	2b01      	cmp	r3, #1
 800b010:	d0f9      	beq.n	800b006 <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800b012:	2b02      	cmp	r3, #2
 800b014:	d008      	beq.n	800b028 <prvDeleteTCB+0x34>
 800b016:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b01a:	f383 8811 	msr	BASEPRI, r3
 800b01e:	f3bf 8f6f 	isb	sy
 800b022:	f3bf 8f4f 	dsb	sy
 800b026:	e7fe      	b.n	800b026 <prvDeleteTCB+0x32>
	}
 800b028:	bd10      	pop	{r4, pc}
	...

0800b02c <prvIdleTask>:
{
 800b02c:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800b02e:	4c14      	ldr	r4, [pc, #80]	; (800b080 <prvIdleTask+0x54>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b030:	4f14      	ldr	r7, [pc, #80]	; (800b084 <prvIdleTask+0x58>)
				--uxCurrentNumberOfTasks;
 800b032:	4d15      	ldr	r5, [pc, #84]	; (800b088 <prvIdleTask+0x5c>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800b034:	6823      	ldr	r3, [r4, #0]
 800b036:	b983      	cbnz	r3, 800b05a <prvIdleTask+0x2e>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800b038:	4b14      	ldr	r3, [pc, #80]	; (800b08c <prvIdleTask+0x60>)
 800b03a:	681b      	ldr	r3, [r3, #0]
 800b03c:	2b01      	cmp	r3, #1
 800b03e:	d909      	bls.n	800b054 <prvIdleTask+0x28>
				taskYIELD();
 800b040:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800b044:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800b048:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800b04c:	f3bf 8f4f 	dsb	sy
 800b050:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
 800b054:	f7f5 fb50 	bl	80006f8 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
 800b058:	e7eb      	b.n	800b032 <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 800b05a:	f7ff f8c3 	bl	800a1e4 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b05e:	68fb      	ldr	r3, [r7, #12]
 800b060:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800b062:	1d30      	adds	r0, r6, #4
 800b064:	f7ff f84b 	bl	800a0fe <uxListRemove>
				--uxCurrentNumberOfTasks;
 800b068:	682b      	ldr	r3, [r5, #0]
 800b06a:	3b01      	subs	r3, #1
 800b06c:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 800b06e:	6823      	ldr	r3, [r4, #0]
 800b070:	3b01      	subs	r3, #1
 800b072:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 800b074:	f7ff f8d6 	bl	800a224 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 800b078:	4630      	mov	r0, r6
 800b07a:	f7ff ffbb 	bl	800aff4 <prvDeleteTCB>
 800b07e:	e7d9      	b.n	800b034 <prvIdleTask+0x8>
 800b080:	2400def0 	.word	0x2400def0
 800b084:	2400df60 	.word	0x2400df60
 800b088:	2400deec 	.word	0x2400deec
 800b08c:	2400da8c 	.word	0x2400da8c

0800b090 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800b090:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800b094:	ea4f 0982 	mov.w	r9, r2, lsl #2
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800b098:	4606      	mov	r6, r0
 800b09a:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800b09c:	21a5      	movs	r1, #165	; 0xa5
 800b09e:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800b0a0:	461f      	mov	r7, r3
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800b0a2:	f1a9 0904 	sub.w	r9, r9, #4
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800b0a6:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800b0aa:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800b0ac:	f015 f83e 	bl	802012c <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800b0b0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800b0b2:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800b0b4:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 800b0b8:	b3b5      	cbz	r5, 800b128 <prvInitialiseNewTask.constprop.0+0x98>
 800b0ba:	1e6b      	subs	r3, r5, #1
 800b0bc:	f104 0234 	add.w	r2, r4, #52	; 0x34
 800b0c0:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800b0c2:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800b0c6:	f802 0b01 	strb.w	r0, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 800b0ca:	b108      	cbz	r0, 800b0d0 <prvInitialiseNewTask.constprop.0+0x40>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 800b0cc:	42ab      	cmp	r3, r5
 800b0ce:	d1f8      	bne.n	800b0c2 <prvInitialiseNewTask.constprop.0+0x32>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800b0d0:	2300      	movs	r3, #0
 800b0d2:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800b0d6:	9d08      	ldr	r5, [sp, #32]
		pxNewTCB->uxMutexesHeld = 0;
 800b0d8:	f04f 0a00 	mov.w	sl, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800b0dc:	1d20      	adds	r0, r4, #4
 800b0de:	2d37      	cmp	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800b0e0:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
 800b0e4:	bf28      	it	cs
 800b0e6:	2537      	movcs	r5, #55	; 0x37
	pxNewTCB->uxPriority = uxPriority;
 800b0e8:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800b0ea:	64e5      	str	r5, [r4, #76]	; 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800b0ec:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800b0f0:	f7fe ffdf 	bl	800a0b2 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800b0f4:	f104 0018 	add.w	r0, r4, #24
 800b0f8:	f7fe ffdb 	bl	800a0b2 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 800b0fc:	f8c4 a058 	str.w	sl, [r4, #88]	; 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800b100:	463a      	mov	r2, r7
 800b102:	4631      	mov	r1, r6
 800b104:	4648      	mov	r0, r9
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800b106:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800b108:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800b10a:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800b10c:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800b110:	f884 a05c 	strb.w	sl, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800b114:	f7ff f842 	bl	800a19c <pxPortInitialiseStack>
 800b118:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800b11a:	f1b8 0f00 	cmp.w	r8, #0
 800b11e:	d001      	beq.n	800b124 <prvInitialiseNewTask.constprop.0+0x94>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800b120:	f8c8 4000 	str.w	r4, [r8]
}
 800b124:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800b128:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800b12c:	e7d3      	b.n	800b0d6 <prvInitialiseNewTask.constprop.0+0x46>

0800b12e <xTaskCreateStatic>:
	{
 800b12e:	b570      	push	{r4, r5, r6, lr}
 800b130:	b086      	sub	sp, #24
 800b132:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800b136:	b945      	cbnz	r5, 800b14a <xTaskCreateStatic+0x1c>
 800b138:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b13c:	f383 8811 	msr	BASEPRI, r3
 800b140:	f3bf 8f6f 	isb	sy
 800b144:	f3bf 8f4f 	dsb	sy
 800b148:	e7fe      	b.n	800b148 <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 800b14a:	b944      	cbnz	r4, 800b15e <xTaskCreateStatic+0x30>
 800b14c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b150:	f383 8811 	msr	BASEPRI, r3
 800b154:	f3bf 8f6f 	isb	sy
 800b158:	f3bf 8f4f 	dsb	sy
 800b15c:	e7fe      	b.n	800b15c <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 800b15e:	2660      	movs	r6, #96	; 0x60
 800b160:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800b162:	9e05      	ldr	r6, [sp, #20]
 800b164:	2e60      	cmp	r6, #96	; 0x60
 800b166:	d008      	beq.n	800b17a <xTaskCreateStatic+0x4c>
 800b168:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b16c:	f383 8811 	msr	BASEPRI, r3
 800b170:	f3bf 8f6f 	isb	sy
 800b174:	f3bf 8f4f 	dsb	sy
 800b178:	e7fe      	b.n	800b178 <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800b17a:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800b17c:	2502      	movs	r5, #2
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800b17e:	9e05      	ldr	r6, [sp, #20]
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800b180:	f884 505d 	strb.w	r5, [r4, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800b184:	ad04      	add	r5, sp, #16
 800b186:	9402      	str	r4, [sp, #8]
 800b188:	9501      	str	r5, [sp, #4]
 800b18a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 800b18c:	9500      	str	r5, [sp, #0]
 800b18e:	f7ff ff7f 	bl	800b090 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800b192:	4620      	mov	r0, r4
 800b194:	f7ff fe66 	bl	800ae64 <prvAddNewTaskToReadyList>
	}
 800b198:	9804      	ldr	r0, [sp, #16]
 800b19a:	b006      	add	sp, #24
 800b19c:	bd70      	pop	{r4, r5, r6, pc}

0800b19e <xTaskCreate>:
	{
 800b19e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b1a2:	4607      	mov	r7, r0
 800b1a4:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800b1a6:	0090      	lsls	r0, r2, #2
	{
 800b1a8:	4688      	mov	r8, r1
 800b1aa:	4616      	mov	r6, r2
 800b1ac:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800b1ae:	f7fe fe9f 	bl	8009ef0 <pvPortMalloc>
			if( pxStack != NULL )
 800b1b2:	4605      	mov	r5, r0
 800b1b4:	b1e8      	cbz	r0, 800b1f2 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800b1b6:	2060      	movs	r0, #96	; 0x60
 800b1b8:	f7fe fe9a 	bl	8009ef0 <pvPortMalloc>
				if( pxNewTCB != NULL )
 800b1bc:	4604      	mov	r4, r0
 800b1be:	b1a8      	cbz	r0, 800b1ec <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800b1c0:	2300      	movs	r3, #0
					pxNewTCB->pxStack = pxStack;
 800b1c2:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800b1c4:	4632      	mov	r2, r6
 800b1c6:	4641      	mov	r1, r8
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800b1c8:	f880 305d 	strb.w	r3, [r0, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800b1cc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800b1ce:	9002      	str	r0, [sp, #8]
 800b1d0:	4638      	mov	r0, r7
 800b1d2:	9301      	str	r3, [sp, #4]
 800b1d4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800b1d6:	9300      	str	r3, [sp, #0]
 800b1d8:	464b      	mov	r3, r9
 800b1da:	f7ff ff59 	bl	800b090 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800b1de:	4620      	mov	r0, r4
 800b1e0:	f7ff fe40 	bl	800ae64 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800b1e4:	2001      	movs	r0, #1
	}
 800b1e6:	b005      	add	sp, #20
 800b1e8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800b1ec:	4628      	mov	r0, r5
 800b1ee:	f7fe ff17 	bl	800a020 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800b1f2:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 800b1f6:	e7f6      	b.n	800b1e6 <xTaskCreate+0x48>

0800b1f8 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800b1f8:	4a02      	ldr	r2, [pc, #8]	; (800b204 <vTaskSuspendAll+0xc>)
 800b1fa:	6813      	ldr	r3, [r2, #0]
 800b1fc:	3301      	adds	r3, #1
 800b1fe:	6013      	str	r3, [r2, #0]
}
 800b200:	4770      	bx	lr
 800b202:	bf00      	nop
 800b204:	2400def4 	.word	0x2400def4

0800b208 <xTaskGetTickCount>:
		xTicks = xTickCount;
 800b208:	4b01      	ldr	r3, [pc, #4]	; (800b210 <xTaskGetTickCount+0x8>)
 800b20a:	6818      	ldr	r0, [r3, #0]
}
 800b20c:	4770      	bx	lr
 800b20e:	bf00      	nop
 800b210:	2400df74 	.word	0x2400df74

0800b214 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800b214:	4b3f      	ldr	r3, [pc, #252]	; (800b314 <xTaskIncrementTick+0x100>)
 800b216:	681b      	ldr	r3, [r3, #0]
{
 800b218:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800b21c:	2b00      	cmp	r3, #0
 800b21e:	d172      	bne.n	800b306 <xTaskIncrementTick+0xf2>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800b220:	4b3d      	ldr	r3, [pc, #244]	; (800b318 <xTaskIncrementTick+0x104>)
 800b222:	681d      	ldr	r5, [r3, #0]
 800b224:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 800b226:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800b228:	b9bd      	cbnz	r5, 800b25a <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 800b22a:	4b3c      	ldr	r3, [pc, #240]	; (800b31c <xTaskIncrementTick+0x108>)
 800b22c:	681a      	ldr	r2, [r3, #0]
 800b22e:	6812      	ldr	r2, [r2, #0]
 800b230:	b142      	cbz	r2, 800b244 <xTaskIncrementTick+0x30>
 800b232:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b236:	f383 8811 	msr	BASEPRI, r3
 800b23a:	f3bf 8f6f 	isb	sy
 800b23e:	f3bf 8f4f 	dsb	sy
 800b242:	e7fe      	b.n	800b242 <xTaskIncrementTick+0x2e>
 800b244:	4a36      	ldr	r2, [pc, #216]	; (800b320 <xTaskIncrementTick+0x10c>)
 800b246:	6819      	ldr	r1, [r3, #0]
 800b248:	6810      	ldr	r0, [r2, #0]
 800b24a:	6018      	str	r0, [r3, #0]
 800b24c:	6011      	str	r1, [r2, #0]
 800b24e:	4a35      	ldr	r2, [pc, #212]	; (800b324 <xTaskIncrementTick+0x110>)
 800b250:	6813      	ldr	r3, [r2, #0]
 800b252:	3301      	adds	r3, #1
 800b254:	6013      	str	r3, [r2, #0]
 800b256:	f7ff febb 	bl	800afd0 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800b25a:	4e33      	ldr	r6, [pc, #204]	; (800b328 <xTaskIncrementTick+0x114>)
BaseType_t xSwitchRequired = pdFALSE;
 800b25c:	2400      	movs	r4, #0
 800b25e:	4f33      	ldr	r7, [pc, #204]	; (800b32c <xTaskIncrementTick+0x118>)
		if( xConstTickCount >= xNextTaskUnblockTime )
 800b260:	6833      	ldr	r3, [r6, #0]
 800b262:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 800b338 <xTaskIncrementTick+0x124>
 800b266:	429d      	cmp	r5, r3
 800b268:	d211      	bcs.n	800b28e <xTaskIncrementTick+0x7a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800b26a:	f8d8 3000 	ldr.w	r3, [r8]
 800b26e:	2214      	movs	r2, #20
 800b270:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b272:	4353      	muls	r3, r2
 800b274:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 800b276:	2b02      	cmp	r3, #2
			if( xYieldPending != pdFALSE )
 800b278:	4b2d      	ldr	r3, [pc, #180]	; (800b330 <xTaskIncrementTick+0x11c>)
 800b27a:	681b      	ldr	r3, [r3, #0]
				xSwitchRequired = pdTRUE;
 800b27c:	bf28      	it	cs
 800b27e:	2401      	movcs	r4, #1
				xSwitchRequired = pdTRUE;
 800b280:	2b00      	cmp	r3, #0
 800b282:	bf18      	it	ne
 800b284:	2401      	movne	r4, #1
}
 800b286:	4620      	mov	r0, r4
 800b288:	b003      	add	sp, #12
 800b28a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800b28e:	f8df 908c 	ldr.w	r9, [pc, #140]	; 800b31c <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 800b292:	f8df a0a8 	ldr.w	sl, [pc, #168]	; 800b33c <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800b296:	f8d9 3000 	ldr.w	r3, [r9]
 800b29a:	681b      	ldr	r3, [r3, #0]
 800b29c:	b91b      	cbnz	r3, 800b2a6 <xTaskIncrementTick+0x92>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800b29e:	f04f 33ff 	mov.w	r3, #4294967295
 800b2a2:	6033      	str	r3, [r6, #0]
					break;
 800b2a4:	e7e1      	b.n	800b26a <xTaskIncrementTick+0x56>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b2a6:	f8d9 3000 	ldr.w	r3, [r9]
 800b2aa:	68db      	ldr	r3, [r3, #12]
 800b2ac:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800b2b0:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 800b2b4:	4295      	cmp	r5, r2
 800b2b6:	d201      	bcs.n	800b2bc <xTaskIncrementTick+0xa8>
						xNextTaskUnblockTime = xItemValue;
 800b2b8:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800b2ba:	e7d6      	b.n	800b26a <xTaskIncrementTick+0x56>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800b2bc:	f10b 0104 	add.w	r1, fp, #4
 800b2c0:	4608      	mov	r0, r1
 800b2c2:	9101      	str	r1, [sp, #4]
 800b2c4:	f7fe ff1b 	bl	800a0fe <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800b2c8:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 800b2cc:	9901      	ldr	r1, [sp, #4]
 800b2ce:	b122      	cbz	r2, 800b2da <xTaskIncrementTick+0xc6>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800b2d0:	f10b 0018 	add.w	r0, fp, #24
 800b2d4:	f7fe ff13 	bl	800a0fe <uxListRemove>
 800b2d8:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800b2da:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 800b2de:	f8da 2000 	ldr.w	r2, [sl]
 800b2e2:	4290      	cmp	r0, r2
 800b2e4:	d901      	bls.n	800b2ea <xTaskIncrementTick+0xd6>
 800b2e6:	f8ca 0000 	str.w	r0, [sl]
 800b2ea:	2314      	movs	r3, #20
 800b2ec:	fb03 7000 	mla	r0, r3, r0, r7
 800b2f0:	f7fe fee2 	bl	800a0b8 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800b2f4:	f8d8 1000 	ldr.w	r1, [r8]
 800b2f8:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 800b2fc:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 800b2fe:	429a      	cmp	r2, r3
 800b300:	bf28      	it	cs
 800b302:	2401      	movcs	r4, #1
 800b304:	e7c7      	b.n	800b296 <xTaskIncrementTick+0x82>
		++xPendedTicks;
 800b306:	4a0b      	ldr	r2, [pc, #44]	; (800b334 <xTaskIncrementTick+0x120>)
BaseType_t xSwitchRequired = pdFALSE;
 800b308:	2400      	movs	r4, #0
		++xPendedTicks;
 800b30a:	6813      	ldr	r3, [r2, #0]
 800b30c:	3301      	adds	r3, #1
 800b30e:	6013      	str	r3, [r2, #0]
	return xSwitchRequired;
 800b310:	e7b9      	b.n	800b286 <xTaskIncrementTick+0x72>
 800b312:	bf00      	nop
 800b314:	2400def4 	.word	0x2400def4
 800b318:	2400df74 	.word	0x2400df74
 800b31c:	2400da84 	.word	0x2400da84
 800b320:	2400da88 	.word	0x2400da88
 800b324:	2400df2c 	.word	0x2400df2c
 800b328:	2400df28 	.word	0x2400df28
 800b32c:	2400da8c 	.word	0x2400da8c
 800b330:	2400df78 	.word	0x2400df78
 800b334:	2400df30 	.word	0x2400df30
 800b338:	2400da80 	.word	0x2400da80
 800b33c:	2400defc 	.word	0x2400defc

0800b340 <xTaskResumeAll>:
{
 800b340:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 800b342:	4c31      	ldr	r4, [pc, #196]	; (800b408 <xTaskResumeAll+0xc8>)
 800b344:	6823      	ldr	r3, [r4, #0]
 800b346:	b943      	cbnz	r3, 800b35a <xTaskResumeAll+0x1a>
 800b348:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b34c:	f383 8811 	msr	BASEPRI, r3
 800b350:	f3bf 8f6f 	isb	sy
 800b354:	f3bf 8f4f 	dsb	sy
 800b358:	e7fe      	b.n	800b358 <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 800b35a:	f7fe ff43 	bl	800a1e4 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800b35e:	6823      	ldr	r3, [r4, #0]
 800b360:	3b01      	subs	r3, #1
 800b362:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800b364:	6824      	ldr	r4, [r4, #0]
 800b366:	b12c      	cbz	r4, 800b374 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 800b368:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800b36a:	f7fe ff5b 	bl	800a224 <vPortExitCritical>
}
 800b36e:	4620      	mov	r0, r4
 800b370:	b003      	add	sp, #12
 800b372:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800b374:	4b25      	ldr	r3, [pc, #148]	; (800b40c <xTaskResumeAll+0xcc>)
 800b376:	681b      	ldr	r3, [r3, #0]
 800b378:	2b00      	cmp	r3, #0
 800b37a:	d0f5      	beq.n	800b368 <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800b37c:	4d24      	ldr	r5, [pc, #144]	; (800b410 <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 800b37e:	4e25      	ldr	r6, [pc, #148]	; (800b414 <xTaskResumeAll+0xd4>)
 800b380:	4f25      	ldr	r7, [pc, #148]	; (800b418 <xTaskResumeAll+0xd8>)
 800b382:	e01e      	b.n	800b3c2 <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b384:	68eb      	ldr	r3, [r5, #12]
 800b386:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800b388:	f104 0018 	add.w	r0, r4, #24
 800b38c:	f7fe feb7 	bl	800a0fe <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800b390:	1d21      	adds	r1, r4, #4
 800b392:	4608      	mov	r0, r1
 800b394:	9101      	str	r1, [sp, #4]
 800b396:	f7fe feb2 	bl	800a0fe <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800b39a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800b39c:	6832      	ldr	r2, [r6, #0]
 800b39e:	9901      	ldr	r1, [sp, #4]
 800b3a0:	4293      	cmp	r3, r2
 800b3a2:	d900      	bls.n	800b3a6 <xTaskResumeAll+0x66>
 800b3a4:	6033      	str	r3, [r6, #0]
 800b3a6:	2014      	movs	r0, #20
 800b3a8:	fb00 7003 	mla	r0, r0, r3, r7
 800b3ac:	f7fe fe84 	bl	800a0b8 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800b3b0:	4b1a      	ldr	r3, [pc, #104]	; (800b41c <xTaskResumeAll+0xdc>)
 800b3b2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800b3b4:	681b      	ldr	r3, [r3, #0]
 800b3b6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b3b8:	429a      	cmp	r2, r3
 800b3ba:	d302      	bcc.n	800b3c2 <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 800b3bc:	4b18      	ldr	r3, [pc, #96]	; (800b420 <xTaskResumeAll+0xe0>)
 800b3be:	2201      	movs	r2, #1
 800b3c0:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800b3c2:	682b      	ldr	r3, [r5, #0]
 800b3c4:	2b00      	cmp	r3, #0
 800b3c6:	d1dd      	bne.n	800b384 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 800b3c8:	b10c      	cbz	r4, 800b3ce <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 800b3ca:	f7ff fe01 	bl	800afd0 <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800b3ce:	4d15      	ldr	r5, [pc, #84]	; (800b424 <xTaskResumeAll+0xe4>)
 800b3d0:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800b3d2:	b144      	cbz	r4, 800b3e6 <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 800b3d4:	4e12      	ldr	r6, [pc, #72]	; (800b420 <xTaskResumeAll+0xe0>)
 800b3d6:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 800b3d8:	f7ff ff1c 	bl	800b214 <xTaskIncrementTick>
 800b3dc:	b100      	cbz	r0, 800b3e0 <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 800b3de:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800b3e0:	3c01      	subs	r4, #1
 800b3e2:	d1f9      	bne.n	800b3d8 <xTaskResumeAll+0x98>
						xPendedTicks = 0;
 800b3e4:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 800b3e6:	4b0e      	ldr	r3, [pc, #56]	; (800b420 <xTaskResumeAll+0xe0>)
 800b3e8:	681b      	ldr	r3, [r3, #0]
 800b3ea:	2b00      	cmp	r3, #0
 800b3ec:	d0bc      	beq.n	800b368 <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 800b3ee:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800b3f2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800b3f6:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800b3fa:	f3bf 8f4f 	dsb	sy
 800b3fe:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800b402:	2401      	movs	r4, #1
 800b404:	e7b1      	b.n	800b36a <xTaskResumeAll+0x2a>
 800b406:	bf00      	nop
 800b408:	2400def4 	.word	0x2400def4
 800b40c:	2400deec 	.word	0x2400deec
 800b410:	2400df34 	.word	0x2400df34
 800b414:	2400defc 	.word	0x2400defc
 800b418:	2400da8c 	.word	0x2400da8c
 800b41c:	2400da80 	.word	0x2400da80
 800b420:	2400df78 	.word	0x2400df78
 800b424:	2400df30 	.word	0x2400df30

0800b428 <vTaskSetApplicationTaskTag>:
	{
 800b428:	b538      	push	{r3, r4, r5, lr}
 800b42a:	460d      	mov	r5, r1
		if( xTask == NULL )
 800b42c:	4604      	mov	r4, r0
 800b42e:	b908      	cbnz	r0, 800b434 <vTaskSetApplicationTaskTag+0xc>
			xTCB = ( TCB_t * ) pxCurrentTCB;
 800b430:	4b04      	ldr	r3, [pc, #16]	; (800b444 <vTaskSetApplicationTaskTag+0x1c>)
 800b432:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
 800b434:	f7fe fed6 	bl	800a1e4 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
 800b438:	6565      	str	r5, [r4, #84]	; 0x54
	}
 800b43a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
 800b43e:	f7fe bef1 	b.w	800a224 <vPortExitCritical>
 800b442:	bf00      	nop
 800b444:	2400da80 	.word	0x2400da80

0800b448 <xTaskCallApplicationTaskHook>:
	{
 800b448:	4603      	mov	r3, r0
 800b44a:	4608      	mov	r0, r1
		if( xTask == NULL )
 800b44c:	b90b      	cbnz	r3, 800b452 <xTaskCallApplicationTaskHook+0xa>
			xTCB = pxCurrentTCB;
 800b44e:	4b03      	ldr	r3, [pc, #12]	; (800b45c <xTaskCallApplicationTaskHook+0x14>)
 800b450:	681b      	ldr	r3, [r3, #0]
		if( xTCB->pxTaskTag != NULL )
 800b452:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800b454:	b103      	cbz	r3, 800b458 <xTaskCallApplicationTaskHook+0x10>
			xReturn = xTCB->pxTaskTag( pvParameter );
 800b456:	4718      	bx	r3
	}
 800b458:	4618      	mov	r0, r3
 800b45a:	4770      	bx	lr
 800b45c:	2400da80 	.word	0x2400da80

0800b460 <vTaskStartScheduler>:
{
 800b460:	b510      	push	{r4, lr}
 800b462:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800b464:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800b466:	aa07      	add	r2, sp, #28
 800b468:	a906      	add	r1, sp, #24
 800b46a:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800b46c:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800b470:	f7fe fd02 	bl	8009e78 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800b474:	9b05      	ldr	r3, [sp, #20]
 800b476:	9a07      	ldr	r2, [sp, #28]
 800b478:	9302      	str	r3, [sp, #8]
 800b47a:	9b06      	ldr	r3, [sp, #24]
 800b47c:	4919      	ldr	r1, [pc, #100]	; (800b4e4 <vTaskStartScheduler+0x84>)
 800b47e:	481a      	ldr	r0, [pc, #104]	; (800b4e8 <vTaskStartScheduler+0x88>)
 800b480:	e9cd 4300 	strd	r4, r3, [sp]
 800b484:	4623      	mov	r3, r4
 800b486:	f7ff fe52 	bl	800b12e <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 800b48a:	b340      	cbz	r0, 800b4de <vTaskStartScheduler+0x7e>
			xReturn = xTimerCreateTimerTask();
 800b48c:	f000 fa88 	bl	800b9a0 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800b490:	2801      	cmp	r0, #1
 800b492:	d119      	bne.n	800b4c8 <vTaskStartScheduler+0x68>
 800b494:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b498:	f383 8811 	msr	BASEPRI, r3
 800b49c:	f3bf 8f6f 	isb	sy
 800b4a0:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 800b4a4:	f04f 32ff 	mov.w	r2, #4294967295
 800b4a8:	4b10      	ldr	r3, [pc, #64]	; (800b4ec <vTaskStartScheduler+0x8c>)
		traceTASK_SWITCHED_IN();
 800b4aa:	4621      	mov	r1, r4
		xNextTaskUnblockTime = portMAX_DELAY;
 800b4ac:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 800b4ae:	4b10      	ldr	r3, [pc, #64]	; (800b4f0 <vTaskStartScheduler+0x90>)
 800b4b0:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800b4b2:	4b10      	ldr	r3, [pc, #64]	; (800b4f4 <vTaskStartScheduler+0x94>)
 800b4b4:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
 800b4b6:	4b10      	ldr	r3, [pc, #64]	; (800b4f8 <vTaskStartScheduler+0x98>)
 800b4b8:	6818      	ldr	r0, [r3, #0]
 800b4ba:	f7ff ffc5 	bl	800b448 <xTaskCallApplicationTaskHook>
}
 800b4be:	b008      	add	sp, #32
 800b4c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 800b4c4:	f7fe bf1e 	b.w	800a304 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800b4c8:	3001      	adds	r0, #1
 800b4ca:	d108      	bne.n	800b4de <vTaskStartScheduler+0x7e>
 800b4cc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b4d0:	f383 8811 	msr	BASEPRI, r3
 800b4d4:	f3bf 8f6f 	isb	sy
 800b4d8:	f3bf 8f4f 	dsb	sy
 800b4dc:	e7fe      	b.n	800b4dc <vTaskStartScheduler+0x7c>
}
 800b4de:	b008      	add	sp, #32
 800b4e0:	bd10      	pop	{r4, pc}
 800b4e2:	bf00      	nop
 800b4e4:	08022a30 	.word	0x08022a30
 800b4e8:	0800b02d 	.word	0x0800b02d
 800b4ec:	2400df28 	.word	0x2400df28
 800b4f0:	2400df48 	.word	0x2400df48
 800b4f4:	2400df74 	.word	0x2400df74
 800b4f8:	2400da80 	.word	0x2400da80

0800b4fc <vTaskSwitchContext>:
{
 800b4fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800b4fe:	4b1c      	ldr	r3, [pc, #112]	; (800b570 <vTaskSwitchContext+0x74>)
 800b500:	681a      	ldr	r2, [r3, #0]
 800b502:	4b1c      	ldr	r3, [pc, #112]	; (800b574 <vTaskSwitchContext+0x78>)
 800b504:	b112      	cbz	r2, 800b50c <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 800b506:	2201      	movs	r2, #1
 800b508:	601a      	str	r2, [r3, #0]
}
 800b50a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		traceTASK_SWITCHED_OUT();
 800b50c:	4c1a      	ldr	r4, [pc, #104]	; (800b578 <vTaskSwitchContext+0x7c>)
 800b50e:	2101      	movs	r1, #1
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b510:	4e1a      	ldr	r6, [pc, #104]	; (800b57c <vTaskSwitchContext+0x80>)
 800b512:	2714      	movs	r7, #20
		xYieldPending = pdFALSE;
 800b514:	601a      	str	r2, [r3, #0]
		traceTASK_SWITCHED_OUT();
 800b516:	6820      	ldr	r0, [r4, #0]
 800b518:	f7ff ff96 	bl	800b448 <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b51c:	6832      	ldr	r2, [r6, #0]
 800b51e:	4918      	ldr	r1, [pc, #96]	; (800b580 <vTaskSwitchContext+0x84>)
 800b520:	fb07 f302 	mul.w	r3, r7, r2
 800b524:	58cd      	ldr	r5, [r1, r3]
 800b526:	18c8      	adds	r0, r1, r3
 800b528:	b1ad      	cbz	r5, 800b556 <vTaskSwitchContext+0x5a>
 800b52a:	6845      	ldr	r5, [r0, #4]
 800b52c:	3308      	adds	r3, #8
 800b52e:	686d      	ldr	r5, [r5, #4]
 800b530:	440b      	add	r3, r1
 800b532:	429d      	cmp	r5, r3
 800b534:	6045      	str	r5, [r0, #4]
 800b536:	bf04      	itt	eq
 800b538:	686b      	ldreq	r3, [r5, #4]
 800b53a:	6043      	streq	r3, [r0, #4]
 800b53c:	2314      	movs	r3, #20
 800b53e:	fb03 1102 	mla	r1, r3, r2, r1
 800b542:	684b      	ldr	r3, [r1, #4]
		traceTASK_SWITCHED_IN();
 800b544:	2100      	movs	r1, #0
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b546:	68db      	ldr	r3, [r3, #12]
 800b548:	6023      	str	r3, [r4, #0]
 800b54a:	6032      	str	r2, [r6, #0]
		traceTASK_SWITCHED_IN();
 800b54c:	6820      	ldr	r0, [r4, #0]
}
 800b54e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
		traceTASK_SWITCHED_IN();
 800b552:	f7ff bf79 	b.w	800b448 <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b556:	b942      	cbnz	r2, 800b56a <vTaskSwitchContext+0x6e>
 800b558:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b55c:	f383 8811 	msr	BASEPRI, r3
 800b560:	f3bf 8f6f 	isb	sy
 800b564:	f3bf 8f4f 	dsb	sy
 800b568:	e7fe      	b.n	800b568 <vTaskSwitchContext+0x6c>
 800b56a:	3a01      	subs	r2, #1
 800b56c:	e7d8      	b.n	800b520 <vTaskSwitchContext+0x24>
 800b56e:	bf00      	nop
 800b570:	2400def4 	.word	0x2400def4
 800b574:	2400df78 	.word	0x2400df78
 800b578:	2400da80 	.word	0x2400da80
 800b57c:	2400defc 	.word	0x2400defc
 800b580:	2400da8c 	.word	0x2400da8c

0800b584 <vTaskPlaceOnEventList>:
{
 800b584:	b510      	push	{r4, lr}
 800b586:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 800b588:	b940      	cbnz	r0, 800b59c <vTaskPlaceOnEventList+0x18>
 800b58a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b58e:	f383 8811 	msr	BASEPRI, r3
 800b592:	f3bf 8f6f 	isb	sy
 800b596:	f3bf 8f4f 	dsb	sy
 800b59a:	e7fe      	b.n	800b59a <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800b59c:	4b05      	ldr	r3, [pc, #20]	; (800b5b4 <vTaskPlaceOnEventList+0x30>)
 800b59e:	6819      	ldr	r1, [r3, #0]
 800b5a0:	3118      	adds	r1, #24
 800b5a2:	f7fe fd95 	bl	800a0d0 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800b5a6:	4620      	mov	r0, r4
 800b5a8:	2101      	movs	r1, #1
}
 800b5aa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800b5ae:	f7ff bcd7 	b.w	800af60 <prvAddCurrentTaskToDelayedList>
 800b5b2:	bf00      	nop
 800b5b4:	2400da80 	.word	0x2400da80

0800b5b8 <vTaskPlaceOnEventListRestricted>:
	{
 800b5b8:	b538      	push	{r3, r4, r5, lr}
 800b5ba:	460d      	mov	r5, r1
 800b5bc:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 800b5be:	b940      	cbnz	r0, 800b5d2 <vTaskPlaceOnEventListRestricted+0x1a>
 800b5c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b5c4:	f383 8811 	msr	BASEPRI, r3
 800b5c8:	f3bf 8f6f 	isb	sy
 800b5cc:	f3bf 8f4f 	dsb	sy
 800b5d0:	e7fe      	b.n	800b5d0 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800b5d2:	4b07      	ldr	r3, [pc, #28]	; (800b5f0 <vTaskPlaceOnEventListRestricted+0x38>)
 800b5d4:	6819      	ldr	r1, [r3, #0]
 800b5d6:	3118      	adds	r1, #24
 800b5d8:	f7fe fd6e 	bl	800a0b8 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 800b5dc:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800b5de:	4621      	mov	r1, r4
 800b5e0:	bf0c      	ite	eq
 800b5e2:	4628      	moveq	r0, r5
 800b5e4:	f04f 30ff 	movne.w	r0, #4294967295
	}
 800b5e8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800b5ec:	f7ff bcb8 	b.w	800af60 <prvAddCurrentTaskToDelayedList>
 800b5f0:	2400da80 	.word	0x2400da80

0800b5f4 <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b5f4:	68c3      	ldr	r3, [r0, #12]
{
 800b5f6:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b5f8:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 800b5fa:	b944      	cbnz	r4, 800b60e <xTaskRemoveFromEventList+0x1a>
 800b5fc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b600:	f383 8811 	msr	BASEPRI, r3
 800b604:	f3bf 8f6f 	isb	sy
 800b608:	f3bf 8f4f 	dsb	sy
 800b60c:	e7fe      	b.n	800b60c <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800b60e:	f104 0118 	add.w	r1, r4, #24
 800b612:	4608      	mov	r0, r1
 800b614:	9101      	str	r1, [sp, #4]
 800b616:	f7fe fd72 	bl	800a0fe <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800b61a:	4b12      	ldr	r3, [pc, #72]	; (800b664 <xTaskRemoveFromEventList+0x70>)
 800b61c:	9901      	ldr	r1, [sp, #4]
 800b61e:	681b      	ldr	r3, [r3, #0]
 800b620:	b9e3      	cbnz	r3, 800b65c <xTaskRemoveFromEventList+0x68>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800b622:	1d21      	adds	r1, r4, #4
 800b624:	4608      	mov	r0, r1
 800b626:	9101      	str	r1, [sp, #4]
 800b628:	f7fe fd69 	bl	800a0fe <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800b62c:	4a0e      	ldr	r2, [pc, #56]	; (800b668 <xTaskRemoveFromEventList+0x74>)
 800b62e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800b630:	6810      	ldr	r0, [r2, #0]
 800b632:	9901      	ldr	r1, [sp, #4]
 800b634:	4283      	cmp	r3, r0
 800b636:	d900      	bls.n	800b63a <xTaskRemoveFromEventList+0x46>
 800b638:	6013      	str	r3, [r2, #0]
 800b63a:	4a0c      	ldr	r2, [pc, #48]	; (800b66c <xTaskRemoveFromEventList+0x78>)
 800b63c:	2014      	movs	r0, #20
 800b63e:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800b642:	f7fe fd39 	bl	800a0b8 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800b646:	4b0a      	ldr	r3, [pc, #40]	; (800b670 <xTaskRemoveFromEventList+0x7c>)
 800b648:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800b64a:	681b      	ldr	r3, [r3, #0]
 800b64c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b64e:	429a      	cmp	r2, r3
 800b650:	d906      	bls.n	800b660 <xTaskRemoveFromEventList+0x6c>
		xYieldPending = pdTRUE;
 800b652:	2001      	movs	r0, #1
 800b654:	4b07      	ldr	r3, [pc, #28]	; (800b674 <xTaskRemoveFromEventList+0x80>)
 800b656:	6018      	str	r0, [r3, #0]
}
 800b658:	b002      	add	sp, #8
 800b65a:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800b65c:	4806      	ldr	r0, [pc, #24]	; (800b678 <xTaskRemoveFromEventList+0x84>)
 800b65e:	e7f0      	b.n	800b642 <xTaskRemoveFromEventList+0x4e>
		xReturn = pdFALSE;
 800b660:	2000      	movs	r0, #0
	return xReturn;
 800b662:	e7f9      	b.n	800b658 <xTaskRemoveFromEventList+0x64>
 800b664:	2400def4 	.word	0x2400def4
 800b668:	2400defc 	.word	0x2400defc
 800b66c:	2400da8c 	.word	0x2400da8c
 800b670:	2400da80 	.word	0x2400da80
 800b674:	2400df78 	.word	0x2400df78
 800b678:	2400df34 	.word	0x2400df34

0800b67c <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800b67c:	4b03      	ldr	r3, [pc, #12]	; (800b68c <vTaskInternalSetTimeOutState+0x10>)
 800b67e:	681b      	ldr	r3, [r3, #0]
 800b680:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800b682:	4b03      	ldr	r3, [pc, #12]	; (800b690 <vTaskInternalSetTimeOutState+0x14>)
 800b684:	681b      	ldr	r3, [r3, #0]
 800b686:	6043      	str	r3, [r0, #4]
}
 800b688:	4770      	bx	lr
 800b68a:	bf00      	nop
 800b68c:	2400df2c 	.word	0x2400df2c
 800b690:	2400df74 	.word	0x2400df74

0800b694 <xTaskCheckForTimeOut>:
{
 800b694:	b570      	push	{r4, r5, r6, lr}
 800b696:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 800b698:	4605      	mov	r5, r0
 800b69a:	b940      	cbnz	r0, 800b6ae <xTaskCheckForTimeOut+0x1a>
 800b69c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b6a0:	f383 8811 	msr	BASEPRI, r3
 800b6a4:	f3bf 8f6f 	isb	sy
 800b6a8:	f3bf 8f4f 	dsb	sy
 800b6ac:	e7fe      	b.n	800b6ac <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 800b6ae:	b941      	cbnz	r1, 800b6c2 <xTaskCheckForTimeOut+0x2e>
 800b6b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b6b4:	f383 8811 	msr	BASEPRI, r3
 800b6b8:	f3bf 8f6f 	isb	sy
 800b6bc:	f3bf 8f4f 	dsb	sy
 800b6c0:	e7fe      	b.n	800b6c0 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 800b6c2:	f7fe fd8f 	bl	800a1e4 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 800b6c6:	4b0f      	ldr	r3, [pc, #60]	; (800b704 <xTaskCheckForTimeOut+0x70>)
 800b6c8:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800b6ca:	6823      	ldr	r3, [r4, #0]
 800b6cc:	1c5a      	adds	r2, r3, #1
 800b6ce:	d010      	beq.n	800b6f2 <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800b6d0:	480d      	ldr	r0, [pc, #52]	; (800b708 <xTaskCheckForTimeOut+0x74>)
 800b6d2:	682e      	ldr	r6, [r5, #0]
 800b6d4:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800b6d6:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800b6d8:	4286      	cmp	r6, r0
 800b6da:	d001      	beq.n	800b6e0 <xTaskCheckForTimeOut+0x4c>
 800b6dc:	428a      	cmp	r2, r1
 800b6de:	d90f      	bls.n	800b700 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800b6e0:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800b6e2:	4283      	cmp	r3, r0
 800b6e4:	d90a      	bls.n	800b6fc <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 800b6e6:	1a5b      	subs	r3, r3, r1
			vTaskInternalSetTimeOutState( pxTimeOut );
 800b6e8:	4628      	mov	r0, r5
			*pxTicksToWait -= xElapsedTime;
 800b6ea:	4413      	add	r3, r2
 800b6ec:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 800b6ee:	f7ff ffc5 	bl	800b67c <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 800b6f2:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800b6f4:	f7fe fd96 	bl	800a224 <vPortExitCritical>
}
 800b6f8:	4620      	mov	r0, r4
 800b6fa:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 800b6fc:	2300      	movs	r3, #0
 800b6fe:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 800b700:	2401      	movs	r4, #1
 800b702:	e7f7      	b.n	800b6f4 <xTaskCheckForTimeOut+0x60>
 800b704:	2400df74 	.word	0x2400df74
 800b708:	2400df2c 	.word	0x2400df2c

0800b70c <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800b70c:	4b01      	ldr	r3, [pc, #4]	; (800b714 <vTaskMissedYield+0x8>)
 800b70e:	2201      	movs	r2, #1
 800b710:	601a      	str	r2, [r3, #0]
}
 800b712:	4770      	bx	lr
 800b714:	2400df78 	.word	0x2400df78

0800b718 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800b718:	4b05      	ldr	r3, [pc, #20]	; (800b730 <xTaskGetSchedulerState+0x18>)
 800b71a:	681b      	ldr	r3, [r3, #0]
 800b71c:	b133      	cbz	r3, 800b72c <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800b71e:	4b05      	ldr	r3, [pc, #20]	; (800b734 <xTaskGetSchedulerState+0x1c>)
 800b720:	681b      	ldr	r3, [r3, #0]
				xReturn = taskSCHEDULER_SUSPENDED;
 800b722:	2b00      	cmp	r3, #0
 800b724:	bf0c      	ite	eq
 800b726:	2002      	moveq	r0, #2
 800b728:	2000      	movne	r0, #0
 800b72a:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800b72c:	2001      	movs	r0, #1
	}
 800b72e:	4770      	bx	lr
 800b730:	2400df48 	.word	0x2400df48
 800b734:	2400def4 	.word	0x2400def4

0800b738 <xTaskPriorityInherit>:
	{
 800b738:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800b73a:	4604      	mov	r4, r0
 800b73c:	b340      	cbz	r0, 800b790 <xTaskPriorityInherit+0x58>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800b73e:	4d1b      	ldr	r5, [pc, #108]	; (800b7ac <xTaskPriorityInherit+0x74>)
 800b740:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800b742:	682a      	ldr	r2, [r5, #0]
 800b744:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800b746:	4293      	cmp	r3, r2
 800b748:	d228      	bcs.n	800b79c <xTaskPriorityInherit+0x64>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800b74a:	6982      	ldr	r2, [r0, #24]
 800b74c:	2a00      	cmp	r2, #0
 800b74e:	db04      	blt.n	800b75a <xTaskPriorityInherit+0x22>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800b750:	682a      	ldr	r2, [r5, #0]
 800b752:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800b754:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
 800b758:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800b75a:	2214      	movs	r2, #20
 800b75c:	4e14      	ldr	r6, [pc, #80]	; (800b7b0 <xTaskPriorityInherit+0x78>)
 800b75e:	fb02 6303 	mla	r3, r2, r3, r6
 800b762:	6962      	ldr	r2, [r4, #20]
 800b764:	429a      	cmp	r2, r3
 800b766:	d115      	bne.n	800b794 <xTaskPriorityInherit+0x5c>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800b768:	1d21      	adds	r1, r4, #4
 800b76a:	4608      	mov	r0, r1
 800b76c:	9101      	str	r1, [sp, #4]
 800b76e:	f7fe fcc6 	bl	800a0fe <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800b772:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800b774:	4a0f      	ldr	r2, [pc, #60]	; (800b7b4 <xTaskPriorityInherit+0x7c>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800b776:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800b778:	6810      	ldr	r0, [r2, #0]
 800b77a:	9901      	ldr	r1, [sp, #4]
 800b77c:	4283      	cmp	r3, r0
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800b77e:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800b780:	d900      	bls.n	800b784 <xTaskPriorityInherit+0x4c>
 800b782:	6013      	str	r3, [r2, #0]
 800b784:	2014      	movs	r0, #20
 800b786:	fb00 6003 	mla	r0, r0, r3, r6
 800b78a:	f7fe fc95 	bl	800a0b8 <vListInsertEnd>
				xReturn = pdTRUE;
 800b78e:	2001      	movs	r0, #1
	}
 800b790:	b002      	add	sp, #8
 800b792:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800b794:	682b      	ldr	r3, [r5, #0]
 800b796:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b798:	62e3      	str	r3, [r4, #44]	; 0x2c
 800b79a:	e7f8      	b.n	800b78e <xTaskPriorityInherit+0x56>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800b79c:	682b      	ldr	r3, [r5, #0]
 800b79e:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800b7a0:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 800b7a2:	42a0      	cmp	r0, r4
 800b7a4:	bf2c      	ite	cs
 800b7a6:	2000      	movcs	r0, #0
 800b7a8:	2001      	movcc	r0, #1
 800b7aa:	e7f1      	b.n	800b790 <xTaskPriorityInherit+0x58>
 800b7ac:	2400da80 	.word	0x2400da80
 800b7b0:	2400da8c 	.word	0x2400da8c
 800b7b4:	2400defc 	.word	0x2400defc

0800b7b8 <xTaskPriorityDisinherit>:
	{
 800b7b8:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 800b7ba:	b910      	cbnz	r0, 800b7c2 <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 800b7bc:	2000      	movs	r0, #0
	}
 800b7be:	b002      	add	sp, #8
 800b7c0:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 800b7c2:	4b1c      	ldr	r3, [pc, #112]	; (800b834 <xTaskPriorityDisinherit+0x7c>)
 800b7c4:	681c      	ldr	r4, [r3, #0]
 800b7c6:	4284      	cmp	r4, r0
 800b7c8:	d008      	beq.n	800b7dc <xTaskPriorityDisinherit+0x24>
 800b7ca:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b7ce:	f383 8811 	msr	BASEPRI, r3
 800b7d2:	f3bf 8f6f 	isb	sy
 800b7d6:	f3bf 8f4f 	dsb	sy
 800b7da:	e7fe      	b.n	800b7da <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 800b7dc:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800b7de:	b943      	cbnz	r3, 800b7f2 <xTaskPriorityDisinherit+0x3a>
 800b7e0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b7e4:	f383 8811 	msr	BASEPRI, r3
 800b7e8:	f3bf 8f6f 	isb	sy
 800b7ec:	f3bf 8f4f 	dsb	sy
 800b7f0:	e7fe      	b.n	800b7f0 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800b7f2:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
			( pxTCB->uxMutexesHeld )--;
 800b7f4:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800b7f6:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800b7f8:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800b7fa:	4291      	cmp	r1, r2
 800b7fc:	d0de      	beq.n	800b7bc <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800b7fe:	2b00      	cmp	r3, #0
 800b800:	d1dc      	bne.n	800b7bc <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800b802:	1d21      	adds	r1, r4, #4
 800b804:	4608      	mov	r0, r1
 800b806:	9101      	str	r1, [sp, #4]
 800b808:	f7fe fc79 	bl	800a0fe <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800b80c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800b80e:	9901      	ldr	r1, [sp, #4]
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800b810:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800b814:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800b816:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800b818:	4a07      	ldr	r2, [pc, #28]	; (800b838 <xTaskPriorityDisinherit+0x80>)
 800b81a:	6810      	ldr	r0, [r2, #0]
 800b81c:	4283      	cmp	r3, r0
 800b81e:	d900      	bls.n	800b822 <xTaskPriorityDisinherit+0x6a>
 800b820:	6013      	str	r3, [r2, #0]
 800b822:	4a06      	ldr	r2, [pc, #24]	; (800b83c <xTaskPriorityDisinherit+0x84>)
 800b824:	2014      	movs	r0, #20
 800b826:	fb00 2003 	mla	r0, r0, r3, r2
 800b82a:	f7fe fc45 	bl	800a0b8 <vListInsertEnd>
					xReturn = pdTRUE;
 800b82e:	2001      	movs	r0, #1
		return xReturn;
 800b830:	e7c5      	b.n	800b7be <xTaskPriorityDisinherit+0x6>
 800b832:	bf00      	nop
 800b834:	2400da80 	.word	0x2400da80
 800b838:	2400defc 	.word	0x2400defc
 800b83c:	2400da8c 	.word	0x2400da8c

0800b840 <vTaskPriorityDisinheritAfterTimeout>:
	{
 800b840:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 800b842:	4604      	mov	r4, r0
 800b844:	2800      	cmp	r0, #0
 800b846:	d044      	beq.n	800b8d2 <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 800b848:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800b84a:	b942      	cbnz	r2, 800b85e <vTaskPriorityDisinheritAfterTimeout+0x1e>
 800b84c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b850:	f383 8811 	msr	BASEPRI, r3
 800b854:	f3bf 8f6f 	isb	sy
 800b858:	f3bf 8f4f 	dsb	sy
 800b85c:	e7fe      	b.n	800b85c <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800b85e:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 800b860:	4299      	cmp	r1, r3
 800b862:	bf38      	it	cc
 800b864:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 800b866:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800b868:	428b      	cmp	r3, r1
 800b86a:	d032      	beq.n	800b8d2 <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800b86c:	2a01      	cmp	r2, #1
 800b86e:	d130      	bne.n	800b8d2 <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 800b870:	4a19      	ldr	r2, [pc, #100]	; (800b8d8 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 800b872:	6812      	ldr	r2, [r2, #0]
 800b874:	4282      	cmp	r2, r0
 800b876:	d108      	bne.n	800b88a <vTaskPriorityDisinheritAfterTimeout+0x4a>
 800b878:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b87c:	f383 8811 	msr	BASEPRI, r3
 800b880:	f3bf 8f6f 	isb	sy
 800b884:	f3bf 8f4f 	dsb	sy
 800b888:	e7fe      	b.n	800b888 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800b88a:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800b88c:	4d13      	ldr	r5, [pc, #76]	; (800b8dc <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800b88e:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800b890:	f04f 0214 	mov.w	r2, #20
					pxTCB->uxPriority = uxPriorityToUse;
 800b894:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800b896:	fb02 5303 	mla	r3, r2, r3, r5
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800b89a:	bfa8      	it	ge
 800b89c:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800b8a0:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800b8a2:	bfa8      	it	ge
 800b8a4:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800b8a6:	429a      	cmp	r2, r3
 800b8a8:	d113      	bne.n	800b8d2 <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800b8aa:	1d01      	adds	r1, r0, #4
 800b8ac:	4608      	mov	r0, r1
 800b8ae:	9101      	str	r1, [sp, #4]
 800b8b0:	f7fe fc25 	bl	800a0fe <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800b8b4:	4a0a      	ldr	r2, [pc, #40]	; (800b8e0 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 800b8b6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800b8b8:	6810      	ldr	r0, [r2, #0]
 800b8ba:	9901      	ldr	r1, [sp, #4]
 800b8bc:	4283      	cmp	r3, r0
 800b8be:	d900      	bls.n	800b8c2 <vTaskPriorityDisinheritAfterTimeout+0x82>
 800b8c0:	6013      	str	r3, [r2, #0]
 800b8c2:	2014      	movs	r0, #20
 800b8c4:	fb00 5003 	mla	r0, r0, r3, r5
	}
 800b8c8:	b003      	add	sp, #12
 800b8ca:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800b8ce:	f7fe bbf3 	b.w	800a0b8 <vListInsertEnd>
	}
 800b8d2:	b003      	add	sp, #12
 800b8d4:	bd30      	pop	{r4, r5, pc}
 800b8d6:	bf00      	nop
 800b8d8:	2400da80 	.word	0x2400da80
 800b8dc:	2400da8c 	.word	0x2400da8c
 800b8e0:	2400defc 	.word	0x2400defc

0800b8e4 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800b8e4:	4b04      	ldr	r3, [pc, #16]	; (800b8f8 <pvTaskIncrementMutexHeldCount+0x14>)
 800b8e6:	681a      	ldr	r2, [r3, #0]
 800b8e8:	b11a      	cbz	r2, 800b8f2 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800b8ea:	6819      	ldr	r1, [r3, #0]
 800b8ec:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800b8ee:	3201      	adds	r2, #1
 800b8f0:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800b8f2:	6818      	ldr	r0, [r3, #0]
	}
 800b8f4:	4770      	bx	lr
 800b8f6:	bf00      	nop
 800b8f8:	2400da80 	.word	0x2400da80

0800b8fc <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 800b8fc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800b8fe:	4c11      	ldr	r4, [pc, #68]	; (800b944 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 800b900:	f7fe fc70 	bl	800a1e4 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800b904:	6825      	ldr	r5, [r4, #0]
 800b906:	b9bd      	cbnz	r5, 800b938 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 800b908:	4f0f      	ldr	r7, [pc, #60]	; (800b948 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 800b90a:	4e10      	ldr	r6, [pc, #64]	; (800b94c <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 800b90c:	4638      	mov	r0, r7
 800b90e:	f7fe fbc5 	bl	800a09c <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800b912:	4630      	mov	r0, r6
 800b914:	f7fe fbc2 	bl	800a09c <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800b918:	4b0d      	ldr	r3, [pc, #52]	; (800b950 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800b91a:	4a0e      	ldr	r2, [pc, #56]	; (800b954 <prvCheckForValidListAndQueue+0x58>)
 800b91c:	2110      	movs	r1, #16
			pxCurrentTimerList = &xActiveTimerList1;
 800b91e:	601f      	str	r7, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800b920:	200a      	movs	r0, #10
			pxOverflowTimerList = &xActiveTimerList2;
 800b922:	4b0d      	ldr	r3, [pc, #52]	; (800b958 <prvCheckForValidListAndQueue+0x5c>)
 800b924:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800b926:	4b0d      	ldr	r3, [pc, #52]	; (800b95c <prvCheckForValidListAndQueue+0x60>)
 800b928:	9500      	str	r5, [sp, #0]
 800b92a:	f7fe fe6b 	bl	800a604 <xQueueGenericCreateStatic>
 800b92e:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 800b930:	b110      	cbz	r0, 800b938 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800b932:	490b      	ldr	r1, [pc, #44]	; (800b960 <prvCheckForValidListAndQueue+0x64>)
 800b934:	f7ff fa36 	bl	800ada4 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 800b938:	b003      	add	sp, #12
 800b93a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 800b93e:	f7fe bc71 	b.w	800a224 <vPortExitCritical>
 800b942:	bf00      	nop
 800b944:	2400e0a0 	.word	0x2400e0a0
 800b948:	2400e024 	.word	0x2400e024
 800b94c:	2400e038 	.word	0x2400e038
 800b950:	2400df7c 	.word	0x2400df7c
 800b954:	2400df84 	.word	0x2400df84
 800b958:	2400df80 	.word	0x2400df80
 800b95c:	2400e050 	.word	0x2400e050
 800b960:	08022a35 	.word	0x08022a35

0800b964 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 800b964:	4291      	cmp	r1, r2
{
 800b966:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800b968:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800b96a:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 800b96c:	d80a      	bhi.n	800b984 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800b96e:	1ad2      	subs	r2, r2, r3
 800b970:	6983      	ldr	r3, [r0, #24]
 800b972:	429a      	cmp	r2, r3
 800b974:	d20d      	bcs.n	800b992 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800b976:	1d01      	adds	r1, r0, #4
 800b978:	4b07      	ldr	r3, [pc, #28]	; (800b998 <prvInsertTimerInActiveList+0x34>)
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800b97a:	6818      	ldr	r0, [r3, #0]
 800b97c:	f7fe fba8 	bl	800a0d0 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 800b980:	2000      	movs	r0, #0
}
 800b982:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800b984:	429a      	cmp	r2, r3
 800b986:	d201      	bcs.n	800b98c <prvInsertTimerInActiveList+0x28>
 800b988:	4299      	cmp	r1, r3
 800b98a:	d202      	bcs.n	800b992 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800b98c:	1d01      	adds	r1, r0, #4
 800b98e:	4b03      	ldr	r3, [pc, #12]	; (800b99c <prvInsertTimerInActiveList+0x38>)
 800b990:	e7f3      	b.n	800b97a <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 800b992:	2001      	movs	r0, #1
	return xProcessTimerNow;
 800b994:	e7f5      	b.n	800b982 <prvInsertTimerInActiveList+0x1e>
 800b996:	bf00      	nop
 800b998:	2400df80 	.word	0x2400df80
 800b99c:	2400df7c 	.word	0x2400df7c

0800b9a0 <xTimerCreateTimerTask>:
{
 800b9a0:	b510      	push	{r4, lr}
 800b9a2:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 800b9a4:	f7ff ffaa 	bl	800b8fc <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 800b9a8:	4b12      	ldr	r3, [pc, #72]	; (800b9f4 <xTimerCreateTimerTask+0x54>)
 800b9aa:	681b      	ldr	r3, [r3, #0]
 800b9ac:	b1b3      	cbz	r3, 800b9dc <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800b9ae:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800b9b0:	aa07      	add	r2, sp, #28
 800b9b2:	a906      	add	r1, sp, #24
 800b9b4:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800b9b6:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800b9ba:	f7fe fa69 	bl	8009e90 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800b9be:	9b05      	ldr	r3, [sp, #20]
 800b9c0:	9a07      	ldr	r2, [sp, #28]
 800b9c2:	9302      	str	r3, [sp, #8]
 800b9c4:	9b06      	ldr	r3, [sp, #24]
 800b9c6:	490c      	ldr	r1, [pc, #48]	; (800b9f8 <xTimerCreateTimerTask+0x58>)
 800b9c8:	9301      	str	r3, [sp, #4]
 800b9ca:	2302      	movs	r3, #2
 800b9cc:	480b      	ldr	r0, [pc, #44]	; (800b9fc <xTimerCreateTimerTask+0x5c>)
 800b9ce:	9300      	str	r3, [sp, #0]
 800b9d0:	4623      	mov	r3, r4
 800b9d2:	f7ff fbac 	bl	800b12e <xTaskCreateStatic>
 800b9d6:	4b0a      	ldr	r3, [pc, #40]	; (800ba00 <xTimerCreateTimerTask+0x60>)
 800b9d8:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800b9da:	b940      	cbnz	r0, 800b9ee <xTimerCreateTimerTask+0x4e>
 800b9dc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b9e0:	f383 8811 	msr	BASEPRI, r3
 800b9e4:	f3bf 8f6f 	isb	sy
 800b9e8:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800b9ec:	e7fe      	b.n	800b9ec <xTimerCreateTimerTask+0x4c>
}
 800b9ee:	2001      	movs	r0, #1
 800b9f0:	b008      	add	sp, #32
 800b9f2:	bd10      	pop	{r4, pc}
 800b9f4:	2400e0a0 	.word	0x2400e0a0
 800b9f8:	08022a3a 	.word	0x08022a3a
 800b9fc:	0800bb05 	.word	0x0800bb05
 800ba00:	2400e0a4 	.word	0x2400e0a4

0800ba04 <xTimerGenericCommand>:
{
 800ba04:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ba06:	4616      	mov	r6, r2
	configASSERT( xTimer );
 800ba08:	4604      	mov	r4, r0
{
 800ba0a:	461a      	mov	r2, r3
	configASSERT( xTimer );
 800ba0c:	b940      	cbnz	r0, 800ba20 <xTimerGenericCommand+0x1c>
 800ba0e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ba12:	f383 8811 	msr	BASEPRI, r3
 800ba16:	f3bf 8f6f 	isb	sy
 800ba1a:	f3bf 8f4f 	dsb	sy
 800ba1e:	e7fe      	b.n	800ba1e <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 800ba20:	4d0c      	ldr	r5, [pc, #48]	; (800ba54 <xTimerGenericCommand+0x50>)
 800ba22:	6828      	ldr	r0, [r5, #0]
 800ba24:	b178      	cbz	r0, 800ba46 <xTimerGenericCommand+0x42>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800ba26:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800ba28:	9402      	str	r4, [sp, #8]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800ba2a:	e9cd 1600 	strd	r1, r6, [sp]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800ba2e:	dc0c      	bgt.n	800ba4a <xTimerGenericCommand+0x46>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800ba30:	f7ff fe72 	bl	800b718 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800ba34:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800ba36:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800ba38:	4669      	mov	r1, sp
 800ba3a:	6828      	ldr	r0, [r5, #0]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800ba3c:	bf0c      	ite	eq
 800ba3e:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800ba40:	461a      	movne	r2, r3
 800ba42:	f7fe fe94 	bl	800a76e <xQueueGenericSend>
}
 800ba46:	b004      	add	sp, #16
 800ba48:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 800ba4a:	2300      	movs	r3, #0
 800ba4c:	4669      	mov	r1, sp
 800ba4e:	f7fe ff41 	bl	800a8d4 <xQueueGenericSendFromISR>
 800ba52:	e7f8      	b.n	800ba46 <xTimerGenericCommand+0x42>
 800ba54:	2400e0a0 	.word	0x2400e0a0

0800ba58 <prvSampleTimeNow>:
{
 800ba58:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 800ba5c:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 800bb00 <prvSampleTimeNow+0xa8>
{
 800ba60:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 800ba62:	f7ff fbd1 	bl	800b208 <xTaskGetTickCount>
 800ba66:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800ba68:	f8d8 3000 	ldr.w	r3, [r8]
 800ba6c:	4283      	cmp	r3, r0
 800ba6e:	d940      	bls.n	800baf2 <prvSampleTimeNow+0x9a>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800ba70:	4f21      	ldr	r7, [pc, #132]	; (800baf8 <prvSampleTimeNow+0xa0>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800ba72:	f04f 0900 	mov.w	r9, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800ba76:	683b      	ldr	r3, [r7, #0]
 800ba78:	681a      	ldr	r2, [r3, #0]
 800ba7a:	b95a      	cbnz	r2, 800ba94 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 800ba7c:	4a1f      	ldr	r2, [pc, #124]	; (800bafc <prvSampleTimeNow+0xa4>)
 800ba7e:	6811      	ldr	r1, [r2, #0]
	pxOverflowTimerList = pxTemp;
 800ba80:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 800ba82:	2301      	movs	r3, #1
	pxCurrentTimerList = pxOverflowTimerList;
 800ba84:	6039      	str	r1, [r7, #0]
}
 800ba86:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdFALSE;
 800ba88:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 800ba8a:	f8c8 5000 	str.w	r5, [r8]
}
 800ba8e:	b004      	add	sp, #16
 800ba90:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800ba94:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ba96:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800ba98:	f8d3 a000 	ldr.w	sl, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800ba9c:	1d21      	adds	r1, r4, #4
 800ba9e:	4608      	mov	r0, r1
 800baa0:	9103      	str	r1, [sp, #12]
 800baa2:	f7fe fb2c 	bl	800a0fe <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800baa6:	6a23      	ldr	r3, [r4, #32]
 800baa8:	4620      	mov	r0, r4
 800baaa:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800baac:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800bab0:	9903      	ldr	r1, [sp, #12]
 800bab2:	f013 0f04 	tst.w	r3, #4
 800bab6:	d0de      	beq.n	800ba76 <prvSampleTimeNow+0x1e>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800bab8:	69a3      	ldr	r3, [r4, #24]
 800baba:	4453      	add	r3, sl
			if( xReloadTime > xNextExpireTime )
 800babc:	459a      	cmp	sl, r3
 800babe:	d205      	bcs.n	800bacc <prvSampleTimeNow+0x74>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800bac0:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800bac2:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800bac4:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800bac6:	f7fe fb03 	bl	800a0d0 <vListInsert>
 800baca:	e7d4      	b.n	800ba76 <prvSampleTimeNow+0x1e>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800bacc:	2300      	movs	r3, #0
 800bace:	4652      	mov	r2, sl
 800bad0:	4620      	mov	r0, r4
 800bad2:	f8cd 9000 	str.w	r9, [sp]
 800bad6:	4619      	mov	r1, r3
 800bad8:	f7ff ff94 	bl	800ba04 <xTimerGenericCommand>
				configASSERT( xResult );
 800badc:	2800      	cmp	r0, #0
 800bade:	d1ca      	bne.n	800ba76 <prvSampleTimeNow+0x1e>
 800bae0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bae4:	f383 8811 	msr	BASEPRI, r3
 800bae8:	f3bf 8f6f 	isb	sy
 800baec:	f3bf 8f4f 	dsb	sy
 800baf0:	e7fe      	b.n	800baf0 <prvSampleTimeNow+0x98>
		*pxTimerListsWereSwitched = pdFALSE;
 800baf2:	2300      	movs	r3, #0
 800baf4:	e7c7      	b.n	800ba86 <prvSampleTimeNow+0x2e>
 800baf6:	bf00      	nop
 800baf8:	2400df7c 	.word	0x2400df7c
 800bafc:	2400df80 	.word	0x2400df80
 800bb00:	2400e04c 	.word	0x2400e04c

0800bb04 <prvTimerTask>:
{
 800bb04:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800bb08:	4d6e      	ldr	r5, [pc, #440]	; (800bcc4 <prvTimerTask+0x1c0>)
{
 800bb0a:	b089      	sub	sp, #36	; 0x24
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800bb0c:	4e6e      	ldr	r6, [pc, #440]	; (800bcc8 <prvTimerTask+0x1c4>)
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800bb0e:	682b      	ldr	r3, [r5, #0]
 800bb10:	f8d3 8000 	ldr.w	r8, [r3]
 800bb14:	f1b8 0f00 	cmp.w	r8, #0
 800bb18:	d035      	beq.n	800bb86 <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800bb1a:	68db      	ldr	r3, [r3, #12]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800bb1c:	2400      	movs	r4, #0
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800bb1e:	f8d3 8000 	ldr.w	r8, [r3]
	vTaskSuspendAll();
 800bb22:	f7ff fb69 	bl	800b1f8 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800bb26:	a804      	add	r0, sp, #16
 800bb28:	f7ff ff96 	bl	800ba58 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 800bb2c:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800bb2e:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 800bb30:	2b00      	cmp	r3, #0
 800bb32:	d169      	bne.n	800bc08 <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800bb34:	2c00      	cmp	r4, #0
 800bb36:	d14c      	bne.n	800bbd2 <prvTimerTask+0xce>
 800bb38:	4540      	cmp	r0, r8
 800bb3a:	d350      	bcc.n	800bbde <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 800bb3c:	f7ff fc00 	bl	800b340 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800bb40:	682b      	ldr	r3, [r5, #0]
 800bb42:	68db      	ldr	r3, [r3, #12]
 800bb44:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800bb46:	1d38      	adds	r0, r7, #4
 800bb48:	f7fe fad9 	bl	800a0fe <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800bb4c:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800bb50:	0758      	lsls	r0, r3, #29
 800bb52:	d51a      	bpl.n	800bb8a <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800bb54:	69b9      	ldr	r1, [r7, #24]
 800bb56:	4643      	mov	r3, r8
 800bb58:	464a      	mov	r2, r9
 800bb5a:	4638      	mov	r0, r7
 800bb5c:	4441      	add	r1, r8
 800bb5e:	f7ff ff01 	bl	800b964 <prvInsertTimerInActiveList>
 800bb62:	b1b0      	cbz	r0, 800bb92 <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800bb64:	4623      	mov	r3, r4
 800bb66:	4642      	mov	r2, r8
 800bb68:	4621      	mov	r1, r4
 800bb6a:	4638      	mov	r0, r7
 800bb6c:	9400      	str	r4, [sp, #0]
 800bb6e:	f7ff ff49 	bl	800ba04 <xTimerGenericCommand>
			configASSERT( xResult );
 800bb72:	b970      	cbnz	r0, 800bb92 <prvTimerTask+0x8e>
 800bb74:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bb78:	f383 8811 	msr	BASEPRI, r3
 800bb7c:	f3bf 8f6f 	isb	sy
 800bb80:	f3bf 8f4f 	dsb	sy
 800bb84:	e7fe      	b.n	800bb84 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800bb86:	2401      	movs	r4, #1
 800bb88:	e7cb      	b.n	800bb22 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800bb8a:	f023 0301 	bic.w	r3, r3, #1
 800bb8e:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800bb92:	6a3b      	ldr	r3, [r7, #32]
 800bb94:	4638      	mov	r0, r7
 800bb96:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800bb98:	2200      	movs	r2, #0
 800bb9a:	a904      	add	r1, sp, #16
 800bb9c:	6830      	ldr	r0, [r6, #0]
 800bb9e:	f7fe ff4f 	bl	800aa40 <xQueueReceive>
 800bba2:	2800      	cmp	r0, #0
 800bba4:	d0b3      	beq.n	800bb0e <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800bba6:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800bba8:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800bbaa:	2b00      	cmp	r3, #0
 800bbac:	db2f      	blt.n	800bc0e <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800bbae:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800bbb0:	6963      	ldr	r3, [r4, #20]
 800bbb2:	2b00      	cmp	r3, #0
 800bbb4:	d132      	bne.n	800bc1c <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800bbb6:	a803      	add	r0, sp, #12
 800bbb8:	f7ff ff4e 	bl	800ba58 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 800bbbc:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800bbbe:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 800bbc0:	2b09      	cmp	r3, #9
 800bbc2:	d8e9      	bhi.n	800bb98 <prvTimerTask+0x94>
 800bbc4:	e8df f003 	tbb	[pc, r3]
 800bbc8:	572e2e2e 	.word	0x572e2e2e
 800bbcc:	2e2e765e 	.word	0x2e2e765e
 800bbd0:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800bbd2:	4b3e      	ldr	r3, [pc, #248]	; (800bccc <prvTimerTask+0x1c8>)
 800bbd4:	681b      	ldr	r3, [r3, #0]
 800bbd6:	681c      	ldr	r4, [r3, #0]
 800bbd8:	fab4 f484 	clz	r4, r4
 800bbdc:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800bbde:	4622      	mov	r2, r4
 800bbe0:	eba8 0109 	sub.w	r1, r8, r9
 800bbe4:	6830      	ldr	r0, [r6, #0]
 800bbe6:	f7ff f91a 	bl	800ae1e <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800bbea:	f7ff fba9 	bl	800b340 <xTaskResumeAll>
 800bbee:	2800      	cmp	r0, #0
 800bbf0:	d1d2      	bne.n	800bb98 <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 800bbf2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800bbf6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800bbfa:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800bbfe:	f3bf 8f4f 	dsb	sy
 800bc02:	f3bf 8f6f 	isb	sy
 800bc06:	e7c7      	b.n	800bb98 <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 800bc08:	f7ff fb9a 	bl	800b340 <xTaskResumeAll>
}
 800bc0c:	e7c4      	b.n	800bb98 <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800bc0e:	9b05      	ldr	r3, [sp, #20]
 800bc10:	9907      	ldr	r1, [sp, #28]
 800bc12:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800bc14:	9b04      	ldr	r3, [sp, #16]
 800bc16:	2b00      	cmp	r3, #0
 800bc18:	dbbe      	blt.n	800bb98 <prvTimerTask+0x94>
 800bc1a:	e7c8      	b.n	800bbae <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800bc1c:	1d20      	adds	r0, r4, #4
 800bc1e:	f7fe fa6e 	bl	800a0fe <uxListRemove>
 800bc22:	e7c8      	b.n	800bbb6 <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800bc24:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800bc28:	4620      	mov	r0, r4
 800bc2a:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800bc2c:	f043 0301 	orr.w	r3, r3, #1
 800bc30:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800bc34:	9b05      	ldr	r3, [sp, #20]
 800bc36:	4419      	add	r1, r3
 800bc38:	f7ff fe94 	bl	800b964 <prvInsertTimerInActiveList>
 800bc3c:	2800      	cmp	r0, #0
 800bc3e:	d0ab      	beq.n	800bb98 <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800bc40:	6a23      	ldr	r3, [r4, #32]
 800bc42:	4620      	mov	r0, r4
 800bc44:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800bc46:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800bc4a:	0759      	lsls	r1, r3, #29
 800bc4c:	d5a4      	bpl.n	800bb98 <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800bc4e:	69a2      	ldr	r2, [r4, #24]
 800bc50:	2300      	movs	r3, #0
 800bc52:	9905      	ldr	r1, [sp, #20]
 800bc54:	4620      	mov	r0, r4
 800bc56:	9300      	str	r3, [sp, #0]
 800bc58:	440a      	add	r2, r1
 800bc5a:	4619      	mov	r1, r3
 800bc5c:	f7ff fed2 	bl	800ba04 <xTimerGenericCommand>
							configASSERT( xResult );
 800bc60:	2800      	cmp	r0, #0
 800bc62:	d199      	bne.n	800bb98 <prvTimerTask+0x94>
 800bc64:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bc68:	f383 8811 	msr	BASEPRI, r3
 800bc6c:	f3bf 8f6f 	isb	sy
 800bc70:	f3bf 8f4f 	dsb	sy
 800bc74:	e7fe      	b.n	800bc74 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800bc76:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800bc7a:	f023 0301 	bic.w	r3, r3, #1
 800bc7e:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 800bc82:	e789      	b.n	800bb98 <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800bc84:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800bc88:	f043 0301 	orr.w	r3, r3, #1
 800bc8c:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800bc90:	9905      	ldr	r1, [sp, #20]
 800bc92:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800bc94:	b941      	cbnz	r1, 800bca8 <prvTimerTask+0x1a4>
 800bc96:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bc9a:	f383 8811 	msr	BASEPRI, r3
 800bc9e:	f3bf 8f6f 	isb	sy
 800bca2:	f3bf 8f4f 	dsb	sy
 800bca6:	e7fe      	b.n	800bca6 <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800bca8:	4603      	mov	r3, r0
 800bcaa:	4401      	add	r1, r0
 800bcac:	4620      	mov	r0, r4
 800bcae:	f7ff fe59 	bl	800b964 <prvInsertTimerInActiveList>
					break;
 800bcb2:	e771      	b.n	800bb98 <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800bcb4:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800bcb8:	079a      	lsls	r2, r3, #30
 800bcba:	d4de      	bmi.n	800bc7a <prvTimerTask+0x176>
							vPortFree( pxTimer );
 800bcbc:	4620      	mov	r0, r4
 800bcbe:	f7fe f9af 	bl	800a020 <vPortFree>
 800bcc2:	e769      	b.n	800bb98 <prvTimerTask+0x94>
 800bcc4:	2400df7c 	.word	0x2400df7c
 800bcc8:	2400e0a0 	.word	0x2400e0a0
 800bccc:	2400df80 	.word	0x2400df80

0800bcd0 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800bcd0:	8880      	ldrh	r0, [r0, #4]
 800bcd2:	4770      	bx	lr

0800bcd4 <_ZN8touchgfx17AbstractPartition5clearEv>:
 800bcd4:	2300      	movs	r3, #0
 800bcd6:	8083      	strh	r3, [r0, #4]
 800bcd8:	4770      	bx	lr
	...

0800bcdc <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800bcdc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bcde:	6803      	ldr	r3, [r0, #0]
 800bce0:	460e      	mov	r6, r1
 800bce2:	2100      	movs	r1, #0
 800bce4:	4605      	mov	r5, r0
 800bce6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bce8:	4798      	blx	r3
 800bcea:	4604      	mov	r4, r0
 800bcec:	682b      	ldr	r3, [r5, #0]
 800bcee:	4628      	mov	r0, r5
 800bcf0:	1b34      	subs	r4, r6, r4
 800bcf2:	6a1b      	ldr	r3, [r3, #32]
 800bcf4:	b2a4      	uxth	r4, r4
 800bcf6:	4798      	blx	r3
 800bcf8:	88ab      	ldrh	r3, [r5, #4]
 800bcfa:	fbb4 f4f0 	udiv	r4, r4, r0
 800bcfe:	42a3      	cmp	r3, r4
 800bd00:	d805      	bhi.n	800bd0e <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x32>
 800bd02:	4b0e      	ldr	r3, [pc, #56]	; (800bd3c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x60>)
 800bd04:	211d      	movs	r1, #29
 800bd06:	4a0e      	ldr	r2, [pc, #56]	; (800bd40 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 800bd08:	480e      	ldr	r0, [pc, #56]	; (800bd44 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x68>)
 800bd0a:	f014 f969 	bl	801ffe0 <__assert_func>
 800bd0e:	682b      	ldr	r3, [r5, #0]
 800bd10:	2100      	movs	r1, #0
 800bd12:	4628      	mov	r0, r5
 800bd14:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bd16:	4798      	blx	r3
 800bd18:	682b      	ldr	r3, [r5, #0]
 800bd1a:	4607      	mov	r7, r0
 800bd1c:	4628      	mov	r0, r5
 800bd1e:	6a1b      	ldr	r3, [r3, #32]
 800bd20:	4798      	blx	r3
 800bd22:	1bf3      	subs	r3, r6, r7
 800bd24:	b29b      	uxth	r3, r3
 800bd26:	fbb3 f2f0 	udiv	r2, r3, r0
 800bd2a:	fb02 3010 	mls	r0, r2, r0, r3
 800bd2e:	b118      	cbz	r0, 800bd38 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x5c>
 800bd30:	4b05      	ldr	r3, [pc, #20]	; (800bd48 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x6c>)
 800bd32:	211e      	movs	r1, #30
 800bd34:	4a02      	ldr	r2, [pc, #8]	; (800bd40 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 800bd36:	e7e7      	b.n	800bd08 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x2c>
 800bd38:	4620      	mov	r0, r4
 800bd3a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800bd3c:	08022a42 	.word	0x08022a42
 800bd40:	08022bae 	.word	0x08022bae
 800bd44:	08022a57 	.word	0x08022a57
 800bd48:	08022a85 	.word	0x08022a85

0800bd4c <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800bd4c:	b538      	push	{r3, r4, r5, lr}
 800bd4e:	6803      	ldr	r3, [r0, #0]
 800bd50:	460d      	mov	r5, r1
 800bd52:	4604      	mov	r4, r0
 800bd54:	6a1b      	ldr	r3, [r3, #32]
 800bd56:	4798      	blx	r3
 800bd58:	4285      	cmp	r5, r0
 800bd5a:	d905      	bls.n	800bd68 <_ZN8touchgfx17AbstractPartition8allocateEt+0x1c>
 800bd5c:	4b0c      	ldr	r3, [pc, #48]	; (800bd90 <_ZN8touchgfx17AbstractPartition8allocateEt+0x44>)
 800bd5e:	212f      	movs	r1, #47	; 0x2f
 800bd60:	4a0c      	ldr	r2, [pc, #48]	; (800bd94 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 800bd62:	480d      	ldr	r0, [pc, #52]	; (800bd98 <_ZN8touchgfx17AbstractPartition8allocateEt+0x4c>)
 800bd64:	f014 f93c 	bl	801ffe0 <__assert_func>
 800bd68:	6823      	ldr	r3, [r4, #0]
 800bd6a:	4620      	mov	r0, r4
 800bd6c:	88a5      	ldrh	r5, [r4, #4]
 800bd6e:	69db      	ldr	r3, [r3, #28]
 800bd70:	4798      	blx	r3
 800bd72:	4285      	cmp	r5, r0
 800bd74:	d303      	bcc.n	800bd7e <_ZN8touchgfx17AbstractPartition8allocateEt+0x32>
 800bd76:	4b09      	ldr	r3, [pc, #36]	; (800bd9c <_ZN8touchgfx17AbstractPartition8allocateEt+0x50>)
 800bd78:	2130      	movs	r1, #48	; 0x30
 800bd7a:	4a06      	ldr	r2, [pc, #24]	; (800bd94 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 800bd7c:	e7f1      	b.n	800bd62 <_ZN8touchgfx17AbstractPartition8allocateEt+0x16>
 800bd7e:	6823      	ldr	r3, [r4, #0]
 800bd80:	4620      	mov	r0, r4
 800bd82:	88a1      	ldrh	r1, [r4, #4]
 800bd84:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bd86:	4798      	blx	r3
 800bd88:	88a3      	ldrh	r3, [r4, #4]
 800bd8a:	3301      	adds	r3, #1
 800bd8c:	80a3      	strh	r3, [r4, #4]
 800bd8e:	bd38      	pop	{r3, r4, r5, pc}
 800bd90:	08022aff 	.word	0x08022aff
 800bd94:	08022bf1 	.word	0x08022bf1
 800bd98:	08022a57 	.word	0x08022a57
 800bd9c:	08022b16 	.word	0x08022b16

0800bda0 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800bda0:	b570      	push	{r4, r5, r6, lr}
 800bda2:	6803      	ldr	r3, [r0, #0]
 800bda4:	4616      	mov	r6, r2
 800bda6:	4604      	mov	r4, r0
 800bda8:	460d      	mov	r5, r1
 800bdaa:	6a1b      	ldr	r3, [r3, #32]
 800bdac:	4798      	blx	r3
 800bdae:	4286      	cmp	r6, r0
 800bdb0:	d905      	bls.n	800bdbe <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x1e>
 800bdb2:	4b06      	ldr	r3, [pc, #24]	; (800bdcc <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x2c>)
 800bdb4:	2139      	movs	r1, #57	; 0x39
 800bdb6:	4a06      	ldr	r2, [pc, #24]	; (800bdd0 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x30>)
 800bdb8:	4806      	ldr	r0, [pc, #24]	; (800bdd4 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x34>)
 800bdba:	f014 f911 	bl	801ffe0 <__assert_func>
 800bdbe:	6823      	ldr	r3, [r4, #0]
 800bdc0:	4629      	mov	r1, r5
 800bdc2:	4620      	mov	r0, r4
 800bdc4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bdc6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bdca:	4718      	bx	r3
 800bdcc:	08022aff 	.word	0x08022aff
 800bdd0:	08022b64 	.word	0x08022b64
 800bdd4:	08022a57 	.word	0x08022a57

0800bdd8 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800bdd8:	4770      	bx	lr
	...

0800bddc <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800bddc:	4a02      	ldr	r2, [pc, #8]	; (800bde8 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800bdde:	6002      	str	r2, [r0, #0]
 800bde0:	2200      	movs	r2, #0
 800bde2:	8082      	strh	r2, [r0, #4]
 800bde4:	4770      	bx	lr
 800bde6:	bf00      	nop
 800bde8:	08022b38 	.word	0x08022b38

0800bdec <_ZN8touchgfx9Container13getFirstChildEv>:
 800bdec:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800bdee:	4770      	bx	lr

0800bdf0 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 800bdf0:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 800bdf4:	4770      	bx	lr

0800bdf6 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 800bdf6:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 800bdfa:	4770      	bx	lr

0800bdfc <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 800bdfc:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 800be00:	4770      	bx	lr

0800be02 <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 800be02:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 800be06:	4770      	bx	lr

0800be08 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 800be08:	b510      	push	{r4, lr}
 800be0a:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800be0e:	600c      	str	r4, [r1, #0]
 800be10:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800be14:	6011      	str	r1, [r2, #0]
 800be16:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800be1a:	801a      	strh	r2, [r3, #0]
 800be1c:	9b02      	ldr	r3, [sp, #8]
 800be1e:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 800be22:	801a      	strh	r2, [r3, #0]
 800be24:	bd10      	pop	{r4, pc}

0800be26 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 800be26:	b510      	push	{r4, lr}
 800be28:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800be2c:	600c      	str	r4, [r1, #0]
 800be2e:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800be32:	6011      	str	r1, [r2, #0]
 800be34:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800be38:	801a      	strh	r2, [r3, #0]
 800be3a:	bd10      	pop	{r4, pc}

0800be3c <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 800be3c:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800be40:	600b      	str	r3, [r1, #0]
 800be42:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800be46:	6013      	str	r3, [r2, #0]
 800be48:	4770      	bx	lr

0800be4a <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 800be4a:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 800be4e:	4770      	bx	lr

0800be50 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 800be50:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 800be54:	4770      	bx	lr

0800be56 <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 800be56:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 800be5a:	4770      	bx	lr

0800be5c <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 800be5c:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 800be60:	4770      	bx	lr

0800be62 <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 800be62:	4770      	bx	lr

0800be64 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 800be64:	b510      	push	{r4, lr}
 800be66:	6803      	ldr	r3, [r0, #0]
 800be68:	4604      	mov	r4, r0
 800be6a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800be6e:	4798      	blx	r3
 800be70:	b120      	cbz	r0, 800be7c <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x18>
 800be72:	4620      	mov	r0, r4
 800be74:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800be78:	f000 bc36 	b.w	800c6e8 <_ZNK8touchgfx9Container17invalidateContentEv>
 800be7c:	bd10      	pop	{r4, pc}

0800be7e <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 800be7e:	b510      	push	{r4, lr}
 800be80:	4604      	mov	r4, r0
 800be82:	21b4      	movs	r1, #180	; 0xb4
 800be84:	f013 feb3 	bl	801fbee <_ZdlPvj>
 800be88:	4620      	mov	r0, r4
 800be8a:	bd10      	pop	{r4, pc}

0800be8c <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 800be8c:	b570      	push	{r4, r5, r6, lr}
 800be8e:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 800be92:	4604      	mov	r4, r0
 800be94:	4616      	mov	r6, r2
 800be96:	428d      	cmp	r5, r1
 800be98:	bfb8      	it	lt
 800be9a:	460d      	movlt	r5, r1
 800be9c:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800bea0:	428d      	cmp	r5, r1
 800bea2:	bfa8      	it	ge
 800bea4:	460d      	movge	r5, r1
 800bea6:	b99a      	cbnz	r2, 800bed0 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 800bea8:	6803      	ldr	r3, [r0, #0]
 800beaa:	4629      	mov	r1, r5
 800beac:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800beb0:	4798      	blx	r3
 800beb2:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800beb6:	b358      	cbz	r0, 800bf10 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x84>
 800beb8:	6803      	ldr	r3, [r0, #0]
 800beba:	68db      	ldr	r3, [r3, #12]
 800bebc:	4798      	blx	r3
 800bebe:	b338      	cbz	r0, 800bf10 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x84>
 800bec0:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800bec4:	4621      	mov	r1, r4
 800bec6:	6803      	ldr	r3, [r0, #0]
 800bec8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800becc:	689b      	ldr	r3, [r3, #8]
 800bece:	4718      	bx	r3
 800bed0:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800bed4:	2b00      	cmp	r3, #0
 800bed6:	dd07      	ble.n	800bee8 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5c>
 800bed8:	f005 fdb0 	bl	8011a3c <_ZN8touchgfx11Application11getInstanceEv>
 800bedc:	4621      	mov	r1, r4
 800bede:	f005 fde5 	bl	8011aac <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>
 800bee2:	2300      	movs	r3, #0
 800bee4:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800bee8:	6823      	ldr	r3, [r4, #0]
 800beea:	4620      	mov	r0, r4
 800beec:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800bef0:	4798      	blx	r3
 800bef2:	2300      	movs	r3, #0
 800bef4:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 800bef8:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 800befc:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 800bf00:	f005 fd9c 	bl	8011a3c <_ZN8touchgfx11Application11getInstanceEv>
 800bf04:	4621      	mov	r1, r4
 800bf06:	f005 fd9f 	bl	8011a48 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>
 800bf0a:	2301      	movs	r3, #1
 800bf0c:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800bf10:	bd70      	pop	{r4, r5, r6, pc}

0800bf12 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 800bf12:	b510      	push	{r4, lr}
 800bf14:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800bf18:	4604      	mov	r4, r0
 800bf1a:	4299      	cmp	r1, r3
 800bf1c:	bfb8      	it	lt
 800bf1e:	4619      	movlt	r1, r3
 800bf20:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800bf24:	4299      	cmp	r1, r3
 800bf26:	bfa8      	it	ge
 800bf28:	4619      	movge	r1, r3
 800bf2a:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 800bf2e:	428b      	cmp	r3, r1
 800bf30:	d010      	beq.n	800bf54 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800bf32:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 800bf36:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 800bf3a:	b158      	cbz	r0, 800bf54 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800bf3c:	6803      	ldr	r3, [r0, #0]
 800bf3e:	68db      	ldr	r3, [r3, #12]
 800bf40:	4798      	blx	r3
 800bf42:	b138      	cbz	r0, 800bf54 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800bf44:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 800bf48:	4621      	mov	r1, r4
 800bf4a:	6803      	ldr	r3, [r0, #0]
 800bf4c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bf50:	689b      	ldr	r3, [r3, #8]
 800bf52:	4718      	bx	r3
 800bf54:	bd10      	pop	{r4, pc}
	...

0800bf58 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 800bf58:	4291      	cmp	r1, r2
 800bf5a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bf5e:	4604      	mov	r4, r0
 800bf60:	460e      	mov	r6, r1
 800bf62:	4615      	mov	r5, r2
 800bf64:	4698      	mov	r8, r3
 800bf66:	f8bd 7018 	ldrh.w	r7, [sp, #24]
 800bf6a:	db05      	blt.n	800bf78 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x20>
 800bf6c:	4b11      	ldr	r3, [pc, #68]	; (800bfb4 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x5c>)
 800bf6e:	2148      	movs	r1, #72	; 0x48
 800bf70:	4a11      	ldr	r2, [pc, #68]	; (800bfb8 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x60>)
 800bf72:	4812      	ldr	r0, [pc, #72]	; (800bfbc <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x64>)
 800bf74:	f014 f834 	bl	801ffe0 <__assert_func>
 800bf78:	6803      	ldr	r3, [r0, #0]
 800bf7a:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 800bf7e:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 800bf82:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800bf86:	4798      	blx	r3
 800bf88:	f1b8 0f00 	cmp.w	r8, #0
 800bf8c:	d10c      	bne.n	800bfa8 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x50>
 800bf8e:	1bad      	subs	r5, r5, r6
 800bf90:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 800bf94:	f8b4 3090 	ldrh.w	r3, [r4, #144]	; 0x90
 800bf98:	f8a4 7092 	strh.w	r7, [r4, #146]	; 0x92
 800bf9c:	42bb      	cmp	r3, r7
 800bf9e:	d806      	bhi.n	800bfae <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x56>
 800bfa0:	4b07      	ldr	r3, [pc, #28]	; (800bfc0 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x68>)
 800bfa2:	2155      	movs	r1, #85	; 0x55
 800bfa4:	4a04      	ldr	r2, [pc, #16]	; (800bfb8 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x60>)
 800bfa6:	e7e4      	b.n	800bf72 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x1a>
 800bfa8:	f8a4 8090 	strh.w	r8, [r4, #144]	; 0x90
 800bfac:	e7f2      	b.n	800bf94 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x3c>
 800bfae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bfb2:	bf00      	nop
 800bfb4:	08022c2f 	.word	0x08022c2f
 800bfb8:	08022d80 	.word	0x08022d80
 800bfbc:	08022c39 	.word	0x08022c39
 800bfc0:	08022c90 	.word	0x08022c90

0800bfc4 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 800bfc4:	b570      	push	{r4, r5, r6, lr}
 800bfc6:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 800bfca:	4604      	mov	r4, r0
 800bfcc:	b3a3      	cbz	r3, 800c038 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x74>
 800bfce:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 800bfd2:	2100      	movs	r1, #0
 800bfd4:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 800bfd8:	3001      	adds	r0, #1
 800bfda:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 800bfde:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 800bfe2:	b280      	uxth	r0, r0
 800bfe4:	1ad2      	subs	r2, r2, r3
 800bfe6:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 800bfea:	b212      	sxth	r2, r2
 800bfec:	47a8      	blx	r5
 800bfee:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 800bff2:	6823      	ldr	r3, [r4, #0]
 800bff4:	4401      	add	r1, r0
 800bff6:	4620      	mov	r0, r4
 800bff8:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800bffc:	4798      	blx	r3
 800bffe:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 800c002:	429a      	cmp	r2, r3
 800c004:	db18      	blt.n	800c038 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x74>
 800c006:	2500      	movs	r5, #0
 800c008:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800c00c:	f005 fd16 	bl	8011a3c <_ZN8touchgfx11Application11getInstanceEv>
 800c010:	4621      	mov	r1, r4
 800c012:	f005 fd4b 	bl	8011aac <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>
 800c016:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800c01a:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800c01e:	b158      	cbz	r0, 800c038 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x74>
 800c020:	6803      	ldr	r3, [r0, #0]
 800c022:	68db      	ldr	r3, [r3, #12]
 800c024:	4798      	blx	r3
 800c026:	b138      	cbz	r0, 800c038 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x74>
 800c028:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800c02c:	4621      	mov	r1, r4
 800c02e:	6803      	ldr	r3, [r0, #0]
 800c030:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c034:	689b      	ldr	r3, [r3, #8]
 800c036:	4718      	bx	r3
 800c038:	bd70      	pop	{r4, r5, r6, pc}

0800c03a <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 800c03a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800c03c:	4604      	mov	r4, r0
 800c03e:	460d      	mov	r5, r1
 800c040:	b1a9      	cbz	r1, 800c06e <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 800c042:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 800c046:	ab01      	add	r3, sp, #4
 800c048:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 800c04c:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 800c050:	1b89      	subs	r1, r1, r6
 800c052:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 800c056:	1a12      	subs	r2, r2, r0
 800c058:	1a38      	subs	r0, r7, r0
 800c05a:	f006 febb 	bl	8012dd4 <_ZN8touchgfx6muldivElllRl>
 800c05e:	4629      	mov	r1, r5
 800c060:	ab01      	add	r3, sp, #4
 800c062:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 800c066:	4430      	add	r0, r6
 800c068:	f006 feb4 	bl	8012dd4 <_ZN8touchgfx6muldivElllRl>
 800c06c:	b285      	uxth	r5, r0
 800c06e:	4628      	mov	r0, r5
 800c070:	b003      	add	sp, #12
 800c072:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800c074 <_ZN8touchgfx8DrawableC1Ev>:
 800c074:	4a0a      	ldr	r2, [pc, #40]	; (800c0a0 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 800c076:	6002      	str	r2, [r0, #0]
 800c078:	2200      	movs	r2, #0
 800c07a:	8082      	strh	r2, [r0, #4]
 800c07c:	80c2      	strh	r2, [r0, #6]
 800c07e:	8102      	strh	r2, [r0, #8]
 800c080:	8142      	strh	r2, [r0, #10]
 800c082:	8182      	strh	r2, [r0, #12]
 800c084:	81c2      	strh	r2, [r0, #14]
 800c086:	8202      	strh	r2, [r0, #16]
 800c088:	8242      	strh	r2, [r0, #18]
 800c08a:	61c2      	str	r2, [r0, #28]
 800c08c:	8402      	strh	r2, [r0, #32]
 800c08e:	8442      	strh	r2, [r0, #34]	; 0x22
 800c090:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800c094:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800c098:	2201      	movs	r2, #1
 800c09a:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 800c09e:	4770      	bx	lr
 800c0a0:	08024650 	.word	0x08024650

0800c0a4 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800c0a4:	b570      	push	{r4, r5, r6, lr}
 800c0a6:	6803      	ldr	r3, [r0, #0]
 800c0a8:	4604      	mov	r4, r0
 800c0aa:	4615      	mov	r5, r2
 800c0ac:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c0ae:	4798      	blx	r3
 800c0b0:	6823      	ldr	r3, [r4, #0]
 800c0b2:	4629      	mov	r1, r5
 800c0b4:	4620      	mov	r0, r4
 800c0b6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c0b8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c0bc:	4718      	bx	r3

0800c0be <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 800c0be:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c0c2:	4604      	mov	r4, r0
 800c0c4:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 800c0c8:	4698      	mov	r8, r3
 800c0ca:	460e      	mov	r6, r1
 800c0cc:	4615      	mov	r5, r2
 800c0ce:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 800c0d2:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 800c0d6:	4619      	mov	r1, r3
 800c0d8:	463a      	mov	r2, r7
 800c0da:	3058      	adds	r0, #88	; 0x58
 800c0dc:	f7ff ffe2 	bl	800c0a4 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800c0e0:	4446      	add	r6, r8
 800c0e2:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800c0e6:	443d      	add	r5, r7
 800c0e8:	42b3      	cmp	r3, r6
 800c0ea:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800c0ee:	bfb8      	it	lt
 800c0f0:	8126      	strhlt	r6, [r4, #8]
 800c0f2:	42ab      	cmp	r3, r5
 800c0f4:	bfb8      	it	lt
 800c0f6:	8165      	strhlt	r5, [r4, #10]
 800c0f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c0fc <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 800c0fc:	b510      	push	{r4, lr}
 800c0fe:	4604      	mov	r4, r0
 800c100:	302c      	adds	r0, #44	; 0x2c
 800c102:	f003 fe78 	bl	800fdf6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800c106:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 800c10a:	4620      	mov	r0, r4
 800c10c:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 800c110:	f7ff ffc8 	bl	800c0a4 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800c114:	bd10      	pop	{r4, pc}
	...

0800c118 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 800c118:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800c11a:	4604      	mov	r4, r0
 800c11c:	2500      	movs	r5, #0
 800c11e:	f7ff ffa9 	bl	800c074 <_ZN8touchgfx8DrawableC1Ev>
 800c122:	4b24      	ldr	r3, [pc, #144]	; (800c1b4 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 800c124:	4626      	mov	r6, r4
 800c126:	f64f 77ff 	movw	r7, #65535	; 0xffff
 800c12a:	2226      	movs	r2, #38	; 0x26
 800c12c:	4629      	mov	r1, r5
 800c12e:	62a5      	str	r5, [r4, #40]	; 0x28
 800c130:	f846 3b2c 	str.w	r3, [r6], #44
 800c134:	4630      	mov	r0, r6
 800c136:	f8ad 7004 	strh.w	r7, [sp, #4]
 800c13a:	f013 fff7 	bl	802012c <memset>
 800c13e:	4630      	mov	r0, r6
 800c140:	f7ff ff98 	bl	800c074 <_ZN8touchgfx8DrawableC1Ev>
 800c144:	a902      	add	r1, sp, #8
 800c146:	4b1c      	ldr	r3, [pc, #112]	; (800c1b8 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 800c148:	4630      	mov	r0, r6
 800c14a:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 800c14e:	f104 0758 	add.w	r7, r4, #88	; 0x58
 800c152:	62e3      	str	r3, [r4, #44]	; 0x2c
 800c154:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 800c158:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800c15c:	f003 fe4b 	bl	800fdf6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800c160:	4638      	mov	r0, r7
 800c162:	f7ff ff87 	bl	800c074 <_ZN8touchgfx8DrawableC1Ev>
 800c166:	4b15      	ldr	r3, [pc, #84]	; (800c1bc <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 800c168:	4629      	mov	r1, r5
 800c16a:	4630      	mov	r0, r6
 800c16c:	65a3      	str	r3, [r4, #88]	; 0x58
 800c16e:	2364      	movs	r3, #100	; 0x64
 800c170:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800c174:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 800c178:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 800c17c:	4b10      	ldr	r3, [pc, #64]	; (800c1c0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 800c17e:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 800c182:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 800c186:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 800c18a:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800c18e:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 800c192:	f7f6 f9b7 	bl	8002504 <_ZN8touchgfx8Drawable4setXEs>
 800c196:	4629      	mov	r1, r5
 800c198:	4630      	mov	r0, r6
 800c19a:	f7f6 f9b5 	bl	8002508 <_ZN8touchgfx8Drawable4setYEs>
 800c19e:	4631      	mov	r1, r6
 800c1a0:	4620      	mov	r0, r4
 800c1a2:	f000 fae5 	bl	800c770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c1a6:	4620      	mov	r0, r4
 800c1a8:	4639      	mov	r1, r7
 800c1aa:	f000 fae1 	bl	800c770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c1ae:	4620      	mov	r0, r4
 800c1b0:	b003      	add	sp, #12
 800c1b2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c1b4:	08022cb4 	.word	0x08022cb4
 800c1b8:	080241a4 	.word	0x080241a4
 800c1bc:	080231c8 	.word	0x080231c8
 800c1c0:	080134af 	.word	0x080134af

0800c1c4 <_ZN8touchgfx8TextArea8setWidthEs>:
 800c1c4:	b530      	push	{r4, r5, lr}
 800c1c6:	b085      	sub	sp, #20
 800c1c8:	6803      	ldr	r3, [r0, #0]
 800c1ca:	4604      	mov	r4, r0
 800c1cc:	8101      	strh	r1, [r0, #8]
 800c1ce:	466d      	mov	r5, sp
 800c1d0:	4601      	mov	r1, r0
 800c1d2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800c1d6:	343c      	adds	r4, #60	; 0x3c
 800c1d8:	4628      	mov	r0, r5
 800c1da:	4798      	blx	r3
 800c1dc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800c1e0:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800c1e4:	b005      	add	sp, #20
 800c1e6:	bd30      	pop	{r4, r5, pc}

0800c1e8 <_ZN8touchgfx8TextArea9setHeightEs>:
 800c1e8:	b530      	push	{r4, r5, lr}
 800c1ea:	b085      	sub	sp, #20
 800c1ec:	6803      	ldr	r3, [r0, #0]
 800c1ee:	4604      	mov	r4, r0
 800c1f0:	8141      	strh	r1, [r0, #10]
 800c1f2:	466d      	mov	r5, sp
 800c1f4:	4601      	mov	r1, r0
 800c1f6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800c1fa:	343c      	adds	r4, #60	; 0x3c
 800c1fc:	4628      	mov	r0, r5
 800c1fe:	4798      	blx	r3
 800c200:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800c204:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800c208:	b005      	add	sp, #20
 800c20a:	bd30      	pop	{r4, r5, pc}

0800c20c <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 800c20c:	2200      	movs	r2, #0
 800c20e:	8002      	strh	r2, [r0, #0]
 800c210:	8042      	strh	r2, [r0, #2]
 800c212:	8082      	strh	r2, [r0, #4]
 800c214:	80c2      	strh	r2, [r0, #6]
 800c216:	4770      	bx	lr

0800c218 <_ZN8touchgfx8TextArea8setAlphaEh>:
 800c218:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
 800c21c:	4770      	bx	lr

0800c21e <_ZN8touchgfx8TextArea13setXBaselineYEss>:
 800c21e:	b570      	push	{r4, r5, r6, lr}
 800c220:	6803      	ldr	r3, [r0, #0]
 800c222:	4604      	mov	r4, r0
 800c224:	4615      	mov	r5, r2
 800c226:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c228:	4798      	blx	r3
 800c22a:	6823      	ldr	r3, [r4, #0]
 800c22c:	4629      	mov	r1, r5
 800c22e:	4620      	mov	r0, r4
 800c230:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800c232:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c236:	4718      	bx	r3

0800c238 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
 800c238:	2000      	movs	r0, #0
 800c23a:	4770      	bx	lr

0800c23c <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
 800c23c:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800c23e:	4770      	bx	lr

0800c240 <_ZN8touchgfx12DigitalClock14setDisplayModeENS0_11DisplayModeE>:
 800c240:	f880 102f 	strb.w	r1, [r0, #47]	; 0x2f
 800c244:	4770      	bx	lr

0800c246 <_ZNK8touchgfx12DigitalClock14getDisplayModeEv>:
 800c246:	f890 002f 	ldrb.w	r0, [r0, #47]	; 0x2f
 800c24a:	4770      	bx	lr

0800c24c <_ZN8touchgfx12DigitalClock8setWidthEs>:
 800c24c:	b508      	push	{r3, lr}
 800c24e:	3034      	adds	r0, #52	; 0x34
 800c250:	f820 1c2c 	strh.w	r1, [r0, #-44]
 800c254:	f7ff ffb6 	bl	800c1c4 <_ZN8touchgfx8TextArea8setWidthEs>
 800c258:	bd08      	pop	{r3, pc}

0800c25a <_ZN8touchgfx12DigitalClock9setHeightEs>:
 800c25a:	b508      	push	{r3, lr}
 800c25c:	3034      	adds	r0, #52	; 0x34
 800c25e:	f820 1c2a 	strh.w	r1, [r0, #-42]
 800c262:	f7ff ffc1 	bl	800c1e8 <_ZN8touchgfx8TextArea9setHeightEs>
 800c266:	bd08      	pop	{r3, pc}

0800c268 <_ZN8touchgfx12DigitalClock8setAlphaEh>:
 800c268:	f880 106a 	strb.w	r1, [r0, #106]	; 0x6a
 800c26c:	4770      	bx	lr

0800c26e <_ZNK8touchgfx12DigitalClock8getAlphaEv>:
 800c26e:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 800c272:	4770      	bx	lr

0800c274 <_ZNK8touchgfx12DigitalClock8getColorEv>:
 800c274:	6e40      	ldr	r0, [r0, #100]	; 0x64
 800c276:	4770      	bx	lr

0800c278 <_ZN8touchgfx12DigitalClockD1Ev>:
 800c278:	4770      	bx	lr

0800c27a <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
 800c27a:	4770      	bx	lr

0800c27c <_ZN8touchgfx12DigitalClock8setColorENS_9colortypeE>:
 800c27c:	6641      	str	r1, [r0, #100]	; 0x64
 800c27e:	3034      	adds	r0, #52	; 0x34
 800c280:	f003 bd3c 	b.w	800fcfc <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>

0800c284 <_ZNK8touchgfx12DigitalClock12getTextWidthEv>:
 800c284:	3034      	adds	r0, #52	; 0x34
 800c286:	f002 bdcd 	b.w	800ee24 <_ZNK8touchgfx8TextArea12getTextWidthEv>

0800c28a <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 800c28a:	b510      	push	{r4, lr}
 800c28c:	4604      	mov	r4, r0
 800c28e:	214c      	movs	r1, #76	; 0x4c
 800c290:	f013 fcad 	bl	801fbee <_ZdlPvj>
 800c294:	4620      	mov	r0, r4
 800c296:	bd10      	pop	{r4, pc}

0800c298 <_ZN8touchgfx12DigitalClockD0Ev>:
 800c298:	b510      	push	{r4, lr}
 800c29a:	4604      	mov	r4, r0
 800c29c:	2198      	movs	r1, #152	; 0x98
 800c29e:	f013 fca6 	bl	801fbee <_ZdlPvj>
 800c2a2:	4620      	mov	r0, r4
 800c2a4:	bd10      	pop	{r4, pc}
	...

0800c2a8 <_ZN8touchgfx8TextArea12setBaselineYEs>:
 800c2a8:	b570      	push	{r4, r5, r6, lr}
 800c2aa:	6803      	ldr	r3, [r0, #0]
 800c2ac:	4604      	mov	r4, r0
 800c2ae:	b28d      	uxth	r5, r1
 800c2b0:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800c2b2:	6b5e      	ldr	r6, [r3, #52]	; 0x34
 800c2b4:	4b10      	ldr	r3, [pc, #64]	; (800c2f8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 800c2b6:	681b      	ldr	r3, [r3, #0]
 800c2b8:	b92b      	cbnz	r3, 800c2c6 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1e>
 800c2ba:	4b10      	ldr	r3, [pc, #64]	; (800c2fc <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 800c2bc:	21ae      	movs	r1, #174	; 0xae
 800c2be:	4a10      	ldr	r2, [pc, #64]	; (800c300 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800c2c0:	4810      	ldr	r0, [pc, #64]	; (800c304 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 800c2c2:	f013 fe8d 	bl	801ffe0 <__assert_func>
 800c2c6:	4910      	ldr	r1, [pc, #64]	; (800c308 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 800c2c8:	8809      	ldrh	r1, [r1, #0]
 800c2ca:	4291      	cmp	r1, r2
 800c2cc:	d803      	bhi.n	800c2d6 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 800c2ce:	4b0f      	ldr	r3, [pc, #60]	; (800c30c <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 800c2d0:	21af      	movs	r1, #175	; 0xaf
 800c2d2:	4a0b      	ldr	r2, [pc, #44]	; (800c300 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800c2d4:	e7f4      	b.n	800c2c0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x18>
 800c2d6:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800c2da:	4b0d      	ldr	r3, [pc, #52]	; (800c310 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 800c2dc:	681b      	ldr	r3, [r3, #0]
 800c2de:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800c2e2:	6803      	ldr	r3, [r0, #0]
 800c2e4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c2e6:	4798      	blx	r3
 800c2e8:	1a29      	subs	r1, r5, r0
 800c2ea:	4633      	mov	r3, r6
 800c2ec:	4620      	mov	r0, r4
 800c2ee:	b209      	sxth	r1, r1
 800c2f0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c2f4:	4718      	bx	r3
 800c2f6:	bf00      	nop
 800c2f8:	2400e124 	.word	0x2400e124
 800c2fc:	08022ec0 	.word	0x08022ec0
 800c300:	0802302c 	.word	0x0802302c
 800c304:	08022f02 	.word	0x08022f02
 800c308:	2400e128 	.word	0x2400e128
 800c30c:	08022f2b 	.word	0x08022f2b
 800c310:	2400e12c 	.word	0x2400e12c

0800c314 <_ZN8touchgfx12DigitalClock12setTypedTextENS_9TypedTextE>:
 800c314:	b538      	push	{r3, r4, r5, lr}
 800c316:	f100 0434 	add.w	r4, r0, #52	; 0x34
 800c31a:	460d      	mov	r5, r1
 800c31c:	4620      	mov	r0, r4
 800c31e:	f003 fced 	bl	800fcfc <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>
 800c322:	4620      	mov	r0, r4
 800c324:	4629      	mov	r1, r5
 800c326:	f003 f989 	bl	800f63c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800c32a:	4620      	mov	r0, r4
 800c32c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c330:	f003 bce4 	b.w	800fcfc <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>

0800c334 <_ZN8touchgfx12DigitalClock11updateClockEv>:
 800c334:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800c338:	f100 0634 	add.w	r6, r0, #52	; 0x34
 800c33c:	4604      	mov	r4, r0
 800c33e:	4630      	mov	r0, r6
 800c340:	f003 fcdc 	bl	800fcfc <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>
 800c344:	f894 302f 	ldrb.w	r3, [r4, #47]	; 0x2f
 800c348:	bb0b      	cbnz	r3, 800c38e <_ZN8touchgfx12DigitalClock11updateClockEv+0x5a>
 800c34a:	f894 3030 	ldrb.w	r3, [r4, #48]	; 0x30
 800c34e:	4620      	mov	r0, r4
 800c350:	4a40      	ldr	r2, [pc, #256]	; (800c454 <_ZN8touchgfx12DigitalClock11updateClockEv+0x120>)
 800c352:	f104 0780 	add.w	r7, r4, #128	; 0x80
 800c356:	4d40      	ldr	r5, [pc, #256]	; (800c458 <_ZN8touchgfx12DigitalClock11updateClockEv+0x124>)
 800c358:	2b00      	cmp	r3, #0
 800c35a:	bf08      	it	eq
 800c35c:	4615      	moveq	r5, r2
 800c35e:	f000 f974 	bl	800c64a <_ZNK8touchgfx13AbstractClock16getCurrentHour12Ev>
 800c362:	4680      	mov	r8, r0
 800c364:	4620      	mov	r0, r4
 800c366:	f000 f983 	bl	800c670 <_ZNK8touchgfx13AbstractClock16getCurrentMinuteEv>
 800c36a:	4681      	mov	r9, r0
 800c36c:	4620      	mov	r0, r4
 800c36e:	f000 f978 	bl	800c662 <_ZNK8touchgfx13AbstractClock12getCurrentAMEv>
 800c372:	2800      	cmp	r0, #0
 800c374:	462a      	mov	r2, r5
 800c376:	f04f 010c 	mov.w	r1, #12
 800c37a:	bf14      	ite	ne
 800c37c:	2341      	movne	r3, #65	; 0x41
 800c37e:	2350      	moveq	r3, #80	; 0x50
 800c380:	4638      	mov	r0, r7
 800c382:	e9cd 9300 	strd	r9, r3, [sp]
 800c386:	4643      	mov	r3, r8
 800c388:	f008 fc1c 	bl	8014bc4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800c38c:	e017      	b.n	800c3be <_ZN8touchgfx12DigitalClock11updateClockEv+0x8a>
 800c38e:	2b01      	cmp	r3, #1
 800c390:	d11b      	bne.n	800c3ca <_ZN8touchgfx12DigitalClock11updateClockEv+0x96>
 800c392:	f894 3030 	ldrb.w	r3, [r4, #48]	; 0x30
 800c396:	4620      	mov	r0, r4
 800c398:	4a30      	ldr	r2, [pc, #192]	; (800c45c <_ZN8touchgfx12DigitalClock11updateClockEv+0x128>)
 800c39a:	4d31      	ldr	r5, [pc, #196]	; (800c460 <_ZN8touchgfx12DigitalClock11updateClockEv+0x12c>)
 800c39c:	2b00      	cmp	r3, #0
 800c39e:	bf08      	it	eq
 800c3a0:	4615      	moveq	r5, r2
 800c3a2:	f000 f94f 	bl	800c644 <_ZNK8touchgfx13AbstractClock16getCurrentHour24Ev>
 800c3a6:	4607      	mov	r7, r0
 800c3a8:	4620      	mov	r0, r4
 800c3aa:	f000 f961 	bl	800c670 <_ZNK8touchgfx13AbstractClock16getCurrentMinuteEv>
 800c3ae:	462a      	mov	r2, r5
 800c3b0:	9000      	str	r0, [sp, #0]
 800c3b2:	463b      	mov	r3, r7
 800c3b4:	210c      	movs	r1, #12
 800c3b6:	f104 0080 	add.w	r0, r4, #128	; 0x80
 800c3ba:	f008 fc03 	bl	8014bc4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800c3be:	4630      	mov	r0, r6
 800c3c0:	b004      	add	sp, #16
 800c3c2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c3c6:	f003 bc99 	b.w	800fcfc <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>
 800c3ca:	2b02      	cmp	r3, #2
 800c3cc:	d126      	bne.n	800c41c <_ZN8touchgfx12DigitalClock11updateClockEv+0xe8>
 800c3ce:	f894 3030 	ldrb.w	r3, [r4, #48]	; 0x30
 800c3d2:	4620      	mov	r0, r4
 800c3d4:	4a23      	ldr	r2, [pc, #140]	; (800c464 <_ZN8touchgfx12DigitalClock11updateClockEv+0x130>)
 800c3d6:	f104 0780 	add.w	r7, r4, #128	; 0x80
 800c3da:	4d23      	ldr	r5, [pc, #140]	; (800c468 <_ZN8touchgfx12DigitalClock11updateClockEv+0x134>)
 800c3dc:	2b00      	cmp	r3, #0
 800c3de:	bf08      	it	eq
 800c3e0:	4615      	moveq	r5, r2
 800c3e2:	f000 f932 	bl	800c64a <_ZNK8touchgfx13AbstractClock16getCurrentHour12Ev>
 800c3e6:	4680      	mov	r8, r0
 800c3e8:	4620      	mov	r0, r4
 800c3ea:	f000 f941 	bl	800c670 <_ZNK8touchgfx13AbstractClock16getCurrentMinuteEv>
 800c3ee:	4681      	mov	r9, r0
 800c3f0:	4620      	mov	r0, r4
 800c3f2:	f000 f940 	bl	800c676 <_ZNK8touchgfx13AbstractClock16getCurrentSecondEv>
 800c3f6:	4682      	mov	sl, r0
 800c3f8:	4620      	mov	r0, r4
 800c3fa:	f000 f932 	bl	800c662 <_ZNK8touchgfx13AbstractClock12getCurrentAMEv>
 800c3fe:	2800      	cmp	r0, #0
 800c400:	f8cd 9000 	str.w	r9, [sp]
 800c404:	462a      	mov	r2, r5
 800c406:	bf14      	ite	ne
 800c408:	2341      	movne	r3, #65	; 0x41
 800c40a:	2350      	moveq	r3, #80	; 0x50
 800c40c:	210c      	movs	r1, #12
 800c40e:	4638      	mov	r0, r7
 800c410:	e9cd a301 	strd	sl, r3, [sp, #4]
 800c414:	4643      	mov	r3, r8
 800c416:	f008 fbd5 	bl	8014bc4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800c41a:	e7d0      	b.n	800c3be <_ZN8touchgfx12DigitalClock11updateClockEv+0x8a>
 800c41c:	2b03      	cmp	r3, #3
 800c41e:	d1ce      	bne.n	800c3be <_ZN8touchgfx12DigitalClock11updateClockEv+0x8a>
 800c420:	f894 3030 	ldrb.w	r3, [r4, #48]	; 0x30
 800c424:	4620      	mov	r0, r4
 800c426:	4a11      	ldr	r2, [pc, #68]	; (800c46c <_ZN8touchgfx12DigitalClock11updateClockEv+0x138>)
 800c428:	4d11      	ldr	r5, [pc, #68]	; (800c470 <_ZN8touchgfx12DigitalClock11updateClockEv+0x13c>)
 800c42a:	2b00      	cmp	r3, #0
 800c42c:	bf08      	it	eq
 800c42e:	4615      	moveq	r5, r2
 800c430:	f000 f908 	bl	800c644 <_ZNK8touchgfx13AbstractClock16getCurrentHour24Ev>
 800c434:	4607      	mov	r7, r0
 800c436:	4620      	mov	r0, r4
 800c438:	f000 f91a 	bl	800c670 <_ZNK8touchgfx13AbstractClock16getCurrentMinuteEv>
 800c43c:	4680      	mov	r8, r0
 800c43e:	4620      	mov	r0, r4
 800c440:	f000 f919 	bl	800c676 <_ZNK8touchgfx13AbstractClock16getCurrentSecondEv>
 800c444:	463b      	mov	r3, r7
 800c446:	462a      	mov	r2, r5
 800c448:	210c      	movs	r1, #12
 800c44a:	e9cd 8000 	strd	r8, r0, [sp]
 800c44e:	f104 0080 	add.w	r0, r4, #128	; 0x80
 800c452:	e799      	b.n	800c388 <_ZN8touchgfx12DigitalClock11updateClockEv+0x54>
 800c454:	08022e6c 	.word	0x08022e6c
 800c458:	08022e96 	.word	0x08022e96
 800c45c:	08022e78 	.word	0x08022e78
 800c460:	08022eb6 	.word	0x08022eb6
 800c464:	08022e93 	.word	0x08022e93
 800c468:	08022e80 	.word	0x08022e80
 800c46c:	08022eb3 	.word	0x08022eb3
 800c470:	08022ea4 	.word	0x08022ea4

0800c474 <_ZNK8touchgfx12DigitalClock17invalidateContentEv>:
 800c474:	b510      	push	{r4, lr}
 800c476:	6803      	ldr	r3, [r0, #0]
 800c478:	4604      	mov	r4, r0
 800c47a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800c47e:	4798      	blx	r3
 800c480:	b120      	cbz	r0, 800c48c <_ZNK8touchgfx12DigitalClock17invalidateContentEv+0x18>
 800c482:	4620      	mov	r0, r4
 800c484:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c488:	f000 b92e 	b.w	800c6e8 <_ZNK8touchgfx9Container17invalidateContentEv>
 800c48c:	bd10      	pop	{r4, pc}
	...

0800c490 <_ZN8touchgfx12DigitalClock12setBaselineYEs>:
 800c490:	4b14      	ldr	r3, [pc, #80]	; (800c4e4 <_ZN8touchgfx12DigitalClock12setBaselineYEs+0x54>)
 800c492:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c496:	f8b0 6060 	ldrh.w	r6, [r0, #96]	; 0x60
 800c49a:	4605      	mov	r5, r0
 800c49c:	881b      	ldrh	r3, [r3, #0]
 800c49e:	42b3      	cmp	r3, r6
 800c4a0:	d91e      	bls.n	800c4e0 <_ZN8touchgfx12DigitalClock12setBaselineYEs+0x50>
 800c4a2:	6803      	ldr	r3, [r0, #0]
 800c4a4:	b28c      	uxth	r4, r1
 800c4a6:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 800c4aa:	6d9f      	ldr	r7, [r3, #88]	; 0x58
 800c4ac:	4b0e      	ldr	r3, [pc, #56]	; (800c4e8 <_ZN8touchgfx12DigitalClock12setBaselineYEs+0x58>)
 800c4ae:	681b      	ldr	r3, [r3, #0]
 800c4b0:	b92b      	cbnz	r3, 800c4be <_ZN8touchgfx12DigitalClock12setBaselineYEs+0x2e>
 800c4b2:	4b0e      	ldr	r3, [pc, #56]	; (800c4ec <_ZN8touchgfx12DigitalClock12setBaselineYEs+0x5c>)
 800c4b4:	21ae      	movs	r1, #174	; 0xae
 800c4b6:	4a0e      	ldr	r2, [pc, #56]	; (800c4f0 <_ZN8touchgfx12DigitalClock12setBaselineYEs+0x60>)
 800c4b8:	480e      	ldr	r0, [pc, #56]	; (800c4f4 <_ZN8touchgfx12DigitalClock12setBaselineYEs+0x64>)
 800c4ba:	f013 fd91 	bl	801ffe0 <__assert_func>
 800c4be:	f813 2016 	ldrb.w	r2, [r3, r6, lsl #1]
 800c4c2:	4b0d      	ldr	r3, [pc, #52]	; (800c4f8 <_ZN8touchgfx12DigitalClock12setBaselineYEs+0x68>)
 800c4c4:	681b      	ldr	r3, [r3, #0]
 800c4c6:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800c4ca:	6803      	ldr	r3, [r0, #0]
 800c4cc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c4ce:	4798      	blx	r3
 800c4d0:	1a22      	subs	r2, r4, r0
 800c4d2:	4641      	mov	r1, r8
 800c4d4:	4628      	mov	r0, r5
 800c4d6:	463b      	mov	r3, r7
 800c4d8:	b212      	sxth	r2, r2
 800c4da:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800c4de:	4718      	bx	r3
 800c4e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c4e4:	2400e128 	.word	0x2400e128
 800c4e8:	2400e124 	.word	0x2400e124
 800c4ec:	08022ec0 	.word	0x08022ec0
 800c4f0:	0802302c 	.word	0x0802302c
 800c4f4:	08022f02 	.word	0x08022f02
 800c4f8:	2400e12c 	.word	0x2400e12c

0800c4fc <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:
 800c4fc:	2200      	movs	r2, #0
 800c4fe:	f04f 31ff 	mov.w	r1, #4294967295
 800c502:	6082      	str	r2, [r0, #8]
 800c504:	e9c0 2100 	strd	r2, r1, [r0]
 800c508:	4770      	bx	lr
	...

0800c50c <_ZN8touchgfx12DigitalClockC1Ev>:
 800c50c:	b510      	push	{r4, lr}
 800c50e:	4604      	mov	r4, r0
 800c510:	f000 f87c 	bl	800c60c <_ZN8touchgfx13AbstractClockC1Ev>
 800c514:	2201      	movs	r2, #1
 800c516:	4b21      	ldr	r3, [pc, #132]	; (800c59c <_ZN8touchgfx12DigitalClockC1Ev+0x90>)
 800c518:	f44f 017f 	mov.w	r1, #16711680	; 0xff0000
 800c51c:	4620      	mov	r0, r4
 800c51e:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 800c522:	4a1f      	ldr	r2, [pc, #124]	; (800c5a0 <_ZN8touchgfx12DigitalClockC1Ev+0x94>)
 800c524:	6023      	str	r3, [r4, #0]
 800c526:	2303      	movs	r3, #3
 800c528:	65e2      	str	r2, [r4, #92]	; 0x5c
 800c52a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800c52e:	f884 302f 	strb.w	r3, [r4, #47]	; 0x2f
 800c532:	2300      	movs	r3, #0
 800c534:	f8a4 2060 	strh.w	r2, [r4, #96]	; 0x60
 800c538:	f8a4 2074 	strh.w	r2, [r4, #116]	; 0x74
 800c53c:	f8a4 2076 	strh.w	r2, [r4, #118]	; 0x76
 800c540:	4a18      	ldr	r2, [pc, #96]	; (800c5a4 <_ZN8touchgfx12DigitalClockC1Ev+0x98>)
 800c542:	66a1      	str	r1, [r4, #104]	; 0x68
 800c544:	f104 0134 	add.w	r1, r4, #52	; 0x34
 800c548:	6362      	str	r2, [r4, #52]	; 0x34
 800c54a:	4622      	mov	r2, r4
 800c54c:	f884 3030 	strb.w	r3, [r4, #48]	; 0x30
 800c550:	8723      	strh	r3, [r4, #56]	; 0x38
 800c552:	8763      	strh	r3, [r4, #58]	; 0x3a
 800c554:	87a3      	strh	r3, [r4, #60]	; 0x3c
 800c556:	87e3      	strh	r3, [r4, #62]	; 0x3e
 800c558:	f8a4 3040 	strh.w	r3, [r4, #64]	; 0x40
 800c55c:	f8a4 3042 	strh.w	r3, [r4, #66]	; 0x42
 800c560:	f8a4 3044 	strh.w	r3, [r4, #68]	; 0x44
 800c564:	f8a4 3046 	strh.w	r3, [r4, #70]	; 0x46
 800c568:	6523      	str	r3, [r4, #80]	; 0x50
 800c56a:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 800c56e:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 800c572:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 800c576:	6663      	str	r3, [r4, #100]	; 0x64
 800c578:	f884 306c 	strb.w	r3, [r4, #108]	; 0x6c
 800c57c:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 800c580:	f8a4 3070 	strh.w	r3, [r4, #112]	; 0x70
 800c584:	f8a4 3072 	strh.w	r3, [r4, #114]	; 0x72
 800c588:	67a3      	str	r3, [r4, #120]	; 0x78
 800c58a:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 800c58e:	f822 3f80 	strh.w	r3, [r2, #128]!
 800c592:	67e2      	str	r2, [r4, #124]	; 0x7c
 800c594:	f000 f8ec 	bl	800c770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c598:	4620      	mov	r0, r4
 800c59a:	bd10      	pop	{r4, pc}
 800c59c:	08022f74 	.word	0x08022f74
 800c5a0:	08021a34 	.word	0x08021a34
 800c5a4:	08022de4 	.word	0x08022de4

0800c5a8 <_ZN8touchgfx12DigitalClock34displayLeadingZeroForHourIndicatorEb>:
 800c5a8:	f880 1030 	strb.w	r1, [r0, #48]	; 0x30
 800c5ac:	4770      	bx	lr

0800c5ae <_ZN8touchgfx13AbstractClock13setTime24HourEhhh>:
 800c5ae:	b470      	push	{r4, r5, r6}
 800c5b0:	2518      	movs	r5, #24
 800c5b2:	fbb1 f6f5 	udiv	r6, r1, r5
 800c5b6:	fb06 1115 	mls	r1, r6, r5, r1
 800c5ba:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
 800c5be:	213c      	movs	r1, #60	; 0x3c
 800c5c0:	fbb2 f5f1 	udiv	r5, r2, r1
 800c5c4:	fb05 2211 	mls	r2, r5, r1, r2
 800c5c8:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
 800c5cc:	fbb3 f2f1 	udiv	r2, r3, r1
 800c5d0:	fb02 3311 	mls	r3, r2, r1, r3
 800c5d4:	f880 302e 	strb.w	r3, [r0, #46]	; 0x2e
 800c5d8:	6803      	ldr	r3, [r0, #0]
 800c5da:	bc70      	pop	{r4, r5, r6}
 800c5dc:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800c5e0:	4718      	bx	r3

0800c5e2 <_ZN8touchgfx13AbstractClock13setTime12HourEhhhb>:
 800c5e2:	b4f0      	push	{r4, r5, r6, r7}
 800c5e4:	6804      	ldr	r4, [r0, #0]
 800c5e6:	f89d 6010 	ldrb.w	r6, [sp, #16]
 800c5ea:	f8d4 5088 	ldr.w	r5, [r4, #136]	; 0x88
 800c5ee:	240c      	movs	r4, #12
 800c5f0:	2e00      	cmp	r6, #0
 800c5f2:	46ac      	mov	ip, r5
 800c5f4:	fbb1 f7f4 	udiv	r7, r1, r4
 800c5f8:	fb07 1114 	mls	r1, r7, r4, r1
 800c5fc:	bf18      	it	ne
 800c5fe:	2400      	movne	r4, #0
 800c600:	fa54 f181 	uxtab	r1, r4, r1
 800c604:	bcf0      	pop	{r4, r5, r6, r7}
 800c606:	b2c9      	uxtb	r1, r1
 800c608:	4760      	bx	ip
	...

0800c60c <_ZN8touchgfx13AbstractClockC1Ev>:
 800c60c:	2101      	movs	r1, #1
 800c60e:	2200      	movs	r2, #0
 800c610:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800c614:	490a      	ldr	r1, [pc, #40]	; (800c640 <_ZN8touchgfx13AbstractClockC1Ev+0x34>)
 800c616:	8082      	strh	r2, [r0, #4]
 800c618:	80c2      	strh	r2, [r0, #6]
 800c61a:	8102      	strh	r2, [r0, #8]
 800c61c:	8142      	strh	r2, [r0, #10]
 800c61e:	8182      	strh	r2, [r0, #12]
 800c620:	81c2      	strh	r2, [r0, #14]
 800c622:	8202      	strh	r2, [r0, #16]
 800c624:	8242      	strh	r2, [r0, #18]
 800c626:	61c2      	str	r2, [r0, #28]
 800c628:	8402      	strh	r2, [r0, #32]
 800c62a:	8442      	strh	r2, [r0, #34]	; 0x22
 800c62c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800c630:	6001      	str	r1, [r0, #0]
 800c632:	6282      	str	r2, [r0, #40]	; 0x28
 800c634:	8582      	strh	r2, [r0, #44]	; 0x2c
 800c636:	f880 202e 	strb.w	r2, [r0, #46]	; 0x2e
 800c63a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800c63e:	4770      	bx	lr
 800c640:	08023064 	.word	0x08023064

0800c644 <_ZNK8touchgfx13AbstractClock16getCurrentHour24Ev>:
 800c644:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800c648:	4770      	bx	lr

0800c64a <_ZNK8touchgfx13AbstractClock16getCurrentHour12Ev>:
 800c64a:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800c64e:	220c      	movs	r2, #12
 800c650:	f100 030b 	add.w	r3, r0, #11
 800c654:	fb93 f0f2 	sdiv	r0, r3, r2
 800c658:	fb02 3010 	mls	r0, r2, r0, r3
 800c65c:	3001      	adds	r0, #1
 800c65e:	b2c0      	uxtb	r0, r0
 800c660:	4770      	bx	lr

0800c662 <_ZNK8touchgfx13AbstractClock12getCurrentAMEv>:
 800c662:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800c666:	280b      	cmp	r0, #11
 800c668:	bf8c      	ite	hi
 800c66a:	2000      	movhi	r0, #0
 800c66c:	2001      	movls	r0, #1
 800c66e:	4770      	bx	lr

0800c670 <_ZNK8touchgfx13AbstractClock16getCurrentMinuteEv>:
 800c670:	f890 002d 	ldrb.w	r0, [r0, #45]	; 0x2d
 800c674:	4770      	bx	lr

0800c676 <_ZNK8touchgfx13AbstractClock16getCurrentSecondEv>:
 800c676:	f890 002e 	ldrb.w	r0, [r0, #46]	; 0x2e
 800c67a:	4770      	bx	lr

0800c67c <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800c67c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800c67e:	2000      	movs	r0, #0
 800c680:	b12b      	cbz	r3, 800c68e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800c682:	b920      	cbnz	r0, 800c68e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800c684:	1a5a      	subs	r2, r3, r1
 800c686:	699b      	ldr	r3, [r3, #24]
 800c688:	4250      	negs	r0, r2
 800c68a:	4150      	adcs	r0, r2
 800c68c:	e7f8      	b.n	800c680 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800c68e:	4770      	bx	lr

0800c690 <_ZN8touchgfx9Container9removeAllEv>:
 800c690:	2200      	movs	r2, #0
 800c692:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800c694:	b123      	cbz	r3, 800c6a0 <_ZN8touchgfx9Container9removeAllEv+0x10>
 800c696:	6999      	ldr	r1, [r3, #24]
 800c698:	6281      	str	r1, [r0, #40]	; 0x28
 800c69a:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800c69e:	e7f8      	b.n	800c692 <_ZN8touchgfx9Container9removeAllEv+0x2>
 800c6a0:	4770      	bx	lr

0800c6a2 <_ZN8touchgfx9Container6unlinkEv>:
 800c6a2:	2300      	movs	r3, #0
 800c6a4:	6283      	str	r3, [r0, #40]	; 0x28
 800c6a6:	4770      	bx	lr

0800c6a8 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800c6a8:	2200      	movs	r2, #0
 800c6aa:	8002      	strh	r2, [r0, #0]
 800c6ac:	8042      	strh	r2, [r0, #2]
 800c6ae:	8082      	strh	r2, [r0, #4]
 800c6b0:	80c2      	strh	r2, [r0, #6]
 800c6b2:	4770      	bx	lr

0800c6b4 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800c6b4:	b570      	push	{r4, r5, r6, lr}
 800c6b6:	460d      	mov	r5, r1
 800c6b8:	4616      	mov	r6, r2
 800c6ba:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800c6bc:	b13c      	cbz	r4, 800c6ce <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800c6be:	6823      	ldr	r3, [r4, #0]
 800c6c0:	4620      	mov	r0, r4
 800c6c2:	4632      	mov	r2, r6
 800c6c4:	4629      	mov	r1, r5
 800c6c6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800c6c8:	4798      	blx	r3
 800c6ca:	69a4      	ldr	r4, [r4, #24]
 800c6cc:	e7f6      	b.n	800c6bc <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800c6ce:	bd70      	pop	{r4, r5, r6, pc}

0800c6d0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800c6d0:	b538      	push	{r3, r4, r5, lr}
 800c6d2:	460d      	mov	r5, r1
 800c6d4:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800c6d6:	b134      	cbz	r4, 800c6e6 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800c6d8:	682b      	ldr	r3, [r5, #0]
 800c6da:	4621      	mov	r1, r4
 800c6dc:	4628      	mov	r0, r5
 800c6de:	689b      	ldr	r3, [r3, #8]
 800c6e0:	4798      	blx	r3
 800c6e2:	69a4      	ldr	r4, [r4, #24]
 800c6e4:	e7f7      	b.n	800c6d6 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800c6e6:	bd38      	pop	{r3, r4, r5, pc}

0800c6e8 <_ZNK8touchgfx9Container17invalidateContentEv>:
 800c6e8:	b510      	push	{r4, lr}
 800c6ea:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800c6ec:	b12c      	cbz	r4, 800c6fa <_ZNK8touchgfx9Container17invalidateContentEv+0x12>
 800c6ee:	6823      	ldr	r3, [r4, #0]
 800c6f0:	4620      	mov	r0, r4
 800c6f2:	699b      	ldr	r3, [r3, #24]
 800c6f4:	4798      	blx	r3
 800c6f6:	69a4      	ldr	r4, [r4, #24]
 800c6f8:	e7f8      	b.n	800c6ec <_ZNK8touchgfx9Container17invalidateContentEv+0x4>
 800c6fa:	bd10      	pop	{r4, pc}

0800c6fc <_ZN8touchgfx9ContainerD1Ev>:
 800c6fc:	4770      	bx	lr

0800c6fe <_ZN8touchgfx9ContainerD0Ev>:
 800c6fe:	b510      	push	{r4, lr}
 800c700:	4604      	mov	r4, r0
 800c702:	212c      	movs	r1, #44	; 0x2c
 800c704:	f013 fa73 	bl	801fbee <_ZdlPvj>
 800c708:	4620      	mov	r0, r4
 800c70a:	bd10      	pop	{r4, pc}

0800c70c <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800c70c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800c70e:	b19b      	cbz	r3, 800c738 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800c710:	428b      	cmp	r3, r1
 800c712:	d109      	bne.n	800c728 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800c714:	699a      	ldr	r2, [r3, #24]
 800c716:	2100      	movs	r1, #0
 800c718:	6159      	str	r1, [r3, #20]
 800c71a:	6282      	str	r2, [r0, #40]	; 0x28
 800c71c:	b902      	cbnz	r2, 800c720 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800c71e:	4770      	bx	lr
 800c720:	6199      	str	r1, [r3, #24]
 800c722:	4770      	bx	lr
 800c724:	4613      	mov	r3, r2
 800c726:	b13a      	cbz	r2, 800c738 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800c728:	699a      	ldr	r2, [r3, #24]
 800c72a:	428a      	cmp	r2, r1
 800c72c:	d1fa      	bne.n	800c724 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800c72e:	698a      	ldr	r2, [r1, #24]
 800c730:	619a      	str	r2, [r3, #24]
 800c732:	2300      	movs	r3, #0
 800c734:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800c738:	4770      	bx	lr

0800c73a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800c73a:	b410      	push	{r4}
 800c73c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800c73e:	4604      	mov	r4, r0
 800c740:	b92b      	cbnz	r3, 800c74e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800c742:	6803      	ldr	r3, [r0, #0]
 800c744:	4611      	mov	r1, r2
 800c746:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c74a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800c74c:	4718      	bx	r3
 800c74e:	b941      	cbnz	r1, 800c762 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800c750:	6193      	str	r3, [r2, #24]
 800c752:	6282      	str	r2, [r0, #40]	; 0x28
 800c754:	6154      	str	r4, [r2, #20]
 800c756:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c75a:	4770      	bx	lr
 800c75c:	4603      	mov	r3, r0
 800c75e:	2800      	cmp	r0, #0
 800c760:	d0f9      	beq.n	800c756 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800c762:	4299      	cmp	r1, r3
 800c764:	6998      	ldr	r0, [r3, #24]
 800c766:	d1f9      	bne.n	800c75c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800c768:	6190      	str	r0, [r2, #24]
 800c76a:	618a      	str	r2, [r1, #24]
 800c76c:	e7f2      	b.n	800c754 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>
	...

0800c770 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800c770:	4288      	cmp	r0, r1
 800c772:	b508      	push	{r3, lr}
 800c774:	d105      	bne.n	800c782 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x12>
 800c776:	4b11      	ldr	r3, [pc, #68]	; (800c7bc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x4c>)
 800c778:	2120      	movs	r1, #32
 800c77a:	4a11      	ldr	r2, [pc, #68]	; (800c7c0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800c77c:	4811      	ldr	r0, [pc, #68]	; (800c7c4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x54>)
 800c77e:	f013 fc2f 	bl	801ffe0 <__assert_func>
 800c782:	694b      	ldr	r3, [r1, #20]
 800c784:	b11b      	cbz	r3, 800c78e <_ZN8touchgfx9Container3addERNS_8DrawableE+0x1e>
 800c786:	4b10      	ldr	r3, [pc, #64]	; (800c7c8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x58>)
 800c788:	2121      	movs	r1, #33	; 0x21
 800c78a:	4a0d      	ldr	r2, [pc, #52]	; (800c7c0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800c78c:	e7f6      	b.n	800c77c <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800c78e:	e9c1 0305 	strd	r0, r3, [r1, #20]
 800c792:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800c794:	b913      	cbnz	r3, 800c79c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2c>
 800c796:	6281      	str	r1, [r0, #40]	; 0x28
 800c798:	bd08      	pop	{r3, pc}
 800c79a:	4613      	mov	r3, r2
 800c79c:	699a      	ldr	r2, [r3, #24]
 800c79e:	b12a      	cbz	r2, 800c7ac <_ZN8touchgfx9Container3addERNS_8DrawableE+0x3c>
 800c7a0:	428b      	cmp	r3, r1
 800c7a2:	d1fa      	bne.n	800c79a <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2a>
 800c7a4:	4b09      	ldr	r3, [pc, #36]	; (800c7cc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 800c7a6:	2132      	movs	r1, #50	; 0x32
 800c7a8:	4a05      	ldr	r2, [pc, #20]	; (800c7c0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800c7aa:	e7e7      	b.n	800c77c <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800c7ac:	428b      	cmp	r3, r1
 800c7ae:	d103      	bne.n	800c7b8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x48>
 800c7b0:	4b06      	ldr	r3, [pc, #24]	; (800c7cc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 800c7b2:	2135      	movs	r1, #53	; 0x35
 800c7b4:	4a02      	ldr	r2, [pc, #8]	; (800c7c0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800c7b6:	e7e1      	b.n	800c77c <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800c7b8:	6199      	str	r1, [r3, #24]
 800c7ba:	e7ed      	b.n	800c798 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x28>
 800c7bc:	080230f8 	.word	0x080230f8
 800c7c0:	08023250 	.word	0x08023250
 800c7c4:	08023124 	.word	0x08023124
 800c7c8:	08023157 	.word	0x08023157
 800c7cc:	0802318d 	.word	0x0802318d

0800c7d0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800c7d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c7d4:	461f      	mov	r7, r3
 800c7d6:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800c7da:	460d      	mov	r5, r1
 800c7dc:	4616      	mov	r6, r2
 800c7de:	b103      	cbz	r3, 800c7e2 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800c7e0:	6038      	str	r0, [r7, #0]
 800c7e2:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800c7e4:	b314      	cbz	r4, 800c82c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800c7e6:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800c7ea:	b1eb      	cbz	r3, 800c828 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800c7ec:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800c7f0:	428d      	cmp	r5, r1
 800c7f2:	db19      	blt.n	800c828 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800c7f4:	b289      	uxth	r1, r1
 800c7f6:	8923      	ldrh	r3, [r4, #8]
 800c7f8:	440b      	add	r3, r1
 800c7fa:	b21b      	sxth	r3, r3
 800c7fc:	429d      	cmp	r5, r3
 800c7fe:	da13      	bge.n	800c828 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800c800:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800c804:	4296      	cmp	r6, r2
 800c806:	db0f      	blt.n	800c828 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800c808:	b292      	uxth	r2, r2
 800c80a:	8963      	ldrh	r3, [r4, #10]
 800c80c:	4413      	add	r3, r2
 800c80e:	b21b      	sxth	r3, r3
 800c810:	429e      	cmp	r6, r3
 800c812:	da09      	bge.n	800c828 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800c814:	6823      	ldr	r3, [r4, #0]
 800c816:	1ab2      	subs	r2, r6, r2
 800c818:	1a69      	subs	r1, r5, r1
 800c81a:	4620      	mov	r0, r4
 800c81c:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 800c820:	b212      	sxth	r2, r2
 800c822:	463b      	mov	r3, r7
 800c824:	b209      	sxth	r1, r1
 800c826:	47c0      	blx	r8
 800c828:	69a4      	ldr	r4, [r4, #24]
 800c82a:	e7db      	b.n	800c7e4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800c82c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c830 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800c830:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c834:	4c6d      	ldr	r4, [pc, #436]	; (800c9ec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
 800c836:	b0a1      	sub	sp, #132	; 0x84
 800c838:	4606      	mov	r6, r0
 800c83a:	6824      	ldr	r4, [r4, #0]
 800c83c:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 800c83e:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 800c842:	2400      	movs	r4, #0
 800c844:	9303      	str	r3, [sp, #12]
 800c846:	802c      	strh	r4, [r5, #0]
 800c848:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800c84a:	802c      	strh	r4, [r5, #0]
 800c84c:	601c      	str	r4, [r3, #0]
 800c84e:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800c852:	f7ff ffbd 	bl	800c7d0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800c856:	f1b9 0f03 	cmp.w	r9, #3
 800c85a:	f340 80c1 	ble.w	800c9e0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b0>
 800c85e:	4631      	mov	r1, r6
 800c860:	a80c      	add	r0, sp, #48	; 0x30
 800c862:	f006 f987 	bl	8012b74 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c866:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800c86a:	9306      	str	r3, [sp, #24]
 800c86c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800c870:	9307      	str	r3, [sp, #28]
 800c872:	9b03      	ldr	r3, [sp, #12]
 800c874:	f8d3 a000 	ldr.w	sl, [r3]
 800c878:	f1ba 0f00 	cmp.w	sl, #0
 800c87c:	f000 80b3 	beq.w	800c9e6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b6>
 800c880:	4651      	mov	r1, sl
 800c882:	a810      	add	r0, sp, #64	; 0x40
 800c884:	f006 f976 	bl	8012b74 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c888:	2002      	movs	r0, #2
 800c88a:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 800c88e:	9b01      	ldr	r3, [sp, #4]
 800c890:	9a06      	ldr	r2, [sp, #24]
 800c892:	fb91 f1f0 	sdiv	r1, r1, r0
 800c896:	189d      	adds	r5, r3, r2
 800c898:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800c89c:	9a07      	ldr	r2, [sp, #28]
 800c89e:	4419      	add	r1, r3
 800c8a0:	9b02      	ldr	r3, [sp, #8]
 800c8a2:	4413      	add	r3, r2
 800c8a4:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 800c8a8:	1a6d      	subs	r5, r5, r1
 800c8aa:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800c8ae:	fb92 f2f0 	sdiv	r2, r2, r0
 800c8b2:	440a      	add	r2, r1
 800c8b4:	1a9b      	subs	r3, r3, r2
 800c8b6:	435b      	muls	r3, r3
 800c8b8:	fb05 3505 	mla	r5, r5, r5, r3
 800c8bc:	4f4c      	ldr	r7, [pc, #304]	; (800c9f0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800c8be:	ac10      	add	r4, sp, #64	; 0x40
 800c8c0:	f1b9 0f0c 	cmp.w	r9, #12
 800c8c4:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800c8c6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800c8c8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800c8ca:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800c8cc:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800c8ce:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800c8d0:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800c8d4:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800c8d8:	f04f 0303 	mov.w	r3, #3
 800c8dc:	bfd8      	it	le
 800c8de:	f109 32ff 	addle.w	r2, r9, #4294967295
 800c8e2:	f04f 0400 	mov.w	r4, #0
 800c8e6:	f8cd 9000 	str.w	r9, [sp]
 800c8ea:	bfcc      	ite	gt
 800c8ec:	4698      	movgt	r8, r3
 800c8ee:	fb92 f8f3 	sdivle	r8, r2, r3
 800c8f2:	1c63      	adds	r3, r4, #1
 800c8f4:	aa10      	add	r2, sp, #64	; 0x40
 800c8f6:	f004 0401 	and.w	r4, r4, #1
 800c8fa:	f04f 0b00 	mov.w	fp, #0
 800c8fe:	9308      	str	r3, [sp, #32]
 800c900:	9b00      	ldr	r3, [sp, #0]
 800c902:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800c906:	fb93 f3f8 	sdiv	r3, r3, r8
 800c90a:	3404      	adds	r4, #4
 800c90c:	b29b      	uxth	r3, r3
 800c90e:	9304      	str	r3, [sp, #16]
 800c910:	9a04      	ldr	r2, [sp, #16]
 800c912:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800c916:	fb13 f302 	smulbb	r3, r3, r2
 800c91a:	9a01      	ldr	r2, [sp, #4]
 800c91c:	b29b      	uxth	r3, r3
 800c91e:	1899      	adds	r1, r3, r2
 800c920:	9305      	str	r3, [sp, #20]
 800c922:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800c926:	b209      	sxth	r1, r1
 800c928:	4299      	cmp	r1, r3
 800c92a:	db4d      	blt.n	800c9c8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800c92c:	8932      	ldrh	r2, [r6, #8]
 800c92e:	4413      	add	r3, r2
 800c930:	b21b      	sxth	r3, r3
 800c932:	4299      	cmp	r1, r3
 800c934:	da48      	bge.n	800c9c8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800c936:	9b04      	ldr	r3, [sp, #16]
 800c938:	6827      	ldr	r7, [r4, #0]
 800c93a:	fb17 f703 	smulbb	r7, r7, r3
 800c93e:	9b02      	ldr	r3, [sp, #8]
 800c940:	b2bf      	uxth	r7, r7
 800c942:	18fa      	adds	r2, r7, r3
 800c944:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800c948:	b212      	sxth	r2, r2
 800c94a:	429a      	cmp	r2, r3
 800c94c:	db3c      	blt.n	800c9c8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800c94e:	8970      	ldrh	r0, [r6, #10]
 800c950:	4403      	add	r3, r0
 800c952:	b21b      	sxth	r3, r3
 800c954:	429a      	cmp	r2, r3
 800c956:	da37      	bge.n	800c9c8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800c958:	2300      	movs	r3, #0
 800c95a:	4630      	mov	r0, r6
 800c95c:	930b      	str	r3, [sp, #44]	; 0x2c
 800c95e:	ab0b      	add	r3, sp, #44	; 0x2c
 800c960:	f7ff ff36 	bl	800c7d0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800c964:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800c966:	b37a      	cbz	r2, 800c9c8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800c968:	4552      	cmp	r2, sl
 800c96a:	d02d      	beq.n	800c9c8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800c96c:	4611      	mov	r1, r2
 800c96e:	a80e      	add	r0, sp, #56	; 0x38
 800c970:	9209      	str	r2, [sp, #36]	; 0x24
 800c972:	f006 f8ff 	bl	8012b74 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c976:	f04f 0e02 	mov.w	lr, #2
 800c97a:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800c97e:	9a06      	ldr	r2, [sp, #24]
 800c980:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800c984:	9b01      	ldr	r3, [sp, #4]
 800c986:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800c98a:	4413      	add	r3, r2
 800c98c:	9a07      	ldr	r2, [sp, #28]
 800c98e:	fb91 f1fe 	sdiv	r1, r1, lr
 800c992:	fb9c fcfe 	sdiv	ip, ip, lr
 800c996:	4401      	add	r1, r0
 800c998:	1a58      	subs	r0, r3, r1
 800c99a:	9b02      	ldr	r3, [sp, #8]
 800c99c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 800c9a0:	4413      	add	r3, r2
 800c9a2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800c9a4:	448c      	add	ip, r1
 800c9a6:	eba3 030c 	sub.w	r3, r3, ip
 800c9aa:	435b      	muls	r3, r3
 800c9ac:	fb00 3300 	mla	r3, r0, r0, r3
 800c9b0:	42ab      	cmp	r3, r5
 800c9b2:	d208      	bcs.n	800c9c6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800c9b4:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800c9b6:	461d      	mov	r5, r3
 800c9b8:	9803      	ldr	r0, [sp, #12]
 800c9ba:	6001      	str	r1, [r0, #0]
 800c9bc:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800c9be:	9805      	ldr	r0, [sp, #20]
 800c9c0:	8008      	strh	r0, [r1, #0]
 800c9c2:	992b      	ldr	r1, [sp, #172]	; 0xac
 800c9c4:	800f      	strh	r7, [r1, #0]
 800c9c6:	4692      	mov	sl, r2
 800c9c8:	f10b 0b01 	add.w	fp, fp, #1
 800c9cc:	3408      	adds	r4, #8
 800c9ce:	f1bb 0f04 	cmp.w	fp, #4
 800c9d2:	d19d      	bne.n	800c910 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800c9d4:	9b00      	ldr	r3, [sp, #0]
 800c9d6:	9c08      	ldr	r4, [sp, #32]
 800c9d8:	444b      	add	r3, r9
 800c9da:	4544      	cmp	r4, r8
 800c9dc:	9300      	str	r3, [sp, #0]
 800c9de:	d188      	bne.n	800c8f2 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800c9e0:	b021      	add	sp, #132	; 0x84
 800c9e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c9e6:	f04f 35ff 	mov.w	r5, #4294967295
 800c9ea:	e767      	b.n	800c8bc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800c9ec:	2400e0b4 	.word	0x2400e0b4
 800c9f0:	08021250 	.word	0x08021250

0800c9f4 <_ZN8touchgfx4RectaNERKS0_>:
 800c9f4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c9f8:	f9b1 7000 	ldrsh.w	r7, [r1]
 800c9fc:	888c      	ldrh	r4, [r1, #4]
 800c9fe:	f9b0 9000 	ldrsh.w	r9, [r0]
 800ca02:	443c      	add	r4, r7
 800ca04:	b2a4      	uxth	r4, r4
 800ca06:	fa0f f884 	sxth.w	r8, r4
 800ca0a:	45c1      	cmp	r9, r8
 800ca0c:	da2f      	bge.n	800ca6e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ca0e:	8882      	ldrh	r2, [r0, #4]
 800ca10:	444a      	add	r2, r9
 800ca12:	b292      	uxth	r2, r2
 800ca14:	fa0f fe82 	sxth.w	lr, r2
 800ca18:	4577      	cmp	r7, lr
 800ca1a:	da28      	bge.n	800ca6e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ca1c:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800ca20:	88cb      	ldrh	r3, [r1, #6]
 800ca22:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800ca26:	442b      	add	r3, r5
 800ca28:	b21b      	sxth	r3, r3
 800ca2a:	429e      	cmp	r6, r3
 800ca2c:	da1f      	bge.n	800ca6e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ca2e:	88c3      	ldrh	r3, [r0, #6]
 800ca30:	4433      	add	r3, r6
 800ca32:	b29b      	uxth	r3, r3
 800ca34:	fa0f fc83 	sxth.w	ip, r3
 800ca38:	4565      	cmp	r5, ip
 800ca3a:	da18      	bge.n	800ca6e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ca3c:	454f      	cmp	r7, r9
 800ca3e:	bfb8      	it	lt
 800ca40:	464f      	movlt	r7, r9
 800ca42:	42b5      	cmp	r5, r6
 800ca44:	bfb8      	it	lt
 800ca46:	4635      	movlt	r5, r6
 800ca48:	45f0      	cmp	r8, lr
 800ca4a:	bfd8      	it	le
 800ca4c:	4622      	movle	r2, r4
 800ca4e:	1bd2      	subs	r2, r2, r7
 800ca50:	8082      	strh	r2, [r0, #4]
 800ca52:	884a      	ldrh	r2, [r1, #2]
 800ca54:	88c9      	ldrh	r1, [r1, #6]
 800ca56:	8007      	strh	r7, [r0, #0]
 800ca58:	440a      	add	r2, r1
 800ca5a:	8045      	strh	r5, [r0, #2]
 800ca5c:	b292      	uxth	r2, r2
 800ca5e:	b211      	sxth	r1, r2
 800ca60:	458c      	cmp	ip, r1
 800ca62:	bfa8      	it	ge
 800ca64:	4613      	movge	r3, r2
 800ca66:	1b5b      	subs	r3, r3, r5
 800ca68:	80c3      	strh	r3, [r0, #6]
 800ca6a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ca6e:	2300      	movs	r3, #0
 800ca70:	8003      	strh	r3, [r0, #0]
 800ca72:	8043      	strh	r3, [r0, #2]
 800ca74:	8083      	strh	r3, [r0, #4]
 800ca76:	80c3      	strh	r3, [r0, #6]
 800ca78:	e7f7      	b.n	800ca6a <_ZN8touchgfx4RectaNERKS0_+0x76>

0800ca7a <_ZNK8touchgfx4Rect7isEmptyEv>:
 800ca7a:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800ca7e:	2b00      	cmp	r3, #0
 800ca80:	dd06      	ble.n	800ca90 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800ca82:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800ca86:	2800      	cmp	r0, #0
 800ca88:	bfcc      	ite	gt
 800ca8a:	2000      	movgt	r0, #0
 800ca8c:	2001      	movle	r0, #1
 800ca8e:	4770      	bx	lr
 800ca90:	2001      	movs	r0, #1
 800ca92:	4770      	bx	lr

0800ca94 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800ca94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ca98:	2300      	movs	r3, #0
 800ca9a:	4604      	mov	r4, r0
 800ca9c:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800ca9e:	8003      	strh	r3, [r0, #0]
 800caa0:	8043      	strh	r3, [r0, #2]
 800caa2:	8083      	strh	r3, [r0, #4]
 800caa4:	80c3      	strh	r3, [r0, #6]
 800caa6:	2d00      	cmp	r5, #0
 800caa8:	d040      	beq.n	800cb2c <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800caaa:	1d28      	adds	r0, r5, #4
 800caac:	f7ff ffe5 	bl	800ca7a <_ZNK8touchgfx4Rect7isEmptyEv>
 800cab0:	b988      	cbnz	r0, 800cad6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800cab2:	4620      	mov	r0, r4
 800cab4:	f7ff ffe1 	bl	800ca7a <_ZNK8touchgfx4Rect7isEmptyEv>
 800cab8:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800cabc:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800cac0:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800cac4:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800cac8:	b138      	cbz	r0, 800cada <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800caca:	8022      	strh	r2, [r4, #0]
 800cacc:	8063      	strh	r3, [r4, #2]
 800cace:	f8a4 e004 	strh.w	lr, [r4, #4]
 800cad2:	f8a4 c006 	strh.w	ip, [r4, #6]
 800cad6:	69ad      	ldr	r5, [r5, #24]
 800cad8:	e7e5      	b.n	800caa6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800cada:	f9b4 0000 	ldrsh.w	r0, [r4]
 800cade:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800cae2:	4290      	cmp	r0, r2
 800cae4:	4607      	mov	r7, r0
 800cae6:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800caea:	460e      	mov	r6, r1
 800caec:	bfa8      	it	ge
 800caee:	4617      	movge	r7, r2
 800caf0:	4299      	cmp	r1, r3
 800caf2:	4472      	add	r2, lr
 800caf4:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800caf8:	bfa8      	it	ge
 800cafa:	461e      	movge	r6, r3
 800cafc:	4440      	add	r0, r8
 800cafe:	4471      	add	r1, lr
 800cb00:	4463      	add	r3, ip
 800cb02:	b200      	sxth	r0, r0
 800cb04:	8027      	strh	r7, [r4, #0]
 800cb06:	b212      	sxth	r2, r2
 800cb08:	8066      	strh	r6, [r4, #2]
 800cb0a:	b209      	sxth	r1, r1
 800cb0c:	b21b      	sxth	r3, r3
 800cb0e:	4290      	cmp	r0, r2
 800cb10:	bfac      	ite	ge
 800cb12:	ebc7 0200 	rsbge	r2, r7, r0
 800cb16:	ebc7 0202 	rsblt	r2, r7, r2
 800cb1a:	4299      	cmp	r1, r3
 800cb1c:	bfac      	ite	ge
 800cb1e:	ebc6 0301 	rsbge	r3, r6, r1
 800cb22:	ebc6 0303 	rsblt	r3, r6, r3
 800cb26:	80a2      	strh	r2, [r4, #4]
 800cb28:	80e3      	strh	r3, [r4, #6]
 800cb2a:	e7d4      	b.n	800cad6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800cb2c:	4620      	mov	r0, r4
 800cb2e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800cb32 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800cb32:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800cb36:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800cb3a:	b383      	cbz	r3, 800cb9e <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800cb3c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800cb3e:	b374      	cbz	r4, 800cb9e <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800cb40:	f9b1 5000 	ldrsh.w	r5, [r1]
 800cb44:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800cb48:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800cb4c:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800cb50:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800cb54:	b303      	cbz	r3, 800cb98 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800cb56:	4668      	mov	r0, sp
 800cb58:	1d21      	adds	r1, r4, #4
 800cb5a:	f8ad 5000 	strh.w	r5, [sp]
 800cb5e:	f8ad 6002 	strh.w	r6, [sp, #2]
 800cb62:	f8ad 7004 	strh.w	r7, [sp, #4]
 800cb66:	f8ad 8006 	strh.w	r8, [sp, #6]
 800cb6a:	f7ff ff43 	bl	800c9f4 <_ZN8touchgfx4RectaNERKS0_>
 800cb6e:	4668      	mov	r0, sp
 800cb70:	f7ff ff83 	bl	800ca7a <_ZNK8touchgfx4Rect7isEmptyEv>
 800cb74:	b980      	cbnz	r0, 800cb98 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800cb76:	f8bd 3000 	ldrh.w	r3, [sp]
 800cb7a:	4669      	mov	r1, sp
 800cb7c:	88a2      	ldrh	r2, [r4, #4]
 800cb7e:	4620      	mov	r0, r4
 800cb80:	1a9b      	subs	r3, r3, r2
 800cb82:	88e2      	ldrh	r2, [r4, #6]
 800cb84:	f8ad 3000 	strh.w	r3, [sp]
 800cb88:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800cb8c:	1a9b      	subs	r3, r3, r2
 800cb8e:	f8ad 3002 	strh.w	r3, [sp, #2]
 800cb92:	6823      	ldr	r3, [r4, #0]
 800cb94:	689b      	ldr	r3, [r3, #8]
 800cb96:	4798      	blx	r3
 800cb98:	69a4      	ldr	r4, [r4, #24]
 800cb9a:	2c00      	cmp	r4, #0
 800cb9c:	d1d8      	bne.n	800cb50 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800cb9e:	b002      	add	sp, #8
 800cba0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800cba4 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800cba4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800cba6:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800cbaa:	460d      	mov	r5, r1
 800cbac:	4616      	mov	r6, r2
 800cbae:	b323      	cbz	r3, 800cbfa <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800cbb0:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800cbb2:	b314      	cbz	r4, 800cbfa <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800cbb4:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800cbb8:	b1eb      	cbz	r3, 800cbf6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800cbba:	6828      	ldr	r0, [r5, #0]
 800cbbc:	466b      	mov	r3, sp
 800cbbe:	6869      	ldr	r1, [r5, #4]
 800cbc0:	c303      	stmia	r3!, {r0, r1}
 800cbc2:	4668      	mov	r0, sp
 800cbc4:	1d21      	adds	r1, r4, #4
 800cbc6:	f7ff ff15 	bl	800c9f4 <_ZN8touchgfx4RectaNERKS0_>
 800cbca:	4668      	mov	r0, sp
 800cbcc:	f7ff ff55 	bl	800ca7a <_ZNK8touchgfx4Rect7isEmptyEv>
 800cbd0:	b988      	cbnz	r0, 800cbf6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800cbd2:	f8bd 3000 	ldrh.w	r3, [sp]
 800cbd6:	4669      	mov	r1, sp
 800cbd8:	88a2      	ldrh	r2, [r4, #4]
 800cbda:	4620      	mov	r0, r4
 800cbdc:	1a9b      	subs	r3, r3, r2
 800cbde:	88e2      	ldrh	r2, [r4, #6]
 800cbe0:	f8ad 3000 	strh.w	r3, [sp]
 800cbe4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800cbe8:	1a9b      	subs	r3, r3, r2
 800cbea:	4632      	mov	r2, r6
 800cbec:	f8ad 3002 	strh.w	r3, [sp, #2]
 800cbf0:	6823      	ldr	r3, [r4, #0]
 800cbf2:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800cbf4:	4798      	blx	r3
 800cbf6:	69a4      	ldr	r4, [r4, #24]
 800cbf8:	e7db      	b.n	800cbb2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800cbfa:	b002      	add	sp, #8
 800cbfc:	bd70      	pop	{r4, r5, r6, pc}

0800cbfe <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800cbfe:	6803      	ldr	r3, [r0, #0]
 800cc00:	b513      	push	{r0, r1, r4, lr}
 800cc02:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 800cc06:	2300      	movs	r3, #0
 800cc08:	e9cd 3300 	strd	r3, r3, [sp]
 800cc0c:	466b      	mov	r3, sp
 800cc0e:	47a0      	blx	r4
 800cc10:	b002      	add	sp, #8
 800cc12:	bd10      	pop	{r4, pc}

0800cc14 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800cc14:	2301      	movs	r3, #1
 800cc16:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800cc1a:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800cc1e:	4770      	bx	lr

0800cc20 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800cc20:	2301      	movs	r3, #1
 800cc22:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800cc26:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800cc2a:	4770      	bx	lr

0800cc2c <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800cc2c:	6843      	ldr	r3, [r0, #4]
 800cc2e:	2201      	movs	r2, #1
 800cc30:	725a      	strb	r2, [r3, #9]
 800cc32:	6840      	ldr	r0, [r0, #4]
 800cc34:	6803      	ldr	r3, [r0, #0]
 800cc36:	691b      	ldr	r3, [r3, #16]
 800cc38:	4718      	bx	r3

0800cc3a <_ZN8touchgfx3HAL8flushDMAEv>:
 800cc3a:	6840      	ldr	r0, [r0, #4]
 800cc3c:	6803      	ldr	r3, [r0, #0]
 800cc3e:	689b      	ldr	r3, [r3, #8]
 800cc40:	4718      	bx	r3

0800cc42 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800cc42:	b530      	push	{r4, r5, lr}
 800cc44:	b08b      	sub	sp, #44	; 0x2c
 800cc46:	6804      	ldr	r4, [r0, #0]
 800cc48:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 800cc4c:	9509      	str	r5, [sp, #36]	; 0x24
 800cc4e:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 800cc52:	9508      	str	r5, [sp, #32]
 800cc54:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800cc58:	9507      	str	r5, [sp, #28]
 800cc5a:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800cc5e:	9506      	str	r5, [sp, #24]
 800cc60:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800cc64:	9505      	str	r5, [sp, #20]
 800cc66:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800cc6a:	9504      	str	r5, [sp, #16]
 800cc6c:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800cc70:	9503      	str	r5, [sp, #12]
 800cc72:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800cc76:	9502      	str	r5, [sp, #8]
 800cc78:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800cc7c:	e9cd 3500 	strd	r3, r5, [sp]
 800cc80:	4613      	mov	r3, r2
 800cc82:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 800cc84:	2200      	movs	r2, #0
 800cc86:	47a0      	blx	r4
 800cc88:	b00b      	add	sp, #44	; 0x2c
 800cc8a:	bd30      	pop	{r4, r5, pc}

0800cc8c <_ZN8touchgfx3HAL10beginFrameEv>:
 800cc8c:	4b04      	ldr	r3, [pc, #16]	; (800cca0 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800cc8e:	781b      	ldrb	r3, [r3, #0]
 800cc90:	b123      	cbz	r3, 800cc9c <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800cc92:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 800cc96:	f080 0001 	eor.w	r0, r0, #1
 800cc9a:	4770      	bx	lr
 800cc9c:	2001      	movs	r0, #1
 800cc9e:	4770      	bx	lr
 800cca0:	2400e0b2 	.word	0x2400e0b2

0800cca4 <_ZN8touchgfx3HAL8endFrameEv>:
 800cca4:	b510      	push	{r4, lr}
 800cca6:	4604      	mov	r4, r0
 800cca8:	6840      	ldr	r0, [r0, #4]
 800ccaa:	6803      	ldr	r3, [r0, #0]
 800ccac:	689b      	ldr	r3, [r3, #8]
 800ccae:	4798      	blx	r3
 800ccb0:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 800ccb4:	b113      	cbz	r3, 800ccbc <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800ccb6:	2301      	movs	r3, #1
 800ccb8:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800ccbc:	bd10      	pop	{r4, pc}

0800ccbe <_ZN8touchgfx3HAL10initializeEv>:
 800ccbe:	b510      	push	{r4, lr}
 800ccc0:	4604      	mov	r4, r0
 800ccc2:	f7f5 f845 	bl	8001d50 <_ZN8touchgfx10OSWrappers10initializeEv>
 800ccc6:	6860      	ldr	r0, [r4, #4]
 800ccc8:	6803      	ldr	r3, [r0, #0]
 800ccca:	68db      	ldr	r3, [r3, #12]
 800cccc:	4798      	blx	r3
 800ccce:	68e0      	ldr	r0, [r4, #12]
 800ccd0:	6803      	ldr	r3, [r0, #0]
 800ccd2:	689b      	ldr	r3, [r3, #8]
 800ccd4:	4798      	blx	r3
 800ccd6:	6823      	ldr	r3, [r4, #0]
 800ccd8:	4620      	mov	r0, r4
 800ccda:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800ccdc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cce0:	4718      	bx	r3
	...

0800cce4 <_ZN8touchgfx3HAL4tickEv>:
 800cce4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800cce6:	6803      	ldr	r3, [r0, #0]
 800cce8:	4604      	mov	r4, r0
 800ccea:	4d5b      	ldr	r5, [pc, #364]	; (800ce58 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800ccec:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800ccf0:	4798      	blx	r3
 800ccf2:	2800      	cmp	r0, #0
 800ccf4:	f000 8095 	beq.w	800ce22 <_ZN8touchgfx3HAL4tickEv+0x13e>
 800ccf8:	2001      	movs	r0, #1
 800ccfa:	2600      	movs	r6, #0
 800ccfc:	f7f4 fd4d 	bl	800179a <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800cd00:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 800cd04:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800cd08:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800cd0c:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800cd10:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800cd14:	b133      	cbz	r3, 800cd24 <_ZN8touchgfx3HAL4tickEv+0x40>
 800cd16:	6823      	ldr	r3, [r4, #0]
 800cd18:	4620      	mov	r0, r4
 800cd1a:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 800cd1e:	4798      	blx	r3
 800cd20:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 800cd24:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800cd28:	2601      	movs	r6, #1
 800cd2a:	6862      	ldr	r2, [r4, #4]
 800cd2c:	f083 0301 	eor.w	r3, r3, #1
 800cd30:	702e      	strb	r6, [r5, #0]
 800cd32:	7253      	strb	r3, [r2, #9]
 800cd34:	f004 fe82 	bl	8011a3c <_ZN8touchgfx11Application11getInstanceEv>
 800cd38:	6803      	ldr	r3, [r0, #0]
 800cd3a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800cd3c:	4798      	blx	r3
 800cd3e:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800cd42:	b90b      	cbnz	r3, 800cd48 <_ZN8touchgfx3HAL4tickEv+0x64>
 800cd44:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 800cd48:	f004 fe78 	bl	8011a3c <_ZN8touchgfx11Application11getInstanceEv>
 800cd4c:	6803      	ldr	r3, [r0, #0]
 800cd4e:	695b      	ldr	r3, [r3, #20]
 800cd50:	4798      	blx	r3
 800cd52:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800cd54:	6803      	ldr	r3, [r0, #0]
 800cd56:	691b      	ldr	r3, [r3, #16]
 800cd58:	4798      	blx	r3
 800cd5a:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800cd5e:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 800cd62:	3b01      	subs	r3, #1
 800cd64:	b2db      	uxtb	r3, r3
 800cd66:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800cd6a:	b10a      	cbz	r2, 800cd70 <_ZN8touchgfx3HAL4tickEv+0x8c>
 800cd6c:	2b00      	cmp	r3, #0
 800cd6e:	d1eb      	bne.n	800cd48 <_ZN8touchgfx3HAL4tickEv+0x64>
 800cd70:	4a3a      	ldr	r2, [pc, #232]	; (800ce5c <_ZN8touchgfx3HAL4tickEv+0x178>)
 800cd72:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 800cd76:	7813      	ldrb	r3, [r2, #0]
 800cd78:	3301      	adds	r3, #1
 800cd7a:	b25b      	sxtb	r3, r3
 800cd7c:	4299      	cmp	r1, r3
 800cd7e:	7013      	strb	r3, [r2, #0]
 800cd80:	dc10      	bgt.n	800cda4 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800cd82:	2300      	movs	r3, #0
 800cd84:	68e0      	ldr	r0, [r4, #12]
 800cd86:	a902      	add	r1, sp, #8
 800cd88:	7013      	strb	r3, [r2, #0]
 800cd8a:	aa03      	add	r2, sp, #12
 800cd8c:	6803      	ldr	r3, [r0, #0]
 800cd8e:	68db      	ldr	r3, [r3, #12]
 800cd90:	4798      	blx	r3
 800cd92:	6823      	ldr	r3, [r4, #0]
 800cd94:	2800      	cmp	r0, #0
 800cd96:	d050      	beq.n	800ce3a <_ZN8touchgfx3HAL4tickEv+0x156>
 800cd98:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800cd9c:	4620      	mov	r0, r4
 800cd9e:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800cda2:	4798      	blx	r3
 800cda4:	2300      	movs	r3, #0
 800cda6:	6960      	ldr	r0, [r4, #20]
 800cda8:	f88d 3007 	strb.w	r3, [sp, #7]
 800cdac:	b158      	cbz	r0, 800cdc6 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800cdae:	6803      	ldr	r3, [r0, #0]
 800cdb0:	f10d 0107 	add.w	r1, sp, #7
 800cdb4:	68db      	ldr	r3, [r3, #12]
 800cdb6:	4798      	blx	r3
 800cdb8:	b128      	cbz	r0, 800cdc6 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800cdba:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800cdbc:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800cdc0:	6803      	ldr	r3, [r0, #0]
 800cdc2:	68db      	ldr	r3, [r3, #12]
 800cdc4:	4798      	blx	r3
 800cdc6:	f104 001c 	add.w	r0, r4, #28
 800cdca:	f010 fb59 	bl	801d480 <_ZN8touchgfx8Gestures4tickEv>
 800cdce:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 800cdd2:	b30b      	cbz	r3, 800ce18 <_ZN8touchgfx3HAL4tickEv+0x134>
 800cdd4:	6920      	ldr	r0, [r4, #16]
 800cdd6:	6803      	ldr	r3, [r0, #0]
 800cdd8:	691b      	ldr	r3, [r3, #16]
 800cdda:	4798      	blx	r3
 800cddc:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800cdde:	4606      	mov	r6, r0
 800cde0:	b903      	cbnz	r3, 800cde4 <_ZN8touchgfx3HAL4tickEv+0x100>
 800cde2:	6720      	str	r0, [r4, #112]	; 0x70
 800cde4:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800cde6:	4a1e      	ldr	r2, [pc, #120]	; (800ce60 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800cde8:	1af3      	subs	r3, r6, r3
 800cdea:	4293      	cmp	r3, r2
 800cdec:	d914      	bls.n	800ce18 <_ZN8touchgfx3HAL4tickEv+0x134>
 800cdee:	6920      	ldr	r0, [r4, #16]
 800cdf0:	6803      	ldr	r3, [r0, #0]
 800cdf2:	699b      	ldr	r3, [r3, #24]
 800cdf4:	4798      	blx	r3
 800cdf6:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800cdf8:	2264      	movs	r2, #100	; 0x64
 800cdfa:	1af3      	subs	r3, r6, r3
 800cdfc:	fbb3 f3f2 	udiv	r3, r3, r2
 800ce00:	fbb0 f0f3 	udiv	r0, r0, r3
 800ce04:	2800      	cmp	r0, #0
 800ce06:	dc1d      	bgt.n	800ce44 <_ZN8touchgfx3HAL4tickEv+0x160>
 800ce08:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 800ce0c:	6920      	ldr	r0, [r4, #16]
 800ce0e:	2100      	movs	r1, #0
 800ce10:	6803      	ldr	r3, [r0, #0]
 800ce12:	69db      	ldr	r3, [r3, #28]
 800ce14:	4798      	blx	r3
 800ce16:	6726      	str	r6, [r4, #112]	; 0x70
 800ce18:	f004 fe10 	bl	8011a3c <_ZN8touchgfx11Application11getInstanceEv>
 800ce1c:	6803      	ldr	r3, [r0, #0]
 800ce1e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ce20:	4798      	blx	r3
 800ce22:	6823      	ldr	r3, [r4, #0]
 800ce24:	4620      	mov	r0, r4
 800ce26:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800ce2a:	4798      	blx	r3
 800ce2c:	2001      	movs	r0, #1
 800ce2e:	f7f4 fcb5 	bl	800179c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800ce32:	2300      	movs	r3, #0
 800ce34:	702b      	strb	r3, [r5, #0]
 800ce36:	b004      	add	sp, #16
 800ce38:	bd70      	pop	{r4, r5, r6, pc}
 800ce3a:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800ce3e:	4620      	mov	r0, r4
 800ce40:	4798      	blx	r3
 800ce42:	e7af      	b.n	800cda4 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800ce44:	2863      	cmp	r0, #99	; 0x63
 800ce46:	bfcb      	itete	gt
 800ce48:	2300      	movgt	r3, #0
 800ce4a:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800ce4e:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 800ce52:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 800ce56:	e7d9      	b.n	800ce0c <_ZN8touchgfx3HAL4tickEv+0x128>
 800ce58:	2400e0b8 	.word	0x2400e0b8
 800ce5c:	2400e0b9 	.word	0x2400e0b9
 800ce60:	05f5e100 	.word	0x05f5e100

0800ce64 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800ce64:	f7f4 bfa4 	b.w	8001db0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800ce68 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800ce68:	6581      	str	r1, [r0, #88]	; 0x58
 800ce6a:	301c      	adds	r0, #28
 800ce6c:	f010 bb06 	b.w	801d47c <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800ce70 <_ZN8touchgfx3HAL5touchEll>:
 800ce70:	b530      	push	{r4, r5, lr}
 800ce72:	b087      	sub	sp, #28
 800ce74:	4604      	mov	r4, r0
 800ce76:	a804      	add	r0, sp, #16
 800ce78:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800ce7c:	f004 fb42 	bl	8011504 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800ce80:	9b04      	ldr	r3, [sp, #16]
 800ce82:	a906      	add	r1, sp, #24
 800ce84:	a803      	add	r0, sp, #12
 800ce86:	f8ad 300c 	strh.w	r3, [sp, #12]
 800ce8a:	9b05      	ldr	r3, [sp, #20]
 800ce8c:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800ce90:	f004 fb8a 	bl	80115a8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800ce94:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 800ce98:	f104 001c 	add.w	r0, r4, #28
 800ce9c:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800cea0:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800cea4:	b189      	cbz	r1, 800ceca <_ZN8touchgfx3HAL5touchEll+0x5a>
 800cea6:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 800ceaa:	9300      	str	r3, [sp, #0]
 800ceac:	4613      	mov	r3, r2
 800ceae:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800ceb2:	462a      	mov	r2, r5
 800ceb4:	f010 faf2 	bl	801d49c <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800ceb8:	b128      	cbz	r0, 800cec6 <_ZN8touchgfx3HAL5touchEll+0x56>
 800ceba:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800cebe:	65e3      	str	r3, [r4, #92]	; 0x5c
 800cec0:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800cec4:	6623      	str	r3, [r4, #96]	; 0x60
 800cec6:	b007      	add	sp, #28
 800cec8:	bd30      	pop	{r4, r5, pc}
 800ceca:	f010 fb27 	bl	801d51c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800cece:	2301      	movs	r3, #1
 800ced0:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800ced4:	e7f1      	b.n	800ceba <_ZN8touchgfx3HAL5touchEll+0x4a>

0800ced6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800ced6:	b510      	push	{r4, lr}
 800ced8:	2b00      	cmp	r3, #0
 800ceda:	d046      	beq.n	800cf6a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800cedc:	ea81 0002 	eor.w	r0, r1, r2
 800cee0:	07c4      	lsls	r4, r0, #31
 800cee2:	d508      	bpl.n	800cef6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800cee4:	440b      	add	r3, r1
 800cee6:	3a01      	subs	r2, #1
 800cee8:	428b      	cmp	r3, r1
 800ceea:	d93e      	bls.n	800cf6a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800ceec:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800cef0:	f801 0b01 	strb.w	r0, [r1], #1
 800cef4:	e7f8      	b.n	800cee8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800cef6:	07d0      	lsls	r0, r2, #31
 800cef8:	bf42      	ittt	mi
 800cefa:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800cefe:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800cf02:	f801 0b01 	strbmi.w	r0, [r1], #1
 800cf06:	2b01      	cmp	r3, #1
 800cf08:	d911      	bls.n	800cf2e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800cf0a:	ea81 0402 	eor.w	r4, r1, r2
 800cf0e:	4610      	mov	r0, r2
 800cf10:	07a4      	lsls	r4, r4, #30
 800cf12:	d022      	beq.n	800cf5a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800cf14:	f023 0401 	bic.w	r4, r3, #1
 800cf18:	440c      	add	r4, r1
 800cf1a:	428c      	cmp	r4, r1
 800cf1c:	4602      	mov	r2, r0
 800cf1e:	d904      	bls.n	800cf2a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800cf20:	8812      	ldrh	r2, [r2, #0]
 800cf22:	3002      	adds	r0, #2
 800cf24:	f821 2b02 	strh.w	r2, [r1], #2
 800cf28:	e7f7      	b.n	800cf1a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800cf2a:	f003 0301 	and.w	r3, r3, #1
 800cf2e:	f023 0003 	bic.w	r0, r3, #3
 800cf32:	4408      	add	r0, r1
 800cf34:	4288      	cmp	r0, r1
 800cf36:	4614      	mov	r4, r2
 800cf38:	d904      	bls.n	800cf44 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800cf3a:	6824      	ldr	r4, [r4, #0]
 800cf3c:	3204      	adds	r2, #4
 800cf3e:	f841 4b04 	str.w	r4, [r1], #4
 800cf42:	e7f7      	b.n	800cf34 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800cf44:	f003 0303 	and.w	r3, r3, #3
 800cf48:	3a01      	subs	r2, #1
 800cf4a:	440b      	add	r3, r1
 800cf4c:	428b      	cmp	r3, r1
 800cf4e:	d90c      	bls.n	800cf6a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800cf50:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800cf54:	f801 0b01 	strb.w	r0, [r1], #1
 800cf58:	e7f8      	b.n	800cf4c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800cf5a:	0790      	lsls	r0, r2, #30
 800cf5c:	d0e7      	beq.n	800cf2e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800cf5e:	f832 0b02 	ldrh.w	r0, [r2], #2
 800cf62:	3b02      	subs	r3, #2
 800cf64:	f821 0b02 	strh.w	r0, [r1], #2
 800cf68:	e7e1      	b.n	800cf2e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800cf6a:	2001      	movs	r0, #1
 800cf6c:	bd10      	pop	{r4, pc}

0800cf6e <_ZN8touchgfx3HAL7noTouchEv>:
 800cf6e:	b510      	push	{r4, lr}
 800cf70:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 800cf74:	4604      	mov	r4, r0
 800cf76:	b153      	cbz	r3, 800cf8e <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800cf78:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 800cf7c:	2101      	movs	r1, #1
 800cf7e:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 800cf82:	301c      	adds	r0, #28
 800cf84:	f010 faca 	bl	801d51c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800cf88:	2300      	movs	r3, #0
 800cf8a:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800cf8e:	bd10      	pop	{r4, pc}

0800cf90 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800cf90:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cf94:	4604      	mov	r4, r0
 800cf96:	6980      	ldr	r0, [r0, #24]
 800cf98:	b085      	sub	sp, #20
 800cf9a:	460f      	mov	r7, r1
 800cf9c:	4690      	mov	r8, r2
 800cf9e:	4699      	mov	r9, r3
 800cfa0:	b930      	cbnz	r0, 800cfb0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x20>
 800cfa2:	4b1c      	ldr	r3, [pc, #112]	; (800d014 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x84>)
 800cfa4:	f44f 719f 	mov.w	r1, #318	; 0x13e
 800cfa8:	4a1b      	ldr	r2, [pc, #108]	; (800d018 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 800cfaa:	481c      	ldr	r0, [pc, #112]	; (800d01c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x8c>)
 800cfac:	f013 f818 	bl	801ffe0 <__assert_func>
 800cfb0:	ad04      	add	r5, sp, #16
 800cfb2:	2600      	movs	r6, #0
 800cfb4:	f845 6d04 	str.w	r6, [r5, #-4]!
 800cfb8:	6806      	ldr	r6, [r0, #0]
 800cfba:	9501      	str	r5, [sp, #4]
 800cfbc:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 800cfc0:	9500      	str	r5, [sp, #0]
 800cfc2:	6835      	ldr	r5, [r6, #0]
 800cfc4:	47a8      	blx	r5
 800cfc6:	4d16      	ldr	r5, [pc, #88]	; (800d020 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x90>)
 800cfc8:	4606      	mov	r6, r0
 800cfca:	f8a5 9000 	strh.w	r9, [r5]
 800cfce:	f7f6 f839 	bl	8003044 <_ZN8touchgfx3HAL3lcdEv>
 800cfd2:	6803      	ldr	r3, [r0, #0]
 800cfd4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800cfd6:	4798      	blx	r3
 800cfd8:	2801      	cmp	r0, #1
 800cfda:	d012      	beq.n	800d002 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x72>
 800cfdc:	d306      	bcc.n	800cfec <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x5c>
 800cfde:	280d      	cmp	r0, #13
 800cfe0:	d80b      	bhi.n	800cffa <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 800cfe2:	4b10      	ldr	r3, [pc, #64]	; (800d024 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 800cfe4:	f240 115b 	movw	r1, #347	; 0x15b
 800cfe8:	4a0b      	ldr	r2, [pc, #44]	; (800d018 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 800cfea:	e7de      	b.n	800cfaa <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x1a>
 800cfec:	882b      	ldrh	r3, [r5, #0]
 800cfee:	fb08 7203 	mla	r2, r8, r3, r7
 800cff2:	9b03      	ldr	r3, [sp, #12]
 800cff4:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800cff8:	63e3      	str	r3, [r4, #60]	; 0x3c
 800cffa:	4630      	mov	r0, r6
 800cffc:	b005      	add	sp, #20
 800cffe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d002:	882a      	ldrh	r2, [r5, #0]
 800d004:	9b03      	ldr	r3, [sp, #12]
 800d006:	fb08 7202 	mla	r2, r8, r2, r7
 800d00a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800d00e:	1a9a      	subs	r2, r3, r2
 800d010:	63e2      	str	r2, [r4, #60]	; 0x3c
 800d012:	e7f2      	b.n	800cffa <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 800d014:	080233f1 	.word	0x080233f1
 800d018:	080236af 	.word	0x080236af
 800d01c:	08023436 	.word	0x08023436
 800d020:	2400e0ae 	.word	0x2400e0ae
 800d024:	0802345c 	.word	0x0802345c

0800d028 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800d028:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d02a:	b08b      	sub	sp, #44	; 0x2c
 800d02c:	4617      	mov	r7, r2
 800d02e:	4604      	mov	r4, r0
 800d030:	460e      	mov	r6, r1
 800d032:	461d      	mov	r5, r3
 800d034:	f7f6 f806 	bl	8003044 <_ZN8touchgfx3HAL3lcdEv>
 800d038:	6803      	ldr	r3, [r0, #0]
 800d03a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d03c:	4798      	blx	r3
 800d03e:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800d042:	9007      	str	r0, [sp, #28]
 800d044:	4631      	mov	r1, r6
 800d046:	6822      	ldr	r2, [r4, #0]
 800d048:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800d04c:	4b0c      	ldr	r3, [pc, #48]	; (800d080 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800d04e:	4620      	mov	r0, r4
 800d050:	881b      	ldrh	r3, [r3, #0]
 800d052:	9306      	str	r3, [sp, #24]
 800d054:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800d058:	9305      	str	r3, [sp, #20]
 800d05a:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800d05e:	9304      	str	r3, [sp, #16]
 800d060:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800d064:	9303      	str	r3, [sp, #12]
 800d066:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800d06a:	9302      	str	r3, [sp, #8]
 800d06c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800d070:	e9cd 5300 	strd	r5, r3, [sp]
 800d074:	463b      	mov	r3, r7
 800d076:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 800d078:	2200      	movs	r2, #0
 800d07a:	47a8      	blx	r5
 800d07c:	b00b      	add	sp, #44	; 0x2c
 800d07e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d080:	2400e0ae 	.word	0x2400e0ae

0800d084 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800d084:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d088:	4698      	mov	r8, r3
 800d08a:	6803      	ldr	r3, [r0, #0]
 800d08c:	b08b      	sub	sp, #44	; 0x2c
 800d08e:	4617      	mov	r7, r2
 800d090:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 800d092:	460e      	mov	r6, r1
 800d094:	4b13      	ldr	r3, [pc, #76]	; (800d0e4 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800d096:	4604      	mov	r4, r0
 800d098:	f8b3 9000 	ldrh.w	r9, [r3]
 800d09c:	f7f5 ffd2 	bl	8003044 <_ZN8touchgfx3HAL3lcdEv>
 800d0a0:	6803      	ldr	r3, [r0, #0]
 800d0a2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d0a4:	4798      	blx	r3
 800d0a6:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800d0aa:	2200      	movs	r2, #0
 800d0ac:	4631      	mov	r1, r6
 800d0ae:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800d0b2:	2302      	movs	r3, #2
 800d0b4:	4620      	mov	r0, r4
 800d0b6:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800d0ba:	2301      	movs	r3, #1
 800d0bc:	9305      	str	r3, [sp, #20]
 800d0be:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800d0c2:	9304      	str	r3, [sp, #16]
 800d0c4:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800d0c8:	9303      	str	r3, [sp, #12]
 800d0ca:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800d0ce:	9302      	str	r3, [sp, #8]
 800d0d0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800d0d4:	e9cd 8300 	strd	r8, r3, [sp]
 800d0d8:	463b      	mov	r3, r7
 800d0da:	47a8      	blx	r5
 800d0dc:	b00b      	add	sp, #44	; 0x2c
 800d0de:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d0e2:	bf00      	nop
 800d0e4:	2400e0ae 	.word	0x2400e0ae

0800d0e8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800d0e8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d0ec:	4698      	mov	r8, r3
 800d0ee:	6803      	ldr	r3, [r0, #0]
 800d0f0:	b087      	sub	sp, #28
 800d0f2:	460e      	mov	r6, r1
 800d0f4:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 800d0f6:	4617      	mov	r7, r2
 800d0f8:	4b0f      	ldr	r3, [pc, #60]	; (800d138 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800d0fa:	4604      	mov	r4, r0
 800d0fc:	f8b3 9000 	ldrh.w	r9, [r3]
 800d100:	f7f5 ffa0 	bl	8003044 <_ZN8touchgfx3HAL3lcdEv>
 800d104:	6803      	ldr	r3, [r0, #0]
 800d106:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d108:	4798      	blx	r3
 800d10a:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800d10e:	463a      	mov	r2, r7
 800d110:	4631      	mov	r1, r6
 800d112:	f8cd 900c 	str.w	r9, [sp, #12]
 800d116:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800d11a:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800d11e:	4620      	mov	r0, r4
 800d120:	9302      	str	r3, [sp, #8]
 800d122:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800d126:	9301      	str	r3, [sp, #4]
 800d128:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800d12c:	9300      	str	r3, [sp, #0]
 800d12e:	4643      	mov	r3, r8
 800d130:	47a8      	blx	r5
 800d132:	b007      	add	sp, #28
 800d134:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d138:	2400e0ae 	.word	0x2400e0ae

0800d13c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800d13c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d140:	4604      	mov	r4, r0
 800d142:	b08f      	sub	sp, #60	; 0x3c
 800d144:	4610      	mov	r0, r2
 800d146:	460d      	mov	r5, r1
 800d148:	4691      	mov	r9, r2
 800d14a:	461e      	mov	r6, r3
 800d14c:	f007 fd60 	bl	8014c10 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800d150:	2800      	cmp	r0, #0
 800d152:	f000 809c 	beq.w	800d28e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x152>
 800d156:	6823      	ldr	r3, [r4, #0]
 800d158:	4620      	mov	r0, r4
 800d15a:	f8df b194 	ldr.w	fp, [pc, #404]	; 800d2f0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>
 800d15e:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800d162:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d164:	4798      	blx	r3
 800d166:	6823      	ldr	r3, [r4, #0]
 800d168:	4620      	mov	r0, r4
 800d16a:	f8df a188 	ldr.w	sl, [pc, #392]	; 800d2f4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800d16e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d170:	4798      	blx	r3
 800d172:	f8bb 3000 	ldrh.w	r3, [fp]
 800d176:	4f5b      	ldr	r7, [pc, #364]	; (800d2e4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 800d178:	9301      	str	r3, [sp, #4]
 800d17a:	f8ba 3000 	ldrh.w	r3, [sl]
 800d17e:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800d182:	4640      	mov	r0, r8
 800d184:	9302      	str	r3, [sp, #8]
 800d186:	883b      	ldrh	r3, [r7, #0]
 800d188:	9303      	str	r3, [sp, #12]
 800d18a:	4b57      	ldr	r3, [pc, #348]	; (800d2e8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800d18c:	881a      	ldrh	r2, [r3, #0]
 800d18e:	9305      	str	r3, [sp, #20]
 800d190:	9204      	str	r2, [sp, #16]
 800d192:	f007 fe9d 	bl	8014ed0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800d196:	8038      	strh	r0, [r7, #0]
 800d198:	4640      	mov	r0, r8
 800d19a:	f007 fedd 	bl	8014f58 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800d19e:	9b05      	ldr	r3, [sp, #20]
 800d1a0:	8018      	strh	r0, [r3, #0]
 800d1a2:	4b52      	ldr	r3, [pc, #328]	; (800d2ec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800d1a4:	781b      	ldrb	r3, [r3, #0]
 800d1a6:	2b00      	cmp	r3, #0
 800d1a8:	d174      	bne.n	800d294 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x158>
 800d1aa:	883b      	ldrh	r3, [r7, #0]
 800d1ac:	f8aa 0000 	strh.w	r0, [sl]
 800d1b0:	f8ab 3000 	strh.w	r3, [fp]
 800d1b4:	4648      	mov	r0, r9
 800d1b6:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 800d1ba:	f007 fd29 	bl	8014c10 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800d1be:	2200      	movs	r2, #0
 800d1c0:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 800d1c4:	4611      	mov	r1, r2
 800d1c6:	4628      	mov	r0, r5
 800d1c8:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800d1cc:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800d1d0:	f7f5 fa42 	bl	8002658 <_ZN8touchgfx8Drawable5setXYEss>
 800d1d4:	2301      	movs	r3, #1
 800d1d6:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 800d1da:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 800d1de:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800d1e2:	2b00      	cmp	r3, #0
 800d1e4:	dd5c      	ble.n	800d2a0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x164>
 800d1e6:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800d1ea:	2b00      	cmp	r3, #0
 800d1ec:	dd58      	ble.n	800d2a0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x164>
 800d1ee:	462a      	mov	r2, r5
 800d1f0:	ab0a      	add	r3, sp, #40	; 0x28
 800d1f2:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800d1f6:	6851      	ldr	r1, [r2, #4]
 800d1f8:	c303      	stmia	r3!, {r0, r1}
 800d1fa:	4631      	mov	r1, r6
 800d1fc:	a80a      	add	r0, sp, #40	; 0x28
 800d1fe:	f7ff fbf9 	bl	800c9f4 <_ZN8touchgfx4RectaNERKS0_>
 800d202:	4b38      	ldr	r3, [pc, #224]	; (800d2e4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 800d204:	2100      	movs	r1, #0
 800d206:	f9b3 2000 	ldrsh.w	r2, [r3]
 800d20a:	4b37      	ldr	r3, [pc, #220]	; (800d2e8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800d20c:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800d210:	aa0a      	add	r2, sp, #40	; 0x28
 800d212:	f9b3 3000 	ldrsh.w	r3, [r3]
 800d216:	910c      	str	r1, [sp, #48]	; 0x30
 800d218:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800d21c:	ab08      	add	r3, sp, #32
 800d21e:	e892 0003 	ldmia.w	r2, {r0, r1}
 800d222:	e883 0003 	stmia.w	r3, {r0, r1}
 800d226:	4618      	mov	r0, r3
 800d228:	a90c      	add	r1, sp, #48	; 0x30
 800d22a:	f7ff fbe3 	bl	800c9f4 <_ZN8touchgfx4RectaNERKS0_>
 800d22e:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 800d230:	2b00      	cmp	r3, #0
 800d232:	d13c      	bne.n	800d2ae <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x172>
 800d234:	2000      	movs	r0, #0
 800d236:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 800d23a:	2600      	movs	r6, #0
 800d23c:	696b      	ldr	r3, [r5, #20]
 800d23e:	a908      	add	r1, sp, #32
 800d240:	682a      	ldr	r2, [r5, #0]
 800d242:	4628      	mov	r0, r5
 800d244:	9305      	str	r3, [sp, #20]
 800d246:	616e      	str	r6, [r5, #20]
 800d248:	6892      	ldr	r2, [r2, #8]
 800d24a:	4790      	blx	r2
 800d24c:	9b05      	ldr	r3, [sp, #20]
 800d24e:	4652      	mov	r2, sl
 800d250:	4649      	mov	r1, r9
 800d252:	616b      	str	r3, [r5, #20]
 800d254:	4628      	mov	r0, r5
 800d256:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 800d25a:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 800d25e:	f7f5 f9fb 	bl	8002658 <_ZN8touchgfx8Drawable5setXYEss>
 800d262:	9a01      	ldr	r2, [sp, #4]
 800d264:	4b22      	ldr	r3, [pc, #136]	; (800d2f0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800d266:	4620      	mov	r0, r4
 800d268:	801a      	strh	r2, [r3, #0]
 800d26a:	9a02      	ldr	r2, [sp, #8]
 800d26c:	4b21      	ldr	r3, [pc, #132]	; (800d2f4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800d26e:	801a      	strh	r2, [r3, #0]
 800d270:	9a03      	ldr	r2, [sp, #12]
 800d272:	4b1c      	ldr	r3, [pc, #112]	; (800d2e4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 800d274:	801a      	strh	r2, [r3, #0]
 800d276:	4b1c      	ldr	r3, [pc, #112]	; (800d2e8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800d278:	9a04      	ldr	r2, [sp, #16]
 800d27a:	801a      	strh	r2, [r3, #0]
 800d27c:	6823      	ldr	r3, [r4, #0]
 800d27e:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 800d282:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d284:	4798      	blx	r3
 800d286:	6823      	ldr	r3, [r4, #0]
 800d288:	4620      	mov	r0, r4
 800d28a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d28c:	4798      	blx	r3
 800d28e:	b00f      	add	sp, #60	; 0x3c
 800d290:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d294:	883b      	ldrh	r3, [r7, #0]
 800d296:	f8ab 0000 	strh.w	r0, [fp]
 800d29a:	f8aa 3000 	strh.w	r3, [sl]
 800d29e:	e789      	b.n	800d1b4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x78>
 800d2a0:	462a      	mov	r2, r5
 800d2a2:	ab0a      	add	r3, sp, #40	; 0x28
 800d2a4:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800d2a8:	6851      	ldr	r1, [r2, #4]
 800d2aa:	c303      	stmia	r3!, {r0, r1}
 800d2ac:	e7a9      	b.n	800d202 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc6>
 800d2ae:	a807      	add	r0, sp, #28
 800d2b0:	f007 ffb4 	bl	801521c <_ZNK8touchgfx6Bitmap9getFormatEv>
 800d2b4:	4606      	mov	r6, r0
 800d2b6:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800d2b8:	6803      	ldr	r3, [r0, #0]
 800d2ba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d2bc:	4798      	blx	r3
 800d2be:	4286      	cmp	r6, r0
 800d2c0:	d1b8      	bne.n	800d234 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xf8>
 800d2c2:	f7f5 febf 	bl	8003044 <_ZN8touchgfx3HAL3lcdEv>
 800d2c6:	6803      	ldr	r3, [r0, #0]
 800d2c8:	4606      	mov	r6, r0
 800d2ca:	a807      	add	r0, sp, #28
 800d2cc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800d2ce:	9305      	str	r3, [sp, #20]
 800d2d0:	f007 ffa4 	bl	801521c <_ZNK8touchgfx6Bitmap9getFormatEv>
 800d2d4:	9b05      	ldr	r3, [sp, #20]
 800d2d6:	4601      	mov	r1, r0
 800d2d8:	4630      	mov	r0, r6
 800d2da:	4798      	blx	r3
 800d2dc:	f080 0001 	eor.w	r0, r0, #1
 800d2e0:	b2c0      	uxtb	r0, r0
 800d2e2:	e7a8      	b.n	800d236 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800d2e4:	2400e0a8 	.word	0x2400e0a8
 800d2e8:	2400e0aa 	.word	0x2400e0aa
 800d2ec:	2400e0ac 	.word	0x2400e0ac
 800d2f0:	2400e0ae 	.word	0x2400e0ae
 800d2f4:	2400e0b0 	.word	0x2400e0b0

0800d2f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800d2f8:	4b07      	ldr	r3, [pc, #28]	; (800d318 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800d2fa:	b510      	push	{r4, lr}
 800d2fc:	781b      	ldrb	r3, [r3, #0]
 800d2fe:	4604      	mov	r4, r0
 800d300:	b13b      	cbz	r3, 800d312 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800d302:	6803      	ldr	r3, [r0, #0]
 800d304:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800d306:	4798      	blx	r3
 800d308:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d30a:	4283      	cmp	r3, r0
 800d30c:	d101      	bne.n	800d312 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800d30e:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800d310:	bd10      	pop	{r4, pc}
 800d312:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800d314:	e7fc      	b.n	800d310 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800d316:	bf00      	nop
 800d318:	2400e0b2 	.word	0x2400e0b2

0800d31c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800d31c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d320:	b08a      	sub	sp, #40	; 0x28
 800d322:	4692      	mov	sl, r2
 800d324:	461d      	mov	r5, r3
 800d326:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800d32a:	f8bd 9054 	ldrh.w	r9, [sp, #84]	; 0x54
 800d32e:	2400      	movs	r4, #0
 800d330:	f8bd 8048 	ldrh.w	r8, [sp, #72]	; 0x48
 800d334:	4606      	mov	r6, r0
 800d336:	f8bd 704c 	ldrh.w	r7, [sp, #76]	; 0x4c
 800d33a:	fb09 a505 	mla	r5, r9, r5, sl
 800d33e:	9404      	str	r4, [sp, #16]
 800d340:	f8ad 8018 	strh.w	r8, [sp, #24]
 800d344:	f8ad 701a 	strh.w	r7, [sp, #26]
 800d348:	f88d 4020 	strb.w	r4, [sp, #32]
 800d34c:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800d350:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800d354:	f8ad 301c 	strh.w	r3, [sp, #28]
 800d358:	f7ff ffce 	bl	800d2f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800d35c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800d360:	f8ad 901e 	strh.w	r9, [sp, #30]
 800d364:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800d368:	9505      	str	r5, [sp, #20]
 800d36a:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 800d36e:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800d372:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800d376:	f1b8 0f00 	cmp.w	r8, #0
 800d37a:	d000      	beq.n	800d37e <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x62>
 800d37c:	b937      	cbnz	r7, 800d38c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x70>
 800d37e:	4b0d      	ldr	r3, [pc, #52]	; (800d3b4 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x98>)
 800d380:	f240 2102 	movw	r1, #514	; 0x202
 800d384:	4a0c      	ldr	r2, [pc, #48]	; (800d3b8 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x9c>)
 800d386:	480d      	ldr	r0, [pc, #52]	; (800d3bc <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0xa0>)
 800d388:	f012 fe2a 	bl	801ffe0 <__assert_func>
 800d38c:	6833      	ldr	r3, [r6, #0]
 800d38e:	4630      	mov	r0, r6
 800d390:	9c01      	ldr	r4, [sp, #4]
 800d392:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d394:	4798      	blx	r3
 800d396:	4220      	tst	r0, r4
 800d398:	d104      	bne.n	800d3a4 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x88>
 800d39a:	4b09      	ldr	r3, [pc, #36]	; (800d3c0 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0xa4>)
 800d39c:	f240 2103 	movw	r1, #515	; 0x203
 800d3a0:	4a05      	ldr	r2, [pc, #20]	; (800d3b8 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x9c>)
 800d3a2:	e7f0      	b.n	800d386 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x6a>
 800d3a4:	6870      	ldr	r0, [r6, #4]
 800d3a6:	a901      	add	r1, sp, #4
 800d3a8:	6803      	ldr	r3, [r0, #0]
 800d3aa:	685b      	ldr	r3, [r3, #4]
 800d3ac:	4798      	blx	r3
 800d3ae:	b00a      	add	sp, #40	; 0x28
 800d3b0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d3b4:	0802328b 	.word	0x0802328b
 800d3b8:	080234e4 	.word	0x080234e4
 800d3bc:	08023436 	.word	0x08023436
 800d3c0:	080232c3 	.word	0x080232c3

0800d3c4 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800d3c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d3c8:	b08b      	sub	sp, #44	; 0x2c
 800d3ca:	4693      	mov	fp, r2
 800d3cc:	461d      	mov	r5, r3
 800d3ce:	2400      	movs	r4, #0
 800d3d0:	f8bd 9058 	ldrh.w	r9, [sp, #88]	; 0x58
 800d3d4:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800d3d8:	468a      	mov	sl, r1
 800d3da:	f8bd 8050 	ldrh.w	r8, [sp, #80]	; 0x50
 800d3de:	fb09 b505 	mla	r5, r9, r5, fp
 800d3e2:	f8bd 7054 	ldrh.w	r7, [sp, #84]	; 0x54
 800d3e6:	4606      	mov	r6, r0
 800d3e8:	9404      	str	r4, [sp, #16]
 800d3ea:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800d3ee:	f7ff ff83 	bl	800d2f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800d3f2:	f8ad 8018 	strh.w	r8, [sp, #24]
 800d3f6:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800d3fa:	f8ad 701a 	strh.w	r7, [sp, #26]
 800d3fe:	f8ad 401c 	strh.w	r4, [sp, #28]
 800d402:	9505      	str	r5, [sp, #20]
 800d404:	f8ad 901e 	strh.w	r9, [sp, #30]
 800d408:	f8cd a010 	str.w	sl, [sp, #16]
 800d40c:	f8ad 4020 	strh.w	r4, [sp, #32]
 800d410:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800d414:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800d418:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800d41c:	f1b8 0f00 	cmp.w	r8, #0
 800d420:	d000      	beq.n	800d424 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x60>
 800d422:	b937      	cbnz	r7, 800d432 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x6e>
 800d424:	4b0d      	ldr	r3, [pc, #52]	; (800d45c <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x98>)
 800d426:	f240 2119 	movw	r1, #537	; 0x219
 800d42a:	4a0d      	ldr	r2, [pc, #52]	; (800d460 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x9c>)
 800d42c:	480d      	ldr	r0, [pc, #52]	; (800d464 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0xa0>)
 800d42e:	f012 fdd7 	bl	801ffe0 <__assert_func>
 800d432:	6833      	ldr	r3, [r6, #0]
 800d434:	4630      	mov	r0, r6
 800d436:	9c01      	ldr	r4, [sp, #4]
 800d438:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d43a:	4798      	blx	r3
 800d43c:	4220      	tst	r0, r4
 800d43e:	d104      	bne.n	800d44a <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x86>
 800d440:	4b09      	ldr	r3, [pc, #36]	; (800d468 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0xa4>)
 800d442:	f240 211a 	movw	r1, #538	; 0x21a
 800d446:	4a06      	ldr	r2, [pc, #24]	; (800d460 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x9c>)
 800d448:	e7f0      	b.n	800d42c <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x68>
 800d44a:	6870      	ldr	r0, [r6, #4]
 800d44c:	a901      	add	r1, sp, #4
 800d44e:	6803      	ldr	r3, [r0, #0]
 800d450:	685b      	ldr	r3, [r3, #4]
 800d452:	4798      	blx	r3
 800d454:	b00b      	add	sp, #44	; 0x2c
 800d456:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d45a:	bf00      	nop
 800d45c:	08023308 	.word	0x08023308
 800d460:	0802355a 	.word	0x0802355a
 800d464:	08023436 	.word	0x08023436
 800d468:	08023340 	.word	0x08023340

0800d46c <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>:
 800d46c:	b508      	push	{r3, lr}
 800d46e:	290d      	cmp	r1, #13
 800d470:	d817      	bhi.n	800d4a2 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x36>
 800d472:	e8df f001 	tbb	[pc, r1]
 800d476:	090b      	.short	0x090b
 800d478:	0d0d0d07 	.word	0x0d0d0d07
 800d47c:	1414140d 	.word	0x1414140d
 800d480:	0d0d1414 	.word	0x0d0d1414
 800d484:	2020      	movs	r0, #32
 800d486:	bd08      	pop	{r3, pc}
 800d488:	2018      	movs	r0, #24
 800d48a:	e7fc      	b.n	800d486 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800d48c:	2010      	movs	r0, #16
 800d48e:	e7fa      	b.n	800d486 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800d490:	4b05      	ldr	r3, [pc, #20]	; (800d4a8 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x3c>)
 800d492:	f240 2183 	movw	r1, #643	; 0x283
 800d496:	4a05      	ldr	r2, [pc, #20]	; (800d4ac <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x40>)
 800d498:	4805      	ldr	r0, [pc, #20]	; (800d4b0 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x44>)
 800d49a:	f012 fda1 	bl	801ffe0 <__assert_func>
 800d49e:	2008      	movs	r0, #8
 800d4a0:	e7f1      	b.n	800d486 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800d4a2:	2000      	movs	r0, #0
 800d4a4:	e7ef      	b.n	800d486 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800d4a6:	bf00      	nop
 800d4a8:	080234b2 	.word	0x080234b2
 800d4ac:	08023885 	.word	0x08023885
 800d4b0:	08023436 	.word	0x08023436

0800d4b4 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>:
 800d4b4:	b570      	push	{r4, r5, r6, lr}
 800d4b6:	460d      	mov	r5, r1
 800d4b8:	f89d 1014 	ldrb.w	r1, [sp, #20]
 800d4bc:	4616      	mov	r6, r2
 800d4be:	461c      	mov	r4, r3
 800d4c0:	f7ff ffd4 	bl	800d46c <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>
 800d4c4:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 800d4c8:	10c0      	asrs	r0, r0, #3
 800d4ca:	fb06 5101 	mla	r1, r6, r1, r5
 800d4ce:	fb00 4001 	mla	r0, r0, r1, r4
 800d4d2:	bd70      	pop	{r4, r5, r6, pc}

0800d4d4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800d4d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d4d8:	b08c      	sub	sp, #48	; 0x30
 800d4da:	f04f 0c00 	mov.w	ip, #0
 800d4de:	4604      	mov	r4, r0
 800d4e0:	469a      	mov	sl, r3
 800d4e2:	f89d 506c 	ldrb.w	r5, [sp, #108]	; 0x6c
 800d4e6:	f8bd 7054 	ldrh.w	r7, [sp, #84]	; 0x54
 800d4ea:	2d0b      	cmp	r5, #11
 800d4ec:	f8bd 6058 	ldrh.w	r6, [sp, #88]	; 0x58
 800d4f0:	f89d 3060 	ldrb.w	r3, [sp, #96]	; 0x60
 800d4f4:	f89d 0064 	ldrb.w	r0, [sp, #100]	; 0x64
 800d4f8:	f8bd 9068 	ldrh.w	r9, [sp, #104]	; 0x68
 800d4fc:	f89d 8070 	ldrb.w	r8, [sp, #112]	; 0x70
 800d500:	f8cd c018 	str.w	ip, [sp, #24]
 800d504:	d130      	bne.n	800d568 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x94>
 800d506:	2080      	movs	r0, #128	; 0x80
 800d508:	9205      	str	r2, [sp, #20]
 800d50a:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 800d50e:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800d512:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 800d516:	f8ad 7020 	strh.w	r7, [sp, #32]
 800d51a:	f8ad 6022 	strh.w	r6, [sp, #34]	; 0x22
 800d51e:	e9cd 0103 	strd	r0, r1, [sp, #12]
 800d522:	4620      	mov	r0, r4
 800d524:	f7ff fee8 	bl	800d2f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800d528:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 800d52c:	4603      	mov	r3, r0
 800d52e:	4651      	mov	r1, sl
 800d530:	4620      	mov	r0, r4
 800d532:	e9cd 9800 	strd	r9, r8, [sp]
 800d536:	f7ff ffbd 	bl	800d4b4 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800d53a:	f89d 3074 	ldrb.w	r3, [sp, #116]	; 0x74
 800d53e:	9007      	str	r0, [sp, #28]
 800d540:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 800d544:	2300      	movs	r3, #0
 800d546:	f8ad 9026 	strh.w	r9, [sp, #38]	; 0x26
 800d54a:	f88d 5029 	strb.w	r5, [sp, #41]	; 0x29
 800d54e:	f88d 802a 	strb.w	r8, [sp, #42]	; 0x2a
 800d552:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800d556:	b107      	cbz	r7, 800d55a <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x86>
 800d558:	b9d6      	cbnz	r6, 800d590 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbc>
 800d55a:	4b17      	ldr	r3, [pc, #92]	; (800d5b8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe4>)
 800d55c:	f240 11c9 	movw	r1, #457	; 0x1c9
 800d560:	4a16      	ldr	r2, [pc, #88]	; (800d5bc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe8>)
 800d562:	4817      	ldr	r0, [pc, #92]	; (800d5c0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xec>)
 800d564:	f012 fd3c 	bl	801ffe0 <__assert_func>
 800d568:	2d02      	cmp	r5, #2
 800d56a:	d108      	bne.n	800d57e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
 800d56c:	2bff      	cmp	r3, #255	; 0xff
 800d56e:	d104      	bne.n	800d57a <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xa6>
 800d570:	2800      	cmp	r0, #0
 800d572:	bf14      	ite	ne
 800d574:	2040      	movne	r0, #64	; 0x40
 800d576:	2020      	moveq	r0, #32
 800d578:	e7c6      	b.n	800d508 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 800d57a:	2040      	movs	r0, #64	; 0x40
 800d57c:	e7c4      	b.n	800d508 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 800d57e:	2bff      	cmp	r3, #255	; 0xff
 800d580:	d104      	bne.n	800d58c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb8>
 800d582:	2800      	cmp	r0, #0
 800d584:	bf14      	ite	ne
 800d586:	2004      	movne	r0, #4
 800d588:	2001      	moveq	r0, #1
 800d58a:	e7bd      	b.n	800d508 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 800d58c:	2004      	movs	r0, #4
 800d58e:	e7bb      	b.n	800d508 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 800d590:	6823      	ldr	r3, [r4, #0]
 800d592:	4620      	mov	r0, r4
 800d594:	9d03      	ldr	r5, [sp, #12]
 800d596:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d598:	4798      	blx	r3
 800d59a:	4228      	tst	r0, r5
 800d59c:	d104      	bne.n	800d5a8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xd4>
 800d59e:	4b09      	ldr	r3, [pc, #36]	; (800d5c4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xf0>)
 800d5a0:	f44f 71e5 	mov.w	r1, #458	; 0x1ca
 800d5a4:	4a05      	ldr	r2, [pc, #20]	; (800d5bc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe8>)
 800d5a6:	e7dc      	b.n	800d562 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x8e>
 800d5a8:	6860      	ldr	r0, [r4, #4]
 800d5aa:	a903      	add	r1, sp, #12
 800d5ac:	6803      	ldr	r3, [r0, #0]
 800d5ae:	685b      	ldr	r3, [r3, #4]
 800d5b0:	4798      	blx	r3
 800d5b2:	b00c      	add	sp, #48	; 0x30
 800d5b4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d5b8:	0802328b 	.word	0x0802328b
 800d5bc:	08023713 	.word	0x08023713
 800d5c0:	08023436 	.word	0x08023436
 800d5c4:	080232c3 	.word	0x080232c3

0800d5c8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800d5c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d5cc:	b08d      	sub	sp, #52	; 0x34
 800d5ce:	469b      	mov	fp, r3
 800d5d0:	2500      	movs	r5, #0
 800d5d2:	4604      	mov	r4, r0
 800d5d4:	f89d 7060 	ldrb.w	r7, [sp, #96]	; 0x60
 800d5d8:	4692      	mov	sl, r2
 800d5da:	f89d 6068 	ldrb.w	r6, [sp, #104]	; 0x68
 800d5de:	4689      	mov	r9, r1
 800d5e0:	2fff      	cmp	r7, #255	; 0xff
 800d5e2:	f8bd 8064 	ldrh.w	r8, [sp, #100]	; 0x64
 800d5e6:	9506      	str	r5, [sp, #24]
 800d5e8:	bf14      	ite	ne
 800d5ea:	2308      	movne	r3, #8
 800d5ec:	2302      	moveq	r3, #2
 800d5ee:	e9cd 3503 	strd	r3, r5, [sp, #12]
 800d5f2:	f7ff fe81 	bl	800d2f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800d5f6:	465a      	mov	r2, fp
 800d5f8:	4603      	mov	r3, r0
 800d5fa:	4651      	mov	r1, sl
 800d5fc:	4620      	mov	r0, r4
 800d5fe:	e9cd 8600 	strd	r8, r6, [sp]
 800d602:	f7ff ff57 	bl	800d4b4 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800d606:	f8bd 3058 	ldrh.w	r3, [sp, #88]	; 0x58
 800d60a:	f8ad 5024 	strh.w	r5, [sp, #36]	; 0x24
 800d60e:	f8ad 3020 	strh.w	r3, [sp, #32]
 800d612:	f8bd 305c 	ldrh.w	r3, [sp, #92]	; 0x5c
 800d616:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800d61a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800d61e:	f89d 306c 	ldrb.w	r3, [sp, #108]	; 0x6c
 800d622:	9d03      	ldr	r5, [sp, #12]
 800d624:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 800d628:	6823      	ldr	r3, [r4, #0]
 800d62a:	9007      	str	r0, [sp, #28]
 800d62c:	4620      	mov	r0, r4
 800d62e:	f8ad 8026 	strh.w	r8, [sp, #38]	; 0x26
 800d632:	f8cd 9018 	str.w	r9, [sp, #24]
 800d636:	f88d 7028 	strb.w	r7, [sp, #40]	; 0x28
 800d63a:	f88d 6029 	strb.w	r6, [sp, #41]	; 0x29
 800d63e:	f88d 602a 	strb.w	r6, [sp, #42]	; 0x2a
 800d642:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d644:	4798      	blx	r3
 800d646:	4228      	tst	r0, r5
 800d648:	d106      	bne.n	800d658 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x90>
 800d64a:	4b07      	ldr	r3, [pc, #28]	; (800d668 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0xa0>)
 800d64c:	f44f 710c 	mov.w	r1, #560	; 0x230
 800d650:	4a06      	ldr	r2, [pc, #24]	; (800d66c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0xa4>)
 800d652:	4807      	ldr	r0, [pc, #28]	; (800d670 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0xa8>)
 800d654:	f012 fcc4 	bl	801ffe0 <__assert_func>
 800d658:	6860      	ldr	r0, [r4, #4]
 800d65a:	a903      	add	r1, sp, #12
 800d65c:	6803      	ldr	r3, [r0, #0]
 800d65e:	685b      	ldr	r3, [r3, #4]
 800d660:	4798      	blx	r3
 800d662:	b00d      	add	sp, #52	; 0x34
 800d664:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d668:	080232c3 	.word	0x080232c3
 800d66c:	080237ea 	.word	0x080237ea
 800d670:	08023436 	.word	0x08023436

0800d674 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800d674:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800d678:	461f      	mov	r7, r3
 800d67a:	4b0b      	ldr	r3, [pc, #44]	; (800d6a8 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800d67c:	460d      	mov	r5, r1
 800d67e:	4616      	mov	r6, r2
 800d680:	f8b3 8000 	ldrh.w	r8, [r3]
 800d684:	4604      	mov	r4, r0
 800d686:	f7f5 fcdd 	bl	8003044 <_ZN8touchgfx3HAL3lcdEv>
 800d68a:	6803      	ldr	r3, [r0, #0]
 800d68c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d68e:	4798      	blx	r3
 800d690:	463b      	mov	r3, r7
 800d692:	4632      	mov	r2, r6
 800d694:	4629      	mov	r1, r5
 800d696:	e9cd 8000 	strd	r8, r0, [sp]
 800d69a:	4620      	mov	r0, r4
 800d69c:	f7ff ff0a 	bl	800d4b4 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800d6a0:	b002      	add	sp, #8
 800d6a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d6a6:	bf00      	nop
 800d6a8:	2400e0ae 	.word	0x2400e0ae

0800d6ac <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800d6ac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d6b0:	b08b      	sub	sp, #44	; 0x2c
 800d6b2:	4699      	mov	r9, r3
 800d6b4:	4690      	mov	r8, r2
 800d6b6:	4604      	mov	r4, r0
 800d6b8:	f8bd 305c 	ldrh.w	r3, [sp, #92]	; 0x5c
 800d6bc:	2500      	movs	r5, #0
 800d6be:	f8bd 7048 	ldrh.w	r7, [sp, #72]	; 0x48
 800d6c2:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800d6c6:	9504      	str	r5, [sp, #16]
 800d6c8:	f8ad 7018 	strh.w	r7, [sp, #24]
 800d6cc:	f8ad 601a 	strh.w	r6, [sp, #26]
 800d6d0:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800d6d4:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800d6d8:	f8ad 301c 	strh.w	r3, [sp, #28]
 800d6dc:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800d6e0:	f88d 3020 	strb.w	r3, [sp, #32]
 800d6e4:	f7ff fe08 	bl	800d2f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800d6e8:	464a      	mov	r2, r9
 800d6ea:	4603      	mov	r3, r0
 800d6ec:	4641      	mov	r1, r8
 800d6ee:	4620      	mov	r0, r4
 800d6f0:	f7ff ffc0 	bl	800d674 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800d6f4:	4b19      	ldr	r3, [pc, #100]	; (800d75c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb0>)
 800d6f6:	9005      	str	r0, [sp, #20]
 800d6f8:	881b      	ldrh	r3, [r3, #0]
 800d6fa:	f8ad 301e 	strh.w	r3, [sp, #30]
 800d6fe:	f7f5 fca1 	bl	8003044 <_ZN8touchgfx3HAL3lcdEv>
 800d702:	6803      	ldr	r3, [r0, #0]
 800d704:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d706:	4798      	blx	r3
 800d708:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 800d70c:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800d710:	b107      	cbz	r7, 800d714 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x68>
 800d712:	b936      	cbnz	r6, 800d722 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x76>
 800d714:	4b12      	ldr	r3, [pc, #72]	; (800d760 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb4>)
 800d716:	f44f 71f3 	mov.w	r1, #486	; 0x1e6
 800d71a:	4a12      	ldr	r2, [pc, #72]	; (800d764 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb8>)
 800d71c:	4812      	ldr	r0, [pc, #72]	; (800d768 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xbc>)
 800d71e:	f012 fc5f 	bl	801ffe0 <__assert_func>
 800d722:	6823      	ldr	r3, [r4, #0]
 800d724:	4620      	mov	r0, r4
 800d726:	9e01      	ldr	r6, [sp, #4]
 800d728:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d72a:	4798      	blx	r3
 800d72c:	4230      	tst	r0, r6
 800d72e:	d104      	bne.n	800d73a <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x8e>
 800d730:	4b0e      	ldr	r3, [pc, #56]	; (800d76c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xc0>)
 800d732:	f240 11e7 	movw	r1, #487	; 0x1e7
 800d736:	4a0b      	ldr	r2, [pc, #44]	; (800d764 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb8>)
 800d738:	e7f0      	b.n	800d71c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x70>
 800d73a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800d73c:	a901      	add	r1, sp, #4
 800d73e:	6860      	ldr	r0, [r4, #4]
 800d740:	9304      	str	r3, [sp, #16]
 800d742:	f89d 3060 	ldrb.w	r3, [sp, #96]	; 0x60
 800d746:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 800d74a:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800d74e:	6803      	ldr	r3, [r0, #0]
 800d750:	685b      	ldr	r3, [r3, #4]
 800d752:	4798      	blx	r3
 800d754:	b00b      	add	sp, #44	; 0x2c
 800d756:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d75a:	bf00      	nop
 800d75c:	2400e0ae 	.word	0x2400e0ae
 800d760:	0802328b 	.word	0x0802328b
 800d764:	080235bf 	.word	0x080235bf
 800d768:	08023436 	.word	0x08023436
 800d76c:	080232c3 	.word	0x080232c3

0800d770 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800d770:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d772:	b08d      	sub	sp, #52	; 0x34
 800d774:	4604      	mov	r4, r0
 800d776:	466b      	mov	r3, sp
 800d778:	e883 0006 	stmia.w	r3, {r1, r2}
 800d77c:	4b21      	ldr	r3, [pc, #132]	; (800d804 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x94>)
 800d77e:	781b      	ldrb	r3, [r3, #0]
 800d780:	b933      	cbnz	r3, 800d790 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x20>
 800d782:	4b21      	ldr	r3, [pc, #132]	; (800d808 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x98>)
 800d784:	f240 2141 	movw	r1, #577	; 0x241
 800d788:	4a20      	ldr	r2, [pc, #128]	; (800d80c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x9c>)
 800d78a:	4821      	ldr	r0, [pc, #132]	; (800d810 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0xa0>)
 800d78c:	f012 fc28 	bl	801ffe0 <__assert_func>
 800d790:	2300      	movs	r3, #0
 800d792:	2501      	movs	r5, #1
 800d794:	f8bd 6000 	ldrh.w	r6, [sp]
 800d798:	9306      	str	r3, [sp, #24]
 800d79a:	6803      	ldr	r3, [r0, #0]
 800d79c:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800d7a0:	9503      	str	r5, [sp, #12]
 800d7a2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800d7a4:	4798      	blx	r3
 800d7a6:	463a      	mov	r2, r7
 800d7a8:	4631      	mov	r1, r6
 800d7aa:	4603      	mov	r3, r0
 800d7ac:	4620      	mov	r0, r4
 800d7ae:	f7ff ff61 	bl	800d674 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800d7b2:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800d7b4:	9004      	str	r0, [sp, #16]
 800d7b6:	9307      	str	r3, [sp, #28]
 800d7b8:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800d7bc:	f8ad 3020 	strh.w	r3, [sp, #32]
 800d7c0:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800d7c4:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800d7c8:	4b12      	ldr	r3, [pc, #72]	; (800d814 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0xa4>)
 800d7ca:	881b      	ldrh	r3, [r3, #0]
 800d7cc:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800d7d0:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800d7d4:	f7f5 fc36 	bl	8003044 <_ZN8touchgfx3HAL3lcdEv>
 800d7d8:	6803      	ldr	r3, [r0, #0]
 800d7da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d7dc:	4798      	blx	r3
 800d7de:	23ff      	movs	r3, #255	; 0xff
 800d7e0:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800d7e4:	a903      	add	r1, sp, #12
 800d7e6:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800d7ea:	6860      	ldr	r0, [r4, #4]
 800d7ec:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800d7f0:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800d7f4:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800d7f8:	6803      	ldr	r3, [r0, #0]
 800d7fa:	685b      	ldr	r3, [r3, #4]
 800d7fc:	4798      	blx	r3
 800d7fe:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800d800:	b00d      	add	sp, #52	; 0x34
 800d802:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d804:	2400e0b3 	.word	0x2400e0b3
 800d808:	0802338a 	.word	0x0802338a
 800d80c:	08023669 	.word	0x08023669
 800d810:	08023436 	.word	0x08023436
 800d814:	2400e0ae 	.word	0x2400e0ae

0800d818 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800d818:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d81c:	b08c      	sub	sp, #48	; 0x30
 800d81e:	461e      	mov	r6, r3
 800d820:	2300      	movs	r3, #0
 800d822:	4604      	mov	r4, r0
 800d824:	466d      	mov	r5, sp
 800d826:	9306      	str	r3, [sp, #24]
 800d828:	6803      	ldr	r3, [r0, #0]
 800d82a:	e885 0006 	stmia.w	r5, {r1, r2}
 800d82e:	2501      	movs	r5, #1
 800d830:	f8bd 7000 	ldrh.w	r7, [sp]
 800d834:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800d838:	9503      	str	r5, [sp, #12]
 800d83a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800d83c:	4798      	blx	r3
 800d83e:	4642      	mov	r2, r8
 800d840:	4639      	mov	r1, r7
 800d842:	4603      	mov	r3, r0
 800d844:	4620      	mov	r0, r4
 800d846:	f7ff ff15 	bl	800d674 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800d84a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800d84e:	9004      	str	r0, [sp, #16]
 800d850:	f8ad 3020 	strh.w	r3, [sp, #32]
 800d854:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800d858:	9607      	str	r6, [sp, #28]
 800d85a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800d85e:	4b10      	ldr	r3, [pc, #64]	; (800d8a0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800d860:	881b      	ldrh	r3, [r3, #0]
 800d862:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800d866:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800d868:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800d86c:	f7f5 fbea 	bl	8003044 <_ZN8touchgfx3HAL3lcdEv>
 800d870:	6803      	ldr	r3, [r0, #0]
 800d872:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d874:	4798      	blx	r3
 800d876:	23ff      	movs	r3, #255	; 0xff
 800d878:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800d87c:	a903      	add	r1, sp, #12
 800d87e:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800d882:	6860      	ldr	r0, [r4, #4]
 800d884:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800d888:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800d88c:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800d890:	6803      	ldr	r3, [r0, #0]
 800d892:	685b      	ldr	r3, [r3, #4]
 800d894:	4798      	blx	r3
 800d896:	4630      	mov	r0, r6
 800d898:	b00c      	add	sp, #48	; 0x30
 800d89a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d89e:	bf00      	nop
 800d8a0:	2400e0ae 	.word	0x2400e0ae

0800d8a4 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800d8a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d8a6:	b085      	sub	sp, #20
 800d8a8:	4605      	mov	r5, r0
 800d8aa:	ac02      	add	r4, sp, #8
 800d8ac:	e884 0006 	stmia.w	r4, {r1, r2}
 800d8b0:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800d8b4:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800d8b8:	f7ff fd1e 	bl	800d2f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800d8bc:	4631      	mov	r1, r6
 800d8be:	4603      	mov	r3, r0
 800d8c0:	463a      	mov	r2, r7
 800d8c2:	4628      	mov	r0, r5
 800d8c4:	f7ff fed6 	bl	800d674 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800d8c8:	4a05      	ldr	r2, [pc, #20]	; (800d8e0 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800d8ca:	682b      	ldr	r3, [r5, #0]
 800d8cc:	8812      	ldrh	r2, [r2, #0]
 800d8ce:	9200      	str	r2, [sp, #0]
 800d8d0:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 800d8d2:	4603      	mov	r3, r0
 800d8d4:	4628      	mov	r0, r5
 800d8d6:	e894 0006 	ldmia.w	r4, {r1, r2}
 800d8da:	47b0      	blx	r6
 800d8dc:	b005      	add	sp, #20
 800d8de:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d8e0:	2400e0ae 	.word	0x2400e0ae

0800d8e4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800d8e4:	b570      	push	{r4, r5, r6, lr}
 800d8e6:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 800d8ea:	4604      	mov	r4, r0
 800d8ec:	b19b      	cbz	r3, 800d916 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800d8ee:	2002      	movs	r0, #2
 800d8f0:	f7f3 ff55 	bl	800179e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800d8f4:	2300      	movs	r3, #0
 800d8f6:	4620      	mov	r0, r4
 800d8f8:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800d8fc:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800d900:	6823      	ldr	r3, [r4, #0]
 800d902:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 800d906:	f7ff fcf7 	bl	800d2f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800d90a:	4601      	mov	r1, r0
 800d90c:	4620      	mov	r0, r4
 800d90e:	462b      	mov	r3, r5
 800d910:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d914:	4718      	bx	r3
 800d916:	bd70      	pop	{r4, r5, r6, pc}

0800d918 <_ZN8touchgfx3HAL12setMCUActiveEb>:
 800d918:	b570      	push	{r4, r5, r6, lr}
 800d91a:	4605      	mov	r5, r0
 800d91c:	460c      	mov	r4, r1
 800d91e:	2003      	movs	r0, #3
 800d920:	b149      	cbz	r1, 800d936 <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
 800d922:	f7f3 ff3a 	bl	800179a <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800d926:	6928      	ldr	r0, [r5, #16]
 800d928:	b168      	cbz	r0, 800d946 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800d92a:	6803      	ldr	r3, [r0, #0]
 800d92c:	2101      	movs	r1, #1
 800d92e:	695b      	ldr	r3, [r3, #20]
 800d930:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d934:	4718      	bx	r3
 800d936:	f7f3 ff31 	bl	800179c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800d93a:	6928      	ldr	r0, [r5, #16]
 800d93c:	b118      	cbz	r0, 800d946 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800d93e:	6803      	ldr	r3, [r0, #0]
 800d940:	4621      	mov	r1, r4
 800d942:	695b      	ldr	r3, [r3, #20]
 800d944:	e7f4      	b.n	800d930 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
 800d946:	bd70      	pop	{r4, r5, r6, pc}

0800d948 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800d948:	b538      	push	{r3, r4, r5, lr}
 800d94a:	f890 3078 	ldrb.w	r3, [r0, #120]	; 0x78
 800d94e:	4604      	mov	r4, r0
 800d950:	460d      	mov	r5, r1
 800d952:	428b      	cmp	r3, r1
 800d954:	d006      	beq.n	800d964 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800d956:	6803      	ldr	r3, [r0, #0]
 800d958:	b929      	cbnz	r1, 800d966 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800d95a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800d95e:	4798      	blx	r3
 800d960:	f884 5078 	strb.w	r5, [r4, #120]	; 0x78
 800d964:	bd38      	pop	{r3, r4, r5, pc}
 800d966:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 800d96a:	e7f8      	b.n	800d95e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800d96c <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800d96c:	4b0d      	ldr	r3, [pc, #52]	; (800d9a4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800d96e:	b510      	push	{r4, lr}
 800d970:	781b      	ldrb	r3, [r3, #0]
 800d972:	4604      	mov	r4, r0
 800d974:	b95b      	cbnz	r3, 800d98e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800d976:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800d97a:	2b02      	cmp	r3, #2
 800d97c:	d007      	beq.n	800d98e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800d97e:	6840      	ldr	r0, [r0, #4]
 800d980:	f000 f93c 	bl	800dbfc <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800d984:	b118      	cbz	r0, 800d98e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800d986:	6862      	ldr	r2, [r4, #4]
 800d988:	7a53      	ldrb	r3, [r2, #9]
 800d98a:	2b00      	cmp	r3, #0
 800d98c:	d0fc      	beq.n	800d988 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800d98e:	f7f4 fa07 	bl	8001da0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800d992:	4620      	mov	r0, r4
 800d994:	2100      	movs	r1, #0
 800d996:	f7ff ffd7 	bl	800d948 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800d99a:	4620      	mov	r0, r4
 800d99c:	f7ff fcac 	bl	800d2f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800d9a0:	bd10      	pop	{r4, pc}
 800d9a2:	bf00      	nop
 800d9a4:	2400e0b2 	.word	0x2400e0b2

0800d9a8 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800d9a8:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800d9ac:	1a13      	subs	r3, r2, r0
 800d9ae:	4258      	negs	r0, r3
 800d9b0:	4158      	adcs	r0, r3
 800d9b2:	4770      	bx	lr

0800d9b4 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800d9b4:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800d9b8:	1a9b      	subs	r3, r3, r2
 800d9ba:	2b00      	cmp	r3, #0
 800d9bc:	bfdc      	itt	le
 800d9be:	6882      	ldrle	r2, [r0, #8]
 800d9c0:	189b      	addle	r3, r3, r2
 800d9c2:	2b01      	cmp	r3, #1
 800d9c4:	bfcc      	ite	gt
 800d9c6:	2000      	movgt	r0, #0
 800d9c8:	2001      	movle	r0, #1
 800d9ca:	4770      	bx	lr

0800d9cc <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800d9cc:	6902      	ldr	r2, [r0, #16]
 800d9ce:	6843      	ldr	r3, [r0, #4]
 800d9d0:	2024      	movs	r0, #36	; 0x24
 800d9d2:	fb00 3002 	mla	r0, r0, r2, r3
 800d9d6:	4770      	bx	lr

0800d9d8 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800d9d8:	6803      	ldr	r3, [r0, #0]
 800d9da:	691b      	ldr	r3, [r3, #16]
 800d9dc:	4718      	bx	r3

0800d9de <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800d9de:	4770      	bx	lr

0800d9e0 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800d9e0:	4770      	bx	lr

0800d9e2 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800d9e2:	4770      	bx	lr

0800d9e4 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800d9e4:	2301      	movs	r3, #1
 800d9e6:	b570      	push	{r4, r5, r6, lr}
 800d9e8:	7203      	strb	r3, [r0, #8]
 800d9ea:	4604      	mov	r4, r0
 800d9ec:	6840      	ldr	r0, [r0, #4]
 800d9ee:	6803      	ldr	r3, [r0, #0]
 800d9f0:	699b      	ldr	r3, [r3, #24]
 800d9f2:	4798      	blx	r3
 800d9f4:	6803      	ldr	r3, [r0, #0]
 800d9f6:	4605      	mov	r5, r0
 800d9f8:	2b40      	cmp	r3, #64	; 0x40
 800d9fa:	d039      	beq.n	800da70 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800d9fc:	d815      	bhi.n	800da2a <_ZN8touchgfx13DMA_Interface7executeEv+0x46>
 800d9fe:	2b04      	cmp	r3, #4
 800da00:	d022      	beq.n	800da48 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800da02:	d808      	bhi.n	800da16 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800da04:	2b01      	cmp	r3, #1
 800da06:	d033      	beq.n	800da70 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800da08:	2b02      	cmp	r3, #2
 800da0a:	d108      	bne.n	800da1e <_ZN8touchgfx13DMA_Interface7executeEv+0x3a>
 800da0c:	6823      	ldr	r3, [r4, #0]
 800da0e:	4620      	mov	r0, r4
 800da10:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800da12:	4798      	blx	r3
 800da14:	e025      	b.n	800da62 <_ZN8touchgfx13DMA_Interface7executeEv+0x7e>
 800da16:	2b08      	cmp	r3, #8
 800da18:	d01e      	beq.n	800da58 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>
 800da1a:	2b20      	cmp	r3, #32
 800da1c:	d028      	beq.n	800da70 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800da1e:	4b17      	ldr	r3, [pc, #92]	; (800da7c <_ZN8touchgfx13DMA_Interface7executeEv+0x98>)
 800da20:	2188      	movs	r1, #136	; 0x88
 800da22:	4a17      	ldr	r2, [pc, #92]	; (800da80 <_ZN8touchgfx13DMA_Interface7executeEv+0x9c>)
 800da24:	4817      	ldr	r0, [pc, #92]	; (800da84 <_ZN8touchgfx13DMA_Interface7executeEv+0xa0>)
 800da26:	f012 fadb 	bl	801ffe0 <__assert_func>
 800da2a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800da2e:	d01f      	beq.n	800da70 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800da30:	d804      	bhi.n	800da3c <_ZN8touchgfx13DMA_Interface7executeEv+0x58>
 800da32:	2b80      	cmp	r3, #128	; 0x80
 800da34:	d01c      	beq.n	800da70 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800da36:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800da3a:	e7ef      	b.n	800da1c <_ZN8touchgfx13DMA_Interface7executeEv+0x38>
 800da3c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800da40:	d016      	beq.n	800da70 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800da42:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800da46:	e7e0      	b.n	800da0a <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800da48:	6823      	ldr	r3, [r4, #0]
 800da4a:	7f01      	ldrb	r1, [r0, #28]
 800da4c:	4620      	mov	r0, r4
 800da4e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800da50:	4798      	blx	r3
 800da52:	6823      	ldr	r3, [r4, #0]
 800da54:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800da56:	e006      	b.n	800da66 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800da58:	6823      	ldr	r3, [r4, #0]
 800da5a:	7f01      	ldrb	r1, [r0, #28]
 800da5c:	4620      	mov	r0, r4
 800da5e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800da60:	4798      	blx	r3
 800da62:	6823      	ldr	r3, [r4, #0]
 800da64:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800da66:	4629      	mov	r1, r5
 800da68:	4620      	mov	r0, r4
 800da6a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800da6e:	4718      	bx	r3
 800da70:	6823      	ldr	r3, [r4, #0]
 800da72:	4620      	mov	r0, r4
 800da74:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800da76:	4798      	blx	r3
 800da78:	e7eb      	b.n	800da52 <_ZN8touchgfx13DMA_Interface7executeEv+0x6e>
 800da7a:	bf00      	nop
 800da7c:	080238ce 	.word	0x080238ce
 800da80:	08023990 	.word	0x08023990
 800da84:	080238f3 	.word	0x080238f3

0800da88 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800da88:	b570      	push	{r4, r5, r6, lr}
 800da8a:	4604      	mov	r4, r0
 800da8c:	460e      	mov	r6, r1
 800da8e:	6860      	ldr	r0, [r4, #4]
 800da90:	6803      	ldr	r3, [r0, #0]
 800da92:	685b      	ldr	r3, [r3, #4]
 800da94:	4798      	blx	r3
 800da96:	2800      	cmp	r0, #0
 800da98:	d1f9      	bne.n	800da8e <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800da9a:	4d0d      	ldr	r5, [pc, #52]	; (800dad0 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800da9c:	6828      	ldr	r0, [r5, #0]
 800da9e:	6803      	ldr	r3, [r0, #0]
 800daa0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800daa2:	4798      	blx	r3
 800daa4:	f7f4 f98a 	bl	8001dbc <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800daa8:	6828      	ldr	r0, [r5, #0]
 800daaa:	2101      	movs	r1, #1
 800daac:	f7ff ff4c 	bl	800d948 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800dab0:	6860      	ldr	r0, [r4, #4]
 800dab2:	4631      	mov	r1, r6
 800dab4:	6803      	ldr	r3, [r0, #0]
 800dab6:	689b      	ldr	r3, [r3, #8]
 800dab8:	4798      	blx	r3
 800daba:	6823      	ldr	r3, [r4, #0]
 800dabc:	4620      	mov	r0, r4
 800dabe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800dac0:	4798      	blx	r3
 800dac2:	6828      	ldr	r0, [r5, #0]
 800dac4:	6803      	ldr	r3, [r0, #0]
 800dac6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800daca:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800dacc:	4718      	bx	r3
 800dace:	bf00      	nop
 800dad0:	2400e0b4 	.word	0x2400e0b4

0800dad4 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800dad4:	b508      	push	{r3, lr}
 800dad6:	f7f4 f963 	bl	8001da0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800dada:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800dade:	f7f4 b967 	b.w	8001db0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800dae2 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800dae2:	b510      	push	{r4, lr}
 800dae4:	4604      	mov	r4, r0
 800dae6:	2114      	movs	r1, #20
 800dae8:	f012 f881 	bl	801fbee <_ZdlPvj>
 800daec:	4620      	mov	r0, r4
 800daee:	bd10      	pop	{r4, pc}

0800daf0 <_ZN8touchgfx13DMA_Interface5startEv>:
 800daf0:	b510      	push	{r4, lr}
 800daf2:	4604      	mov	r4, r0
 800daf4:	6840      	ldr	r0, [r0, #4]
 800daf6:	6803      	ldr	r3, [r0, #0]
 800daf8:	681b      	ldr	r3, [r3, #0]
 800dafa:	4798      	blx	r3
 800dafc:	b948      	cbnz	r0, 800db12 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800dafe:	7a63      	ldrb	r3, [r4, #9]
 800db00:	b13b      	cbz	r3, 800db12 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800db02:	7a23      	ldrb	r3, [r4, #8]
 800db04:	b92b      	cbnz	r3, 800db12 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800db06:	6823      	ldr	r3, [r4, #0]
 800db08:	4620      	mov	r0, r4
 800db0a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800db0c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800db10:	4718      	bx	r3
 800db12:	bd10      	pop	{r4, pc}

0800db14 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800db14:	b510      	push	{r4, lr}
 800db16:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800db1a:	1ad2      	subs	r2, r2, r3
 800db1c:	2a00      	cmp	r2, #0
 800db1e:	bfdc      	itt	le
 800db20:	6884      	ldrle	r4, [r0, #8]
 800db22:	1912      	addle	r2, r2, r4
 800db24:	2a01      	cmp	r2, #1
 800db26:	dd17      	ble.n	800db58 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x44>
 800db28:	6842      	ldr	r2, [r0, #4]
 800db2a:	2424      	movs	r4, #36	; 0x24
 800db2c:	fb04 2303 	mla	r3, r4, r3, r2
 800db30:	f101 0220 	add.w	r2, r1, #32
 800db34:	f851 4b04 	ldr.w	r4, [r1], #4
 800db38:	4291      	cmp	r1, r2
 800db3a:	f843 4b04 	str.w	r4, [r3], #4
 800db3e:	d1f9      	bne.n	800db34 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800db40:	780a      	ldrb	r2, [r1, #0]
 800db42:	701a      	strb	r2, [r3, #0]
 800db44:	68c3      	ldr	r3, [r0, #12]
 800db46:	6882      	ldr	r2, [r0, #8]
 800db48:	f3bf 8f5b 	dmb	ish
 800db4c:	3301      	adds	r3, #1
 800db4e:	429a      	cmp	r2, r3
 800db50:	bfd8      	it	le
 800db52:	1a9b      	suble	r3, r3, r2
 800db54:	60c3      	str	r3, [r0, #12]
 800db56:	bd10      	pop	{r4, pc}
 800db58:	4b02      	ldr	r3, [pc, #8]	; (800db64 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x50>)
 800db5a:	2136      	movs	r1, #54	; 0x36
 800db5c:	4a02      	ldr	r2, [pc, #8]	; (800db68 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x54>)
 800db5e:	4803      	ldr	r0, [pc, #12]	; (800db6c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x58>)
 800db60:	f012 fa3e 	bl	801ffe0 <__assert_func>
 800db64:	08023919 	.word	0x08023919
 800db68:	080239c0 	.word	0x080239c0
 800db6c:	080238f3 	.word	0x080238f3

0800db70 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800db70:	b510      	push	{r4, lr}
 800db72:	6803      	ldr	r3, [r0, #0]
 800db74:	4604      	mov	r4, r0
 800db76:	681b      	ldr	r3, [r3, #0]
 800db78:	4798      	blx	r3
 800db7a:	b128      	cbz	r0, 800db88 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x18>
 800db7c:	4b07      	ldr	r3, [pc, #28]	; (800db9c <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x2c>)
 800db7e:	213c      	movs	r1, #60	; 0x3c
 800db80:	4a07      	ldr	r2, [pc, #28]	; (800dba0 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x30>)
 800db82:	4808      	ldr	r0, [pc, #32]	; (800dba4 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x34>)
 800db84:	f012 fa2c 	bl	801ffe0 <__assert_func>
 800db88:	6923      	ldr	r3, [r4, #16]
 800db8a:	68a2      	ldr	r2, [r4, #8]
 800db8c:	f3bf 8f5b 	dmb	ish
 800db90:	3301      	adds	r3, #1
 800db92:	429a      	cmp	r2, r3
 800db94:	bfd8      	it	le
 800db96:	1a9b      	suble	r3, r3, r2
 800db98:	6123      	str	r3, [r4, #16]
 800db9a:	bd10      	pop	{r4, pc}
 800db9c:	0802393c 	.word	0x0802393c
 800dba0:	08023a0e 	.word	0x08023a0e
 800dba4:	080238f3 	.word	0x080238f3

0800dba8 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800dba8:	b570      	push	{r4, r5, r6, lr}
 800dbaa:	4604      	mov	r4, r0
 800dbac:	6840      	ldr	r0, [r0, #4]
 800dbae:	6803      	ldr	r3, [r0, #0]
 800dbb0:	681b      	ldr	r3, [r3, #0]
 800dbb2:	4798      	blx	r3
 800dbb4:	4605      	mov	r5, r0
 800dbb6:	b930      	cbnz	r0, 800dbc6 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800dbb8:	7a23      	ldrb	r3, [r4, #8]
 800dbba:	b123      	cbz	r3, 800dbc6 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800dbbc:	6860      	ldr	r0, [r4, #4]
 800dbbe:	6803      	ldr	r3, [r0, #0]
 800dbc0:	695b      	ldr	r3, [r3, #20]
 800dbc2:	4798      	blx	r3
 800dbc4:	7225      	strb	r5, [r4, #8]
 800dbc6:	6860      	ldr	r0, [r4, #4]
 800dbc8:	6803      	ldr	r3, [r0, #0]
 800dbca:	681b      	ldr	r3, [r3, #0]
 800dbcc:	4798      	blx	r3
 800dbce:	b928      	cbnz	r0, 800dbdc <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800dbd0:	6823      	ldr	r3, [r4, #0]
 800dbd2:	4620      	mov	r0, r4
 800dbd4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800dbd6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800dbda:	4718      	bx	r3
 800dbdc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800dbe0:	f7f4 b8f4 	b.w	8001dcc <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800dbe4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800dbe4:	b510      	push	{r4, lr}
 800dbe6:	6082      	str	r2, [r0, #8]
 800dbe8:	2200      	movs	r2, #0
 800dbea:	4c03      	ldr	r4, [pc, #12]	; (800dbf8 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800dbec:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800dbf0:	e9c0 4100 	strd	r4, r1, [r0]
 800dbf4:	bd10      	pop	{r4, pc}
 800dbf6:	bf00      	nop
 800dbf8:	08023974 	.word	0x08023974

0800dbfc <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800dbfc:	6840      	ldr	r0, [r0, #4]
 800dbfe:	6803      	ldr	r3, [r0, #0]
 800dc00:	681b      	ldr	r3, [r3, #0]
 800dc02:	4718      	bx	r3

0800dc04 <_ZN8touchgfx21AbstractPainterRGB88810renderInitEv>:
 800dc04:	2001      	movs	r0, #1
 800dc06:	4770      	bx	lr

0800dc08 <_ZN8touchgfx21AbstractPainterRGB88810renderNextERhS1_S1_S1_>:
 800dc08:	2000      	movs	r0, #0
 800dc0a:	4770      	bx	lr

0800dc0c <_ZN8touchgfx21AbstractPainterRGB8886renderEPhiiijPKh>:
 800dc0c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800dc10:	460d      	mov	r5, r1
 800dc12:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 800dc16:	b085      	sub	sp, #20
 800dc18:	4690      	mov	r8, r2
 800dc1a:	4411      	add	r1, r2
 800dc1c:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800dc20:	4699      	mov	r9, r3
 800dc22:	6803      	ldr	r3, [r0, #0]
 800dc24:	60c1      	str	r1, [r0, #12]
 800dc26:	4604      	mov	r4, r0
 800dc28:	990c      	ldr	r1, [sp, #48]	; 0x30
 800dc2a:	440a      	add	r2, r1
 800dc2c:	6102      	str	r2, [r0, #16]
 800dc2e:	68db      	ldr	r3, [r3, #12]
 800dc30:	e9dd 670d 	ldrd	r6, r7, [sp, #52]	; 0x34
 800dc34:	4798      	blx	r3
 800dc36:	2800      	cmp	r0, #0
 800dc38:	d03a      	beq.n	800dcb0 <_ZN8touchgfx21AbstractPainterRGB8886renderEPhiiijPKh+0xa4>
 800dc3a:	44c8      	add	r8, r9
 800dc3c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 800dc40:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 800dc44:	4445      	add	r5, r8
 800dc46:	442e      	add	r6, r5
 800dc48:	6823      	ldr	r3, [r4, #0]
 800dc4a:	f10d 020f 	add.w	r2, sp, #15
 800dc4e:	a903      	add	r1, sp, #12
 800dc50:	4620      	mov	r0, r4
 800dc52:	9200      	str	r2, [sp, #0]
 800dc54:	f10d 020d 	add.w	r2, sp, #13
 800dc58:	f8d3 8010 	ldr.w	r8, [r3, #16]
 800dc5c:	f10d 030e 	add.w	r3, sp, #14
 800dc60:	47c0      	blx	r8
 800dc62:	b1f0      	cbz	r0, 800dca2 <_ZN8touchgfx21AbstractPainterRGB8886renderEPhiiijPKh+0x96>
 800dc64:	f89d 300f 	ldrb.w	r3, [sp, #15]
 800dc68:	7a20      	ldrb	r0, [r4, #8]
 800dc6a:	f89d 200c 	ldrb.w	r2, [sp, #12]
 800dc6e:	4358      	muls	r0, r3
 800dc70:	f89d 100e 	ldrb.w	r1, [sp, #14]
 800dc74:	1c43      	adds	r3, r0, #1
 800dc76:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 800dc7a:	7838      	ldrb	r0, [r7, #0]
 800dc7c:	121b      	asrs	r3, r3, #8
 800dc7e:	fb10 f003 	smulbb	r0, r0, r3
 800dc82:	b283      	uxth	r3, r0
 800dc84:	1c58      	adds	r0, r3, #1
 800dc86:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 800dc8a:	6823      	ldr	r3, [r4, #0]
 800dc8c:	1200      	asrs	r0, r0, #8
 800dc8e:	f8d3 8014 	ldr.w	r8, [r3, #20]
 800dc92:	f89d 300d 	ldrb.w	r3, [sp, #13]
 800dc96:	28ff      	cmp	r0, #255	; 0xff
 800dc98:	d10d      	bne.n	800dcb6 <_ZN8touchgfx21AbstractPainterRGB8886renderEPhiiijPKh+0xaa>
 800dc9a:	9100      	str	r1, [sp, #0]
 800dc9c:	4629      	mov	r1, r5
 800dc9e:	4620      	mov	r0, r4
 800dca0:	47c0      	blx	r8
 800dca2:	68e3      	ldr	r3, [r4, #12]
 800dca4:	3503      	adds	r5, #3
 800dca6:	3701      	adds	r7, #1
 800dca8:	3301      	adds	r3, #1
 800dcaa:	42ae      	cmp	r6, r5
 800dcac:	60e3      	str	r3, [r4, #12]
 800dcae:	d8cb      	bhi.n	800dc48 <_ZN8touchgfx21AbstractPainterRGB8886renderEPhiiijPKh+0x3c>
 800dcb0:	b005      	add	sp, #20
 800dcb2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800dcb6:	fa1f fc80 	uxth.w	ip, r0
 800dcba:	43c0      	mvns	r0, r0
 800dcbc:	f895 e002 	ldrb.w	lr, [r5, #2]
 800dcc0:	fb12 f20c 	smulbb	r2, r2, ip
 800dcc4:	b2c0      	uxtb	r0, r0
 800dcc6:	fb13 f30c 	smulbb	r3, r3, ip
 800dcca:	fb0e 2200 	mla	r2, lr, r0, r2
 800dcce:	f895 e001 	ldrb.w	lr, [r5, #1]
 800dcd2:	fb11 f10c 	smulbb	r1, r1, ip
 800dcd6:	fb0e 3300 	mla	r3, lr, r0, r3
 800dcda:	f895 e000 	ldrb.w	lr, [r5]
 800dcde:	b292      	uxth	r2, r2
 800dce0:	b29b      	uxth	r3, r3
 800dce2:	fb0e 1000 	mla	r0, lr, r0, r1
 800dce6:	1c59      	adds	r1, r3, #1
 800dce8:	b280      	uxth	r0, r0
 800dcea:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 800dcee:	1c51      	adds	r1, r2, #1
 800dcf0:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 800dcf4:	1c41      	adds	r1, r0, #1
 800dcf6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 800dcfa:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 800dcfe:	f3c2 2207 	ubfx	r2, r2, #8, #8
 800dd02:	f3c0 2007 	ubfx	r0, r0, #8, #8
 800dd06:	9000      	str	r0, [sp, #0]
 800dd08:	e7c8      	b.n	800dc9c <_ZN8touchgfx21AbstractPainterRGB8886renderEPhiiijPKh+0x90>

0800dd0a <_ZN8touchgfx21AbstractPainterRGB88811renderPixelEPthhh>:
 800dd0a:	f89d 0000 	ldrb.w	r0, [sp]
 800dd0e:	704b      	strb	r3, [r1, #1]
 800dd10:	7008      	strb	r0, [r1, #0]
 800dd12:	708a      	strb	r2, [r1, #2]
 800dd14:	4770      	bx	lr

0800dd16 <_ZN8touchgfx21AbstractPainterRGB888D1Ev>:
 800dd16:	4770      	bx	lr

0800dd18 <_ZN8touchgfx21AbstractPainterRGB888D0Ev>:
 800dd18:	b510      	push	{r4, lr}
 800dd1a:	4604      	mov	r4, r0
 800dd1c:	2114      	movs	r1, #20
 800dd1e:	f011 ff66 	bl	801fbee <_ZdlPvj>
 800dd22:	4620      	mov	r0, r4
 800dd24:	bd10      	pop	{r4, pc}

0800dd26 <_ZN8touchgfx19PainterRGB888Bitmap9setOffsetEss>:
 800dd26:	84c1      	strh	r1, [r0, #38]	; 0x26
 800dd28:	8502      	strh	r2, [r0, #40]	; 0x28
 800dd2a:	4770      	bx	lr

0800dd2c <_ZN8touchgfx19PainterRGB888Bitmap8setTiledEb>:
 800dd2c:	f880 102a 	strb.w	r1, [r0, #42]	; 0x2a
 800dd30:	4770      	bx	lr

0800dd32 <_ZN8touchgfx19PainterRGB888BitmapD1Ev>:
 800dd32:	4770      	bx	lr

0800dd34 <_ZN8touchgfx19PainterRGB888Bitmap6renderEPhiiijPKh>:
 800dd34:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800dd38:	4413      	add	r3, r2
 800dd3a:	4604      	mov	r4, r0
 800dd3c:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 800dd40:	18cd      	adds	r5, r1, r3
 800dd42:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800dd46:	9908      	ldr	r1, [sp, #32]
 800dd48:	441a      	add	r2, r3
 800dd4a:	f9b0 3026 	ldrsh.w	r3, [r0, #38]	; 0x26
 800dd4e:	441a      	add	r2, r3
 800dd50:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800dd54:	440b      	add	r3, r1
 800dd56:	f9b0 1028 	ldrsh.w	r1, [r0, #40]	; 0x28
 800dd5a:	60c2      	str	r2, [r0, #12]
 800dd5c:	440b      	add	r3, r1
 800dd5e:	6103      	str	r3, [r0, #16]
 800dd60:	f890 302a 	ldrb.w	r3, [r0, #42]	; 0x2a
 800dd64:	e9dd 7809 	ldrd	r7, r8, [sp, #36]	; 0x24
 800dd68:	b95b      	cbnz	r3, 800dd82 <_ZN8touchgfx19PainterRGB888Bitmap6renderEPhiiijPKh+0x4e>
 800dd6a:	2a00      	cmp	r2, #0
 800dd6c:	da09      	bge.n	800dd82 <_ZN8touchgfx19PainterRGB888Bitmap6renderEPhiiijPKh+0x4e>
 800dd6e:	4251      	negs	r1, r2
 800dd70:	42b9      	cmp	r1, r7
 800dd72:	d852      	bhi.n	800de1a <_ZN8touchgfx19PainterRGB888Bitmap6renderEPhiiijPKh+0xe6>
 800dd74:	4417      	add	r7, r2
 800dd76:	eba8 0802 	sub.w	r8, r8, r2
 800dd7a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800dd7e:	60c3      	str	r3, [r0, #12]
 800dd80:	1aad      	subs	r5, r5, r2
 800dd82:	6823      	ldr	r3, [r4, #0]
 800dd84:	4620      	mov	r0, r4
 800dd86:	68db      	ldr	r3, [r3, #12]
 800dd88:	4798      	blx	r3
 800dd8a:	2800      	cmp	r0, #0
 800dd8c:	d045      	beq.n	800de1a <_ZN8touchgfx19PainterRGB888Bitmap6renderEPhiiijPKh+0xe6>
 800dd8e:	68e3      	ldr	r3, [r4, #12]
 800dd90:	f9b4 2022 	ldrsh.w	r2, [r4, #34]	; 0x22
 800dd94:	f894 102a 	ldrb.w	r1, [r4, #42]	; 0x2a
 800dd98:	1ad6      	subs	r6, r2, r3
 800dd9a:	b919      	cbnz	r1, 800dda4 <_ZN8touchgfx19PainterRGB888Bitmap6renderEPhiiijPKh+0x70>
 800dd9c:	443b      	add	r3, r7
 800dd9e:	4293      	cmp	r3, r2
 800dda0:	bfc8      	it	gt
 800dda2:	4637      	movgt	r7, r6
 800dda4:	eb07 0947 	add.w	r9, r7, r7, lsl #1
 800dda8:	69a3      	ldr	r3, [r4, #24]
 800ddaa:	44a9      	add	r9, r5
 800ddac:	2b00      	cmp	r3, #0
 800ddae:	f000 80ce 	beq.w	800df4e <_ZN8touchgfx19PainterRGB888Bitmap6renderEPhiiijPKh+0x21a>
 800ddb2:	f104 001c 	add.w	r0, r4, #28
 800ddb6:	f007 f9a7 	bl	8015108 <_ZNK8touchgfx6Bitmap7getDataEv>
 800ddba:	f9b4 2022 	ldrsh.w	r2, [r4, #34]	; 0x22
 800ddbe:	6923      	ldr	r3, [r4, #16]
 800ddc0:	4353      	muls	r3, r2
 800ddc2:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 800ddc6:	4418      	add	r0, r3
 800ddc8:	7a23      	ldrb	r3, [r4, #8]
 800ddca:	2bff      	cmp	r3, #255	; 0xff
 800ddcc:	d15b      	bne.n	800de86 <_ZN8touchgfx19PainterRGB888Bitmap6renderEPhiiijPKh+0x152>
 800ddce:	42be      	cmp	r6, r7
 800ddd0:	bf28      	it	cs
 800ddd2:	463e      	movcs	r6, r7
 800ddd4:	eb06 0c46 	add.w	ip, r6, r6, lsl #1
 800ddd8:	1bbf      	subs	r7, r7, r6
 800ddda:	44ac      	add	ip, r5
 800dddc:	f818 3b01 	ldrb.w	r3, [r8], #1
 800dde0:	3503      	adds	r5, #3
 800dde2:	69a1      	ldr	r1, [r4, #24]
 800dde4:	2bff      	cmp	r3, #255	; 0xff
 800dde6:	f101 0201 	add.w	r2, r1, #1
 800ddea:	61a2      	str	r2, [r4, #24]
 800ddec:	d117      	bne.n	800de1e <_ZN8touchgfx19PainterRGB888Bitmap6renderEPhiiijPKh+0xea>
 800ddee:	780b      	ldrb	r3, [r1, #0]
 800ddf0:	f805 3c03 	strb.w	r3, [r5, #-3]
 800ddf4:	69a3      	ldr	r3, [r4, #24]
 800ddf6:	1c5a      	adds	r2, r3, #1
 800ddf8:	61a2      	str	r2, [r4, #24]
 800ddfa:	781b      	ldrb	r3, [r3, #0]
 800ddfc:	f805 3c02 	strb.w	r3, [r5, #-2]
 800de00:	69a3      	ldr	r3, [r4, #24]
 800de02:	1c5a      	adds	r2, r3, #1
 800de04:	61a2      	str	r2, [r4, #24]
 800de06:	781b      	ldrb	r3, [r3, #0]
 800de08:	f805 3c01 	strb.w	r3, [r5, #-1]
 800de0c:	45ac      	cmp	ip, r5
 800de0e:	d8e5      	bhi.n	800dddc <_ZN8touchgfx19PainterRGB888Bitmap6renderEPhiiijPKh+0xa8>
 800de10:	45a9      	cmp	r9, r5
 800de12:	61a0      	str	r0, [r4, #24]
 800de14:	f9b4 6022 	ldrsh.w	r6, [r4, #34]	; 0x22
 800de18:	d8d9      	bhi.n	800ddce <_ZN8touchgfx19PainterRGB888Bitmap6renderEPhiiijPKh+0x9a>
 800de1a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800de1e:	b29a      	uxth	r2, r3
 800de20:	43db      	mvns	r3, r3
 800de22:	f815 6c03 	ldrb.w	r6, [r5, #-3]
 800de26:	b2db      	uxtb	r3, r3
 800de28:	7809      	ldrb	r1, [r1, #0]
 800de2a:	fb16 f603 	smulbb	r6, r6, r3
 800de2e:	fb01 6102 	mla	r1, r1, r2, r6
 800de32:	b289      	uxth	r1, r1
 800de34:	1c4e      	adds	r6, r1, #1
 800de36:	eb06 2111 	add.w	r1, r6, r1, lsr #8
 800de3a:	1209      	asrs	r1, r1, #8
 800de3c:	f805 1c03 	strb.w	r1, [r5, #-3]
 800de40:	69a1      	ldr	r1, [r4, #24]
 800de42:	1c4e      	adds	r6, r1, #1
 800de44:	61a6      	str	r6, [r4, #24]
 800de46:	f815 6c02 	ldrb.w	r6, [r5, #-2]
 800de4a:	7809      	ldrb	r1, [r1, #0]
 800de4c:	fb16 f603 	smulbb	r6, r6, r3
 800de50:	fb01 6102 	mla	r1, r1, r2, r6
 800de54:	b289      	uxth	r1, r1
 800de56:	1c4e      	adds	r6, r1, #1
 800de58:	eb06 2111 	add.w	r1, r6, r1, lsr #8
 800de5c:	1209      	asrs	r1, r1, #8
 800de5e:	f805 1c02 	strb.w	r1, [r5, #-2]
 800de62:	69a1      	ldr	r1, [r4, #24]
 800de64:	1c4e      	adds	r6, r1, #1
 800de66:	61a6      	str	r6, [r4, #24]
 800de68:	780e      	ldrb	r6, [r1, #0]
 800de6a:	f815 1c01 	ldrb.w	r1, [r5, #-1]
 800de6e:	fb11 f303 	smulbb	r3, r1, r3
 800de72:	fb06 3202 	mla	r2, r6, r2, r3
 800de76:	b292      	uxth	r2, r2
 800de78:	1c53      	adds	r3, r2, #1
 800de7a:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 800de7e:	1212      	asrs	r2, r2, #8
 800de80:	f805 2c01 	strb.w	r2, [r5, #-1]
 800de84:	e7c2      	b.n	800de0c <_ZN8touchgfx19PainterRGB888Bitmap6renderEPhiiijPKh+0xd8>
 800de86:	42be      	cmp	r6, r7
 800de88:	f105 0c03 	add.w	ip, r5, #3
 800de8c:	bf28      	it	cs
 800de8e:	463e      	movcs	r6, r7
 800de90:	eb06 0146 	add.w	r1, r6, r6, lsl #1
 800de94:	1bbf      	subs	r7, r7, r6
 800de96:	4429      	add	r1, r5
 800de98:	f818 2b01 	ldrb.w	r2, [r8], #1
 800de9c:	4665      	mov	r5, ip
 800de9e:	7a23      	ldrb	r3, [r4, #8]
 800dea0:	f8d4 e018 	ldr.w	lr, [r4, #24]
 800dea4:	42a9      	cmp	r1, r5
 800dea6:	fb02 f303 	mul.w	r3, r2, r3
 800deaa:	f103 0201 	add.w	r2, r3, #1
 800deae:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 800deb2:	f10e 0301 	add.w	r3, lr, #1
 800deb6:	ea4f 2222 	mov.w	r2, r2, asr #8
 800deba:	61a3      	str	r3, [r4, #24]
 800debc:	f81c cc03 	ldrb.w	ip, [ip, #-3]
 800dec0:	b296      	uxth	r6, r2
 800dec2:	ea6f 0202 	mvn.w	r2, r2
 800dec6:	b2d3      	uxtb	r3, r2
 800dec8:	f89e 2000 	ldrb.w	r2, [lr]
 800decc:	fb1c fc03 	smulbb	ip, ip, r3
 800ded0:	fb02 c206 	mla	r2, r2, r6, ip
 800ded4:	b292      	uxth	r2, r2
 800ded6:	f102 0c01 	add.w	ip, r2, #1
 800deda:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 800dede:	ea4f 2222 	mov.w	r2, r2, asr #8
 800dee2:	f805 2c03 	strb.w	r2, [r5, #-3]
 800dee6:	69a2      	ldr	r2, [r4, #24]
 800dee8:	f102 0c01 	add.w	ip, r2, #1
 800deec:	f8c4 c018 	str.w	ip, [r4, #24]
 800def0:	f815 cc02 	ldrb.w	ip, [r5, #-2]
 800def4:	7812      	ldrb	r2, [r2, #0]
 800def6:	fb1c fc03 	smulbb	ip, ip, r3
 800defa:	fb02 c206 	mla	r2, r2, r6, ip
 800defe:	b292      	uxth	r2, r2
 800df00:	f102 0c01 	add.w	ip, r2, #1
 800df04:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 800df08:	ea4f 2222 	mov.w	r2, r2, asr #8
 800df0c:	f805 2c02 	strb.w	r2, [r5, #-2]
 800df10:	69a2      	ldr	r2, [r4, #24]
 800df12:	f102 0c01 	add.w	ip, r2, #1
 800df16:	f8c4 c018 	str.w	ip, [r4, #24]
 800df1a:	f892 c000 	ldrb.w	ip, [r2]
 800df1e:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 800df22:	fb12 f303 	smulbb	r3, r2, r3
 800df26:	fb0c 3306 	mla	r3, ip, r6, r3
 800df2a:	f105 0c03 	add.w	ip, r5, #3
 800df2e:	b29b      	uxth	r3, r3
 800df30:	f103 0201 	add.w	r2, r3, #1
 800df34:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 800df38:	ea4f 2323 	mov.w	r3, r3, asr #8
 800df3c:	f805 3c01 	strb.w	r3, [r5, #-1]
 800df40:	d8aa      	bhi.n	800de98 <_ZN8touchgfx19PainterRGB888Bitmap6renderEPhiiijPKh+0x164>
 800df42:	45a9      	cmp	r9, r5
 800df44:	61a0      	str	r0, [r4, #24]
 800df46:	f9b4 6022 	ldrsh.w	r6, [r4, #34]	; 0x22
 800df4a:	d89c      	bhi.n	800de86 <_ZN8touchgfx19PainterRGB888Bitmap6renderEPhiiijPKh+0x152>
 800df4c:	e765      	b.n	800de1a <_ZN8touchgfx19PainterRGB888Bitmap6renderEPhiiijPKh+0xe6>
 800df4e:	6963      	ldr	r3, [r4, #20]
 800df50:	2b00      	cmp	r3, #0
 800df52:	f43f af62 	beq.w	800de1a <_ZN8touchgfx19PainterRGB888Bitmap6renderEPhiiijPKh+0xe6>
 800df56:	f104 001c 	add.w	r0, r4, #28
 800df5a:	f007 f8d5 	bl	8015108 <_ZNK8touchgfx6Bitmap7getDataEv>
 800df5e:	f9b4 2022 	ldrsh.w	r2, [r4, #34]	; 0x22
 800df62:	6923      	ldr	r3, [r4, #16]
 800df64:	4353      	muls	r3, r2
 800df66:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800df6a:	7a23      	ldrb	r3, [r4, #8]
 800df6c:	2bff      	cmp	r3, #255	; 0xff
 800df6e:	d15a      	bne.n	800e026 <_ZN8touchgfx19PainterRGB888Bitmap6renderEPhiiijPKh+0x2f2>
 800df70:	42be      	cmp	r6, r7
 800df72:	bf28      	it	cs
 800df74:	463e      	movcs	r6, r7
 800df76:	eb06 0146 	add.w	r1, r6, r6, lsl #1
 800df7a:	1bbf      	subs	r7, r7, r6
 800df7c:	4429      	add	r1, r5
 800df7e:	6963      	ldr	r3, [r4, #20]
 800df80:	3503      	adds	r5, #3
 800df82:	681a      	ldr	r2, [r3, #0]
 800df84:	f818 3b01 	ldrb.w	r3, [r8], #1
 800df88:	0e16      	lsrs	r6, r2, #24
 800df8a:	b2d2      	uxtb	r2, r2
 800df8c:	435e      	muls	r6, r3
 800df8e:	1c73      	adds	r3, r6, #1
 800df90:	eb03 2326 	add.w	r3, r3, r6, asr #8
 800df94:	121b      	asrs	r3, r3, #8
 800df96:	2bff      	cmp	r3, #255	; 0xff
 800df98:	d116      	bne.n	800dfc8 <_ZN8touchgfx19PainterRGB888Bitmap6renderEPhiiijPKh+0x294>
 800df9a:	f805 2c03 	strb.w	r2, [r5, #-3]
 800df9e:	6963      	ldr	r3, [r4, #20]
 800dfa0:	681b      	ldr	r3, [r3, #0]
 800dfa2:	0a1b      	lsrs	r3, r3, #8
 800dfa4:	f805 3c02 	strb.w	r3, [r5, #-2]
 800dfa8:	6963      	ldr	r3, [r4, #20]
 800dfaa:	885b      	ldrh	r3, [r3, #2]
 800dfac:	f805 3c01 	strb.w	r3, [r5, #-1]
 800dfb0:	42a9      	cmp	r1, r5
 800dfb2:	6963      	ldr	r3, [r4, #20]
 800dfb4:	f103 0304 	add.w	r3, r3, #4
 800dfb8:	6163      	str	r3, [r4, #20]
 800dfba:	d8e0      	bhi.n	800df7e <_ZN8touchgfx19PainterRGB888Bitmap6renderEPhiiijPKh+0x24a>
 800dfbc:	45a9      	cmp	r9, r5
 800dfbe:	6160      	str	r0, [r4, #20]
 800dfc0:	f9b4 6022 	ldrsh.w	r6, [r4, #34]	; 0x22
 800dfc4:	d8d4      	bhi.n	800df70 <_ZN8touchgfx19PainterRGB888Bitmap6renderEPhiiijPKh+0x23c>
 800dfc6:	e728      	b.n	800de1a <_ZN8touchgfx19PainterRGB888Bitmap6renderEPhiiijPKh+0xe6>
 800dfc8:	b29e      	uxth	r6, r3
 800dfca:	43db      	mvns	r3, r3
 800dfcc:	f815 cc03 	ldrb.w	ip, [r5, #-3]
 800dfd0:	fb12 f206 	smulbb	r2, r2, r6
 800dfd4:	b2db      	uxtb	r3, r3
 800dfd6:	fb0c 2203 	mla	r2, ip, r3, r2
 800dfda:	b292      	uxth	r2, r2
 800dfdc:	f102 0c01 	add.w	ip, r2, #1
 800dfe0:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 800dfe4:	1212      	asrs	r2, r2, #8
 800dfe6:	f805 2c03 	strb.w	r2, [r5, #-3]
 800dfea:	6962      	ldr	r2, [r4, #20]
 800dfec:	7852      	ldrb	r2, [r2, #1]
 800dfee:	fb12 fc06 	smulbb	ip, r2, r6
 800dff2:	f815 2c02 	ldrb.w	r2, [r5, #-2]
 800dff6:	fb02 c203 	mla	r2, r2, r3, ip
 800dffa:	b292      	uxth	r2, r2
 800dffc:	f102 0c01 	add.w	ip, r2, #1
 800e000:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 800e004:	1212      	asrs	r2, r2, #8
 800e006:	f805 2c02 	strb.w	r2, [r5, #-2]
 800e00a:	6962      	ldr	r2, [r4, #20]
 800e00c:	7892      	ldrb	r2, [r2, #2]
 800e00e:	fb12 f606 	smulbb	r6, r2, r6
 800e012:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 800e016:	fb02 6303 	mla	r3, r2, r3, r6
 800e01a:	b29b      	uxth	r3, r3
 800e01c:	1c5a      	adds	r2, r3, #1
 800e01e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 800e022:	121b      	asrs	r3, r3, #8
 800e024:	e7c2      	b.n	800dfac <_ZN8touchgfx19PainterRGB888Bitmap6renderEPhiiijPKh+0x278>
 800e026:	42be      	cmp	r6, r7
 800e028:	f105 0203 	add.w	r2, r5, #3
 800e02c:	bf28      	it	cs
 800e02e:	463e      	movcs	r6, r7
 800e030:	eb06 0c46 	add.w	ip, r6, r6, lsl #1
 800e034:	1bbf      	subs	r7, r7, r6
 800e036:	44ac      	add	ip, r5
 800e038:	6963      	ldr	r3, [r4, #20]
 800e03a:	7a25      	ldrb	r5, [r4, #8]
 800e03c:	6819      	ldr	r1, [r3, #0]
 800e03e:	0e0b      	lsrs	r3, r1, #24
 800e040:	436b      	muls	r3, r5
 800e042:	1c5d      	adds	r5, r3, #1
 800e044:	eb05 2523 	add.w	r5, r5, r3, asr #8
 800e048:	f818 3b01 	ldrb.w	r3, [r8], #1
 800e04c:	122d      	asrs	r5, r5, #8
 800e04e:	fb13 f305 	smulbb	r3, r3, r5
 800e052:	b29d      	uxth	r5, r3
 800e054:	1c6b      	adds	r3, r5, #1
 800e056:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 800e05a:	121b      	asrs	r3, r3, #8
 800e05c:	d040      	beq.n	800e0e0 <_ZN8touchgfx19PainterRGB888Bitmap6renderEPhiiijPKh+0x3ac>
 800e05e:	b29e      	uxth	r6, r3
 800e060:	43db      	mvns	r3, r3
 800e062:	b2c9      	uxtb	r1, r1
 800e064:	f812 ec03 	ldrb.w	lr, [r2, #-3]
 800e068:	b2db      	uxtb	r3, r3
 800e06a:	4615      	mov	r5, r2
 800e06c:	fb11 f106 	smulbb	r1, r1, r6
 800e070:	fb0e 1103 	mla	r1, lr, r3, r1
 800e074:	b289      	uxth	r1, r1
 800e076:	f101 0e01 	add.w	lr, r1, #1
 800e07a:	eb0e 2111 	add.w	r1, lr, r1, lsr #8
 800e07e:	f812 ec02 	ldrb.w	lr, [r2, #-2]
 800e082:	fb1e fe03 	smulbb	lr, lr, r3
 800e086:	1209      	asrs	r1, r1, #8
 800e088:	f802 1c03 	strb.w	r1, [r2, #-3]
 800e08c:	6961      	ldr	r1, [r4, #20]
 800e08e:	7849      	ldrb	r1, [r1, #1]
 800e090:	fb01 e106 	mla	r1, r1, r6, lr
 800e094:	b289      	uxth	r1, r1
 800e096:	f101 0e01 	add.w	lr, r1, #1
 800e09a:	eb0e 2111 	add.w	r1, lr, r1, lsr #8
 800e09e:	1209      	asrs	r1, r1, #8
 800e0a0:	f802 1c02 	strb.w	r1, [r2, #-2]
 800e0a4:	6961      	ldr	r1, [r4, #20]
 800e0a6:	f891 e002 	ldrb.w	lr, [r1, #2]
 800e0aa:	f812 1c01 	ldrb.w	r1, [r2, #-1]
 800e0ae:	fb11 f303 	smulbb	r3, r1, r3
 800e0b2:	fb0e 3306 	mla	r3, lr, r6, r3
 800e0b6:	b29b      	uxth	r3, r3
 800e0b8:	1c59      	adds	r1, r3, #1
 800e0ba:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 800e0be:	121b      	asrs	r3, r3, #8
 800e0c0:	f802 3c01 	strb.w	r3, [r2, #-1]
 800e0c4:	6963      	ldr	r3, [r4, #20]
 800e0c6:	4565      	cmp	r5, ip
 800e0c8:	f102 0203 	add.w	r2, r2, #3
 800e0cc:	f103 0304 	add.w	r3, r3, #4
 800e0d0:	6163      	str	r3, [r4, #20]
 800e0d2:	d3b1      	bcc.n	800e038 <_ZN8touchgfx19PainterRGB888Bitmap6renderEPhiiijPKh+0x304>
 800e0d4:	454d      	cmp	r5, r9
 800e0d6:	6160      	str	r0, [r4, #20]
 800e0d8:	f9b4 6022 	ldrsh.w	r6, [r4, #34]	; 0x22
 800e0dc:	d3a3      	bcc.n	800e026 <_ZN8touchgfx19PainterRGB888Bitmap6renderEPhiiijPKh+0x2f2>
 800e0de:	e69c      	b.n	800de1a <_ZN8touchgfx19PainterRGB888Bitmap6renderEPhiiijPKh+0xe6>
 800e0e0:	4615      	mov	r5, r2
 800e0e2:	e7ef      	b.n	800e0c4 <_ZN8touchgfx19PainterRGB888Bitmap6renderEPhiiijPKh+0x390>

0800e0e4 <_ZN8touchgfx19PainterRGB888BitmapD0Ev>:
 800e0e4:	b510      	push	{r4, lr}
 800e0e6:	4604      	mov	r4, r0
 800e0e8:	212c      	movs	r1, #44	; 0x2c
 800e0ea:	f011 fd80 	bl	801fbee <_ZdlPvj>
 800e0ee:	4620      	mov	r0, r4
 800e0f0:	bd10      	pop	{r4, pc}

0800e0f2 <_ZN8touchgfx19PainterRGB888Bitmap10renderInitEv>:
 800e0f2:	b570      	push	{r4, r5, r6, lr}
 800e0f4:	2300      	movs	r3, #0
 800e0f6:	f100 061c 	add.w	r6, r0, #28
 800e0fa:	4604      	mov	r4, r0
 800e0fc:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800e100:	4630      	mov	r0, r6
 800e102:	f7f5 fe51 	bl	8003da8 <_ZNK8touchgfx6Bitmap5getIdEv>
 800e106:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800e10a:	4298      	cmp	r0, r3
 800e10c:	d101      	bne.n	800e112 <_ZN8touchgfx19PainterRGB888Bitmap10renderInitEv+0x20>
 800e10e:	2000      	movs	r0, #0
 800e110:	bd70      	pop	{r4, r5, r6, pc}
 800e112:	f894 202a 	ldrb.w	r2, [r4, #42]	; 0x2a
 800e116:	68e1      	ldr	r1, [r4, #12]
 800e118:	f9b4 3022 	ldrsh.w	r3, [r4, #34]	; 0x22
 800e11c:	b362      	cbz	r2, 800e178 <_ZN8touchgfx19PainterRGB888Bitmap10renderInitEv+0x86>
 800e11e:	fb91 f2f3 	sdiv	r2, r1, r3
 800e122:	fb03 1212 	mls	r2, r3, r2, r1
 800e126:	441a      	add	r2, r3
 800e128:	fb92 f1f3 	sdiv	r1, r2, r3
 800e12c:	fb03 2311 	mls	r3, r3, r1, r2
 800e130:	f9b4 2024 	ldrsh.w	r2, [r4, #36]	; 0x24
 800e134:	6921      	ldr	r1, [r4, #16]
 800e136:	60e3      	str	r3, [r4, #12]
 800e138:	fb91 f3f2 	sdiv	r3, r1, r2
 800e13c:	fb02 1313 	mls	r3, r2, r3, r1
 800e140:	4413      	add	r3, r2
 800e142:	fb93 f1f2 	sdiv	r1, r3, r2
 800e146:	fb02 3311 	mls	r3, r2, r1, r3
 800e14a:	6123      	str	r3, [r4, #16]
 800e14c:	4630      	mov	r0, r6
 800e14e:	f007 f865 	bl	801521c <_ZNK8touchgfx6Bitmap9getFormatEv>
 800e152:	2802      	cmp	r0, #2
 800e154:	4630      	mov	r0, r6
 800e156:	d119      	bne.n	800e18c <_ZN8touchgfx19PainterRGB888Bitmap10renderInitEv+0x9a>
 800e158:	f006 ffd6 	bl	8015108 <_ZNK8touchgfx6Bitmap7getDataEv>
 800e15c:	6160      	str	r0, [r4, #20]
 800e15e:	2800      	cmp	r0, #0
 800e160:	d0d5      	beq.n	800e10e <_ZN8touchgfx19PainterRGB888Bitmap10renderInitEv+0x1c>
 800e162:	f9b4 3022 	ldrsh.w	r3, [r4, #34]	; 0x22
 800e166:	e9d4 2103 	ldrd	r2, r1, [r4, #12]
 800e16a:	fb01 2303 	mla	r3, r1, r3, r2
 800e16e:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800e172:	6160      	str	r0, [r4, #20]
 800e174:	2001      	movs	r0, #1
 800e176:	e7cb      	b.n	800e110 <_ZN8touchgfx19PainterRGB888Bitmap10renderInitEv+0x1e>
 800e178:	428b      	cmp	r3, r1
 800e17a:	ddc8      	ble.n	800e10e <_ZN8touchgfx19PainterRGB888Bitmap10renderInitEv+0x1c>
 800e17c:	6923      	ldr	r3, [r4, #16]
 800e17e:	2b00      	cmp	r3, #0
 800e180:	dbc5      	blt.n	800e10e <_ZN8touchgfx19PainterRGB888Bitmap10renderInitEv+0x1c>
 800e182:	f9b4 2024 	ldrsh.w	r2, [r4, #36]	; 0x24
 800e186:	4293      	cmp	r3, r2
 800e188:	dbe0      	blt.n	800e14c <_ZN8touchgfx19PainterRGB888Bitmap10renderInitEv+0x5a>
 800e18a:	e7c0      	b.n	800e10e <_ZN8touchgfx19PainterRGB888Bitmap10renderInitEv+0x1c>
 800e18c:	f007 f846 	bl	801521c <_ZNK8touchgfx6Bitmap9getFormatEv>
 800e190:	2801      	cmp	r0, #1
 800e192:	4605      	mov	r5, r0
 800e194:	d1bb      	bne.n	800e10e <_ZN8touchgfx19PainterRGB888Bitmap10renderInitEv+0x1c>
 800e196:	4630      	mov	r0, r6
 800e198:	f006 ffb6 	bl	8015108 <_ZNK8touchgfx6Bitmap7getDataEv>
 800e19c:	61a0      	str	r0, [r4, #24]
 800e19e:	2800      	cmp	r0, #0
 800e1a0:	d0b5      	beq.n	800e10e <_ZN8touchgfx19PainterRGB888Bitmap10renderInitEv+0x1c>
 800e1a2:	f9b4 2022 	ldrsh.w	r2, [r4, #34]	; 0x22
 800e1a6:	e9d4 3103 	ldrd	r3, r1, [r4, #12]
 800e1aa:	fb01 3302 	mla	r3, r1, r2, r3
 800e1ae:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 800e1b2:	4403      	add	r3, r0
 800e1b4:	4628      	mov	r0, r5
 800e1b6:	61a3      	str	r3, [r4, #24]
 800e1b8:	e7aa      	b.n	800e110 <_ZN8touchgfx19PainterRGB888Bitmap10renderInitEv+0x1e>
	...

0800e1bc <_ZN8touchgfx19PainterRGB888Bitmap9setBitmapERKNS_6BitmapE>:
 800e1bc:	b570      	push	{r4, r5, r6, lr}
 800e1be:	4604      	mov	r4, r0
 800e1c0:	880b      	ldrh	r3, [r1, #0]
 800e1c2:	4605      	mov	r5, r0
 800e1c4:	f824 3f1c 	strh.w	r3, [r4, #28]!
 800e1c8:	4620      	mov	r0, r4
 800e1ca:	f7f5 fded 	bl	8003da8 <_ZNK8touchgfx6Bitmap5getIdEv>
 800e1ce:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800e1d2:	4298      	cmp	r0, r3
 800e1d4:	d00f      	beq.n	800e1f6 <_ZN8touchgfx19PainterRGB888Bitmap9setBitmapERKNS_6BitmapE+0x3a>
 800e1d6:	4620      	mov	r0, r4
 800e1d8:	f007 f820 	bl	801521c <_ZNK8touchgfx6Bitmap9getFormatEv>
 800e1dc:	2801      	cmp	r0, #1
 800e1de:	d00a      	beq.n	800e1f6 <_ZN8touchgfx19PainterRGB888Bitmap9setBitmapERKNS_6BitmapE+0x3a>
 800e1e0:	4620      	mov	r0, r4
 800e1e2:	f007 f81b 	bl	801521c <_ZNK8touchgfx6Bitmap9getFormatEv>
 800e1e6:	2802      	cmp	r0, #2
 800e1e8:	d005      	beq.n	800e1f6 <_ZN8touchgfx19PainterRGB888Bitmap9setBitmapERKNS_6BitmapE+0x3a>
 800e1ea:	4b0c      	ldr	r3, [pc, #48]	; (800e21c <_ZN8touchgfx19PainterRGB888Bitmap9setBitmapERKNS_6BitmapE+0x60>)
 800e1ec:	2117      	movs	r1, #23
 800e1ee:	4a0c      	ldr	r2, [pc, #48]	; (800e220 <_ZN8touchgfx19PainterRGB888Bitmap9setBitmapERKNS_6BitmapE+0x64>)
 800e1f0:	480c      	ldr	r0, [pc, #48]	; (800e224 <_ZN8touchgfx19PainterRGB888Bitmap9setBitmapERKNS_6BitmapE+0x68>)
 800e1f2:	f011 fef5 	bl	801ffe0 <__assert_func>
 800e1f6:	4620      	mov	r0, r4
 800e1f8:	f006 fe6a 	bl	8014ed0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e1fc:	4606      	mov	r6, r0
 800e1fe:	4620      	mov	r0, r4
 800e200:	f006 feaa 	bl	8014f58 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e204:	2300      	movs	r3, #0
 800e206:	84a8      	strh	r0, [r5, #36]	; 0x24
 800e208:	f105 001e 	add.w	r0, r5, #30
 800e20c:	83eb      	strh	r3, [r5, #30]
 800e20e:	842b      	strh	r3, [r5, #32]
 800e210:	846e      	strh	r6, [r5, #34]	; 0x22
 800e212:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e216:	f003 b9f5 	b.w	8011604 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800e21a:	bf00      	nop
 800e21c:	08023a60 	.word	0x08023a60
 800e220:	08023b84 	.word	0x08023b84
 800e224:	08023b19 	.word	0x08023b19

0800e228 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
 800e228:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 800e22c:	4770      	bx	lr

0800e22e <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:
 800e22e:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 800e232:	4770      	bx	lr

0800e234 <_ZN8touchgfx6CircleD1Ev>:
 800e234:	4770      	bx	lr

0800e236 <_ZN8touchgfx6CircleD0Ev>:
 800e236:	b510      	push	{r4, lr}
 800e238:	4604      	mov	r4, r0
 800e23a:	214c      	movs	r1, #76	; 0x4c
 800e23c:	f011 fcd7 	bl	801fbee <_ZdlPvj>
 800e240:	4620      	mov	r0, r4
 800e242:	bd10      	pop	{r4, pc}

0800e244 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 800e244:	b507      	push	{r0, r1, r2, lr}
 800e246:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 800e24a:	ab01      	add	r3, sp, #4
 800e24c:	6809      	ldr	r1, [r1, #0]
 800e24e:	6800      	ldr	r0, [r0, #0]
 800e250:	f004 fdc0 	bl	8012dd4 <_ZN8touchgfx6muldivElllRl>
 800e254:	b003      	add	sp, #12
 800e256:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0800e25c <_ZN8touchgfx7CWRUtil4sineEi>:
 800e25c:	f44f 72b4 	mov.w	r2, #360	; 0x168
 800e260:	fb90 f3f2 	sdiv	r3, r0, r2
 800e264:	fb03 0312 	mls	r3, r3, r2, r0
 800e268:	4413      	add	r3, r2
 800e26a:	fb93 f0f2 	sdiv	r0, r3, r2
 800e26e:	fb02 3010 	mls	r0, r2, r0, r3
 800e272:	4b0a      	ldr	r3, [pc, #40]	; (800e29c <_ZN8touchgfx7CWRUtil4sineEi+0x40>)
 800e274:	285a      	cmp	r0, #90	; 0x5a
 800e276:	dc02      	bgt.n	800e27e <_ZN8touchgfx7CWRUtil4sineEi+0x22>
 800e278:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 800e27c:	4770      	bx	lr
 800e27e:	28b4      	cmp	r0, #180	; 0xb4
 800e280:	dc02      	bgt.n	800e288 <_ZN8touchgfx7CWRUtil4sineEi+0x2c>
 800e282:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 800e286:	e7f7      	b.n	800e278 <_ZN8touchgfx7CWRUtil4sineEi+0x1c>
 800e288:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 800e28c:	bfd4      	ite	le
 800e28e:	38b4      	suble	r0, #180	; 0xb4
 800e290:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 800e294:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 800e298:	4240      	negs	r0, r0
 800e29a:	4770      	bx	lr
 800e29c:	08023bcc 	.word	0x08023bcc

0800e2a0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 800e2a0:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 800e2a4:	fb90 f3f2 	sdiv	r3, r0, r2
 800e2a8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e2aa:	fb03 0012 	mls	r0, r3, r2, r0
 800e2ae:	4410      	add	r0, r2
 800e2b0:	fb90 f4f2 	sdiv	r4, r0, r2
 800e2b4:	fb02 0414 	mls	r4, r2, r4, r0
 800e2b8:	f004 061f 	and.w	r6, r4, #31
 800e2bc:	1164      	asrs	r4, r4, #5
 800e2be:	4620      	mov	r0, r4
 800e2c0:	f7ff ffcc 	bl	800e25c <_ZN8touchgfx7CWRUtil4sineEi>
 800e2c4:	4605      	mov	r5, r0
 800e2c6:	b90e      	cbnz	r6, 800e2cc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x2c>
 800e2c8:	b002      	add	sp, #8
 800e2ca:	bd70      	pop	{r4, r5, r6, pc}
 800e2cc:	1c60      	adds	r0, r4, #1
 800e2ce:	f7ff ffc5 	bl	800e25c <_ZN8touchgfx7CWRUtil4sineEi>
 800e2d2:	ab01      	add	r3, sp, #4
 800e2d4:	2220      	movs	r2, #32
 800e2d6:	4631      	mov	r1, r6
 800e2d8:	1b40      	subs	r0, r0, r5
 800e2da:	f004 fd7b 	bl	8012dd4 <_ZN8touchgfx6muldivElllRl>
 800e2de:	4428      	add	r0, r5
 800e2e0:	e7f2      	b.n	800e2c8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>

0800e2e2 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 800e2e2:	b508      	push	{r3, lr}
 800e2e4:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 800e2e8:	f7ff ffda 	bl	800e2a0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800e2ec:	bd08      	pop	{r3, pc}
	...

0800e2f0 <_ZN8touchgfx6CircleC1Ev>:
 800e2f0:	b510      	push	{r4, lr}
 800e2f2:	4604      	mov	r4, r0
 800e2f4:	f000 fd1c 	bl	800ed30 <_ZN8touchgfx12CanvasWidgetC1Ev>
 800e2f8:	4b08      	ldr	r3, [pc, #32]	; (800e31c <_ZN8touchgfx6CircleC1Ev+0x2c>)
 800e2fa:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 800e2fe:	4620      	mov	r0, r4
 800e300:	6023      	str	r3, [r4, #0]
 800e302:	2300      	movs	r3, #0
 800e304:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
 800e308:	f24b 4205 	movw	r2, #46085	; 0xb405
 800e30c:	60a3      	str	r3, [r4, #8]
 800e30e:	e9c4 330c 	strd	r3, r3, [r4, #48]	; 0x30
 800e312:	e9c4 330e 	strd	r3, r3, [r4, #56]	; 0x38
 800e316:	f8a4 2048 	strh.w	r2, [r4, #72]	; 0x48
 800e31a:	bd10      	pop	{r4, pc}
 800e31c:	08023c8c 	.word	0x08023c8c

0800e320 <_ZN8touchgfx6Circle15setCapPrecisionEi>:
 800e320:	29b4      	cmp	r1, #180	; 0xb4
 800e322:	bfa8      	it	ge
 800e324:	21b4      	movge	r1, #180	; 0xb4
 800e326:	2901      	cmp	r1, #1
 800e328:	bfb8      	it	lt
 800e32a:	2101      	movlt	r1, #1
 800e32c:	f880 1049 	strb.w	r1, [r0, #73]	; 0x49
 800e330:	4770      	bx	lr

0800e332 <_ZNK8touchgfx6Circle9moveToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>:
 800e332:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800e336:	4606      	mov	r6, r0
 800e338:	6810      	ldr	r0, [r2, #0]
 800e33a:	4698      	mov	r8, r3
 800e33c:	4691      	mov	r9, r2
 800e33e:	460f      	mov	r7, r1
 800e340:	f7ff ffae 	bl	800e2a0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800e344:	a902      	add	r1, sp, #8
 800e346:	2402      	movs	r4, #2
 800e348:	f841 0d08 	str.w	r0, [r1, #-8]!
 800e34c:	4640      	mov	r0, r8
 800e34e:	f7ff ff79 	bl	800e244 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800e352:	6b35      	ldr	r5, [r6, #48]	; 0x30
 800e354:	fb90 f0f4 	sdiv	r0, r0, r4
 800e358:	4405      	add	r5, r0
 800e35a:	f8d9 0000 	ldr.w	r0, [r9]
 800e35e:	f7ff ffc0 	bl	800e2e2 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800e362:	a902      	add	r1, sp, #8
 800e364:	f841 0d04 	str.w	r0, [r1, #-4]!
 800e368:	4640      	mov	r0, r8
 800e36a:	f7ff ff6b 	bl	800e244 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800e36e:	6b72      	ldr	r2, [r6, #52]	; 0x34
 800e370:	4629      	mov	r1, r5
 800e372:	fb90 f0f4 	sdiv	r0, r0, r4
 800e376:	1a12      	subs	r2, r2, r0
 800e378:	4638      	mov	r0, r7
 800e37a:	f00f fb4c 	bl	801da16 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 800e37e:	b003      	add	sp, #12
 800e380:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800e384 <_ZNK8touchgfx6Circle11lineToXYAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_S6_S6_>:
 800e384:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800e388:	9e08      	ldr	r6, [sp, #32]
 800e38a:	4698      	mov	r8, r3
 800e38c:	4615      	mov	r5, r2
 800e38e:	460f      	mov	r7, r1
 800e390:	6830      	ldr	r0, [r6, #0]
 800e392:	2402      	movs	r4, #2
 800e394:	f7ff ff84 	bl	800e2a0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800e398:	a902      	add	r1, sp, #8
 800e39a:	f841 0d08 	str.w	r0, [r1, #-8]!
 800e39e:	9809      	ldr	r0, [sp, #36]	; 0x24
 800e3a0:	f7ff ff50 	bl	800e244 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800e3a4:	682d      	ldr	r5, [r5, #0]
 800e3a6:	fb90 f0f4 	sdiv	r0, r0, r4
 800e3aa:	4405      	add	r5, r0
 800e3ac:	6830      	ldr	r0, [r6, #0]
 800e3ae:	f7ff ff98 	bl	800e2e2 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800e3b2:	a902      	add	r1, sp, #8
 800e3b4:	f841 0d04 	str.w	r0, [r1, #-4]!
 800e3b8:	9809      	ldr	r0, [sp, #36]	; 0x24
 800e3ba:	f7ff ff43 	bl	800e244 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800e3be:	f8d8 2000 	ldr.w	r2, [r8]
 800e3c2:	4629      	mov	r1, r5
 800e3c4:	fb90 f0f4 	sdiv	r0, r0, r4
 800e3c8:	1a12      	subs	r2, r2, r0
 800e3ca:	4638      	mov	r0, r7
 800e3cc:	f00f fab2 	bl	801d934 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800e3d0:	b002      	add	sp, #8
 800e3d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800e3d6 <_ZNK8touchgfx6Circle9lineToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>:
 800e3d6:	b513      	push	{r0, r1, r4, lr}
 800e3d8:	e9cd 2300 	strd	r2, r3, [sp]
 800e3dc:	f100 0334 	add.w	r3, r0, #52	; 0x34
 800e3e0:	f100 0230 	add.w	r2, r0, #48	; 0x30
 800e3e4:	f7ff ffce 	bl	800e384 <_ZNK8touchgfx6Circle11lineToXYAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_S6_S6_>
 800e3e8:	b002      	add	sp, #8
 800e3ea:	bd10      	pop	{r4, pc}

0800e3ec <_ZNK8touchgfx6Circle14updateMinMaxXYERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>:
 800e3ec:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e3ee:	680e      	ldr	r6, [r1, #0]
 800e3f0:	681f      	ldr	r7, [r3, #0]
 800e3f2:	9807      	ldr	r0, [sp, #28]
 800e3f4:	42be      	cmp	r6, r7
 800e3f6:	e9dd 5405 	ldrd	r5, r4, [sp, #20]
 800e3fa:	bfb8      	it	lt
 800e3fc:	601e      	strlt	r6, [r3, #0]
 800e3fe:	680b      	ldr	r3, [r1, #0]
 800e400:	6829      	ldr	r1, [r5, #0]
 800e402:	428b      	cmp	r3, r1
 800e404:	bfc8      	it	gt
 800e406:	602b      	strgt	r3, [r5, #0]
 800e408:	6813      	ldr	r3, [r2, #0]
 800e40a:	6821      	ldr	r1, [r4, #0]
 800e40c:	428b      	cmp	r3, r1
 800e40e:	bfb8      	it	lt
 800e410:	6023      	strlt	r3, [r4, #0]
 800e412:	6813      	ldr	r3, [r2, #0]
 800e414:	6802      	ldr	r2, [r0, #0]
 800e416:	4293      	cmp	r3, r2
 800e418:	bfc8      	it	gt
 800e41a:	6003      	strgt	r3, [r0, #0]
 800e41c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e41e <_ZNK8touchgfx6Circle14updateMinMaxARERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>:
 800e41e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e422:	b089      	sub	sp, #36	; 0x24
 800e424:	4690      	mov	r8, r2
 800e426:	4606      	mov	r6, r0
 800e428:	2402      	movs	r4, #2
 800e42a:	ad08      	add	r5, sp, #32
 800e42c:	6808      	ldr	r0, [r1, #0]
 800e42e:	461f      	mov	r7, r3
 800e430:	4689      	mov	r9, r1
 800e432:	f7ff ff35 	bl	800e2a0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800e436:	f845 0d04 	str.w	r0, [r5, #-4]!
 800e43a:	4640      	mov	r0, r8
 800e43c:	4629      	mov	r1, r5
 800e43e:	f7ff ff01 	bl	800e244 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800e442:	6b33      	ldr	r3, [r6, #48]	; 0x30
 800e444:	fb90 f0f4 	sdiv	r0, r0, r4
 800e448:	4418      	add	r0, r3
 800e44a:	9005      	str	r0, [sp, #20]
 800e44c:	f8d9 0000 	ldr.w	r0, [r9]
 800e450:	f7ff ff47 	bl	800e2e2 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800e454:	4629      	mov	r1, r5
 800e456:	9007      	str	r0, [sp, #28]
 800e458:	4640      	mov	r0, r8
 800e45a:	f7ff fef3 	bl	800e244 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800e45e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800e460:	aa08      	add	r2, sp, #32
 800e462:	a905      	add	r1, sp, #20
 800e464:	fb90 f0f4 	sdiv	r0, r0, r4
 800e468:	6b74      	ldr	r4, [r6, #52]	; 0x34
 800e46a:	1a24      	subs	r4, r4, r0
 800e46c:	4630      	mov	r0, r6
 800e46e:	f842 4d08 	str.w	r4, [r2, #-8]!
 800e472:	9302      	str	r3, [sp, #8]
 800e474:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800e476:	9301      	str	r3, [sp, #4]
 800e478:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e47a:	9300      	str	r3, [sp, #0]
 800e47c:	463b      	mov	r3, r7
 800e47e:	f7ff ffb5 	bl	800e3ec <_ZNK8touchgfx6Circle14updateMinMaxXYERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800e482:	b009      	add	sp, #36	; 0x24
 800e484:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800e488 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 800e488:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e48c:	4291      	cmp	r1, r2
 800e48e:	b08d      	sub	sp, #52	; 0x34
 800e490:	461e      	mov	r6, r3
 800e492:	4604      	mov	r4, r0
 800e494:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 800e498:	ad0c      	add	r5, sp, #48	; 0x30
 800e49a:	f10d 0a30 	add.w	sl, sp, #48	; 0x30
 800e49e:	e9cd 2106 	strd	r2, r1, [sp, #24]
 800e4a2:	bfc8      	it	gt
 800e4a4:	e9cd 1206 	strdgt	r1, r2, [sp, #24]
 800e4a8:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800e4ac:	e9dd 7816 	ldrd	r7, r8, [sp, #88]	; 0x58
 800e4b0:	1a9b      	subs	r3, r3, r2
 800e4b2:	a907      	add	r1, sp, #28
 800e4b4:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 800e4b8:	bfa2      	ittt	ge
 800e4ba:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 800e4be:	2200      	movge	r2, #0
 800e4c0:	e9cd 3206 	strdge	r3, r2, [sp, #24]
 800e4c4:	6b82      	ldr	r2, [r0, #56]	; 0x38
 800e4c6:	6c43      	ldr	r3, [r0, #68]	; 0x44
 800e4c8:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800e4cc:	f845 3d04 	str.w	r3, [r5, #-4]!
 800e4d0:	4633      	mov	r3, r6
 800e4d2:	462a      	mov	r2, r5
 800e4d4:	9700      	str	r7, [sp, #0]
 800e4d6:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800e4da:	f7ff ffa0 	bl	800e41e <_ZNK8touchgfx6Circle14updateMinMaxARERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800e4de:	9b07      	ldr	r3, [sp, #28]
 800e4e0:	f44f 6034 	mov.w	r0, #2880	; 0xb40
 800e4e4:	f103 0120 	add.w	r1, r3, #32
 800e4e8:	fb91 f3f0 	sdiv	r3, r1, r0
 800e4ec:	fb00 1313 	mls	r3, r0, r3, r1
 800e4f0:	1ac3      	subs	r3, r0, r3
 800e4f2:	fb93 f2f0 	sdiv	r2, r3, r0
 800e4f6:	fb00 3312 	mls	r3, r0, r2, r3
 800e4fa:	440b      	add	r3, r1
 800e4fc:	f84a 3d0c 	str.w	r3, [sl, #-12]!
 800e500:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800e502:	9906      	ldr	r1, [sp, #24]
 800e504:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800e506:	4291      	cmp	r1, r2
 800e508:	db11      	blt.n	800e52e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xa6>
 800e50a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e50c:	4651      	mov	r1, sl
 800e50e:	9700      	str	r7, [sp, #0]
 800e510:	4620      	mov	r0, r4
 800e512:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800e516:	462a      	mov	r2, r5
 800e518:	930b      	str	r3, [sp, #44]	; 0x2c
 800e51a:	4633      	mov	r3, r6
 800e51c:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800e520:	f7ff ff7d 	bl	800e41e <_ZNK8touchgfx6Circle14updateMinMaxARERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800e524:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e526:	f503 6334 	add.w	r3, r3, #2880	; 0xb40
 800e52a:	9309      	str	r3, [sp, #36]	; 0x24
 800e52c:	e7e8      	b.n	800e500 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x78>
 800e52e:	f5a2 6234 	sub.w	r2, r2, #2880	; 0xb40
 800e532:	4291      	cmp	r1, r2
 800e534:	dd0c      	ble.n	800e550 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xc8>
 800e536:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e538:	a906      	add	r1, sp, #24
 800e53a:	9700      	str	r7, [sp, #0]
 800e53c:	4620      	mov	r0, r4
 800e53e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800e542:	462a      	mov	r2, r5
 800e544:	930b      	str	r3, [sp, #44]	; 0x2c
 800e546:	4633      	mov	r3, r6
 800e548:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800e54c:	f7ff ff67 	bl	800e41e <_ZNK8touchgfx6Circle14updateMinMaxARERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800e550:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800e552:	2b00      	cmp	r3, #0
 800e554:	f040 8097 	bne.w	800e686 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x1fe>
 800e558:	e9dd 2106 	ldrd	r2, r1, [sp, #24]
 800e55c:	1a52      	subs	r2, r2, r1
 800e55e:	f5b2 5f34 	cmp.w	r2, #11520	; 0x2d00
 800e562:	da0a      	bge.n	800e57a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xf2>
 800e564:	462a      	mov	r2, r5
 800e566:	a90a      	add	r1, sp, #40	; 0x28
 800e568:	9700      	str	r7, [sp, #0]
 800e56a:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 800e56e:	4633      	mov	r3, r6
 800e570:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800e574:	4620      	mov	r0, r4
 800e576:	f7ff ff52 	bl	800e41e <_ZNK8touchgfx6Circle14updateMinMaxARERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800e57a:	f894 3049 	ldrb.w	r3, [r4, #73]	; 0x49
 800e57e:	2bb3      	cmp	r3, #179	; 0xb3
 800e580:	d87e      	bhi.n	800e680 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x1f8>
 800e582:	e9dd 3006 	ldrd	r3, r0, [sp, #24]
 800e586:	1a1b      	subs	r3, r3, r0
 800e588:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 800e58c:	da78      	bge.n	800e680 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x1f8>
 800e58e:	ad0c      	add	r5, sp, #48	; 0x30
 800e590:	f104 0b38 	add.w	fp, r4, #56	; 0x38
 800e594:	f7ff fe84 	bl	800e2a0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800e598:	f04f 0a02 	mov.w	sl, #2
 800e59c:	f845 0d04 	str.w	r0, [r5, #-4]!
 800e5a0:	4658      	mov	r0, fp
 800e5a2:	4629      	mov	r1, r5
 800e5a4:	f7ff fe4e 	bl	800e244 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800e5a8:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e5aa:	18c3      	adds	r3, r0, r3
 800e5ac:	9807      	ldr	r0, [sp, #28]
 800e5ae:	9305      	str	r3, [sp, #20]
 800e5b0:	f7ff fe97 	bl	800e2e2 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800e5b4:	4629      	mov	r1, r5
 800e5b6:	900b      	str	r0, [sp, #44]	; 0x2c
 800e5b8:	4658      	mov	r0, fp
 800e5ba:	f7ff fe43 	bl	800e244 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800e5be:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800e5c0:	9a05      	ldr	r2, [sp, #20]
 800e5c2:	a90a      	add	r1, sp, #40	; 0x28
 800e5c4:	1a1b      	subs	r3, r3, r0
 800e5c6:	9700      	str	r7, [sp, #0]
 800e5c8:	4620      	mov	r0, r4
 800e5ca:	9304      	str	r3, [sp, #16]
 800e5cc:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800e5ce:	fb93 f3fa 	sdiv	r3, r3, sl
 800e5d2:	1ad2      	subs	r2, r2, r3
 800e5d4:	920a      	str	r2, [sp, #40]	; 0x28
 800e5d6:	9a04      	ldr	r2, [sp, #16]
 800e5d8:	1ad3      	subs	r3, r2, r3
 800e5da:	462a      	mov	r2, r5
 800e5dc:	930b      	str	r3, [sp, #44]	; 0x2c
 800e5de:	4633      	mov	r3, r6
 800e5e0:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800e5e4:	f7ff ff02 	bl	800e3ec <_ZNK8touchgfx6Circle14updateMinMaxXYERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800e5e8:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800e5ea:	9a05      	ldr	r2, [sp, #20]
 800e5ec:	a90a      	add	r1, sp, #40	; 0x28
 800e5ee:	4620      	mov	r0, r4
 800e5f0:	9700      	str	r7, [sp, #0]
 800e5f2:	fb93 f3fa 	sdiv	r3, r3, sl
 800e5f6:	189a      	adds	r2, r3, r2
 800e5f8:	920a      	str	r2, [sp, #40]	; 0x28
 800e5fa:	9a04      	ldr	r2, [sp, #16]
 800e5fc:	4413      	add	r3, r2
 800e5fe:	462a      	mov	r2, r5
 800e600:	930b      	str	r3, [sp, #44]	; 0x2c
 800e602:	4633      	mov	r3, r6
 800e604:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800e608:	f7ff fef0 	bl	800e3ec <_ZNK8touchgfx6Circle14updateMinMaxXYERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800e60c:	9806      	ldr	r0, [sp, #24]
 800e60e:	f7ff fe47 	bl	800e2a0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800e612:	4629      	mov	r1, r5
 800e614:	900b      	str	r0, [sp, #44]	; 0x2c
 800e616:	4658      	mov	r0, fp
 800e618:	f7ff fe14 	bl	800e244 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800e61c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e61e:	18c3      	adds	r3, r0, r3
 800e620:	9806      	ldr	r0, [sp, #24]
 800e622:	9304      	str	r3, [sp, #16]
 800e624:	f7ff fe5d 	bl	800e2e2 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800e628:	4629      	mov	r1, r5
 800e62a:	900b      	str	r0, [sp, #44]	; 0x2c
 800e62c:	4658      	mov	r0, fp
 800e62e:	f7ff fe09 	bl	800e244 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800e632:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800e634:	9a04      	ldr	r2, [sp, #16]
 800e636:	a90a      	add	r1, sp, #40	; 0x28
 800e638:	eba3 0b00 	sub.w	fp, r3, r0
 800e63c:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800e63e:	4620      	mov	r0, r4
 800e640:	9700      	str	r7, [sp, #0]
 800e642:	fb93 f3fa 	sdiv	r3, r3, sl
 800e646:	1ad2      	subs	r2, r2, r3
 800e648:	ebab 0303 	sub.w	r3, fp, r3
 800e64c:	920a      	str	r2, [sp, #40]	; 0x28
 800e64e:	462a      	mov	r2, r5
 800e650:	930b      	str	r3, [sp, #44]	; 0x2c
 800e652:	4633      	mov	r3, r6
 800e654:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800e658:	f7ff fec8 	bl	800e3ec <_ZNK8touchgfx6Circle14updateMinMaxXYERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800e65c:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800e65e:	9700      	str	r7, [sp, #0]
 800e660:	462a      	mov	r2, r5
 800e662:	a90a      	add	r1, sp, #40	; 0x28
 800e664:	4620      	mov	r0, r4
 800e666:	fb93 fafa 	sdiv	sl, r3, sl
 800e66a:	9b04      	ldr	r3, [sp, #16]
 800e66c:	4453      	add	r3, sl
 800e66e:	930a      	str	r3, [sp, #40]	; 0x28
 800e670:	eb0a 030b 	add.w	r3, sl, fp
 800e674:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800e678:	930b      	str	r3, [sp, #44]	; 0x2c
 800e67a:	4633      	mov	r3, r6
 800e67c:	f7ff feb6 	bl	800e3ec <_ZNK8touchgfx6Circle14updateMinMaxXYERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800e680:	b00d      	add	sp, #52	; 0x34
 800e682:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e686:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e688:	a907      	add	r1, sp, #28
 800e68a:	9700      	str	r7, [sp, #0]
 800e68c:	4620      	mov	r0, r4
 800e68e:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800e692:	462a      	mov	r2, r5
 800e694:	930b      	str	r3, [sp, #44]	; 0x2c
 800e696:	4633      	mov	r3, r6
 800e698:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800e69c:	f7ff febf 	bl	800e41e <_ZNK8touchgfx6Circle14updateMinMaxARERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800e6a0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e6a2:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800e6a4:	a906      	add	r1, sp, #24
 800e6a6:	9700      	str	r7, [sp, #0]
 800e6a8:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800e6ac:	462a      	mov	r2, r5
 800e6ae:	930b      	str	r3, [sp, #44]	; 0x2c
 800e6b0:	4633      	mov	r3, r6
 800e6b2:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800e6b6:	e75d      	b.n	800e574 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xec>

0800e6b8 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 800e6b8:	b530      	push	{r4, r5, lr}
 800e6ba:	4604      	mov	r4, r0
 800e6bc:	4608      	mov	r0, r1
 800e6be:	4611      	mov	r1, r2
 800e6c0:	461a      	mov	r2, r3
 800e6c2:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800e6c6:	b089      	sub	sp, #36	; 0x24
 800e6c8:	2500      	movs	r5, #0
 800e6ca:	015b      	lsls	r3, r3, #5
 800e6cc:	9505      	str	r5, [sp, #20]
 800e6ce:	9304      	str	r3, [sp, #16]
 800e6d0:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800e6d4:	015b      	lsls	r3, r3, #5
 800e6d6:	e9cd 3506 	strd	r3, r5, [sp, #24]
 800e6da:	ab07      	add	r3, sp, #28
 800e6dc:	2520      	movs	r5, #32
 800e6de:	9302      	str	r3, [sp, #8]
 800e6e0:	ab06      	add	r3, sp, #24
 800e6e2:	9301      	str	r3, [sp, #4]
 800e6e4:	ab05      	add	r3, sp, #20
 800e6e6:	9300      	str	r3, [sp, #0]
 800e6e8:	ab04      	add	r3, sp, #16
 800e6ea:	f7ff fecd 	bl	800e488 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 800e6ee:	9a04      	ldr	r2, [sp, #16]
 800e6f0:	9805      	ldr	r0, [sp, #20]
 800e6f2:	9b06      	ldr	r3, [sp, #24]
 800e6f4:	9907      	ldr	r1, [sp, #28]
 800e6f6:	fb92 f2f5 	sdiv	r2, r2, r5
 800e6fa:	fb90 f0f5 	sdiv	r0, r0, r5
 800e6fe:	fb93 f3f5 	sdiv	r3, r3, r5
 800e702:	fb91 f1f5 	sdiv	r1, r1, r5
 800e706:	b292      	uxth	r2, r2
 800e708:	3002      	adds	r0, #2
 800e70a:	b29b      	uxth	r3, r3
 800e70c:	3102      	adds	r1, #2
 800e70e:	1a80      	subs	r0, r0, r2
 800e710:	3a01      	subs	r2, #1
 800e712:	1ac9      	subs	r1, r1, r3
 800e714:	3b01      	subs	r3, #1
 800e716:	80a0      	strh	r0, [r4, #4]
 800e718:	4620      	mov	r0, r4
 800e71a:	8022      	strh	r2, [r4, #0]
 800e71c:	8063      	strh	r3, [r4, #2]
 800e71e:	80e1      	strh	r1, [r4, #6]
 800e720:	b009      	add	sp, #36	; 0x24
 800e722:	bd30      	pop	{r4, r5, pc}

0800e724 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 800e724:	b510      	push	{r4, lr}
 800e726:	4604      	mov	r4, r0
 800e728:	e9d1 230f 	ldrd	r2, r3, [r1, #60]	; 0x3c
 800e72c:	f7ff ffc4 	bl	800e6b8 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 800e730:	4620      	mov	r0, r4
 800e732:	bd10      	pop	{r4, pc}

0800e734 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 800e734:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e736:	e9d1 540f 	ldrd	r5, r4, [r1, #60]	; 0x3c
 800e73a:	4606      	mov	r6, r0
 800e73c:	f891 0048 	ldrb.w	r0, [r1, #72]	; 0x48
 800e740:	42a5      	cmp	r5, r4
 800e742:	6813      	ldr	r3, [r2, #0]
 800e744:	ea4f 1040 	mov.w	r0, r0, lsl #5
 800e748:	da2b      	bge.n	800e7a2 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 800e74a:	42a3      	cmp	r3, r4
 800e74c:	dd14      	ble.n	800e778 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 800e74e:	b168      	cbz	r0, 800e76c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 800e750:	4267      	negs	r7, r4
 800e752:	fb97 f2f0 	sdiv	r2, r7, r0
 800e756:	fb00 7212 	mls	r2, r0, r2, r7
 800e75a:	1a82      	subs	r2, r0, r2
 800e75c:	fb92 f7f0 	sdiv	r7, r2, r0
 800e760:	fb00 2017 	mls	r0, r0, r7, r2
 800e764:	1a24      	subs	r4, r4, r0
 800e766:	42ac      	cmp	r4, r5
 800e768:	bfb8      	it	lt
 800e76a:	462c      	movlt	r4, r5
 800e76c:	4630      	mov	r0, r6
 800e76e:	4622      	mov	r2, r4
 800e770:	f7ff ffa2 	bl	800e6b8 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 800e774:	4630      	mov	r0, r6
 800e776:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e778:	42ab      	cmp	r3, r5
 800e77a:	dd0e      	ble.n	800e79a <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 800e77c:	b168      	cbz	r0, 800e79a <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 800e77e:	425f      	negs	r7, r3
 800e780:	fb97 f2f0 	sdiv	r2, r7, r0
 800e784:	fb00 7212 	mls	r2, r0, r2, r7
 800e788:	1a82      	subs	r2, r0, r2
 800e78a:	fb92 f7f0 	sdiv	r7, r2, r0
 800e78e:	fb00 2017 	mls	r0, r0, r7, r2
 800e792:	1a1b      	subs	r3, r3, r0
 800e794:	42ab      	cmp	r3, r5
 800e796:	bfb8      	it	lt
 800e798:	462b      	movlt	r3, r5
 800e79a:	4622      	mov	r2, r4
 800e79c:	461c      	mov	r4, r3
 800e79e:	4613      	mov	r3, r2
 800e7a0:	e7e4      	b.n	800e76c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 800e7a2:	42a3      	cmp	r3, r4
 800e7a4:	da10      	bge.n	800e7c8 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 800e7a6:	b148      	cbz	r0, 800e7bc <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 800e7a8:	fb94 f2f0 	sdiv	r2, r4, r0
 800e7ac:	fb00 4212 	mls	r2, r0, r2, r4
 800e7b0:	1a82      	subs	r2, r0, r2
 800e7b2:	fb92 f7f0 	sdiv	r7, r2, r0
 800e7b6:	fb00 2017 	mls	r0, r0, r7, r2
 800e7ba:	4404      	add	r4, r0
 800e7bc:	42a5      	cmp	r5, r4
 800e7be:	bfa8      	it	ge
 800e7c0:	4625      	movge	r5, r4
 800e7c2:	461c      	mov	r4, r3
 800e7c4:	462b      	mov	r3, r5
 800e7c6:	e7d1      	b.n	800e76c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 800e7c8:	42ab      	cmp	r3, r5
 800e7ca:	dacf      	bge.n	800e76c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 800e7cc:	2800      	cmp	r0, #0
 800e7ce:	d0cd      	beq.n	800e76c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 800e7d0:	fb93 f2f0 	sdiv	r2, r3, r0
 800e7d4:	fb00 3212 	mls	r2, r0, r2, r3
 800e7d8:	1a82      	subs	r2, r0, r2
 800e7da:	fb92 f7f0 	sdiv	r7, r2, r0
 800e7de:	fb00 2017 	mls	r0, r0, r7, r2
 800e7e2:	4403      	add	r3, r0
 800e7e4:	42ab      	cmp	r3, r5
 800e7e6:	bfa8      	it	ge
 800e7e8:	462b      	movge	r3, r5
 800e7ea:	e7bf      	b.n	800e76c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>

0800e7ec <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 800e7ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e7f0:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 800e7f2:	b0ba      	sub	sp, #232	; 0xe8
 800e7f4:	6c02      	ldr	r2, [r0, #64]	; 0x40
 800e7f6:	4689      	mov	r9, r1
 800e7f8:	9303      	str	r3, [sp, #12]
 800e7fa:	2120      	movs	r1, #32
 800e7fc:	4293      	cmp	r3, r2
 800e7fe:	9204      	str	r2, [sp, #16]
 800e800:	f9b0 7030 	ldrsh.w	r7, [r0, #48]	; 0x30
 800e804:	4604      	mov	r4, r0
 800e806:	f9b0 8034 	ldrsh.w	r8, [r0, #52]	; 0x34
 800e80a:	bfc8      	it	gt
 800e80c:	e9cd 2303 	strdgt	r2, r3, [sp, #12]
 800e810:	e9dd 2303 	ldrd	r2, r3, [sp, #12]
 800e814:	fb97 f7f1 	sdiv	r7, r7, r1
 800e818:	1a9b      	subs	r3, r3, r2
 800e81a:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 800e81e:	bfa2      	ittt	ge
 800e820:	2200      	movge	r2, #0
 800e822:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 800e826:	e9cd 2303 	strdge	r2, r3, [sp, #12]
 800e82a:	6c42      	ldr	r2, [r0, #68]	; 0x44
 800e82c:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800e82e:	fb98 f8f1 	sdiv	r8, r8, r1
 800e832:	2a00      	cmp	r2, #0
 800e834:	d050      	beq.n	800e8d8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xec>
 800e836:	f9b9 0000 	ldrsh.w	r0, [r9]
 800e83a:	f04f 0a02 	mov.w	sl, #2
 800e83e:	f9b9 1002 	ldrsh.w	r1, [r9, #2]
 800e842:	1a3d      	subs	r5, r7, r0
 800e844:	eba8 0601 	sub.w	r6, r8, r1
 800e848:	ea85 7ce5 	eor.w	ip, r5, r5, asr #31
 800e84c:	ebac 7ce5 	sub.w	ip, ip, r5, asr #31
 800e850:	f8b9 5004 	ldrh.w	r5, [r9, #4]
 800e854:	4405      	add	r5, r0
 800e856:	ea86 70e6 	eor.w	r0, r6, r6, asr #31
 800e85a:	eba0 70e6 	sub.w	r0, r0, r6, asr #31
 800e85e:	f8b9 6006 	ldrh.w	r6, [r9, #6]
 800e862:	b22d      	sxth	r5, r5
 800e864:	440e      	add	r6, r1
 800e866:	1b7d      	subs	r5, r7, r5
 800e868:	b236      	sxth	r6, r6
 800e86a:	2d00      	cmp	r5, #0
 800e86c:	eba8 0606 	sub.w	r6, r8, r6
 800e870:	bfb8      	it	lt
 800e872:	426d      	neglt	r5, r5
 800e874:	2e00      	cmp	r6, #0
 800e876:	bfb8      	it	lt
 800e878:	4276      	neglt	r6, r6
 800e87a:	4565      	cmp	r5, ip
 800e87c:	bfb4      	ite	lt
 800e87e:	f10c 0501 	addlt.w	r5, ip, #1
 800e882:	3501      	addge	r5, #1
 800e884:	4286      	cmp	r6, r0
 800e886:	bfb8      	it	lt
 800e888:	1c46      	addlt	r6, r0, #1
 800e88a:	f894 0048 	ldrb.w	r0, [r4, #72]	; 0x48
 800e88e:	bfa8      	it	ge
 800e890:	3601      	addge	r6, #1
 800e892:	3001      	adds	r0, #1
 800e894:	4376      	muls	r6, r6
 800e896:	1040      	asrs	r0, r0, #1
 800e898:	fb05 6505 	mla	r5, r5, r5, r6
 800e89c:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 800e8a0:	fb92 f2fa 	sdiv	r2, r2, sl
 800e8a4:	1a9b      	subs	r3, r3, r2
 800e8a6:	930a      	str	r3, [sp, #40]	; 0x28
 800e8a8:	f7ff fcd8 	bl	800e25c <_ZN8touchgfx7CWRUtil4sineEi>
 800e8ac:	a93a      	add	r1, sp, #232	; 0xe8
 800e8ae:	f841 0dbc 	str.w	r0, [r1, #-188]!
 800e8b2:	a80a      	add	r0, sp, #40	; 0x28
 800e8b4:	f7ff fcc6 	bl	800e244 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800e8b8:	2120      	movs	r1, #32
 800e8ba:	fb90 f0f1 	sdiv	r0, r0, r1
 800e8be:	4340      	muls	r0, r0
 800e8c0:	4285      	cmp	r5, r0
 800e8c2:	da04      	bge.n	800e8ce <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xe2>
 800e8c4:	2401      	movs	r4, #1
 800e8c6:	4620      	mov	r0, r4
 800e8c8:	b03a      	add	sp, #232	; 0xe8
 800e8ca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e8ce:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800e8d0:	fb92 f3fa 	sdiv	r3, r2, sl
 800e8d4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e8d6:	4413      	add	r3, r2
 800e8d8:	f8b9 2004 	ldrh.w	r2, [r9, #4]
 800e8dc:	fb93 f3f1 	sdiv	r3, r3, r1
 800e8e0:	f9b9 1000 	ldrsh.w	r1, [r9]
 800e8e4:	3301      	adds	r3, #1
 800e8e6:	440a      	add	r2, r1
 800e8e8:	435b      	muls	r3, r3
 800e8ea:	b212      	sxth	r2, r2
 800e8ec:	42ba      	cmp	r2, r7
 800e8ee:	bfa8      	it	ge
 800e8f0:	463a      	movge	r2, r7
 800e8f2:	428a      	cmp	r2, r1
 800e8f4:	bfac      	ite	ge
 800e8f6:	1abf      	subge	r7, r7, r2
 800e8f8:	1a7f      	sublt	r7, r7, r1
 800e8fa:	f8b9 2006 	ldrh.w	r2, [r9, #6]
 800e8fe:	f9b9 1002 	ldrsh.w	r1, [r9, #2]
 800e902:	440a      	add	r2, r1
 800e904:	b212      	sxth	r2, r2
 800e906:	4542      	cmp	r2, r8
 800e908:	bfa8      	it	ge
 800e90a:	4642      	movge	r2, r8
 800e90c:	428a      	cmp	r2, r1
 800e90e:	bfac      	ite	ge
 800e910:	eba8 0802 	subge.w	r8, r8, r2
 800e914:	eba8 0801 	sublt.w	r8, r8, r1
 800e918:	fb08 f808 	mul.w	r8, r8, r8
 800e91c:	fb07 8707 	mla	r7, r7, r7, r8
 800e920:	429f      	cmp	r7, r3
 800e922:	dccf      	bgt.n	800e8c4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xd8>
 800e924:	464a      	mov	r2, r9
 800e926:	4621      	mov	r1, r4
 800e928:	a80b      	add	r0, sp, #44	; 0x2c
 800e92a:	f00e fea9 	bl	801d680 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 800e92e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e930:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800e932:	9205      	str	r2, [sp, #20]
 800e934:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 800e938:	9306      	str	r3, [sp, #24]
 800e93a:	dd07      	ble.n	800e94c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x160>
 800e93c:	2102      	movs	r1, #2
 800e93e:	fb93 f3f1 	sdiv	r3, r3, r1
 800e942:	4413      	add	r3, r2
 800e944:	9306      	str	r3, [sp, #24]
 800e946:	fb93 f3f1 	sdiv	r3, r3, r1
 800e94a:	9305      	str	r3, [sp, #20]
 800e94c:	9b03      	ldr	r3, [sp, #12]
 800e94e:	ad3a      	add	r5, sp, #232	; 0xe8
 800e950:	f894 6048 	ldrb.w	r6, [r4, #72]	; 0x48
 800e954:	a90b      	add	r1, sp, #44	; 0x2c
 800e956:	9307      	str	r3, [sp, #28]
 800e958:	4620      	mov	r0, r4
 800e95a:	0176      	lsls	r6, r6, #5
 800e95c:	e9dd 2305 	ldrd	r2, r3, [sp, #20]
 800e960:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800e964:	aa07      	add	r2, sp, #28
 800e966:	f845 3dc0 	str.w	r3, [r5, #-192]!
 800e96a:	462b      	mov	r3, r5
 800e96c:	f7ff fce1 	bl	800e332 <_ZNK8touchgfx6Circle9moveToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>
 800e970:	9f07      	ldr	r7, [sp, #28]
 800e972:	b996      	cbnz	r6, 800e99a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1ae>
 800e974:	3720      	adds	r7, #32
 800e976:	4639      	mov	r1, r7
 800e978:	9a04      	ldr	r2, [sp, #16]
 800e97a:	9b06      	ldr	r3, [sp, #24]
 800e97c:	4437      	add	r7, r6
 800e97e:	4291      	cmp	r1, r2
 800e980:	dc18      	bgt.n	800e9b4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1c8>
 800e982:	9a05      	ldr	r2, [sp, #20]
 800e984:	4620      	mov	r0, r4
 800e986:	9107      	str	r1, [sp, #28]
 800e988:	a90b      	add	r1, sp, #44	; 0x2c
 800e98a:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800e98e:	aa07      	add	r2, sp, #28
 800e990:	930a      	str	r3, [sp, #40]	; 0x28
 800e992:	462b      	mov	r3, r5
 800e994:	f7ff fd1f 	bl	800e3d6 <_ZNK8touchgfx6Circle9lineToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>
 800e998:	e7ed      	b.n	800e976 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x18a>
 800e99a:	f107 0320 	add.w	r3, r7, #32
 800e99e:	fb93 f7f6 	sdiv	r7, r3, r6
 800e9a2:	fb06 3717 	mls	r7, r6, r7, r3
 800e9a6:	1bf2      	subs	r2, r6, r7
 800e9a8:	fb92 f7f6 	sdiv	r7, r2, r6
 800e9ac:	fb06 2717 	mls	r7, r6, r7, r2
 800e9b0:	441f      	add	r7, r3
 800e9b2:	e7e0      	b.n	800e976 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x18a>
 800e9b4:	9907      	ldr	r1, [sp, #28]
 800e9b6:	428a      	cmp	r2, r1
 800e9b8:	dd09      	ble.n	800e9ce <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1e2>
 800e9ba:	9a05      	ldr	r2, [sp, #20]
 800e9bc:	a90b      	add	r1, sp, #44	; 0x2c
 800e9be:	4620      	mov	r0, r4
 800e9c0:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800e9c4:	aa04      	add	r2, sp, #16
 800e9c6:	930a      	str	r3, [sp, #40]	; 0x28
 800e9c8:	462b      	mov	r3, r5
 800e9ca:	f7ff fd04 	bl	800e3d6 <_ZNK8touchgfx6Circle9lineToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>
 800e9ce:	9a06      	ldr	r2, [sp, #24]
 800e9d0:	e9dd 3003 	ldrd	r3, r0, [sp, #12]
 800e9d4:	1ac3      	subs	r3, r0, r3
 800e9d6:	b982      	cbnz	r2, 800e9fa <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x20e>
 800e9d8:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 800e9dc:	da04      	bge.n	800e9e8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1fc>
 800e9de:	a80b      	add	r0, sp, #44	; 0x2c
 800e9e0:	e9d4 120c 	ldrd	r1, r2, [r4, #48]	; 0x30
 800e9e4:	f00e ffa6 	bl	801d934 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800e9e8:	21ff      	movs	r1, #255	; 0xff
 800e9ea:	a80b      	add	r0, sp, #44	; 0x2c
 800e9ec:	f00f f917 	bl	801dc1e <_ZN8touchgfx6Canvas6renderEh>
 800e9f0:	4604      	mov	r4, r0
 800e9f2:	a80b      	add	r0, sp, #44	; 0x2c
 800e9f4:	f00f f952 	bl	801dc9c <_ZN8touchgfx6CanvasD1Ev>
 800e9f8:	e765      	b.n	800e8c6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xda>
 800e9fa:	f894 7049 	ldrb.w	r7, [r4, #73]	; 0x49
 800e9fe:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 800ea02:	ea4f 1747 	mov.w	r7, r7, lsl #5
 800ea06:	da2b      	bge.n	800ea60 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x274>
 800ea08:	f7ff fc4a 	bl	800e2a0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800ea0c:	4629      	mov	r1, r5
 800ea0e:	900a      	str	r0, [sp, #40]	; 0x28
 800ea10:	a805      	add	r0, sp, #20
 800ea12:	f7ff fc17 	bl	800e244 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800ea16:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800ea18:	f10d 0818 	add.w	r8, sp, #24
 800ea1c:	4418      	add	r0, r3
 800ea1e:	9008      	str	r0, [sp, #32]
 800ea20:	9804      	ldr	r0, [sp, #16]
 800ea22:	f7ff fc5e 	bl	800e2e2 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800ea26:	4629      	mov	r1, r5
 800ea28:	900a      	str	r0, [sp, #40]	; 0x28
 800ea2a:	a805      	add	r0, sp, #20
 800ea2c:	f7ff fc0a 	bl	800e244 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800ea30:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800ea32:	1a18      	subs	r0, r3, r0
 800ea34:	9b04      	ldr	r3, [sp, #16]
 800ea36:	443b      	add	r3, r7
 800ea38:	9009      	str	r0, [sp, #36]	; 0x24
 800ea3a:	930a      	str	r3, [sp, #40]	; 0x28
 800ea3c:	9b04      	ldr	r3, [sp, #16]
 800ea3e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800ea40:	f503 53b4 	add.w	r3, r3, #5760	; 0x1680
 800ea44:	4293      	cmp	r3, r2
 800ea46:	dd0b      	ble.n	800ea60 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x274>
 800ea48:	ab09      	add	r3, sp, #36	; 0x24
 800ea4a:	aa08      	add	r2, sp, #32
 800ea4c:	a90b      	add	r1, sp, #44	; 0x2c
 800ea4e:	4620      	mov	r0, r4
 800ea50:	e9cd 5800 	strd	r5, r8, [sp]
 800ea54:	f7ff fc96 	bl	800e384 <_ZNK8touchgfx6Circle11lineToXYAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_S6_S6_>
 800ea58:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800ea5a:	443b      	add	r3, r7
 800ea5c:	930a      	str	r3, [sp, #40]	; 0x28
 800ea5e:	e7ed      	b.n	800ea3c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x250>
 800ea60:	9a04      	ldr	r2, [sp, #16]
 800ea62:	9b07      	ldr	r3, [sp, #28]
 800ea64:	429a      	cmp	r2, r3
 800ea66:	dd0a      	ble.n	800ea7e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x292>
 800ea68:	a90b      	add	r1, sp, #44	; 0x2c
 800ea6a:	4620      	mov	r0, r4
 800ea6c:	e9dd 2305 	ldrd	r2, r3, [sp, #20]
 800ea70:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800ea74:	aa04      	add	r2, sp, #16
 800ea76:	930a      	str	r3, [sp, #40]	; 0x28
 800ea78:	462b      	mov	r3, r5
 800ea7a:	f7ff fcac 	bl	800e3d6 <_ZNK8touchgfx6Circle9lineToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>
 800ea7e:	f8dd 801c 	ldr.w	r8, [sp, #28]
 800ea82:	4642      	mov	r2, r8
 800ea84:	9b03      	ldr	r3, [sp, #12]
 800ea86:	eba8 0806 	sub.w	r8, r8, r6
 800ea8a:	429a      	cmp	r2, r3
 800ea8c:	db0c      	blt.n	800eaa8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2bc>
 800ea8e:	9207      	str	r2, [sp, #28]
 800ea90:	a90b      	add	r1, sp, #44	; 0x2c
 800ea92:	4620      	mov	r0, r4
 800ea94:	e9dd 2305 	ldrd	r2, r3, [sp, #20]
 800ea98:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800ea9c:	aa07      	add	r2, sp, #28
 800ea9e:	930a      	str	r3, [sp, #40]	; 0x28
 800eaa0:	462b      	mov	r3, r5
 800eaa2:	f7ff fc98 	bl	800e3d6 <_ZNK8touchgfx6Circle9lineToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>
 800eaa6:	e7ec      	b.n	800ea82 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x296>
 800eaa8:	9a07      	ldr	r2, [sp, #28]
 800eaaa:	4293      	cmp	r3, r2
 800eaac:	da0a      	bge.n	800eac4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2d8>
 800eaae:	a90b      	add	r1, sp, #44	; 0x2c
 800eab0:	4620      	mov	r0, r4
 800eab2:	e9dd 2305 	ldrd	r2, r3, [sp, #20]
 800eab6:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800eaba:	aa03      	add	r2, sp, #12
 800eabc:	930a      	str	r3, [sp, #40]	; 0x28
 800eabe:	462b      	mov	r3, r5
 800eac0:	f7ff fc89 	bl	800e3d6 <_ZNK8touchgfx6Circle9lineToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>
 800eac4:	e9dd 0303 	ldrd	r0, r3, [sp, #12]
 800eac8:	1a1b      	subs	r3, r3, r0
 800eaca:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 800eace:	da8b      	bge.n	800e9e8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1fc>
 800ead0:	f7ff fbe6 	bl	800e2a0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800ead4:	4629      	mov	r1, r5
 800ead6:	900a      	str	r0, [sp, #40]	; 0x28
 800ead8:	a805      	add	r0, sp, #20
 800eada:	f7ff fbb3 	bl	800e244 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800eade:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800eae0:	ae06      	add	r6, sp, #24
 800eae2:	4418      	add	r0, r3
 800eae4:	9008      	str	r0, [sp, #32]
 800eae6:	9803      	ldr	r0, [sp, #12]
 800eae8:	f7ff fbfb 	bl	800e2e2 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800eaec:	4629      	mov	r1, r5
 800eaee:	900a      	str	r0, [sp, #40]	; 0x28
 800eaf0:	a805      	add	r0, sp, #20
 800eaf2:	f7ff fba7 	bl	800e244 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800eaf6:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800eaf8:	1a18      	subs	r0, r3, r0
 800eafa:	9b03      	ldr	r3, [sp, #12]
 800eafc:	f5a3 53b4 	sub.w	r3, r3, #5760	; 0x1680
 800eb00:	9009      	str	r0, [sp, #36]	; 0x24
 800eb02:	443b      	add	r3, r7
 800eb04:	930a      	str	r3, [sp, #40]	; 0x28
 800eb06:	9a03      	ldr	r2, [sp, #12]
 800eb08:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800eb0a:	429a      	cmp	r2, r3
 800eb0c:	f77f af6c 	ble.w	800e9e8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1fc>
 800eb10:	ab09      	add	r3, sp, #36	; 0x24
 800eb12:	aa08      	add	r2, sp, #32
 800eb14:	a90b      	add	r1, sp, #44	; 0x2c
 800eb16:	4620      	mov	r0, r4
 800eb18:	e9cd 5600 	strd	r5, r6, [sp]
 800eb1c:	f7ff fc32 	bl	800e384 <_ZNK8touchgfx6Circle11lineToXYAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_S6_S6_>
 800eb20:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800eb22:	443b      	add	r3, r7
 800eb24:	930a      	str	r3, [sp, #40]	; 0x28
 800eb26:	e7ee      	b.n	800eb06 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x31a>

0800eb28 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>:
 800eb28:	6281      	str	r1, [r0, #40]	; 0x28
 800eb2a:	4770      	bx	lr

0800eb2c <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
 800eb2c:	b510      	push	{r4, lr}
 800eb2e:	2200      	movs	r2, #0
 800eb30:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 800eb34:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 800eb38:	8002      	strh	r2, [r0, #0]
 800eb3a:	8042      	strh	r2, [r0, #2]
 800eb3c:	8084      	strh	r4, [r0, #4]
 800eb3e:	80c1      	strh	r1, [r0, #6]
 800eb40:	bd10      	pop	{r4, pc}

0800eb42 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
 800eb42:	2200      	movs	r2, #0
 800eb44:	8002      	strh	r2, [r0, #0]
 800eb46:	8042      	strh	r2, [r0, #2]
 800eb48:	8082      	strh	r2, [r0, #4]
 800eb4a:	80c2      	strh	r2, [r0, #6]
 800eb4c:	4770      	bx	lr
	...

0800eb50 <_ZNK8touchgfx12CanvasWidget10getPainterEv>:
 800eb50:	b508      	push	{r3, lr}
 800eb52:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800eb54:	b928      	cbnz	r0, 800eb62 <_ZNK8touchgfx12CanvasWidget10getPainterEv+0x12>
 800eb56:	4b03      	ldr	r3, [pc, #12]	; (800eb64 <_ZNK8touchgfx12CanvasWidget10getPainterEv+0x14>)
 800eb58:	2123      	movs	r1, #35	; 0x23
 800eb5a:	4a03      	ldr	r2, [pc, #12]	; (800eb68 <_ZNK8touchgfx12CanvasWidget10getPainterEv+0x18>)
 800eb5c:	4803      	ldr	r0, [pc, #12]	; (800eb6c <_ZNK8touchgfx12CanvasWidget10getPainterEv+0x1c>)
 800eb5e:	f011 fa3f 	bl	801ffe0 <__assert_func>
 800eb62:	bd08      	pop	{r3, pc}
 800eb64:	08023d04 	.word	0x08023d04
 800eb68:	08023de8 	.word	0x08023de8
 800eb6c:	08023d2b 	.word	0x08023d2b

0800eb70 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800eb70:	b510      	push	{r4, lr}
 800eb72:	f9b1 4000 	ldrsh.w	r4, [r1]
 800eb76:	888a      	ldrh	r2, [r1, #4]
 800eb78:	f9b0 3000 	ldrsh.w	r3, [r0]
 800eb7c:	4422      	add	r2, r4
 800eb7e:	b212      	sxth	r2, r2
 800eb80:	4293      	cmp	r3, r2
 800eb82:	da15      	bge.n	800ebb0 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800eb84:	8882      	ldrh	r2, [r0, #4]
 800eb86:	4413      	add	r3, r2
 800eb88:	b21b      	sxth	r3, r3
 800eb8a:	429c      	cmp	r4, r3
 800eb8c:	da10      	bge.n	800ebb0 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800eb8e:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800eb92:	88c9      	ldrh	r1, [r1, #6]
 800eb94:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800eb98:	4419      	add	r1, r3
 800eb9a:	b209      	sxth	r1, r1
 800eb9c:	428a      	cmp	r2, r1
 800eb9e:	da07      	bge.n	800ebb0 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800eba0:	88c0      	ldrh	r0, [r0, #6]
 800eba2:	4410      	add	r0, r2
 800eba4:	b200      	sxth	r0, r0
 800eba6:	4283      	cmp	r3, r0
 800eba8:	bfac      	ite	ge
 800ebaa:	2000      	movge	r0, #0
 800ebac:	2001      	movlt	r0, #1
 800ebae:	bd10      	pop	{r4, pc}
 800ebb0:	2000      	movs	r0, #0
 800ebb2:	e7fc      	b.n	800ebae <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800ebb4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 800ebb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ebb8:	b08b      	sub	sp, #44	; 0x2c
 800ebba:	4604      	mov	r4, r0
 800ebbc:	6808      	ldr	r0, [r1, #0]
 800ebbe:	f04f 0a00 	mov.w	sl, #0
 800ebc2:	6849      	ldr	r1, [r1, #4]
 800ebc4:	ab04      	add	r3, sp, #16
 800ebc6:	f647 7bff 	movw	fp, #32767	; 0x7fff
 800ebca:	c303      	stmia	r3!, {r0, r1}
 800ebcc:	4b35      	ldr	r3, [pc, #212]	; (800eca4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xf0>)
 800ebce:	4621      	mov	r1, r4
 800ebd0:	a806      	add	r0, sp, #24
 800ebd2:	781b      	ldrb	r3, [r3, #0]
 800ebd4:	2b01      	cmp	r3, #1
 800ebd6:	6823      	ldr	r3, [r4, #0]
 800ebd8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800ebda:	bf1f      	itttt	ne
 800ebdc:	f10d 090e 	addne.w	r9, sp, #14
 800ebe0:	ae05      	addne	r6, sp, #20
 800ebe2:	f10d 0516 	addne.w	r5, sp, #22
 800ebe6:	f10d 0812 	addne.w	r8, sp, #18
 800ebea:	bf01      	itttt	eq
 800ebec:	f10d 0916 	addeq.w	r9, sp, #22
 800ebf0:	f10d 060e 	addeq.w	r6, sp, #14
 800ebf4:	ad05      	addeq	r5, sp, #20
 800ebf6:	f10d 0810 	addeq.w	r8, sp, #16
 800ebfa:	4798      	blx	r3
 800ebfc:	f9b5 3000 	ldrsh.w	r3, [r5]
 800ec00:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 800ec04:	2b00      	cmp	r3, #0
 800ec06:	d042      	beq.n	800ec8e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xda>
 800ec08:	4293      	cmp	r3, r2
 800ec0a:	bfa8      	it	ge
 800ec0c:	4613      	movge	r3, r2
 800ec0e:	f8ad 300e 	strh.w	r3, [sp, #14]
 800ec12:	f9bd 700e 	ldrsh.w	r7, [sp, #14]
 800ec16:	2f00      	cmp	r7, #0
 800ec18:	dd21      	ble.n	800ec5e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xaa>
 800ec1a:	f9bd 0010 	ldrsh.w	r0, [sp, #16]
 800ec1e:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 800ec22:	f9b6 2000 	ldrsh.w	r2, [r6]
 800ec26:	f9b9 3000 	ldrsh.w	r3, [r9]
 800ec2a:	f8ad 0020 	strh.w	r0, [sp, #32]
 800ec2e:	a808      	add	r0, sp, #32
 800ec30:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 800ec34:	a906      	add	r1, sp, #24
 800ec36:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 800ec3a:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800ec3e:	f7ff ff97 	bl	800eb70 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800ec42:	9001      	str	r0, [sp, #4]
 800ec44:	b1d0      	cbz	r0, 800ec7c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xc8>
 800ec46:	6822      	ldr	r2, [r4, #0]
 800ec48:	a908      	add	r1, sp, #32
 800ec4a:	4620      	mov	r0, r4
 800ec4c:	6f52      	ldr	r2, [r2, #116]	; 0x74
 800ec4e:	4790      	blx	r2
 800ec50:	b9a0      	cbnz	r0, 800ec7c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xc8>
 800ec52:	107f      	asrs	r7, r7, #1
 800ec54:	9b01      	ldr	r3, [sp, #4]
 800ec56:	f8ad 700e 	strh.w	r7, [sp, #14]
 800ec5a:	469a      	mov	sl, r3
 800ec5c:	e7d9      	b.n	800ec12 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800ec5e:	d10d      	bne.n	800ec7c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xc8>
 800ec60:	2301      	movs	r3, #1
 800ec62:	f8ad 300e 	strh.w	r3, [sp, #14]
 800ec66:	f8b8 2000 	ldrh.w	r2, [r8]
 800ec6a:	f8bd 100e 	ldrh.w	r1, [sp, #14]
 800ec6e:	440a      	add	r2, r1
 800ec70:	f8a8 2000 	strh.w	r2, [r8]
 800ec74:	882b      	ldrh	r3, [r5, #0]
 800ec76:	1a5b      	subs	r3, r3, r1
 800ec78:	802b      	strh	r3, [r5, #0]
 800ec7a:	e7bf      	b.n	800ebfc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800ec7c:	f1ba 0f00 	cmp.w	sl, #0
 800ec80:	d0f1      	beq.n	800ec66 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xb2>
 800ec82:	f9b4 302c 	ldrsh.w	r3, [r4, #44]	; 0x2c
 800ec86:	455b      	cmp	r3, fp
 800ec88:	bf08      	it	eq
 800ec8a:	85a7      	strheq	r7, [r4, #44]	; 0x2c
 800ec8c:	e7eb      	b.n	800ec66 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xb2>
 800ec8e:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800ec92:	429a      	cmp	r2, r3
 800ec94:	bf04      	itt	eq
 800ec96:	f647 73fe 	movweq	r3, #32766	; 0x7ffe
 800ec9a:	85a3      	strheq	r3, [r4, #44]	; 0x2c
 800ec9c:	b00b      	add	sp, #44	; 0x2c
 800ec9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800eca2:	bf00      	nop
 800eca4:	2400e0ac 	.word	0x2400e0ac

0800eca8 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 800eca8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ecaa:	b085      	sub	sp, #20
 800ecac:	6803      	ldr	r3, [r0, #0]
 800ecae:	4604      	mov	r4, r0
 800ecb0:	4601      	mov	r1, r0
 800ecb2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800ecb4:	4668      	mov	r0, sp
 800ecb6:	4798      	blx	r3
 800ecb8:	f9b4 6008 	ldrsh.w	r6, [r4, #8]
 800ecbc:	f9b4 500a 	ldrsh.w	r5, [r4, #10]
 800ecc0:	2300      	movs	r3, #0
 800ecc2:	a902      	add	r1, sp, #8
 800ecc4:	4668      	mov	r0, sp
 800ecc6:	9302      	str	r3, [sp, #8]
 800ecc8:	f8ad 600c 	strh.w	r6, [sp, #12]
 800eccc:	f8ad 500e 	strh.w	r5, [sp, #14]
 800ecd0:	f7ff ff4e 	bl	800eb70 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800ecd4:	b340      	cbz	r0, 800ed28 <_ZNK8touchgfx12CanvasWidget10invalidateEv+0x80>
 800ecd6:	f9bd 2000 	ldrsh.w	r2, [sp]
 800ecda:	f8bd 7004 	ldrh.w	r7, [sp, #4]
 800ecde:	ea22 70e2 	bic.w	r0, r2, r2, asr #31
 800ece2:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 800ece6:	443a      	add	r2, r7
 800ece8:	ea23 71e3 	bic.w	r1, r3, r3, asr #31
 800ecec:	f8ad 0000 	strh.w	r0, [sp]
 800ecf0:	b292      	uxth	r2, r2
 800ecf2:	f8ad 1002 	strh.w	r1, [sp, #2]
 800ecf6:	b217      	sxth	r7, r2
 800ecf8:	42be      	cmp	r6, r7
 800ecfa:	bfd8      	it	le
 800ecfc:	b2b2      	uxthle	r2, r6
 800ecfe:	1a12      	subs	r2, r2, r0
 800ed00:	f8ad 2004 	strh.w	r2, [sp, #4]
 800ed04:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800ed08:	4413      	add	r3, r2
 800ed0a:	b29b      	uxth	r3, r3
 800ed0c:	b21a      	sxth	r2, r3
 800ed0e:	4295      	cmp	r5, r2
 800ed10:	bfd8      	it	le
 800ed12:	b2ab      	uxthle	r3, r5
 800ed14:	1a5b      	subs	r3, r3, r1
 800ed16:	f8ad 3006 	strh.w	r3, [sp, #6]
 800ed1a:	6823      	ldr	r3, [r4, #0]
 800ed1c:	4669      	mov	r1, sp
 800ed1e:	4620      	mov	r0, r4
 800ed20:	691b      	ldr	r3, [r3, #16]
 800ed22:	4798      	blx	r3
 800ed24:	b005      	add	sp, #20
 800ed26:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ed28:	e9cd 0000 	strd	r0, r0, [sp]
 800ed2c:	e7f5      	b.n	800ed1a <_ZNK8touchgfx12CanvasWidget10invalidateEv+0x72>
	...

0800ed30 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 800ed30:	2101      	movs	r1, #1
 800ed32:	2200      	movs	r2, #0
 800ed34:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800ed38:	490c      	ldr	r1, [pc, #48]	; (800ed6c <_ZN8touchgfx12CanvasWidgetC1Ev+0x3c>)
 800ed3a:	8082      	strh	r2, [r0, #4]
 800ed3c:	80c2      	strh	r2, [r0, #6]
 800ed3e:	8102      	strh	r2, [r0, #8]
 800ed40:	8142      	strh	r2, [r0, #10]
 800ed42:	8182      	strh	r2, [r0, #12]
 800ed44:	81c2      	strh	r2, [r0, #14]
 800ed46:	8202      	strh	r2, [r0, #16]
 800ed48:	8242      	strh	r2, [r0, #18]
 800ed4a:	61c2      	str	r2, [r0, #28]
 800ed4c:	8402      	strh	r2, [r0, #32]
 800ed4e:	8442      	strh	r2, [r0, #34]	; 0x22
 800ed50:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800ed54:	6001      	str	r1, [r0, #0]
 800ed56:	21ff      	movs	r1, #255	; 0xff
 800ed58:	6282      	str	r2, [r0, #40]	; 0x28
 800ed5a:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 800ed5e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800ed62:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800ed66:	8582      	strh	r2, [r0, #44]	; 0x2c
 800ed68:	4770      	bx	lr
 800ed6a:	bf00      	nop
 800ed6c:	08023d70 	.word	0x08023d70

0800ed70 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800ed70:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800ed74:	4770      	bx	lr

0800ed76 <_ZN8touchgfx12ToggleButtonD1Ev>:
 800ed76:	4770      	bx	lr

0800ed78 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE>:
 800ed78:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800ed7c:	b133      	cbz	r3, 800ed8c <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE+0x14>
 800ed7e:	790b      	ldrb	r3, [r1, #4]
 800ed80:	2b01      	cmp	r3, #1
 800ed82:	bf01      	itttt	eq
 800ed84:	8dc3      	ldrheq	r3, [r0, #46]	; 0x2e
 800ed86:	8e02      	ldrheq	r2, [r0, #48]	; 0x30
 800ed88:	8603      	strheq	r3, [r0, #48]	; 0x30
 800ed8a:	85c2      	strheq	r2, [r0, #46]	; 0x2e
 800ed8c:	f00e bfa8 	b.w	801dce0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>

0800ed90 <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>:
 800ed90:	8813      	ldrh	r3, [r2, #0]
 800ed92:	8683      	strh	r3, [r0, #52]	; 0x34
 800ed94:	f000 be6c 	b.w	800fa70 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>

0800ed98 <_ZN8touchgfx12ToggleButtonD0Ev>:
 800ed98:	b510      	push	{r4, lr}
 800ed9a:	4604      	mov	r4, r0
 800ed9c:	2138      	movs	r1, #56	; 0x38
 800ed9e:	f010 ff26 	bl	801fbee <_ZdlPvj>
 800eda2:	4620      	mov	r0, r4
 800eda4:	bd10      	pop	{r4, pc}

0800eda6 <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800eda6:	b510      	push	{r4, lr}
 800eda8:	4604      	mov	r4, r0
 800edaa:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800edac:	b150      	cbz	r0, 800edc4 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800edae:	6803      	ldr	r3, [r0, #0]
 800edb0:	68db      	ldr	r3, [r3, #12]
 800edb2:	4798      	blx	r3
 800edb4:	b130      	cbz	r0, 800edc4 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800edb6:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800edb8:	4621      	mov	r1, r4
 800edba:	6803      	ldr	r3, [r0, #0]
 800edbc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800edc0:	689b      	ldr	r3, [r3, #8]
 800edc2:	4718      	bx	r3
 800edc4:	bd10      	pop	{r4, pc}

0800edc6 <_ZNK8touchgfx6Button17invalidateContentEv>:
 800edc6:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 800edca:	b12a      	cbz	r2, 800edd8 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800edcc:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800edd0:	b112      	cbz	r2, 800edd8 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800edd2:	6803      	ldr	r3, [r0, #0]
 800edd4:	695b      	ldr	r3, [r3, #20]
 800edd6:	4718      	bx	r3
 800edd8:	4770      	bx	lr

0800edda <_ZN8touchgfx12ToggleButton10forceStateEb>:
 800edda:	b570      	push	{r4, r5, r6, lr}
 800eddc:	4604      	mov	r4, r0
 800edde:	f100 0534 	add.w	r5, r0, #52	; 0x34
 800ede2:	b169      	cbz	r1, 800ee00 <_ZN8touchgfx12ToggleButton10forceStateEb+0x26>
 800ede4:	302e      	adds	r0, #46	; 0x2e
 800ede6:	f7f4 ffdf 	bl	8003da8 <_ZNK8touchgfx6Bitmap5getIdEv>
 800edea:	4606      	mov	r6, r0
 800edec:	4628      	mov	r0, r5
 800edee:	f7f4 ffdb 	bl	8003da8 <_ZNK8touchgfx6Bitmap5getIdEv>
 800edf2:	4286      	cmp	r6, r0
 800edf4:	d003      	beq.n	800edfe <_ZN8touchgfx12ToggleButton10forceStateEb+0x24>
 800edf6:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 800edf8:	8623      	strh	r3, [r4, #48]	; 0x30
 800edfa:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800edfc:	85e3      	strh	r3, [r4, #46]	; 0x2e
 800edfe:	bd70      	pop	{r4, r5, r6, pc}
 800ee00:	3030      	adds	r0, #48	; 0x30
 800ee02:	f7f4 ffd1 	bl	8003da8 <_ZNK8touchgfx6Bitmap5getIdEv>
 800ee06:	4606      	mov	r6, r0
 800ee08:	4628      	mov	r0, r5
 800ee0a:	f7f4 ffcd 	bl	8003da8 <_ZNK8touchgfx6Bitmap5getIdEv>
 800ee0e:	4286      	cmp	r6, r0
 800ee10:	bf1f      	itttt	ne
 800ee12:	8e23      	ldrhne	r3, [r4, #48]	; 0x30
 800ee14:	85e3      	strhne	r3, [r4, #46]	; 0x2e
 800ee16:	8ea3      	ldrhne	r3, [r4, #52]	; 0x34
 800ee18:	8623      	strhne	r3, [r4, #48]	; 0x30
 800ee1a:	e7f0      	b.n	800edfe <_ZN8touchgfx12ToggleButton10forceStateEb+0x24>

0800ee1c <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 800ee1c:	2000      	movs	r0, #0
 800ee1e:	4770      	bx	lr

0800ee20 <_ZN8touchgfx8TextAreaD1Ev>:
 800ee20:	4770      	bx	lr
	...

0800ee24 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800ee24:	4b1b      	ldr	r3, [pc, #108]	; (800ee94 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800ee26:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800ee2a:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800ee2c:	4604      	mov	r4, r0
 800ee2e:	881b      	ldrh	r3, [r3, #0]
 800ee30:	428b      	cmp	r3, r1
 800ee32:	d92d      	bls.n	800ee90 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>
 800ee34:	4b18      	ldr	r3, [pc, #96]	; (800ee98 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x74>)
 800ee36:	681b      	ldr	r3, [r3, #0]
 800ee38:	b92b      	cbnz	r3, 800ee46 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x22>
 800ee3a:	4b18      	ldr	r3, [pc, #96]	; (800ee9c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x78>)
 800ee3c:	21ae      	movs	r1, #174	; 0xae
 800ee3e:	4a18      	ldr	r2, [pc, #96]	; (800eea0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x7c>)
 800ee40:	4818      	ldr	r0, [pc, #96]	; (800eea4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x80>)
 800ee42:	f011 f8cd 	bl	801ffe0 <__assert_func>
 800ee46:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800ee4a:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800ee4e:	4b16      	ldr	r3, [pc, #88]	; (800eea8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x84>)
 800ee50:	7855      	ldrb	r5, [r2, #1]
 800ee52:	681b      	ldr	r3, [r3, #0]
 800ee54:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800ee58:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800ee5c:	6833      	ldr	r3, [r6, #0]
 800ee5e:	69df      	ldr	r7, [r3, #28]
 800ee60:	4b12      	ldr	r3, [pc, #72]	; (800eeac <_ZNK8touchgfx8TextArea12getTextWidthEv+0x88>)
 800ee62:	6818      	ldr	r0, [r3, #0]
 800ee64:	f7f4 fdd2 	bl	8003a0c <_ZNK8touchgfx5Texts7getTextEt>
 800ee68:	6823      	ldr	r3, [r4, #0]
 800ee6a:	4680      	mov	r8, r0
 800ee6c:	4620      	mov	r0, r4
 800ee6e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800ee70:	4798      	blx	r3
 800ee72:	6823      	ldr	r3, [r4, #0]
 800ee74:	4681      	mov	r9, r0
 800ee76:	4620      	mov	r0, r4
 800ee78:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800ee7c:	4798      	blx	r3
 800ee7e:	464b      	mov	r3, r9
 800ee80:	9000      	str	r0, [sp, #0]
 800ee82:	4642      	mov	r2, r8
 800ee84:	4629      	mov	r1, r5
 800ee86:	4630      	mov	r0, r6
 800ee88:	47b8      	blx	r7
 800ee8a:	b003      	add	sp, #12
 800ee8c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ee90:	2000      	movs	r0, #0
 800ee92:	e7fa      	b.n	800ee8a <_ZNK8touchgfx8TextArea12getTextWidthEv+0x66>
 800ee94:	2400e128 	.word	0x2400e128
 800ee98:	2400e124 	.word	0x2400e124
 800ee9c:	08022ec0 	.word	0x08022ec0
 800eea0:	08023f3c 	.word	0x08023f3c
 800eea4:	08022f02 	.word	0x08022f02
 800eea8:	2400e12c 	.word	0x2400e12c
 800eeac:	2400e130 	.word	0x2400e130

0800eeb0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800eeb0:	b40e      	push	{r1, r2, r3}
 800eeb2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eeb6:	f8df 90f0 	ldr.w	r9, [pc, #240]	; 800efa8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf8>
 800eeba:	b09c      	sub	sp, #112	; 0x70
 800eebc:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800eebe:	4604      	mov	r4, r0
 800eec0:	f8b9 3000 	ldrh.w	r3, [r9]
 800eec4:	4293      	cmp	r3, r2
 800eec6:	d965      	bls.n	800ef94 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe4>
 800eec8:	ab26      	add	r3, sp, #152	; 0x98
 800eeca:	f8df a0e0 	ldr.w	sl, [pc, #224]	; 800efac <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xfc>
 800eece:	9302      	str	r3, [sp, #8]
 800eed0:	f8da 3000 	ldr.w	r3, [sl]
 800eed4:	b92b      	cbnz	r3, 800eee2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x32>
 800eed6:	4b30      	ldr	r3, [pc, #192]	; (800ef98 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe8>)
 800eed8:	21ae      	movs	r1, #174	; 0xae
 800eeda:	4a30      	ldr	r2, [pc, #192]	; (800ef9c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xec>)
 800eedc:	4830      	ldr	r0, [pc, #192]	; (800efa0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf0>)
 800eede:	f011 f87f 	bl	801ffe0 <__assert_func>
 800eee2:	f8df 80cc 	ldr.w	r8, [pc, #204]	; 800efb0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x100>
 800eee6:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800eeea:	f8d8 3000 	ldr.w	r3, [r8]
 800eeee:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800eef2:	682b      	ldr	r3, [r5, #0]
 800eef4:	4628      	mov	r0, r5
 800eef6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800eef8:	4798      	blx	r3
 800eefa:	4606      	mov	r6, r0
 800eefc:	b207      	sxth	r7, r0
 800eefe:	a803      	add	r0, sp, #12
 800ef00:	f004 fb04 	bl	801350c <_ZN8touchgfx12TextProviderC1Ev>
 800ef04:	682b      	ldr	r3, [r5, #0]
 800ef06:	4628      	mov	r0, r5
 800ef08:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ef0a:	4798      	blx	r3
 800ef0c:	682b      	ldr	r3, [r5, #0]
 800ef0e:	4683      	mov	fp, r0
 800ef10:	4628      	mov	r0, r5
 800ef12:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800ef14:	4798      	blx	r3
 800ef16:	465b      	mov	r3, fp
 800ef18:	9000      	str	r0, [sp, #0]
 800ef1a:	a803      	add	r0, sp, #12
 800ef1c:	9925      	ldr	r1, [sp, #148]	; 0x94
 800ef1e:	9a02      	ldr	r2, [sp, #8]
 800ef20:	f004 fb60 	bl	80135e4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800ef24:	f8da 3000 	ldr.w	r3, [sl]
 800ef28:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 800ef2c:	2b00      	cmp	r3, #0
 800ef2e:	d0d2      	beq.n	800eed6 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x26>
 800ef30:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800ef32:	f8b9 0000 	ldrh.w	r0, [r9]
 800ef36:	4290      	cmp	r0, r2
 800ef38:	d926      	bls.n	800ef88 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xd8>
 800ef3a:	eb03 0542 	add.w	r5, r3, r2, lsl #1
 800ef3e:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800ef42:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 800ef46:	786a      	ldrb	r2, [r5, #1]
 800ef48:	8925      	ldrh	r5, [r4, #8]
 800ef4a:	f8d8 3000 	ldr.w	r3, [r8]
 800ef4e:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800ef52:	eba5 050c 	sub.w	r5, r5, ip
 800ef56:	b22d      	sxth	r5, r5
 800ef58:	9500      	str	r5, [sp, #0]
 800ef5a:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800ef5e:	a803      	add	r0, sp, #12
 800ef60:	f002 f86e 	bl	8011040 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800ef64:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 800ef68:	b203      	sxth	r3, r0
 800ef6a:	18b9      	adds	r1, r7, r2
 800ef6c:	2900      	cmp	r1, #0
 800ef6e:	dd0f      	ble.n	800ef90 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe0>
 800ef70:	3b01      	subs	r3, #1
 800ef72:	fb13 f302 	smulbb	r3, r3, r2
 800ef76:	fb16 3300 	smlabb	r3, r6, r0, r3
 800ef7a:	b21f      	sxth	r7, r3
 800ef7c:	4638      	mov	r0, r7
 800ef7e:	b01c      	add	sp, #112	; 0x70
 800ef80:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ef84:	b003      	add	sp, #12
 800ef86:	4770      	bx	lr
 800ef88:	4b06      	ldr	r3, [pc, #24]	; (800efa4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf4>)
 800ef8a:	21af      	movs	r1, #175	; 0xaf
 800ef8c:	4a03      	ldr	r2, [pc, #12]	; (800ef9c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xec>)
 800ef8e:	e7a5      	b.n	800eedc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x2c>
 800ef90:	2b00      	cmp	r3, #0
 800ef92:	dcf3      	bgt.n	800ef7c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800ef94:	2700      	movs	r7, #0
 800ef96:	e7f1      	b.n	800ef7c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800ef98:	08022ec0 	.word	0x08022ec0
 800ef9c:	08023f3c 	.word	0x08023f3c
 800efa0:	08022f02 	.word	0x08022f02
 800efa4:	08022f2b 	.word	0x08022f2b
 800efa8:	2400e128 	.word	0x2400e128
 800efac:	2400e124 	.word	0x2400e124
 800efb0:	2400e12c 	.word	0x2400e12c

0800efb4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 800efb4:	4b6d      	ldr	r3, [pc, #436]	; (800f16c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b8>)
 800efb6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800efba:	460c      	mov	r4, r1
 800efbc:	881a      	ldrh	r2, [r3, #0]
 800efbe:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 800efc0:	b0b9      	sub	sp, #228	; 0xe4
 800efc2:	4681      	mov	r9, r0
 800efc4:	428a      	cmp	r2, r1
 800efc6:	9302      	str	r3, [sp, #8]
 800efc8:	d809      	bhi.n	800efde <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2a>
 800efca:	2300      	movs	r3, #0
 800efcc:	f04f 32ff 	mov.w	r2, #4294967295
 800efd0:	6083      	str	r3, [r0, #8]
 800efd2:	e9c0 3200 	strd	r3, r2, [r0]
 800efd6:	4648      	mov	r0, r9
 800efd8:	b039      	add	sp, #228	; 0xe4
 800efda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800efde:	4a64      	ldr	r2, [pc, #400]	; (800f170 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1bc>)
 800efe0:	6813      	ldr	r3, [r2, #0]
 800efe2:	4692      	mov	sl, r2
 800efe4:	b92b      	cbnz	r3, 800eff2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x3e>
 800efe6:	4b63      	ldr	r3, [pc, #396]	; (800f174 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1c0>)
 800efe8:	21ae      	movs	r1, #174	; 0xae
 800efea:	4a63      	ldr	r2, [pc, #396]	; (800f178 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1c4>)
 800efec:	4863      	ldr	r0, [pc, #396]	; (800f17c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1c8>)
 800efee:	f010 fff7 	bl	801ffe0 <__assert_func>
 800eff2:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800eff6:	4b62      	ldr	r3, [pc, #392]	; (800f180 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1cc>)
 800eff8:	f8df b18c 	ldr.w	fp, [pc, #396]	; 800f188 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1d4>
 800effc:	681b      	ldr	r3, [r3, #0]
 800effe:	f8db 0000 	ldr.w	r0, [fp]
 800f002:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800f006:	f7f4 fd01 	bl	8003a0c <_ZNK8touchgfx5Texts7getTextEt>
 800f00a:	4680      	mov	r8, r0
 800f00c:	682b      	ldr	r3, [r5, #0]
 800f00e:	4628      	mov	r0, r5
 800f010:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800f012:	4798      	blx	r3
 800f014:	8ea6      	ldrh	r6, [r4, #52]	; 0x34
 800f016:	f894 7039 	ldrb.w	r7, [r4, #57]	; 0x39
 800f01a:	4406      	add	r6, r0
 800f01c:	f8cd b00c 	str.w	fp, [sp, #12]
 800f020:	b2b6      	uxth	r6, r6
 800f022:	2f00      	cmp	r7, #0
 800f024:	f040 80b2 	bne.w	800f18c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1d8>
 800f028:	a806      	add	r0, sp, #24
 800f02a:	f004 fa6f 	bl	801350c <_ZN8touchgfx12TextProviderC1Ev>
 800f02e:	682b      	ldr	r3, [r5, #0]
 800f030:	4628      	mov	r0, r5
 800f032:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800f034:	4798      	blx	r3
 800f036:	682b      	ldr	r3, [r5, #0]
 800f038:	4683      	mov	fp, r0
 800f03a:	4628      	mov	r0, r5
 800f03c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800f03e:	4798      	blx	r3
 800f040:	6822      	ldr	r2, [r4, #0]
 800f042:	9005      	str	r0, [sp, #20]
 800f044:	4620      	mov	r0, r4
 800f046:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 800f048:	4790      	blx	r2
 800f04a:	6821      	ldr	r1, [r4, #0]
 800f04c:	9004      	str	r0, [sp, #16]
 800f04e:	4620      	mov	r0, r4
 800f050:	f8d1 1080 	ldr.w	r1, [r1, #128]	; 0x80
 800f054:	4788      	blx	r1
 800f056:	9a04      	ldr	r2, [sp, #16]
 800f058:	4641      	mov	r1, r8
 800f05a:	46b8      	mov	r8, r7
 800f05c:	9001      	str	r0, [sp, #4]
 800f05e:	a806      	add	r0, sp, #24
 800f060:	9200      	str	r2, [sp, #0]
 800f062:	465a      	mov	r2, fp
 800f064:	9b05      	ldr	r3, [sp, #20]
 800f066:	f004 fad2 	bl	801360e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800f06a:	f8da 3000 	ldr.w	r3, [sl]
 800f06e:	2b00      	cmp	r3, #0
 800f070:	d0b9      	beq.n	800efe6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x32>
 800f072:	9902      	ldr	r1, [sp, #8]
 800f074:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800f076:	8809      	ldrh	r1, [r1, #0]
 800f078:	4291      	cmp	r1, r2
 800f07a:	d803      	bhi.n	800f084 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xd0>
 800f07c:	4b41      	ldr	r3, [pc, #260]	; (800f184 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1d0>)
 800f07e:	21af      	movs	r1, #175	; 0xaf
 800f080:	4a3d      	ldr	r2, [pc, #244]	; (800f178 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1c4>)
 800f082:	e7b3      	b.n	800efec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x38>
 800f084:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800f088:	4629      	mov	r1, r5
 800f08a:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800f08e:	a806      	add	r0, sp, #24
 800f090:	785b      	ldrb	r3, [r3, #1]
 800f092:	3701      	adds	r7, #1
 800f094:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800f098:	b2bf      	uxth	r7, r7
 800f09a:	f001 fd25 	bl	8010ae8 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800f09e:	4580      	cmp	r8, r0
 800f0a0:	bfb8      	it	lt
 800f0a2:	fa0f f880 	sxthlt.w	r8, r0
 800f0a6:	a806      	add	r0, sp, #24
 800f0a8:	f004 fa58 	bl	801355c <_ZN8touchgfx12TextProvider11endOfStringEv>
 800f0ac:	2800      	cmp	r0, #0
 800f0ae:	d0dc      	beq.n	800f06a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xb6>
 800f0b0:	fb16 f607 	smulbb	r6, r6, r7
 800f0b4:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 800f0b6:	1bf6      	subs	r6, r6, r7
 800f0b8:	b2b6      	uxth	r6, r6
 800f0ba:	fa0f fb86 	sxth.w	fp, r6
 800f0be:	f1bb 0f00 	cmp.w	fp, #0
 800f0c2:	dd06      	ble.n	800f0d2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x11e>
 800f0c4:	682b      	ldr	r3, [r5, #0]
 800f0c6:	4628      	mov	r0, r5
 800f0c8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800f0ca:	4798      	blx	r3
 800f0cc:	4430      	add	r0, r6
 800f0ce:	fa0f fb80 	sxth.w	fp, r0
 800f0d2:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800f0d6:	4620      	mov	r0, r4
 800f0d8:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800f0dc:	6823      	ldr	r3, [r4, #0]
 800f0de:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800f0e0:	bf0c      	ite	eq
 800f0e2:	f9b4 6008 	ldrsheq.w	r6, [r4, #8]
 800f0e6:	f9b4 600a 	ldrshne.w	r6, [r4, #10]
 800f0ea:	4798      	blx	r3
 800f0ec:	2801      	cmp	r0, #1
 800f0ee:	fa1f f288 	uxth.w	r2, r8
 800f0f2:	f000 80f7 	beq.w	800f2e4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x330>
 800f0f6:	2802      	cmp	r0, #2
 800f0f8:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 800f0fc:	f000 80f9 	beq.w	800f2f2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x33e>
 800f100:	7a29      	ldrb	r1, [r5, #8]
 800f102:	b21b      	sxth	r3, r3
 800f104:	7a68      	ldrb	r0, [r5, #9]
 800f106:	1a5b      	subs	r3, r3, r1
 800f108:	4401      	add	r1, r0
 800f10a:	b29b      	uxth	r3, r3
 800f10c:	440a      	add	r2, r1
 800f10e:	f894 1038 	ldrb.w	r1, [r4, #56]	; 0x38
 800f112:	b21e      	sxth	r6, r3
 800f114:	b292      	uxth	r2, r2
 800f116:	2902      	cmp	r1, #2
 800f118:	b217      	sxth	r7, r2
 800f11a:	f000 80ed 	beq.w	800f2f8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x344>
 800f11e:	2903      	cmp	r1, #3
 800f120:	f000 80f3 	beq.w	800f30a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x356>
 800f124:	2901      	cmp	r1, #1
 800f126:	f040 80f9 	bne.w	800f31c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x368>
 800f12a:	8923      	ldrh	r3, [r4, #8]
 800f12c:	463a      	mov	r2, r7
 800f12e:	4635      	mov	r5, r6
 800f130:	465f      	mov	r7, fp
 800f132:	eba3 030b 	sub.w	r3, r3, fp
 800f136:	4693      	mov	fp, r2
 800f138:	b21e      	sxth	r6, r3
 800f13a:	f8da 3000 	ldr.w	r3, [sl]
 800f13e:	2b00      	cmp	r3, #0
 800f140:	f43f af51 	beq.w	800efe6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x32>
 800f144:	9b02      	ldr	r3, [sp, #8]
 800f146:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800f148:	881b      	ldrh	r3, [r3, #0]
 800f14a:	428b      	cmp	r3, r1
 800f14c:	d996      	bls.n	800f07c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xc8>
 800f14e:	9b03      	ldr	r3, [sp, #12]
 800f150:	6818      	ldr	r0, [r3, #0]
 800f152:	f7f4 fc5b 	bl	8003a0c <_ZNK8touchgfx5Texts7getTextEt>
 800f156:	f8a9 6000 	strh.w	r6, [r9]
 800f15a:	f8a9 5002 	strh.w	r5, [r9, #2]
 800f15e:	f8a9 7004 	strh.w	r7, [r9, #4]
 800f162:	f8a9 b006 	strh.w	fp, [r9, #6]
 800f166:	f8c9 0008 	str.w	r0, [r9, #8]
 800f16a:	e734      	b.n	800efd6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x22>
 800f16c:	2400e128 	.word	0x2400e128
 800f170:	2400e124 	.word	0x2400e124
 800f174:	08022ec0 	.word	0x08022ec0
 800f178:	08023f3c 	.word	0x08023f3c
 800f17c:	08022f02 	.word	0x08022f02
 800f180:	2400e12c 	.word	0x2400e12c
 800f184:	08022f2b 	.word	0x08022f2b
 800f188:	2400e130 	.word	0x2400e130
 800f18c:	af1f      	add	r7, sp, #124	; 0x7c
 800f18e:	4638      	mov	r0, r7
 800f190:	f004 f9bc 	bl	801350c <_ZN8touchgfx12TextProviderC1Ev>
 800f194:	682b      	ldr	r3, [r5, #0]
 800f196:	4628      	mov	r0, r5
 800f198:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800f19a:	4798      	blx	r3
 800f19c:	682b      	ldr	r3, [r5, #0]
 800f19e:	4683      	mov	fp, r0
 800f1a0:	4628      	mov	r0, r5
 800f1a2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800f1a4:	4798      	blx	r3
 800f1a6:	6822      	ldr	r2, [r4, #0]
 800f1a8:	9005      	str	r0, [sp, #20]
 800f1aa:	4620      	mov	r0, r4
 800f1ac:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 800f1ae:	4790      	blx	r2
 800f1b0:	6821      	ldr	r1, [r4, #0]
 800f1b2:	9004      	str	r0, [sp, #16]
 800f1b4:	4620      	mov	r0, r4
 800f1b6:	f8d1 1080 	ldr.w	r1, [r1, #128]	; 0x80
 800f1ba:	4788      	blx	r1
 800f1bc:	9a04      	ldr	r2, [sp, #16]
 800f1be:	9001      	str	r0, [sp, #4]
 800f1c0:	4641      	mov	r1, r8
 800f1c2:	9200      	str	r2, [sp, #0]
 800f1c4:	4638      	mov	r0, r7
 800f1c6:	465a      	mov	r2, fp
 800f1c8:	9b05      	ldr	r3, [sp, #20]
 800f1ca:	f004 fa20 	bl	801360e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800f1ce:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800f1d2:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800f1d6:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800f1da:	f9b4 b008 	ldrsh.w	fp, [r4, #8]
 800f1de:	bf12      	itee	ne
 800f1e0:	4613      	movne	r3, r2
 800f1e2:	465b      	moveq	r3, fp
 800f1e4:	4693      	moveq	fp, r2
 800f1e6:	f894 2037 	ldrb.w	r2, [r4, #55]	; 0x37
 800f1ea:	1a9b      	subs	r3, r3, r2
 800f1ec:	b29a      	uxth	r2, r3
 800f1ee:	f8da 3000 	ldr.w	r3, [sl]
 800f1f2:	2b00      	cmp	r3, #0
 800f1f4:	f43f aef7 	beq.w	800efe6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x32>
 800f1f8:	9802      	ldr	r0, [sp, #8]
 800f1fa:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800f1fc:	8800      	ldrh	r0, [r0, #0]
 800f1fe:	4288      	cmp	r0, r1
 800f200:	f67f af3c 	bls.w	800f07c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xc8>
 800f204:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800f208:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 800f20c:	7859      	ldrb	r1, [r3, #1]
 800f20e:	2300      	movs	r3, #0
 800f210:	9707      	str	r7, [sp, #28]
 800f212:	f3c1 0181 	ubfx	r1, r1, #2, #2
 800f216:	f8ad 3018 	strh.w	r3, [sp, #24]
 800f21a:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800f21e:	f88d 1020 	strb.w	r1, [sp, #32]
 800f222:	9509      	str	r5, [sp, #36]	; 0x24
 800f224:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 800f228:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 800f22c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800f230:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800f234:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800f238:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800f23c:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800f240:	f88d 3036 	strb.w	r3, [sp, #54]	; 0x36
 800f244:	b350      	cbz	r0, 800f29c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2e8>
 800f246:	682b      	ldr	r3, [r5, #0]
 800f248:	4628      	mov	r0, r5
 800f24a:	695b      	ldr	r3, [r3, #20]
 800f24c:	4798      	blx	r3
 800f24e:	4680      	mov	r8, r0
 800f250:	b320      	cbz	r0, 800f29c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2e8>
 800f252:	9809      	ldr	r0, [sp, #36]	; 0x24
 800f254:	4641      	mov	r1, r8
 800f256:	6803      	ldr	r3, [r0, #0]
 800f258:	68db      	ldr	r3, [r3, #12]
 800f25a:	4798      	blx	r3
 800f25c:	4607      	mov	r7, r0
 800f25e:	b1e8      	cbz	r0, 800f29c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2e8>
 800f260:	7b43      	ldrb	r3, [r0, #13]
 800f262:	7a82      	ldrb	r2, [r0, #10]
 800f264:	005b      	lsls	r3, r3, #1
 800f266:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800f26a:	4313      	orrs	r3, r2
 800f26c:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800f270:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 800f274:	2b04      	cmp	r3, #4
 800f276:	d111      	bne.n	800f29c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2e8>
 800f278:	9809      	ldr	r0, [sp, #36]	; 0x24
 800f27a:	463a      	mov	r2, r7
 800f27c:	4641      	mov	r1, r8
 800f27e:	6803      	ldr	r3, [r0, #0]
 800f280:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800f282:	4798      	blx	r3
 800f284:	7b7b      	ldrb	r3, [r7, #13]
 800f286:	005b      	lsls	r3, r3, #1
 800f288:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800f28c:	7abb      	ldrb	r3, [r7, #10]
 800f28e:	4313      	orrs	r3, r2
 800f290:	4418      	add	r0, r3
 800f292:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 800f296:	4418      	add	r0, r3
 800f298:	f8ad 0034 	strh.w	r0, [sp, #52]	; 0x34
 800f29c:	b233      	sxth	r3, r6
 800f29e:	2700      	movs	r7, #0
 800f2a0:	005a      	lsls	r2, r3, #1
 800f2a2:	46b8      	mov	r8, r7
 800f2a4:	455a      	cmp	r2, fp
 800f2a6:	a806      	add	r0, sp, #24
 800f2a8:	9305      	str	r3, [sp, #20]
 800f2aa:	f107 0701 	add.w	r7, r7, #1
 800f2ae:	bfd4      	ite	le
 800f2b0:	2100      	movle	r1, #0
 800f2b2:	2101      	movgt	r1, #1
 800f2b4:	9204      	str	r2, [sp, #16]
 800f2b6:	f001 fdf4 	bl	8010ea2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800f2ba:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 800f2be:	ebab 0b06 	sub.w	fp, fp, r6
 800f2c2:	b2bf      	uxth	r7, r7
 800f2c4:	4588      	cmp	r8, r1
 800f2c6:	fa0f fb8b 	sxth.w	fp, fp
 800f2ca:	bfb8      	it	lt
 800f2cc:	fa0f f881 	sxthlt.w	r8, r1
 800f2d0:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 800f2d4:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800f2d8:	2900      	cmp	r1, #0
 800f2da:	f43f aee9 	beq.w	800f0b0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 800f2de:	455b      	cmp	r3, fp
 800f2e0:	dbe0      	blt.n	800f2a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f0>
 800f2e2:	e6e5      	b.n	800f0b0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 800f2e4:	eba6 0308 	sub.w	r3, r6, r8
 800f2e8:	f04f 0802 	mov.w	r8, #2
 800f2ec:	fb93 f3f8 	sdiv	r3, r3, r8
 800f2f0:	e706      	b.n	800f100 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14c>
 800f2f2:	4413      	add	r3, r2
 800f2f4:	1af3      	subs	r3, r6, r3
 800f2f6:	e703      	b.n	800f100 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14c>
 800f2f8:	8926      	ldrh	r6, [r4, #8]
 800f2fa:	8965      	ldrh	r5, [r4, #10]
 800f2fc:	1ab2      	subs	r2, r6, r2
 800f2fe:	eba5 050b 	sub.w	r5, r5, fp
 800f302:	1ad3      	subs	r3, r2, r3
 800f304:	b22d      	sxth	r5, r5
 800f306:	b21e      	sxth	r6, r3
 800f308:	e717      	b.n	800f13a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x186>
 800f30a:	8965      	ldrh	r5, [r4, #10]
 800f30c:	2600      	movs	r6, #0
 800f30e:	1aaa      	subs	r2, r5, r2
 800f310:	1ad3      	subs	r3, r2, r3
 800f312:	b21d      	sxth	r5, r3
 800f314:	463b      	mov	r3, r7
 800f316:	465f      	mov	r7, fp
 800f318:	469b      	mov	fp, r3
 800f31a:	e70e      	b.n	800f13a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x186>
 800f31c:	2500      	movs	r5, #0
 800f31e:	e70c      	b.n	800f13a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x186>

0800f320 <_ZN8touchgfx8TextAreaD0Ev>:
 800f320:	b510      	push	{r4, lr}
 800f322:	4604      	mov	r4, r0
 800f324:	2148      	movs	r1, #72	; 0x48
 800f326:	f010 fc62 	bl	801fbee <_ZdlPvj>
 800f32a:	4620      	mov	r0, r4
 800f32c:	bd10      	pop	{r4, pc}
	...

0800f330 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 800f330:	b508      	push	{r3, lr}
 800f332:	4b0b      	ldr	r3, [pc, #44]	; (800f360 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x30>)
 800f334:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800f336:	881b      	ldrh	r3, [r3, #0]
 800f338:	4293      	cmp	r3, r2
 800f33a:	d90e      	bls.n	800f35a <_ZNK8touchgfx8TextArea12getAlignmentEv+0x2a>
 800f33c:	4b09      	ldr	r3, [pc, #36]	; (800f364 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x34>)
 800f33e:	681b      	ldr	r3, [r3, #0]
 800f340:	b92b      	cbnz	r3, 800f34e <_ZNK8touchgfx8TextArea12getAlignmentEv+0x1e>
 800f342:	4b09      	ldr	r3, [pc, #36]	; (800f368 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x38>)
 800f344:	21ae      	movs	r1, #174	; 0xae
 800f346:	4a09      	ldr	r2, [pc, #36]	; (800f36c <_ZNK8touchgfx8TextArea12getAlignmentEv+0x3c>)
 800f348:	4809      	ldr	r0, [pc, #36]	; (800f370 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x40>)
 800f34a:	f010 fe49 	bl	801ffe0 <__assert_func>
 800f34e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800f352:	7858      	ldrb	r0, [r3, #1]
 800f354:	f000 0003 	and.w	r0, r0, #3
 800f358:	bd08      	pop	{r3, pc}
 800f35a:	2000      	movs	r0, #0
 800f35c:	e7fc      	b.n	800f358 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x28>
 800f35e:	bf00      	nop
 800f360:	2400e128 	.word	0x2400e128
 800f364:	2400e124 	.word	0x2400e124
 800f368:	08022ec0 	.word	0x08022ec0
 800f36c:	08023f3c 	.word	0x08023f3c
 800f370:	08022f02 	.word	0x08022f02

0800f374 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 800f374:	4b16      	ldr	r3, [pc, #88]	; (800f3d0 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x5c>)
 800f376:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f37a:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800f37c:	4604      	mov	r4, r0
 800f37e:	881b      	ldrh	r3, [r3, #0]
 800f380:	428b      	cmp	r3, r1
 800f382:	d921      	bls.n	800f3c8 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x54>
 800f384:	6803      	ldr	r3, [r0, #0]
 800f386:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 800f388:	4b12      	ldr	r3, [pc, #72]	; (800f3d4 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x60>)
 800f38a:	681b      	ldr	r3, [r3, #0]
 800f38c:	b92b      	cbnz	r3, 800f39a <_ZNK8touchgfx8TextArea13getTextHeightEv+0x26>
 800f38e:	4b12      	ldr	r3, [pc, #72]	; (800f3d8 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x64>)
 800f390:	21ae      	movs	r1, #174	; 0xae
 800f392:	4a12      	ldr	r2, [pc, #72]	; (800f3dc <_ZNK8touchgfx8TextArea13getTextHeightEv+0x68>)
 800f394:	4812      	ldr	r0, [pc, #72]	; (800f3e0 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x6c>)
 800f396:	f010 fe23 	bl	801ffe0 <__assert_func>
 800f39a:	4b12      	ldr	r3, [pc, #72]	; (800f3e4 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x70>)
 800f39c:	6818      	ldr	r0, [r3, #0]
 800f39e:	f7f4 fb35 	bl	8003a0c <_ZNK8touchgfx5Texts7getTextEt>
 800f3a2:	6823      	ldr	r3, [r4, #0]
 800f3a4:	4606      	mov	r6, r0
 800f3a6:	4620      	mov	r0, r4
 800f3a8:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800f3aa:	4798      	blx	r3
 800f3ac:	6823      	ldr	r3, [r4, #0]
 800f3ae:	4607      	mov	r7, r0
 800f3b0:	4620      	mov	r0, r4
 800f3b2:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800f3b6:	4798      	blx	r3
 800f3b8:	463a      	mov	r2, r7
 800f3ba:	4603      	mov	r3, r0
 800f3bc:	4631      	mov	r1, r6
 800f3be:	4620      	mov	r0, r4
 800f3c0:	46ac      	mov	ip, r5
 800f3c2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800f3c6:	4760      	bx	ip
 800f3c8:	2000      	movs	r0, #0
 800f3ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f3ce:	bf00      	nop
 800f3d0:	2400e128 	.word	0x2400e128
 800f3d4:	2400e124 	.word	0x2400e124
 800f3d8:	08022ec0 	.word	0x08022ec0
 800f3dc:	08023f3c 	.word	0x08023f3c
 800f3e0:	08022f02 	.word	0x08022f02
 800f3e4:	2400e130 	.word	0x2400e130

0800f3e8 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 800f3e8:	b513      	push	{r0, r1, r4, lr}
 800f3ea:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800f3ee:	4604      	mov	r4, r0
 800f3f0:	b343      	cbz	r3, 800f444 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x5c>
 800f3f2:	4b1b      	ldr	r3, [pc, #108]	; (800f460 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x78>)
 800f3f4:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800f3f6:	881b      	ldrh	r3, [r3, #0]
 800f3f8:	428b      	cmp	r3, r1
 800f3fa:	d923      	bls.n	800f444 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x5c>
 800f3fc:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800f400:	2b00      	cmp	r3, #0
 800f402:	dd1f      	ble.n	800f444 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x5c>
 800f404:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800f408:	2b00      	cmp	r3, #0
 800f40a:	dd1b      	ble.n	800f444 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x5c>
 800f40c:	4b15      	ldr	r3, [pc, #84]	; (800f464 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x7c>)
 800f40e:	681b      	ldr	r3, [r3, #0]
 800f410:	b92b      	cbnz	r3, 800f41e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x36>
 800f412:	4b15      	ldr	r3, [pc, #84]	; (800f468 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x80>)
 800f414:	21ae      	movs	r1, #174	; 0xae
 800f416:	4a15      	ldr	r2, [pc, #84]	; (800f46c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x84>)
 800f418:	4815      	ldr	r0, [pc, #84]	; (800f470 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x88>)
 800f41a:	f010 fde1 	bl	801ffe0 <__assert_func>
 800f41e:	4b15      	ldr	r3, [pc, #84]	; (800f474 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x8c>)
 800f420:	6818      	ldr	r0, [r3, #0]
 800f422:	f7f4 faf3 	bl	8003a0c <_ZNK8touchgfx5Texts7getTextEt>
 800f426:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800f42a:	6822      	ldr	r2, [r4, #0]
 800f42c:	2b00      	cmp	r3, #0
 800f42e:	db06      	blt.n	800f43e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x56>
 800f430:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800f434:	2b00      	cmp	r3, #0
 800f436:	db02      	blt.n	800f43e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x56>
 800f438:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800f43a:	4298      	cmp	r0, r3
 800f43c:	d004      	beq.n	800f448 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x60>
 800f43e:	6953      	ldr	r3, [r2, #20]
 800f440:	4620      	mov	r0, r4
 800f442:	4798      	blx	r3
 800f444:	b002      	add	sp, #8
 800f446:	bd10      	pop	{r4, pc}
 800f448:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 800f44c:	466b      	mov	r3, sp
 800f44e:	6912      	ldr	r2, [r2, #16]
 800f450:	c903      	ldmia	r1, {r0, r1}
 800f452:	e883 0003 	stmia.w	r3, {r0, r1}
 800f456:	4619      	mov	r1, r3
 800f458:	4620      	mov	r0, r4
 800f45a:	4790      	blx	r2
 800f45c:	e7f2      	b.n	800f444 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x5c>
 800f45e:	bf00      	nop
 800f460:	2400e128 	.word	0x2400e128
 800f464:	2400e124 	.word	0x2400e124
 800f468:	08022ec0 	.word	0x08022ec0
 800f46c:	08023f3c 	.word	0x08023f3c
 800f470:	08022f02 	.word	0x08022f02
 800f474:	2400e130 	.word	0x2400e130

0800f478 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800f478:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f47c:	4d56      	ldr	r5, [pc, #344]	; (800f5d8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x160>)
 800f47e:	b08e      	sub	sp, #56	; 0x38
 800f480:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800f482:	4604      	mov	r4, r0
 800f484:	882b      	ldrh	r3, [r5, #0]
 800f486:	4293      	cmp	r3, r2
 800f488:	f240 80a3 	bls.w	800f5d2 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x15a>
 800f48c:	6808      	ldr	r0, [r1, #0]
 800f48e:	ab05      	add	r3, sp, #20
 800f490:	6849      	ldr	r1, [r1, #4]
 800f492:	4e52      	ldr	r6, [pc, #328]	; (800f5dc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x164>)
 800f494:	c303      	stmia	r3!, {r0, r1}
 800f496:	6833      	ldr	r3, [r6, #0]
 800f498:	b92b      	cbnz	r3, 800f4a6 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x2e>
 800f49a:	4b51      	ldr	r3, [pc, #324]	; (800f5e0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x168>)
 800f49c:	21ae      	movs	r1, #174	; 0xae
 800f49e:	4a51      	ldr	r2, [pc, #324]	; (800f5e4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x16c>)
 800f4a0:	4851      	ldr	r0, [pc, #324]	; (800f5e8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x170>)
 800f4a2:	f010 fd9d 	bl	801ffe0 <__assert_func>
 800f4a6:	4f51      	ldr	r7, [pc, #324]	; (800f5ec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x174>)
 800f4a8:	4611      	mov	r1, r2
 800f4aa:	6838      	ldr	r0, [r7, #0]
 800f4ac:	f7f4 faae 	bl	8003a0c <_ZNK8touchgfx5Texts7getTextEt>
 800f4b0:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800f4b4:	2b00      	cmp	r3, #0
 800f4b6:	db11      	blt.n	800f4dc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x64>
 800f4b8:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800f4bc:	2b00      	cmp	r3, #0
 800f4be:	db0d      	blt.n	800f4dc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x64>
 800f4c0:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800f4c2:	4298      	cmp	r0, r3
 800f4c4:	d10a      	bne.n	800f4dc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x64>
 800f4c6:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 800f4ca:	ab09      	add	r3, sp, #36	; 0x24
 800f4cc:	e892 0003 	ldmia.w	r2, {r0, r1}
 800f4d0:	e883 0003 	stmia.w	r3, {r0, r1}
 800f4d4:	4619      	mov	r1, r3
 800f4d6:	a805      	add	r0, sp, #20
 800f4d8:	f7fd fa8c 	bl	800c9f4 <_ZN8touchgfx4RectaNERKS0_>
 800f4dc:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800f4e0:	2b00      	cmp	r3, #0
 800f4e2:	dd76      	ble.n	800f5d2 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x15a>
 800f4e4:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800f4e8:	2b00      	cmp	r3, #0
 800f4ea:	dd72      	ble.n	800f5d2 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x15a>
 800f4ec:	6833      	ldr	r3, [r6, #0]
 800f4ee:	2b00      	cmp	r3, #0
 800f4f0:	d0d3      	beq.n	800f49a <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x22>
 800f4f2:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800f4f4:	8829      	ldrh	r1, [r5, #0]
 800f4f6:	4291      	cmp	r1, r2
 800f4f8:	d803      	bhi.n	800f502 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x8a>
 800f4fa:	4b3d      	ldr	r3, [pc, #244]	; (800f5f0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x178>)
 800f4fc:	21af      	movs	r1, #175	; 0xaf
 800f4fe:	4a39      	ldr	r2, [pc, #228]	; (800f5e4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x16c>)
 800f500:	e7ce      	b.n	800f4a0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x28>
 800f502:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800f506:	4b3b      	ldr	r3, [pc, #236]	; (800f5f4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x17c>)
 800f508:	681b      	ldr	r3, [r3, #0]
 800f50a:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 800f50e:	f1b8 0f00 	cmp.w	r8, #0
 800f512:	d05e      	beq.n	800f5d2 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x15a>
 800f514:	6823      	ldr	r3, [r4, #0]
 800f516:	4620      	mov	r0, r4
 800f518:	f894 9036 	ldrb.w	r9, [r4, #54]	; 0x36
 800f51c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800f51e:	4798      	blx	r3
 800f520:	6833      	ldr	r3, [r6, #0]
 800f522:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 800f526:	f894 c038 	ldrb.w	ip, [r4, #56]	; 0x38
 800f52a:	2b00      	cmp	r3, #0
 800f52c:	d0b5      	beq.n	800f49a <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x22>
 800f52e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800f530:	f8b5 e000 	ldrh.w	lr, [r5]
 800f534:	4596      	cmp	lr, r2
 800f536:	d9e0      	bls.n	800f4fa <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x82>
 800f538:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800f53c:	f894 a037 	ldrb.w	sl, [r4, #55]	; 0x37
 800f540:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800f542:	785b      	ldrb	r3, [r3, #1]
 800f544:	f894 e039 	ldrb.w	lr, [r4, #57]	; 0x39
 800f548:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800f54c:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 800f550:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800f554:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800f558:	4b27      	ldr	r3, [pc, #156]	; (800f5f8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x180>)
 800f55a:	f88d c02a 	strb.w	ip, [sp, #42]	; 0x2a
 800f55e:	681b      	ldr	r3, [r3, #0]
 800f560:	920b      	str	r2, [sp, #44]	; 0x2c
 800f562:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
 800f566:	f88d 9032 	strb.w	r9, [sp, #50]	; 0x32
 800f56a:	f88d a033 	strb.w	sl, [sp, #51]	; 0x33
 800f56e:	f88d e034 	strb.w	lr, [sp, #52]	; 0x34
 800f572:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800f576:	b122      	cbz	r2, 800f582 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x10a>
 800f578:	f8d3 804c 	ldr.w	r8, [r3, #76]	; 0x4c
 800f57c:	f1b8 0f00 	cmp.w	r8, #0
 800f580:	d101      	bne.n	800f586 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x10e>
 800f582:	f8d3 8008 	ldr.w	r8, [r3, #8]
 800f586:	f10d 091c 	add.w	r9, sp, #28
 800f58a:	4621      	mov	r1, r4
 800f58c:	4648      	mov	r0, r9
 800f58e:	f003 faf1 	bl	8012b74 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f592:	6833      	ldr	r3, [r6, #0]
 800f594:	2b00      	cmp	r3, #0
 800f596:	d080      	beq.n	800f49a <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x22>
 800f598:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800f59a:	882b      	ldrh	r3, [r5, #0]
 800f59c:	428b      	cmp	r3, r1
 800f59e:	d9ac      	bls.n	800f4fa <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x82>
 800f5a0:	6838      	ldr	r0, [r7, #0]
 800f5a2:	f7f4 fa33 	bl	8003a0c <_ZNK8touchgfx5Texts7getTextEt>
 800f5a6:	6823      	ldr	r3, [r4, #0]
 800f5a8:	4605      	mov	r5, r0
 800f5aa:	4620      	mov	r0, r4
 800f5ac:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800f5ae:	4798      	blx	r3
 800f5b0:	6823      	ldr	r3, [r4, #0]
 800f5b2:	4606      	mov	r6, r0
 800f5b4:	4620      	mov	r0, r4
 800f5b6:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800f5ba:	4798      	blx	r3
 800f5bc:	ab09      	add	r3, sp, #36	; 0x24
 800f5be:	9501      	str	r5, [sp, #4]
 800f5c0:	9300      	str	r3, [sp, #0]
 800f5c2:	ab05      	add	r3, sp, #20
 800f5c4:	e9cd 6002 	strd	r6, r0, [sp, #8]
 800f5c8:	4640      	mov	r0, r8
 800f5ca:	e899 0006 	ldmia.w	r9, {r1, r2}
 800f5ce:	f7f4 f9cf 	bl	8003970 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800f5d2:	b00e      	add	sp, #56	; 0x38
 800f5d4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f5d8:	2400e128 	.word	0x2400e128
 800f5dc:	2400e124 	.word	0x2400e124
 800f5e0:	08022ec0 	.word	0x08022ec0
 800f5e4:	08023f3c 	.word	0x08023f3c
 800f5e8:	08022f02 	.word	0x08022f02
 800f5ec:	2400e130 	.word	0x2400e130
 800f5f0:	08022f2b 	.word	0x08022f2b
 800f5f4:	2400e12c 	.word	0x2400e12c
 800f5f8:	2400e0b4 	.word	0x2400e0b4

0800f5fc <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800f5fc:	b538      	push	{r3, r4, r5, lr}
 800f5fe:	4b0e      	ldr	r3, [pc, #56]	; (800f638 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 800f600:	4604      	mov	r4, r0
 800f602:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800f604:	881b      	ldrh	r3, [r3, #0]
 800f606:	429a      	cmp	r2, r3
 800f608:	d214      	bcs.n	800f634 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800f60a:	6803      	ldr	r3, [r0, #0]
 800f60c:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800f60e:	4798      	blx	r3
 800f610:	6823      	ldr	r3, [r4, #0]
 800f612:	4605      	mov	r5, r0
 800f614:	4620      	mov	r0, r4
 800f616:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800f618:	4798      	blx	r3
 800f61a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800f61e:	b22d      	sxth	r5, r5
 800f620:	4601      	mov	r1, r0
 800f622:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800f626:	bf06      	itte	eq
 800f628:	4602      	moveq	r2, r0
 800f62a:	4629      	moveq	r1, r5
 800f62c:	462a      	movne	r2, r5
 800f62e:	4620      	mov	r0, r4
 800f630:	f7fc fd38 	bl	800c0a4 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800f634:	bd38      	pop	{r3, r4, r5, pc}
 800f636:	bf00      	nop
 800f638:	2400e128 	.word	0x2400e128

0800f63c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800f63c:	b530      	push	{r4, r5, lr}
 800f63e:	888b      	ldrh	r3, [r1, #4]
 800f640:	b085      	sub	sp, #20
 800f642:	4604      	mov	r4, r0
 800f644:	8583      	strh	r3, [r0, #44]	; 0x2c
 800f646:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800f64a:	b923      	cbnz	r3, 800f656 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800f64c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800f650:	b90b      	cbnz	r3, 800f656 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800f652:	f7ff ffd3 	bl	800f5fc <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800f656:	6823      	ldr	r3, [r4, #0]
 800f658:	466d      	mov	r5, sp
 800f65a:	4621      	mov	r1, r4
 800f65c:	343c      	adds	r4, #60	; 0x3c
 800f65e:	4628      	mov	r0, r5
 800f660:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800f664:	4798      	blx	r3
 800f666:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800f66a:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800f66e:	b005      	add	sp, #20
 800f670:	bd30      	pop	{r4, r5, pc}

0800f672 <_ZNK8touchgfx3Box12getSolidRectEv>:
 800f672:	2300      	movs	r3, #0
 800f674:	8083      	strh	r3, [r0, #4]
 800f676:	80c3      	strh	r3, [r0, #6]
 800f678:	8003      	strh	r3, [r0, #0]
 800f67a:	8043      	strh	r3, [r0, #2]
 800f67c:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800f680:	2bff      	cmp	r3, #255	; 0xff
 800f682:	bf01      	itttt	eq
 800f684:	890b      	ldrheq	r3, [r1, #8]
 800f686:	8083      	strheq	r3, [r0, #4]
 800f688:	894b      	ldrheq	r3, [r1, #10]
 800f68a:	80c3      	strheq	r3, [r0, #6]
 800f68c:	4770      	bx	lr
	...

0800f690 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800f690:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f692:	4604      	mov	r4, r0
 800f694:	466b      	mov	r3, sp
 800f696:	6808      	ldr	r0, [r1, #0]
 800f698:	6849      	ldr	r1, [r1, #4]
 800f69a:	c303      	stmia	r3!, {r0, r1}
 800f69c:	6823      	ldr	r3, [r4, #0]
 800f69e:	4669      	mov	r1, sp
 800f6a0:	4620      	mov	r0, r4
 800f6a2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f6a4:	4798      	blx	r3
 800f6a6:	4b08      	ldr	r3, [pc, #32]	; (800f6c8 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800f6a8:	681b      	ldr	r3, [r3, #0]
 800f6aa:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800f6ae:	b10a      	cbz	r2, 800f6b4 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800f6b0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800f6b2:	b900      	cbnz	r0, 800f6b6 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800f6b4:	6898      	ldr	r0, [r3, #8]
 800f6b6:	6803      	ldr	r3, [r0, #0]
 800f6b8:	4669      	mov	r1, sp
 800f6ba:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800f6bc:	6a1d      	ldr	r5, [r3, #32]
 800f6be:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800f6c2:	47a8      	blx	r5
 800f6c4:	b003      	add	sp, #12
 800f6c6:	bd30      	pop	{r4, r5, pc}
 800f6c8:	2400e0b4 	.word	0x2400e0b4

0800f6cc <_ZN8touchgfx3BoxD1Ev>:
 800f6cc:	4770      	bx	lr

0800f6ce <_ZN8touchgfx3BoxD0Ev>:
 800f6ce:	b510      	push	{r4, lr}
 800f6d0:	4604      	mov	r4, r0
 800f6d2:	212c      	movs	r1, #44	; 0x2c
 800f6d4:	f010 fa8b 	bl	801fbee <_ZdlPvj>
 800f6d8:	4620      	mov	r0, r4
 800f6da:	bd10      	pop	{r4, pc}

0800f6dc <_ZNK8touchgfx3Box17invalidateContentEv>:
 800f6dc:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 800f6e0:	b12a      	cbz	r2, 800f6ee <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800f6e2:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800f6e6:	b112      	cbz	r2, 800f6ee <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800f6e8:	6803      	ldr	r3, [r0, #0]
 800f6ea:	695b      	ldr	r3, [r3, #20]
 800f6ec:	4718      	bx	r3
 800f6ee:	4770      	bx	lr

0800f6f0 <_ZNK8touchgfx5Gauge9getCenterERiS1_>:
 800f6f0:	f9b0 3150 	ldrsh.w	r3, [r0, #336]	; 0x150
 800f6f4:	600b      	str	r3, [r1, #0]
 800f6f6:	f9b0 3152 	ldrsh.w	r3, [r0, #338]	; 0x152
 800f6fa:	6013      	str	r3, [r2, #0]
 800f6fc:	4770      	bx	lr

0800f6fe <_ZN8touchgfx5Gauge8setWidthEs>:
 800f6fe:	8101      	strh	r1, [r0, #8]
 800f700:	f8a0 10bc 	strh.w	r1, [r0, #188]	; 0xbc
 800f704:	f8a0 1160 	strh.w	r1, [r0, #352]	; 0x160
 800f708:	4770      	bx	lr

0800f70a <_ZN8touchgfx5Gauge9setHeightEs>:
 800f70a:	8141      	strh	r1, [r0, #10]
 800f70c:	f8a0 10be 	strh.w	r1, [r0, #190]	; 0xbe
 800f710:	f8a0 1162 	strh.w	r1, [r0, #354]	; 0x162
 800f714:	4770      	bx	lr

0800f716 <_ZNK8touchgfx5Gauge13getStartAngleEv>:
 800f716:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 800f71a:	4770      	bx	lr

0800f71c <_ZNK8touchgfx5Gauge11getEndAngleEv>:
 800f71c:	f8d0 014c 	ldr.w	r0, [r0, #332]	; 0x14c
 800f720:	4770      	bx	lr

0800f722 <_ZN8touchgfx5Gauge28setProgressIndicatorPositionEssss>:
 800f722:	4770      	bx	lr

0800f724 <_ZN8touchgfx5GaugeD1Ev>:
 800f724:	4770      	bx	lr

0800f726 <_ZN8touchgfx5Gauge8setAlphaEh>:
 800f726:	b538      	push	{r3, r4, r5, lr}
 800f728:	4604      	mov	r4, r0
 800f72a:	460d      	mov	r5, r1
 800f72c:	f7fc fb93 	bl	800be56 <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 800f730:	f884 50dc 	strb.w	r5, [r4, #220]	; 0xdc
 800f734:	f884 517e 	strb.w	r5, [r4, #382]	; 0x17e
 800f738:	bd38      	pop	{r3, r4, r5, pc}

0800f73a <_ZN8touchgfx5GaugeD0Ev>:
 800f73a:	b510      	push	{r4, lr}
 800f73c:	4604      	mov	r4, r0
 800f73e:	f44f 71d2 	mov.w	r1, #420	; 0x1a4
 800f742:	f010 fa54 	bl	801fbee <_ZdlPvj>
 800f746:	4620      	mov	r0, r4
 800f748:	bd10      	pop	{r4, pc}

0800f74a <_ZNK8touchgfx5Gauge17invalidateContentEv>:
 800f74a:	b510      	push	{r4, lr}
 800f74c:	6803      	ldr	r3, [r0, #0]
 800f74e:	4604      	mov	r4, r0
 800f750:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800f754:	4798      	blx	r3
 800f756:	b150      	cbz	r0, 800f76e <_ZNK8touchgfx5Gauge17invalidateContentEv+0x24>
 800f758:	6823      	ldr	r3, [r4, #0]
 800f75a:	4620      	mov	r0, r4
 800f75c:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800f760:	4798      	blx	r3
 800f762:	b120      	cbz	r0, 800f76e <_ZNK8touchgfx5Gauge17invalidateContentEv+0x24>
 800f764:	4620      	mov	r0, r4
 800f766:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f76a:	f7fc bfbd 	b.w	800c6e8 <_ZNK8touchgfx9Container17invalidateContentEv>
 800f76e:	bd10      	pop	{r4, pc}

0800f770 <_ZN8touchgfx5GaugeC1Ev>:
 800f770:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f772:	4604      	mov	r4, r0
 800f774:	f7fc fcd0 	bl	800c118 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 800f778:	4b18      	ldr	r3, [pc, #96]	; (800f7dc <_ZN8touchgfx5GaugeC1Ev+0x6c>)
 800f77a:	a902      	add	r1, sp, #8
 800f77c:	4626      	mov	r6, r4
 800f77e:	2500      	movs	r5, #0
 800f780:	f504 77ac 	add.w	r7, r4, #344	; 0x158
 800f784:	f846 3bb4 	str.w	r3, [r6], #180
 800f788:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800f78c:	4630      	mov	r0, r6
 800f78e:	f821 3d04 	strh.w	r3, [r1, #-4]!
 800f792:	f00e fb95 	bl	801dec0 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>
 800f796:	2301      	movs	r3, #1
 800f798:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 800f79c:	4638      	mov	r0, r7
 800f79e:	f884 3144 	strb.w	r3, [r4, #324]	; 0x144
 800f7a2:	f884 3145 	strb.w	r3, [r4, #325]	; 0x145
 800f7a6:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 800f7aa:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 800f7ae:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
 800f7b2:	f7fe fd9d 	bl	800e2f0 <_ZN8touchgfx6CircleC1Ev>
 800f7b6:	f104 0158 	add.w	r1, r4, #88	; 0x58
 800f7ba:	4620      	mov	r0, r4
 800f7bc:	f7fc ffa6 	bl	800c70c <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 800f7c0:	4639      	mov	r1, r7
 800f7c2:	4620      	mov	r0, r4
 800f7c4:	f7fc ffd4 	bl	800c770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800f7c8:	4620      	mov	r0, r4
 800f7ca:	4631      	mov	r1, r6
 800f7cc:	f7fc ffd0 	bl	800c770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800f7d0:	4620      	mov	r0, r4
 800f7d2:	f884 517d 	strb.w	r5, [r4, #381]	; 0x17d
 800f7d6:	b003      	add	sp, #12
 800f7d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f7da:	bf00      	nop
 800f7dc:	08024020 	.word	0x08024020

0800f7e0 <_ZN8touchgfx5Gauge14setArcPositionEssss>:
 800f7e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f7e4:	f500 75ac 	add.w	r5, r0, #344	; 0x158
 800f7e8:	4604      	mov	r4, r0
 800f7ea:	460e      	mov	r6, r1
 800f7ec:	4617      	mov	r7, r2
 800f7ee:	4628      	mov	r0, r5
 800f7f0:	4698      	mov	r8, r3
 800f7f2:	f7f2 ff31 	bl	8002658 <_ZN8touchgfx8Drawable5setXYEss>
 800f7f6:	f8d4 3158 	ldr.w	r3, [r4, #344]	; 0x158
 800f7fa:	4641      	mov	r1, r8
 800f7fc:	4628      	mov	r0, r5
 800f7fe:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800f800:	4790      	blx	r2
 800f802:	f8d4 3158 	ldr.w	r3, [r4, #344]	; 0x158
 800f806:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 800f80a:	4628      	mov	r0, r5
 800f80c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800f80e:	4798      	blx	r3
 800f810:	f9b4 2152 	ldrsh.w	r2, [r4, #338]	; 0x152
 800f814:	f9b4 1150 	ldrsh.w	r1, [r4, #336]	; 0x150
 800f818:	1bd2      	subs	r2, r2, r7
 800f81a:	1b89      	subs	r1, r1, r6
 800f81c:	0152      	lsls	r2, r2, #5
 800f81e:	0149      	lsls	r1, r1, #5
 800f820:	3210      	adds	r2, #16
 800f822:	3110      	adds	r1, #16
 800f824:	f8c4 218c 	str.w	r2, [r4, #396]	; 0x18c
 800f828:	f8c4 1188 	str.w	r1, [r4, #392]	; 0x188
 800f82c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f830 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 800f830:	f880 1144 	strb.w	r1, [r0, #324]	; 0x144
 800f834:	4770      	bx	lr

0800f836 <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 800f836:	f880 1145 	strb.w	r1, [r0, #325]	; 0x145
 800f83a:	4770      	bx	lr

0800f83c <_ZN8touchgfx5Gauge13setArcVisibleEb>:
 800f83c:	f880 117d 	strb.w	r1, [r0, #381]	; 0x17d
 800f840:	4770      	bx	lr

0800f842 <_ZN8touchgfx5Gauge6getArcEv>:
 800f842:	f500 70ac 	add.w	r0, r0, #344	; 0x158
 800f846:	4770      	bx	lr

0800f848 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>:
 800f848:	b538      	push	{r3, r4, r5, lr}
 800f84a:	8902      	ldrh	r2, [r0, #8]
 800f84c:	f100 05b4 	add.w	r5, r0, #180	; 0xb4
 800f850:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800f854:	4604      	mov	r4, r0
 800f856:	f8a0 20bc 	strh.w	r2, [r0, #188]	; 0xbc
 800f85a:	2200      	movs	r2, #0
 800f85c:	f8a0 30be 	strh.w	r3, [r0, #190]	; 0xbe
 800f860:	4628      	mov	r0, r5
 800f862:	4611      	mov	r1, r2
 800f864:	f7f2 fef8 	bl	8002658 <_ZN8touchgfx8Drawable5setXYEss>
 800f868:	f9b4 2156 	ldrsh.w	r2, [r4, #342]	; 0x156
 800f86c:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 800f870:	4628      	mov	r0, r5
 800f872:	1a9b      	subs	r3, r3, r2
 800f874:	f9b4 2154 	ldrsh.w	r2, [r4, #340]	; 0x154
 800f878:	ee07 3a90 	vmov	s15, r3
 800f87c:	f9b4 3150 	ldrsh.w	r3, [r4, #336]	; 0x150
 800f880:	1a9b      	subs	r3, r3, r2
 800f882:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800f886:	ee07 3a10 	vmov	s14, r3
 800f88a:	edc4 7a39 	vstr	s15, [r4, #228]	; 0xe4
 800f88e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f892:	ed84 7a38 	vstr	s14, [r4, #224]	; 0xe0
 800f896:	f00e fb5f 	bl	801df58 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 800f89a:	4b16      	ldr	r3, [pc, #88]	; (800f8f4 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv+0xac>)
 800f89c:	4628      	mov	r0, r5
 800f89e:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 800f8a2:	f00e fb59 	bl	801df58 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 800f8a6:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 800f8aa:	f9b4 2150 	ldrsh.w	r2, [r4, #336]	; 0x150
 800f8ae:	4628      	mov	r0, r5
 800f8b0:	ee07 3a90 	vmov	s15, r3
 800f8b4:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 800f8b8:	ee07 2a10 	vmov	s14, r2
 800f8bc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800f8c0:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 800f8c4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f8c8:	edc4 7a3f 	vstr	s15, [r4, #252]	; 0xfc
 800f8cc:	ed84 7a3e 	vstr	s14, [r4, #248]	; 0xf8
 800f8d0:	f00e fb42 	bl	801df58 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 800f8d4:	f8d4 30fc 	ldr.w	r3, [r4, #252]	; 0xfc
 800f8d8:	f8d4 20f8 	ldr.w	r2, [r4, #248]	; 0xf8
 800f8dc:	4628      	mov	r0, r5
 800f8de:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 800f8e2:	f8c4 2104 	str.w	r2, [r4, #260]	; 0x104
 800f8e6:	f00e fb37 	bl	801df58 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 800f8ea:	2301      	movs	r3, #1
 800f8ec:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 800f8f0:	bd38      	pop	{r3, r4, r5, pc}
 800f8f2:	bf00      	nop
 800f8f4:	43960000 	.word	0x43960000

0800f8f8 <_ZN8touchgfx5Gauge9setNeedleEtss>:
 800f8f8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800f8fa:	4604      	mov	r4, r0
 800f8fc:	a802      	add	r0, sp, #8
 800f8fe:	4616      	mov	r6, r2
 800f900:	461d      	mov	r5, r3
 800f902:	f820 1d04 	strh.w	r1, [r0, #-4]!
 800f906:	4601      	mov	r1, r0
 800f908:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 800f90c:	f00e fc7a 	bl	801e204 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>
 800f910:	4620      	mov	r0, r4
 800f912:	f8a4 6154 	strh.w	r6, [r4, #340]	; 0x154
 800f916:	f8a4 5156 	strh.w	r5, [r4, #342]	; 0x156
 800f91a:	f7ff ff95 	bl	800f848 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 800f91e:	b002      	add	sp, #8
 800f920:	bd70      	pop	{r4, r5, r6, pc}

0800f922 <_ZN8touchgfx5Gauge9setCenterEii>:
 800f922:	b570      	push	{r4, r5, r6, lr}
 800f924:	4606      	mov	r6, r0
 800f926:	460d      	mov	r5, r1
 800f928:	4614      	mov	r4, r2
 800f92a:	f8a6 1150 	strh.w	r1, [r6, #336]	; 0x150
 800f92e:	f8a6 2152 	strh.w	r2, [r6, #338]	; 0x152
 800f932:	f7ff ff89 	bl	800f848 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 800f936:	f9b6 215e 	ldrsh.w	r2, [r6, #350]	; 0x15e
 800f93a:	f9b6 115c 	ldrsh.w	r1, [r6, #348]	; 0x15c
 800f93e:	1aa4      	subs	r4, r4, r2
 800f940:	1a6d      	subs	r5, r5, r1
 800f942:	0164      	lsls	r4, r4, #5
 800f944:	016d      	lsls	r5, r5, #5
 800f946:	3410      	adds	r4, #16
 800f948:	3510      	adds	r5, #16
 800f94a:	f8c6 418c 	str.w	r4, [r6, #396]	; 0x18c
 800f94e:	f8c6 5188 	str.w	r5, [r6, #392]	; 0x188
 800f952:	bd70      	pop	{r4, r5, r6, pc}

0800f954 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>:
 800f954:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800f956:	0149      	lsls	r1, r1, #5
 800f958:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800f95a:	4604      	mov	r4, r0
 800f95c:	4299      	cmp	r1, r3
 800f95e:	9101      	str	r1, [sp, #4]
 800f960:	d00b      	beq.n	800f97a <_ZN8touchgfx6Circle12updateArcEndIiEEvT_+0x26>
 800f962:	4601      	mov	r1, r0
 800f964:	aa01      	add	r2, sp, #4
 800f966:	a802      	add	r0, sp, #8
 800f968:	f7fe fee4 	bl	800e734 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 800f96c:	9b01      	ldr	r3, [sp, #4]
 800f96e:	a902      	add	r1, sp, #8
 800f970:	4620      	mov	r0, r4
 800f972:	6423      	str	r3, [r4, #64]	; 0x40
 800f974:	6823      	ldr	r3, [r4, #0]
 800f976:	691b      	ldr	r3, [r3, #16]
 800f978:	4798      	blx	r3
 800f97a:	b004      	add	sp, #16
 800f97c:	bd10      	pop	{r4, pc}
	...

0800f980 <_ZN8touchgfx5Gauge8setValueEi>:
 800f980:	b570      	push	{r4, r5, r6, lr}
 800f982:	4604      	mov	r4, r0
 800f984:	f7fc fac5 	bl	800bf12 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 800f988:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 800f98c:	f8d4 114c 	ldr.w	r1, [r4, #332]	; 0x14c
 800f990:	4620      	mov	r0, r4
 800f992:	429a      	cmp	r2, r3
 800f994:	f504 76ac 	add.w	r6, r4, #344	; 0x158
 800f998:	bfac      	ite	ge
 800f99a:	f894 3145 	ldrbge.w	r3, [r4, #325]	; 0x145
 800f99e:	f894 3144 	ldrblt.w	r3, [r4, #324]	; 0x144
 800f9a2:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 800f9a6:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 800f9aa:	1ac9      	subs	r1, r1, r3
 800f9ac:	2900      	cmp	r1, #0
 800f9ae:	bfb8      	it	lt
 800f9b0:	4249      	neglt	r1, r1
 800f9b2:	b289      	uxth	r1, r1
 800f9b4:	f7fc fb41 	bl	800c03a <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 800f9b8:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 800f9bc:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 800f9c0:	4605      	mov	r5, r0
 800f9c2:	eddf 6a18 	vldr	s13, [pc, #96]	; 800fa24 <_ZN8touchgfx5Gauge8setValueEi+0xa4>
 800f9c6:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 800f9ca:	429a      	cmp	r2, r3
 800f9cc:	ed9f 7a16 	vldr	s14, [pc, #88]	; 800fa28 <_ZN8touchgfx5Gauge8setValueEi+0xa8>
 800f9d0:	da15      	bge.n	800f9fe <_ZN8touchgfx5Gauge8setValueEi+0x7e>
 800f9d2:	1b5b      	subs	r3, r3, r5
 800f9d4:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 800f9d8:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 800f9dc:	ee07 3a90 	vmov	s15, r3
 800f9e0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800f9e4:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 800f9e8:	ee21 1a07 	vmul.f32	s2, s2, s14
 800f9ec:	f00e fa23 	bl	801de36 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 800f9f0:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 800f9f4:	1b49      	subs	r1, r1, r5
 800f9f6:	4630      	mov	r0, r6
 800f9f8:	f7ff ffac 	bl	800f954 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>
 800f9fc:	bd70      	pop	{r4, r5, r6, pc}
 800f9fe:	442b      	add	r3, r5
 800fa00:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 800fa04:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 800fa08:	ee07 3a90 	vmov	s15, r3
 800fa0c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800fa10:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 800fa14:	ee21 1a07 	vmul.f32	s2, s2, s14
 800fa18:	f00e fa0d 	bl	801de36 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 800fa1c:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 800fa20:	4429      	add	r1, r5
 800fa22:	e7e8      	b.n	800f9f6 <_ZN8touchgfx5Gauge8setValueEi+0x76>
 800fa24:	43340000 	.word	0x43340000
 800fa28:	40490fdb 	.word	0x40490fdb

0800fa2c <_ZN8touchgfx5Gauge16setStartEndAngleEii>:
 800fa2c:	4291      	cmp	r1, r2
 800fa2e:	b510      	push	{r4, lr}
 800fa30:	4604      	mov	r4, r0
 800fa32:	d105      	bne.n	800fa40 <_ZN8touchgfx5Gauge16setStartEndAngleEii+0x14>
 800fa34:	4b0b      	ldr	r3, [pc, #44]	; (800fa64 <_ZN8touchgfx5Gauge16setStartEndAngleEii+0x38>)
 800fa36:	215a      	movs	r1, #90	; 0x5a
 800fa38:	4a0b      	ldr	r2, [pc, #44]	; (800fa68 <_ZN8touchgfx5Gauge16setStartEndAngleEii+0x3c>)
 800fa3a:	480c      	ldr	r0, [pc, #48]	; (800fa6c <_ZN8touchgfx5Gauge16setStartEndAngleEii+0x40>)
 800fa3c:	f010 fad0 	bl	801ffe0 <__assert_func>
 800fa40:	f8c0 1148 	str.w	r1, [r0, #328]	; 0x148
 800fa44:	0149      	lsls	r1, r1, #5
 800fa46:	f8c0 214c 	str.w	r2, [r0, #332]	; 0x14c
 800fa4a:	0152      	lsls	r2, r2, #5
 800fa4c:	f8c0 1194 	str.w	r1, [r0, #404]	; 0x194
 800fa50:	f8c0 2198 	str.w	r2, [r0, #408]	; 0x198
 800fa54:	f7fc f9fc 	bl	800be50 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 800fa58:	4601      	mov	r1, r0
 800fa5a:	4620      	mov	r0, r4
 800fa5c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fa60:	f7ff bf8e 	b.w	800f980 <_ZN8touchgfx5Gauge8setValueEi>
 800fa64:	08023fd4 	.word	0x08023fd4
 800fa68:	08024100 	.word	0x08024100
 800fa6c:	08023feb 	.word	0x08023feb

0800fa70 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800fa70:	b570      	push	{r4, r5, r6, lr}
 800fa72:	880b      	ldrh	r3, [r1, #0]
 800fa74:	4605      	mov	r5, r0
 800fa76:	4604      	mov	r4, r0
 800fa78:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800fa7a:	8813      	ldrh	r3, [r2, #0]
 800fa7c:	f825 3f30 	strh.w	r3, [r5, #48]!
 800fa80:	4628      	mov	r0, r5
 800fa82:	f005 fa25 	bl	8014ed0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800fa86:	4606      	mov	r6, r0
 800fa88:	4628      	mov	r0, r5
 800fa8a:	f005 fa65 	bl	8014f58 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800fa8e:	6823      	ldr	r3, [r4, #0]
 800fa90:	4605      	mov	r5, r0
 800fa92:	b231      	sxth	r1, r6
 800fa94:	4620      	mov	r0, r4
 800fa96:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800fa98:	4798      	blx	r3
 800fa9a:	6823      	ldr	r3, [r4, #0]
 800fa9c:	b229      	sxth	r1, r5
 800fa9e:	4620      	mov	r0, r4
 800faa0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800faa2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800faa6:	4718      	bx	r3

0800faa8 <_ZNK8touchgfx6Button12getSolidRectEv>:
 800faa8:	b510      	push	{r4, lr}
 800faaa:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 800faae:	4604      	mov	r4, r0
 800fab0:	2bff      	cmp	r3, #255	; 0xff
 800fab2:	d006      	beq.n	800fac2 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800fab4:	2300      	movs	r3, #0
 800fab6:	8003      	strh	r3, [r0, #0]
 800fab8:	8043      	strh	r3, [r0, #2]
 800faba:	8083      	strh	r3, [r0, #4]
 800fabc:	80c3      	strh	r3, [r0, #6]
 800fabe:	4620      	mov	r0, r4
 800fac0:	bd10      	pop	{r4, pc}
 800fac2:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800fac6:	b11b      	cbz	r3, 800fad0 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800fac8:	3130      	adds	r1, #48	; 0x30
 800faca:	f005 fa89 	bl	8014fe0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800face:	e7f6      	b.n	800fabe <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800fad0:	312e      	adds	r1, #46	; 0x2e
 800fad2:	e7fa      	b.n	800faca <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

0800fad4 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800fad4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fad8:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800fadc:	b08a      	sub	sp, #40	; 0x28
 800fade:	4604      	mov	r4, r0
 800fae0:	4688      	mov	r8, r1
 800fae2:	2b00      	cmp	r3, #0
 800fae4:	d044      	beq.n	800fb70 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x9c>
 800fae6:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800fae8:	a805      	add	r0, sp, #20
 800faea:	f8ad 3014 	strh.w	r3, [sp, #20]
 800faee:	f005 f9ef 	bl	8014ed0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800faf2:	4605      	mov	r5, r0
 800faf4:	b206      	sxth	r6, r0
 800faf6:	a805      	add	r0, sp, #20
 800faf8:	f005 fa2e 	bl	8014f58 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800fafc:	f9b8 2000 	ldrsh.w	r2, [r8]
 800fb00:	f8b8 7004 	ldrh.w	r7, [r8, #4]
 800fb04:	2300      	movs	r3, #0
 800fb06:	fa0f fc80 	sxth.w	ip, r0
 800fb0a:	4417      	add	r7, r2
 800fb0c:	9306      	str	r3, [sp, #24]
 800fb0e:	b2bf      	uxth	r7, r7
 800fb10:	fa0f fe87 	sxth.w	lr, r7
 800fb14:	459e      	cmp	lr, r3
 800fb16:	dd2d      	ble.n	800fb74 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800fb18:	4296      	cmp	r6, r2
 800fb1a:	dd2b      	ble.n	800fb74 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800fb1c:	f9b8 3002 	ldrsh.w	r3, [r8, #2]
 800fb20:	f8b8 1006 	ldrh.w	r1, [r8, #6]
 800fb24:	4419      	add	r1, r3
 800fb26:	b289      	uxth	r1, r1
 800fb28:	fa0f f881 	sxth.w	r8, r1
 800fb2c:	f1b8 0f00 	cmp.w	r8, #0
 800fb30:	dd20      	ble.n	800fb74 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800fb32:	459c      	cmp	ip, r3
 800fb34:	dd1e      	ble.n	800fb74 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800fb36:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800fb3a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800fb3e:	4576      	cmp	r6, lr
 800fb40:	bfa8      	it	ge
 800fb42:	463d      	movge	r5, r7
 800fb44:	45c4      	cmp	ip, r8
 800fb46:	bfa8      	it	ge
 800fb48:	4608      	movge	r0, r1
 800fb4a:	f8ad 2018 	strh.w	r2, [sp, #24]
 800fb4e:	1aad      	subs	r5, r5, r2
 800fb50:	1ac0      	subs	r0, r0, r3
 800fb52:	f8ad 301a 	strh.w	r3, [sp, #26]
 800fb56:	f8ad 501c 	strh.w	r5, [sp, #28]
 800fb5a:	f8ad 001e 	strh.w	r0, [sp, #30]
 800fb5e:	4b1f      	ldr	r3, [pc, #124]	; (800fbdc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x108>)
 800fb60:	681b      	ldr	r3, [r3, #0]
 800fb62:	b953      	cbnz	r3, 800fb7a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa6>
 800fb64:	4b1e      	ldr	r3, [pc, #120]	; (800fbe0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x10c>)
 800fb66:	2187      	movs	r1, #135	; 0x87
 800fb68:	4a1e      	ldr	r2, [pc, #120]	; (800fbe4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x110>)
 800fb6a:	481f      	ldr	r0, [pc, #124]	; (800fbe8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x114>)
 800fb6c:	f010 fa38 	bl	801ffe0 <__assert_func>
 800fb70:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800fb72:	e7b9      	b.n	800fae8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800fb74:	2300      	movs	r3, #0
 800fb76:	9307      	str	r3, [sp, #28]
 800fb78:	e7f1      	b.n	800fb5e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x8a>
 800fb7a:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800fb7e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800fb82:	429a      	cmp	r2, r3
 800fb84:	d026      	beq.n	800fbd4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800fb86:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800fb8a:	2b00      	cmp	r3, #0
 800fb8c:	dd22      	ble.n	800fbd4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800fb8e:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800fb92:	2b00      	cmp	r3, #0
 800fb94:	dd1e      	ble.n	800fbd4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800fb96:	2300      	movs	r3, #0
 800fb98:	a908      	add	r1, sp, #32
 800fb9a:	4620      	mov	r0, r4
 800fb9c:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800fba0:	6823      	ldr	r3, [r4, #0]
 800fba2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fba4:	4798      	blx	r3
 800fba6:	4b11      	ldr	r3, [pc, #68]	; (800fbec <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x118>)
 800fba8:	681b      	ldr	r3, [r3, #0]
 800fbaa:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800fbae:	b10a      	cbz	r2, 800fbb4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800fbb0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800fbb2:	b900      	cbnz	r0, 800fbb6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe2>
 800fbb4:	6898      	ldr	r0, [r3, #8]
 800fbb6:	2501      	movs	r5, #1
 800fbb8:	6801      	ldr	r1, [r0, #0]
 800fbba:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800fbbe:	9502      	str	r5, [sp, #8]
 800fbc0:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800fbc4:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800fbc8:	9401      	str	r4, [sp, #4]
 800fbca:	ac06      	add	r4, sp, #24
 800fbcc:	9400      	str	r4, [sp, #0]
 800fbce:	688c      	ldr	r4, [r1, #8]
 800fbd0:	a905      	add	r1, sp, #20
 800fbd2:	47a0      	blx	r4
 800fbd4:	b00a      	add	sp, #40	; 0x28
 800fbd6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fbda:	bf00      	nop
 800fbdc:	2400e15c 	.word	0x2400e15c
 800fbe0:	080227a4 	.word	0x080227a4
 800fbe4:	08024139 	.word	0x08024139
 800fbe8:	0802283f 	.word	0x0802283f
 800fbec:	2400e0b4 	.word	0x2400e0b4

0800fbf0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 800fbf0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800fbf4:	4d38      	ldr	r5, [pc, #224]	; (800fcd8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xe8>)
 800fbf6:	b08c      	sub	sp, #48	; 0x30
 800fbf8:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800fbfa:	4604      	mov	r4, r0
 800fbfc:	882b      	ldrh	r3, [r5, #0]
 800fbfe:	4689      	mov	r9, r1
 800fc00:	4293      	cmp	r3, r2
 800fc02:	d965      	bls.n	800fcd0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xe0>
 800fc04:	4e35      	ldr	r6, [pc, #212]	; (800fcdc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xec>)
 800fc06:	6833      	ldr	r3, [r6, #0]
 800fc08:	b92b      	cbnz	r3, 800fc16 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x26>
 800fc0a:	4b35      	ldr	r3, [pc, #212]	; (800fce0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xf0>)
 800fc0c:	21ae      	movs	r1, #174	; 0xae
 800fc0e:	4a35      	ldr	r2, [pc, #212]	; (800fce4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xf4>)
 800fc10:	4835      	ldr	r0, [pc, #212]	; (800fce8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xf8>)
 800fc12:	f010 f9e5 	bl	801ffe0 <__assert_func>
 800fc16:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 800fc1a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800fc1e:	4b33      	ldr	r3, [pc, #204]	; (800fcec <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xfc>)
 800fc20:	681b      	ldr	r3, [r3, #0]
 800fc22:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800fc26:	2a00      	cmp	r2, #0
 800fc28:	d052      	beq.n	800fcd0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xe0>
 800fc2a:	784b      	ldrb	r3, [r1, #1]
 800fc2c:	f890 c036 	ldrb.w	ip, [r0, #54]	; 0x36
 800fc30:	f3c3 0a01 	ubfx	sl, r3, #0, #2
 800fc34:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800fc38:	f9b0 e034 	ldrsh.w	lr, [r0, #52]	; 0x34
 800fc3c:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800fc40:	4b2b      	ldr	r3, [pc, #172]	; (800fcf0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x100>)
 800fc42:	f890 8038 	ldrb.w	r8, [r0, #56]	; 0x38
 800fc46:	681b      	ldr	r3, [r3, #0]
 800fc48:	f890 7037 	ldrb.w	r7, [r0, #55]	; 0x37
 800fc4c:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
 800fc50:	9207      	str	r2, [sp, #28]
 800fc52:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800fc54:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800fc58:	f88d a020 	strb.w	sl, [sp, #32]
 800fc5c:	f88d 8022 	strb.w	r8, [sp, #34]	; 0x22
 800fc60:	9009      	str	r0, [sp, #36]	; 0x24
 800fc62:	f8ad e028 	strh.w	lr, [sp, #40]	; 0x28
 800fc66:	f88d c02a 	strb.w	ip, [sp, #42]	; 0x2a
 800fc6a:	f88d 702b 	strb.w	r7, [sp, #43]	; 0x2b
 800fc6e:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
 800fc72:	b10a      	cbz	r2, 800fc78 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x88>
 800fc74:	6cdf      	ldr	r7, [r3, #76]	; 0x4c
 800fc76:	b907      	cbnz	r7, 800fc7a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x8a>
 800fc78:	689f      	ldr	r7, [r3, #8]
 800fc7a:	f10d 0814 	add.w	r8, sp, #20
 800fc7e:	4621      	mov	r1, r4
 800fc80:	4640      	mov	r0, r8
 800fc82:	f002 ff77 	bl	8012b74 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800fc86:	6833      	ldr	r3, [r6, #0]
 800fc88:	2b00      	cmp	r3, #0
 800fc8a:	d0be      	beq.n	800fc0a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x1a>
 800fc8c:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800fc8e:	882b      	ldrh	r3, [r5, #0]
 800fc90:	428b      	cmp	r3, r1
 800fc92:	d803      	bhi.n	800fc9c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xac>
 800fc94:	4b17      	ldr	r3, [pc, #92]	; (800fcf4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x104>)
 800fc96:	21af      	movs	r1, #175	; 0xaf
 800fc98:	4a12      	ldr	r2, [pc, #72]	; (800fce4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xf4>)
 800fc9a:	e7b9      	b.n	800fc10 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x20>
 800fc9c:	4b16      	ldr	r3, [pc, #88]	; (800fcf8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x108>)
 800fc9e:	6818      	ldr	r0, [r3, #0]
 800fca0:	f7f3 feb4 	bl	8003a0c <_ZNK8touchgfx5Texts7getTextEt>
 800fca4:	6823      	ldr	r3, [r4, #0]
 800fca6:	4605      	mov	r5, r0
 800fca8:	4620      	mov	r0, r4
 800fcaa:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800fcac:	4798      	blx	r3
 800fcae:	6823      	ldr	r3, [r4, #0]
 800fcb0:	4606      	mov	r6, r0
 800fcb2:	4620      	mov	r0, r4
 800fcb4:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800fcb8:	4798      	blx	r3
 800fcba:	ab07      	add	r3, sp, #28
 800fcbc:	9501      	str	r5, [sp, #4]
 800fcbe:	9300      	str	r3, [sp, #0]
 800fcc0:	464b      	mov	r3, r9
 800fcc2:	e9cd 6002 	strd	r6, r0, [sp, #8]
 800fcc6:	4638      	mov	r0, r7
 800fcc8:	e898 0006 	ldmia.w	r8, {r1, r2}
 800fccc:	f7f3 fe50 	bl	8003970 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800fcd0:	b00c      	add	sp, #48	; 0x30
 800fcd2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800fcd6:	bf00      	nop
 800fcd8:	2400e128 	.word	0x2400e128
 800fcdc:	2400e124 	.word	0x2400e124
 800fce0:	08022ec0 	.word	0x08022ec0
 800fce4:	0802416c 	.word	0x0802416c
 800fce8:	08022f02 	.word	0x08022f02
 800fcec:	2400e12c 	.word	0x2400e12c
 800fcf0:	2400e0b4 	.word	0x2400e0b4
 800fcf4:	08022f2b 	.word	0x08022f2b
 800fcf8:	2400e130 	.word	0x2400e130

0800fcfc <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
 800fcfc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fd00:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800fd04:	b0a0      	sub	sp, #128	; 0x80
 800fd06:	4604      	mov	r4, r0
 800fd08:	b193      	cbz	r3, 800fd30 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800fd0a:	4b33      	ldr	r3, [pc, #204]	; (800fdd8 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xdc>)
 800fd0c:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800fd0e:	881b      	ldrh	r3, [r3, #0]
 800fd10:	428b      	cmp	r3, r1
 800fd12:	d90d      	bls.n	800fd30 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800fd14:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800fd18:	2b00      	cmp	r3, #0
 800fd1a:	dd09      	ble.n	800fd30 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800fd1c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800fd20:	2b00      	cmp	r3, #0
 800fd22:	dd05      	ble.n	800fd30 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800fd24:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 800fd28:	b12b      	cbz	r3, 800fd36 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x3a>
 800fd2a:	6803      	ldr	r3, [r0, #0]
 800fd2c:	695b      	ldr	r3, [r3, #20]
 800fd2e:	4798      	blx	r3
 800fd30:	b020      	add	sp, #128	; 0x80
 800fd32:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fd36:	4b29      	ldr	r3, [pc, #164]	; (800fddc <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xe0>)
 800fd38:	681b      	ldr	r3, [r3, #0]
 800fd3a:	b92b      	cbnz	r3, 800fd48 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x4c>
 800fd3c:	4b28      	ldr	r3, [pc, #160]	; (800fde0 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xe4>)
 800fd3e:	21ae      	movs	r1, #174	; 0xae
 800fd40:	4a28      	ldr	r2, [pc, #160]	; (800fde4 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xe8>)
 800fd42:	4829      	ldr	r0, [pc, #164]	; (800fde8 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xec>)
 800fd44:	f010 f94c 	bl	801ffe0 <__assert_func>
 800fd48:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800fd4c:	4b27      	ldr	r3, [pc, #156]	; (800fdec <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xf0>)
 800fd4e:	681b      	ldr	r3, [r3, #0]
 800fd50:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800fd54:	4b26      	ldr	r3, [pc, #152]	; (800fdf0 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xf4>)
 800fd56:	6818      	ldr	r0, [r3, #0]
 800fd58:	f7f3 fe58 	bl	8003a0c <_ZNK8touchgfx5Texts7getTextEt>
 800fd5c:	4606      	mov	r6, r0
 800fd5e:	a807      	add	r0, sp, #28
 800fd60:	f003 fbd4 	bl	801350c <_ZN8touchgfx12TextProviderC1Ev>
 800fd64:	682b      	ldr	r3, [r5, #0]
 800fd66:	4628      	mov	r0, r5
 800fd68:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800fd6a:	4798      	blx	r3
 800fd6c:	682b      	ldr	r3, [r5, #0]
 800fd6e:	4607      	mov	r7, r0
 800fd70:	4628      	mov	r0, r5
 800fd72:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800fd74:	4798      	blx	r3
 800fd76:	6823      	ldr	r3, [r4, #0]
 800fd78:	4605      	mov	r5, r0
 800fd7a:	4620      	mov	r0, r4
 800fd7c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800fd7e:	4798      	blx	r3
 800fd80:	6823      	ldr	r3, [r4, #0]
 800fd82:	4680      	mov	r8, r0
 800fd84:	4620      	mov	r0, r4
 800fd86:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800fd8a:	4798      	blx	r3
 800fd8c:	462b      	mov	r3, r5
 800fd8e:	463a      	mov	r2, r7
 800fd90:	4631      	mov	r1, r6
 800fd92:	e9cd 8000 	strd	r8, r0, [sp]
 800fd96:	a807      	add	r0, sp, #28
 800fd98:	f003 fc39 	bl	801360e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800fd9c:	a807      	add	r0, sp, #28
 800fd9e:	f004 f82d 	bl	8013dfc <_ZN8touchgfx12TextProvider11getNextCharEv>
 800fda2:	280a      	cmp	r0, #10
 800fda4:	d103      	bne.n	800fdae <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xb2>
 800fda6:	6823      	ldr	r3, [r4, #0]
 800fda8:	4620      	mov	r0, r4
 800fdaa:	695b      	ldr	r3, [r3, #20]
 800fdac:	e7bf      	b.n	800fd2e <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x32>
 800fdae:	a807      	add	r0, sp, #28
 800fdb0:	f004 f824 	bl	8013dfc <_ZN8touchgfx12TextProvider11getNextCharEv>
 800fdb4:	2800      	cmp	r0, #0
 800fdb6:	d1f4      	bne.n	800fda2 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xa6>
 800fdb8:	ad04      	add	r5, sp, #16
 800fdba:	4621      	mov	r1, r4
 800fdbc:	4628      	mov	r0, r5
 800fdbe:	f7ff f8f9 	bl	800efb4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800fdc2:	ab02      	add	r3, sp, #8
 800fdc4:	6822      	ldr	r2, [r4, #0]
 800fdc6:	e895 0003 	ldmia.w	r5, {r0, r1}
 800fdca:	6912      	ldr	r2, [r2, #16]
 800fdcc:	e883 0003 	stmia.w	r3, {r0, r1}
 800fdd0:	4619      	mov	r1, r3
 800fdd2:	4620      	mov	r0, r4
 800fdd4:	4790      	blx	r2
 800fdd6:	e7ab      	b.n	800fd30 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800fdd8:	2400e128 	.word	0x2400e128
 800fddc:	2400e124 	.word	0x2400e124
 800fde0:	08022ec0 	.word	0x08022ec0
 800fde4:	0802416c 	.word	0x0802416c
 800fde8:	08022f02 	.word	0x08022f02
 800fdec:	2400e12c 	.word	0x2400e12c
 800fdf0:	2400e130 	.word	0x2400e130

0800fdf4 <_ZN8touchgfx5ImageD1Ev>:
 800fdf4:	4770      	bx	lr

0800fdf6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800fdf6:	b570      	push	{r4, r5, r6, lr}
 800fdf8:	880b      	ldrh	r3, [r1, #0]
 800fdfa:	460d      	mov	r5, r1
 800fdfc:	4604      	mov	r4, r0
 800fdfe:	84c3      	strh	r3, [r0, #38]	; 0x26
 800fe00:	4608      	mov	r0, r1
 800fe02:	f005 f865 	bl	8014ed0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800fe06:	4606      	mov	r6, r0
 800fe08:	4628      	mov	r0, r5
 800fe0a:	f005 f8a5 	bl	8014f58 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800fe0e:	6823      	ldr	r3, [r4, #0]
 800fe10:	4605      	mov	r5, r0
 800fe12:	b231      	sxth	r1, r6
 800fe14:	4620      	mov	r0, r4
 800fe16:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800fe18:	4798      	blx	r3
 800fe1a:	6823      	ldr	r3, [r4, #0]
 800fe1c:	b229      	sxth	r1, r5
 800fe1e:	4620      	mov	r0, r4
 800fe20:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800fe22:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fe26:	4718      	bx	r3

0800fe28 <_ZN8touchgfx5ImageD0Ev>:
 800fe28:	b510      	push	{r4, lr}
 800fe2a:	4604      	mov	r4, r0
 800fe2c:	212c      	movs	r1, #44	; 0x2c
 800fe2e:	f00f fede 	bl	801fbee <_ZdlPvj>
 800fe32:	4620      	mov	r0, r4
 800fe34:	bd10      	pop	{r4, pc}

0800fe36 <_ZNK8touchgfx5Image12getSolidRectEv>:
 800fe36:	b510      	push	{r4, lr}
 800fe38:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800fe3c:	4604      	mov	r4, r0
 800fe3e:	2bff      	cmp	r3, #255	; 0xff
 800fe40:	d006      	beq.n	800fe50 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800fe42:	2300      	movs	r3, #0
 800fe44:	8003      	strh	r3, [r0, #0]
 800fe46:	8043      	strh	r3, [r0, #2]
 800fe48:	8083      	strh	r3, [r0, #4]
 800fe4a:	80c3      	strh	r3, [r0, #6]
 800fe4c:	4620      	mov	r0, r4
 800fe4e:	bd10      	pop	{r4, pc}
 800fe50:	3126      	adds	r1, #38	; 0x26
 800fe52:	f005 f8c5 	bl	8014fe0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800fe56:	e7f9      	b.n	800fe4c <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800fe58 <_ZNK8touchgfx5Image17invalidateContentEv>:
 800fe58:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 800fe5c:	b12a      	cbz	r2, 800fe6a <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800fe5e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800fe62:	b112      	cbz	r2, 800fe6a <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800fe64:	6803      	ldr	r3, [r0, #0]
 800fe66:	695b      	ldr	r3, [r3, #20]
 800fe68:	4718      	bx	r3
 800fe6a:	4770      	bx	lr

0800fe6c <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800fe6c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fe70:	4604      	mov	r4, r0
 800fe72:	b088      	sub	sp, #32
 800fe74:	2500      	movs	r5, #0
 800fe76:	460f      	mov	r7, r1
 800fe78:	f854 3b26 	ldr.w	r3, [r4], #38
 800fe7c:	a904      	add	r1, sp, #16
 800fe7e:	4606      	mov	r6, r0
 800fe80:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fe82:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800fe86:	4798      	blx	r3
 800fe88:	4620      	mov	r0, r4
 800fe8a:	f005 f821 	bl	8014ed0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800fe8e:	4680      	mov	r8, r0
 800fe90:	4620      	mov	r0, r4
 800fe92:	f005 f861 	bl	8014f58 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800fe96:	9506      	str	r5, [sp, #24]
 800fe98:	ad06      	add	r5, sp, #24
 800fe9a:	f8ad 001e 	strh.w	r0, [sp, #30]
 800fe9e:	4639      	mov	r1, r7
 800fea0:	f8ad 801c 	strh.w	r8, [sp, #28]
 800fea4:	4628      	mov	r0, r5
 800fea6:	f7fc fda5 	bl	800c9f4 <_ZN8touchgfx4RectaNERKS0_>
 800feaa:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800feae:	2b00      	cmp	r3, #0
 800feb0:	dd19      	ble.n	800fee6 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800feb2:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800feb6:	2b00      	cmp	r3, #0
 800feb8:	dd15      	ble.n	800fee6 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800feba:	4b0c      	ldr	r3, [pc, #48]	; (800feec <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800febc:	681b      	ldr	r3, [r3, #0]
 800febe:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800fec2:	b10a      	cbz	r2, 800fec8 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800fec4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800fec6:	b900      	cbnz	r0, 800feca <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800fec8:	6898      	ldr	r0, [r3, #8]
 800feca:	2701      	movs	r7, #1
 800fecc:	6801      	ldr	r1, [r0, #0]
 800fece:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800fed2:	9702      	str	r7, [sp, #8]
 800fed4:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 800fed8:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800fedc:	e9cd 5600 	strd	r5, r6, [sp]
 800fee0:	688d      	ldr	r5, [r1, #8]
 800fee2:	4621      	mov	r1, r4
 800fee4:	47a8      	blx	r5
 800fee6:	b008      	add	sp, #32
 800fee8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800feec:	2400e0b4 	.word	0x2400e0b4

0800fef0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 800fef0:	4b02      	ldr	r3, [pc, #8]	; (800fefc <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 800fef2:	6018      	str	r0, [r3, #0]
 800fef4:	4b02      	ldr	r3, [pc, #8]	; (800ff00 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 800fef6:	6019      	str	r1, [r3, #0]
 800fef8:	4770      	bx	lr
 800fefa:	bf00      	nop
 800fefc:	2400e0bc 	.word	0x2400e0bc
 800ff00:	2400e0d0 	.word	0x2400e0d0

0800ff04 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj>:
 800ff04:	b538      	push	{r3, r4, r5, lr}
 800ff06:	4c2b      	ldr	r4, [pc, #172]	; (800ffb4 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xb0>)
 800ff08:	4b2b      	ldr	r3, [pc, #172]	; (800ffb8 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xb4>)
 800ff0a:	6821      	ldr	r1, [r4, #0]
 800ff0c:	681a      	ldr	r2, [r3, #0]
 800ff0e:	4281      	cmp	r1, r0
 800ff10:	4d2a      	ldr	r5, [pc, #168]	; (800ffbc <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xb8>)
 800ff12:	492b      	ldr	r1, [pc, #172]	; (800ffc0 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xbc>)
 800ff14:	d108      	bne.n	800ff28 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x24>
 800ff16:	682b      	ldr	r3, [r5, #0]
 800ff18:	4293      	cmp	r3, r2
 800ff1a:	d105      	bne.n	800ff28 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x24>
 800ff1c:	6808      	ldr	r0, [r1, #0]
 800ff1e:	280f      	cmp	r0, #15
 800ff20:	bf94      	ite	ls
 800ff22:	2000      	movls	r0, #0
 800ff24:	2001      	movhi	r0, #1
 800ff26:	bd38      	pop	{r3, r4, r5, pc}
 800ff28:	4b26      	ldr	r3, [pc, #152]	; (800ffc4 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc0>)
 800ff2a:	6020      	str	r0, [r4, #0]
 800ff2c:	681b      	ldr	r3, [r3, #0]
 800ff2e:	602a      	str	r2, [r5, #0]
 800ff30:	4298      	cmp	r0, r3
 800ff32:	d905      	bls.n	800ff40 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x3c>
 800ff34:	4b24      	ldr	r3, [pc, #144]	; (800ffc8 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc4>)
 800ff36:	2135      	movs	r1, #53	; 0x35
 800ff38:	4a24      	ldr	r2, [pc, #144]	; (800ffcc <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc8>)
 800ff3a:	4825      	ldr	r0, [pc, #148]	; (800ffd0 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xcc>)
 800ff3c:	f010 f850 	bl	801ffe0 <__assert_func>
 800ff40:	f010 0403 	ands.w	r4, r0, #3
 800ff44:	bf1f      	itttt	ne
 800ff46:	f1c4 0504 	rsbne	r5, r4, #4
 800ff4a:	3b04      	subne	r3, #4
 800ff4c:	1952      	addne	r2, r2, r5
 800ff4e:	191b      	addne	r3, r3, r4
 800ff50:	4d20      	ldr	r5, [pc, #128]	; (800ffd4 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xd0>)
 800ff52:	4402      	add	r2, r0
 800ff54:	1a1b      	subs	r3, r3, r0
 800ff56:	3001      	adds	r0, #1
 800ff58:	602a      	str	r2, [r5, #0]
 800ff5a:	f020 0401 	bic.w	r4, r0, #1
 800ff5e:	42a3      	cmp	r3, r4
 800ff60:	d203      	bcs.n	800ff6a <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x66>
 800ff62:	4b19      	ldr	r3, [pc, #100]	; (800ffc8 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc4>)
 800ff64:	2148      	movs	r1, #72	; 0x48
 800ff66:	4a19      	ldr	r2, [pc, #100]	; (800ffcc <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc8>)
 800ff68:	e7e7      	b.n	800ff3a <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x36>
 800ff6a:	f010 0002 	ands.w	r0, r0, #2
 800ff6e:	bf1f      	itttt	ne
 800ff70:	f1c0 0504 	rsbne	r5, r0, #4
 800ff74:	1952      	addne	r2, r2, r5
 800ff76:	1f05      	subne	r5, r0, #4
 800ff78:	195b      	addne	r3, r3, r5
 800ff7a:	4422      	add	r2, r4
 800ff7c:	4d16      	ldr	r5, [pc, #88]	; (800ffd8 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xd4>)
 800ff7e:	1b1b      	subs	r3, r3, r4
 800ff80:	602a      	str	r2, [r5, #0]
 800ff82:	429c      	cmp	r4, r3
 800ff84:	d903      	bls.n	800ff8e <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x8a>
 800ff86:	4b10      	ldr	r3, [pc, #64]	; (800ffc8 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc4>)
 800ff88:	215b      	movs	r1, #91	; 0x5b
 800ff8a:	4a10      	ldr	r2, [pc, #64]	; (800ffcc <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc8>)
 800ff8c:	e7d5      	b.n	800ff3a <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x36>
 800ff8e:	b120      	cbz	r0, 800ff9a <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x96>
 800ff90:	f1c0 0504 	rsb	r5, r0, #4
 800ff94:	3804      	subs	r0, #4
 800ff96:	442a      	add	r2, r5
 800ff98:	4403      	add	r3, r0
 800ff9a:	1b1b      	subs	r3, r3, r4
 800ff9c:	4422      	add	r2, r4
 800ff9e:	480f      	ldr	r0, [pc, #60]	; (800ffdc <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xd8>)
 800ffa0:	2b0f      	cmp	r3, #15
 800ffa2:	600b      	str	r3, [r1, #0]
 800ffa4:	6002      	str	r2, [r0, #0]
 800ffa6:	d803      	bhi.n	800ffb0 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xac>
 800ffa8:	4b0d      	ldr	r3, [pc, #52]	; (800ffe0 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xdc>)
 800ffaa:	216e      	movs	r1, #110	; 0x6e
 800ffac:	4a07      	ldr	r2, [pc, #28]	; (800ffcc <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc8>)
 800ffae:	e7c4      	b.n	800ff3a <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x36>
 800ffb0:	2001      	movs	r0, #1
 800ffb2:	e7b8      	b.n	800ff26 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x22>
 800ffb4:	2400e0c4 	.word	0x2400e0c4
 800ffb8:	2400e0bc 	.word	0x2400e0bc
 800ffbc:	2400e0cc 	.word	0x2400e0cc
 800ffc0:	2400e0d4 	.word	0x2400e0d4
 800ffc4:	2400e0d0 	.word	0x2400e0d0
 800ffc8:	08024208 	.word	0x08024208
 800ffcc:	080242d0 	.word	0x080242d0
 800ffd0:	08024241 	.word	0x08024241
 800ffd4:	2400e0d8 	.word	0x2400e0d8
 800ffd8:	2400e0c8 	.word	0x2400e0c8
 800ffdc:	2400e0c0 	.word	0x2400e0c0
 800ffe0:	0802428b 	.word	0x0802428b

0800ffe4 <_ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv>:
 800ffe4:	4b04      	ldr	r3, [pc, #16]	; (800fff8 <_ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv+0x14>)
 800ffe6:	6818      	ldr	r0, [r3, #0]
 800ffe8:	b120      	cbz	r0, 800fff4 <_ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv+0x10>
 800ffea:	4b04      	ldr	r3, [pc, #16]	; (800fffc <_ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv+0x18>)
 800ffec:	6818      	ldr	r0, [r3, #0]
 800ffee:	3000      	adds	r0, #0
 800fff0:	bf18      	it	ne
 800fff2:	2001      	movne	r0, #1
 800fff4:	4770      	bx	lr
 800fff6:	bf00      	nop
 800fff8:	2400e0bc 	.word	0x2400e0bc
 800fffc:	2400e0d0 	.word	0x2400e0d0

08010000 <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv>:
 8010000:	4b01      	ldr	r3, [pc, #4]	; (8010008 <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv+0x8>)
 8010002:	6818      	ldr	r0, [r3, #0]
 8010004:	4770      	bx	lr
 8010006:	bf00      	nop
 8010008:	2400e0c4 	.word	0x2400e0c4

0801000c <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCoversEv>:
 801000c:	4b01      	ldr	r3, [pc, #4]	; (8010014 <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCoversEv+0x8>)
 801000e:	6818      	ldr	r0, [r3, #0]
 8010010:	4770      	bx	lr
 8010012:	bf00      	nop
 8010014:	2400e0cc 	.word	0x2400e0cc

08010018 <_ZN8touchgfx20CanvasWidgetRenderer23getScanlineStartIndicesEv>:
 8010018:	4b01      	ldr	r3, [pc, #4]	; (8010020 <_ZN8touchgfx20CanvasWidgetRenderer23getScanlineStartIndicesEv+0x8>)
 801001a:	6818      	ldr	r0, [r3, #0]
 801001c:	4770      	bx	lr
 801001e:	bf00      	nop
 8010020:	2400e0d8 	.word	0x2400e0d8

08010024 <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCountsEv>:
 8010024:	4b01      	ldr	r3, [pc, #4]	; (801002c <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCountsEv+0x8>)
 8010026:	6818      	ldr	r0, [r3, #0]
 8010028:	4770      	bx	lr
 801002a:	bf00      	nop
 801002c:	2400e0c8 	.word	0x2400e0c8

08010030 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 8010030:	4b01      	ldr	r3, [pc, #4]	; (8010038 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 8010032:	6818      	ldr	r0, [r3, #0]
 8010034:	4770      	bx	lr
 8010036:	bf00      	nop
 8010038:	2400e0c0 	.word	0x2400e0c0

0801003c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 801003c:	4b01      	ldr	r3, [pc, #4]	; (8010044 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 801003e:	6818      	ldr	r0, [r3, #0]
 8010040:	4770      	bx	lr
 8010042:	bf00      	nop
 8010044:	2400e0d4 	.word	0x2400e0d4

08010048 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 8010048:	b510      	push	{r4, lr}
 801004a:	6803      	ldr	r3, [r0, #0]
 801004c:	460c      	mov	r4, r1
 801004e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010050:	4798      	blx	r3
 8010052:	1b03      	subs	r3, r0, r4
 8010054:	4258      	negs	r0, r3
 8010056:	4158      	adcs	r0, r3
 8010058:	bd10      	pop	{r4, pc}
	...

0801005c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 801005c:	4b01      	ldr	r3, [pc, #4]	; (8010064 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 801005e:	6019      	str	r1, [r3, #0]
 8010060:	4770      	bx	lr
 8010062:	bf00      	nop
 8010064:	2400e0dc 	.word	0x2400e0dc

08010068 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8010068:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801006c:	4696      	mov	lr, r2
 801006e:	b097      	sub	sp, #92	; 0x5c
 8010070:	4605      	mov	r5, r0
 8010072:	4614      	mov	r4, r2
 8010074:	460e      	mov	r6, r1
 8010076:	461f      	mov	r7, r3
 8010078:	f10d 0c1c 	add.w	ip, sp, #28
 801007c:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8010080:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 8010084:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 8010088:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801008c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8010090:	f8de 3000 	ldr.w	r3, [lr]
 8010094:	f104 0e14 	add.w	lr, r4, #20
 8010098:	f8cc 3000 	str.w	r3, [ip]
 801009c:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 80100a0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80100a4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80100a8:	f8de 3000 	ldr.w	r3, [lr]
 80100ac:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 80100b0:	f8cc 3000 	str.w	r3, [ip]
 80100b4:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 80100b8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80100bc:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80100c0:	f8de 3000 	ldr.w	r3, [lr]
 80100c4:	4631      	mov	r1, r6
 80100c6:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80100c8:	4628      	mov	r0, r5
 80100ca:	f8cc 3000 	str.w	r3, [ip]
 80100ce:	682b      	ldr	r3, [r5, #0]
 80100d0:	9201      	str	r2, [sp, #4]
 80100d2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80100d4:	f8cd 8008 	str.w	r8, [sp, #8]
 80100d8:	9200      	str	r2, [sp, #0]
 80100da:	aa07      	add	r2, sp, #28
 80100dc:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 80100e0:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 80100e4:	463b      	mov	r3, r7
 80100e6:	47d8      	blx	fp
 80100e8:	46a6      	mov	lr, r4
 80100ea:	f10d 0c1c 	add.w	ip, sp, #28
 80100ee:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80100f2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80100f6:	f8de 3000 	ldr.w	r3, [lr]
 80100fa:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 80100fe:	343c      	adds	r4, #60	; 0x3c
 8010100:	f8cc 3000 	str.w	r3, [ip]
 8010104:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8010108:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801010c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8010110:	f8de 3000 	ldr.w	r3, [lr]
 8010114:	f8cc 3000 	str.w	r3, [ip]
 8010118:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 801011c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801011e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8010122:	6823      	ldr	r3, [r4, #0]
 8010124:	4631      	mov	r1, r6
 8010126:	4628      	mov	r0, r5
 8010128:	f8cc 3000 	str.w	r3, [ip]
 801012c:	682b      	ldr	r3, [r5, #0]
 801012e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8010132:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8010134:	f8cd 8008 	str.w	r8, [sp, #8]
 8010138:	9201      	str	r2, [sp, #4]
 801013a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801013c:	9200      	str	r2, [sp, #0]
 801013e:	aa07      	add	r2, sp, #28
 8010140:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 8010142:	463b      	mov	r3, r7
 8010144:	47a0      	blx	r4
 8010146:	b017      	add	sp, #92	; 0x5c
 8010148:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801014c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 801014c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010150:	b08d      	sub	sp, #52	; 0x34
 8010152:	4688      	mov	r8, r1
 8010154:	f8d3 c000 	ldr.w	ip, [r3]
 8010158:	9916      	ldr	r1, [sp, #88]	; 0x58
 801015a:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 801015e:	680f      	ldr	r7, [r1, #0]
 8010160:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 8010164:	eba7 070c 	sub.w	r7, r7, ip
 8010168:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 801016c:	edd3 6a07 	vldr	s13, [r3, #28]
 8010170:	42bc      	cmp	r4, r7
 8010172:	9918      	ldr	r1, [sp, #96]	; 0x60
 8010174:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 8010178:	bfa8      	it	ge
 801017a:	463c      	movge	r4, r7
 801017c:	f9b1 9000 	ldrsh.w	r9, [r1]
 8010180:	f9ba 1000 	ldrsh.w	r1, [sl]
 8010184:	ee07 4a90 	vmov	s15, r4
 8010188:	eb09 0e0c 	add.w	lr, r9, ip
 801018c:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 8010190:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8010194:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 8010198:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 801019c:	4571      	cmp	r1, lr
 801019e:	ee25 4a04 	vmul.f32	s8, s10, s8
 80101a2:	ee65 4a24 	vmul.f32	s9, s10, s9
 80101a6:	ee25 5a27 	vmul.f32	s10, s10, s15
 80101aa:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 80101ae:	ee71 0aa4 	vadd.f32	s1, s3, s9
 80101b2:	ee32 1a05 	vadd.f32	s2, s4, s10
 80101b6:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80101ba:	ee36 0a84 	vadd.f32	s0, s13, s8
 80101be:	ee61 1a87 	vmul.f32	s3, s3, s14
 80101c2:	ee22 2a07 	vmul.f32	s4, s4, s14
 80101c6:	f340 808c 	ble.w	80102e2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
 80101ca:	eba1 060e 	sub.w	r6, r1, lr
 80101ce:	fb96 f5f4 	sdiv	r5, r6, r4
 80101d2:	ee07 5a10 	vmov	s14, r5
 80101d6:	2d00      	cmp	r5, #0
 80101d8:	fb04 6615 	mls	r6, r4, r5, r6
 80101dc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80101e0:	eea7 0a04 	vfma.f32	s0, s14, s8
 80101e4:	eee7 0a24 	vfma.f32	s1, s14, s9
 80101e8:	eea7 1a05 	vfma.f32	s2, s14, s10
 80101ec:	dd12      	ble.n	8010214 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
 80101ee:	ee70 6a44 	vsub.f32	s13, s0, s8
 80101f2:	ee70 1ae4 	vsub.f32	s3, s1, s9
 80101f6:	ee31 2a45 	vsub.f32	s4, s2, s10
 80101fa:	eef5 6a40 	vcmp.f32	s13, #0.0
 80101fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010202:	bf14      	ite	ne
 8010204:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8010208:	eeb0 7a67 	vmoveq.f32	s14, s15
 801020c:	ee61 1a87 	vmul.f32	s3, s3, s14
 8010210:	ee22 2a07 	vmul.f32	s4, s4, s14
 8010214:	fb05 f204 	mul.w	r2, r5, r4
 8010218:	1abf      	subs	r7, r7, r2
 801021a:	4494      	add	ip, r2
 801021c:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 8010220:	4411      	add	r1, r2
 8010222:	eb09 020c 	add.w	r2, r9, ip
 8010226:	b209      	sxth	r1, r1
 8010228:	443a      	add	r2, r7
 801022a:	428a      	cmp	r2, r1
 801022c:	bfc4      	itt	gt
 801022e:	eba1 0209 	subgt.w	r2, r1, r9
 8010232:	eba2 070c 	subgt.w	r7, r2, ip
 8010236:	2f00      	cmp	r7, #0
 8010238:	dd50      	ble.n	80102dc <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
 801023a:	fb97 f1f4 	sdiv	r1, r7, r4
 801023e:	fb04 7211 	mls	r2, r4, r1, r7
 8010242:	b90a      	cbnz	r2, 8010248 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
 8010244:	3901      	subs	r1, #1
 8010246:	4622      	mov	r2, r4
 8010248:	eec7 3a80 	vdiv.f32	s7, s15, s0
 801024c:	6840      	ldr	r0, [r0, #4]
 801024e:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 8010252:	44b6      	add	lr, r6
 8010254:	f8d0 a000 	ldr.w	sl, [r0]
 8010258:	2900      	cmp	r1, #0
 801025a:	bfcc      	ite	gt
 801025c:	46a1      	movgt	r9, r4
 801025e:	4691      	movle	r9, r2
 8010260:	900b      	str	r0, [sp, #44]	; 0x2c
 8010262:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8010264:	fb04 e505 	mla	r5, r4, r5, lr
 8010268:	eef0 6a42 	vmov.f32	s13, s4
 801026c:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 8010270:	9008      	str	r0, [sp, #32]
 8010272:	eeb0 7a61 	vmov.f32	s14, s3
 8010276:	9818      	ldr	r0, [sp, #96]	; 0x60
 8010278:	695b      	ldr	r3, [r3, #20]
 801027a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801027e:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 8010282:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8010286:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8010288:	445b      	add	r3, fp
 801028a:	9307      	str	r3, [sp, #28]
 801028c:	ee16 3a90 	vmov	r3, s13
 8010290:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8010294:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8010298:	ee21 3a23 	vmul.f32	s6, s2, s7
 801029c:	ee72 7ae1 	vsub.f32	s15, s5, s3
 80102a0:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 80102a4:	ee17 7a90 	vmov	r7, s15
 80102a8:	ee73 7a42 	vsub.f32	s15, s6, s4
 80102ac:	fb97 f7f4 	sdiv	r7, r7, r4
 80102b0:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 80102b4:	ee17 ca90 	vmov	ip, s15
 80102b8:	fb9c fcf4 	sdiv	ip, ip, r4
 80102bc:	fb0c 3306 	mla	r3, ip, r6, r3
 80102c0:	9302      	str	r3, [sp, #8]
 80102c2:	ee17 3a10 	vmov	r3, s14
 80102c6:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 80102ca:	fb07 3706 	mla	r7, r7, r6, r3
 80102ce:	eba9 0306 	sub.w	r3, r9, r6
 80102d2:	e9cd 4700 	strd	r4, r7, [sp]
 80102d6:	f8da 4008 	ldr.w	r4, [sl, #8]
 80102da:	47a0      	blx	r4
 80102dc:	b00d      	add	sp, #52	; 0x34
 80102de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80102e2:	2500      	movs	r5, #0
 80102e4:	462e      	mov	r6, r5
 80102e6:	e799      	b.n	801021c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

080102e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 80102e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80102ec:	b0db      	sub	sp, #364	; 0x16c
 80102ee:	461d      	mov	r5, r3
 80102f0:	4614      	mov	r4, r2
 80102f2:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 80102f6:	910f      	str	r1, [sp, #60]	; 0x3c
 80102f8:	4629      	mov	r1, r5
 80102fa:	930a      	str	r3, [sp, #40]	; 0x28
 80102fc:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 8010300:	9009      	str	r0, [sp, #36]	; 0x24
 8010302:	930b      	str	r3, [sp, #44]	; 0x2c
 8010304:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 8010308:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 801030c:	9310      	str	r3, [sp, #64]	; 0x40
 801030e:	6803      	ldr	r3, [r0, #0]
 8010310:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 8010312:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8010316:	47b8      	blx	r7
 8010318:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801031a:	6058      	str	r0, [r3, #4]
 801031c:	2800      	cmp	r0, #0
 801031e:	f000 83a1 	beq.w	8010a64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010322:	682b      	ldr	r3, [r5, #0]
 8010324:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 8010328:	ed94 7a02 	vldr	s14, [r4, #8]
 801032c:	9314      	str	r3, [sp, #80]	; 0x50
 801032e:	686b      	ldr	r3, [r5, #4]
 8010330:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8010334:	9315      	str	r3, [sp, #84]	; 0x54
 8010336:	4bc1      	ldr	r3, [pc, #772]	; (801063c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8010338:	7819      	ldrb	r1, [r3, #0]
 801033a:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 801033e:	2900      	cmp	r1, #0
 8010340:	bf16      	itet	ne
 8010342:	4619      	movne	r1, r3
 8010344:	4611      	moveq	r1, r2
 8010346:	4613      	movne	r3, r2
 8010348:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801034c:	9116      	str	r1, [sp, #88]	; 0x58
 801034e:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 8010352:	f240 8387 	bls.w	8010a64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010356:	ed94 7a07 	vldr	s14, [r4, #28]
 801035a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801035e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010362:	f240 837f 	bls.w	8010a64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010366:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 801036a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801036e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010372:	f240 8377 	bls.w	8010a64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010376:	6822      	ldr	r2, [r4, #0]
 8010378:	4bb1      	ldr	r3, [pc, #708]	; (8010640 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 801037a:	429a      	cmp	r2, r3
 801037c:	f2c0 8372 	blt.w	8010a64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010380:	49b0      	ldr	r1, [pc, #704]	; (8010644 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8010382:	6963      	ldr	r3, [r4, #20]
 8010384:	428a      	cmp	r2, r1
 8010386:	f300 836d 	bgt.w	8010a64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801038a:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 801038e:	48ae      	ldr	r0, [pc, #696]	; (8010648 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8010390:	33ff      	adds	r3, #255	; 0xff
 8010392:	4283      	cmp	r3, r0
 8010394:	f200 8366 	bhi.w	8010a64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010398:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 801039a:	4dac      	ldr	r5, [pc, #688]	; (801064c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 801039c:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 80103a0:	33ff      	adds	r3, #255	; 0xff
 80103a2:	42ab      	cmp	r3, r5
 80103a4:	f200 835e 	bhi.w	8010a64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80103a8:	6862      	ldr	r2, [r4, #4]
 80103aa:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 80103ae:	33ff      	adds	r3, #255	; 0xff
 80103b0:	4283      	cmp	r3, r0
 80103b2:	f200 8357 	bhi.w	8010a64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80103b6:	69a1      	ldr	r1, [r4, #24]
 80103b8:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 80103bc:	33ff      	adds	r3, #255	; 0xff
 80103be:	4283      	cmp	r3, r0
 80103c0:	f200 8350 	bhi.w	8010a64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80103c4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80103c6:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 80103ca:	30ff      	adds	r0, #255	; 0xff
 80103cc:	42a8      	cmp	r0, r5
 80103ce:	f200 8349 	bhi.w	8010a64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80103d2:	428a      	cmp	r2, r1
 80103d4:	f280 8110 	bge.w	80105f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 80103d8:	429a      	cmp	r2, r3
 80103da:	f300 8119 	bgt.w	8010610 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 80103de:	4299      	cmp	r1, r3
 80103e0:	f280 811d 	bge.w	801061e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 80103e4:	2502      	movs	r5, #2
 80103e6:	2701      	movs	r7, #1
 80103e8:	46a9      	mov	r9, r5
 80103ea:	46b8      	mov	r8, r7
 80103ec:	f04f 0a00 	mov.w	sl, #0
 80103f0:	4621      	mov	r1, r4
 80103f2:	a849      	add	r0, sp, #292	; 0x124
 80103f4:	f003 fe4c 	bl	8014090 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 80103f8:	4622      	mov	r2, r4
 80103fa:	4653      	mov	r3, sl
 80103fc:	a949      	add	r1, sp, #292	; 0x124
 80103fe:	f8cd 9000 	str.w	r9, [sp]
 8010402:	a819      	add	r0, sp, #100	; 0x64
 8010404:	f003 ff74 	bl	80142f0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8010408:	4622      	mov	r2, r4
 801040a:	4653      	mov	r3, sl
 801040c:	a949      	add	r1, sp, #292	; 0x124
 801040e:	f8cd 8000 	str.w	r8, [sp]
 8010412:	a829      	add	r0, sp, #164	; 0xa4
 8010414:	f003 ff6c 	bl	80142f0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8010418:	4643      	mov	r3, r8
 801041a:	4622      	mov	r2, r4
 801041c:	a949      	add	r1, sp, #292	; 0x124
 801041e:	f8cd 9000 	str.w	r9, [sp]
 8010422:	a839      	add	r0, sp, #228	; 0xe4
 8010424:	f003 ff64 	bl	80142f0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8010428:	42af      	cmp	r7, r5
 801042a:	af12      	add	r7, sp, #72	; 0x48
 801042c:	bfb7      	itett	lt
 801042e:	2300      	movlt	r3, #0
 8010430:	2301      	movge	r3, #1
 8010432:	ad29      	addlt	r5, sp, #164	; 0xa4
 8010434:	ac19      	addlt	r4, sp, #100	; 0x64
 8010436:	bfb1      	iteee	lt
 8010438:	930e      	strlt	r3, [sp, #56]	; 0x38
 801043a:	ad19      	addge	r5, sp, #100	; 0x64
 801043c:	930e      	strge	r3, [sp, #56]	; 0x38
 801043e:	ac29      	addge	r4, sp, #164	; 0xa4
 8010440:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8010442:	e893 0003 	ldmia.w	r3, {r0, r1}
 8010446:	e887 0003 	stmia.w	r7, {r0, r1}
 801044a:	b928      	cbnz	r0, 8010458 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 801044c:	4b80      	ldr	r3, [pc, #512]	; (8010650 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 801044e:	6818      	ldr	r0, [r3, #0]
 8010450:	6803      	ldr	r3, [r0, #0]
 8010452:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010454:	4798      	blx	r3
 8010456:	6038      	str	r0, [r7, #0]
 8010458:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801045a:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 801045e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8010462:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8010464:	930c      	str	r3, [sp, #48]	; 0x30
 8010466:	990c      	ldr	r1, [sp, #48]	; 0x30
 8010468:	6963      	ldr	r3, [r4, #20]
 801046a:	440b      	add	r3, r1
 801046c:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8010470:	4408      	add	r0, r1
 8010472:	b200      	sxth	r0, r0
 8010474:	4283      	cmp	r3, r0
 8010476:	900d      	str	r0, [sp, #52]	; 0x34
 8010478:	f280 80dd 	bge.w	8010636 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 801047c:	428b      	cmp	r3, r1
 801047e:	da08      	bge.n	8010492 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8010480:	2a00      	cmp	r2, #0
 8010482:	dd06      	ble.n	8010492 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8010484:	1acb      	subs	r3, r1, r3
 8010486:	429a      	cmp	r2, r3
 8010488:	f2c0 80e4 	blt.w	8010654 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 801048c:	2b00      	cmp	r3, #0
 801048e:	f300 80e2 	bgt.w	8010656 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8010492:	6967      	ldr	r7, [r4, #20]
 8010494:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8010498:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801049a:	443b      	add	r3, r7
 801049c:	461f      	mov	r7, r3
 801049e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80104a0:	1bdf      	subs	r7, r3, r7
 80104a2:	4297      	cmp	r7, r2
 80104a4:	bfa8      	it	ge
 80104a6:	4617      	movge	r7, r2
 80104a8:	2f00      	cmp	r7, #0
 80104aa:	f340 8166 	ble.w	801077a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 80104ae:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80104b0:	6829      	ldr	r1, [r5, #0]
 80104b2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80104b6:	f9bb 3000 	ldrsh.w	r3, [fp]
 80104ba:	4411      	add	r1, r2
 80104bc:	6820      	ldr	r0, [r4, #0]
 80104be:	4299      	cmp	r1, r3
 80104c0:	dd1a      	ble.n	80104f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 80104c2:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 80104c6:	4402      	add	r2, r0
 80104c8:	440b      	add	r3, r1
 80104ca:	b21b      	sxth	r3, r3
 80104cc:	429a      	cmp	r2, r3
 80104ce:	dc13      	bgt.n	80104f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 80104d0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80104d2:	a912      	add	r1, sp, #72	; 0x48
 80104d4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80104d6:	9809      	ldr	r0, [sp, #36]	; 0x24
 80104d8:	681b      	ldr	r3, [r3, #0]
 80104da:	9206      	str	r2, [sp, #24]
 80104dc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80104de:	9500      	str	r5, [sp, #0]
 80104e0:	9205      	str	r2, [sp, #20]
 80104e2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80104e4:	e9cd b203 	strd	fp, r2, [sp, #12]
 80104e8:	9a64      	ldr	r2, [sp, #400]	; 0x190
 80104ea:	e9cd 8201 	strd	r8, r2, [sp, #4]
 80104ee:	aa49      	add	r2, sp, #292	; 0x124
 80104f0:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 80104f4:	4623      	mov	r3, r4
 80104f6:	47c8      	blx	r9
 80104f8:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 80104fc:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8010500:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8010504:	ee37 7a27 	vadd.f32	s14, s14, s15
 8010508:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 801050c:	68a1      	ldr	r1, [r4, #8]
 801050e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010512:	ed94 6a08 	vldr	s12, [r4, #32]
 8010516:	edd4 6a07 	vldr	s13, [r4, #28]
 801051a:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801051e:	ee76 6a86 	vadd.f32	s13, s13, s12
 8010522:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8010526:	e9d4 2300 	ldrd	r2, r3, [r4]
 801052a:	edc4 6a07 	vstr	s13, [r4, #28]
 801052e:	441a      	add	r2, r3
 8010530:	6963      	ldr	r3, [r4, #20]
 8010532:	3301      	adds	r3, #1
 8010534:	6022      	str	r2, [r4, #0]
 8010536:	6163      	str	r3, [r4, #20]
 8010538:	69a3      	ldr	r3, [r4, #24]
 801053a:	3b01      	subs	r3, #1
 801053c:	61a3      	str	r3, [r4, #24]
 801053e:	6923      	ldr	r3, [r4, #16]
 8010540:	440b      	add	r3, r1
 8010542:	68e1      	ldr	r1, [r4, #12]
 8010544:	428b      	cmp	r3, r1
 8010546:	6123      	str	r3, [r4, #16]
 8010548:	db15      	blt.n	8010576 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 801054a:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 801054e:	3201      	adds	r2, #1
 8010550:	1a5b      	subs	r3, r3, r1
 8010552:	ee76 6a26 	vadd.f32	s13, s12, s13
 8010556:	6022      	str	r2, [r4, #0]
 8010558:	6123      	str	r3, [r4, #16]
 801055a:	edc4 6a07 	vstr	s13, [r4, #28]
 801055e:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8010562:	ee36 7a87 	vadd.f32	s14, s13, s14
 8010566:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801056a:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 801056e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8010572:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8010576:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 801057a:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 801057e:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8010582:	ee37 7a27 	vadd.f32	s14, s14, s15
 8010586:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 801058a:	68a9      	ldr	r1, [r5, #8]
 801058c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010590:	ed95 6a08 	vldr	s12, [r5, #32]
 8010594:	edd5 6a07 	vldr	s13, [r5, #28]
 8010598:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801059c:	ee76 6a86 	vadd.f32	s13, s13, s12
 80105a0:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80105a4:	e9d5 2300 	ldrd	r2, r3, [r5]
 80105a8:	edc5 6a07 	vstr	s13, [r5, #28]
 80105ac:	441a      	add	r2, r3
 80105ae:	696b      	ldr	r3, [r5, #20]
 80105b0:	3301      	adds	r3, #1
 80105b2:	602a      	str	r2, [r5, #0]
 80105b4:	616b      	str	r3, [r5, #20]
 80105b6:	69ab      	ldr	r3, [r5, #24]
 80105b8:	3b01      	subs	r3, #1
 80105ba:	61ab      	str	r3, [r5, #24]
 80105bc:	692b      	ldr	r3, [r5, #16]
 80105be:	440b      	add	r3, r1
 80105c0:	68e9      	ldr	r1, [r5, #12]
 80105c2:	428b      	cmp	r3, r1
 80105c4:	612b      	str	r3, [r5, #16]
 80105c6:	db15      	blt.n	80105f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 80105c8:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 80105cc:	3201      	adds	r2, #1
 80105ce:	1a5b      	subs	r3, r3, r1
 80105d0:	ee76 6a26 	vadd.f32	s13, s12, s13
 80105d4:	602a      	str	r2, [r5, #0]
 80105d6:	612b      	str	r3, [r5, #16]
 80105d8:	edc5 6a07 	vstr	s13, [r5, #28]
 80105dc:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 80105e0:	ee36 7a87 	vadd.f32	s14, s13, s14
 80105e4:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80105e8:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 80105ec:	ee77 7a27 	vadd.f32	s15, s14, s15
 80105f0:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80105f4:	3f01      	subs	r7, #1
 80105f6:	e757      	b.n	80104a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 80105f8:	4299      	cmp	r1, r3
 80105fa:	dc13      	bgt.n	8010624 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 80105fc:	429a      	cmp	r2, r3
 80105fe:	da14      	bge.n	801062a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8010600:	2502      	movs	r5, #2
 8010602:	2703      	movs	r7, #3
 8010604:	f04f 0800 	mov.w	r8, #0
 8010608:	46a9      	mov	r9, r5
 801060a:	f04f 0a01 	mov.w	sl, #1
 801060e:	e6ef      	b.n	80103f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8010610:	2501      	movs	r5, #1
 8010612:	2700      	movs	r7, #0
 8010614:	46a9      	mov	r9, r5
 8010616:	46b8      	mov	r8, r7
 8010618:	f04f 0a02 	mov.w	sl, #2
 801061c:	e6e8      	b.n	80103f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 801061e:	2501      	movs	r5, #1
 8010620:	2702      	movs	r7, #2
 8010622:	e6e1      	b.n	80103e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8010624:	2500      	movs	r5, #0
 8010626:	2701      	movs	r7, #1
 8010628:	e7f4      	b.n	8010614 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 801062a:	2702      	movs	r7, #2
 801062c:	2503      	movs	r5, #3
 801062e:	f04f 0900 	mov.w	r9, #0
 8010632:	46b8      	mov	r8, r7
 8010634:	e7e9      	b.n	801060a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 8010636:	4613      	mov	r3, r2
 8010638:	e728      	b.n	801048c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 801063a:	bf00      	nop
 801063c:	2400e0ac 	.word	0x2400e0ac
 8010640:	fffd8f01 	.word	0xfffd8f01
 8010644:	00027100 	.word	0x00027100
 8010648:	0004e1ff 	.word	0x0004e1ff
 801064c:	0004e1fe 	.word	0x0004e1fe
 8010650:	2400e0b4 	.word	0x2400e0b4
 8010654:	4613      	mov	r3, r2
 8010656:	992b      	ldr	r1, [sp, #172]	; 0xac
 8010658:	469e      	mov	lr, r3
 801065a:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 801065c:	469c      	mov	ip, r3
 801065e:	9111      	str	r1, [sp, #68]	; 0x44
 8010660:	f04f 0900 	mov.w	r9, #0
 8010664:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 8010668:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 801066c:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 8010670:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 8010674:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 8010678:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 801067c:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 8010680:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 8010684:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 8010688:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 801068c:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 8010690:	f1bc 0f00 	cmp.w	ip, #0
 8010694:	d147      	bne.n	8010726 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 8010696:	eb03 0c07 	add.w	ip, r3, r7
 801069a:	1ad7      	subs	r7, r2, r3
 801069c:	f1b9 0f00 	cmp.w	r9, #0
 80106a0:	d009      	beq.n	80106b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 80106a2:	9029      	str	r0, [sp, #164]	; 0xa4
 80106a4:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 80106a8:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 80106ac:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 80106b0:	912d      	str	r1, [sp, #180]	; 0xb4
 80106b2:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 80106b6:	991b      	ldr	r1, [sp, #108]	; 0x6c
 80106b8:	f04f 0800 	mov.w	r8, #0
 80106bc:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 80106c0:	9111      	str	r1, [sp, #68]	; 0x44
 80106c2:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 80106c6:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 80106ca:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 80106ce:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 80106d2:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 80106d6:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 80106da:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 80106de:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 80106e2:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 80106e6:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 80106ea:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 80106ee:	f1be 0f00 	cmp.w	lr, #0
 80106f2:	d031      	beq.n	8010758 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 80106f4:	9e11      	ldr	r6, [sp, #68]	; 0x44
 80106f6:	4450      	add	r0, sl
 80106f8:	ee76 6aa4 	vadd.f32	s13, s13, s9
 80106fc:	4431      	add	r1, r6
 80106fe:	ee37 7a04 	vadd.f32	s14, s14, s8
 8010702:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8010706:	4549      	cmp	r1, r9
 8010708:	db08      	blt.n	801071c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 801070a:	ee77 7a85 	vadd.f32	s15, s15, s10
 801070e:	3001      	adds	r0, #1
 8010710:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8010714:	eba1 0109 	sub.w	r1, r1, r9
 8010718:	ee37 7a06 	vadd.f32	s14, s14, s12
 801071c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8010720:	f04f 0801 	mov.w	r8, #1
 8010724:	e7e3      	b.n	80106ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 8010726:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8010728:	4450      	add	r0, sl
 801072a:	ee37 7a24 	vadd.f32	s14, s14, s9
 801072e:	4431      	add	r1, r6
 8010730:	ee77 7a84 	vadd.f32	s15, s15, s8
 8010734:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8010738:	4541      	cmp	r1, r8
 801073a:	db08      	blt.n	801074e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 801073c:	ee76 6a85 	vadd.f32	s13, s13, s10
 8010740:	3001      	adds	r0, #1
 8010742:	ee37 7a25 	vadd.f32	s14, s14, s11
 8010746:	eba1 0108 	sub.w	r1, r1, r8
 801074a:	ee77 7a86 	vadd.f32	s15, s15, s12
 801074e:	f10c 3cff 	add.w	ip, ip, #4294967295
 8010752:	f04f 0901 	mov.w	r9, #1
 8010756:	e79b      	b.n	8010690 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 8010758:	449c      	add	ip, r3
 801075a:	1aff      	subs	r7, r7, r3
 801075c:	f1b8 0f00 	cmp.w	r8, #0
 8010760:	d009      	beq.n	8010776 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8010762:	9019      	str	r0, [sp, #100]	; 0x64
 8010764:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8010768:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 801076c:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8010770:	911d      	str	r1, [sp, #116]	; 0x74
 8010772:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8010776:	1ad2      	subs	r2, r2, r3
 8010778:	e68b      	b.n	8010492 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 801077a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801077c:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 801077e:	2b00      	cmp	r3, #0
 8010780:	f000 80d1 	beq.w	8010926 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8010784:	ad19      	add	r5, sp, #100	; 0x64
 8010786:	ac39      	add	r4, sp, #228	; 0xe4
 8010788:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801078a:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 801078e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8010792:	930c      	str	r3, [sp, #48]	; 0x30
 8010794:	990c      	ldr	r1, [sp, #48]	; 0x30
 8010796:	6963      	ldr	r3, [r4, #20]
 8010798:	440b      	add	r3, r1
 801079a:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 801079e:	4408      	add	r0, r1
 80107a0:	b200      	sxth	r0, r0
 80107a2:	4283      	cmp	r3, r0
 80107a4:	900d      	str	r0, [sp, #52]	; 0x34
 80107a6:	f280 80c1 	bge.w	801092c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 80107aa:	428b      	cmp	r3, r1
 80107ac:	da08      	bge.n	80107c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80107ae:	2a00      	cmp	r2, #0
 80107b0:	dd06      	ble.n	80107c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80107b2:	1acb      	subs	r3, r1, r3
 80107b4:	429a      	cmp	r2, r3
 80107b6:	f2c0 80bb 	blt.w	8010930 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 80107ba:	2b00      	cmp	r3, #0
 80107bc:	f300 80b9 	bgt.w	8010932 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 80107c0:	6967      	ldr	r7, [r4, #20]
 80107c2:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 80107c6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80107c8:	443b      	add	r3, r7
 80107ca:	461f      	mov	r7, r3
 80107cc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80107ce:	1bdf      	subs	r7, r3, r7
 80107d0:	4297      	cmp	r7, r2
 80107d2:	bfa8      	it	ge
 80107d4:	4617      	movge	r7, r2
 80107d6:	2f00      	cmp	r7, #0
 80107d8:	f340 813c 	ble.w	8010a54 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 80107dc:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80107de:	6829      	ldr	r1, [r5, #0]
 80107e0:	f9b3 2000 	ldrsh.w	r2, [r3]
 80107e4:	f9bb 3000 	ldrsh.w	r3, [fp]
 80107e8:	4411      	add	r1, r2
 80107ea:	6820      	ldr	r0, [r4, #0]
 80107ec:	4299      	cmp	r1, r3
 80107ee:	dd1a      	ble.n	8010826 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 80107f0:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 80107f4:	4402      	add	r2, r0
 80107f6:	440b      	add	r3, r1
 80107f8:	b21b      	sxth	r3, r3
 80107fa:	429a      	cmp	r2, r3
 80107fc:	dc13      	bgt.n	8010826 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 80107fe:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010800:	a912      	add	r1, sp, #72	; 0x48
 8010802:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010804:	9809      	ldr	r0, [sp, #36]	; 0x24
 8010806:	681b      	ldr	r3, [r3, #0]
 8010808:	9206      	str	r2, [sp, #24]
 801080a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801080c:	9500      	str	r5, [sp, #0]
 801080e:	9205      	str	r2, [sp, #20]
 8010810:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8010812:	e9cd b203 	strd	fp, r2, [sp, #12]
 8010816:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8010818:	e9cd 8201 	strd	r8, r2, [sp, #4]
 801081c:	aa49      	add	r2, sp, #292	; 0x124
 801081e:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8010822:	4623      	mov	r3, r4
 8010824:	47c8      	blx	r9
 8010826:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 801082a:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 801082e:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8010832:	ee37 7a27 	vadd.f32	s14, s14, s15
 8010836:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 801083a:	68a1      	ldr	r1, [r4, #8]
 801083c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010840:	ed94 6a08 	vldr	s12, [r4, #32]
 8010844:	edd4 6a07 	vldr	s13, [r4, #28]
 8010848:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801084c:	ee76 6a86 	vadd.f32	s13, s13, s12
 8010850:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8010854:	e9d4 2300 	ldrd	r2, r3, [r4]
 8010858:	edc4 6a07 	vstr	s13, [r4, #28]
 801085c:	441a      	add	r2, r3
 801085e:	6963      	ldr	r3, [r4, #20]
 8010860:	3301      	adds	r3, #1
 8010862:	6022      	str	r2, [r4, #0]
 8010864:	6163      	str	r3, [r4, #20]
 8010866:	69a3      	ldr	r3, [r4, #24]
 8010868:	3b01      	subs	r3, #1
 801086a:	61a3      	str	r3, [r4, #24]
 801086c:	6923      	ldr	r3, [r4, #16]
 801086e:	440b      	add	r3, r1
 8010870:	68e1      	ldr	r1, [r4, #12]
 8010872:	428b      	cmp	r3, r1
 8010874:	6123      	str	r3, [r4, #16]
 8010876:	db15      	blt.n	80108a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8010878:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 801087c:	3201      	adds	r2, #1
 801087e:	1a5b      	subs	r3, r3, r1
 8010880:	ee76 6a26 	vadd.f32	s13, s12, s13
 8010884:	6022      	str	r2, [r4, #0]
 8010886:	6123      	str	r3, [r4, #16]
 8010888:	edc4 6a07 	vstr	s13, [r4, #28]
 801088c:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8010890:	ee36 7a87 	vadd.f32	s14, s13, s14
 8010894:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8010898:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 801089c:	ee77 7a27 	vadd.f32	s15, s14, s15
 80108a0:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80108a4:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 80108a8:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 80108ac:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 80108b0:	ee37 7a27 	vadd.f32	s14, s14, s15
 80108b4:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 80108b8:	68a9      	ldr	r1, [r5, #8]
 80108ba:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80108be:	ed95 6a08 	vldr	s12, [r5, #32]
 80108c2:	edd5 6a07 	vldr	s13, [r5, #28]
 80108c6:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80108ca:	ee76 6a86 	vadd.f32	s13, s13, s12
 80108ce:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80108d2:	e9d5 2300 	ldrd	r2, r3, [r5]
 80108d6:	edc5 6a07 	vstr	s13, [r5, #28]
 80108da:	441a      	add	r2, r3
 80108dc:	696b      	ldr	r3, [r5, #20]
 80108de:	3301      	adds	r3, #1
 80108e0:	602a      	str	r2, [r5, #0]
 80108e2:	616b      	str	r3, [r5, #20]
 80108e4:	69ab      	ldr	r3, [r5, #24]
 80108e6:	3b01      	subs	r3, #1
 80108e8:	61ab      	str	r3, [r5, #24]
 80108ea:	692b      	ldr	r3, [r5, #16]
 80108ec:	440b      	add	r3, r1
 80108ee:	68e9      	ldr	r1, [r5, #12]
 80108f0:	428b      	cmp	r3, r1
 80108f2:	612b      	str	r3, [r5, #16]
 80108f4:	db15      	blt.n	8010922 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 80108f6:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 80108fa:	3201      	adds	r2, #1
 80108fc:	1a5b      	subs	r3, r3, r1
 80108fe:	ee76 6a26 	vadd.f32	s13, s12, s13
 8010902:	602a      	str	r2, [r5, #0]
 8010904:	612b      	str	r3, [r5, #16]
 8010906:	edc5 6a07 	vstr	s13, [r5, #28]
 801090a:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 801090e:	ee36 7a87 	vadd.f32	s14, s13, s14
 8010912:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8010916:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 801091a:	ee77 7a27 	vadd.f32	s15, s14, s15
 801091e:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8010922:	3f01      	subs	r7, #1
 8010924:	e757      	b.n	80107d6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 8010926:	ad39      	add	r5, sp, #228	; 0xe4
 8010928:	ac19      	add	r4, sp, #100	; 0x64
 801092a:	e72d      	b.n	8010788 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 801092c:	4613      	mov	r3, r2
 801092e:	e744      	b.n	80107ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8010930:	4613      	mov	r3, r2
 8010932:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 8010934:	469e      	mov	lr, r3
 8010936:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 801093a:	461f      	mov	r7, r3
 801093c:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 8010940:	f04f 0900 	mov.w	r9, #0
 8010944:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 8010948:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 801094c:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8010950:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8010954:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 8010958:	993d      	ldr	r1, [sp, #244]	; 0xf4
 801095a:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 801095e:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8010962:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 8010966:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 801096a:	960e      	str	r6, [sp, #56]	; 0x38
 801096c:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 8010970:	2f00      	cmp	r7, #0
 8010972:	d146      	bne.n	8010a02 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8010974:	449c      	add	ip, r3
 8010976:	1ad7      	subs	r7, r2, r3
 8010978:	f1b9 0f00 	cmp.w	r9, #0
 801097c:	d009      	beq.n	8010992 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 801097e:	9039      	str	r0, [sp, #228]	; 0xe4
 8010980:	913d      	str	r1, [sp, #244]	; 0xf4
 8010982:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 8010986:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 801098a:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 801098e:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 8010992:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8010994:	f04f 0800 	mov.w	r8, #0
 8010998:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 801099c:	910e      	str	r1, [sp, #56]	; 0x38
 801099e:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 80109a2:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 80109a6:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 80109aa:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 80109ae:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 80109b2:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 80109b6:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 80109ba:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 80109be:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 80109c2:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 80109c6:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 80109ca:	f1be 0f00 	cmp.w	lr, #0
 80109ce:	d030      	beq.n	8010a32 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 80109d0:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80109d2:	4450      	add	r0, sl
 80109d4:	ee76 6aa4 	vadd.f32	s13, s13, s9
 80109d8:	4431      	add	r1, r6
 80109da:	ee37 7a04 	vadd.f32	s14, s14, s8
 80109de:	ee77 7aa3 	vadd.f32	s15, s15, s7
 80109e2:	4549      	cmp	r1, r9
 80109e4:	db08      	blt.n	80109f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 80109e6:	ee77 7a85 	vadd.f32	s15, s15, s10
 80109ea:	3001      	adds	r0, #1
 80109ec:	ee76 6aa5 	vadd.f32	s13, s13, s11
 80109f0:	eba1 0109 	sub.w	r1, r1, r9
 80109f4:	ee37 7a06 	vadd.f32	s14, s14, s12
 80109f8:	f10e 3eff 	add.w	lr, lr, #4294967295
 80109fc:	f04f 0801 	mov.w	r8, #1
 8010a00:	e7e3      	b.n	80109ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8010a02:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8010a04:	4450      	add	r0, sl
 8010a06:	ee37 7a24 	vadd.f32	s14, s14, s9
 8010a0a:	4431      	add	r1, r6
 8010a0c:	ee77 7a84 	vadd.f32	s15, s15, s8
 8010a10:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8010a14:	4541      	cmp	r1, r8
 8010a16:	db08      	blt.n	8010a2a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8010a18:	ee76 6a85 	vadd.f32	s13, s13, s10
 8010a1c:	3001      	adds	r0, #1
 8010a1e:	ee37 7a25 	vadd.f32	s14, s14, s11
 8010a22:	eba1 0108 	sub.w	r1, r1, r8
 8010a26:	ee77 7a86 	vadd.f32	s15, s15, s12
 8010a2a:	3f01      	subs	r7, #1
 8010a2c:	f04f 0901 	mov.w	r9, #1
 8010a30:	e79e      	b.n	8010970 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 8010a32:	449c      	add	ip, r3
 8010a34:	1aff      	subs	r7, r7, r3
 8010a36:	f1b8 0f00 	cmp.w	r8, #0
 8010a3a:	d009      	beq.n	8010a50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8010a3c:	9019      	str	r0, [sp, #100]	; 0x64
 8010a3e:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8010a42:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8010a46:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8010a4a:	911d      	str	r1, [sp, #116]	; 0x74
 8010a4c:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8010a50:	1ad2      	subs	r2, r2, r3
 8010a52:	e6b5      	b.n	80107c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8010a54:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8010a56:	681b      	ldr	r3, [r3, #0]
 8010a58:	b923      	cbnz	r3, 8010a64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010a5a:	4b04      	ldr	r3, [pc, #16]	; (8010a6c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8010a5c:	6818      	ldr	r0, [r3, #0]
 8010a5e:	6803      	ldr	r3, [r0, #0]
 8010a60:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010a62:	4798      	blx	r3
 8010a64:	b05b      	add	sp, #364	; 0x16c
 8010a66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010a6a:	bf00      	nop
 8010a6c:	2400e0b4 	.word	0x2400e0b4

08010a70 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 8010a70:	b570      	push	{r4, r5, r6, lr}
 8010a72:	4604      	mov	r4, r0
 8010a74:	2500      	movs	r5, #0
 8010a76:	9804      	ldr	r0, [sp, #16]
 8010a78:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8010a7c:	8025      	strh	r5, [r4, #0]
 8010a7e:	6061      	str	r1, [r4, #4]
 8010a80:	7223      	strb	r3, [r4, #8]
 8010a82:	7266      	strb	r6, [r4, #9]
 8010a84:	60e0      	str	r0, [r4, #12]
 8010a86:	8222      	strh	r2, [r4, #16]
 8010a88:	8265      	strh	r5, [r4, #18]
 8010a8a:	82a5      	strh	r5, [r4, #20]
 8010a8c:	82e5      	strh	r5, [r4, #22]
 8010a8e:	8325      	strh	r5, [r4, #24]
 8010a90:	8365      	strh	r5, [r4, #26]
 8010a92:	83a5      	strh	r5, [r4, #28]
 8010a94:	77a5      	strb	r5, [r4, #30]
 8010a96:	b32e      	cbz	r6, 8010ae4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 8010a98:	6803      	ldr	r3, [r0, #0]
 8010a9a:	695b      	ldr	r3, [r3, #20]
 8010a9c:	4798      	blx	r3
 8010a9e:	4606      	mov	r6, r0
 8010aa0:	b300      	cbz	r0, 8010ae4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 8010aa2:	68e0      	ldr	r0, [r4, #12]
 8010aa4:	4631      	mov	r1, r6
 8010aa6:	6803      	ldr	r3, [r0, #0]
 8010aa8:	68db      	ldr	r3, [r3, #12]
 8010aaa:	4798      	blx	r3
 8010aac:	4605      	mov	r5, r0
 8010aae:	b1c8      	cbz	r0, 8010ae4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 8010ab0:	7b43      	ldrb	r3, [r0, #13]
 8010ab2:	7a82      	ldrb	r2, [r0, #10]
 8010ab4:	005b      	lsls	r3, r3, #1
 8010ab6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8010aba:	4313      	orrs	r3, r2
 8010abc:	83a3      	strh	r3, [r4, #28]
 8010abe:	7a63      	ldrb	r3, [r4, #9]
 8010ac0:	2b04      	cmp	r3, #4
 8010ac2:	d10f      	bne.n	8010ae4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 8010ac4:	68e0      	ldr	r0, [r4, #12]
 8010ac6:	462a      	mov	r2, r5
 8010ac8:	4631      	mov	r1, r6
 8010aca:	6803      	ldr	r3, [r0, #0]
 8010acc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010ace:	4798      	blx	r3
 8010ad0:	7b6b      	ldrb	r3, [r5, #13]
 8010ad2:	005b      	lsls	r3, r3, #1
 8010ad4:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8010ad8:	7aab      	ldrb	r3, [r5, #10]
 8010ada:	4313      	orrs	r3, r2
 8010adc:	4418      	add	r0, r3
 8010ade:	8ba3      	ldrh	r3, [r4, #28]
 8010ae0:	4418      	add	r0, r3
 8010ae2:	83a0      	strh	r0, [r4, #28]
 8010ae4:	4620      	mov	r0, r4
 8010ae6:	bd70      	pop	{r4, r5, r6, pc}

08010ae8 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8010ae8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010aec:	2400      	movs	r4, #0
 8010aee:	b085      	sub	sp, #20
 8010af0:	4681      	mov	r9, r0
 8010af2:	4688      	mov	r8, r1
 8010af4:	4692      	mov	sl, r2
 8010af6:	469b      	mov	fp, r3
 8010af8:	4627      	mov	r7, r4
 8010afa:	4625      	mov	r5, r4
 8010afc:	4626      	mov	r6, r4
 8010afe:	4554      	cmp	r4, sl
 8010b00:	da2a      	bge.n	8010b58 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8010b02:	2300      	movs	r3, #0
 8010b04:	9303      	str	r3, [sp, #12]
 8010b06:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8010b0a:	429d      	cmp	r5, r3
 8010b0c:	d004      	beq.n	8010b18 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8010b0e:	f242 030b 	movw	r3, #8203	; 0x200b
 8010b12:	429d      	cmp	r5, r3
 8010b14:	bf18      	it	ne
 8010b16:	462f      	movne	r7, r5
 8010b18:	ab03      	add	r3, sp, #12
 8010b1a:	4642      	mov	r2, r8
 8010b1c:	4659      	mov	r1, fp
 8010b1e:	4648      	mov	r0, r9
 8010b20:	f003 f872 	bl	8013c08 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010b24:	4605      	mov	r5, r0
 8010b26:	b1b8      	cbz	r0, 8010b58 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8010b28:	280a      	cmp	r0, #10
 8010b2a:	d015      	beq.n	8010b58 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8010b2c:	9a03      	ldr	r2, [sp, #12]
 8010b2e:	b18a      	cbz	r2, 8010b54 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8010b30:	7b50      	ldrb	r0, [r2, #13]
 8010b32:	4639      	mov	r1, r7
 8010b34:	7a93      	ldrb	r3, [r2, #10]
 8010b36:	0040      	lsls	r0, r0, #1
 8010b38:	8895      	ldrh	r5, [r2, #4]
 8010b3a:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8010b3e:	4303      	orrs	r3, r0
 8010b40:	4640      	mov	r0, r8
 8010b42:	9301      	str	r3, [sp, #4]
 8010b44:	f8d8 3000 	ldr.w	r3, [r8]
 8010b48:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010b4a:	4798      	blx	r3
 8010b4c:	9b01      	ldr	r3, [sp, #4]
 8010b4e:	4418      	add	r0, r3
 8010b50:	4406      	add	r6, r0
 8010b52:	b2b6      	uxth	r6, r6
 8010b54:	3401      	adds	r4, #1
 8010b56:	e7d2      	b.n	8010afe <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8010b58:	4630      	mov	r0, r6
 8010b5a:	b005      	add	sp, #20
 8010b5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010b60 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8010b60:	2a02      	cmp	r2, #2
 8010b62:	b530      	push	{r4, r5, lr}
 8010b64:	d011      	beq.n	8010b8a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8010b66:	2a03      	cmp	r2, #3
 8010b68:	d01c      	beq.n	8010ba4 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8010b6a:	2a01      	cmp	r2, #1
 8010b6c:	d10c      	bne.n	8010b88 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8010b6e:	888b      	ldrh	r3, [r1, #4]
 8010b70:	8801      	ldrh	r1, [r0, #0]
 8010b72:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8010b76:	1a5b      	subs	r3, r3, r1
 8010b78:	8844      	ldrh	r4, [r0, #2]
 8010b7a:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8010b7e:	1a9b      	subs	r3, r3, r2
 8010b80:	8004      	strh	r4, [r0, #0]
 8010b82:	8081      	strh	r1, [r0, #4]
 8010b84:	8043      	strh	r3, [r0, #2]
 8010b86:	80c2      	strh	r2, [r0, #6]
 8010b88:	bd30      	pop	{r4, r5, pc}
 8010b8a:	88cb      	ldrh	r3, [r1, #6]
 8010b8c:	8842      	ldrh	r2, [r0, #2]
 8010b8e:	1a9b      	subs	r3, r3, r2
 8010b90:	88c2      	ldrh	r2, [r0, #6]
 8010b92:	1a9b      	subs	r3, r3, r2
 8010b94:	888a      	ldrh	r2, [r1, #4]
 8010b96:	8801      	ldrh	r1, [r0, #0]
 8010b98:	8043      	strh	r3, [r0, #2]
 8010b9a:	1a52      	subs	r2, r2, r1
 8010b9c:	8881      	ldrh	r1, [r0, #4]
 8010b9e:	1a52      	subs	r2, r2, r1
 8010ba0:	8002      	strh	r2, [r0, #0]
 8010ba2:	e7f1      	b.n	8010b88 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8010ba4:	88cb      	ldrh	r3, [r1, #6]
 8010ba6:	8841      	ldrh	r1, [r0, #2]
 8010ba8:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8010bac:	1a5b      	subs	r3, r3, r1
 8010bae:	f9b0 5000 	ldrsh.w	r5, [r0]
 8010bb2:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8010bb6:	1a9b      	subs	r3, r3, r2
 8010bb8:	8045      	strh	r5, [r0, #2]
 8010bba:	8082      	strh	r2, [r0, #4]
 8010bbc:	8003      	strh	r3, [r0, #0]
 8010bbe:	80c4      	strh	r4, [r0, #6]
 8010bc0:	e7e2      	b.n	8010b88 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08010bc2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8010bc2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010bc6:	b09f      	sub	sp, #124	; 0x7c
 8010bc8:	9116      	str	r1, [sp, #88]	; 0x58
 8010bca:	9317      	str	r3, [sp, #92]	; 0x5c
 8010bcc:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8010bce:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8010bd0:	8809      	ldrh	r1, [r1, #0]
 8010bd2:	889b      	ldrh	r3, [r3, #4]
 8010bd4:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 8010bd8:	440b      	add	r3, r1
 8010bda:	9212      	str	r2, [sp, #72]	; 0x48
 8010bdc:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 8010be0:	b21b      	sxth	r3, r3
 8010be2:	9011      	str	r0, [sp, #68]	; 0x44
 8010be4:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8010be8:	9310      	str	r3, [sp, #64]	; 0x40
 8010bea:	f8d8 3000 	ldr.w	r3, [r8]
 8010bee:	f9bd 50a0 	ldrsh.w	r5, [sp, #160]	; 0xa0
 8010bf2:	7a59      	ldrb	r1, [r3, #9]
 8010bf4:	7a1b      	ldrb	r3, [r3, #8]
 8010bf6:	9114      	str	r1, [sp, #80]	; 0x50
 8010bf8:	9315      	str	r3, [sp, #84]	; 0x54
 8010bfa:	2a00      	cmp	r2, #0
 8010bfc:	d067      	beq.n	8010cce <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x10c>
 8010bfe:	f898 3010 	ldrb.w	r3, [r8, #16]
 8010c02:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8010c04:	2b04      	cmp	r3, #4
 8010c06:	bf14      	ite	ne
 8010c08:	2301      	movne	r3, #1
 8010c0a:	2302      	moveq	r3, #2
 8010c0c:	4413      	add	r3, r2
 8010c0e:	f04f 0900 	mov.w	r9, #0
 8010c12:	930f      	str	r3, [sp, #60]	; 0x3c
 8010c14:	464c      	mov	r4, r9
 8010c16:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8010c1a:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8010c1e:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 8010c22:	4293      	cmp	r3, r2
 8010c24:	f280 808c 	bge.w	8010d40 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17e>
 8010c28:	2300      	movs	r3, #0
 8010c2a:	931c      	str	r3, [sp, #112]	; 0x70
 8010c2c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8010c30:	429c      	cmp	r4, r3
 8010c32:	d006      	beq.n	8010c42 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x80>
 8010c34:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010c36:	f242 020b 	movw	r2, #8203	; 0x200b
 8010c3a:	4294      	cmp	r4, r2
 8010c3c:	bf18      	it	ne
 8010c3e:	4623      	movne	r3, r4
 8010c40:	930d      	str	r3, [sp, #52]	; 0x34
 8010c42:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010c44:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8010c46:	f8d8 2000 	ldr.w	r2, [r8]
 8010c4a:	428b      	cmp	r3, r1
 8010c4c:	db41      	blt.n	8010cd2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x110>
 8010c4e:	6813      	ldr	r3, [r2, #0]
 8010c50:	4610      	mov	r0, r2
 8010c52:	695b      	ldr	r3, [r3, #20]
 8010c54:	4798      	blx	r3
 8010c56:	4604      	mov	r4, r0
 8010c58:	f8d8 0000 	ldr.w	r0, [r8]
 8010c5c:	aa1d      	add	r2, sp, #116	; 0x74
 8010c5e:	4621      	mov	r1, r4
 8010c60:	6803      	ldr	r3, [r0, #0]
 8010c62:	689e      	ldr	r6, [r3, #8]
 8010c64:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8010c68:	47b0      	blx	r6
 8010c6a:	901c      	str	r0, [sp, #112]	; 0x70
 8010c6c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8010c70:	429c      	cmp	r4, r3
 8010c72:	f000 80ea 	beq.w	8010e4a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 8010c76:	f242 030b 	movw	r3, #8203	; 0x200b
 8010c7a:	429c      	cmp	r4, r3
 8010c7c:	f000 80e5 	beq.w	8010e4a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 8010c80:	2c00      	cmp	r4, #0
 8010c82:	f000 80f7 	beq.w	8010e74 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 8010c86:	2c0a      	cmp	r4, #10
 8010c88:	d060      	beq.n	8010d4c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18a>
 8010c8a:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8010c8c:	b36a      	cbz	r2, 8010cea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x128>
 8010c8e:	8894      	ldrh	r4, [r2, #4]
 8010c90:	f1bb 0f00 	cmp.w	fp, #0
 8010c94:	d03b      	beq.n	8010d0e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x14c>
 8010c96:	f892 900d 	ldrb.w	r9, [r2, #13]
 8010c9a:	f1bb 0f01 	cmp.w	fp, #1
 8010c9e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8010ca2:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8010ca6:	f892 900a 	ldrb.w	r9, [r2, #10]
 8010caa:	ea49 0903 	orr.w	r9, r9, r3
 8010cae:	d134      	bne.n	8010d1a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x158>
 8010cb0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010cb2:	eba5 0509 	sub.w	r5, r5, r9
 8010cb6:	2b00      	cmp	r3, #0
 8010cb8:	d14f      	bne.n	8010d5a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x198>
 8010cba:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010cbc:	eb09 0305 	add.w	r3, r9, r5
 8010cc0:	4413      	add	r3, r2
 8010cc2:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8010cc4:	f9b2 2000 	ldrsh.w	r2, [r2]
 8010cc8:	4293      	cmp	r3, r2
 8010cca:	da51      	bge.n	8010d70 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 8010ccc:	e038      	b.n	8010d40 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17e>
 8010cce:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8010cd0:	e79d      	b.n	8010c0e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 8010cd2:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8010cd6:	4659      	mov	r1, fp
 8010cd8:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8010cda:	9301      	str	r3, [sp, #4]
 8010cdc:	ab1d      	add	r3, sp, #116	; 0x74
 8010cde:	9300      	str	r3, [sp, #0]
 8010ce0:	ab1c      	add	r3, sp, #112	; 0x70
 8010ce2:	f002 ffe9 	bl	8013cb8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8010ce6:	4604      	mov	r4, r0
 8010ce8:	e7c0      	b.n	8010c6c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xaa>
 8010cea:	f8d8 0000 	ldr.w	r0, [r8]
 8010cee:	6803      	ldr	r3, [r0, #0]
 8010cf0:	691b      	ldr	r3, [r3, #16]
 8010cf2:	4798      	blx	r3
 8010cf4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8010cf8:	4298      	cmp	r0, r3
 8010cfa:	f000 80a6 	beq.w	8010e4a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 8010cfe:	f242 030b 	movw	r3, #8203	; 0x200b
 8010d02:	4298      	cmp	r0, r3
 8010d04:	f000 80a1 	beq.w	8010e4a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 8010d08:	f1bb 0f00 	cmp.w	fp, #0
 8010d0c:	d100      	bne.n	8010d10 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x14e>
 8010d0e:	444d      	add	r5, r9
 8010d10:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8010d12:	2a00      	cmp	r2, #0
 8010d14:	d1bf      	bne.n	8010c96 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xd4>
 8010d16:	4691      	mov	r9, r2
 8010d18:	e097      	b.n	8010e4a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 8010d1a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010d1c:	2b00      	cmp	r3, #0
 8010d1e:	f000 80ab 	beq.w	8010e78 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 8010d22:	f1bb 0f00 	cmp.w	fp, #0
 8010d26:	d118      	bne.n	8010d5a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x198>
 8010d28:	f8d8 0000 	ldr.w	r0, [r8]
 8010d2c:	990d      	ldr	r1, [sp, #52]	; 0x34
 8010d2e:	6803      	ldr	r3, [r0, #0]
 8010d30:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010d32:	4798      	blx	r3
 8010d34:	4405      	add	r5, r0
 8010d36:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8010d38:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010d3a:	1aeb      	subs	r3, r5, r3
 8010d3c:	4293      	cmp	r3, r2
 8010d3e:	dd17      	ble.n	8010d70 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 8010d40:	2c00      	cmp	r4, #0
 8010d42:	f000 8097 	beq.w	8010e74 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 8010d46:	2c0a      	cmp	r4, #10
 8010d48:	f040 8085 	bne.w	8010e56 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 8010d4c:	240a      	movs	r4, #10
 8010d4e:	fab4 f084 	clz	r0, r4
 8010d52:	0940      	lsrs	r0, r0, #5
 8010d54:	b01f      	add	sp, #124	; 0x7c
 8010d56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010d5a:	f8d8 0000 	ldr.w	r0, [r8]
 8010d5e:	990d      	ldr	r1, [sp, #52]	; 0x34
 8010d60:	6803      	ldr	r3, [r0, #0]
 8010d62:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010d64:	4798      	blx	r3
 8010d66:	f1bb 0f01 	cmp.w	fp, #1
 8010d6a:	eba5 0500 	sub.w	r5, r5, r0
 8010d6e:	d0a4      	beq.n	8010cba <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xf8>
 8010d70:	981c      	ldr	r0, [sp, #112]	; 0x70
 8010d72:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8010d74:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8010d78:	f9b3 6000 	ldrsh.w	r6, [r3]
 8010d7c:	7b43      	ldrb	r3, [r0, #13]
 8010d7e:	4429      	add	r1, r5
 8010d80:	015b      	lsls	r3, r3, #5
 8010d82:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8010d86:	7983      	ldrb	r3, [r0, #6]
 8010d88:	4313      	orrs	r3, r2
 8010d8a:	440b      	add	r3, r1
 8010d8c:	42b3      	cmp	r3, r6
 8010d8e:	db5c      	blt.n	8010e4a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 8010d90:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010d92:	4299      	cmp	r1, r3
 8010d94:	da59      	bge.n	8010e4a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 8010d96:	f8d8 0000 	ldr.w	r0, [r8]
 8010d9a:	42ae      	cmp	r6, r5
 8010d9c:	6803      	ldr	r3, [r0, #0]
 8010d9e:	bfcc      	ite	gt
 8010da0:	1b76      	subgt	r6, r6, r5
 8010da2:	2600      	movle	r6, #0
 8010da4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010da6:	bfc8      	it	gt
 8010da8:	b2b6      	uxthgt	r6, r6
 8010daa:	4798      	blx	r3
 8010dac:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8010dae:	7b5a      	ldrb	r2, [r3, #13]
 8010db0:	00d1      	lsls	r1, r2, #3
 8010db2:	f401 7780 	and.w	r7, r1, #256	; 0x100
 8010db6:	7a19      	ldrb	r1, [r3, #8]
 8010db8:	4339      	orrs	r1, r7
 8010dba:	0657      	lsls	r7, r2, #25
 8010dbc:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 8010dbe:	bf48      	it	mi
 8010dc0:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 8010dc4:	4407      	add	r7, r0
 8010dc6:	bf48      	it	mi
 8010dc8:	b209      	sxthmi	r1, r1
 8010dca:	1a7f      	subs	r7, r7, r1
 8010dcc:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8010dce:	b2bf      	uxth	r7, r7
 8010dd0:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 8010dd4:	fa0f fa87 	sxth.w	sl, r7
 8010dd8:	4551      	cmp	r1, sl
 8010dda:	dd3a      	ble.n	8010e52 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8010ddc:	0112      	lsls	r2, r2, #4
 8010dde:	79d8      	ldrb	r0, [r3, #7]
 8010de0:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8010de4:	4302      	orrs	r2, r0
 8010de6:	4492      	add	sl, r2
 8010de8:	4551      	cmp	r1, sl
 8010dea:	dc2e      	bgt.n	8010e4a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 8010dec:	1bcf      	subs	r7, r1, r7
 8010dee:	468a      	mov	sl, r1
 8010df0:	b2bf      	uxth	r7, r7
 8010df2:	9319      	str	r3, [sp, #100]	; 0x64
 8010df4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8010df6:	f8d8 0000 	ldr.w	r0, [r8]
 8010dfa:	681a      	ldr	r2, [r3, #0]
 8010dfc:	6801      	ldr	r1, [r0, #0]
 8010dfe:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8010e00:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8010e02:	9313      	str	r3, [sp, #76]	; 0x4c
 8010e04:	9218      	str	r2, [sp, #96]	; 0x60
 8010e06:	6b89      	ldr	r1, [r1, #56]	; 0x38
 8010e08:	4788      	blx	r1
 8010e0a:	f898 1006 	ldrb.w	r1, [r8, #6]
 8010e0e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8010e10:	910b      	str	r1, [sp, #44]	; 0x2c
 8010e12:	f898 100e 	ldrb.w	r1, [r8, #14]
 8010e16:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8010e18:	910a      	str	r1, [sp, #40]	; 0x28
 8010e1a:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8010e1e:	9109      	str	r1, [sp, #36]	; 0x24
 8010e20:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8010e24:	9305      	str	r3, [sp, #20]
 8010e26:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8010e28:	9206      	str	r2, [sp, #24]
 8010e2a:	e9cd a601 	strd	sl, r6, [sp, #4]
 8010e2e:	442e      	add	r6, r5
 8010e30:	e9cd 7303 	strd	r7, r3, [sp, #12]
 8010e34:	b236      	sxth	r6, r6
 8010e36:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8010e38:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8010e3c:	9600      	str	r6, [sp, #0]
 8010e3e:	9916      	ldr	r1, [sp, #88]	; 0x58
 8010e40:	681a      	ldr	r2, [r3, #0]
 8010e42:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010e44:	685b      	ldr	r3, [r3, #4]
 8010e46:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8010e48:	47b0      	blx	r6
 8010e4a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010e4c:	3301      	adds	r3, #1
 8010e4e:	930e      	str	r3, [sp, #56]	; 0x38
 8010e50:	e6e5      	b.n	8010c1e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 8010e52:	2700      	movs	r7, #0
 8010e54:	e7cd      	b.n	8010df2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x230>
 8010e56:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8010e58:	3501      	adds	r5, #1
 8010e5a:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8010e5c:	429d      	cmp	r5, r3
 8010e5e:	f6bf af76 	bge.w	8010d4e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 8010e62:	4659      	mov	r1, fp
 8010e64:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8010e66:	f7f2 fd3f 	bl	80038e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8010e6a:	4604      	mov	r4, r0
 8010e6c:	b110      	cbz	r0, 8010e74 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 8010e6e:	280a      	cmp	r0, #10
 8010e70:	d1f2      	bne.n	8010e58 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x296>
 8010e72:	e76b      	b.n	8010d4c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18a>
 8010e74:	2400      	movs	r4, #0
 8010e76:	e76a      	b.n	8010d4e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 8010e78:	f1bb 0f00 	cmp.w	fp, #0
 8010e7c:	f43f af5b 	beq.w	8010d36 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x174>
 8010e80:	e776      	b.n	8010d70 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

08010e82 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 8010e82:	b530      	push	{r4, r5, lr}
 8010e84:	8a44      	ldrh	r4, [r0, #18]
 8010e86:	8ac5      	ldrh	r5, [r0, #22]
 8010e88:	82c3      	strh	r3, [r0, #22]
 8010e8a:	442c      	add	r4, r5
 8010e8c:	1ae4      	subs	r4, r4, r3
 8010e8e:	8b03      	ldrh	r3, [r0, #24]
 8010e90:	8244      	strh	r4, [r0, #18]
 8010e92:	8a84      	ldrh	r4, [r0, #20]
 8010e94:	4422      	add	r2, r4
 8010e96:	440c      	add	r4, r1
 8010e98:	1a59      	subs	r1, r3, r1
 8010e9a:	8342      	strh	r2, [r0, #26]
 8010e9c:	8284      	strh	r4, [r0, #20]
 8010e9e:	8301      	strh	r1, [r0, #24]
 8010ea0:	bd30      	pop	{r4, r5, pc}

08010ea2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 8010ea2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010ea6:	7a43      	ldrb	r3, [r0, #9]
 8010ea8:	b087      	sub	sp, #28
 8010eaa:	4604      	mov	r4, r0
 8010eac:	460f      	mov	r7, r1
 8010eae:	1eda      	subs	r2, r3, #3
 8010eb0:	b2d2      	uxtb	r2, r2
 8010eb2:	2900      	cmp	r1, #0
 8010eb4:	d036      	beq.n	8010f24 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 8010eb6:	2a01      	cmp	r2, #1
 8010eb8:	d932      	bls.n	8010f20 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 8010eba:	1e58      	subs	r0, r3, #1
 8010ebc:	f1d0 0b00 	rsbs	fp, r0, #0
 8010ec0:	eb4b 0b00 	adc.w	fp, fp, r0
 8010ec4:	1e99      	subs	r1, r3, #2
 8010ec6:	424b      	negs	r3, r1
 8010ec8:	414b      	adcs	r3, r1
 8010eca:	9303      	str	r3, [sp, #12]
 8010ecc:	2300      	movs	r3, #0
 8010ece:	e9cd 3301 	strd	r3, r3, [sp, #4]
 8010ed2:	2500      	movs	r5, #0
 8010ed4:	f242 0a0b 	movw	sl, #8203	; 0x200b
 8010ed8:	46a9      	mov	r9, r5
 8010eda:	8265      	strh	r5, [r4, #18]
 8010edc:	82a5      	strh	r5, [r4, #20]
 8010ede:	2300      	movs	r3, #0
 8010ee0:	9305      	str	r3, [sp, #20]
 8010ee2:	8823      	ldrh	r3, [r4, #0]
 8010ee4:	2b20      	cmp	r3, #32
 8010ee6:	d02b      	beq.n	8010f40 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 8010ee8:	eba3 020a 	sub.w	r2, r3, sl
 8010eec:	4256      	negs	r6, r2
 8010eee:	4156      	adcs	r6, r2
 8010ef0:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8010ef4:	4293      	cmp	r3, r2
 8010ef6:	d004      	beq.n	8010f02 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 8010ef8:	4553      	cmp	r3, sl
 8010efa:	bf16      	itet	ne
 8010efc:	4699      	movne	r9, r3
 8010efe:	2601      	moveq	r6, #1
 8010f00:	2600      	movne	r6, #0
 8010f02:	ab05      	add	r3, sp, #20
 8010f04:	68e2      	ldr	r2, [r4, #12]
 8010f06:	7a21      	ldrb	r1, [r4, #8]
 8010f08:	6860      	ldr	r0, [r4, #4]
 8010f0a:	f002 fe7d 	bl	8013c08 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010f0e:	8020      	strh	r0, [r4, #0]
 8010f10:	b9c8      	cbnz	r0, 8010f46 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 8010f12:	8b22      	ldrh	r2, [r4, #24]
 8010f14:	2300      	movs	r3, #0
 8010f16:	4611      	mov	r1, r2
 8010f18:	4620      	mov	r0, r4
 8010f1a:	f7ff ffb2 	bl	8010e82 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8010f1e:	e066      	b.n	8010fee <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 8010f20:	468b      	mov	fp, r1
 8010f22:	e7cf      	b.n	8010ec4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 8010f24:	3b01      	subs	r3, #1
 8010f26:	2a01      	cmp	r2, #1
 8010f28:	9103      	str	r1, [sp, #12]
 8010f2a:	468b      	mov	fp, r1
 8010f2c:	bf8c      	ite	hi
 8010f2e:	2200      	movhi	r2, #0
 8010f30:	2201      	movls	r2, #1
 8010f32:	2b01      	cmp	r3, #1
 8010f34:	9202      	str	r2, [sp, #8]
 8010f36:	bf8c      	ite	hi
 8010f38:	2300      	movhi	r3, #0
 8010f3a:	2301      	movls	r3, #1
 8010f3c:	9301      	str	r3, [sp, #4]
 8010f3e:	e7c8      	b.n	8010ed2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 8010f40:	4699      	mov	r9, r3
 8010f42:	2601      	movs	r6, #1
 8010f44:	e7dd      	b.n	8010f02 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 8010f46:	8ae3      	ldrh	r3, [r4, #22]
 8010f48:	280a      	cmp	r0, #10
 8010f4a:	f103 0301 	add.w	r3, r3, #1
 8010f4e:	82e3      	strh	r3, [r4, #22]
 8010f50:	d0df      	beq.n	8010f12 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 8010f52:	9a05      	ldr	r2, [sp, #20]
 8010f54:	bb42      	cbnz	r2, 8010fa8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 8010f56:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8010f5a:	4298      	cmp	r0, r3
 8010f5c:	d001      	beq.n	8010f62 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 8010f5e:	4550      	cmp	r0, sl
 8010f60:	d1bd      	bne.n	8010ede <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010f62:	8823      	ldrh	r3, [r4, #0]
 8010f64:	8b21      	ldrh	r1, [r4, #24]
 8010f66:	2b20      	cmp	r3, #32
 8010f68:	d001      	beq.n	8010f6e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 8010f6a:	4553      	cmp	r3, sl
 8010f6c:	d131      	bne.n	8010fd2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 8010f6e:	2e00      	cmp	r6, #0
 8010f70:	bf0a      	itet	eq
 8010f72:	460d      	moveq	r5, r1
 8010f74:	4630      	movne	r0, r6
 8010f76:	2001      	moveq	r0, #1
 8010f78:	440a      	add	r2, r1
 8010f7a:	8aa3      	ldrh	r3, [r4, #20]
 8010f7c:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8010f80:	b292      	uxth	r2, r2
 8010f82:	8322      	strh	r2, [r4, #24]
 8010f84:	4413      	add	r3, r2
 8010f86:	2f00      	cmp	r7, #0
 8010f88:	d03a      	beq.n	8011000 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 8010f8a:	f1bb 0f00 	cmp.w	fp, #0
 8010f8e:	d102      	bne.n	8010f96 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 8010f90:	9903      	ldr	r1, [sp, #12]
 8010f92:	b301      	cbz	r1, 8010fd6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 8010f94:	b1f8      	cbz	r0, 8010fd6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 8010f96:	8ba1      	ldrh	r1, [r4, #28]
 8010f98:	4419      	add	r1, r3
 8010f9a:	458c      	cmp	ip, r1
 8010f9c:	da2a      	bge.n	8010ff4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 8010f9e:	8a61      	ldrh	r1, [r4, #18]
 8010fa0:	b341      	cbz	r1, 8010ff4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 8010fa2:	4563      	cmp	r3, ip
 8010fa4:	dd9b      	ble.n	8010ede <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010fa6:	e01c      	b.n	8010fe2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 8010fa8:	8893      	ldrh	r3, [r2, #4]
 8010faa:	4649      	mov	r1, r9
 8010fac:	8023      	strh	r3, [r4, #0]
 8010fae:	f892 800d 	ldrb.w	r8, [r2, #13]
 8010fb2:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8010fb6:	f408 7080 	and.w	r0, r8, #256	; 0x100
 8010fba:	f892 800a 	ldrb.w	r8, [r2, #10]
 8010fbe:	ea48 0800 	orr.w	r8, r8, r0
 8010fc2:	68e0      	ldr	r0, [r4, #12]
 8010fc4:	6803      	ldr	r3, [r0, #0]
 8010fc6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010fc8:	4798      	blx	r3
 8010fca:	eb08 0200 	add.w	r2, r8, r0
 8010fce:	b292      	uxth	r2, r2
 8010fd0:	e7c7      	b.n	8010f62 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 8010fd2:	2000      	movs	r0, #0
 8010fd4:	e7d0      	b.n	8010f78 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 8010fd6:	4563      	cmp	r3, ip
 8010fd8:	dd81      	ble.n	8010ede <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010fda:	8a63      	ldrh	r3, [r4, #18]
 8010fdc:	2b00      	cmp	r3, #0
 8010fde:	f43f af7e 	beq.w	8010ede <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010fe2:	2301      	movs	r3, #1
 8010fe4:	8ba2      	ldrh	r2, [r4, #28]
 8010fe6:	77a3      	strb	r3, [r4, #30]
 8010fe8:	8b63      	ldrh	r3, [r4, #26]
 8010fea:	4413      	add	r3, r2
 8010fec:	8363      	strh	r3, [r4, #26]
 8010fee:	b007      	add	sp, #28
 8010ff0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010ff4:	2300      	movs	r3, #0
 8010ff6:	4611      	mov	r1, r2
 8010ff8:	4620      	mov	r0, r4
 8010ffa:	f7ff ff42 	bl	8010e82 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8010ffe:	e76e      	b.n	8010ede <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8011000:	4563      	cmp	r3, ip
 8011002:	dd14      	ble.n	801102e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 8011004:	9b02      	ldr	r3, [sp, #8]
 8011006:	b113      	cbz	r3, 801100e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 8011008:	2301      	movs	r3, #1
 801100a:	460a      	mov	r2, r1
 801100c:	e783      	b.n	8010f16 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 801100e:	9b01      	ldr	r3, [sp, #4]
 8011010:	2b00      	cmp	r3, #0
 8011012:	f43f af64 	beq.w	8010ede <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8011016:	2800      	cmp	r0, #0
 8011018:	f47f af61 	bne.w	8010ede <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 801101c:	b116      	cbz	r6, 8011024 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 801101e:	2301      	movs	r3, #1
 8011020:	462a      	mov	r2, r5
 8011022:	e779      	b.n	8010f18 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 8011024:	8a63      	ldrh	r3, [r4, #18]
 8011026:	2b00      	cmp	r3, #0
 8011028:	f43f af59 	beq.w	8010ede <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 801102c:	e7df      	b.n	8010fee <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 801102e:	2800      	cmp	r0, #0
 8011030:	f47f af55 	bne.w	8010ede <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8011034:	2e00      	cmp	r6, #0
 8011036:	f43f af52 	beq.w	8010ede <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 801103a:	2301      	movs	r3, #1
 801103c:	462a      	mov	r2, r5
 801103e:	e7db      	b.n	8010ff8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

08011040 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8011040:	b530      	push	{r4, r5, lr}
 8011042:	4605      	mov	r5, r0
 8011044:	b08b      	sub	sp, #44	; 0x2c
 8011046:	b191      	cbz	r1, 801106e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 8011048:	2401      	movs	r4, #1
 801104a:	e9cd 3100 	strd	r3, r1, [sp]
 801104e:	4613      	mov	r3, r2
 8011050:	4601      	mov	r1, r0
 8011052:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 8011056:	a802      	add	r0, sp, #8
 8011058:	f7ff fd0a 	bl	8010a70 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 801105c:	2100      	movs	r1, #0
 801105e:	a802      	add	r0, sp, #8
 8011060:	f7ff ff1f 	bl	8010ea2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 8011064:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8011068:	b163      	cbz	r3, 8011084 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 801106a:	3401      	adds	r4, #1
 801106c:	e7f6      	b.n	801105c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 801106e:	2401      	movs	r4, #1
 8011070:	f002 fec4 	bl	8013dfc <_ZN8touchgfx12TextProvider11getNextCharEv>
 8011074:	280a      	cmp	r0, #10
 8011076:	4628      	mov	r0, r5
 8011078:	bf08      	it	eq
 801107a:	3401      	addeq	r4, #1
 801107c:	f002 febe 	bl	8013dfc <_ZN8touchgfx12TextProvider11getNextCharEv>
 8011080:	2800      	cmp	r0, #0
 8011082:	d1f7      	bne.n	8011074 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8011084:	b2a0      	uxth	r0, r4
 8011086:	b00b      	add	sp, #44	; 0x2c
 8011088:	bd30      	pop	{r4, r5, pc}

0801108a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 801108a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801108e:	b0e5      	sub	sp, #404	; 0x194
 8011090:	4689      	mov	r9, r1
 8011092:	461c      	mov	r4, r3
 8011094:	f8dd a1b8 	ldr.w	sl, [sp, #440]	; 0x1b8
 8011098:	900a      	str	r0, [sp, #40]	; 0x28
 801109a:	f1ba 0f00 	cmp.w	sl, #0
 801109e:	f000 80b4 	beq.w	801120a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 80110a2:	681b      	ldr	r3, [r3, #0]
 80110a4:	2b00      	cmp	r3, #0
 80110a6:	f000 80b0 	beq.w	801120a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 80110aa:	7ba3      	ldrb	r3, [r4, #14]
 80110ac:	2b00      	cmp	r3, #0
 80110ae:	f000 80ac 	beq.w	801120a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 80110b2:	f10d 0834 	add.w	r8, sp, #52	; 0x34
 80110b6:	6810      	ldr	r0, [r2, #0]
 80110b8:	6851      	ldr	r1, [r2, #4]
 80110ba:	2500      	movs	r5, #0
 80110bc:	4643      	mov	r3, r8
 80110be:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
 80110c2:	950f      	str	r5, [sp, #60]	; 0x3c
 80110c4:	af19      	add	r7, sp, #100	; 0x64
 80110c6:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 80110ca:	79a2      	ldrb	r2, [r4, #6]
 80110cc:	c303      	stmia	r3!, {r0, r1}
 80110ce:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
 80110d2:	a90f      	add	r1, sp, #60	; 0x3c
 80110d4:	4640      	mov	r0, r8
 80110d6:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 80110da:	f7ff fd41 	bl	8010b60 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80110de:	a90f      	add	r1, sp, #60	; 0x3c
 80110e0:	79a2      	ldrb	r2, [r4, #6]
 80110e2:	4608      	mov	r0, r1
 80110e4:	f7ff fd3c 	bl	8010b60 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80110e8:	4638      	mov	r0, r7
 80110ea:	f002 fa0f 	bl	801350c <_ZN8touchgfx12TextProviderC1Ev>
 80110ee:	6820      	ldr	r0, [r4, #0]
 80110f0:	6803      	ldr	r3, [r0, #0]
 80110f2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80110f4:	4798      	blx	r3
 80110f6:	4606      	mov	r6, r0
 80110f8:	6820      	ldr	r0, [r4, #0]
 80110fa:	6803      	ldr	r3, [r0, #0]
 80110fc:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80110fe:	4798      	blx	r3
 8011100:	4633      	mov	r3, r6
 8011102:	9000      	str	r0, [sp, #0]
 8011104:	4651      	mov	r1, sl
 8011106:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 8011108:	4638      	mov	r0, r7
 801110a:	f002 fa6b 	bl	80135e4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801110e:	7923      	ldrb	r3, [r4, #4]
 8011110:	6820      	ldr	r0, [r4, #0]
 8011112:	9308      	str	r3, [sp, #32]
 8011114:	6803      	ldr	r3, [r0, #0]
 8011116:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011118:	4798      	blx	r3
 801111a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801111e:	181e      	adds	r6, r3, r0
 8011120:	42ae      	cmp	r6, r5
 8011122:	dd06      	ble.n	8011132 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xa8>
 8011124:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 8011128:	4282      	cmp	r2, r0
 801112a:	bfa4      	itt	ge
 801112c:	189d      	addge	r5, r3, r2
 801112e:	fb95 f5f6 	sdivge	r5, r5, r6
 8011132:	a832      	add	r0, sp, #200	; 0xc8
 8011134:	f002 f9ea 	bl	801350c <_ZN8touchgfx12TextProviderC1Ev>
 8011138:	7c23      	ldrb	r3, [r4, #16]
 801113a:	b17b      	cbz	r3, 801115c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd2>
 801113c:	6820      	ldr	r0, [r4, #0]
 801113e:	6803      	ldr	r3, [r0, #0]
 8011140:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011142:	4798      	blx	r3
 8011144:	4683      	mov	fp, r0
 8011146:	6820      	ldr	r0, [r4, #0]
 8011148:	6803      	ldr	r3, [r0, #0]
 801114a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801114c:	4798      	blx	r3
 801114e:	465b      	mov	r3, fp
 8011150:	9000      	str	r0, [sp, #0]
 8011152:	4651      	mov	r1, sl
 8011154:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 8011156:	a832      	add	r0, sp, #200	; 0xc8
 8011158:	f002 fa44 	bl	80135e4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801115c:	7be1      	ldrb	r1, [r4, #15]
 801115e:	a811      	add	r0, sp, #68	; 0x44
 8011160:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8011164:	7963      	ldrb	r3, [r4, #5]
 8011166:	1a52      	subs	r2, r2, r1
 8011168:	7c21      	ldrb	r1, [r4, #16]
 801116a:	9101      	str	r1, [sp, #4]
 801116c:	b292      	uxth	r2, r2
 801116e:	6821      	ldr	r1, [r4, #0]
 8011170:	9100      	str	r1, [sp, #0]
 8011172:	a932      	add	r1, sp, #200	; 0xc8
 8011174:	f7ff fc7c 	bl	8010a70 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 8011178:	7c23      	ldrb	r3, [r4, #16]
 801117a:	b9bb      	cbnz	r3, 80111ac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>
 801117c:	fa1f fa86 	uxth.w	sl, r6
 8011180:	2d00      	cmp	r5, #0
 8011182:	dd45      	ble.n	8011210 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 8011184:	4638      	mov	r0, r7
 8011186:	f002 fe39 	bl	8013dfc <_ZN8touchgfx12TextProvider11getNextCharEv>
 801118a:	2800      	cmp	r0, #0
 801118c:	d03d      	beq.n	801120a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 801118e:	280a      	cmp	r0, #10
 8011190:	d1f6      	bne.n	8011180 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 8011192:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 8011196:	3d01      	subs	r5, #1
 8011198:	4453      	add	r3, sl
 801119a:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 801119e:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 80111a2:	eba3 030a 	sub.w	r3, r3, sl
 80111a6:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 80111aa:	e7e9      	b.n	8011180 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 80111ac:	0073      	lsls	r3, r6, #1
 80111ae:	f64f 7bff 	movw	fp, #65535	; 0xffff
 80111b2:	fa1f fa86 	uxth.w	sl, r6
 80111b6:	9309      	str	r3, [sp, #36]	; 0x24
 80111b8:	2d00      	cmp	r5, #0
 80111ba:	dd29      	ble.n	8011210 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 80111bc:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 80111c0:	a811      	add	r0, sp, #68	; 0x44
 80111c2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80111c4:	428b      	cmp	r3, r1
 80111c6:	bfd4      	ite	le
 80111c8:	2100      	movle	r1, #0
 80111ca:	2101      	movgt	r1, #1
 80111cc:	f7ff fe69 	bl	8010ea2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 80111d0:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 80111d4:	3b01      	subs	r3, #1
 80111d6:	b29b      	uxth	r3, r3
 80111d8:	455b      	cmp	r3, fp
 80111da:	930b      	str	r3, [sp, #44]	; 0x2c
 80111dc:	d005      	beq.n	80111ea <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x160>
 80111de:	7961      	ldrb	r1, [r4, #5]
 80111e0:	4638      	mov	r0, r7
 80111e2:	f7f2 fb81 	bl	80038e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80111e6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80111e8:	e7f4      	b.n	80111d4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x14a>
 80111ea:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 80111ee:	3d01      	subs	r5, #1
 80111f0:	4453      	add	r3, sl
 80111f2:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 80111f6:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 80111fa:	eba3 030a 	sub.w	r3, r3, sl
 80111fe:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8011202:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8011206:	2b00      	cmp	r3, #0
 8011208:	d1d6      	bne.n	80111b8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x12e>
 801120a:	b065      	add	sp, #404	; 0x194
 801120c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011210:	0075      	lsls	r5, r6, #1
 8011212:	f04f 0a00 	mov.w	sl, #0
 8011216:	7c23      	ldrb	r3, [r4, #16]
 8011218:	2b00      	cmp	r3, #0
 801121a:	d066      	beq.n	80112ea <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x260>
 801121c:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8011220:	a811      	add	r0, sp, #68	; 0x44
 8011222:	428d      	cmp	r5, r1
 8011224:	bfd4      	ite	le
 8011226:	2100      	movle	r1, #0
 8011228:	2101      	movgt	r1, #1
 801122a:	f7ff fe3a 	bl	8010ea2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 801122e:	9b08      	ldr	r3, [sp, #32]
 8011230:	2b00      	cmp	r3, #0
 8011232:	d055      	beq.n	80112e0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8011234:	f894 b010 	ldrb.w	fp, [r4, #16]
 8011238:	2264      	movs	r2, #100	; 0x64
 801123a:	4639      	mov	r1, r7
 801123c:	a84b      	add	r0, sp, #300	; 0x12c
 801123e:	f00e ff4d 	bl	80200dc <memcpy>
 8011242:	f1bb 0f00 	cmp.w	fp, #0
 8011246:	d058      	beq.n	80112fa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x270>
 8011248:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801124c:	7922      	ldrb	r2, [r4, #4]
 801124e:	2a01      	cmp	r2, #1
 8011250:	d13c      	bne.n	80112cc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x242>
 8011252:	f9bd 0040 	ldrsh.w	r0, [sp, #64]	; 0x40
 8011256:	1ac0      	subs	r0, r0, r3
 8011258:	2302      	movs	r3, #2
 801125a:	fb90 f0f3 	sdiv	r0, r0, r3
 801125e:	b200      	sxth	r0, r0
 8011260:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8011264:	4418      	add	r0, r3
 8011266:	7c23      	ldrb	r3, [r4, #16]
 8011268:	b200      	sxth	r0, r0
 801126a:	2b00      	cmp	r3, #0
 801126c:	d03a      	beq.n	80112e4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25a>
 801126e:	f8bd 2056 	ldrh.w	r2, [sp, #86]	; 0x56
 8011272:	f89d 1062 	ldrb.w	r1, [sp, #98]	; 0x62
 8011276:	9000      	str	r0, [sp, #0]
 8011278:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	; 0x3e
 801127c:	980a      	ldr	r0, [sp, #40]	; 0x28
 801127e:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8011282:	e9cd a703 	strd	sl, r7, [sp, #12]
 8011286:	e9cd 8401 	strd	r8, r4, [sp, #4]
 801128a:	464a      	mov	r2, r9
 801128c:	2100      	movs	r1, #0
 801128e:	f7ff fc98 	bl	8010bc2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8011292:	2800      	cmp	r0, #0
 8011294:	d1b9      	bne.n	801120a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8011296:	b2b2      	uxth	r2, r6
 8011298:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 801129c:	4611      	mov	r1, r2
 801129e:	4413      	add	r3, r2
 80112a0:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 80112a4:	b21b      	sxth	r3, r3
 80112a6:	1a52      	subs	r2, r2, r1
 80112a8:	7c21      	ldrb	r1, [r4, #16]
 80112aa:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 80112ae:	b212      	sxth	r2, r2
 80112b0:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 80112b4:	b109      	cbz	r1, 80112ba <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x230>
 80112b6:	42b2      	cmp	r2, r6
 80112b8:	dba7      	blt.n	801120a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 80112ba:	f8b8 2006 	ldrh.w	r2, [r8, #6]
 80112be:	f8b8 1002 	ldrh.w	r1, [r8, #2]
 80112c2:	440a      	add	r2, r1
 80112c4:	b212      	sxth	r2, r2
 80112c6:	4293      	cmp	r3, r2
 80112c8:	dda5      	ble.n	8011216 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x18c>
 80112ca:	e79e      	b.n	801120a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 80112cc:	2a02      	cmp	r2, #2
 80112ce:	d105      	bne.n	80112dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 80112d0:	7be2      	ldrb	r2, [r4, #15]
 80112d2:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 80112d6:	1a80      	subs	r0, r0, r2
 80112d8:	1ac0      	subs	r0, r0, r3
 80112da:	e7c0      	b.n	801125e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d4>
 80112dc:	2000      	movs	r0, #0
 80112de:	e7bf      	b.n	8011260 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 80112e0:	7be0      	ldrb	r0, [r4, #15]
 80112e2:	e7bd      	b.n	8011260 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 80112e4:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80112e8:	e7c3      	b.n	8011272 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e8>
 80112ea:	9b08      	ldr	r3, [sp, #32]
 80112ec:	2b00      	cmp	r3, #0
 80112ee:	d0f7      	beq.n	80112e0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 80112f0:	2264      	movs	r2, #100	; 0x64
 80112f2:	4639      	mov	r1, r7
 80112f4:	a84b      	add	r0, sp, #300	; 0x12c
 80112f6:	f00e fef1 	bl	80200dc <memcpy>
 80112fa:	2300      	movs	r3, #0
 80112fc:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8011300:	6821      	ldr	r1, [r4, #0]
 8011302:	a84b      	add	r0, sp, #300	; 0x12c
 8011304:	f7ff fbf0 	bl	8010ae8 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8011308:	b203      	sxth	r3, r0
 801130a:	e79f      	b.n	801124c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c2>

0801130c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 801130c:	2b02      	cmp	r3, #2
 801130e:	b510      	push	{r4, lr}
 8011310:	f9b0 4000 	ldrsh.w	r4, [r0]
 8011314:	d00b      	beq.n	801132e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x22>
 8011316:	2b03      	cmp	r3, #3
 8011318:	d00e      	beq.n	8011338 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x2c>
 801131a:	2b01      	cmp	r3, #1
 801131c:	d001      	beq.n	8011322 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x16>
 801131e:	1860      	adds	r0, r4, r1
 8011320:	bd10      	pop	{r4, pc}
 8011322:	8880      	ldrh	r0, [r0, #4]
 8011324:	4420      	add	r0, r4
 8011326:	b200      	sxth	r0, r0
 8011328:	1a80      	subs	r0, r0, r2
 801132a:	3801      	subs	r0, #1
 801132c:	e7f8      	b.n	8011320 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>
 801132e:	8880      	ldrh	r0, [r0, #4]
 8011330:	4420      	add	r0, r4
 8011332:	b200      	sxth	r0, r0
 8011334:	1a40      	subs	r0, r0, r1
 8011336:	e7f8      	b.n	801132a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8011338:	18a0      	adds	r0, r4, r2
 801133a:	e7f1      	b.n	8011320 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>

0801133c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 801133c:	2b02      	cmp	r3, #2
 801133e:	b510      	push	{r4, lr}
 8011340:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 8011344:	d006      	beq.n	8011354 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x18>
 8011346:	2b03      	cmp	r3, #3
 8011348:	d00a      	beq.n	8011360 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 801134a:	2b01      	cmp	r3, #1
 801134c:	bf14      	ite	ne
 801134e:	18a0      	addne	r0, r4, r2
 8011350:	1860      	addeq	r0, r4, r1
 8011352:	bd10      	pop	{r4, pc}
 8011354:	88c0      	ldrh	r0, [r0, #6]
 8011356:	4420      	add	r0, r4
 8011358:	b200      	sxth	r0, r0
 801135a:	1a80      	subs	r0, r0, r2
 801135c:	3801      	subs	r0, #1
 801135e:	e7f8      	b.n	8011352 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x16>
 8011360:	88c0      	ldrh	r0, [r0, #6]
 8011362:	4420      	add	r0, r4
 8011364:	b200      	sxth	r0, r0
 8011366:	1a40      	subs	r0, r0, r1
 8011368:	e7f8      	b.n	801135c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x20>
	...

0801136c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 801136c:	4b01      	ldr	r3, [pc, #4]	; (8011374 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 801136e:	2200      	movs	r2, #0
 8011370:	601a      	str	r2, [r3, #0]
 8011372:	4770      	bx	lr
 8011374:	2400e0dc 	.word	0x2400e0dc

08011378 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8011378:	4603      	mov	r3, r0
 801137a:	b1c8      	cbz	r0, 80113b0 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 801137c:	0c02      	lsrs	r2, r0, #16
 801137e:	0412      	lsls	r2, r2, #16
 8011380:	b9a2      	cbnz	r2, 80113ac <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 8011382:	0403      	lsls	r3, r0, #16
 8011384:	2010      	movs	r0, #16
 8011386:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 801138a:	bf04      	itt	eq
 801138c:	021b      	lsleq	r3, r3, #8
 801138e:	3008      	addeq	r0, #8
 8011390:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8011394:	bf04      	itt	eq
 8011396:	011b      	lsleq	r3, r3, #4
 8011398:	3004      	addeq	r0, #4
 801139a:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 801139e:	bf04      	itt	eq
 80113a0:	009b      	lsleq	r3, r3, #2
 80113a2:	3002      	addeq	r0, #2
 80113a4:	2b00      	cmp	r3, #0
 80113a6:	db04      	blt.n	80113b2 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 80113a8:	3001      	adds	r0, #1
 80113aa:	4770      	bx	lr
 80113ac:	2000      	movs	r0, #0
 80113ae:	e7ea      	b.n	8011386 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 80113b0:	2020      	movs	r0, #32
 80113b2:	4770      	bx	lr

080113b4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 80113b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80113b8:	b087      	sub	sp, #28
 80113ba:	4681      	mov	r9, r0
 80113bc:	4698      	mov	r8, r3
 80113be:	4610      	mov	r0, r2
 80113c0:	460d      	mov	r5, r1
 80113c2:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 80113c6:	b981      	cbnz	r1, 80113ea <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 80113c8:	b14b      	cbz	r3, 80113de <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 80113ca:	460b      	mov	r3, r1
 80113cc:	464a      	mov	r2, r9
 80113ce:	4641      	mov	r1, r8
 80113d0:	e9cd 4700 	strd	r4, r7, [sp]
 80113d4:	f7ff ffee 	bl	80113b4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80113d8:	b007      	add	sp, #28
 80113da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80113de:	f04f 33ff 	mov.w	r3, #4294967295
 80113e2:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80113e6:	603b      	str	r3, [r7, #0]
 80113e8:	e7f6      	b.n	80113d8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 80113ea:	fa32 fa01 	lsrs.w	sl, r2, r1
 80113ee:	d107      	bne.n	8011400 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 80113f0:	fb09 f602 	mul.w	r6, r9, r2
 80113f4:	fbb6 f0f4 	udiv	r0, r6, r4
 80113f8:	fb04 6610 	mls	r6, r4, r0, r6
 80113fc:	603e      	str	r6, [r7, #0]
 80113fe:	e7eb      	b.n	80113d8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 8011400:	2601      	movs	r6, #1
 8011402:	fa09 fb01 	lsl.w	fp, r9, r1
 8011406:	408e      	lsls	r6, r1
 8011408:	fbbb f3f4 	udiv	r3, fp, r4
 801140c:	3e01      	subs	r6, #1
 801140e:	9302      	str	r3, [sp, #8]
 8011410:	fb0a f303 	mul.w	r3, sl, r3
 8011414:	4016      	ands	r6, r2
 8011416:	9303      	str	r3, [sp, #12]
 8011418:	4630      	mov	r0, r6
 801141a:	f7ff ffad 	bl	8011378 <_ZN8touchgfx16TouchCalibration4clzuEm>
 801141e:	464a      	mov	r2, r9
 8011420:	460b      	mov	r3, r1
 8011422:	4601      	mov	r1, r0
 8011424:	4630      	mov	r0, r6
 8011426:	e9cd 4700 	strd	r4, r7, [sp]
 801142a:	f7ff ffc3 	bl	80113b4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801142e:	9b02      	ldr	r3, [sp, #8]
 8011430:	4606      	mov	r6, r0
 8011432:	eb05 0108 	add.w	r1, r5, r8
 8011436:	fb04 bb13 	mls	fp, r4, r3, fp
 801143a:	4658      	mov	r0, fp
 801143c:	f7ff ff9c 	bl	8011378 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8011440:	ab05      	add	r3, sp, #20
 8011442:	465a      	mov	r2, fp
 8011444:	e9cd 4300 	strd	r4, r3, [sp]
 8011448:	4603      	mov	r3, r0
 801144a:	4650      	mov	r0, sl
 801144c:	f7ff ffb2 	bl	80113b4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8011450:	6839      	ldr	r1, [r7, #0]
 8011452:	9a05      	ldr	r2, [sp, #20]
 8011454:	9b03      	ldr	r3, [sp, #12]
 8011456:	4411      	add	r1, r2
 8011458:	fbb1 f2f4 	udiv	r2, r1, r4
 801145c:	18d3      	adds	r3, r2, r3
 801145e:	fb04 1412 	mls	r4, r4, r2, r1
 8011462:	441e      	add	r6, r3
 8011464:	603c      	str	r4, [r7, #0]
 8011466:	4430      	add	r0, r6
 8011468:	e7b6      	b.n	80113d8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

0801146a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 801146a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801146e:	b085      	sub	sp, #20
 8011470:	f1b0 0900 	subs.w	r9, r0, #0
 8011474:	461d      	mov	r5, r3
 8011476:	4617      	mov	r7, r2
 8011478:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801147a:	bfbb      	ittet	lt
 801147c:	f1c9 0900 	rsblt	r9, r9, #0
 8011480:	f04f 36ff 	movlt.w	r6, #4294967295
 8011484:	2601      	movge	r6, #1
 8011486:	6823      	ldrlt	r3, [r4, #0]
 8011488:	bfbc      	itt	lt
 801148a:	425b      	neglt	r3, r3
 801148c:	6023      	strlt	r3, [r4, #0]
 801148e:	2a00      	cmp	r2, #0
 8011490:	da04      	bge.n	801149c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8011492:	6823      	ldr	r3, [r4, #0]
 8011494:	4257      	negs	r7, r2
 8011496:	4276      	negs	r6, r6
 8011498:	425b      	negs	r3, r3
 801149a:	6023      	str	r3, [r4, #0]
 801149c:	2d00      	cmp	r5, #0
 801149e:	4638      	mov	r0, r7
 80114a0:	bfba      	itte	lt
 80114a2:	426d      	neglt	r5, r5
 80114a4:	f04f 38ff 	movlt.w	r8, #4294967295
 80114a8:	f04f 0801 	movge.w	r8, #1
 80114ac:	f7ff ff64 	bl	8011378 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80114b0:	ab03      	add	r3, sp, #12
 80114b2:	463a      	mov	r2, r7
 80114b4:	e9cd 5300 	strd	r5, r3, [sp]
 80114b8:	4603      	mov	r3, r0
 80114ba:	4648      	mov	r0, r9
 80114bc:	f7ff ff7a 	bl	80113b4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80114c0:	6823      	ldr	r3, [r4, #0]
 80114c2:	9a03      	ldr	r2, [sp, #12]
 80114c4:	4546      	cmp	r6, r8
 80114c6:	441a      	add	r2, r3
 80114c8:	fb92 f3f5 	sdiv	r3, r2, r5
 80114cc:	4418      	add	r0, r3
 80114ce:	fb05 2313 	mls	r3, r5, r3, r2
 80114d2:	bf18      	it	ne
 80114d4:	4240      	negne	r0, r0
 80114d6:	1c72      	adds	r2, r6, #1
 80114d8:	6023      	str	r3, [r4, #0]
 80114da:	d105      	bne.n	80114e8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 80114dc:	2b00      	cmp	r3, #0
 80114de:	f1c3 0200 	rsb	r2, r3, #0
 80114e2:	db0b      	blt.n	80114fc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 80114e4:	6022      	str	r2, [r4, #0]
 80114e6:	e006      	b.n	80114f6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80114e8:	2e01      	cmp	r6, #1
 80114ea:	d104      	bne.n	80114f6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80114ec:	2b00      	cmp	r3, #0
 80114ee:	da02      	bge.n	80114f6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80114f0:	442b      	add	r3, r5
 80114f2:	3801      	subs	r0, #1
 80114f4:	6023      	str	r3, [r4, #0]
 80114f6:	b005      	add	sp, #20
 80114f8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80114fc:	3801      	subs	r0, #1
 80114fe:	1b52      	subs	r2, r2, r5
 8011500:	e7f0      	b.n	80114e4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

08011504 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8011504:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8011508:	4c1c      	ldr	r4, [pc, #112]	; (801157c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 801150a:	4605      	mov	r5, r0
 801150c:	6807      	ldr	r7, [r0, #0]
 801150e:	69a3      	ldr	r3, [r4, #24]
 8011510:	b92b      	cbnz	r3, 801151e <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8011512:	6840      	ldr	r0, [r0, #4]
 8011514:	e9c5 7000 	strd	r7, r0, [r5]
 8011518:	b004      	add	sp, #16
 801151a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801151e:	f04f 0802 	mov.w	r8, #2
 8011522:	68a2      	ldr	r2, [r4, #8]
 8011524:	ae04      	add	r6, sp, #16
 8011526:	6820      	ldr	r0, [r4, #0]
 8011528:	fb93 f1f8 	sdiv	r1, r3, r8
 801152c:	440a      	add	r2, r1
 801152e:	69e1      	ldr	r1, [r4, #28]
 8011530:	f846 2d04 	str.w	r2, [r6, #-4]!
 8011534:	463a      	mov	r2, r7
 8011536:	9600      	str	r6, [sp, #0]
 8011538:	f7ff ff97 	bl	801146a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801153c:	69a3      	ldr	r3, [r4, #24]
 801153e:	4607      	mov	r7, r0
 8011540:	686a      	ldr	r2, [r5, #4]
 8011542:	6a21      	ldr	r1, [r4, #32]
 8011544:	9600      	str	r6, [sp, #0]
 8011546:	6860      	ldr	r0, [r4, #4]
 8011548:	f7ff ff8f 	bl	801146a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801154c:	69a3      	ldr	r3, [r4, #24]
 801154e:	6962      	ldr	r2, [r4, #20]
 8011550:	4407      	add	r7, r0
 8011552:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8011554:	9600      	str	r6, [sp, #0]
 8011556:	68e0      	ldr	r0, [r4, #12]
 8011558:	fb93 f8f8 	sdiv	r8, r3, r8
 801155c:	4442      	add	r2, r8
 801155e:	9203      	str	r2, [sp, #12]
 8011560:	682a      	ldr	r2, [r5, #0]
 8011562:	f7ff ff82 	bl	801146a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8011566:	4680      	mov	r8, r0
 8011568:	9600      	str	r6, [sp, #0]
 801156a:	69a3      	ldr	r3, [r4, #24]
 801156c:	686a      	ldr	r2, [r5, #4]
 801156e:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8011570:	6920      	ldr	r0, [r4, #16]
 8011572:	f7ff ff7a 	bl	801146a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8011576:	4440      	add	r0, r8
 8011578:	e7cc      	b.n	8011514 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 801157a:	bf00      	nop
 801157c:	2400e0e0 	.word	0x2400e0e0

08011580 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8011580:	4b07      	ldr	r3, [pc, #28]	; (80115a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8011582:	781b      	ldrb	r3, [r3, #0]
 8011584:	2b01      	cmp	r3, #1
 8011586:	d109      	bne.n	801159c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8011588:	f9b1 3000 	ldrsh.w	r3, [r1]
 801158c:	f9b0 2000 	ldrsh.w	r2, [r0]
 8011590:	8003      	strh	r3, [r0, #0]
 8011592:	4b04      	ldr	r3, [pc, #16]	; (80115a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8011594:	881b      	ldrh	r3, [r3, #0]
 8011596:	3b01      	subs	r3, #1
 8011598:	1a9b      	subs	r3, r3, r2
 801159a:	800b      	strh	r3, [r1, #0]
 801159c:	4770      	bx	lr
 801159e:	bf00      	nop
 80115a0:	2400e0ac 	.word	0x2400e0ac
 80115a4:	2400e0a8 	.word	0x2400e0a8

080115a8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 80115a8:	4b07      	ldr	r3, [pc, #28]	; (80115c8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 80115aa:	b510      	push	{r4, lr}
 80115ac:	781b      	ldrb	r3, [r3, #0]
 80115ae:	2b01      	cmp	r3, #1
 80115b0:	d108      	bne.n	80115c4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 80115b2:	4b06      	ldr	r3, [pc, #24]	; (80115cc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 80115b4:	880c      	ldrh	r4, [r1, #0]
 80115b6:	881b      	ldrh	r3, [r3, #0]
 80115b8:	f9b0 2000 	ldrsh.w	r2, [r0]
 80115bc:	3b01      	subs	r3, #1
 80115be:	1b1b      	subs	r3, r3, r4
 80115c0:	8003      	strh	r3, [r0, #0]
 80115c2:	800a      	strh	r2, [r1, #0]
 80115c4:	bd10      	pop	{r4, pc}
 80115c6:	bf00      	nop
 80115c8:	2400e0ac 	.word	0x2400e0ac
 80115cc:	2400e0a8 	.word	0x2400e0a8

080115d0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 80115d0:	4b0a      	ldr	r3, [pc, #40]	; (80115fc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 80115d2:	b510      	push	{r4, lr}
 80115d4:	781b      	ldrb	r3, [r3, #0]
 80115d6:	2b01      	cmp	r3, #1
 80115d8:	d10e      	bne.n	80115f8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 80115da:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 80115de:	8843      	ldrh	r3, [r0, #2]
 80115e0:	f9b0 4000 	ldrsh.w	r4, [r0]
 80115e4:	18ca      	adds	r2, r1, r3
 80115e6:	4b06      	ldr	r3, [pc, #24]	; (8011600 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 80115e8:	8044      	strh	r4, [r0, #2]
 80115ea:	881b      	ldrh	r3, [r3, #0]
 80115ec:	1a9b      	subs	r3, r3, r2
 80115ee:	8003      	strh	r3, [r0, #0]
 80115f0:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80115f4:	8081      	strh	r1, [r0, #4]
 80115f6:	80c3      	strh	r3, [r0, #6]
 80115f8:	bd10      	pop	{r4, pc}
 80115fa:	bf00      	nop
 80115fc:	2400e0ac 	.word	0x2400e0ac
 8011600:	2400e0a8 	.word	0x2400e0a8

08011604 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8011604:	4b08      	ldr	r3, [pc, #32]	; (8011628 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8011606:	781b      	ldrb	r3, [r3, #0]
 8011608:	2b01      	cmp	r3, #1
 801160a:	d10c      	bne.n	8011626 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 801160c:	8803      	ldrh	r3, [r0, #0]
 801160e:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8011612:	8842      	ldrh	r2, [r0, #2]
 8011614:	8002      	strh	r2, [r0, #0]
 8011616:	185a      	adds	r2, r3, r1
 8011618:	4b04      	ldr	r3, [pc, #16]	; (801162c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 801161a:	881b      	ldrh	r3, [r3, #0]
 801161c:	1a9b      	subs	r3, r3, r2
 801161e:	8043      	strh	r3, [r0, #2]
 8011620:	88c3      	ldrh	r3, [r0, #6]
 8011622:	80c1      	strh	r1, [r0, #6]
 8011624:	8083      	strh	r3, [r0, #4]
 8011626:	4770      	bx	lr
 8011628:	2400e0ac 	.word	0x2400e0ac
 801162c:	2400e0a8 	.word	0x2400e0a8

08011630 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8011630:	4b07      	ldr	r3, [pc, #28]	; (8011650 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8011632:	b510      	push	{r4, lr}
 8011634:	781b      	ldrb	r3, [r3, #0]
 8011636:	2b01      	cmp	r3, #1
 8011638:	d108      	bne.n	801164c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 801163a:	f9b1 3000 	ldrsh.w	r3, [r1]
 801163e:	f9b0 4000 	ldrsh.w	r4, [r0]
 8011642:	8003      	strh	r3, [r0, #0]
 8011644:	8893      	ldrh	r3, [r2, #4]
 8011646:	3b01      	subs	r3, #1
 8011648:	1b1b      	subs	r3, r3, r4
 801164a:	800b      	strh	r3, [r1, #0]
 801164c:	bd10      	pop	{r4, pc}
 801164e:	bf00      	nop
 8011650:	2400e0ac 	.word	0x2400e0ac

08011654 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 8011654:	4b0b      	ldr	r3, [pc, #44]	; (8011684 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 8011656:	781b      	ldrb	r3, [r3, #0]
 8011658:	2b01      	cmp	r3, #1
 801165a:	d111      	bne.n	8011680 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 801165c:	680b      	ldr	r3, [r1, #0]
 801165e:	ed90 7a00 	vldr	s14, [r0]
 8011662:	6003      	str	r3, [r0, #0]
 8011664:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 8011668:	eddf 6a07 	vldr	s13, [pc, #28]	; 8011688 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 801166c:	ee07 3a90 	vmov	s15, r3
 8011670:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011674:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011678:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801167c:	edc1 7a00 	vstr	s15, [r1]
 8011680:	4770      	bx	lr
 8011682:	bf00      	nop
 8011684:	2400e0ac 	.word	0x2400e0ac
 8011688:	38d1b717 	.word	0x38d1b717

0801168c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 801168c:	4b0a      	ldr	r3, [pc, #40]	; (80116b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 801168e:	460a      	mov	r2, r1
 8011690:	b510      	push	{r4, lr}
 8011692:	781b      	ldrb	r3, [r3, #0]
 8011694:	2b01      	cmp	r3, #1
 8011696:	d10d      	bne.n	80116b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8011698:	8881      	ldrh	r1, [r0, #4]
 801169a:	8803      	ldrh	r3, [r0, #0]
 801169c:	440b      	add	r3, r1
 801169e:	4601      	mov	r1, r0
 80116a0:	3b01      	subs	r3, #1
 80116a2:	f821 3b02 	strh.w	r3, [r1], #2
 80116a6:	f7ff ffc3 	bl	8011630 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 80116aa:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80116ae:	88c2      	ldrh	r2, [r0, #6]
 80116b0:	80c3      	strh	r3, [r0, #6]
 80116b2:	8082      	strh	r2, [r0, #4]
 80116b4:	bd10      	pop	{r4, pc}
 80116b6:	bf00      	nop
 80116b8:	2400e0ac 	.word	0x2400e0ac

080116bc <_ZN8touchgfx11Application13requestRedrawEv>:
 80116bc:	4b06      	ldr	r3, [pc, #24]	; (80116d8 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 80116be:	2100      	movs	r1, #0
 80116c0:	f9b3 2000 	ldrsh.w	r2, [r3]
 80116c4:	4b05      	ldr	r3, [pc, #20]	; (80116dc <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 80116c6:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 80116ca:	f9b3 3000 	ldrsh.w	r3, [r3]
 80116ce:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 80116d2:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 80116d6:	4770      	bx	lr
 80116d8:	2400e0a8 	.word	0x2400e0a8
 80116dc:	2400e0aa 	.word	0x2400e0aa

080116e0 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 80116e0:	4b03      	ldr	r3, [pc, #12]	; (80116f0 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 80116e2:	6818      	ldr	r0, [r3, #0]
 80116e4:	b110      	cbz	r0, 80116ec <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 80116e6:	6803      	ldr	r3, [r0, #0]
 80116e8:	699b      	ldr	r3, [r3, #24]
 80116ea:	4718      	bx	r3
 80116ec:	4770      	bx	lr
 80116ee:	bf00      	nop
 80116f0:	2400e110 	.word	0x2400e110

080116f4 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 80116f4:	4770      	bx	lr
	...

080116f8 <_ZN8touchgfx11Application4drawEv>:
 80116f8:	4b09      	ldr	r3, [pc, #36]	; (8011720 <_ZN8touchgfx11Application4drawEv+0x28>)
 80116fa:	b507      	push	{r0, r1, r2, lr}
 80116fc:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011700:	2100      	movs	r1, #0
 8011702:	4b08      	ldr	r3, [pc, #32]	; (8011724 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8011704:	9100      	str	r1, [sp, #0]
 8011706:	4669      	mov	r1, sp
 8011708:	f9b3 3000 	ldrsh.w	r3, [r3]
 801170c:	f8ad 2004 	strh.w	r2, [sp, #4]
 8011710:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011714:	6803      	ldr	r3, [r0, #0]
 8011716:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011718:	4798      	blx	r3
 801171a:	b003      	add	sp, #12
 801171c:	f85d fb04 	ldr.w	pc, [sp], #4
 8011720:	2400e0a8 	.word	0x2400e0a8
 8011724:	2400e0aa 	.word	0x2400e0aa

08011728 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8011728:	4b03      	ldr	r3, [pc, #12]	; (8011738 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 801172a:	6818      	ldr	r0, [r3, #0]
 801172c:	b110      	cbz	r0, 8011734 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 801172e:	6803      	ldr	r3, [r0, #0]
 8011730:	69db      	ldr	r3, [r3, #28]
 8011732:	4718      	bx	r3
 8011734:	4770      	bx	lr
 8011736:	bf00      	nop
 8011738:	2400e110 	.word	0x2400e110

0801173c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 801173c:	4b03      	ldr	r3, [pc, #12]	; (801174c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 801173e:	6818      	ldr	r0, [r3, #0]
 8011740:	b110      	cbz	r0, 8011748 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8011742:	6803      	ldr	r3, [r0, #0]
 8011744:	6a1b      	ldr	r3, [r3, #32]
 8011746:	4718      	bx	r3
 8011748:	4770      	bx	lr
 801174a:	bf00      	nop
 801174c:	2400e110 	.word	0x2400e110

08011750 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8011750:	2300      	movs	r3, #0
 8011752:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 8011756:	4770      	bx	lr

08011758 <_ZN8touchgfx11Application14handleKeyEventEh>:
 8011758:	4b03      	ldr	r3, [pc, #12]	; (8011768 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 801175a:	6818      	ldr	r0, [r3, #0]
 801175c:	b110      	cbz	r0, 8011764 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 801175e:	6803      	ldr	r3, [r0, #0]
 8011760:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011762:	4718      	bx	r3
 8011764:	4770      	bx	lr
 8011766:	bf00      	nop
 8011768:	2400e110 	.word	0x2400e110

0801176c <_ZN8touchgfx11ApplicationD1Ev>:
 801176c:	4770      	bx	lr

0801176e <_ZN8touchgfx11ApplicationD0Ev>:
 801176e:	b510      	push	{r4, lr}
 8011770:	4604      	mov	r4, r0
 8011772:	f44f 719c 	mov.w	r1, #312	; 0x138
 8011776:	f00e fa3a 	bl	801fbee <_ZdlPvj>
 801177a:	4620      	mov	r0, r4
 801177c:	bd10      	pop	{r4, pc}
	...

08011780 <_ZN8touchgfx11Application15handleTickEventEv>:
 8011780:	b570      	push	{r4, r5, r6, lr}
 8011782:	4d38      	ldr	r5, [pc, #224]	; (8011864 <_ZN8touchgfx11Application15handleTickEventEv+0xe4>)
 8011784:	4604      	mov	r4, r0
 8011786:	6828      	ldr	r0, [r5, #0]
 8011788:	b140      	cbz	r0, 801179c <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 801178a:	7a03      	ldrb	r3, [r0, #8]
 801178c:	b933      	cbnz	r3, 801179c <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 801178e:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 8011792:	6803      	ldr	r3, [r0, #0]
 8011794:	689b      	ldr	r3, [r3, #8]
 8011796:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801179a:	4718      	bx	r3
 801179c:	f894 3134 	ldrb.w	r3, [r4, #308]	; 0x134
 80117a0:	b97b      	cbnz	r3, 80117c2 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80117a2:	b170      	cbz	r0, 80117c2 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80117a4:	7a03      	ldrb	r3, [r0, #8]
 80117a6:	b163      	cbz	r3, 80117c2 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80117a8:	4b2f      	ldr	r3, [pc, #188]	; (8011868 <_ZN8touchgfx11Application15handleTickEventEv+0xe8>)
 80117aa:	6818      	ldr	r0, [r3, #0]
 80117ac:	b110      	cbz	r0, 80117b4 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 80117ae:	6803      	ldr	r3, [r0, #0]
 80117b0:	691b      	ldr	r3, [r3, #16]
 80117b2:	4798      	blx	r3
 80117b4:	6828      	ldr	r0, [r5, #0]
 80117b6:	6803      	ldr	r3, [r0, #0]
 80117b8:	68db      	ldr	r3, [r3, #12]
 80117ba:	4798      	blx	r3
 80117bc:	2301      	movs	r3, #1
 80117be:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 80117c2:	2500      	movs	r5, #0
 80117c4:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 80117c8:	42a8      	cmp	r0, r5
 80117ca:	dd0c      	ble.n	80117e6 <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 80117cc:	1963      	adds	r3, r4, r5
 80117ce:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 80117d2:	b132      	cbz	r2, 80117e2 <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 80117d4:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 80117d8:	4413      	add	r3, r2
 80117da:	6858      	ldr	r0, [r3, #4]
 80117dc:	6803      	ldr	r3, [r0, #0]
 80117de:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80117e0:	4798      	blx	r3
 80117e2:	3501      	adds	r5, #1
 80117e4:	e7ee      	b.n	80117c4 <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 80117e6:	2300      	movs	r3, #0
 80117e8:	461a      	mov	r2, r3
 80117ea:	4298      	cmp	r0, r3
 80117ec:	d10f      	bne.n	801180e <_ZN8touchgfx11Application15handleTickEventEv+0x8e>
 80117ee:	1d25      	adds	r5, r4, #4
 80117f0:	f8b4 1084 	ldrh.w	r1, [r4, #132]	; 0x84
 80117f4:	4291      	cmp	r1, r2
 80117f6:	dd2d      	ble.n	8011854 <_ZN8touchgfx11Application15handleTickEventEv+0xd4>
 80117f8:	1e48      	subs	r0, r1, #1
 80117fa:	b280      	uxth	r0, r0
 80117fc:	4288      	cmp	r0, r1
 80117fe:	d31a      	bcc.n	8011836 <_ZN8touchgfx11Application15handleTickEventEv+0xb6>
 8011800:	4b1a      	ldr	r3, [pc, #104]	; (801186c <_ZN8touchgfx11Application15handleTickEventEv+0xec>)
 8011802:	f44f 71e5 	mov.w	r1, #458	; 0x1ca
 8011806:	4a1a      	ldr	r2, [pc, #104]	; (8011870 <_ZN8touchgfx11Application15handleTickEventEv+0xf0>)
 8011808:	481a      	ldr	r0, [pc, #104]	; (8011874 <_ZN8touchgfx11Application15handleTickEventEv+0xf4>)
 801180a:	f00e fbe9 	bl	801ffe0 <__assert_func>
 801180e:	18e1      	adds	r1, r4, r3
 8011810:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 8011814:	b16d      	cbz	r5, 8011832 <_ZN8touchgfx11Application15handleTickEventEv+0xb2>
 8011816:	429a      	cmp	r2, r3
 8011818:	d00a      	beq.n	8011830 <_ZN8touchgfx11Application15handleTickEventEv+0xb0>
 801181a:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 801181e:	4431      	add	r1, r6
 8011820:	684e      	ldr	r6, [r1, #4]
 8011822:	b291      	uxth	r1, r2
 8011824:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8011828:	604e      	str	r6, [r1, #4]
 801182a:	18a1      	adds	r1, r4, r2
 801182c:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 8011830:	3201      	adds	r2, #1
 8011832:	3301      	adds	r3, #1
 8011834:	e7d9      	b.n	80117ea <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 8011836:	eb04 0380 	add.w	r3, r4, r0, lsl #2
 801183a:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 801183e:	3304      	adds	r3, #4
 8011840:	428b      	cmp	r3, r1
 8011842:	d004      	beq.n	801184e <_ZN8touchgfx11Application15handleTickEventEv+0xce>
 8011844:	f853 6f04 	ldr.w	r6, [r3, #4]!
 8011848:	f843 6c04 	str.w	r6, [r3, #-4]
 801184c:	e7f8      	b.n	8011840 <_ZN8touchgfx11Application15handleTickEventEv+0xc0>
 801184e:	f8a4 0084 	strh.w	r0, [r4, #132]	; 0x84
 8011852:	e7cd      	b.n	80117f0 <_ZN8touchgfx11Application15handleTickEventEv+0x70>
 8011854:	4b04      	ldr	r3, [pc, #16]	; (8011868 <_ZN8touchgfx11Application15handleTickEventEv+0xe8>)
 8011856:	6818      	ldr	r0, [r3, #0]
 8011858:	b110      	cbz	r0, 8011860 <_ZN8touchgfx11Application15handleTickEventEv+0xe0>
 801185a:	6803      	ldr	r3, [r0, #0]
 801185c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801185e:	e79a      	b.n	8011796 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8011860:	bd70      	pop	{r4, r5, r6, pc}
 8011862:	bf00      	nop
 8011864:	2400e114 	.word	0x2400e114
 8011868:	2400e110 	.word	0x2400e110
 801186c:	0802434f 	.word	0x0802434f
 8011870:	080245b1 	.word	0x080245b1
 8011874:	0802435d 	.word	0x0802435d

08011878 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8011878:	b570      	push	{r4, r5, r6, lr}
 801187a:	4606      	mov	r6, r0
 801187c:	460c      	mov	r4, r1
 801187e:	b929      	cbnz	r1, 801188c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x14>
 8011880:	4b0c      	ldr	r3, [pc, #48]	; (80118b4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x3c>)
 8011882:	215e      	movs	r1, #94	; 0x5e
 8011884:	4a0c      	ldr	r2, [pc, #48]	; (80118b8 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x40>)
 8011886:	480d      	ldr	r0, [pc, #52]	; (80118bc <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x44>)
 8011888:	f00e fbaa 	bl	801ffe0 <__assert_func>
 801188c:	2300      	movs	r3, #0
 801188e:	4d0c      	ldr	r5, [pc, #48]	; (80118c0 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x48>)
 8011890:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 8011894:	6828      	ldr	r0, [r5, #0]
 8011896:	b110      	cbz	r0, 801189e <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x26>
 8011898:	6803      	ldr	r3, [r0, #0]
 801189a:	695b      	ldr	r3, [r3, #20]
 801189c:	4798      	blx	r3
 801189e:	602c      	str	r4, [r5, #0]
 80118a0:	4620      	mov	r0, r4
 80118a2:	6823      	ldr	r3, [r4, #0]
 80118a4:	68db      	ldr	r3, [r3, #12]
 80118a6:	4798      	blx	r3
 80118a8:	6833      	ldr	r3, [r6, #0]
 80118aa:	4630      	mov	r0, r6
 80118ac:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80118ae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80118b2:	4718      	bx	r3
 80118b4:	0802431b 	.word	0x0802431b
 80118b8:	0802442c 	.word	0x0802442c
 80118bc:	08024325 	.word	0x08024325
 80118c0:	2400e110 	.word	0x2400e110

080118c4 <_ZN8touchgfx4Rect10restrictToEss>:
 80118c4:	f9b0 3000 	ldrsh.w	r3, [r0]
 80118c8:	2b00      	cmp	r3, #0
 80118ca:	b510      	push	{r4, lr}
 80118cc:	da04      	bge.n	80118d8 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 80118ce:	8884      	ldrh	r4, [r0, #4]
 80118d0:	4423      	add	r3, r4
 80118d2:	8083      	strh	r3, [r0, #4]
 80118d4:	2300      	movs	r3, #0
 80118d6:	8003      	strh	r3, [r0, #0]
 80118d8:	f9b0 4000 	ldrsh.w	r4, [r0]
 80118dc:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80118e0:	1b09      	subs	r1, r1, r4
 80118e2:	428b      	cmp	r3, r1
 80118e4:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80118e8:	bfc8      	it	gt
 80118ea:	8081      	strhgt	r1, [r0, #4]
 80118ec:	2b00      	cmp	r3, #0
 80118ee:	da04      	bge.n	80118fa <_ZN8touchgfx4Rect10restrictToEss+0x36>
 80118f0:	88c1      	ldrh	r1, [r0, #6]
 80118f2:	440b      	add	r3, r1
 80118f4:	80c3      	strh	r3, [r0, #6]
 80118f6:	2300      	movs	r3, #0
 80118f8:	8043      	strh	r3, [r0, #2]
 80118fa:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 80118fe:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8011902:	1a52      	subs	r2, r2, r1
 8011904:	4293      	cmp	r3, r2
 8011906:	bfc8      	it	gt
 8011908:	80c2      	strhgt	r2, [r0, #6]
 801190a:	bd10      	pop	{r4, pc}

0801190c <_ZN8touchgfx11Application4drawERNS_4RectE>:
 801190c:	4b10      	ldr	r3, [pc, #64]	; (8011950 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 801190e:	b510      	push	{r4, lr}
 8011910:	460c      	mov	r4, r1
 8011912:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011916:	4b0f      	ldr	r3, [pc, #60]	; (8011954 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 8011918:	4620      	mov	r0, r4
 801191a:	f9b3 1000 	ldrsh.w	r1, [r3]
 801191e:	f7ff ffd1 	bl	80118c4 <_ZN8touchgfx4Rect10restrictToEss>
 8011922:	4b0d      	ldr	r3, [pc, #52]	; (8011958 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8011924:	6818      	ldr	r0, [r3, #0]
 8011926:	b190      	cbz	r0, 801194e <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8011928:	6803      	ldr	r3, [r0, #0]
 801192a:	4621      	mov	r1, r4
 801192c:	689b      	ldr	r3, [r3, #8]
 801192e:	4798      	blx	r3
 8011930:	4b0a      	ldr	r3, [pc, #40]	; (801195c <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8011932:	6818      	ldr	r0, [r3, #0]
 8011934:	b118      	cbz	r0, 801193e <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 8011936:	6803      	ldr	r3, [r0, #0]
 8011938:	4621      	mov	r1, r4
 801193a:	689b      	ldr	r3, [r3, #8]
 801193c:	4798      	blx	r3
 801193e:	4b08      	ldr	r3, [pc, #32]	; (8011960 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8011940:	4621      	mov	r1, r4
 8011942:	6818      	ldr	r0, [r3, #0]
 8011944:	6803      	ldr	r3, [r0, #0]
 8011946:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801194a:	69db      	ldr	r3, [r3, #28]
 801194c:	4718      	bx	r3
 801194e:	bd10      	pop	{r4, pc}
 8011950:	2400e0aa 	.word	0x2400e0aa
 8011954:	2400e0a8 	.word	0x2400e0a8
 8011958:	2400e110 	.word	0x2400e110
 801195c:	2400e10c 	.word	0x2400e10c
 8011960:	2400e0b4 	.word	0x2400e0b4

08011964 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8011964:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011966:	4606      	mov	r6, r0
 8011968:	4608      	mov	r0, r1
 801196a:	460f      	mov	r7, r1
 801196c:	f7fb f885 	bl	800ca7a <_ZNK8touchgfx4Rect7isEmptyEv>
 8011970:	b9e8      	cbnz	r0, 80119ae <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8011972:	f9b7 5000 	ldrsh.w	r5, [r7]
 8011976:	f9b6 4000 	ldrsh.w	r4, [r6]
 801197a:	42a5      	cmp	r5, r4
 801197c:	db17      	blt.n	80119ae <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801197e:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8011982:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8011986:	429a      	cmp	r2, r3
 8011988:	db11      	blt.n	80119ae <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801198a:	88b9      	ldrh	r1, [r7, #4]
 801198c:	440d      	add	r5, r1
 801198e:	88b1      	ldrh	r1, [r6, #4]
 8011990:	440c      	add	r4, r1
 8011992:	b22d      	sxth	r5, r5
 8011994:	b224      	sxth	r4, r4
 8011996:	42a5      	cmp	r5, r4
 8011998:	dc09      	bgt.n	80119ae <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801199a:	88f8      	ldrh	r0, [r7, #6]
 801199c:	4410      	add	r0, r2
 801199e:	88f2      	ldrh	r2, [r6, #6]
 80119a0:	4413      	add	r3, r2
 80119a2:	b200      	sxth	r0, r0
 80119a4:	b21b      	sxth	r3, r3
 80119a6:	4298      	cmp	r0, r3
 80119a8:	bfcc      	ite	gt
 80119aa:	2000      	movgt	r0, #0
 80119ac:	2001      	movle	r0, #1
 80119ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080119b0 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 80119b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80119b2:	4604      	mov	r4, r0
 80119b4:	4608      	mov	r0, r1
 80119b6:	460d      	mov	r5, r1
 80119b8:	f7fb f85f 	bl	800ca7a <_ZNK8touchgfx4Rect7isEmptyEv>
 80119bc:	b978      	cbnz	r0, 80119de <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 80119be:	4620      	mov	r0, r4
 80119c0:	f7fb f85b 	bl	800ca7a <_ZNK8touchgfx4Rect7isEmptyEv>
 80119c4:	f9b5 6000 	ldrsh.w	r6, [r5]
 80119c8:	b150      	cbz	r0, 80119e0 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 80119ca:	8026      	strh	r6, [r4, #0]
 80119cc:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 80119d0:	8063      	strh	r3, [r4, #2]
 80119d2:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 80119d6:	80a3      	strh	r3, [r4, #4]
 80119d8:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80119dc:	80e3      	strh	r3, [r4, #6]
 80119de:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80119e0:	f9b4 1000 	ldrsh.w	r1, [r4]
 80119e4:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80119e8:	42b1      	cmp	r1, r6
 80119ea:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 80119ee:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 80119f2:	460f      	mov	r7, r1
 80119f4:	88ed      	ldrh	r5, [r5, #6]
 80119f6:	bfa8      	it	ge
 80119f8:	4637      	movge	r7, r6
 80119fa:	4293      	cmp	r3, r2
 80119fc:	4618      	mov	r0, r3
 80119fe:	4466      	add	r6, ip
 8011a00:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8011a04:	bfa8      	it	ge
 8011a06:	4610      	movge	r0, r2
 8011a08:	442a      	add	r2, r5
 8011a0a:	88e5      	ldrh	r5, [r4, #6]
 8011a0c:	4461      	add	r1, ip
 8011a0e:	b236      	sxth	r6, r6
 8011a10:	8027      	strh	r7, [r4, #0]
 8011a12:	442b      	add	r3, r5
 8011a14:	b209      	sxth	r1, r1
 8011a16:	b212      	sxth	r2, r2
 8011a18:	8060      	strh	r0, [r4, #2]
 8011a1a:	b21b      	sxth	r3, r3
 8011a1c:	428e      	cmp	r6, r1
 8011a1e:	bfac      	ite	ge
 8011a20:	ebc7 0106 	rsbge	r1, r7, r6
 8011a24:	ebc7 0101 	rsblt	r1, r7, r1
 8011a28:	429a      	cmp	r2, r3
 8011a2a:	bfac      	ite	ge
 8011a2c:	ebc0 0202 	rsbge	r2, r0, r2
 8011a30:	ebc0 0203 	rsblt	r2, r0, r3
 8011a34:	80a1      	strh	r1, [r4, #4]
 8011a36:	80e2      	strh	r2, [r4, #6]
 8011a38:	e7d1      	b.n	80119de <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08011a3c <_ZN8touchgfx11Application11getInstanceEv>:
 8011a3c:	4b01      	ldr	r3, [pc, #4]	; (8011a44 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8011a3e:	6818      	ldr	r0, [r3, #0]
 8011a40:	4770      	bx	lr
 8011a42:	bf00      	nop
 8011a44:	2400e120 	.word	0x2400e120

08011a48 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>:
 8011a48:	b570      	push	{r4, r5, r6, lr}
 8011a4a:	2200      	movs	r2, #0
 8011a4c:	f8b0 3084 	ldrh.w	r3, [r0, #132]	; 0x84
 8011a50:	1d04      	adds	r4, r0, #4
 8011a52:	b295      	uxth	r5, r2
 8011a54:	42ab      	cmp	r3, r5
 8011a56:	d90e      	bls.n	8011a76 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x2e>
 8011a58:	f854 6b04 	ldr.w	r6, [r4], #4
 8011a5c:	4615      	mov	r5, r2
 8011a5e:	3201      	adds	r2, #1
 8011a60:	428e      	cmp	r6, r1
 8011a62:	d1f6      	bne.n	8011a52 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0xa>
 8011a64:	4428      	add	r0, r5
 8011a66:	f890 3088 	ldrb.w	r3, [r0, #136]	; 0x88
 8011a6a:	2bff      	cmp	r3, #255	; 0xff
 8011a6c:	d002      	beq.n	8011a74 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x2c>
 8011a6e:	3301      	adds	r3, #1
 8011a70:	f880 3088 	strb.w	r3, [r0, #136]	; 0x88
 8011a74:	bd70      	pop	{r4, r5, r6, pc}
 8011a76:	2b20      	cmp	r3, #32
 8011a78:	d106      	bne.n	8011a88 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x40>
 8011a7a:	4b09      	ldr	r3, [pc, #36]	; (8011aa0 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x58>)
 8011a7c:	f240 2149 	movw	r1, #585	; 0x249
 8011a80:	4a08      	ldr	r2, [pc, #32]	; (8011aa4 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x5c>)
 8011a82:	4809      	ldr	r0, [pc, #36]	; (8011aa8 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x60>)
 8011a84:	f00e faac 	bl	801ffe0 <__assert_func>
 8011a88:	18c2      	adds	r2, r0, r3
 8011a8a:	2401      	movs	r4, #1
 8011a8c:	f882 4088 	strb.w	r4, [r2, #136]	; 0x88
 8011a90:	191a      	adds	r2, r3, r4
 8011a92:	f8a0 2084 	strh.w	r2, [r0, #132]	; 0x84
 8011a96:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 8011a9a:	6041      	str	r1, [r0, #4]
 8011a9c:	e7ea      	b.n	8011a74 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x2c>
 8011a9e:	bf00      	nop
 8011aa0:	08024386 	.word	0x08024386
 8011aa4:	08024470 	.word	0x08024470
 8011aa8:	08024325 	.word	0x08024325

08011aac <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>:
 8011aac:	b570      	push	{r4, r5, r6, lr}
 8011aae:	2300      	movs	r3, #0
 8011ab0:	f8b0 6084 	ldrh.w	r6, [r0, #132]	; 0x84
 8011ab4:	1d04      	adds	r4, r0, #4
 8011ab6:	b29a      	uxth	r2, r3
 8011ab8:	4296      	cmp	r6, r2
 8011aba:	d90a      	bls.n	8011ad2 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x26>
 8011abc:	f854 2b04 	ldr.w	r2, [r4], #4
 8011ac0:	428a      	cmp	r2, r1
 8011ac2:	d107      	bne.n	8011ad4 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x28>
 8011ac4:	18c5      	adds	r5, r0, r3
 8011ac6:	f895 2088 	ldrb.w	r2, [r5, #136]	; 0x88
 8011aca:	b11a      	cbz	r2, 8011ad4 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x28>
 8011acc:	3a01      	subs	r2, #1
 8011ace:	f885 2088 	strb.w	r2, [r5, #136]	; 0x88
 8011ad2:	bd70      	pop	{r4, r5, r6, pc}
 8011ad4:	3301      	adds	r3, #1
 8011ad6:	e7ee      	b.n	8011ab6 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0xa>

08011ad8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 8011ad8:	2300      	movs	r3, #0
 8011ada:	f100 0288 	add.w	r2, r0, #136	; 0x88
 8011ade:	30a8      	adds	r0, #168	; 0xa8
 8011ae0:	f820 3c24 	strh.w	r3, [r0, #-36]
 8011ae4:	f802 3b01 	strb.w	r3, [r2], #1
 8011ae8:	4282      	cmp	r2, r0
 8011aea:	d1fb      	bne.n	8011ae4 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 8011aec:	4770      	bx	lr
	...

08011af0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 8011af0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011af2:	4b10      	ldr	r3, [pc, #64]	; (8011b34 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 8011af4:	4605      	mov	r5, r0
 8011af6:	781b      	ldrb	r3, [r3, #0]
 8011af8:	b1d3      	cbz	r3, 8011b30 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 8011afa:	4b0f      	ldr	r3, [pc, #60]	; (8011b38 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 8011afc:	f100 06ea 	add.w	r6, r0, #234	; 0xea
 8011b00:	4f0e      	ldr	r7, [pc, #56]	; (8011b3c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 8011b02:	881c      	ldrh	r4, [r3, #0]
 8011b04:	f8b5 312a 	ldrh.w	r3, [r5, #298]	; 0x12a
 8011b08:	42a3      	cmp	r3, r4
 8011b0a:	d90e      	bls.n	8011b2a <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 8011b0c:	683b      	ldr	r3, [r7, #0]
 8011b0e:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8011b12:	b10a      	cbz	r2, 8011b18 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 8011b14:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8011b16:	b900      	cbnz	r0, 8011b1a <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 8011b18:	6898      	ldr	r0, [r3, #8]
 8011b1a:	6803      	ldr	r3, [r0, #0]
 8011b1c:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 8011b20:	3401      	adds	r4, #1
 8011b22:	69db      	ldr	r3, [r3, #28]
 8011b24:	4798      	blx	r3
 8011b26:	b2a4      	uxth	r4, r4
 8011b28:	e7ec      	b.n	8011b04 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 8011b2a:	2300      	movs	r3, #0
 8011b2c:	f8a5 312a 	strh.w	r3, [r5, #298]	; 0x12a
 8011b30:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011b32:	bf00      	nop
 8011b34:	2400e0b2 	.word	0x2400e0b2
 8011b38:	2400005c 	.word	0x2400005c
 8011b3c:	2400e0b4 	.word	0x2400e0b4

08011b40 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8011b40:	4603      	mov	r3, r0
 8011b42:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8011b46:	2200      	movs	r2, #0
 8011b48:	801a      	strh	r2, [r3, #0]
 8011b4a:	3308      	adds	r3, #8
 8011b4c:	f823 2c06 	strh.w	r2, [r3, #-6]
 8011b50:	f823 2c04 	strh.w	r2, [r3, #-4]
 8011b54:	f823 2c02 	strh.w	r2, [r3, #-2]
 8011b58:	428b      	cmp	r3, r1
 8011b5a:	d1f5      	bne.n	8011b48 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8011b5c:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8011b60:	4770      	bx	lr
	...

08011b64 <_ZN8touchgfx11ApplicationC1Ev>:
 8011b64:	b570      	push	{r4, r5, r6, lr}
 8011b66:	4b19      	ldr	r3, [pc, #100]	; (8011bcc <_ZN8touchgfx11ApplicationC1Ev+0x68>)
 8011b68:	2500      	movs	r5, #0
 8011b6a:	4604      	mov	r4, r0
 8011b6c:	30a8      	adds	r0, #168	; 0xa8
 8011b6e:	f840 3ca8 	str.w	r3, [r0, #-168]
 8011b72:	f820 5c24 	strh.w	r5, [r0, #-36]
 8011b76:	f7ff ffe3 	bl	8011b40 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8011b7a:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 8011b7e:	f7ff ffdf 	bl	8011b40 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8011b82:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 8011b86:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 8011b8a:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8011b8e:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 8011b92:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 8011b96:	490e      	ldr	r1, [pc, #56]	; (8011bd0 <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 8011b98:	480e      	ldr	r0, [pc, #56]	; (8011bd4 <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 8011b9a:	f00b fc1d 	bl	801d3d8 <CRC_Lock>
 8011b9e:	4e0e      	ldr	r6, [pc, #56]	; (8011bd8 <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 8011ba0:	4b0e      	ldr	r3, [pc, #56]	; (8011bdc <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8011ba2:	b158      	cbz	r0, 8011bbc <_ZN8touchgfx11ApplicationC1Ev+0x58>
 8011ba4:	801d      	strh	r5, [r3, #0]
 8011ba6:	2300      	movs	r3, #0
 8011ba8:	4a0d      	ldr	r2, [pc, #52]	; (8011be0 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8011baa:	4620      	mov	r0, r4
 8011bac:	6013      	str	r3, [r2, #0]
 8011bae:	4a0d      	ldr	r2, [pc, #52]	; (8011be4 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8011bb0:	6033      	str	r3, [r6, #0]
 8011bb2:	6013      	str	r3, [r2, #0]
 8011bb4:	f7ff ff90 	bl	8011ad8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 8011bb8:	4620      	mov	r0, r4
 8011bba:	bd70      	pop	{r4, r5, r6, pc}
 8011bbc:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8011bc0:	2002      	movs	r0, #2
 8011bc2:	801a      	strh	r2, [r3, #0]
 8011bc4:	6030      	str	r0, [r6, #0]
 8011bc6:	f001 fac5 	bl	8013154 <_ZN8touchgfx6Screen4drawEv>
 8011bca:	e7ec      	b.n	8011ba6 <_ZN8touchgfx11ApplicationC1Ev+0x42>
 8011bcc:	080243e8 	.word	0x080243e8
 8011bd0:	b5e8b5cd 	.word	0xb5e8b5cd
 8011bd4:	f407a5c2 	.word	0xf407a5c2
 8011bd8:	2400e110 	.word	0x2400e110
 8011bdc:	2400005c 	.word	0x2400005c
 8011be0:	2400e120 	.word	0x2400e120
 8011be4:	2400e114 	.word	0x2400e114

08011be8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8011be8:	b510      	push	{r4, lr}
 8011bea:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8011bee:	428b      	cmp	r3, r1
 8011bf0:	d806      	bhi.n	8011c00 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x18>
 8011bf2:	4b0b      	ldr	r3, [pc, #44]	; (8011c20 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x38>)
 8011bf4:	f240 11dd 	movw	r1, #477	; 0x1dd
 8011bf8:	4a0a      	ldr	r2, [pc, #40]	; (8011c24 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x3c>)
 8011bfa:	480b      	ldr	r0, [pc, #44]	; (8011c28 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x40>)
 8011bfc:	f00e f9f0 	bl	801ffe0 <__assert_func>
 8011c00:	3b01      	subs	r3, #1
 8011c02:	b29b      	uxth	r3, r3
 8011c04:	428b      	cmp	r3, r1
 8011c06:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8011c0a:	d908      	bls.n	8011c1e <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x36>
 8011c0c:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8011c10:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8011c14:	681a      	ldr	r2, [r3, #0]
 8011c16:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8011c1a:	685a      	ldr	r2, [r3, #4]
 8011c1c:	6062      	str	r2, [r4, #4]
 8011c1e:	bd10      	pop	{r4, pc}
 8011c20:	0802434f 	.word	0x0802434f
 8011c24:	080244b5 	.word	0x080244b5
 8011c28:	0802435d 	.word	0x0802435d

08011c2c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>:
 8011c2c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011c2e:	466b      	mov	r3, sp
 8011c30:	4604      	mov	r4, r0
 8011c32:	e883 0006 	stmia.w	r3, {r1, r2}
 8011c36:	f8b0 2040 	ldrh.w	r2, [r0, #64]	; 0x40
 8011c3a:	2a07      	cmp	r2, #7
 8011c3c:	d906      	bls.n	8011c4c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x20>
 8011c3e:	4b09      	ldr	r3, [pc, #36]	; (8011c64 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x38>)
 8011c40:	f240 11a3 	movw	r1, #419	; 0x1a3
 8011c44:	4a08      	ldr	r2, [pc, #32]	; (8011c68 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x3c>)
 8011c46:	4809      	ldr	r0, [pc, #36]	; (8011c6c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x40>)
 8011c48:	f00e f9ca 	bl	801ffe0 <__assert_func>
 8011c4c:	1c51      	adds	r1, r2, #1
 8011c4e:	eb00 05c2 	add.w	r5, r0, r2, lsl #3
 8011c52:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8011c56:	cb03      	ldmia	r3!, {r0, r1}
 8011c58:	f844 0032 	str.w	r0, [r4, r2, lsl #3]
 8011c5c:	6069      	str	r1, [r5, #4]
 8011c5e:	b003      	add	sp, #12
 8011c60:	bd30      	pop	{r4, r5, pc}
 8011c62:	bf00      	nop
 8011c64:	080243ae 	.word	0x080243ae
 8011c68:	0802454b 	.word	0x0802454b
 8011c6c:	0802435d 	.word	0x0802435d

08011c70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8011c70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011c74:	b08d      	sub	sp, #52	; 0x34
 8011c76:	4b94      	ldr	r3, [pc, #592]	; (8011ec8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
 8011c78:	4683      	mov	fp, r0
 8011c7a:	ac08      	add	r4, sp, #32
 8011c7c:	e884 0006 	stmia.w	r4, {r1, r2}
 8011c80:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011c84:	4620      	mov	r0, r4
 8011c86:	4b91      	ldr	r3, [pc, #580]	; (8011ecc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>)
 8011c88:	f9b3 1000 	ldrsh.w	r1, [r3]
 8011c8c:	f7ff fe1a 	bl	80118c4 <_ZN8touchgfx4Rect10restrictToEss>
 8011c90:	4620      	mov	r0, r4
 8011c92:	f7fa fef2 	bl	800ca7a <_ZNK8touchgfx4Rect7isEmptyEv>
 8011c96:	2800      	cmp	r0, #0
 8011c98:	d16a      	bne.n	8011d70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8011c9a:	9402      	str	r4, [sp, #8]
 8011c9c:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 8011ca0:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 8011ca4:	2400      	movs	r4, #0
 8011ca6:	eb0b 06c5 	add.w	r6, fp, r5, lsl #3
 8011caa:	9301      	str	r3, [sp, #4]
 8011cac:	36a0      	adds	r6, #160	; 0xa0
 8011cae:	42a5      	cmp	r5, r4
 8011cb0:	d00d      	beq.n	8011cce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
 8011cb2:	eba6 01c4 	sub.w	r1, r6, r4, lsl #3
 8011cb6:	9802      	ldr	r0, [sp, #8]
 8011cb8:	f7ff fe54 	bl	8011964 <_ZNK8touchgfx4Rect8includesERKS0_>
 8011cbc:	b128      	cbz	r0, 8011cca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a>
 8011cbe:	1e69      	subs	r1, r5, #1
 8011cc0:	9801      	ldr	r0, [sp, #4]
 8011cc2:	1b09      	subs	r1, r1, r4
 8011cc4:	b289      	uxth	r1, r1
 8011cc6:	f7ff ff8f 	bl	8011be8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011cca:	3401      	adds	r4, #1
 8011ccc:	e7ef      	b.n	8011cae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e>
 8011cce:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 8011cd2:	1e7b      	subs	r3, r7, #1
 8011cd4:	eb0b 0ac7 	add.w	sl, fp, r7, lsl #3
 8011cd8:	9703      	str	r7, [sp, #12]
 8011cda:	9300      	str	r3, [sp, #0]
 8011cdc:	2400      	movs	r4, #0
 8011cde:	4655      	mov	r5, sl
 8011ce0:	9704      	str	r7, [sp, #16]
 8011ce2:	4626      	mov	r6, r4
 8011ce4:	9b04      	ldr	r3, [sp, #16]
 8011ce6:	2b00      	cmp	r3, #0
 8011ce8:	d078      	beq.n	8011ddc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x16c>
 8011cea:	9902      	ldr	r1, [sp, #8]
 8011cec:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 8011cf0:	f7fc ff3e 	bl	800eb70 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8011cf4:	b360      	cbz	r0, 8011d50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8011cf6:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8011cfa:	f9b5 c0a0 	ldrsh.w	ip, [r5, #160]	; 0xa0
 8011cfe:	f9bd 9022 	ldrsh.w	r9, [sp, #34]	; 0x22
 8011d02:	45e6      	cmp	lr, ip
 8011d04:	f9b5 80a2 	ldrsh.w	r8, [r5, #162]	; 0xa2
 8011d08:	db35      	blt.n	8011d76 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8011d0a:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 8011d0e:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 8011d12:	4472      	add	r2, lr
 8011d14:	4463      	add	r3, ip
 8011d16:	b212      	sxth	r2, r2
 8011d18:	b21b      	sxth	r3, r3
 8011d1a:	429a      	cmp	r2, r3
 8011d1c:	dc2b      	bgt.n	8011d76 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8011d1e:	fa1f f288 	uxth.w	r2, r8
 8011d22:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 8011d26:	45c1      	cmp	r9, r8
 8011d28:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 8011d2c:	4413      	add	r3, r2
 8011d2e:	fa1f fc89 	uxth.w	ip, r9
 8011d32:	b29b      	uxth	r3, r3
 8011d34:	fa0f fe83 	sxth.w	lr, r3
 8011d38:	db0f      	blt.n	8011d5a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8011d3a:	eba3 030c 	sub.w	r3, r3, ip
 8011d3e:	1ac9      	subs	r1, r1, r3
 8011d40:	b209      	sxth	r1, r1
 8011d42:	2900      	cmp	r1, #0
 8011d44:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 8011d48:	dd12      	ble.n	8011d70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8011d4a:	f8ad e022 	strh.w	lr, [sp, #34]	; 0x22
 8011d4e:	4604      	mov	r4, r0
 8011d50:	9b04      	ldr	r3, [sp, #16]
 8011d52:	3d08      	subs	r5, #8
 8011d54:	3b01      	subs	r3, #1
 8011d56:	9304      	str	r3, [sp, #16]
 8011d58:	e7c4      	b.n	8011ce4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x74>
 8011d5a:	4461      	add	r1, ip
 8011d5c:	b209      	sxth	r1, r1
 8011d5e:	4571      	cmp	r1, lr
 8011d60:	dc3a      	bgt.n	8011dd8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8011d62:	eba2 020c 	sub.w	r2, r2, ip
 8011d66:	b212      	sxth	r2, r2
 8011d68:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 8011d6c:	2a00      	cmp	r2, #0
 8011d6e:	dcee      	bgt.n	8011d4e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8011d70:	b00d      	add	sp, #52	; 0x34
 8011d72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011d76:	45c1      	cmp	r9, r8
 8011d78:	db2e      	blt.n	8011dd8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8011d7a:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 8011d7e:	4499      	add	r9, r3
 8011d80:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 8011d84:	4498      	add	r8, r3
 8011d86:	fa0f f989 	sxth.w	r9, r9
 8011d8a:	fa0f f888 	sxth.w	r8, r8
 8011d8e:	45c1      	cmp	r9, r8
 8011d90:	dc22      	bgt.n	8011dd8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8011d92:	fa1f f28c 	uxth.w	r2, ip
 8011d96:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 8011d9a:	45e6      	cmp	lr, ip
 8011d9c:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8011da0:	4413      	add	r3, r2
 8011da2:	fa1f f88e 	uxth.w	r8, lr
 8011da6:	b29b      	uxth	r3, r3
 8011da8:	fa0f f983 	sxth.w	r9, r3
 8011dac:	db0a      	blt.n	8011dc4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x154>
 8011dae:	eba3 0308 	sub.w	r3, r3, r8
 8011db2:	1ac9      	subs	r1, r1, r3
 8011db4:	b209      	sxth	r1, r1
 8011db6:	2900      	cmp	r1, #0
 8011db8:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 8011dbc:	ddd8      	ble.n	8011d70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8011dbe:	f8ad 9020 	strh.w	r9, [sp, #32]
 8011dc2:	e7c4      	b.n	8011d4e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8011dc4:	4441      	add	r1, r8
 8011dc6:	b209      	sxth	r1, r1
 8011dc8:	4549      	cmp	r1, r9
 8011dca:	dc05      	bgt.n	8011dd8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8011dcc:	eba2 0208 	sub.w	r2, r2, r8
 8011dd0:	b212      	sxth	r2, r2
 8011dd2:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8011dd6:	e7c9      	b.n	8011d6c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8011dd8:	4606      	mov	r6, r0
 8011dda:	e7b9      	b.n	8011d50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8011ddc:	2c00      	cmp	r4, #0
 8011dde:	f47f af7d 	bne.w	8011cdc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c>
 8011de2:	2e00      	cmp	r6, #0
 8011de4:	f000 81e0 	beq.w	80121a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x538>
 8011de8:	f9bd 7022 	ldrsh.w	r7, [sp, #34]	; 0x22
 8011dec:	4655      	mov	r5, sl
 8011dee:	f9bd 6020 	ldrsh.w	r6, [sp, #32]
 8011df2:	b2b9      	uxth	r1, r7
 8011df4:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 8011df8:	b2b3      	uxth	r3, r6
 8011dfa:	9104      	str	r1, [sp, #16]
 8011dfc:	9804      	ldr	r0, [sp, #16]
 8011dfe:	441a      	add	r2, r3
 8011e00:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 8011e04:	b292      	uxth	r2, r2
 8011e06:	4401      	add	r1, r0
 8011e08:	fa0f f882 	sxth.w	r8, r2
 8011e0c:	b289      	uxth	r1, r1
 8011e0e:	9105      	str	r1, [sp, #20]
 8011e10:	f9bd 9014 	ldrsh.w	r9, [sp, #20]
 8011e14:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8011e18:	9b03      	ldr	r3, [sp, #12]
 8011e1a:	2b00      	cmp	r3, #0
 8011e1c:	d058      	beq.n	8011ed0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x260>
 8011e1e:	9902      	ldr	r1, [sp, #8]
 8011e20:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 8011e24:	f7fc fea4 	bl	800eb70 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8011e28:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8011e2c:	b1d8      	cbz	r0, 8011e66 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 8011e2e:	f9b5 e0a0 	ldrsh.w	lr, [r5, #160]	; 0xa0
 8011e32:	f9b5 10a2 	ldrsh.w	r1, [r5, #162]	; 0xa2
 8011e36:	4576      	cmp	r6, lr
 8011e38:	dc26      	bgt.n	8011e88 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 8011e3a:	f8b5 c0a4 	ldrh.w	ip, [r5, #164]	; 0xa4
 8011e3e:	44f4      	add	ip, lr
 8011e40:	fa0f fc8c 	sxth.w	ip, ip
 8011e44:	45e0      	cmp	r8, ip
 8011e46:	db1f      	blt.n	8011e88 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 8011e48:	428f      	cmp	r7, r1
 8011e4a:	fa1f fc81 	uxth.w	ip, r1
 8011e4e:	f8b5 10a6 	ldrh.w	r1, [r5, #166]	; 0xa6
 8011e52:	dc0f      	bgt.n	8011e74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x204>
 8011e54:	9805      	ldr	r0, [sp, #20]
 8011e56:	f8a5 90a2 	strh.w	r9, [r5, #162]	; 0xa2
 8011e5a:	eba0 0c0c 	sub.w	ip, r0, ip
 8011e5e:	eba1 010c 	sub.w	r1, r1, ip
 8011e62:	f8a5 10a6 	strh.w	r1, [r5, #166]	; 0xa6
 8011e66:	4620      	mov	r0, r4
 8011e68:	9903      	ldr	r1, [sp, #12]
 8011e6a:	3d08      	subs	r5, #8
 8011e6c:	4604      	mov	r4, r0
 8011e6e:	3901      	subs	r1, #1
 8011e70:	9103      	str	r1, [sp, #12]
 8011e72:	e7cf      	b.n	8011e14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a4>
 8011e74:	4461      	add	r1, ip
 8011e76:	b209      	sxth	r1, r1
 8011e78:	4549      	cmp	r1, r9
 8011e7a:	dcf5      	bgt.n	8011e68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 8011e7c:	9904      	ldr	r1, [sp, #16]
 8011e7e:	eba1 0c0c 	sub.w	ip, r1, ip
 8011e82:	f8a5 c0a6 	strh.w	ip, [r5, #166]	; 0xa6
 8011e86:	e7ee      	b.n	8011e66 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 8011e88:	428f      	cmp	r7, r1
 8011e8a:	dced      	bgt.n	8011e68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 8011e8c:	f8b5 c0a6 	ldrh.w	ip, [r5, #166]	; 0xa6
 8011e90:	4461      	add	r1, ip
 8011e92:	b209      	sxth	r1, r1
 8011e94:	4589      	cmp	r9, r1
 8011e96:	dbe7      	blt.n	8011e68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 8011e98:	4576      	cmp	r6, lr
 8011e9a:	fa1f fc8e 	uxth.w	ip, lr
 8011e9e:	f8b5 10a4 	ldrh.w	r1, [r5, #164]	; 0xa4
 8011ea2:	dc08      	bgt.n	8011eb6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x246>
 8011ea4:	eba2 0c0c 	sub.w	ip, r2, ip
 8011ea8:	f8a5 80a0 	strh.w	r8, [r5, #160]	; 0xa0
 8011eac:	eba1 010c 	sub.w	r1, r1, ip
 8011eb0:	f8a5 10a4 	strh.w	r1, [r5, #164]	; 0xa4
 8011eb4:	e7d7      	b.n	8011e66 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 8011eb6:	4461      	add	r1, ip
 8011eb8:	b209      	sxth	r1, r1
 8011eba:	4588      	cmp	r8, r1
 8011ebc:	dbd4      	blt.n	8011e68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 8011ebe:	eba3 0c0c 	sub.w	ip, r3, ip
 8011ec2:	f8a5 c0a4 	strh.w	ip, [r5, #164]	; 0xa4
 8011ec6:	e7ce      	b.n	8011e66 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 8011ec8:	2400e0aa 	.word	0x2400e0aa
 8011ecc:	2400e0a8 	.word	0x2400e0a8
 8011ed0:	2c00      	cmp	r4, #0
 8011ed2:	f000 8169 	beq.w	80121a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x538>
 8011ed6:	9b00      	ldr	r3, [sp, #0]
 8011ed8:	3301      	adds	r3, #1
 8011eda:	f000 8165 	beq.w	80121a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x538>
 8011ede:	f10a 04a0 	add.w	r4, sl, #160	; 0xa0
 8011ee2:	9802      	ldr	r0, [sp, #8]
 8011ee4:	4621      	mov	r1, r4
 8011ee6:	f7ff fd3d 	bl	8011964 <_ZNK8touchgfx4Rect8includesERKS0_>
 8011eea:	b120      	cbz	r0, 8011ef6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x286>
 8011eec:	f8bd 1000 	ldrh.w	r1, [sp]
 8011ef0:	9801      	ldr	r0, [sp, #4]
 8011ef2:	f7ff fe79 	bl	8011be8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011ef6:	9902      	ldr	r1, [sp, #8]
 8011ef8:	4620      	mov	r0, r4
 8011efa:	f7fc fe39 	bl	800eb70 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8011efe:	2800      	cmp	r0, #0
 8011f00:	f000 809b 	beq.w	801203a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ca>
 8011f04:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8011f08:	f8bd 7024 	ldrh.w	r7, [sp, #36]	; 0x24
 8011f0c:	fa1f f288 	uxth.w	r2, r8
 8011f10:	f9ba 40a0 	ldrsh.w	r4, [sl, #160]	; 0xa0
 8011f14:	f8ba 30a4 	ldrh.w	r3, [sl, #164]	; 0xa4
 8011f18:	19d5      	adds	r5, r2, r7
 8011f1a:	b2a1      	uxth	r1, r4
 8011f1c:	45a0      	cmp	r8, r4
 8011f1e:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8011f22:	fa1f f985 	uxth.w	r9, r5
 8011f26:	440b      	add	r3, r1
 8011f28:	f9ba 00a2 	ldrsh.w	r0, [sl, #162]	; 0xa2
 8011f2c:	fa0f f589 	sxth.w	r5, r9
 8011f30:	b29b      	uxth	r3, r3
 8011f32:	9503      	str	r5, [sp, #12]
 8011f34:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 8011f38:	9507      	str	r5, [sp, #28]
 8011f3a:	f340 809d 	ble.w	8012078 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x408>
 8011f3e:	1a52      	subs	r2, r2, r1
 8011f40:	4584      	cmp	ip, r0
 8011f42:	fa0f fe83 	sxth.w	lr, r3
 8011f46:	b292      	uxth	r2, r2
 8011f48:	b215      	sxth	r5, r2
 8011f4a:	dd2f      	ble.n	8011fac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x33c>
 8011f4c:	9e00      	ldr	r6, [sp, #0]
 8011f4e:	fa1f fc8c 	uxth.w	ip, ip
 8011f52:	b280      	uxth	r0, r0
 8011f54:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 8011f58:	eb0b 08c6 	add.w	r8, fp, r6, lsl #3
 8011f5c:	9e03      	ldr	r6, [sp, #12]
 8011f5e:	ebac 0300 	sub.w	r3, ip, r0
 8011f62:	448c      	add	ip, r1
 8011f64:	eba6 060e 	sub.w	r6, r6, lr
 8011f68:	f8b8 e0ae 	ldrh.w	lr, [r8, #174]	; 0xae
 8011f6c:	b29b      	uxth	r3, r3
 8011f6e:	4470      	add	r0, lr
 8011f70:	fa0f fc8c 	sxth.w	ip, ip
 8011f74:	b21c      	sxth	r4, r3
 8011f76:	b200      	sxth	r0, r0
 8011f78:	4366      	muls	r6, r4
 8011f7a:	ebac 0000 	sub.w	r0, ip, r0
 8011f7e:	4368      	muls	r0, r5
 8011f80:	4286      	cmp	r6, r0
 8011f82:	db09      	blt.n	8011f98 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 8011f84:	f8b8 30a8 	ldrh.w	r3, [r8, #168]	; 0xa8
 8011f88:	f8a8 40ae 	strh.w	r4, [r8, #174]	; 0xae
 8011f8c:	4417      	add	r7, r2
 8011f8e:	f8ad 3020 	strh.w	r3, [sp, #32]
 8011f92:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 8011f96:	e681      	b.n	8011c9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011f98:	440b      	add	r3, r1
 8011f9a:	f8a8 50ac 	strh.w	r5, [r8, #172]	; 0xac
 8011f9e:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8011fa2:	f8b8 30aa 	ldrh.w	r3, [r8, #170]	; 0xaa
 8011fa6:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8011faa:	e677      	b.n	8011c9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011fac:	9e03      	ldr	r6, [sp, #12]
 8011fae:	45b6      	cmp	lr, r6
 8011fb0:	da28      	bge.n	8012004 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x394>
 8011fb2:	9b00      	ldr	r3, [sp, #0]
 8011fb4:	eba6 060e 	sub.w	r6, r6, lr
 8011fb8:	f8bd 4026 	ldrh.w	r4, [sp, #38]	; 0x26
 8011fbc:	eb0b 01c3 	add.w	r1, fp, r3, lsl #3
 8011fc0:	eb04 030c 	add.w	r3, r4, ip
 8011fc4:	fa1f f883 	uxth.w	r8, r3
 8011fc8:	f8b1 30ae 	ldrh.w	r3, [r1, #174]	; 0xae
 8011fcc:	4403      	add	r3, r0
 8011fce:	fa0f f988 	sxth.w	r9, r8
 8011fd2:	eba0 000c 	sub.w	r0, r0, ip
 8011fd6:	eba3 0308 	sub.w	r3, r3, r8
 8011fda:	4368      	muls	r0, r5
 8011fdc:	b29b      	uxth	r3, r3
 8011fde:	fa0f f883 	sxth.w	r8, r3
 8011fe2:	fb08 f606 	mul.w	r6, r8, r6
 8011fe6:	42b0      	cmp	r0, r6
 8011fe8:	dc06      	bgt.n	8011ff8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 8011fea:	f8a1 90aa 	strh.w	r9, [r1, #170]	; 0xaa
 8011fee:	f8a1 80ae 	strh.w	r8, [r1, #174]	; 0xae
 8011ff2:	f8b1 30a8 	ldrh.w	r3, [r1, #168]	; 0xa8
 8011ff6:	e7c9      	b.n	8011f8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31c>
 8011ff8:	4423      	add	r3, r4
 8011ffa:	f8a1 50ac 	strh.w	r5, [r1, #172]	; 0xac
 8011ffe:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8012002:	e64b      	b.n	8011c9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8012004:	eba3 0309 	sub.w	r3, r3, r9
 8012008:	9807      	ldr	r0, [sp, #28]
 801200a:	b29b      	uxth	r3, r3
 801200c:	2806      	cmp	r0, #6
 801200e:	fa0f fc83 	sxth.w	ip, r3
 8012012:	d818      	bhi.n	8012046 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d6>
 8012014:	4652      	mov	r2, sl
 8012016:	ab0a      	add	r3, sp, #40	; 0x28
 8012018:	f852 0fa0 	ldr.w	r0, [r2, #160]!
 801201c:	6851      	ldr	r1, [r2, #4]
 801201e:	f8aa c0a4 	strh.w	ip, [sl, #164]	; 0xa4
 8012022:	c303      	stmia	r3!, {r0, r1}
 8012024:	9b03      	ldr	r3, [sp, #12]
 8012026:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
 801202a:	f8aa 30a0 	strh.w	r3, [sl, #160]	; 0xa0
 801202e:	ab0a      	add	r3, sp, #40	; 0x28
 8012030:	9801      	ldr	r0, [sp, #4]
 8012032:	e893 0006 	ldmia.w	r3, {r1, r2}
 8012036:	f7ff fdf9 	bl	8011c2c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 801203a:	9b00      	ldr	r3, [sp, #0]
 801203c:	f1aa 0a08 	sub.w	sl, sl, #8
 8012040:	3b01      	subs	r3, #1
 8012042:	9300      	str	r3, [sp, #0]
 8012044:	e747      	b.n	8011ed6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x266>
 8012046:	9800      	ldr	r0, [sp, #0]
 8012048:	45ac      	cmp	ip, r5
 801204a:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 801204e:	db0c      	blt.n	801206a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fa>
 8012050:	4417      	add	r7, r2
 8012052:	4458      	add	r0, fp
 8012054:	f8ad 4020 	strh.w	r4, [sp, #32]
 8012058:	b2bf      	uxth	r7, r7
 801205a:	f8a0 c0ac 	strh.w	ip, [r0, #172]	; 0xac
 801205e:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 8012062:	440f      	add	r7, r1
 8012064:	f8a0 70a8 	strh.w	r7, [r0, #168]	; 0xa8
 8012068:	e618      	b.n	8011c9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801206a:	4458      	add	r0, fp
 801206c:	f8a0 50ac 	strh.w	r5, [r0, #172]	; 0xac
 8012070:	443b      	add	r3, r7
 8012072:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8012076:	e611      	b.n	8011c9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8012078:	fa1f f18c 	uxth.w	r1, ip
 801207c:	f8bd 5026 	ldrh.w	r5, [sp, #38]	; 0x26
 8012080:	b282      	uxth	r2, r0
 8012082:	4584      	cmp	ip, r0
 8012084:	eb01 0e05 	add.w	lr, r1, r5
 8012088:	9204      	str	r2, [sp, #16]
 801208a:	fa1f fe8e 	uxth.w	lr, lr
 801208e:	9e04      	ldr	r6, [sp, #16]
 8012090:	fa0f f28e 	sxth.w	r2, lr
 8012094:	9205      	str	r2, [sp, #20]
 8012096:	f8ba 20a6 	ldrh.w	r2, [sl, #166]	; 0xa6
 801209a:	4432      	add	r2, r6
 801209c:	b292      	uxth	r2, r2
 801209e:	9206      	str	r2, [sp, #24]
 80120a0:	da26      	bge.n	80120f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x480>
 80120a2:	eba3 0309 	sub.w	r3, r3, r9
 80120a6:	eba2 020e 	sub.w	r2, r2, lr
 80120aa:	eba0 000c 	sub.w	r0, r0, ip
 80120ae:	eba4 0408 	sub.w	r4, r4, r8
 80120b2:	b29b      	uxth	r3, r3
 80120b4:	b292      	uxth	r2, r2
 80120b6:	fa0f fa83 	sxth.w	sl, r3
 80120ba:	b211      	sxth	r1, r2
 80120bc:	fb0a f000 	mul.w	r0, sl, r0
 80120c0:	434c      	muls	r4, r1
 80120c2:	42a0      	cmp	r0, r4
 80120c4:	9800      	ldr	r0, [sp, #0]
 80120c6:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 80120ca:	dc06      	bgt.n	80120da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
 80120cc:	4458      	add	r0, fp
 80120ce:	9a05      	ldr	r2, [sp, #20]
 80120d0:	f8a0 10ae 	strh.w	r1, [r0, #174]	; 0xae
 80120d4:	f8a0 20aa 	strh.w	r2, [r0, #170]	; 0xaa
 80120d8:	e7ca      	b.n	8012070 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x400>
 80120da:	eb0b 0300 	add.w	r3, fp, r0
 80120de:	9903      	ldr	r1, [sp, #12]
 80120e0:	f8a3 a0ac 	strh.w	sl, [r3, #172]	; 0xac
 80120e4:	f8a3 10a8 	strh.w	r1, [r3, #168]	; 0xa8
 80120e8:	442a      	add	r2, r5
 80120ea:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 80120ee:	e5d5      	b.n	8011c9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80120f0:	9e04      	ldr	r6, [sp, #16]
 80120f2:	9a03      	ldr	r2, [sp, #12]
 80120f4:	1b89      	subs	r1, r1, r6
 80120f6:	b21e      	sxth	r6, r3
 80120f8:	b289      	uxth	r1, r1
 80120fa:	4296      	cmp	r6, r2
 80120fc:	fa0f fc81 	sxth.w	ip, r1
 8012100:	dd25      	ble.n	801214e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4de>
 8012102:	eba3 0309 	sub.w	r3, r3, r9
 8012106:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 801210a:	9e05      	ldr	r6, [sp, #20]
 801210c:	eba4 0408 	sub.w	r4, r4, r8
 8012110:	b29b      	uxth	r3, r3
 8012112:	eba6 0902 	sub.w	r9, r6, r2
 8012116:	fb0c f404 	mul.w	r4, ip, r4
 801211a:	b218      	sxth	r0, r3
 801211c:	9a00      	ldr	r2, [sp, #0]
 801211e:	fb00 f909 	mul.w	r9, r0, r9
 8012122:	00d2      	lsls	r2, r2, #3
 8012124:	454c      	cmp	r4, r9
 8012126:	db03      	blt.n	8012130 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c0>
 8012128:	445a      	add	r2, fp
 801212a:	f8a2 c0ae 	strh.w	ip, [r2, #174]	; 0xae
 801212e:	e79f      	b.n	8012070 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x400>
 8012130:	eb0b 0302 	add.w	r3, fp, r2
 8012134:	9a03      	ldr	r2, [sp, #12]
 8012136:	4429      	add	r1, r5
 8012138:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
 801213c:	f8a3 00ac 	strh.w	r0, [r3, #172]	; 0xac
 8012140:	f8b3 30aa 	ldrh.w	r3, [r3, #170]	; 0xaa
 8012144:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 8012148:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801214c:	e5a6      	b.n	8011c9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801214e:	9b06      	ldr	r3, [sp, #24]
 8012150:	9c07      	ldr	r4, [sp, #28]
 8012152:	eba3 020e 	sub.w	r2, r3, lr
 8012156:	2c06      	cmp	r4, #6
 8012158:	b292      	uxth	r2, r2
 801215a:	b213      	sxth	r3, r2
 801215c:	d80d      	bhi.n	801217a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50a>
 801215e:	4651      	mov	r1, sl
 8012160:	aa0a      	add	r2, sp, #40	; 0x28
 8012162:	f851 0fa0 	ldr.w	r0, [r1, #160]!
 8012166:	6849      	ldr	r1, [r1, #4]
 8012168:	f8aa 30a6 	strh.w	r3, [sl, #166]	; 0xa6
 801216c:	9b05      	ldr	r3, [sp, #20]
 801216e:	c203      	stmia	r2!, {r0, r1}
 8012170:	f8aa 30a2 	strh.w	r3, [sl, #162]	; 0xa2
 8012174:	f8ad c02e 	strh.w	ip, [sp, #46]	; 0x2e
 8012178:	e759      	b.n	801202e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 801217a:	9c00      	ldr	r4, [sp, #0]
 801217c:	4563      	cmp	r3, ip
 801217e:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8012182:	db0d      	blt.n	80121a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x530>
 8012184:	4429      	add	r1, r5
 8012186:	9a04      	ldr	r2, [sp, #16]
 8012188:	445c      	add	r4, fp
 801218a:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 801218e:	b289      	uxth	r1, r1
 8012190:	f8a4 30ae 	strh.w	r3, [r4, #174]	; 0xae
 8012194:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 8012198:	4411      	add	r1, r2
 801219a:	f8a4 10aa 	strh.w	r1, [r4, #170]	; 0xaa
 801219e:	e57d      	b.n	8011c9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80121a0:	445c      	add	r4, fp
 80121a2:	f8a4 c0ae 	strh.w	ip, [r4, #174]	; 0xae
 80121a6:	e79f      	b.n	80120e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x478>
 80121a8:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 80121ac:	2f07      	cmp	r7, #7
 80121ae:	d806      	bhi.n	80121be <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x54e>
 80121b0:	ab08      	add	r3, sp, #32
 80121b2:	9801      	ldr	r0, [sp, #4]
 80121b4:	e893 0006 	ldmia.w	r3, {r1, r2}
 80121b8:	f7ff fd38 	bl	8011c2c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 80121bc:	e5d8      	b.n	8011d70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80121be:	f107 39ff 	add.w	r9, r7, #4294967295
 80121c2:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 80121c6:	eb0b 07c7 	add.w	r7, fp, r7, lsl #3
 80121ca:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 80121ce:	f04f 35ff 	mov.w	r5, #4294967295
 80121d2:	2400      	movs	r4, #0
 80121d4:	9304      	str	r3, [sp, #16]
 80121d6:	f9b7 30a4 	ldrsh.w	r3, [r7, #164]	; 0xa4
 80121da:	f109 32ff 	add.w	r2, r9, #4294967295
 80121de:	9300      	str	r3, [sp, #0]
 80121e0:	4690      	mov	r8, r2
 80121e2:	f9b7 30a6 	ldrsh.w	r3, [r7, #166]	; 0xa6
 80121e6:	9303      	str	r3, [sp, #12]
 80121e8:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 80121ec:	f1b8 3fff 	cmp.w	r8, #4294967295
 80121f0:	6818      	ldr	r0, [r3, #0]
 80121f2:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 80121f6:	9206      	str	r2, [sp, #24]
 80121f8:	bf16      	itet	ne
 80121fa:	9904      	ldrne	r1, [sp, #16]
 80121fc:	f8dd e008 	ldreq.w	lr, [sp, #8]
 8012200:	eb01 0ec8 	addne.w	lr, r1, r8, lsl #3
 8012204:	9305      	str	r3, [sp, #20]
 8012206:	f8be 1006 	ldrh.w	r1, [lr, #6]
 801220a:	f8be 6004 	ldrh.w	r6, [lr, #4]
 801220e:	fb16 f601 	smulbb	r6, r6, r1
 8012212:	6859      	ldr	r1, [r3, #4]
 8012214:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8012218:	4671      	mov	r1, lr
 801221a:	a80a      	add	r0, sp, #40	; 0x28
 801221c:	f7ff fbc8 	bl	80119b0 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8012220:	f8bd 002e 	ldrh.w	r0, [sp, #46]	; 0x2e
 8012224:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8012228:	9b03      	ldr	r3, [sp, #12]
 801222a:	9a00      	ldr	r2, [sp, #0]
 801222c:	fb11 f100 	smulbb	r1, r1, r0
 8012230:	2008      	movs	r0, #8
 8012232:	fb02 6603 	mla	r6, r2, r3, r6
 8012236:	1b8e      	subs	r6, r1, r6
 8012238:	fb91 f1f0 	sdiv	r1, r1, r0
 801223c:	42b1      	cmp	r1, r6
 801223e:	dc21      	bgt.n	8012284 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x614>
 8012240:	4556      	cmp	r6, sl
 8012242:	e9dd 3205 	ldrd	r3, r2, [sp, #20]
 8012246:	da03      	bge.n	8012250 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e0>
 8012248:	b1e6      	cbz	r6, 8012284 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x614>
 801224a:	46b2      	mov	sl, r6
 801224c:	4645      	mov	r5, r8
 801224e:	464c      	mov	r4, r9
 8012250:	f108 38ff 	add.w	r8, r8, #4294967295
 8012254:	f118 0f02 	cmn.w	r8, #2
 8012258:	d1c8      	bne.n	80121ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57c>
 801225a:	f1b2 3fff 	cmp.w	r2, #4294967295
 801225e:	f1a7 0708 	sub.w	r7, r7, #8
 8012262:	4691      	mov	r9, r2
 8012264:	d1b7      	bne.n	80121d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x566>
 8012266:	9b01      	ldr	r3, [sp, #4]
 8012268:	b2a6      	uxth	r6, r4
 801226a:	00e4      	lsls	r4, r4, #3
 801226c:	1918      	adds	r0, r3, r4
 801226e:	1c6b      	adds	r3, r5, #1
 8012270:	d10b      	bne.n	801228a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x61a>
 8012272:	4601      	mov	r1, r0
 8012274:	9802      	ldr	r0, [sp, #8]
 8012276:	f7ff fb9b 	bl	80119b0 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801227a:	4631      	mov	r1, r6
 801227c:	9801      	ldr	r0, [sp, #4]
 801227e:	f7ff fcb3 	bl	8011be8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8012282:	e50b      	b.n	8011c9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8012284:	4645      	mov	r5, r8
 8012286:	464c      	mov	r4, r9
 8012288:	e7ed      	b.n	8012266 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5f6>
 801228a:	9b01      	ldr	r3, [sp, #4]
 801228c:	00ed      	lsls	r5, r5, #3
 801228e:	445c      	add	r4, fp
 8012290:	1959      	adds	r1, r3, r5
 8012292:	445d      	add	r5, fp
 8012294:	f7ff fb8c 	bl	80119b0 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8012298:	9b02      	ldr	r3, [sp, #8]
 801229a:	cb03      	ldmia	r3!, {r0, r1}
 801229c:	9b02      	ldr	r3, [sp, #8]
 801229e:	f8c5 00a8 	str.w	r0, [r5, #168]	; 0xa8
 80122a2:	f8c5 10ac 	str.w	r1, [r5, #172]	; 0xac
 80122a6:	f854 0fa8 	ldr.w	r0, [r4, #168]!
 80122aa:	6861      	ldr	r1, [r4, #4]
 80122ac:	c303      	stmia	r3!, {r0, r1}
 80122ae:	e7e4      	b.n	801227a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x60a>

080122b0 <_ZN8touchgfx11Application10invalidateEv>:
 80122b0:	4b09      	ldr	r3, [pc, #36]	; (80122d8 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 80122b2:	b082      	sub	sp, #8
 80122b4:	2100      	movs	r1, #0
 80122b6:	f9b3 2000 	ldrsh.w	r2, [r3]
 80122ba:	4b08      	ldr	r3, [pc, #32]	; (80122dc <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 80122bc:	9100      	str	r1, [sp, #0]
 80122be:	f9b3 3000 	ldrsh.w	r3, [r3]
 80122c2:	f8ad 2004 	strh.w	r2, [sp, #4]
 80122c6:	f8ad 3006 	strh.w	r3, [sp, #6]
 80122ca:	ab02      	add	r3, sp, #8
 80122cc:	e913 0006 	ldmdb	r3, {r1, r2}
 80122d0:	b002      	add	sp, #8
 80122d2:	f7ff bccd 	b.w	8011c70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 80122d6:	bf00      	nop
 80122d8:	2400e0a8 	.word	0x2400e0a8
 80122dc:	2400e0aa 	.word	0x2400e0aa

080122e0 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 80122e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80122e4:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 80122e8:	b09b      	sub	sp, #108	; 0x6c
 80122ea:	4604      	mov	r4, r0
 80122ec:	4630      	mov	r0, r6
 80122ee:	f7fa fbc4 	bl	800ca7a <_ZNK8touchgfx4Rect7isEmptyEv>
 80122f2:	4605      	mov	r5, r0
 80122f4:	b940      	cbnz	r0, 8012308 <_ZN8touchgfx11Application15drawCachedAreasEv+0x28>
 80122f6:	4620      	mov	r0, r4
 80122f8:	e896 0006 	ldmia.w	r6, {r1, r2}
 80122fc:	f7ff fcb8 	bl	8011c70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8012300:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 8012304:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8012308:	4bc6      	ldr	r3, [pc, #792]	; (8012624 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 801230a:	681b      	ldr	r3, [r3, #0]
 801230c:	b33b      	cbz	r3, 801235e <_ZN8touchgfx11Application15drawCachedAreasEv+0x7e>
 801230e:	4dc6      	ldr	r5, [pc, #792]	; (8012628 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8012310:	4628      	mov	r0, r5
 8012312:	f7fa fbb2 	bl	800ca7a <_ZNK8touchgfx4Rect7isEmptyEv>
 8012316:	4606      	mov	r6, r0
 8012318:	bb08      	cbnz	r0, 801235e <_ZN8touchgfx11Application15drawCachedAreasEv+0x7e>
 801231a:	4628      	mov	r0, r5
 801231c:	f7ff f958 	bl	80115d0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8012320:	6829      	ldr	r1, [r5, #0]
 8012322:	686a      	ldr	r2, [r5, #4]
 8012324:	4620      	mov	r0, r4
 8012326:	f7ff fca3 	bl	8011c70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 801232a:	802e      	strh	r6, [r5, #0]
 801232c:	806e      	strh	r6, [r5, #2]
 801232e:	80ae      	strh	r6, [r5, #4]
 8012330:	80ee      	strh	r6, [r5, #6]
 8012332:	4dbe      	ldr	r5, [pc, #760]	; (801262c <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8012334:	a809      	add	r0, sp, #36	; 0x24
 8012336:	f7ff fc03 	bl	8011b40 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 801233a:	882f      	ldrh	r7, [r5, #0]
 801233c:	463e      	mov	r6, r7
 801233e:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8012342:	42b3      	cmp	r3, r6
 8012344:	d912      	bls.n	801236c <_ZN8touchgfx11Application15drawCachedAreasEv+0x8c>
 8012346:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 801234a:	3601      	adds	r6, #1
 801234c:	a809      	add	r0, sp, #36	; 0x24
 801234e:	f8d3 10a8 	ldr.w	r1, [r3, #168]	; 0xa8
 8012352:	b2b6      	uxth	r6, r6
 8012354:	f8d3 20ac 	ldr.w	r2, [r3, #172]	; 0xac
 8012358:	f7ff fc68 	bl	8011c2c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 801235c:	e7ef      	b.n	801233e <_ZN8touchgfx11Application15drawCachedAreasEv+0x5e>
 801235e:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8012362:	2b00      	cmp	r3, #0
 8012364:	d1e5      	bne.n	8012332 <_ZN8touchgfx11Application15drawCachedAreasEv+0x52>
 8012366:	b01b      	add	sp, #108	; 0x6c
 8012368:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801236c:	463e      	mov	r6, r7
 801236e:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 8012372:	42b3      	cmp	r3, r6
 8012374:	d90b      	bls.n	801238e <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 8012376:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 801237a:	3601      	adds	r6, #1
 801237c:	4620      	mov	r0, r4
 801237e:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 8012382:	b2b6      	uxth	r6, r6
 8012384:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 8012388:	f7ff fc72 	bl	8011c70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 801238c:	e7ef      	b.n	801236e <_ZN8touchgfx11Application15drawCachedAreasEv+0x8e>
 801238e:	4ea8      	ldr	r6, [pc, #672]	; (8012630 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8012390:	6833      	ldr	r3, [r6, #0]
 8012392:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8012396:	2b01      	cmp	r3, #1
 8012398:	f040 80d2 	bne.w	8012540 <_ZN8touchgfx11Application15drawCachedAreasEv+0x260>
 801239c:	eb04 03c7 	add.w	r3, r4, r7, lsl #3
 80123a0:	4639      	mov	r1, r7
 80123a2:	f8b4 c0e8 	ldrh.w	ip, [r4, #232]	; 0xe8
 80123a6:	2700      	movs	r7, #0
 80123a8:	33aa      	adds	r3, #170	; 0xaa
 80123aa:	458c      	cmp	ip, r1
 80123ac:	f103 0308 	add.w	r3, r3, #8
 80123b0:	dd0a      	ble.n	80123c8 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe8>
 80123b2:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 80123b6:	3101      	adds	r1, #1
 80123b8:	f833 0c04 	ldrh.w	r0, [r3, #-4]
 80123bc:	4402      	add	r2, r0
 80123be:	b212      	sxth	r2, r2
 80123c0:	4297      	cmp	r7, r2
 80123c2:	bfb8      	it	lt
 80123c4:	4617      	movlt	r7, r2
 80123c6:	e7f0      	b.n	80123aa <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
 80123c8:	4b9a      	ldr	r3, [pc, #616]	; (8012634 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 80123ca:	f8b3 9000 	ldrh.w	r9, [r3]
 80123ce:	2300      	movs	r3, #0
 80123d0:	f1b9 0f0f 	cmp.w	r9, #15
 80123d4:	bf8c      	ite	hi
 80123d6:	ea4f 09d9 	movhi.w	r9, r9, lsr #3
 80123da:	f04f 0901 	movls.w	r9, #1
 80123de:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80123e2:	f8bd 801a 	ldrh.w	r8, [sp, #26]
 80123e6:	f8bd 0016 	ldrh.w	r0, [sp, #22]
 80123ea:	4440      	add	r0, r8
 80123ec:	fa0f f880 	sxth.w	r8, r0
 80123f0:	6830      	ldr	r0, [r6, #0]
 80123f2:	4547      	cmp	r7, r8
 80123f4:	6803      	ldr	r3, [r0, #0]
 80123f6:	f340 8086 	ble.w	8012506 <_ZN8touchgfx11Application15drawCachedAreasEv+0x226>
 80123fa:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 80123fe:	4798      	blx	r3
 8012400:	eb08 0309 	add.w	r3, r8, r9
 8012404:	4298      	cmp	r0, r3
 8012406:	da08      	bge.n	801241a <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 8012408:	4287      	cmp	r7, r0
 801240a:	dd06      	ble.n	801241a <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 801240c:	4580      	cmp	r8, r0
 801240e:	dd70      	ble.n	80124f2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x212>
 8012410:	f1b8 0f00 	cmp.w	r8, #0
 8012414:	dd6d      	ble.n	80124f2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x212>
 8012416:	4638      	mov	r0, r7
 8012418:	e004      	b.n	8012424 <_ZN8touchgfx11Application15drawCachedAreasEv+0x144>
 801241a:	4580      	cmp	r8, r0
 801241c:	dcfb      	bgt.n	8012416 <_ZN8touchgfx11Application15drawCachedAreasEv+0x136>
 801241e:	42b8      	cmp	r0, r7
 8012420:	bfa8      	it	ge
 8012422:	4638      	movge	r0, r7
 8012424:	4b84      	ldr	r3, [pc, #528]	; (8012638 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8012426:	eba0 0008 	sub.w	r0, r0, r8
 801242a:	2200      	movs	r2, #0
 801242c:	f8ad 8016 	strh.w	r8, [sp, #22]
 8012430:	f9b3 3000 	ldrsh.w	r3, [r3]
 8012434:	f8b5 8000 	ldrh.w	r8, [r5]
 8012438:	f8ad 2014 	strh.w	r2, [sp, #20]
 801243c:	f8ad 3018 	strh.w	r3, [sp, #24]
 8012440:	f8ad 001a 	strh.w	r0, [sp, #26]
 8012444:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8012448:	4543      	cmp	r3, r8
 801244a:	d9ca      	bls.n	80123e2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x102>
 801244c:	eb04 02c8 	add.w	r2, r4, r8, lsl #3
 8012450:	ab07      	add	r3, sp, #28
 8012452:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 8012456:	6851      	ldr	r1, [r2, #4]
 8012458:	c303      	stmia	r3!, {r0, r1}
 801245a:	a905      	add	r1, sp, #20
 801245c:	a807      	add	r0, sp, #28
 801245e:	f7fc fb87 	bl	800eb70 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8012462:	2800      	cmp	r0, #0
 8012464:	d04c      	beq.n	8012500 <_ZN8touchgfx11Application15drawCachedAreasEv+0x220>
 8012466:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 801246a:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 801246e:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8012472:	4686      	mov	lr, r0
 8012474:	4290      	cmp	r0, r2
 8012476:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 801247a:	4450      	add	r0, sl
 801247c:	f8bd a018 	ldrh.w	sl, [sp, #24]
 8012480:	bfb8      	it	lt
 8012482:	4696      	movlt	lr, r2
 8012484:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8012488:	4452      	add	r2, sl
 801248a:	b280      	uxth	r0, r0
 801248c:	4299      	cmp	r1, r3
 801248e:	468c      	mov	ip, r1
 8012490:	b292      	uxth	r2, r2
 8012492:	f8ad e01c 	strh.w	lr, [sp, #28]
 8012496:	fa0f fb80 	sxth.w	fp, r0
 801249a:	bfb8      	it	lt
 801249c:	469c      	movlt	ip, r3
 801249e:	fa0f fa82 	sxth.w	sl, r2
 80124a2:	f8ad c01e 	strh.w	ip, [sp, #30]
 80124a6:	45d3      	cmp	fp, sl
 80124a8:	bfb8      	it	lt
 80124aa:	4602      	movlt	r2, r0
 80124ac:	eba2 020e 	sub.w	r2, r2, lr
 80124b0:	f8ad 2020 	strh.w	r2, [sp, #32]
 80124b4:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 80124b8:	4411      	add	r1, r2
 80124ba:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80124be:	4413      	add	r3, r2
 80124c0:	b289      	uxth	r1, r1
 80124c2:	b29b      	uxth	r3, r3
 80124c4:	b208      	sxth	r0, r1
 80124c6:	b21a      	sxth	r2, r3
 80124c8:	4290      	cmp	r0, r2
 80124ca:	bfb8      	it	lt
 80124cc:	460b      	movlt	r3, r1
 80124ce:	eba3 030c 	sub.w	r3, r3, ip
 80124d2:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80124d6:	a807      	add	r0, sp, #28
 80124d8:	f7fa facf 	bl	800ca7a <_ZNK8touchgfx4Rect7isEmptyEv>
 80124dc:	b920      	cbnz	r0, 80124e8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x208>
 80124de:	6823      	ldr	r3, [r4, #0]
 80124e0:	a907      	add	r1, sp, #28
 80124e2:	4620      	mov	r0, r4
 80124e4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80124e6:	4798      	blx	r3
 80124e8:	f108 0801 	add.w	r8, r8, #1
 80124ec:	fa1f f888 	uxth.w	r8, r8
 80124f0:	e7a8      	b.n	8012444 <_ZN8touchgfx11Application15drawCachedAreasEv+0x164>
 80124f2:	6830      	ldr	r0, [r6, #0]
 80124f4:	2101      	movs	r1, #1
 80124f6:	6803      	ldr	r3, [r0, #0]
 80124f8:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 80124fc:	4798      	blx	r3
 80124fe:	e770      	b.n	80123e2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x102>
 8012500:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8012504:	e7e7      	b.n	80124d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1f6>
 8012506:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012508:	4798      	blx	r3
 801250a:	4b4c      	ldr	r3, [pc, #304]	; (801263c <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 801250c:	781b      	ldrb	r3, [r3, #0]
 801250e:	2b00      	cmp	r3, #0
 8012510:	f43f af29 	beq.w	8012366 <_ZN8touchgfx11Application15drawCachedAreasEv+0x86>
 8012514:	2300      	movs	r3, #0
 8012516:	882d      	ldrh	r5, [r5, #0]
 8012518:	34ea      	adds	r4, #234	; 0xea
 801251a:	f8a4 3040 	strh.w	r3, [r4, #64]	; 0x40
 801251e:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 8012522:	42ab      	cmp	r3, r5
 8012524:	f67f af1f 	bls.w	8012366 <_ZN8touchgfx11Application15drawCachedAreasEv+0x86>
 8012528:	ab1a      	add	r3, sp, #104	; 0x68
 801252a:	4620      	mov	r0, r4
 801252c:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8012530:	3501      	adds	r5, #1
 8012532:	3b44      	subs	r3, #68	; 0x44
 8012534:	b2ad      	uxth	r5, r5
 8012536:	e893 0006 	ldmia.w	r3, {r1, r2}
 801253a:	f7ff fb77 	bl	8011c2c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 801253e:	e7ee      	b.n	801251e <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8012540:	2b02      	cmp	r3, #2
 8012542:	f040 8137 	bne.w	80127b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4d4>
 8012546:	4b3e      	ldr	r3, [pc, #248]	; (8012640 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 8012548:	781b      	ldrb	r3, [r3, #0]
 801254a:	2b01      	cmp	r3, #1
 801254c:	d02c      	beq.n	80125a8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c8>
 801254e:	f104 0aa8 	add.w	sl, r4, #168	; 0xa8
 8012552:	882a      	ldrh	r2, [r5, #0]
 8012554:	f8b4 10e8 	ldrh.w	r1, [r4, #232]	; 0xe8
 8012558:	3201      	adds	r2, #1
 801255a:	b292      	uxth	r2, r2
 801255c:	2900      	cmp	r1, #0
 801255e:	d0d4      	beq.n	801250a <_ZN8touchgfx11Application15drawCachedAreasEv+0x22a>
 8012560:	f8b4 70aa 	ldrh.w	r7, [r4, #170]	; 0xaa
 8012564:	4610      	mov	r0, r2
 8012566:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 801256a:	f04f 0900 	mov.w	r9, #0
 801256e:	441f      	add	r7, r3
 8012570:	b23f      	sxth	r7, r7
 8012572:	b283      	uxth	r3, r0
 8012574:	ea4f 08c9 	mov.w	r8, r9, lsl #3
 8012578:	4299      	cmp	r1, r3
 801257a:	f240 80c5 	bls.w	8012708 <_ZN8touchgfx11Application15drawCachedAreasEv+0x428>
 801257e:	44a0      	add	r8, r4
 8012580:	eb04 0bc0 	add.w	fp, r4, r0, lsl #3
 8012584:	4684      	mov	ip, r0
 8012586:	f9b8 30aa 	ldrsh.w	r3, [r8, #170]	; 0xaa
 801258a:	f9bb e0aa 	ldrsh.w	lr, [fp, #170]	; 0xaa
 801258e:	4573      	cmp	r3, lr
 8012590:	f340 80a7 	ble.w	80126e2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x402>
 8012594:	f8bb 70ae 	ldrh.w	r7, [fp, #174]	; 0xae
 8012598:	4477      	add	r7, lr
 801259a:	b23f      	sxth	r7, r7
 801259c:	429f      	cmp	r7, r3
 801259e:	bfa8      	it	ge
 80125a0:	461f      	movge	r7, r3
 80125a2:	3001      	adds	r0, #1
 80125a4:	46e1      	mov	r9, ip
 80125a6:	e7e4      	b.n	8012572 <_ZN8touchgfx11Application15drawCachedAreasEv+0x292>
 80125a8:	f104 09a8 	add.w	r9, r4, #168	; 0xa8
 80125ac:	f8b4 b0e8 	ldrh.w	fp, [r4, #232]	; 0xe8
 80125b0:	f1bb 0f00 	cmp.w	fp, #0
 80125b4:	d0a9      	beq.n	801250a <_ZN8touchgfx11Application15drawCachedAreasEv+0x22a>
 80125b6:	882b      	ldrh	r3, [r5, #0]
 80125b8:	f04f 0800 	mov.w	r8, #0
 80125bc:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 80125c0:	3301      	adds	r3, #1
 80125c2:	b29b      	uxth	r3, r3
 80125c4:	b299      	uxth	r1, r3
 80125c6:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 80125ca:	458b      	cmp	fp, r1
 80125cc:	d93a      	bls.n	8012644 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 80125ce:	4427      	add	r7, r4
 80125d0:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 80125d4:	469c      	mov	ip, r3
 80125d6:	f8b7 10ac 	ldrh.w	r1, [r7, #172]	; 0xac
 80125da:	f8b7 00a8 	ldrh.w	r0, [r7, #168]	; 0xa8
 80125de:	f9ba e0a8 	ldrsh.w	lr, [sl, #168]	; 0xa8
 80125e2:	4408      	add	r0, r1
 80125e4:	f8ba 10ac 	ldrh.w	r1, [sl, #172]	; 0xac
 80125e8:	4471      	add	r1, lr
 80125ea:	b200      	sxth	r0, r0
 80125ec:	b209      	sxth	r1, r1
 80125ee:	4288      	cmp	r0, r1
 80125f0:	da06      	bge.n	8012600 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
 80125f2:	4586      	cmp	lr, r0
 80125f4:	4672      	mov	r2, lr
 80125f6:	bfb8      	it	lt
 80125f8:	4602      	movlt	r2, r0
 80125fa:	3301      	adds	r3, #1
 80125fc:	46e0      	mov	r8, ip
 80125fe:	e7e1      	b.n	80125c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e4>
 8012600:	d10b      	bne.n	801261a <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 8012602:	f9b7 c0ae 	ldrsh.w	ip, [r7, #174]	; 0xae
 8012606:	f9ba 10ae 	ldrsh.w	r1, [sl, #174]	; 0xae
 801260a:	458c      	cmp	ip, r1
 801260c:	bfb4      	ite	lt
 801260e:	469c      	movlt	ip, r3
 8012610:	46c4      	movge	ip, r8
 8012612:	4572      	cmp	r2, lr
 8012614:	bfb8      	it	lt
 8012616:	4672      	movlt	r2, lr
 8012618:	e7ef      	b.n	80125fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x31a>
 801261a:	428a      	cmp	r2, r1
 801261c:	46c4      	mov	ip, r8
 801261e:	bfb8      	it	lt
 8012620:	460a      	movlt	r2, r1
 8012622:	e7ea      	b.n	80125fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x31a>
 8012624:	2400e10c 	.word	0x2400e10c
 8012628:	2400e118 	.word	0x2400e118
 801262c:	2400005c 	.word	0x2400005c
 8012630:	2400e0b4 	.word	0x2400e0b4
 8012634:	2400e0aa 	.word	0x2400e0aa
 8012638:	2400e0a8 	.word	0x2400e0a8
 801263c:	2400e0b2 	.word	0x2400e0b2
 8012640:	2400e0ac 	.word	0x2400e0ac
 8012644:	19e1      	adds	r1, r4, r7
 8012646:	ab07      	add	r3, sp, #28
 8012648:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 801264c:	6849      	ldr	r1, [r1, #4]
 801264e:	c303      	stmia	r3!, {r0, r1}
 8012650:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8012654:	a807      	add	r0, sp, #28
 8012656:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 801265a:	2b13      	cmp	r3, #19
 801265c:	440b      	add	r3, r1
 801265e:	bfd8      	it	le
 8012660:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8012664:	1a9b      	subs	r3, r3, r2
 8012666:	f8ad 201c 	strh.w	r2, [sp, #28]
 801266a:	f8ad 3020 	strh.w	r3, [sp, #32]
 801266e:	f7fe ffc9 	bl	8011604 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012672:	a807      	add	r0, sp, #28
 8012674:	f7fa fa01 	bl	800ca7a <_ZNK8touchgfx4Rect7isEmptyEv>
 8012678:	2800      	cmp	r0, #0
 801267a:	d197      	bne.n	80125ac <_ZN8touchgfx11Application15drawCachedAreasEv+0x2cc>
 801267c:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8012680:	4427      	add	r7, r4
 8012682:	6830      	ldr	r0, [r6, #0]
 8012684:	f1bc 0f14 	cmp.w	ip, #20
 8012688:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 801268c:	f8d0 e000 	ldr.w	lr, [r0]
 8012690:	bfa8      	it	ge
 8012692:	f04f 0c14 	movge.w	ip, #20
 8012696:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 801269a:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 801269e:	fa1f fc8c 	uxth.w	ip, ip
 80126a2:	f8cd c000 	str.w	ip, [sp]
 80126a6:	f8de a090 	ldr.w	sl, [lr, #144]	; 0x90
 80126aa:	47d0      	blx	sl
 80126ac:	4682      	mov	sl, r0
 80126ae:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80126b2:	a807      	add	r0, sp, #28
 80126b4:	f7fe ff8c 	bl	80115d0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 80126b8:	6823      	ldr	r3, [r4, #0]
 80126ba:	4620      	mov	r0, r4
 80126bc:	a907      	add	r1, sp, #28
 80126be:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80126c0:	4798      	blx	r3
 80126c2:	f8b7 00ac 	ldrh.w	r0, [r7, #172]	; 0xac
 80126c6:	eba0 000a 	sub.w	r0, r0, sl
 80126ca:	b200      	sxth	r0, r0
 80126cc:	f8a7 00ac 	strh.w	r0, [r7, #172]	; 0xac
 80126d0:	2800      	cmp	r0, #0
 80126d2:	f47f af6b 	bne.w	80125ac <_ZN8touchgfx11Application15drawCachedAreasEv+0x2cc>
 80126d6:	fa1f f188 	uxth.w	r1, r8
 80126da:	4648      	mov	r0, r9
 80126dc:	f7ff fa84 	bl	8011be8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80126e0:	e764      	b.n	80125ac <_ZN8touchgfx11Application15drawCachedAreasEv+0x2cc>
 80126e2:	d10c      	bne.n	80126fe <_ZN8touchgfx11Application15drawCachedAreasEv+0x41e>
 80126e4:	f9b8 e0ac 	ldrsh.w	lr, [r8, #172]	; 0xac
 80126e8:	f9bb c0ac 	ldrsh.w	ip, [fp, #172]	; 0xac
 80126ec:	45e6      	cmp	lr, ip
 80126ee:	bfb4      	ite	lt
 80126f0:	4684      	movlt	ip, r0
 80126f2:	46cc      	movge	ip, r9
 80126f4:	f8bb e0ae 	ldrh.w	lr, [fp, #174]	; 0xae
 80126f8:	4473      	add	r3, lr
 80126fa:	b21b      	sxth	r3, r3
 80126fc:	e74e      	b.n	801259c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2bc>
 80126fe:	4577      	cmp	r7, lr
 8012700:	46cc      	mov	ip, r9
 8012702:	bfa8      	it	ge
 8012704:	4677      	movge	r7, lr
 8012706:	e74c      	b.n	80125a2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c2>
 8012708:	eb0a 0008 	add.w	r0, sl, r8
 801270c:	44a0      	add	r8, r4
 801270e:	f9b8 b0ae 	ldrsh.w	fp, [r8, #174]	; 0xae
 8012712:	f1bb 0f13 	cmp.w	fp, #19
 8012716:	bfdc      	itt	le
 8012718:	f8b8 70aa 	ldrhle.w	r7, [r8, #170]	; 0xaa
 801271c:	445f      	addle	r7, fp
 801271e:	e9cd 1202 	strd	r1, r2, [sp, #8]
 8012722:	bfd8      	it	le
 8012724:	b23f      	sxthle	r7, r7
 8012726:	f7fa f9a8 	bl	800ca7a <_ZNK8touchgfx4Rect7isEmptyEv>
 801272a:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 801272e:	2800      	cmp	r0, #0
 8012730:	f47f af14 	bne.w	801255c <_ZN8touchgfx11Application15drawCachedAreasEv+0x27c>
 8012734:	f9b8 20aa 	ldrsh.w	r2, [r8, #170]	; 0xaa
 8012738:	fa1f fb8b 	uxth.w	fp, fp
 801273c:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8012740:	1abf      	subs	r7, r7, r2
 8012742:	f9b8 10a8 	ldrsh.w	r1, [r8, #168]	; 0xa8
 8012746:	f9b8 30ac 	ldrsh.w	r3, [r8, #172]	; 0xac
 801274a:	2f14      	cmp	r7, #20
 801274c:	6830      	ldr	r0, [r6, #0]
 801274e:	f8ad 101c 	strh.w	r1, [sp, #28]
 8012752:	b289      	uxth	r1, r1
 8012754:	bfa8      	it	ge
 8012756:	2714      	movge	r7, #20
 8012758:	f8ad 201e 	strh.w	r2, [sp, #30]
 801275c:	f8ad 3020 	strh.w	r3, [sp, #32]
 8012760:	b292      	uxth	r2, r2
 8012762:	f8d0 c000 	ldr.w	ip, [r0]
 8012766:	b2bf      	uxth	r7, r7
 8012768:	b29b      	uxth	r3, r3
 801276a:	455f      	cmp	r7, fp
 801276c:	bf94      	ite	ls
 801276e:	9700      	strls	r7, [sp, #0]
 8012770:	f8cd b000 	strhi.w	fp, [sp]
 8012774:	f8dc 7090 	ldr.w	r7, [ip, #144]	; 0x90
 8012778:	47b8      	blx	r7
 801277a:	6823      	ldr	r3, [r4, #0]
 801277c:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8012780:	a907      	add	r1, sp, #28
 8012782:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8012784:	4620      	mov	r0, r4
 8012786:	4798      	blx	r3
 8012788:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 801278c:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 8012790:	f8b8 20aa 	ldrh.w	r2, [r8, #170]	; 0xaa
 8012794:	1a5b      	subs	r3, r3, r1
 8012796:	440a      	add	r2, r1
 8012798:	b21b      	sxth	r3, r3
 801279a:	f8a8 20aa 	strh.w	r2, [r8, #170]	; 0xaa
 801279e:	f8a8 30ae 	strh.w	r3, [r8, #174]	; 0xae
 80127a2:	2b00      	cmp	r3, #0
 80127a4:	f47f aed5 	bne.w	8012552 <_ZN8touchgfx11Application15drawCachedAreasEv+0x272>
 80127a8:	fa1f f189 	uxth.w	r1, r9
 80127ac:	4650      	mov	r0, sl
 80127ae:	f7ff fa1b 	bl	8011be8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80127b2:	e6ce      	b.n	8012552 <_ZN8touchgfx11Application15drawCachedAreasEv+0x272>
 80127b4:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 80127b8:	42bb      	cmp	r3, r7
 80127ba:	f67f aea6 	bls.w	801250a <_ZN8touchgfx11Application15drawCachedAreasEv+0x22a>
 80127be:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 80127c2:	ab07      	add	r3, sp, #28
 80127c4:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 80127c8:	6851      	ldr	r1, [r2, #4]
 80127ca:	c303      	stmia	r3!, {r0, r1}
 80127cc:	a807      	add	r0, sp, #28
 80127ce:	f7fa f954 	bl	800ca7a <_ZNK8touchgfx4Rect7isEmptyEv>
 80127d2:	b920      	cbnz	r0, 80127de <_ZN8touchgfx11Application15drawCachedAreasEv+0x4fe>
 80127d4:	6823      	ldr	r3, [r4, #0]
 80127d6:	a907      	add	r1, sp, #28
 80127d8:	4620      	mov	r0, r4
 80127da:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80127dc:	4798      	blx	r3
 80127de:	3701      	adds	r7, #1
 80127e0:	b2bf      	uxth	r7, r7
 80127e2:	e7e7      	b.n	80127b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4d4>

080127e4 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 80127e4:	4b03      	ldr	r3, [pc, #12]	; (80127f4 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 80127e6:	2200      	movs	r2, #0
 80127e8:	801a      	strh	r2, [r3, #0]
 80127ea:	805a      	strh	r2, [r3, #2]
 80127ec:	809a      	strh	r2, [r3, #4]
 80127ee:	80da      	strh	r2, [r3, #6]
 80127f0:	4770      	bx	lr
 80127f2:	bf00      	nop
 80127f4:	2400e118 	.word	0x2400e118

080127f8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 80127f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80127fc:	b09d      	sub	sp, #116	; 0x74
 80127fe:	4606      	mov	r6, r0
 8012800:	4614      	mov	r4, r2
 8012802:	468a      	mov	sl, r1
 8012804:	a803      	add	r0, sp, #12
 8012806:	461d      	mov	r5, r3
 8012808:	f000 fe80 	bl	801350c <_ZN8touchgfx12TextProviderC1Ev>
 801280c:	6833      	ldr	r3, [r6, #0]
 801280e:	4630      	mov	r0, r6
 8012810:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8012814:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012816:	4798      	blx	r3
 8012818:	6833      	ldr	r3, [r6, #0]
 801281a:	4607      	mov	r7, r0
 801281c:	4630      	mov	r0, r6
 801281e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8012820:	4798      	blx	r3
 8012822:	462a      	mov	r2, r5
 8012824:	2500      	movs	r5, #0
 8012826:	4621      	mov	r1, r4
 8012828:	9000      	str	r0, [sp, #0]
 801282a:	463b      	mov	r3, r7
 801282c:	462c      	mov	r4, r5
 801282e:	46a9      	mov	r9, r5
 8012830:	46a8      	mov	r8, r5
 8012832:	a803      	add	r0, sp, #12
 8012834:	f000 fed6 	bl	80135e4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012838:	2300      	movs	r3, #0
 801283a:	9302      	str	r3, [sp, #8]
 801283c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8012840:	429c      	cmp	r4, r3
 8012842:	d002      	beq.n	801284a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8012844:	455c      	cmp	r4, fp
 8012846:	bf18      	it	ne
 8012848:	4625      	movne	r5, r4
 801284a:	ab02      	add	r3, sp, #8
 801284c:	4632      	mov	r2, r6
 801284e:	4651      	mov	r1, sl
 8012850:	a803      	add	r0, sp, #12
 8012852:	f001 f9d9 	bl	8013c08 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8012856:	4604      	mov	r4, r0
 8012858:	b108      	cbz	r0, 801285e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 801285a:	280a      	cmp	r0, #10
 801285c:	d10a      	bne.n	8012874 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 801285e:	45c1      	cmp	r9, r8
 8012860:	bf38      	it	cc
 8012862:	46c1      	movcc	r9, r8
 8012864:	f04f 0800 	mov.w	r8, #0
 8012868:	2c00      	cmp	r4, #0
 801286a:	d1e5      	bne.n	8012838 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 801286c:	4648      	mov	r0, r9
 801286e:	b01d      	add	sp, #116	; 0x74
 8012870:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012874:	9a02      	ldr	r2, [sp, #8]
 8012876:	2a00      	cmp	r2, #0
 8012878:	d0de      	beq.n	8012838 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 801287a:	7b57      	ldrb	r7, [r2, #13]
 801287c:	4629      	mov	r1, r5
 801287e:	6833      	ldr	r3, [r6, #0]
 8012880:	007f      	lsls	r7, r7, #1
 8012882:	8894      	ldrh	r4, [r2, #4]
 8012884:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8012886:	f407 7080 	and.w	r0, r7, #256	; 0x100
 801288a:	7a97      	ldrb	r7, [r2, #10]
 801288c:	4307      	orrs	r7, r0
 801288e:	4630      	mov	r0, r6
 8012890:	4798      	blx	r3
 8012892:	4438      	add	r0, r7
 8012894:	4480      	add	r8, r0
 8012896:	fa1f f888 	uxth.w	r8, r8
 801289a:	e7e5      	b.n	8012868 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

0801289c <_ZNK8touchgfx4Font12getCharWidthEt>:
 801289c:	b508      	push	{r3, lr}
 801289e:	6803      	ldr	r3, [r0, #0]
 80128a0:	68db      	ldr	r3, [r3, #12]
 80128a2:	4798      	blx	r3
 80128a4:	b128      	cbz	r0, 80128b2 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 80128a6:	7b43      	ldrb	r3, [r0, #13]
 80128a8:	7a80      	ldrb	r0, [r0, #10]
 80128aa:	005b      	lsls	r3, r3, #1
 80128ac:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80128b0:	4318      	orrs	r0, r3
 80128b2:	bd08      	pop	{r3, pc}

080128b4 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 80128b4:	b40e      	push	{r1, r2, r3}
 80128b6:	b5f0      	push	{r4, r5, r6, r7, lr}
 80128b8:	b09e      	sub	sp, #120	; 0x78
 80128ba:	4605      	mov	r5, r0
 80128bc:	ab23      	add	r3, sp, #140	; 0x8c
 80128be:	a805      	add	r0, sp, #20
 80128c0:	f853 4b04 	ldr.w	r4, [r3], #4
 80128c4:	9303      	str	r3, [sp, #12]
 80128c6:	f000 fe21 	bl	801350c <_ZN8touchgfx12TextProviderC1Ev>
 80128ca:	682b      	ldr	r3, [r5, #0]
 80128cc:	4628      	mov	r0, r5
 80128ce:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80128d0:	4798      	blx	r3
 80128d2:	682b      	ldr	r3, [r5, #0]
 80128d4:	4606      	mov	r6, r0
 80128d6:	4628      	mov	r0, r5
 80128d8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80128da:	4798      	blx	r3
 80128dc:	4633      	mov	r3, r6
 80128de:	4621      	mov	r1, r4
 80128e0:	ae1e      	add	r6, sp, #120	; 0x78
 80128e2:	2400      	movs	r4, #0
 80128e4:	9000      	str	r0, [sp, #0]
 80128e6:	9a03      	ldr	r2, [sp, #12]
 80128e8:	a805      	add	r0, sp, #20
 80128ea:	f000 fe7b 	bl	80135e4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80128ee:	f846 4d68 	str.w	r4, [r6, #-104]!
 80128f2:	462a      	mov	r2, r5
 80128f4:	4633      	mov	r3, r6
 80128f6:	4621      	mov	r1, r4
 80128f8:	a805      	add	r0, sp, #20
 80128fa:	f001 f985 	bl	8013c08 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80128fe:	b300      	cbz	r0, 8012942 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8e>
 8012900:	280a      	cmp	r0, #10
 8012902:	d01a      	beq.n	801293a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
 8012904:	9f04      	ldr	r7, [sp, #16]
 8012906:	b1c7      	cbz	r7, 801293a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
 8012908:	7b78      	ldrb	r0, [r7, #13]
 801290a:	7a3b      	ldrb	r3, [r7, #8]
 801290c:	00c1      	lsls	r1, r0, #3
 801290e:	88aa      	ldrh	r2, [r5, #4]
 8012910:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8012914:	4319      	orrs	r1, r3
 8012916:	0643      	lsls	r3, r0, #25
 8012918:	ea4f 1000 	mov.w	r0, r0, lsl #4
 801291c:	bf48      	it	mi
 801291e:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8012922:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8012926:	bf48      	it	mi
 8012928:	b219      	sxthmi	r1, r3
 801292a:	79fb      	ldrb	r3, [r7, #7]
 801292c:	4303      	orrs	r3, r0
 801292e:	4413      	add	r3, r2
 8012930:	1a5b      	subs	r3, r3, r1
 8012932:	b29b      	uxth	r3, r3
 8012934:	42a3      	cmp	r3, r4
 8012936:	bfc8      	it	gt
 8012938:	b21c      	sxthgt	r4, r3
 801293a:	4633      	mov	r3, r6
 801293c:	462a      	mov	r2, r5
 801293e:	2100      	movs	r1, #0
 8012940:	e7da      	b.n	80128f8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8012942:	b2a0      	uxth	r0, r4
 8012944:	b01e      	add	sp, #120	; 0x78
 8012946:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801294a:	b003      	add	sp, #12
 801294c:	4770      	bx	lr

0801294e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 801294e:	b40e      	push	{r1, r2, r3}
 8012950:	b570      	push	{r4, r5, r6, lr}
 8012952:	b09d      	sub	sp, #116	; 0x74
 8012954:	4604      	mov	r4, r0
 8012956:	ab21      	add	r3, sp, #132	; 0x84
 8012958:	a803      	add	r0, sp, #12
 801295a:	f853 5b04 	ldr.w	r5, [r3], #4
 801295e:	9302      	str	r3, [sp, #8]
 8012960:	f000 fdd4 	bl	801350c <_ZN8touchgfx12TextProviderC1Ev>
 8012964:	6823      	ldr	r3, [r4, #0]
 8012966:	4620      	mov	r0, r4
 8012968:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801296a:	4798      	blx	r3
 801296c:	6823      	ldr	r3, [r4, #0]
 801296e:	4606      	mov	r6, r0
 8012970:	4620      	mov	r0, r4
 8012972:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8012974:	2401      	movs	r4, #1
 8012976:	4798      	blx	r3
 8012978:	4633      	mov	r3, r6
 801297a:	9000      	str	r0, [sp, #0]
 801297c:	4629      	mov	r1, r5
 801297e:	9a02      	ldr	r2, [sp, #8]
 8012980:	a803      	add	r0, sp, #12
 8012982:	f000 fe2f 	bl	80135e4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012986:	a803      	add	r0, sp, #12
 8012988:	f001 fa38 	bl	8013dfc <_ZN8touchgfx12TextProvider11getNextCharEv>
 801298c:	b2a3      	uxth	r3, r4
 801298e:	b138      	cbz	r0, 80129a0 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x52>
 8012990:	280a      	cmp	r0, #10
 8012992:	a803      	add	r0, sp, #12
 8012994:	bf04      	itt	eq
 8012996:	3301      	addeq	r3, #1
 8012998:	b21c      	sxtheq	r4, r3
 801299a:	f001 fa2f 	bl	8013dfc <_ZN8touchgfx12TextProvider11getNextCharEv>
 801299e:	e7f5      	b.n	801298c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 80129a0:	4618      	mov	r0, r3
 80129a2:	b01d      	add	sp, #116	; 0x74
 80129a4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80129a8:	b003      	add	sp, #12
 80129aa:	4770      	bx	lr

080129ac <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 80129ac:	b40e      	push	{r1, r2, r3}
 80129ae:	b5f0      	push	{r4, r5, r6, r7, lr}
 80129b0:	b09e      	sub	sp, #120	; 0x78
 80129b2:	4604      	mov	r4, r0
 80129b4:	ab23      	add	r3, sp, #140	; 0x8c
 80129b6:	a805      	add	r0, sp, #20
 80129b8:	f853 5b04 	ldr.w	r5, [r3], #4
 80129bc:	9303      	str	r3, [sp, #12]
 80129be:	f000 fda5 	bl	801350c <_ZN8touchgfx12TextProviderC1Ev>
 80129c2:	6823      	ldr	r3, [r4, #0]
 80129c4:	4620      	mov	r0, r4
 80129c6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80129c8:	4798      	blx	r3
 80129ca:	6823      	ldr	r3, [r4, #0]
 80129cc:	4606      	mov	r6, r0
 80129ce:	4620      	mov	r0, r4
 80129d0:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80129d2:	4798      	blx	r3
 80129d4:	4633      	mov	r3, r6
 80129d6:	4629      	mov	r1, r5
 80129d8:	9000      	str	r0, [sp, #0]
 80129da:	9a03      	ldr	r2, [sp, #12]
 80129dc:	a805      	add	r0, sp, #20
 80129de:	f000 fe01 	bl	80135e4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80129e2:	ad1e      	add	r5, sp, #120	; 0x78
 80129e4:	2100      	movs	r1, #0
 80129e6:	26ff      	movs	r6, #255	; 0xff
 80129e8:	4622      	mov	r2, r4
 80129ea:	a805      	add	r0, sp, #20
 80129ec:	f845 1d68 	str.w	r1, [r5, #-104]!
 80129f0:	462b      	mov	r3, r5
 80129f2:	f001 f909 	bl	8013c08 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80129f6:	b1d8      	cbz	r0, 8012a30 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x84>
 80129f8:	280a      	cmp	r0, #10
 80129fa:	d012      	beq.n	8012a22 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 80129fc:	9804      	ldr	r0, [sp, #16]
 80129fe:	b180      	cbz	r0, 8012a22 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 8012a00:	7b47      	ldrb	r7, [r0, #13]
 8012a02:	7922      	ldrb	r2, [r4, #4]
 8012a04:	00fb      	lsls	r3, r7, #3
 8012a06:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8012a0a:	7a03      	ldrb	r3, [r0, #8]
 8012a0c:	430b      	orrs	r3, r1
 8012a0e:	0679      	lsls	r1, r7, #25
 8012a10:	bf44      	itt	mi
 8012a12:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012a16:	b21b      	sxthmi	r3, r3
 8012a18:	1ad3      	subs	r3, r2, r3
 8012a1a:	b2db      	uxtb	r3, r3
 8012a1c:	429e      	cmp	r6, r3
 8012a1e:	bf28      	it	cs
 8012a20:	461e      	movcs	r6, r3
 8012a22:	462b      	mov	r3, r5
 8012a24:	4622      	mov	r2, r4
 8012a26:	2100      	movs	r1, #0
 8012a28:	a805      	add	r0, sp, #20
 8012a2a:	f001 f8ed 	bl	8013c08 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8012a2e:	e7e2      	b.n	80129f6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4a>
 8012a30:	4630      	mov	r0, r6
 8012a32:	b01e      	add	sp, #120	; 0x78
 8012a34:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8012a38:	b003      	add	sp, #12
 8012a3a:	4770      	bx	lr

08012a3c <_ZNK8touchgfx8Drawable10invalidateEv>:
 8012a3c:	b513      	push	{r0, r1, r4, lr}
 8012a3e:	6803      	ldr	r3, [r0, #0]
 8012a40:	2400      	movs	r4, #0
 8012a42:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8012a46:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8012a4a:	f8ad 1004 	strh.w	r1, [sp, #4]
 8012a4e:	4669      	mov	r1, sp
 8012a50:	691b      	ldr	r3, [r3, #16]
 8012a52:	9400      	str	r4, [sp, #0]
 8012a54:	f8ad 2006 	strh.w	r2, [sp, #6]
 8012a58:	4798      	blx	r3
 8012a5a:	b002      	add	sp, #8
 8012a5c:	bd10      	pop	{r4, pc}

08012a5e <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8012a5e:	b538      	push	{r3, r4, r5, lr}
 8012a60:	680b      	ldr	r3, [r1, #0]
 8012a62:	460c      	mov	r4, r1
 8012a64:	4605      	mov	r5, r0
 8012a66:	68db      	ldr	r3, [r3, #12]
 8012a68:	4798      	blx	r3
 8012a6a:	6823      	ldr	r3, [r4, #0]
 8012a6c:	4620      	mov	r0, r4
 8012a6e:	4629      	mov	r1, r5
 8012a70:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012a72:	4798      	blx	r3
 8012a74:	4628      	mov	r0, r5
 8012a76:	bd38      	pop	{r3, r4, r5, pc}

08012a78 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8012a78:	b410      	push	{r4}
 8012a7a:	880a      	ldrh	r2, [r1, #0]
 8012a7c:	8884      	ldrh	r4, [r0, #4]
 8012a7e:	4422      	add	r2, r4
 8012a80:	800a      	strh	r2, [r1, #0]
 8012a82:	884a      	ldrh	r2, [r1, #2]
 8012a84:	88c4      	ldrh	r4, [r0, #6]
 8012a86:	4422      	add	r2, r4
 8012a88:	804a      	strh	r2, [r1, #2]
 8012a8a:	6940      	ldr	r0, [r0, #20]
 8012a8c:	b120      	cbz	r0, 8012a98 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8012a8e:	6803      	ldr	r3, [r0, #0]
 8012a90:	f85d 4b04 	ldr.w	r4, [sp], #4
 8012a94:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012a96:	4718      	bx	r3
 8012a98:	f85d 4b04 	ldr.w	r4, [sp], #4
 8012a9c:	4770      	bx	lr

08012a9e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8012a9e:	b570      	push	{r4, r5, r6, lr}
 8012aa0:	8882      	ldrh	r2, [r0, #4]
 8012aa2:	460c      	mov	r4, r1
 8012aa4:	880b      	ldrh	r3, [r1, #0]
 8012aa6:	4605      	mov	r5, r0
 8012aa8:	4413      	add	r3, r2
 8012aaa:	800b      	strh	r3, [r1, #0]
 8012aac:	884b      	ldrh	r3, [r1, #2]
 8012aae:	88c2      	ldrh	r2, [r0, #6]
 8012ab0:	4413      	add	r3, r2
 8012ab2:	804b      	strh	r3, [r1, #2]
 8012ab4:	1d01      	adds	r1, r0, #4
 8012ab6:	4620      	mov	r0, r4
 8012ab8:	f7f9 ff9c 	bl	800c9f4 <_ZN8touchgfx4RectaNERKS0_>
 8012abc:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8012ac0:	2b00      	cmp	r3, #0
 8012ac2:	dd0b      	ble.n	8012adc <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8012ac4:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8012ac8:	2b00      	cmp	r3, #0
 8012aca:	dd07      	ble.n	8012adc <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8012acc:	6968      	ldr	r0, [r5, #20]
 8012ace:	b128      	cbz	r0, 8012adc <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8012ad0:	6803      	ldr	r3, [r0, #0]
 8012ad2:	4621      	mov	r1, r4
 8012ad4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012ad6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012ada:	4718      	bx	r3
 8012adc:	bd70      	pop	{r4, r5, r6, pc}
	...

08012ae0 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8012ae0:	b570      	push	{r4, r5, r6, lr}
 8012ae2:	8882      	ldrh	r2, [r0, #4]
 8012ae4:	460c      	mov	r4, r1
 8012ae6:	880b      	ldrh	r3, [r1, #0]
 8012ae8:	4605      	mov	r5, r0
 8012aea:	4413      	add	r3, r2
 8012aec:	800b      	strh	r3, [r1, #0]
 8012aee:	884b      	ldrh	r3, [r1, #2]
 8012af0:	88c2      	ldrh	r2, [r0, #6]
 8012af2:	4413      	add	r3, r2
 8012af4:	804b      	strh	r3, [r1, #2]
 8012af6:	1d01      	adds	r1, r0, #4
 8012af8:	4620      	mov	r0, r4
 8012afa:	f7f9 ff7b 	bl	800c9f4 <_ZN8touchgfx4RectaNERKS0_>
 8012afe:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8012b02:	2b00      	cmp	r3, #0
 8012b04:	dd18      	ble.n	8012b38 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 8012b06:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8012b0a:	2b00      	cmp	r3, #0
 8012b0c:	dd14      	ble.n	8012b38 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 8012b0e:	6968      	ldr	r0, [r5, #20]
 8012b10:	b128      	cbz	r0, 8012b1e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8012b12:	6803      	ldr	r3, [r0, #0]
 8012b14:	4621      	mov	r1, r4
 8012b16:	691b      	ldr	r3, [r3, #16]
 8012b18:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012b1c:	4718      	bx	r3
 8012b1e:	4b07      	ldr	r3, [pc, #28]	; (8012b3c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8012b20:	681b      	ldr	r3, [r3, #0]
 8012b22:	3304      	adds	r3, #4
 8012b24:	429d      	cmp	r5, r3
 8012b26:	d107      	bne.n	8012b38 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 8012b28:	f7fe ff88 	bl	8011a3c <_ZN8touchgfx11Application11getInstanceEv>
 8012b2c:	6821      	ldr	r1, [r4, #0]
 8012b2e:	6862      	ldr	r2, [r4, #4]
 8012b30:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012b34:	f7ff b89c 	b.w	8011c70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8012b38:	bd70      	pop	{r4, r5, r6, pc}
 8012b3a:	bf00      	nop
 8012b3c:	2400e110 	.word	0x2400e110

08012b40 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8012b40:	b570      	push	{r4, r5, r6, lr}
 8012b42:	4604      	mov	r4, r0
 8012b44:	4616      	mov	r6, r2
 8012b46:	460d      	mov	r5, r1
 8012b48:	b901      	cbnz	r1, 8012b4c <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8012b4a:	b192      	cbz	r2, 8012b72 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8012b4c:	6823      	ldr	r3, [r4, #0]
 8012b4e:	4620      	mov	r0, r4
 8012b50:	699b      	ldr	r3, [r3, #24]
 8012b52:	4798      	blx	r3
 8012b54:	88e2      	ldrh	r2, [r4, #6]
 8012b56:	88a1      	ldrh	r1, [r4, #4]
 8012b58:	4620      	mov	r0, r4
 8012b5a:	4432      	add	r2, r6
 8012b5c:	4429      	add	r1, r5
 8012b5e:	b212      	sxth	r2, r2
 8012b60:	b209      	sxth	r1, r1
 8012b62:	f7ef fd79 	bl	8002658 <_ZN8touchgfx8Drawable5setXYEss>
 8012b66:	6823      	ldr	r3, [r4, #0]
 8012b68:	4620      	mov	r0, r4
 8012b6a:	699b      	ldr	r3, [r3, #24]
 8012b6c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012b70:	4718      	bx	r3
 8012b72:	bd70      	pop	{r4, r5, r6, pc}

08012b74 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8012b74:	b510      	push	{r4, lr}
 8012b76:	2300      	movs	r3, #0
 8012b78:	4604      	mov	r4, r0
 8012b7a:	4608      	mov	r0, r1
 8012b7c:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8012b80:	8023      	strh	r3, [r4, #0]
 8012b82:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8012b86:	8063      	strh	r3, [r4, #2]
 8012b88:	6803      	ldr	r3, [r0, #0]
 8012b8a:	80a1      	strh	r1, [r4, #4]
 8012b8c:	4621      	mov	r1, r4
 8012b8e:	80e2      	strh	r2, [r4, #6]
 8012b90:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012b92:	4798      	blx	r3
 8012b94:	4620      	mov	r0, r4
 8012b96:	bd10      	pop	{r4, pc}

08012b98 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 8012b98:	b530      	push	{r4, r5, lr}
 8012b9a:	8083      	strh	r3, [r0, #4]
 8012b9c:	f89d 300c 	ldrb.w	r3, [sp, #12]
 8012ba0:	f89d 5010 	ldrb.w	r5, [sp, #16]
 8012ba4:	7183      	strb	r3, [r0, #6]
 8012ba6:	79c3      	ldrb	r3, [r0, #7]
 8012ba8:	6101      	str	r1, [r0, #16]
 8012baa:	f365 0306 	bfi	r3, r5, #0, #7
 8012bae:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8012bb2:	8282      	strh	r2, [r0, #20]
 8012bb4:	f365 13c7 	bfi	r3, r5, #7, #1
 8012bb8:	71c3      	strb	r3, [r0, #7]
 8012bba:	f89d 3018 	ldrb.w	r3, [sp, #24]
 8012bbe:	7203      	strb	r3, [r0, #8]
 8012bc0:	f89d 301c 	ldrb.w	r3, [sp, #28]
 8012bc4:	7243      	strb	r3, [r0, #9]
 8012bc6:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8012bca:	8143      	strh	r3, [r0, #10]
 8012bcc:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 8012bd0:	8183      	strh	r3, [r0, #12]
 8012bd2:	4b01      	ldr	r3, [pc, #4]	; (8012bd8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 8012bd4:	6003      	str	r3, [r0, #0]
 8012bd6:	bd30      	pop	{r4, r5, pc}
 8012bd8:	080246b8 	.word	0x080246b8

08012bdc <_ZNK8touchgfx9ConstFont4findEt>:
 8012bdc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012bde:	6904      	ldr	r4, [r0, #16]
 8012be0:	b3bc      	cbz	r4, 8012c52 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012be2:	88a3      	ldrh	r3, [r4, #4]
 8012be4:	8a82      	ldrh	r2, [r0, #20]
 8012be6:	1acb      	subs	r3, r1, r3
 8012be8:	f102 32ff 	add.w	r2, r2, #4294967295
 8012bec:	d431      	bmi.n	8012c52 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012bee:	4293      	cmp	r3, r2
 8012bf0:	dd0c      	ble.n	8012c0c <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8012bf2:	230e      	movs	r3, #14
 8012bf4:	fb03 4302 	mla	r3, r3, r2, r4
 8012bf8:	889b      	ldrh	r3, [r3, #4]
 8012bfa:	1a5b      	subs	r3, r3, r1
 8012bfc:	1ad3      	subs	r3, r2, r3
 8012bfe:	429a      	cmp	r2, r3
 8012c00:	db27      	blt.n	8012c52 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012c02:	2b00      	cmp	r3, #0
 8012c04:	bfbc      	itt	lt
 8012c06:	2302      	movlt	r3, #2
 8012c08:	fb92 f3f3 	sdivlt	r3, r2, r3
 8012c0c:	2500      	movs	r5, #0
 8012c0e:	260e      	movs	r6, #14
 8012c10:	4295      	cmp	r5, r2
 8012c12:	dc1e      	bgt.n	8012c52 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012c14:	fb06 4003 	mla	r0, r6, r3, r4
 8012c18:	8887      	ldrh	r7, [r0, #4]
 8012c1a:	42b9      	cmp	r1, r7
 8012c1c:	d01a      	beq.n	8012c54 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8012c1e:	d20d      	bcs.n	8012c3c <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8012c20:	1e5a      	subs	r2, r3, #1
 8012c22:	4295      	cmp	r5, r2
 8012c24:	dc15      	bgt.n	8012c52 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012c26:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8012c2a:	1a5b      	subs	r3, r3, r1
 8012c2c:	1ad3      	subs	r3, r2, r3
 8012c2e:	429a      	cmp	r2, r3
 8012c30:	db0f      	blt.n	8012c52 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012c32:	429d      	cmp	r5, r3
 8012c34:	ddec      	ble.n	8012c10 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8012c36:	1953      	adds	r3, r2, r5
 8012c38:	105b      	asrs	r3, r3, #1
 8012c3a:	e7e9      	b.n	8012c10 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8012c3c:	1c5d      	adds	r5, r3, #1
 8012c3e:	42aa      	cmp	r2, r5
 8012c40:	db07      	blt.n	8012c52 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012c42:	8a43      	ldrh	r3, [r0, #18]
 8012c44:	1acb      	subs	r3, r1, r3
 8012c46:	442b      	add	r3, r5
 8012c48:	429d      	cmp	r5, r3
 8012c4a:	dc02      	bgt.n	8012c52 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012c4c:	429a      	cmp	r2, r3
 8012c4e:	dadf      	bge.n	8012c10 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8012c50:	e7f1      	b.n	8012c36 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8012c52:	2000      	movs	r0, #0
 8012c54:	bdf0      	pop	{r4, r5, r6, r7, pc}

08012c56 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8012c56:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012c58:	4604      	mov	r4, r0
 8012c5a:	4617      	mov	r7, r2
 8012c5c:	461e      	mov	r6, r3
 8012c5e:	b911      	cbnz	r1, 8012c66 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8012c60:	2500      	movs	r5, #0
 8012c62:	4628      	mov	r0, r5
 8012c64:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012c66:	290a      	cmp	r1, #10
 8012c68:	d0fa      	beq.n	8012c60 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8012c6a:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8012c6e:	4291      	cmp	r1, r2
 8012c70:	d0f6      	beq.n	8012c60 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8012c72:	f242 020b 	movw	r2, #8203	; 0x200b
 8012c76:	4291      	cmp	r1, r2
 8012c78:	d0f2      	beq.n	8012c60 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8012c7a:	f7ff ffaf 	bl	8012bdc <_ZNK8touchgfx9ConstFont4findEt>
 8012c7e:	4605      	mov	r5, r0
 8012c80:	b950      	cbnz	r0, 8012c98 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8012c82:	6823      	ldr	r3, [r4, #0]
 8012c84:	4620      	mov	r0, r4
 8012c86:	691b      	ldr	r3, [r3, #16]
 8012c88:	4798      	blx	r3
 8012c8a:	4601      	mov	r1, r0
 8012c8c:	4620      	mov	r0, r4
 8012c8e:	f7ff ffa5 	bl	8012bdc <_ZNK8touchgfx9ConstFont4findEt>
 8012c92:	4605      	mov	r5, r0
 8012c94:	2800      	cmp	r0, #0
 8012c96:	d0e3      	beq.n	8012c60 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8012c98:	6823      	ldr	r3, [r4, #0]
 8012c9a:	4629      	mov	r1, r5
 8012c9c:	4620      	mov	r0, r4
 8012c9e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8012ca0:	4798      	blx	r3
 8012ca2:	6038      	str	r0, [r7, #0]
 8012ca4:	6823      	ldr	r3, [r4, #0]
 8012ca6:	4620      	mov	r0, r4
 8012ca8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8012caa:	4798      	blx	r3
 8012cac:	7030      	strb	r0, [r6, #0]
 8012cae:	e7d8      	b.n	8012c62 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08012cb0 <_ZN8touchgfx6memsetEPvhm>:
 8012cb0:	4402      	add	r2, r0
 8012cb2:	4290      	cmp	r0, r2
 8012cb4:	d002      	beq.n	8012cbc <_ZN8touchgfx6memsetEPvhm+0xc>
 8012cb6:	f800 1b01 	strb.w	r1, [r0], #1
 8012cba:	e7fa      	b.n	8012cb2 <_ZN8touchgfx6memsetEPvhm+0x2>
 8012cbc:	4770      	bx	lr

08012cbe <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 8012cbe:	b538      	push	{r3, r4, r5, lr}
 8012cc0:	4605      	mov	r5, r0
 8012cc2:	f002 faab 	bl	801521c <_ZNK8touchgfx6Bitmap9getFormatEv>
 8012cc6:	4604      	mov	r4, r0
 8012cc8:	4628      	mov	r0, r5
 8012cca:	f002 f9e3 	bl	8015094 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8012cce:	2800      	cmp	r0, #0
 8012cd0:	bf14      	ite	ne
 8012cd2:	2002      	movne	r0, #2
 8012cd4:	2000      	moveq	r0, #0
 8012cd6:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8012cda:	b280      	uxth	r0, r0
 8012cdc:	bd38      	pop	{r3, r4, r5, pc}

08012cde <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 8012cde:	b538      	push	{r3, r4, r5, lr}
 8012ce0:	4605      	mov	r5, r0
 8012ce2:	f002 fa9b 	bl	801521c <_ZNK8touchgfx6Bitmap9getFormatEv>
 8012ce6:	4604      	mov	r4, r0
 8012ce8:	4628      	mov	r0, r5
 8012cea:	f002 f9d3 	bl	8015094 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8012cee:	2800      	cmp	r0, #0
 8012cf0:	bf14      	ite	ne
 8012cf2:	2002      	movne	r0, #2
 8012cf4:	2000      	moveq	r0, #0
 8012cf6:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8012cfa:	f040 0001 	orr.w	r0, r0, #1
 8012cfe:	b280      	uxth	r0, r0
 8012d00:	bd38      	pop	{r3, r4, r5, pc}

08012d02 <_ZN8touchgfx4clzuEm>:
 8012d02:	4603      	mov	r3, r0
 8012d04:	b1c8      	cbz	r0, 8012d3a <_ZN8touchgfx4clzuEm+0x38>
 8012d06:	0c02      	lsrs	r2, r0, #16
 8012d08:	0412      	lsls	r2, r2, #16
 8012d0a:	b9a2      	cbnz	r2, 8012d36 <_ZN8touchgfx4clzuEm+0x34>
 8012d0c:	0403      	lsls	r3, r0, #16
 8012d0e:	2010      	movs	r0, #16
 8012d10:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8012d14:	bf04      	itt	eq
 8012d16:	021b      	lsleq	r3, r3, #8
 8012d18:	3008      	addeq	r0, #8
 8012d1a:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8012d1e:	bf04      	itt	eq
 8012d20:	011b      	lsleq	r3, r3, #4
 8012d22:	3004      	addeq	r0, #4
 8012d24:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8012d28:	bf04      	itt	eq
 8012d2a:	009b      	lsleq	r3, r3, #2
 8012d2c:	3002      	addeq	r0, #2
 8012d2e:	2b00      	cmp	r3, #0
 8012d30:	db04      	blt.n	8012d3c <_ZN8touchgfx4clzuEm+0x3a>
 8012d32:	3001      	adds	r0, #1
 8012d34:	4770      	bx	lr
 8012d36:	2000      	movs	r0, #0
 8012d38:	e7ea      	b.n	8012d10 <_ZN8touchgfx4clzuEm+0xe>
 8012d3a:	2020      	movs	r0, #32
 8012d3c:	4770      	bx	lr

08012d3e <_ZN8touchgfx7muldivuEmmmRm>:
 8012d3e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012d42:	4680      	mov	r8, r0
 8012d44:	460f      	mov	r7, r1
 8012d46:	4615      	mov	r5, r2
 8012d48:	461e      	mov	r6, r3
 8012d4a:	f7ff ffda 	bl	8012d02 <_ZN8touchgfx4clzuEm>
 8012d4e:	b998      	cbnz	r0, 8012d78 <_ZN8touchgfx7muldivuEmmmRm+0x3a>
 8012d50:	4608      	mov	r0, r1
 8012d52:	f7ff ffd6 	bl	8012d02 <_ZN8touchgfx4clzuEm>
 8012d56:	2800      	cmp	r0, #0
 8012d58:	dd08      	ble.n	8012d6c <_ZN8touchgfx7muldivuEmmmRm+0x2e>
 8012d5a:	4633      	mov	r3, r6
 8012d5c:	462a      	mov	r2, r5
 8012d5e:	4641      	mov	r1, r8
 8012d60:	4638      	mov	r0, r7
 8012d62:	f7ff ffec 	bl	8012d3e <_ZN8touchgfx7muldivuEmmmRm>
 8012d66:	b003      	add	sp, #12
 8012d68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012d6c:	f04f 33ff 	mov.w	r3, #4294967295
 8012d70:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8012d74:	6033      	str	r3, [r6, #0]
 8012d76:	e7f6      	b.n	8012d66 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 8012d78:	fa31 f900 	lsrs.w	r9, r1, r0
 8012d7c:	fb01 f308 	mul.w	r3, r1, r8
 8012d80:	d105      	bne.n	8012d8e <_ZN8touchgfx7muldivuEmmmRm+0x50>
 8012d82:	fbb3 f0f5 	udiv	r0, r3, r5
 8012d86:	fb05 3510 	mls	r5, r5, r0, r3
 8012d8a:	6035      	str	r5, [r6, #0]
 8012d8c:	e7eb      	b.n	8012d66 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 8012d8e:	2301      	movs	r3, #1
 8012d90:	fa08 fb00 	lsl.w	fp, r8, r0
 8012d94:	462a      	mov	r2, r5
 8012d96:	4641      	mov	r1, r8
 8012d98:	fa03 f000 	lsl.w	r0, r3, r0
 8012d9c:	4633      	mov	r3, r6
 8012d9e:	fbbb faf5 	udiv	sl, fp, r5
 8012da2:	3801      	subs	r0, #1
 8012da4:	fb09 f40a 	mul.w	r4, r9, sl
 8012da8:	4038      	ands	r0, r7
 8012daa:	f7ff ffc8 	bl	8012d3e <_ZN8touchgfx7muldivuEmmmRm>
 8012dae:	462a      	mov	r2, r5
 8012db0:	4607      	mov	r7, r0
 8012db2:	ab01      	add	r3, sp, #4
 8012db4:	fb05 b11a 	mls	r1, r5, sl, fp
 8012db8:	4648      	mov	r0, r9
 8012dba:	f7ff ffc0 	bl	8012d3e <_ZN8touchgfx7muldivuEmmmRm>
 8012dbe:	9b01      	ldr	r3, [sp, #4]
 8012dc0:	6832      	ldr	r2, [r6, #0]
 8012dc2:	441a      	add	r2, r3
 8012dc4:	fbb2 f3f5 	udiv	r3, r2, r5
 8012dc8:	441c      	add	r4, r3
 8012dca:	fb05 2513 	mls	r5, r5, r3, r2
 8012dce:	443c      	add	r4, r7
 8012dd0:	4420      	add	r0, r4
 8012dd2:	e7da      	b.n	8012d8a <_ZN8touchgfx7muldivuEmmmRm+0x4c>

08012dd4 <_ZN8touchgfx6muldivElllRl>:
 8012dd4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012dd6:	2800      	cmp	r0, #0
 8012dd8:	461e      	mov	r6, r3
 8012dda:	bfba      	itte	lt
 8012ddc:	4240      	neglt	r0, r0
 8012dde:	f04f 34ff 	movlt.w	r4, #4294967295
 8012de2:	2401      	movge	r4, #1
 8012de4:	2900      	cmp	r1, #0
 8012de6:	bfbc      	itt	lt
 8012de8:	4249      	neglt	r1, r1
 8012dea:	4264      	neglt	r4, r4
 8012dec:	2a00      	cmp	r2, #0
 8012dee:	bfb6      	itet	lt
 8012df0:	4265      	neglt	r5, r4
 8012df2:	4625      	movge	r5, r4
 8012df4:	4252      	neglt	r2, r2
 8012df6:	4288      	cmp	r0, r1
 8012df8:	bfc2      	ittt	gt
 8012dfa:	4603      	movgt	r3, r0
 8012dfc:	4608      	movgt	r0, r1
 8012dfe:	4619      	movgt	r1, r3
 8012e00:	ab01      	add	r3, sp, #4
 8012e02:	f7ff ff9c 	bl	8012d3e <_ZN8touchgfx7muldivuEmmmRm>
 8012e06:	9b01      	ldr	r3, [sp, #4]
 8012e08:	4368      	muls	r0, r5
 8012e0a:	435c      	muls	r4, r3
 8012e0c:	6034      	str	r4, [r6, #0]
 8012e0e:	b002      	add	sp, #8
 8012e10:	bd70      	pop	{r4, r5, r6, pc}

08012e12 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 8012e12:	2000      	movs	r0, #0
 8012e14:	4770      	bx	lr

08012e16 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8012e16:	2001      	movs	r0, #1
 8012e18:	4770      	bx	lr

08012e1a <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8012e1a:	2002      	movs	r0, #2
 8012e1c:	4770      	bx	lr

08012e1e <_ZN8touchgfx6ScreenD1Ev>:
 8012e1e:	4770      	bx	lr

08012e20 <_ZN8touchgfx12GestureEventD1Ev>:
 8012e20:	4770      	bx	lr

08012e22 <_ZN8touchgfx9DragEventD1Ev>:
 8012e22:	4770      	bx	lr

08012e24 <_ZN8touchgfx10ClickEventD1Ev>:
 8012e24:	4770      	bx	lr

08012e26 <_ZN8touchgfx10ClickEventD0Ev>:
 8012e26:	b510      	push	{r4, lr}
 8012e28:	4604      	mov	r4, r0
 8012e2a:	210c      	movs	r1, #12
 8012e2c:	f00c fedf 	bl	801fbee <_ZdlPvj>
 8012e30:	4620      	mov	r0, r4
 8012e32:	bd10      	pop	{r4, pc}

08012e34 <_ZN8touchgfx9DragEventD0Ev>:
 8012e34:	b510      	push	{r4, lr}
 8012e36:	4604      	mov	r4, r0
 8012e38:	2110      	movs	r1, #16
 8012e3a:	f00c fed8 	bl	801fbee <_ZdlPvj>
 8012e3e:	4620      	mov	r0, r4
 8012e40:	bd10      	pop	{r4, pc}

08012e42 <_ZN8touchgfx12GestureEventD0Ev>:
 8012e42:	b510      	push	{r4, lr}
 8012e44:	4604      	mov	r4, r0
 8012e46:	210c      	movs	r1, #12
 8012e48:	f00c fed1 	bl	801fbee <_ZdlPvj>
 8012e4c:	4620      	mov	r0, r4
 8012e4e:	bd10      	pop	{r4, pc}

08012e50 <_ZN8touchgfx6ScreenD0Ev>:
 8012e50:	b510      	push	{r4, lr}
 8012e52:	4604      	mov	r4, r0
 8012e54:	213c      	movs	r1, #60	; 0x3c
 8012e56:	f00c feca 	bl	801fbee <_ZdlPvj>
 8012e5a:	4620      	mov	r0, r4
 8012e5c:	bd10      	pop	{r4, pc}
	...

08012e60 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8012e60:	b530      	push	{r4, r5, lr}
 8012e62:	460d      	mov	r5, r1
 8012e64:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8012e66:	b087      	sub	sp, #28
 8012e68:	4604      	mov	r4, r0
 8012e6a:	b301      	cbz	r1, 8012eae <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8012e6c:	a801      	add	r0, sp, #4
 8012e6e:	f7ff fe81 	bl	8012b74 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012e72:	892a      	ldrh	r2, [r5, #8]
 8012e74:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8012e78:	7928      	ldrb	r0, [r5, #4]
 8012e7a:	1ad2      	subs	r2, r2, r3
 8012e7c:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8012e7e:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8012e82:	441a      	add	r2, r3
 8012e84:	896b      	ldrh	r3, [r5, #10]
 8012e86:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8012e8a:	f88d 0010 	strb.w	r0, [sp, #16]
 8012e8e:	1b5b      	subs	r3, r3, r5
 8012e90:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8012e92:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8012e94:	442b      	add	r3, r5
 8012e96:	4d07      	ldr	r5, [pc, #28]	; (8012eb4 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8012e98:	f8ad 1012 	strh.w	r1, [sp, #18]
 8012e9c:	a903      	add	r1, sp, #12
 8012e9e:	9503      	str	r5, [sp, #12]
 8012ea0:	f8ad 2014 	strh.w	r2, [sp, #20]
 8012ea4:	f8ad 3016 	strh.w	r3, [sp, #22]
 8012ea8:	6803      	ldr	r3, [r0, #0]
 8012eaa:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8012eac:	4798      	blx	r3
 8012eae:	b007      	add	sp, #28
 8012eb0:	bd30      	pop	{r4, r5, pc}
 8012eb2:	bf00      	nop
 8012eb4:	08024738 	.word	0x08024738

08012eb8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8012eb8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012ebc:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8012ebe:	b08a      	sub	sp, #40	; 0x28
 8012ec0:	4604      	mov	r4, r0
 8012ec2:	460d      	mov	r5, r1
 8012ec4:	b113      	cbz	r3, 8012ecc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8012ec6:	790b      	ldrb	r3, [r1, #4]
 8012ec8:	2b00      	cmp	r3, #0
 8012eca:	d044      	beq.n	8012f56 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8012ecc:	f104 0804 	add.w	r8, r4, #4
 8012ed0:	a803      	add	r0, sp, #12
 8012ed2:	4641      	mov	r1, r8
 8012ed4:	f7ff fe4e 	bl	8012b74 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012ed8:	792b      	ldrb	r3, [r5, #4]
 8012eda:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8012ede:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8012ee2:	b983      	cbnz	r3, 8012f06 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8012ee4:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8012ee8:	892a      	ldrh	r2, [r5, #8]
 8012eea:	88e9      	ldrh	r1, [r5, #6]
 8012eec:	4640      	mov	r0, r8
 8012eee:	1b92      	subs	r2, r2, r6
 8012ef0:	9301      	str	r3, [sp, #4]
 8012ef2:	1bc9      	subs	r1, r1, r7
 8012ef4:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8012ef8:	b212      	sxth	r2, r2
 8012efa:	9300      	str	r3, [sp, #0]
 8012efc:	b209      	sxth	r1, r1
 8012efe:	f104 0330 	add.w	r3, r4, #48	; 0x30
 8012f02:	f7f9 fc95 	bl	800c830 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8012f06:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8012f08:	b329      	cbz	r1, 8012f56 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8012f0a:	a805      	add	r0, sp, #20
 8012f0c:	f7ff fe32 	bl	8012b74 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012f10:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8012f14:	792b      	ldrb	r3, [r5, #4]
 8012f16:	a907      	add	r1, sp, #28
 8012f18:	1abf      	subs	r7, r7, r2
 8012f1a:	88ea      	ldrh	r2, [r5, #6]
 8012f1c:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8012f1e:	4417      	add	r7, r2
 8012f20:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8012f22:	f88d 3020 	strb.w	r3, [sp, #32]
 8012f26:	4417      	add	r7, r2
 8012f28:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8012f2c:	1ab6      	subs	r6, r6, r2
 8012f2e:	892a      	ldrh	r2, [r5, #8]
 8012f30:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 8012f34:	4416      	add	r6, r2
 8012f36:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8012f38:	4416      	add	r6, r2
 8012f3a:	4a08      	ldr	r2, [pc, #32]	; (8012f5c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 8012f3c:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8012f40:	2600      	movs	r6, #0
 8012f42:	9207      	str	r2, [sp, #28]
 8012f44:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 8012f48:	6803      	ldr	r3, [r0, #0]
 8012f4a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012f4c:	4798      	blx	r3
 8012f4e:	792b      	ldrb	r3, [r5, #4]
 8012f50:	b10b      	cbz	r3, 8012f56 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8012f52:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8012f56:	b00a      	add	sp, #40	; 0x28
 8012f58:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012f5c:	08024710 	.word	0x08024710

08012f60 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8012f60:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012f64:	460c      	mov	r4, r1
 8012f66:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8012f68:	b088      	sub	sp, #32
 8012f6a:	4605      	mov	r5, r0
 8012f6c:	2900      	cmp	r1, #0
 8012f6e:	d06d      	beq.n	801304c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8012f70:	4668      	mov	r0, sp
 8012f72:	f7ff fdff 	bl	8012b74 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012f76:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8012f78:	88e3      	ldrh	r3, [r4, #6]
 8012f7a:	f9bd 8000 	ldrsh.w	r8, [sp]
 8012f7e:	440b      	add	r3, r1
 8012f80:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8012f84:	b21b      	sxth	r3, r3
 8012f86:	4543      	cmp	r3, r8
 8012f88:	db31      	blt.n	8012fee <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012f8a:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8012f8e:	44c4      	add	ip, r8
 8012f90:	fa0f fc8c 	sxth.w	ip, ip
 8012f94:	4563      	cmp	r3, ip
 8012f96:	da2a      	bge.n	8012fee <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012f98:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 8012f9a:	8926      	ldrh	r6, [r4, #8]
 8012f9c:	4416      	add	r6, r2
 8012f9e:	b236      	sxth	r6, r6
 8012fa0:	42be      	cmp	r6, r7
 8012fa2:	db24      	blt.n	8012fee <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012fa4:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8012fa8:	4438      	add	r0, r7
 8012faa:	b200      	sxth	r0, r0
 8012fac:	4286      	cmp	r6, r0
 8012fae:	da1e      	bge.n	8012fee <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012fb0:	8963      	ldrh	r3, [r4, #10]
 8012fb2:	4419      	add	r1, r3
 8012fb4:	b209      	sxth	r1, r1
 8012fb6:	4541      	cmp	r1, r8
 8012fb8:	db08      	blt.n	8012fcc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8012fba:	4561      	cmp	r1, ip
 8012fbc:	da06      	bge.n	8012fcc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8012fbe:	89a3      	ldrh	r3, [r4, #12]
 8012fc0:	441a      	add	r2, r3
 8012fc2:	b212      	sxth	r2, r2
 8012fc4:	42ba      	cmp	r2, r7
 8012fc6:	db01      	blt.n	8012fcc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8012fc8:	4282      	cmp	r2, r0
 8012fca:	db10      	blt.n	8012fee <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012fcc:	4b21      	ldr	r3, [pc, #132]	; (8013054 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8012fce:	a904      	add	r1, sp, #16
 8012fd0:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8012fd2:	9304      	str	r3, [sp, #16]
 8012fd4:	2302      	movs	r3, #2
 8012fd6:	f88d 3014 	strb.w	r3, [sp, #20]
 8012fda:	2300      	movs	r3, #0
 8012fdc:	f8ad 3016 	strh.w	r3, [sp, #22]
 8012fe0:	f8ad 3018 	strh.w	r3, [sp, #24]
 8012fe4:	f8ad 301a 	strh.w	r3, [sp, #26]
 8012fe8:	6803      	ldr	r3, [r0, #0]
 8012fea:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012fec:	4798      	blx	r3
 8012fee:	1d29      	adds	r1, r5, #4
 8012ff0:	a802      	add	r0, sp, #8
 8012ff2:	f7ff fdbf 	bl	8012b74 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012ff6:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8012ffa:	88e0      	ldrh	r0, [r4, #6]
 8012ffc:	eba3 0808 	sub.w	r8, r3, r8
 8013000:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8013004:	7921      	ldrb	r1, [r4, #4]
 8013006:	fa1f f888 	uxth.w	r8, r8
 801300a:	1bdf      	subs	r7, r3, r7
 801300c:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 8013010:	b2bb      	uxth	r3, r7
 8013012:	4440      	add	r0, r8
 8013014:	8922      	ldrh	r2, [r4, #8]
 8013016:	8967      	ldrh	r7, [r4, #10]
 8013018:	4460      	add	r0, ip
 801301a:	89a4      	ldrh	r4, [r4, #12]
 801301c:	441a      	add	r2, r3
 801301e:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 8013020:	44b8      	add	r8, r7
 8013022:	4423      	add	r3, r4
 8013024:	f8ad 0016 	strh.w	r0, [sp, #22]
 8013028:	4432      	add	r2, r6
 801302a:	44e0      	add	r8, ip
 801302c:	4433      	add	r3, r6
 801302e:	4c0a      	ldr	r4, [pc, #40]	; (8013058 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8013030:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8013032:	f88d 1014 	strb.w	r1, [sp, #20]
 8013036:	a904      	add	r1, sp, #16
 8013038:	9404      	str	r4, [sp, #16]
 801303a:	f8ad 2018 	strh.w	r2, [sp, #24]
 801303e:	f8ad 801a 	strh.w	r8, [sp, #26]
 8013042:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013046:	6803      	ldr	r3, [r0, #0]
 8013048:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801304a:	4798      	blx	r3
 801304c:	b008      	add	sp, #32
 801304e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013052:	bf00      	nop
 8013054:	08024710 	.word	0x08024710
 8013058:	08024724 	.word	0x08024724

0801305c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 801305c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801305e:	4604      	mov	r4, r0
 8013060:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8013064:	3201      	adds	r2, #1
 8013066:	d112      	bne.n	801308e <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8013068:	2500      	movs	r5, #0
 801306a:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801306e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8013072:	6803      	ldr	r3, [r0, #0]
 8013074:	9500      	str	r5, [sp, #0]
 8013076:	466d      	mov	r5, sp
 8013078:	f8ad 1004 	strh.w	r1, [sp, #4]
 801307c:	f8ad 2006 	strh.w	r2, [sp, #6]
 8013080:	4629      	mov	r1, r5
 8013082:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013084:	4798      	blx	r3
 8013086:	e895 0003 	ldmia.w	r5, {r0, r1}
 801308a:	e884 0003 	stmia.w	r4, {r0, r1}
 801308e:	4620      	mov	r0, r4
 8013090:	b003      	add	sp, #12
 8013092:	bd30      	pop	{r4, r5, pc}

08013094 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8013094:	b513      	push	{r0, r1, r4, lr}
 8013096:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 801309a:	4604      	mov	r4, r0
 801309c:	3301      	adds	r3, #1
 801309e:	d109      	bne.n	80130b4 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 80130a0:	4601      	mov	r1, r0
 80130a2:	4668      	mov	r0, sp
 80130a4:	f7ff fd66 	bl	8012b74 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80130a8:	f8bd 3000 	ldrh.w	r3, [sp]
 80130ac:	8423      	strh	r3, [r4, #32]
 80130ae:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80130b2:	8463      	strh	r3, [r4, #34]	; 0x22
 80130b4:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 80130b8:	b002      	add	sp, #8
 80130ba:	bd10      	pop	{r4, pc}

080130bc <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 80130bc:	b513      	push	{r0, r1, r4, lr}
 80130be:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 80130c2:	4604      	mov	r4, r0
 80130c4:	3301      	adds	r3, #1
 80130c6:	d109      	bne.n	80130dc <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 80130c8:	4601      	mov	r1, r0
 80130ca:	4668      	mov	r0, sp
 80130cc:	f7ff fd52 	bl	8012b74 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80130d0:	f8bd 3000 	ldrh.w	r3, [sp]
 80130d4:	8423      	strh	r3, [r4, #32]
 80130d6:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80130da:	8463      	strh	r3, [r4, #34]	; 0x22
 80130dc:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 80130e0:	b002      	add	sp, #8
 80130e2:	bd10      	pop	{r4, pc}

080130e4 <_ZN8touchgfx6ScreenC1Ev>:
 80130e4:	b570      	push	{r4, r5, r6, lr}
 80130e6:	4b17      	ldr	r3, [pc, #92]	; (8013144 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 80130e8:	4605      	mov	r5, r0
 80130ea:	4a17      	ldr	r2, [pc, #92]	; (8013148 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 80130ec:	2101      	movs	r1, #1
 80130ee:	f845 3b04 	str.w	r3, [r5], #4
 80130f2:	2300      	movs	r3, #0
 80130f4:	6042      	str	r2, [r0, #4]
 80130f6:	4604      	mov	r4, r0
 80130f8:	8103      	strh	r3, [r0, #8]
 80130fa:	8143      	strh	r3, [r0, #10]
 80130fc:	8183      	strh	r3, [r0, #12]
 80130fe:	81c3      	strh	r3, [r0, #14]
 8013100:	8203      	strh	r3, [r0, #16]
 8013102:	8243      	strh	r3, [r0, #18]
 8013104:	8283      	strh	r3, [r0, #20]
 8013106:	82c3      	strh	r3, [r0, #22]
 8013108:	6203      	str	r3, [r0, #32]
 801310a:	8483      	strh	r3, [r0, #36]	; 0x24
 801310c:	84c3      	strh	r3, [r0, #38]	; 0x26
 801310e:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8013112:	6343      	str	r3, [r0, #52]	; 0x34
 8013114:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8013118:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 801311c:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8013120:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 8013124:	4b09      	ldr	r3, [pc, #36]	; (801314c <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8013126:	4628      	mov	r0, r5
 8013128:	f9b3 6000 	ldrsh.w	r6, [r3]
 801312c:	6b93      	ldr	r3, [r2, #56]	; 0x38
 801312e:	4a08      	ldr	r2, [pc, #32]	; (8013150 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8013130:	f9b2 1000 	ldrsh.w	r1, [r2]
 8013134:	4798      	blx	r3
 8013136:	6863      	ldr	r3, [r4, #4]
 8013138:	4628      	mov	r0, r5
 801313a:	4631      	mov	r1, r6
 801313c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801313e:	4798      	blx	r3
 8013140:	4620      	mov	r0, r4
 8013142:	bd70      	pop	{r4, r5, r6, pc}
 8013144:	0802474c 	.word	0x0802474c
 8013148:	080231c8 	.word	0x080231c8
 801314c:	2400e0aa 	.word	0x2400e0aa
 8013150:	2400e0a8 	.word	0x2400e0a8

08013154 <_ZN8touchgfx6Screen4drawEv>:
 8013154:	4b09      	ldr	r3, [pc, #36]	; (801317c <_ZN8touchgfx6Screen4drawEv+0x28>)
 8013156:	b507      	push	{r0, r1, r2, lr}
 8013158:	f9b3 2000 	ldrsh.w	r2, [r3]
 801315c:	2100      	movs	r1, #0
 801315e:	4b08      	ldr	r3, [pc, #32]	; (8013180 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8013160:	9100      	str	r1, [sp, #0]
 8013162:	4669      	mov	r1, sp
 8013164:	f9b3 3000 	ldrsh.w	r3, [r3]
 8013168:	f8ad 2004 	strh.w	r2, [sp, #4]
 801316c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8013170:	6803      	ldr	r3, [r0, #0]
 8013172:	689b      	ldr	r3, [r3, #8]
 8013174:	4798      	blx	r3
 8013176:	b003      	add	sp, #12
 8013178:	f85d fb04 	ldr.w	pc, [sp], #4
 801317c:	2400e0a8 	.word	0x2400e0a8
 8013180:	2400e0aa 	.word	0x2400e0aa

08013184 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8013184:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013188:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 801318c:	b089      	sub	sp, #36	; 0x24
 801318e:	4680      	mov	r8, r0
 8013190:	460c      	mov	r4, r1
 8013192:	2b00      	cmp	r3, #0
 8013194:	4615      	mov	r5, r2
 8013196:	dd0e      	ble.n	80131b6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8013198:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 801319c:	2b00      	cmp	r3, #0
 801319e:	dd0a      	ble.n	80131b6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80131a0:	4628      	mov	r0, r5
 80131a2:	f7ff ff5b 	bl	801305c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80131a6:	4621      	mov	r1, r4
 80131a8:	f7fb fce2 	bl	800eb70 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80131ac:	69eb      	ldr	r3, [r5, #28]
 80131ae:	b928      	cbnz	r0, 80131bc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 80131b0:	461d      	mov	r5, r3
 80131b2:	2b00      	cmp	r3, #0
 80131b4:	d1f4      	bne.n	80131a0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 80131b6:	b009      	add	sp, #36	; 0x24
 80131b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80131bc:	ae04      	add	r6, sp, #16
 80131be:	2b00      	cmp	r3, #0
 80131c0:	f000 80b5 	beq.w	801332e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80131c4:	682b      	ldr	r3, [r5, #0]
 80131c6:	4629      	mov	r1, r5
 80131c8:	a802      	add	r0, sp, #8
 80131ca:	68db      	ldr	r3, [r3, #12]
 80131cc:	4798      	blx	r3
 80131ce:	4628      	mov	r0, r5
 80131d0:	f7ff ff60 	bl	8013094 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 80131d4:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 80131d8:	4407      	add	r7, r0
 80131da:	4628      	mov	r0, r5
 80131dc:	f7ff ff6e 	bl	80130bc <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 80131e0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80131e4:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 80131e8:	b23f      	sxth	r7, r7
 80131ea:	4418      	add	r0, r3
 80131ec:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80131f0:	4621      	mov	r1, r4
 80131f2:	f8ad 2014 	strh.w	r2, [sp, #20]
 80131f6:	f8ad 0012 	strh.w	r0, [sp, #18]
 80131fa:	4630      	mov	r0, r6
 80131fc:	f8ad 3016 	strh.w	r3, [sp, #22]
 8013200:	f8ad 7010 	strh.w	r7, [sp, #16]
 8013204:	f7f9 fbf6 	bl	800c9f4 <_ZN8touchgfx4RectaNERKS0_>
 8013208:	4628      	mov	r0, r5
 801320a:	f7ff ff27 	bl	801305c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801320e:	ab06      	add	r3, sp, #24
 8013210:	4602      	mov	r2, r0
 8013212:	e896 0003 	ldmia.w	r6, {r0, r1}
 8013216:	e883 0003 	stmia.w	r3, {r0, r1}
 801321a:	4611      	mov	r1, r2
 801321c:	4618      	mov	r0, r3
 801321e:	f7f9 fbe9 	bl	800c9f4 <_ZN8touchgfx4RectaNERKS0_>
 8013222:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8013226:	f9b4 1000 	ldrsh.w	r1, [r4]
 801322a:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 801322e:	4299      	cmp	r1, r3
 8013230:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8013234:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8013238:	d10b      	bne.n	8013252 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801323a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801323e:	4552      	cmp	r2, sl
 8013240:	d107      	bne.n	8013252 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8013242:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8013246:	455a      	cmp	r2, fp
 8013248:	d103      	bne.n	8013252 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801324a:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801324e:	454a      	cmp	r2, r9
 8013250:	d06d      	beq.n	801332e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8013252:	f1bb 0f00 	cmp.w	fp, #0
 8013256:	dd65      	ble.n	8013324 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8013258:	f1b9 0f00 	cmp.w	r9, #0
 801325c:	dd62      	ble.n	8013324 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801325e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8013262:	fa1f f08a 	uxth.w	r0, sl
 8013266:	4552      	cmp	r2, sl
 8013268:	9000      	str	r0, [sp, #0]
 801326a:	da12      	bge.n	8013292 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 801326c:	9301      	str	r3, [sp, #4]
 801326e:	9b00      	ldr	r3, [sp, #0]
 8013270:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8013274:	f8ad 2012 	strh.w	r2, [sp, #18]
 8013278:	1a9a      	subs	r2, r3, r2
 801327a:	f8ad 1010 	strh.w	r1, [sp, #16]
 801327e:	4631      	mov	r1, r6
 8013280:	f8ad 0014 	strh.w	r0, [sp, #20]
 8013284:	4640      	mov	r0, r8
 8013286:	f8ad 2016 	strh.w	r2, [sp, #22]
 801328a:	69ea      	ldr	r2, [r5, #28]
 801328c:	f7ff ff7a 	bl	8013184 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8013290:	9b01      	ldr	r3, [sp, #4]
 8013292:	f9b4 2000 	ldrsh.w	r2, [r4]
 8013296:	b29f      	uxth	r7, r3
 8013298:	429a      	cmp	r2, r3
 801329a:	da0d      	bge.n	80132b8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 801329c:	f8ad 2010 	strh.w	r2, [sp, #16]
 80132a0:	1aba      	subs	r2, r7, r2
 80132a2:	f8ad a012 	strh.w	sl, [sp, #18]
 80132a6:	4631      	mov	r1, r6
 80132a8:	f8ad 2014 	strh.w	r2, [sp, #20]
 80132ac:	4640      	mov	r0, r8
 80132ae:	f8ad 9016 	strh.w	r9, [sp, #22]
 80132b2:	69ea      	ldr	r2, [r5, #28]
 80132b4:	f7ff ff66 	bl	8013184 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80132b8:	8822      	ldrh	r2, [r4, #0]
 80132ba:	445f      	add	r7, fp
 80132bc:	88a3      	ldrh	r3, [r4, #4]
 80132be:	b2bf      	uxth	r7, r7
 80132c0:	4413      	add	r3, r2
 80132c2:	b23a      	sxth	r2, r7
 80132c4:	b29b      	uxth	r3, r3
 80132c6:	b219      	sxth	r1, r3
 80132c8:	4291      	cmp	r1, r2
 80132ca:	dd0d      	ble.n	80132e8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 80132cc:	1bdb      	subs	r3, r3, r7
 80132ce:	f8ad 2010 	strh.w	r2, [sp, #16]
 80132d2:	f8ad a012 	strh.w	sl, [sp, #18]
 80132d6:	4631      	mov	r1, r6
 80132d8:	f8ad 3014 	strh.w	r3, [sp, #20]
 80132dc:	4640      	mov	r0, r8
 80132de:	f8ad 9016 	strh.w	r9, [sp, #22]
 80132e2:	69ea      	ldr	r2, [r5, #28]
 80132e4:	f7ff ff4e 	bl	8013184 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80132e8:	88e2      	ldrh	r2, [r4, #6]
 80132ea:	8863      	ldrh	r3, [r4, #2]
 80132ec:	4413      	add	r3, r2
 80132ee:	9a00      	ldr	r2, [sp, #0]
 80132f0:	444a      	add	r2, r9
 80132f2:	b29b      	uxth	r3, r3
 80132f4:	fa1f f982 	uxth.w	r9, r2
 80132f8:	b219      	sxth	r1, r3
 80132fa:	fa0f f289 	sxth.w	r2, r9
 80132fe:	428a      	cmp	r2, r1
 8013300:	da15      	bge.n	801332e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8013302:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8013306:	eba3 0309 	sub.w	r3, r3, r9
 801330a:	f9b4 0000 	ldrsh.w	r0, [r4]
 801330e:	f8ad 1014 	strh.w	r1, [sp, #20]
 8013312:	4631      	mov	r1, r6
 8013314:	f8ad 0010 	strh.w	r0, [sp, #16]
 8013318:	f8ad 2012 	strh.w	r2, [sp, #18]
 801331c:	f8ad 3016 	strh.w	r3, [sp, #22]
 8013320:	69ea      	ldr	r2, [r5, #28]
 8013322:	e001      	b.n	8013328 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8013324:	69ea      	ldr	r2, [r5, #28]
 8013326:	4621      	mov	r1, r4
 8013328:	4640      	mov	r0, r8
 801332a:	f7ff ff2b 	bl	8013184 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801332e:	4628      	mov	r0, r5
 8013330:	f7ff fe94 	bl	801305c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8013334:	6861      	ldr	r1, [r4, #4]
 8013336:	4602      	mov	r2, r0
 8013338:	4633      	mov	r3, r6
 801333a:	6820      	ldr	r0, [r4, #0]
 801333c:	c303      	stmia	r3!, {r0, r1}
 801333e:	4611      	mov	r1, r2
 8013340:	4630      	mov	r0, r6
 8013342:	f7f9 fb57 	bl	800c9f4 <_ZN8touchgfx4RectaNERKS0_>
 8013346:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 801334a:	2b00      	cmp	r3, #0
 801334c:	f77f af33 	ble.w	80131b6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8013350:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8013354:	2b00      	cmp	r3, #0
 8013356:	f77f af2e 	ble.w	80131b6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801335a:	4628      	mov	r0, r5
 801335c:	f7ff fe9a 	bl	8013094 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8013360:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8013364:	1a18      	subs	r0, r3, r0
 8013366:	f8ad 0010 	strh.w	r0, [sp, #16]
 801336a:	4628      	mov	r0, r5
 801336c:	f7ff fea6 	bl	80130bc <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8013370:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8013374:	4631      	mov	r1, r6
 8013376:	1a18      	subs	r0, r3, r0
 8013378:	f8ad 0012 	strh.w	r0, [sp, #18]
 801337c:	4628      	mov	r0, r5
 801337e:	682b      	ldr	r3, [r5, #0]
 8013380:	689b      	ldr	r3, [r3, #8]
 8013382:	4798      	blx	r3
 8013384:	e717      	b.n	80131b6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08013386 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8013386:	b570      	push	{r4, r5, r6, lr}
 8013388:	1d06      	adds	r6, r0, #4
 801338a:	b086      	sub	sp, #24
 801338c:	460c      	mov	r4, r1
 801338e:	2300      	movs	r3, #0
 8013390:	4631      	mov	r1, r6
 8013392:	4605      	mov	r5, r0
 8013394:	a802      	add	r0, sp, #8
 8013396:	9301      	str	r3, [sp, #4]
 8013398:	f7ff fbec 	bl	8012b74 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801339c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80133a0:	8822      	ldrh	r2, [r4, #0]
 80133a2:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 80133a6:	1ad2      	subs	r2, r2, r3
 80133a8:	8863      	ldrh	r3, [r4, #2]
 80133aa:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80133ae:	1a5b      	subs	r3, r3, r1
 80133b0:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 80133b4:	f8ad 2010 	strh.w	r2, [sp, #16]
 80133b8:	aa01      	add	r2, sp, #4
 80133ba:	f8ad 0014 	strh.w	r0, [sp, #20]
 80133be:	4630      	mov	r0, r6
 80133c0:	f8ad 1016 	strh.w	r1, [sp, #22]
 80133c4:	a904      	add	r1, sp, #16
 80133c6:	f8ad 3012 	strh.w	r3, [sp, #18]
 80133ca:	f7f9 fbeb 	bl	800cba4 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 80133ce:	9a01      	ldr	r2, [sp, #4]
 80133d0:	b11a      	cbz	r2, 80133da <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 80133d2:	4621      	mov	r1, r4
 80133d4:	4628      	mov	r0, r5
 80133d6:	f7ff fed5 	bl	8013184 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80133da:	b006      	add	sp, #24
 80133dc:	bd70      	pop	{r4, r5, r6, pc}

080133de <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 80133de:	4602      	mov	r2, r0
 80133e0:	b530      	push	{r4, r5, lr}
 80133e2:	4604      	mov	r4, r0
 80133e4:	b085      	sub	sp, #20
 80133e6:	f852 0f08 	ldr.w	r0, [r2, #8]!
 80133ea:	460d      	mov	r5, r1
 80133ec:	466b      	mov	r3, sp
 80133ee:	6851      	ldr	r1, [r2, #4]
 80133f0:	c303      	stmia	r3!, {r0, r1}
 80133f2:	4629      	mov	r1, r5
 80133f4:	4668      	mov	r0, sp
 80133f6:	f7f9 fafd 	bl	800c9f4 <_ZN8touchgfx4RectaNERKS0_>
 80133fa:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80133fe:	b12b      	cbz	r3, 801340c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8013400:	4669      	mov	r1, sp
 8013402:	4620      	mov	r0, r4
 8013404:	f7ff ffbf 	bl	8013386 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8013408:	b005      	add	sp, #20
 801340a:	bd30      	pop	{r4, r5, pc}
 801340c:	3404      	adds	r4, #4
 801340e:	a802      	add	r0, sp, #8
 8013410:	4621      	mov	r1, r4
 8013412:	f7ff fbaf 	bl	8012b74 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013416:	f8bd 3000 	ldrh.w	r3, [sp]
 801341a:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 801341e:	4669      	mov	r1, sp
 8013420:	4620      	mov	r0, r4
 8013422:	1a9b      	subs	r3, r3, r2
 8013424:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8013428:	f8ad 3000 	strh.w	r3, [sp]
 801342c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8013430:	1a9b      	subs	r3, r3, r2
 8013432:	f8ad 3002 	strh.w	r3, [sp, #2]
 8013436:	f7f9 fb7c 	bl	800cb32 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 801343a:	e7e5      	b.n	8013408 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

0801343c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 801343c:	460b      	mov	r3, r1
 801343e:	680a      	ldr	r2, [r1, #0]
 8013440:	1d01      	adds	r1, r0, #4
 8013442:	6992      	ldr	r2, [r2, #24]
 8013444:	4618      	mov	r0, r3
 8013446:	4710      	bx	r2

08013448 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 8013448:	4298      	cmp	r0, r3
 801344a:	d200      	bcs.n	801344e <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 801344c:	b913      	cbnz	r3, 8013454 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 801344e:	440a      	add	r2, r1
 8013450:	b210      	sxth	r0, r2
 8013452:	4770      	bx	lr
 8013454:	ee07 0a90 	vmov	s15, r0
 8013458:	eef8 6a67 	vcvt.f32.u32	s13, s15
 801345c:	ee07 3a90 	vmov	s15, r3
 8013460:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013464:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8013468:	ee07 2a90 	vmov	s15, r2
 801346c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8013470:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8013474:	ee07 1a90 	vmov	s15, r1
 8013478:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801347c:	ee37 7a66 	vsub.f32	s14, s14, s13
 8013480:	ee67 5a07 	vmul.f32	s11, s14, s14
 8013484:	eee5 6a87 	vfma.f32	s13, s11, s14
 8013488:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 801348c:	eee6 7a26 	vfma.f32	s15, s12, s13
 8013490:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8013494:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013498:	bfcc      	ite	gt
 801349a:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 801349e:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 80134a2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80134a6:	ee17 3a90 	vmov	r3, s15
 80134aa:	b218      	sxth	r0, r3
 80134ac:	4770      	bx	lr

080134ae <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 80134ae:	4298      	cmp	r0, r3
 80134b0:	d200      	bcs.n	80134b4 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 80134b2:	b913      	cbnz	r3, 80134ba <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 80134b4:	440a      	add	r2, r1
 80134b6:	b210      	sxth	r0, r2
 80134b8:	4770      	bx	lr
 80134ba:	ee07 2a90 	vmov	s15, r2
 80134be:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80134c2:	ee07 0a90 	vmov	s15, r0
 80134c6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80134ca:	ee67 7a27 	vmul.f32	s15, s14, s15
 80134ce:	ee07 3a10 	vmov	s14, r3
 80134d2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80134d6:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80134da:	ee07 1a90 	vmov	s15, r1
 80134de:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80134e2:	ee77 7a27 	vadd.f32	s15, s14, s15
 80134e6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80134ea:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80134ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80134f2:	bfcc      	ite	gt
 80134f4:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 80134f8:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 80134fc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8013500:	ee17 3a90 	vmov	r3, s15
 8013504:	b218      	sxth	r0, r3
 8013506:	4770      	bx	lr

08013508 <_ZN8touchgfx15EasingEquations12linearEaseInEtsst>:
 8013508:	f7ff bfd1 	b.w	80134ae <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>

0801350c <_ZN8touchgfx12TextProviderC1Ev>:
 801350c:	b538      	push	{r3, r4, r5, lr}
 801350e:	2500      	movs	r5, #0
 8013510:	2302      	movs	r3, #2
 8013512:	4604      	mov	r4, r0
 8013514:	220e      	movs	r2, #14
 8013516:	7403      	strb	r3, [r0, #16]
 8013518:	4629      	mov	r1, r5
 801351a:	6145      	str	r5, [r0, #20]
 801351c:	7605      	strb	r5, [r0, #24]
 801351e:	83c5      	strh	r5, [r0, #30]
 8013520:	8405      	strh	r5, [r0, #32]
 8013522:	86c5      	strh	r5, [r0, #54]	; 0x36
 8013524:	8705      	strh	r5, [r0, #56]	; 0x38
 8013526:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8013528:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 801352c:	e9c0 5500 	strd	r5, r5, [r0]
 8013530:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8013534:	304c      	adds	r0, #76	; 0x4c
 8013536:	f00c fdf9 	bl	802012c <memset>
 801353a:	2301      	movs	r3, #1
 801353c:	4620      	mov	r0, r4
 801353e:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 8013542:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8013546:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 801354a:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 801354e:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 8013552:	f7f0 fa0b 	bl	800396c <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8013556:	4620      	mov	r0, r4
 8013558:	bd38      	pop	{r3, r4, r5, pc}
	...

0801355c <_ZN8touchgfx12TextProvider11endOfStringEv>:
 801355c:	b508      	push	{r3, lr}
 801355e:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8013560:	b92b      	cbnz	r3, 801356e <_ZN8touchgfx12TextProvider11endOfStringEv+0x12>
 8013562:	4b07      	ldr	r3, [pc, #28]	; (8013580 <_ZN8touchgfx12TextProvider11endOfStringEv+0x24>)
 8013564:	21c0      	movs	r1, #192	; 0xc0
 8013566:	4a07      	ldr	r2, [pc, #28]	; (8013584 <_ZN8touchgfx12TextProvider11endOfStringEv+0x28>)
 8013568:	4807      	ldr	r0, [pc, #28]	; (8013588 <_ZN8touchgfx12TextProvider11endOfStringEv+0x2c>)
 801356a:	f00c fd39 	bl	801ffe0 <__assert_func>
 801356e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8013570:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013574:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 8013576:	fab0 f080 	clz	r0, r0
 801357a:	0940      	lsrs	r0, r0, #5
 801357c:	bd08      	pop	{r3, pc}
 801357e:	bf00      	nop
 8013580:	08022408 	.word	0x08022408
 8013584:	080249a7 	.word	0x080249a7
 8013588:	080224e8 	.word	0x080224e8

0801358c <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 801358c:	b530      	push	{r4, r5, lr}
 801358e:	2500      	movs	r5, #0
 8013590:	2401      	movs	r4, #1
 8013592:	6843      	ldr	r3, [r0, #4]
 8013594:	b913      	cbnz	r3, 801359c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8013596:	6803      	ldr	r3, [r0, #0]
 8013598:	b313      	cbz	r3, 80135e0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801359a:	6043      	str	r3, [r0, #4]
 801359c:	7e03      	ldrb	r3, [r0, #24]
 801359e:	b143      	cbz	r3, 80135b2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 80135a0:	6943      	ldr	r3, [r0, #20]
 80135a2:	b12b      	cbz	r3, 80135b0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 80135a4:	881a      	ldrh	r2, [r3, #0]
 80135a6:	b11a      	cbz	r2, 80135b0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 80135a8:	1c9a      	adds	r2, r3, #2
 80135aa:	6142      	str	r2, [r0, #20]
 80135ac:	8818      	ldrh	r0, [r3, #0]
 80135ae:	bd30      	pop	{r4, r5, pc}
 80135b0:	7605      	strb	r5, [r0, #24]
 80135b2:	6843      	ldr	r3, [r0, #4]
 80135b4:	8819      	ldrh	r1, [r3, #0]
 80135b6:	b199      	cbz	r1, 80135e0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 80135b8:	1c9a      	adds	r2, r3, #2
 80135ba:	2902      	cmp	r1, #2
 80135bc:	6042      	str	r2, [r0, #4]
 80135be:	d1f5      	bne.n	80135ac <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 80135c0:	7c03      	ldrb	r3, [r0, #16]
 80135c2:	2b01      	cmp	r3, #1
 80135c4:	d8e5      	bhi.n	8013592 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80135c6:	1c5a      	adds	r2, r3, #1
 80135c8:	3302      	adds	r3, #2
 80135ca:	7402      	strb	r2, [r0, #16]
 80135cc:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 80135d0:	6143      	str	r3, [r0, #20]
 80135d2:	2b00      	cmp	r3, #0
 80135d4:	d0dd      	beq.n	8013592 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80135d6:	881b      	ldrh	r3, [r3, #0]
 80135d8:	2b00      	cmp	r3, #0
 80135da:	d0da      	beq.n	8013592 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80135dc:	7604      	strb	r4, [r0, #24]
 80135de:	e7d8      	b.n	8013592 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80135e0:	2000      	movs	r0, #0
 80135e2:	e7e4      	b.n	80135ae <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

080135e4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 80135e4:	6001      	str	r1, [r0, #0]
 80135e6:	2100      	movs	r1, #0
 80135e8:	b430      	push	{r4, r5}
 80135ea:	6041      	str	r1, [r0, #4]
 80135ec:	6815      	ldr	r5, [r2, #0]
 80135ee:	6085      	str	r5, [r0, #8]
 80135f0:	6852      	ldr	r2, [r2, #4]
 80135f2:	6443      	str	r3, [r0, #68]	; 0x44
 80135f4:	9b02      	ldr	r3, [sp, #8]
 80135f6:	60c2      	str	r2, [r0, #12]
 80135f8:	7401      	strb	r1, [r0, #16]
 80135fa:	6141      	str	r1, [r0, #20]
 80135fc:	7601      	strb	r1, [r0, #24]
 80135fe:	8701      	strh	r1, [r0, #56]	; 0x38
 8013600:	8401      	strh	r1, [r0, #32]
 8013602:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8013606:	6483      	str	r3, [r0, #72]	; 0x48
 8013608:	bc30      	pop	{r4, r5}
 801360a:	f7f0 b9af 	b.w	800396c <_ZN8touchgfx12TextProvider18initializeInternalEv>

0801360e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 801360e:	b408      	push	{r3}
 8013610:	b510      	push	{r4, lr}
 8013612:	b085      	sub	sp, #20
 8013614:	ac07      	add	r4, sp, #28
 8013616:	f854 3b04 	ldr.w	r3, [r4], #4
 801361a:	9300      	str	r3, [sp, #0]
 801361c:	4613      	mov	r3, r2
 801361e:	4622      	mov	r2, r4
 8013620:	9403      	str	r4, [sp, #12]
 8013622:	f7ff ffdf 	bl	80135e4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8013626:	b005      	add	sp, #20
 8013628:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801362c:	b001      	add	sp, #4
 801362e:	4770      	bx	lr

08013630 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8013630:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013632:	4605      	mov	r5, r0
 8013634:	4608      	mov	r0, r1
 8013636:	b1f1      	cbz	r1, 8013676 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
 8013638:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 801363c:	460b      	mov	r3, r1
 801363e:	f101 0708 	add.w	r7, r1, #8
 8013642:	4622      	mov	r2, r4
 8013644:	6818      	ldr	r0, [r3, #0]
 8013646:	3308      	adds	r3, #8
 8013648:	f853 1c04 	ldr.w	r1, [r3, #-4]
 801364c:	4626      	mov	r6, r4
 801364e:	42bb      	cmp	r3, r7
 8013650:	c603      	stmia	r6!, {r0, r1}
 8013652:	4634      	mov	r4, r6
 8013654:	d1f6      	bne.n	8013644 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8013656:	6818      	ldr	r0, [r3, #0]
 8013658:	6030      	str	r0, [r6, #0]
 801365a:	4610      	mov	r0, r2
 801365c:	889b      	ldrh	r3, [r3, #4]
 801365e:	80b3      	strh	r3, [r6, #4]
 8013660:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 8013664:	015b      	lsls	r3, r3, #5
 8013666:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801366a:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 801366e:	430b      	orrs	r3, r1
 8013670:	425b      	negs	r3, r3
 8013672:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8013676:	bdf0      	pop	{r4, r5, r6, r7, pc}

08013678 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8013678:	b538      	push	{r3, r4, r5, lr}
 801367a:	460c      	mov	r4, r1
 801367c:	6811      	ldr	r1, [r2, #0]
 801367e:	4610      	mov	r0, r2
 8013680:	68cd      	ldr	r5, [r1, #12]
 8013682:	4619      	mov	r1, r3
 8013684:	47a8      	blx	r5
 8013686:	2800      	cmp	r0, #0
 8013688:	bf08      	it	eq
 801368a:	4620      	moveq	r0, r4
 801368c:	bd38      	pop	{r3, r4, r5, pc}
	...

08013690 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8013690:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013692:	4604      	mov	r4, r0
 8013694:	4615      	mov	r5, r2
 8013696:	4608      	mov	r0, r1
 8013698:	b93a      	cbnz	r2, 80136aa <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 801369a:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 801369e:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 80136a2:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 80136a6:	4628      	mov	r0, r5
 80136a8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80136aa:	f892 c00d 	ldrb.w	ip, [r2, #13]
 80136ae:	8893      	ldrh	r3, [r2, #4]
 80136b0:	ea4f 160c 	mov.w	r6, ip, lsl #4
 80136b4:	f406 7280 	and.w	r2, r6, #256	; 0x100
 80136b8:	79ee      	ldrb	r6, [r5, #7]
 80136ba:	4316      	orrs	r6, r2
 80136bc:	f46f 6263 	mvn.w	r2, #3632	; 0xe30
 80136c0:	189a      	adds	r2, r3, r2
 80136c2:	b2b7      	uxth	r7, r6
 80136c4:	b291      	uxth	r1, r2
 80136c6:	291d      	cmp	r1, #29
 80136c8:	f200 8084 	bhi.w	80137d4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 80136cc:	2201      	movs	r2, #1
 80136ce:	10f6      	asrs	r6, r6, #3
 80136d0:	408a      	lsls	r2, r1
 80136d2:	4978      	ldr	r1, [pc, #480]	; (80138b4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x224>)
 80136d4:	420a      	tst	r2, r1
 80136d6:	d12e      	bne.n	8013736 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa6>
 80136d8:	f412 7f60 	tst.w	r2, #896	; 0x380
 80136dc:	d07a      	beq.n	80137d4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 80136de:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 80136e2:	462b      	mov	r3, r5
 80136e4:	f105 0e08 	add.w	lr, r5, #8
 80136e8:	4615      	mov	r5, r2
 80136ea:	6818      	ldr	r0, [r3, #0]
 80136ec:	3308      	adds	r3, #8
 80136ee:	f853 1c04 	ldr.w	r1, [r3, #-4]
 80136f2:	4694      	mov	ip, r2
 80136f4:	4573      	cmp	r3, lr
 80136f6:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 80136fa:	4662      	mov	r2, ip
 80136fc:	d1f5      	bne.n	80136ea <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 80136fe:	6818      	ldr	r0, [r3, #0]
 8013700:	f8cc 0000 	str.w	r0, [ip]
 8013704:	889b      	ldrh	r3, [r3, #4]
 8013706:	f8ac 3004 	strh.w	r3, [ip, #4]
 801370a:	b2b3      	uxth	r3, r6
 801370c:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8013710:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8013714:	1aca      	subs	r2, r1, r3
 8013716:	1bcf      	subs	r7, r1, r7
 8013718:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 801371c:	b292      	uxth	r2, r2
 801371e:	1afb      	subs	r3, r7, r3
 8013720:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 8013724:	10d2      	asrs	r2, r2, #3
 8013726:	f002 0260 	and.w	r2, r2, #96	; 0x60
 801372a:	4302      	orrs	r2, r0
 801372c:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8013730:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8013734:	e7b7      	b.n	80136a6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8013736:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8013738:	b92b      	cbnz	r3, 8013746 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb6>
 801373a:	4b5f      	ldr	r3, [pc, #380]	; (80138b8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x228>)
 801373c:	21c0      	movs	r1, #192	; 0xc0
 801373e:	4a5f      	ldr	r2, [pc, #380]	; (80138bc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x22c>)
 8013740:	485f      	ldr	r0, [pc, #380]	; (80138c0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x230>)
 8013742:	f00c fc4d 	bl	801ffe0 <__assert_func>
 8013746:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8013748:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801374c:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 801374e:	f640 6333 	movw	r3, #3635	; 0xe33
 8013752:	4299      	cmp	r1, r3
 8013754:	d110      	bne.n	8013778 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xe8>
 8013756:	6803      	ldr	r3, [r0, #0]
 8013758:	68db      	ldr	r3, [r3, #12]
 801375a:	4798      	blx	r3
 801375c:	7b41      	ldrb	r1, [r0, #13]
 801375e:	00cb      	lsls	r3, r1, #3
 8013760:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8013764:	7a03      	ldrb	r3, [r0, #8]
 8013766:	0648      	lsls	r0, r1, #25
 8013768:	ea43 0302 	orr.w	r3, r3, r2
 801376c:	bf44      	itt	mi
 801376e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8013772:	b21b      	sxthmi	r3, r3
 8013774:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8013778:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 801377c:	462a      	mov	r2, r5
 801377e:	f105 0c08 	add.w	ip, r5, #8
 8013782:	443b      	add	r3, r7
 8013784:	4433      	add	r3, r6
 8013786:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 801378a:	b29b      	uxth	r3, r3
 801378c:	4635      	mov	r5, r6
 801378e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8013792:	6810      	ldr	r0, [r2, #0]
 8013794:	3208      	adds	r2, #8
 8013796:	f852 1c04 	ldr.w	r1, [r2, #-4]
 801379a:	4637      	mov	r7, r6
 801379c:	4562      	cmp	r2, ip
 801379e:	c703      	stmia	r7!, {r0, r1}
 80137a0:	463e      	mov	r6, r7
 80137a2:	d1f6      	bne.n	8013792 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 80137a4:	6810      	ldr	r0, [r2, #0]
 80137a6:	6038      	str	r0, [r7, #0]
 80137a8:	8892      	ldrh	r2, [r2, #4]
 80137aa:	80ba      	strh	r2, [r7, #4]
 80137ac:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80137b0:	10db      	asrs	r3, r3, #3
 80137b2:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80137b6:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80137ba:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80137be:	4313      	orrs	r3, r2
 80137c0:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 80137c4:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80137c8:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 80137cc:	1a9b      	subs	r3, r3, r2
 80137ce:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 80137d2:	e768      	b.n	80136a6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 80137d4:	f023 0204 	bic.w	r2, r3, #4
 80137d8:	f640 611b 	movw	r1, #3611	; 0xe1b
 80137dc:	428a      	cmp	r2, r1
 80137de:	d003      	beq.n	80137e8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x158>
 80137e0:	f640 621d 	movw	r2, #3613	; 0xe1d
 80137e4:	4293      	cmp	r3, r2
 80137e6:	d120      	bne.n	801382a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x19a>
 80137e8:	3b01      	subs	r3, #1
 80137ea:	4602      	mov	r2, r0
 80137ec:	4629      	mov	r1, r5
 80137ee:	4620      	mov	r0, r4
 80137f0:	b29b      	uxth	r3, r3
 80137f2:	f7ff ff41 	bl	8013678 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 80137f6:	7b41      	ldrb	r1, [r0, #13]
 80137f8:	00cb      	lsls	r3, r1, #3
 80137fa:	0649      	lsls	r1, r1, #25
 80137fc:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8013800:	7a03      	ldrb	r3, [r0, #8]
 8013802:	ea43 0302 	orr.w	r3, r3, r2
 8013806:	bf44      	itt	mi
 8013808:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801380c:	b21b      	sxthmi	r3, r3
 801380e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8013812:	7b6b      	ldrb	r3, [r5, #13]
 8013814:	7aaa      	ldrb	r2, [r5, #10]
 8013816:	005b      	lsls	r3, r3, #1
 8013818:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801381c:	4313      	orrs	r3, r2
 801381e:	115a      	asrs	r2, r3, #5
 8013820:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8013824:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8013828:	e035      	b.n	8013896 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x206>
 801382a:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 801382e:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8013832:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8013836:	7a2a      	ldrb	r2, [r5, #8]
 8013838:	ea42 0201 	orr.w	r2, r2, r1
 801383c:	f640 6109 	movw	r1, #3593	; 0xe09
 8013840:	bf1c      	itt	ne
 8013842:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8013846:	b212      	sxthne	r2, r2
 8013848:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 801384c:	f023 0210 	bic.w	r2, r3, #16
 8013850:	428a      	cmp	r2, r1
 8013852:	d003      	beq.n	801385c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1cc>
 8013854:	f640 6213 	movw	r2, #3603	; 0xe13
 8013858:	4293      	cmp	r3, r2
 801385a:	d129      	bne.n	80138b0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x220>
 801385c:	7b6e      	ldrb	r6, [r5, #13]
 801385e:	4629      	mov	r1, r5
 8013860:	0076      	lsls	r6, r6, #1
 8013862:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8013866:	7aae      	ldrb	r6, [r5, #10]
 8013868:	4316      	orrs	r6, r2
 801386a:	f640 6213 	movw	r2, #3603	; 0xe13
 801386e:	4293      	cmp	r3, r2
 8013870:	4602      	mov	r2, r0
 8013872:	4620      	mov	r0, r4
 8013874:	bf16      	itet	ne
 8013876:	f103 33ff 	addne.w	r3, r3, #4294967295
 801387a:	f640 630c 	movweq	r3, #3596	; 0xe0c
 801387e:	b29b      	uxthne	r3, r3
 8013880:	f7ff fefa 	bl	8013678 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8013884:	7b43      	ldrb	r3, [r0, #13]
 8013886:	7a82      	ldrb	r2, [r0, #10]
 8013888:	005b      	lsls	r3, r3, #1
 801388a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801388e:	4313      	orrs	r3, r2
 8013890:	1af6      	subs	r6, r6, r3
 8013892:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8013896:	7b69      	ldrb	r1, [r5, #13]
 8013898:	00cb      	lsls	r3, r1, #3
 801389a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801389e:	7a2b      	ldrb	r3, [r5, #8]
 80138a0:	4313      	orrs	r3, r2
 80138a2:	064a      	lsls	r2, r1, #25
 80138a4:	bf44      	itt	mi
 80138a6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80138aa:	b21b      	sxthmi	r3, r3
 80138ac:	1bdb      	subs	r3, r3, r7
 80138ae:	e73f      	b.n	8013730 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa0>
 80138b0:	2300      	movs	r3, #0
 80138b2:	e7b7      	b.n	8013824 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x194>
 80138b4:	3fc00079 	.word	0x3fc00079
 80138b8:	08022408 	.word	0x08022408
 80138bc:	080249a7 	.word	0x080249a7
 80138c0:	080224e8 	.word	0x080224e8

080138c4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 80138c4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80138c8:	4604      	mov	r4, r0
 80138ca:	b942      	cbnz	r2, 80138de <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 80138cc:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80138d0:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 80138d4:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 80138d8:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 80138dc:	e046      	b.n	801396c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 80138de:	7b51      	ldrb	r1, [r2, #13]
 80138e0:	8893      	ldrh	r3, [r2, #4]
 80138e2:	010f      	lsls	r7, r1, #4
 80138e4:	f407 7080 	and.w	r0, r7, #256	; 0x100
 80138e8:	79d7      	ldrb	r7, [r2, #7]
 80138ea:	4307      	orrs	r7, r0
 80138ec:	2f04      	cmp	r7, #4
 80138ee:	b2bd      	uxth	r5, r7
 80138f0:	bfcc      	ite	gt
 80138f2:	08bf      	lsrgt	r7, r7, #2
 80138f4:	2701      	movle	r7, #1
 80138f6:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 80138fa:	f200 80ab 	bhi.w	8013a54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x190>
 80138fe:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8013902:	4283      	cmp	r3, r0
 8013904:	d216      	bcs.n	8013934 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8013906:	f240 605b 	movw	r0, #1627	; 0x65b
 801390a:	4283      	cmp	r3, r0
 801390c:	d859      	bhi.n	80139c2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xfe>
 801390e:	f240 6057 	movw	r0, #1623	; 0x657
 8013912:	4283      	cmp	r3, r0
 8013914:	d20e      	bcs.n	8013934 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8013916:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 801391a:	d24a      	bcs.n	80139b2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xee>
 801391c:	f240 604e 	movw	r0, #1614	; 0x64e
 8013920:	4283      	cmp	r3, r0
 8013922:	d207      	bcs.n	8013934 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8013924:	f240 601a 	movw	r0, #1562	; 0x61a
 8013928:	4283      	cmp	r3, r0
 801392a:	d02a      	beq.n	8013982 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 801392c:	d821      	bhi.n	8013972 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xae>
 801392e:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8013932:	d35b      	bcc.n	80139ec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8013934:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8013938:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801393c:	f040 80d0 	bne.w	8013ae0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 8013940:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8013944:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8013948:	f040 80ca 	bne.w	8013ae0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 801394c:	00cb      	lsls	r3, r1, #3
 801394e:	0649      	lsls	r1, r1, #25
 8013950:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8013954:	7a13      	ldrb	r3, [r2, #8]
 8013956:	ea43 0300 	orr.w	r3, r3, r0
 801395a:	bf44      	itt	mi
 801395c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8013960:	b21b      	sxthmi	r3, r3
 8013962:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8013966:	1b5d      	subs	r5, r3, r5
 8013968:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801396c:	4610      	mov	r0, r2
 801396e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013972:	f240 604b 	movw	r0, #1611	; 0x64b
 8013976:	4283      	cmp	r3, r0
 8013978:	d338      	bcc.n	80139ec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801397a:	f240 604c 	movw	r0, #1612	; 0x64c
 801397e:	4283      	cmp	r3, r0
 8013980:	d9d8      	bls.n	8013934 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8013982:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8013986:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 801398a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801398e:	f040 80f2 	bne.w	8013b76 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>
 8013992:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8013996:	f040 80ee 	bne.w	8013b76 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>
 801399a:	00cb      	lsls	r3, r1, #3
 801399c:	064e      	lsls	r6, r1, #25
 801399e:	f403 7080 	and.w	r0, r3, #256	; 0x100
 80139a2:	7a13      	ldrb	r3, [r2, #8]
 80139a4:	ea43 0300 	orr.w	r3, r3, r0
 80139a8:	bf44      	itt	mi
 80139aa:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80139ae:	b21b      	sxthmi	r3, r3
 80139b0:	e7d9      	b.n	8013966 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa2>
 80139b2:	f240 6054 	movw	r0, #1620	; 0x654
 80139b6:	4283      	cmp	r3, r0
 80139b8:	d8e3      	bhi.n	8013982 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 80139ba:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 80139be:	d9e0      	bls.n	8013982 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 80139c0:	e7b8      	b.n	8013934 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 80139c2:	f240 6074 	movw	r0, #1652	; 0x674
 80139c6:	4283      	cmp	r3, r0
 80139c8:	d0b4      	beq.n	8013934 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 80139ca:	d82d      	bhi.n	8013a28 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x164>
 80139cc:	f240 605e 	movw	r0, #1630	; 0x65e
 80139d0:	4283      	cmp	r3, r0
 80139d2:	d804      	bhi.n	80139de <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11a>
 80139d4:	f240 605d 	movw	r0, #1629	; 0x65d
 80139d8:	4283      	cmp	r3, r0
 80139da:	d3d2      	bcc.n	8013982 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 80139dc:	e7aa      	b.n	8013934 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 80139de:	f240 605f 	movw	r0, #1631	; 0x65f
 80139e2:	4283      	cmp	r3, r0
 80139e4:	d0cd      	beq.n	8013982 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 80139e6:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 80139ea:	d0a3      	beq.n	8013934 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 80139ec:	00cb      	lsls	r3, r1, #3
 80139ee:	0649      	lsls	r1, r1, #25
 80139f0:	f403 7080 	and.w	r0, r3, #256	; 0x100
 80139f4:	7a13      	ldrb	r3, [r2, #8]
 80139f6:	ea43 0300 	orr.w	r3, r3, r0
 80139fa:	bf44      	itt	mi
 80139fc:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8013a00:	b21b      	sxthmi	r3, r3
 8013a02:	1b5d      	subs	r5, r3, r5
 8013a04:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8013a08:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8013a0c:	7b53      	ldrb	r3, [r2, #13]
 8013a0e:	015b      	lsls	r3, r3, #5
 8013a10:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8013a14:	7993      	ldrb	r3, [r2, #6]
 8013a16:	430b      	orrs	r3, r1
 8013a18:	2105      	movs	r1, #5
 8013a1a:	005b      	lsls	r3, r3, #1
 8013a1c:	fb93 f3f1 	sdiv	r3, r3, r1
 8013a20:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8013a24:	440b      	add	r3, r1
 8013a26:	e757      	b.n	80138d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8013a28:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8013a2c:	4283      	cmp	r3, r0
 8013a2e:	d809      	bhi.n	8013a44 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x180>
 8013a30:	f240 60df 	movw	r0, #1759	; 0x6df
 8013a34:	4283      	cmp	r3, r0
 8013a36:	f4bf af7d 	bcs.w	8013934 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8013a3a:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8013a3e:	2b05      	cmp	r3, #5
 8013a40:	d8d4      	bhi.n	80139ec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8013a42:	e777      	b.n	8013934 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8013a44:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8013a48:	4283      	cmp	r3, r0
 8013a4a:	d09a      	beq.n	8013982 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8013a4c:	f240 60e4 	movw	r0, #1764	; 0x6e4
 8013a50:	4283      	cmp	r3, r0
 8013a52:	e7ca      	b.n	80139ea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x126>
 8013a54:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8013a58:	d22b      	bcs.n	8013ab2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ee>
 8013a5a:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8013a5e:	4283      	cmp	r3, r0
 8013a60:	d28f      	bcs.n	8013982 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8013a62:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8013a66:	4283      	cmp	r3, r0
 8013a68:	d816      	bhi.n	8013a98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d4>
 8013a6a:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8013a6e:	4283      	cmp	r3, r0
 8013a70:	f4bf af60 	bcs.w	8013934 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8013a74:	f240 60ec 	movw	r0, #1772	; 0x6ec
 8013a78:	4283      	cmp	r3, r0
 8013a7a:	d80a      	bhi.n	8013a92 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ce>
 8013a7c:	f240 60eb 	movw	r0, #1771	; 0x6eb
 8013a80:	4283      	cmp	r3, r0
 8013a82:	f4bf af57 	bcs.w	8013934 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8013a86:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8013a8a:	4283      	cmp	r3, r0
 8013a8c:	f43f af79 	beq.w	8013982 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8013a90:	e7ac      	b.n	80139ec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8013a92:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8013a96:	e7f8      	b.n	8013a8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c6>
 8013a98:	f640 00e8 	movw	r0, #2280	; 0x8e8
 8013a9c:	4283      	cmp	r3, r0
 8013a9e:	d802      	bhi.n	8013aa6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e2>
 8013aa0:	f640 00e7 	movw	r0, #2279	; 0x8e7
 8013aa4:	e798      	b.n	80139d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x114>
 8013aa6:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8013aaa:	4283      	cmp	r3, r0
 8013aac:	f47f af42 	bne.w	8013934 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8013ab0:	e767      	b.n	8013982 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8013ab2:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8013ab6:	4283      	cmp	r3, r0
 8013ab8:	f43f af63 	beq.w	8013982 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8013abc:	d802      	bhi.n	8013ac4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x200>
 8013abe:	f640 00f2 	movw	r0, #2290	; 0x8f2
 8013ac2:	e7f2      	b.n	8013aaa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e6>
 8013ac4:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8013ac8:	4283      	cmp	r3, r0
 8013aca:	d805      	bhi.n	8013ad8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x214>
 8013acc:	f640 00f9 	movw	r0, #2297	; 0x8f9
 8013ad0:	4283      	cmp	r3, r0
 8013ad2:	f4ff af2f 	bcc.w	8013934 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8013ad6:	e754      	b.n	8013982 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8013ad8:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8013adc:	4283      	cmp	r3, r0
 8013ade:	e7af      	b.n	8013a40 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17c>
 8013ae0:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8013ae4:	4617      	mov	r7, r2
 8013ae6:	f102 0808 	add.w	r8, r2, #8
 8013aea:	4666      	mov	r6, ip
 8013aec:	6838      	ldr	r0, [r7, #0]
 8013aee:	3708      	adds	r7, #8
 8013af0:	f857 1c04 	ldr.w	r1, [r7, #-4]
 8013af4:	46e6      	mov	lr, ip
 8013af6:	4547      	cmp	r7, r8
 8013af8:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8013afc:	46f4      	mov	ip, lr
 8013afe:	d1f5      	bne.n	8013aec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x228>
 8013b00:	6838      	ldr	r0, [r7, #0]
 8013b02:	f8ce 0000 	str.w	r0, [lr]
 8013b06:	88b9      	ldrh	r1, [r7, #4]
 8013b08:	f8ae 1004 	strh.w	r1, [lr, #4]
 8013b0c:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8013b10:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8013b14:	d009      	beq.n	8013b2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8013b16:	7b51      	ldrb	r1, [r2, #13]
 8013b18:	7992      	ldrb	r2, [r2, #6]
 8013b1a:	0149      	lsls	r1, r1, #5
 8013b1c:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8013b20:	4311      	orrs	r1, r2
 8013b22:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8013b26:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8013b2a:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8013b2e:	d00d      	beq.n	8013b4c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x288>
 8013b30:	442b      	add	r3, r5
 8013b32:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8013b36:	b29b      	uxth	r3, r3
 8013b38:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8013b3c:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8013b40:	10db      	asrs	r3, r3, #3
 8013b42:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8013b46:	4313      	orrs	r3, r2
 8013b48:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8013b4c:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8013b50:	00cb      	lsls	r3, r1, #3
 8013b52:	064f      	lsls	r7, r1, #25
 8013b54:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8013b58:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8013b5c:	ea43 0302 	orr.w	r3, r3, r2
 8013b60:	bf44      	itt	mi
 8013b62:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8013b66:	b21b      	sxthmi	r3, r3
 8013b68:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8013b6c:	1b5d      	subs	r5, r3, r5
 8013b6e:	4632      	mov	r2, r6
 8013b70:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8013b74:	e6fa      	b.n	801396c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 8013b76:	f104 0e4c 	add.w	lr, r4, #76	; 0x4c
 8013b7a:	4694      	mov	ip, r2
 8013b7c:	f102 0908 	add.w	r9, r2, #8
 8013b80:	4676      	mov	r6, lr
 8013b82:	f8dc 0000 	ldr.w	r0, [ip]
 8013b86:	f10c 0c08 	add.w	ip, ip, #8
 8013b8a:	f85c 1c04 	ldr.w	r1, [ip, #-4]
 8013b8e:	46f0      	mov	r8, lr
 8013b90:	45cc      	cmp	ip, r9
 8013b92:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8013b96:	46c6      	mov	lr, r8
 8013b98:	d1f3      	bne.n	8013b82 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2be>
 8013b9a:	f8dc 0000 	ldr.w	r0, [ip]
 8013b9e:	f8c8 0000 	str.w	r0, [r8]
 8013ba2:	f8bc 1004 	ldrh.w	r1, [ip, #4]
 8013ba6:	f8a8 1004 	strh.w	r1, [r8, #4]
 8013baa:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8013bae:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8013bb2:	d009      	beq.n	8013bc8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x304>
 8013bb4:	7b51      	ldrb	r1, [r2, #13]
 8013bb6:	7992      	ldrb	r2, [r2, #6]
 8013bb8:	0149      	lsls	r1, r1, #5
 8013bba:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8013bbe:	4311      	orrs	r1, r2
 8013bc0:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8013bc4:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8013bc8:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8013bcc:	d00d      	beq.n	8013bea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x326>
 8013bce:	1bdb      	subs	r3, r3, r7
 8013bd0:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8013bd4:	b29b      	uxth	r3, r3
 8013bd6:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8013bda:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8013bde:	10db      	asrs	r3, r3, #3
 8013be0:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8013be4:	4313      	orrs	r3, r2
 8013be6:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8013bea:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8013bee:	00cb      	lsls	r3, r1, #3
 8013bf0:	0648      	lsls	r0, r1, #25
 8013bf2:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8013bf6:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8013bfa:	ea43 0302 	orr.w	r3, r3, r2
 8013bfe:	bf44      	itt	mi
 8013c00:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8013c04:	b21b      	sxthmi	r3, r3
 8013c06:	e7b1      	b.n	8013b6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2a8>

08013c08 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8013c08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013c0c:	461e      	mov	r6, r3
 8013c0e:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8013c10:	4604      	mov	r4, r0
 8013c12:	4617      	mov	r7, r2
 8013c14:	b92b      	cbnz	r3, 8013c22 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1a>
 8013c16:	4b25      	ldr	r3, [pc, #148]	; (8013cac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa4>)
 8013c18:	21c0      	movs	r1, #192	; 0xc0
 8013c1a:	4a25      	ldr	r2, [pc, #148]	; (8013cb0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa8>)
 8013c1c:	4825      	ldr	r0, [pc, #148]	; (8013cb4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xac>)
 8013c1e:	f00c f9df 	bl	801ffe0 <__assert_func>
 8013c22:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8013c24:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8013c28:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8013c2c:	f7ef fe5c 	bl	80038e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8013c30:	4605      	mov	r5, r0
 8013c32:	b918      	cbnz	r0, 8013c3c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x34>
 8013c34:	6030      	str	r0, [r6, #0]
 8013c36:	4628      	mov	r0, r5
 8013c38:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013c3c:	683b      	ldr	r3, [r7, #0]
 8013c3e:	4601      	mov	r1, r0
 8013c40:	4638      	mov	r0, r7
 8013c42:	68db      	ldr	r3, [r3, #12]
 8013c44:	4798      	blx	r3
 8013c46:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8013c4a:	4602      	mov	r2, r0
 8013c4c:	6030      	str	r0, [r6, #0]
 8013c4e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8013c52:	d213      	bcs.n	8013c7c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x74>
 8013c54:	4643      	mov	r3, r8
 8013c56:	4639      	mov	r1, r7
 8013c58:	4620      	mov	r0, r4
 8013c5a:	f7ff fe33 	bl	80138c4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8013c5e:	6030      	str	r0, [r6, #0]
 8013c60:	6833      	ldr	r3, [r6, #0]
 8013c62:	b143      	cbz	r3, 8013c76 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x6e>
 8013c64:	7b5a      	ldrb	r2, [r3, #13]
 8013c66:	7a9b      	ldrb	r3, [r3, #10]
 8013c68:	0052      	lsls	r2, r2, #1
 8013c6a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8013c6e:	4313      	orrs	r3, r2
 8013c70:	bf0c      	ite	eq
 8013c72:	2301      	moveq	r3, #1
 8013c74:	2300      	movne	r3, #0
 8013c76:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8013c7a:	e7dc      	b.n	8013c36 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x2e>
 8013c7c:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8013c80:	b29b      	uxth	r3, r3
 8013c82:	2b7f      	cmp	r3, #127	; 0x7f
 8013c84:	d804      	bhi.n	8013c90 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x88>
 8013c86:	4639      	mov	r1, r7
 8013c88:	4620      	mov	r0, r4
 8013c8a:	f7ff fd01 	bl	8013690 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8013c8e:	e7e6      	b.n	8013c5e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 8013c90:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8013c94:	2b00      	cmp	r3, #0
 8013c96:	d0e3      	beq.n	8013c60 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 8013c98:	f640 1302 	movw	r3, #2306	; 0x902
 8013c9c:	429d      	cmp	r5, r3
 8013c9e:	d1df      	bne.n	8013c60 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 8013ca0:	4601      	mov	r1, r0
 8013ca2:	4620      	mov	r0, r4
 8013ca4:	f7ff fcc4 	bl	8013630 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8013ca8:	e7d9      	b.n	8013c5e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 8013caa:	bf00      	nop
 8013cac:	08022408 	.word	0x08022408
 8013cb0:	080249a7 	.word	0x080249a7
 8013cb4:	080224e8 	.word	0x080224e8

08013cb8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8013cb8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8013cbc:	461e      	mov	r6, r3
 8013cbe:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8013cc0:	4604      	mov	r4, r0
 8013cc2:	4617      	mov	r7, r2
 8013cc4:	b92b      	cbnz	r3, 8013cd2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1a>
 8013cc6:	4b26      	ldr	r3, [pc, #152]	; (8013d60 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xa8>)
 8013cc8:	21c0      	movs	r1, #192	; 0xc0
 8013cca:	4a26      	ldr	r2, [pc, #152]	; (8013d64 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xac>)
 8013ccc:	4826      	ldr	r0, [pc, #152]	; (8013d68 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xb0>)
 8013cce:	f00c f987 	bl	801ffe0 <__assert_func>
 8013cd2:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8013cd4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8013cd8:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8013cdc:	f7ef fe04 	bl	80038e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8013ce0:	4605      	mov	r5, r0
 8013ce2:	b918      	cbnz	r0, 8013cec <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x34>
 8013ce4:	6030      	str	r0, [r6, #0]
 8013ce6:	4628      	mov	r0, r5
 8013ce8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8013cec:	683b      	ldr	r3, [r7, #0]
 8013cee:	4601      	mov	r1, r0
 8013cf0:	4638      	mov	r0, r7
 8013cf2:	f8d3 9008 	ldr.w	r9, [r3, #8]
 8013cf6:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8013cfa:	47c8      	blx	r9
 8013cfc:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8013d00:	4602      	mov	r2, r0
 8013d02:	6030      	str	r0, [r6, #0]
 8013d04:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8013d08:	d213      	bcs.n	8013d32 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7a>
 8013d0a:	4643      	mov	r3, r8
 8013d0c:	4639      	mov	r1, r7
 8013d0e:	4620      	mov	r0, r4
 8013d10:	f7ff fdd8 	bl	80138c4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8013d14:	6030      	str	r0, [r6, #0]
 8013d16:	6833      	ldr	r3, [r6, #0]
 8013d18:	b143      	cbz	r3, 8013d2c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x74>
 8013d1a:	7b5a      	ldrb	r2, [r3, #13]
 8013d1c:	7a9b      	ldrb	r3, [r3, #10]
 8013d1e:	0052      	lsls	r2, r2, #1
 8013d20:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8013d24:	4313      	orrs	r3, r2
 8013d26:	bf0c      	ite	eq
 8013d28:	2301      	moveq	r3, #1
 8013d2a:	2300      	movne	r3, #0
 8013d2c:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8013d30:	e7d9      	b.n	8013ce6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x2e>
 8013d32:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8013d36:	b29b      	uxth	r3, r3
 8013d38:	2b7f      	cmp	r3, #127	; 0x7f
 8013d3a:	d804      	bhi.n	8013d46 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x8e>
 8013d3c:	4639      	mov	r1, r7
 8013d3e:	4620      	mov	r0, r4
 8013d40:	f7ff fca6 	bl	8013690 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8013d44:	e7e6      	b.n	8013d14 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 8013d46:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8013d4a:	2b00      	cmp	r3, #0
 8013d4c:	d0e3      	beq.n	8013d16 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 8013d4e:	f640 1302 	movw	r3, #2306	; 0x902
 8013d52:	429d      	cmp	r5, r3
 8013d54:	d1df      	bne.n	8013d16 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 8013d56:	4601      	mov	r1, r0
 8013d58:	4620      	mov	r0, r4
 8013d5a:	f7ff fc69 	bl	8013630 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8013d5e:	e7d9      	b.n	8013d14 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 8013d60:	08022408 	.word	0x08022408
 8013d64:	080249a7 	.word	0x080249a7
 8013d68:	080224e8 	.word	0x080224e8

08013d6c <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8013d6c:	b510      	push	{r4, lr}
 8013d6e:	4604      	mov	r4, r0
 8013d70:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8013d74:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8013d76:	b9d9      	cbnz	r1, 8013db0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x44>
 8013d78:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8013d7a:	2b0a      	cmp	r3, #10
 8013d7c:	d037      	beq.n	8013dee <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x82>
 8013d7e:	4620      	mov	r0, r4
 8013d80:	f7ff fc04 	bl	801358c <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8013d84:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8013d86:	2b09      	cmp	r3, #9
 8013d88:	d906      	bls.n	8013d98 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x2c>
 8013d8a:	4b19      	ldr	r3, [pc, #100]	; (8013df0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x84>)
 8013d8c:	f44f 7182 	mov.w	r1, #260	; 0x104
 8013d90:	4a18      	ldr	r2, [pc, #96]	; (8013df4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x88>)
 8013d92:	4819      	ldr	r0, [pc, #100]	; (8013df8 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x8c>)
 8013d94:	f00c f924 	bl	801ffe0 <__assert_func>
 8013d98:	1c5a      	adds	r2, r3, #1
 8013d9a:	8722      	strh	r2, [r4, #56]	; 0x38
 8013d9c:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8013d9e:	4413      	add	r3, r2
 8013da0:	b29b      	uxth	r3, r3
 8013da2:	2b09      	cmp	r3, #9
 8013da4:	bf88      	it	hi
 8013da6:	3b0a      	subhi	r3, #10
 8013da8:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8013dac:	8458      	strh	r0, [r3, #34]	; 0x22
 8013dae:	e7e3      	b.n	8013d78 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0xc>
 8013db0:	2b0a      	cmp	r3, #10
 8013db2:	d01c      	beq.n	8013dee <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x82>
 8013db4:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 8013db6:	3901      	subs	r1, #1
 8013db8:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8013dbc:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 8013dbe:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8013dc2:	1c51      	adds	r1, r2, #1
 8013dc4:	b289      	uxth	r1, r1
 8013dc6:	2901      	cmp	r1, #1
 8013dc8:	bf8a      	itet	hi
 8013dca:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8013dce:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 8013dd0:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 8013dd2:	2b09      	cmp	r3, #9
 8013dd4:	d8d9      	bhi.n	8013d8a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x1e>
 8013dd6:	1c5a      	adds	r2, r3, #1
 8013dd8:	8722      	strh	r2, [r4, #56]	; 0x38
 8013dda:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8013ddc:	4413      	add	r3, r2
 8013dde:	b29b      	uxth	r3, r3
 8013de0:	2b09      	cmp	r3, #9
 8013de2:	bf88      	it	hi
 8013de4:	3b0a      	subhi	r3, #10
 8013de6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8013dea:	8458      	strh	r0, [r3, #34]	; 0x22
 8013dec:	e7c0      	b.n	8013d70 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8013dee:	bd10      	pop	{r4, pc}
 8013df0:	08024778 	.word	0x08024778
 8013df4:	08024afd 	.word	0x08024afd
 8013df8:	080224e8 	.word	0x080224e8

08013dfc <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8013dfc:	b538      	push	{r3, r4, r5, lr}
 8013dfe:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 8013e00:	4604      	mov	r4, r0
 8013e02:	b92a      	cbnz	r2, 8013e10 <_ZN8touchgfx12TextProvider11getNextCharEv+0x14>
 8013e04:	4b13      	ldr	r3, [pc, #76]	; (8013e54 <_ZN8touchgfx12TextProvider11getNextCharEv+0x58>)
 8013e06:	21d5      	movs	r1, #213	; 0xd5
 8013e08:	4a13      	ldr	r2, [pc, #76]	; (8013e58 <_ZN8touchgfx12TextProvider11getNextCharEv+0x5c>)
 8013e0a:	4814      	ldr	r0, [pc, #80]	; (8013e5c <_ZN8touchgfx12TextProvider11getNextCharEv+0x60>)
 8013e0c:	f00c f8e8 	bl	801ffe0 <__assert_func>
 8013e10:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8013e12:	3a01      	subs	r2, #1
 8013e14:	eb00 0143 	add.w	r1, r0, r3, lsl #1
 8013e18:	8c4d      	ldrh	r5, [r1, #34]	; 0x22
 8013e1a:	8702      	strh	r2, [r0, #56]	; 0x38
 8013e1c:	1c5a      	adds	r2, r3, #1
 8013e1e:	b292      	uxth	r2, r2
 8013e20:	2a09      	cmp	r2, #9
 8013e22:	bf8a      	itet	hi
 8013e24:	3b09      	subhi	r3, #9
 8013e26:	86c2      	strhls	r2, [r0, #54]	; 0x36
 8013e28:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 8013e2a:	f7ff ff9f 	bl	8013d6c <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8013e2e:	8c23      	ldrh	r3, [r4, #32]
 8013e30:	2b01      	cmp	r3, #1
 8013e32:	bf9c      	itt	ls
 8013e34:	3301      	addls	r3, #1
 8013e36:	8423      	strhls	r3, [r4, #32]
 8013e38:	8be3      	ldrh	r3, [r4, #30]
 8013e3a:	b90b      	cbnz	r3, 8013e40 <_ZN8touchgfx12TextProvider11getNextCharEv+0x44>
 8013e3c:	2302      	movs	r3, #2
 8013e3e:	83e3      	strh	r3, [r4, #30]
 8013e40:	8be3      	ldrh	r3, [r4, #30]
 8013e42:	4628      	mov	r0, r5
 8013e44:	3b01      	subs	r3, #1
 8013e46:	b29b      	uxth	r3, r3
 8013e48:	83e3      	strh	r3, [r4, #30]
 8013e4a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013e4e:	8365      	strh	r5, [r4, #26]
 8013e50:	bd38      	pop	{r3, r4, r5, pc}
 8013e52:	bf00      	nop
 8013e54:	08022408 	.word	0x08022408
 8013e58:	08024a52 	.word	0x08024a52
 8013e5c:	080224e8 	.word	0x080224e8

08013e60 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8013e60:	428a      	cmp	r2, r1
 8013e62:	b538      	push	{r3, r4, r5, lr}
 8013e64:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 8013e66:	d90c      	bls.n	8013e82 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x22>
 8013e68:	b92c      	cbnz	r4, 8013e76 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x16>
 8013e6a:	4b1c      	ldr	r3, [pc, #112]	; (8013edc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x7c>)
 8013e6c:	21e1      	movs	r1, #225	; 0xe1
 8013e6e:	4a1c      	ldr	r2, [pc, #112]	; (8013ee0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x80>)
 8013e70:	481c      	ldr	r0, [pc, #112]	; (8013ee4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>)
 8013e72:	f00c f8b5 	bl	801ffe0 <__assert_func>
 8013e76:	3c01      	subs	r4, #1
 8013e78:	4b1b      	ldr	r3, [pc, #108]	; (8013ee8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x88>)
 8013e7a:	4a1c      	ldr	r2, [pc, #112]	; (8013eec <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x8c>)
 8013e7c:	21c5      	movs	r1, #197	; 0xc5
 8013e7e:	8704      	strh	r4, [r0, #56]	; 0x38
 8013e80:	e7f6      	b.n	8013e70 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 8013e82:	428c      	cmp	r4, r1
 8013e84:	d203      	bcs.n	8013e8e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x2e>
 8013e86:	4b1a      	ldr	r3, [pc, #104]	; (8013ef0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x90>)
 8013e88:	21cb      	movs	r1, #203	; 0xcb
 8013e8a:	4a1a      	ldr	r2, [pc, #104]	; (8013ef4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x94>)
 8013e8c:	e7f0      	b.n	8013e70 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 8013e8e:	1a64      	subs	r4, r4, r1
 8013e90:	250a      	movs	r5, #10
 8013e92:	8704      	strh	r4, [r0, #56]	; 0x38
 8013e94:	8ec4      	ldrh	r4, [r0, #54]	; 0x36
 8013e96:	4421      	add	r1, r4
 8013e98:	b289      	uxth	r1, r1
 8013e9a:	2909      	cmp	r1, #9
 8013e9c:	bf88      	it	hi
 8013e9e:	390a      	subhi	r1, #10
 8013ea0:	86c1      	strh	r1, [r0, #54]	; 0x36
 8013ea2:	b1ba      	cbz	r2, 8013ed4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x74>
 8013ea4:	3a01      	subs	r2, #1
 8013ea6:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8013ea8:	b292      	uxth	r2, r2
 8013eaa:	2909      	cmp	r1, #9
 8013eac:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8013eb0:	d903      	bls.n	8013eba <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x5a>
 8013eb2:	4b11      	ldr	r3, [pc, #68]	; (8013ef8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>)
 8013eb4:	21e6      	movs	r1, #230	; 0xe6
 8013eb6:	4a11      	ldr	r2, [pc, #68]	; (8013efc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9c>)
 8013eb8:	e7da      	b.n	8013e70 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 8013eba:	3101      	adds	r1, #1
 8013ebc:	8701      	strh	r1, [r0, #56]	; 0x38
 8013ebe:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8013ec0:	b901      	cbnz	r1, 8013ec4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x64>
 8013ec2:	86c5      	strh	r5, [r0, #54]	; 0x36
 8013ec4:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8013ec6:	3901      	subs	r1, #1
 8013ec8:	b289      	uxth	r1, r1
 8013eca:	86c1      	strh	r1, [r0, #54]	; 0x36
 8013ecc:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8013ed0:	844c      	strh	r4, [r1, #34]	; 0x22
 8013ed2:	e7e6      	b.n	8013ea2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x42>
 8013ed4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8013ed8:	f7ff bf48 	b.w	8013d6c <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8013edc:	08022408 	.word	0x08022408
 8013ee0:	0802482b 	.word	0x0802482b
 8013ee4:	080224e8 	.word	0x080224e8
 8013ee8:	08022514 	.word	0x08022514
 8013eec:	080248d5 	.word	0x080248d5
 8013ef0:	08024784 	.word	0x08024784
 8013ef4:	08024bac 	.word	0x08024bac
 8013ef8:	08024790 	.word	0x08024790
 8013efc:	080247a3 	.word	0x080247a3

08013f00 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8013f00:	3a01      	subs	r2, #1
 8013f02:	b570      	push	{r4, r5, r6, lr}
 8013f04:	b292      	uxth	r2, r2
 8013f06:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8013f0a:	42b2      	cmp	r2, r6
 8013f0c:	d019      	beq.n	8013f42 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x42>
 8013f0e:	8c04      	ldrh	r4, [r0, #32]
 8013f10:	f831 5b02 	ldrh.w	r5, [r1], #2
 8013f14:	4294      	cmp	r4, r2
 8013f16:	d805      	bhi.n	8013f24 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x24>
 8013f18:	4b19      	ldr	r3, [pc, #100]	; (8013f80 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 8013f1a:	4a1a      	ldr	r2, [pc, #104]	; (8013f84 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x84>)
 8013f1c:	21c5      	movs	r1, #197	; 0xc5
 8013f1e:	481a      	ldr	r0, [pc, #104]	; (8013f88 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x88>)
 8013f20:	f00c f85e 	bl	801ffe0 <__assert_func>
 8013f24:	8bc4      	ldrh	r4, [r0, #30]
 8013f26:	4414      	add	r4, r2
 8013f28:	3a01      	subs	r2, #1
 8013f2a:	b2a4      	uxth	r4, r4
 8013f2c:	b292      	uxth	r2, r2
 8013f2e:	2c01      	cmp	r4, #1
 8013f30:	bf88      	it	hi
 8013f32:	3c02      	subhi	r4, #2
 8013f34:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8013f38:	8b64      	ldrh	r4, [r4, #26]
 8013f3a:	42ac      	cmp	r4, r5
 8013f3c:	d0e5      	beq.n	8013f0a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0xa>
 8013f3e:	2000      	movs	r0, #0
 8013f40:	bd70      	pop	{r4, r5, r6, pc}
 8013f42:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8013f46:	2400      	movs	r4, #0
 8013f48:	4413      	add	r3, r2
 8013f4a:	b2a2      	uxth	r2, r4
 8013f4c:	429a      	cmp	r2, r3
 8013f4e:	da14      	bge.n	8013f7a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x7a>
 8013f50:	8f06      	ldrh	r6, [r0, #56]	; 0x38
 8013f52:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8013f56:	4296      	cmp	r6, r2
 8013f58:	d802      	bhi.n	8013f60 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x60>
 8013f5a:	4b09      	ldr	r3, [pc, #36]	; (8013f80 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 8013f5c:	4a0b      	ldr	r2, [pc, #44]	; (8013f8c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x8c>)
 8013f5e:	e7dd      	b.n	8013f1c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x1c>
 8013f60:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 8013f62:	3401      	adds	r4, #1
 8013f64:	4432      	add	r2, r6
 8013f66:	b292      	uxth	r2, r2
 8013f68:	2a09      	cmp	r2, #9
 8013f6a:	bf88      	it	hi
 8013f6c:	3a0a      	subhi	r2, #10
 8013f6e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8013f72:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 8013f74:	42aa      	cmp	r2, r5
 8013f76:	d0e8      	beq.n	8013f4a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4a>
 8013f78:	e7e1      	b.n	8013f3e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x3e>
 8013f7a:	2001      	movs	r0, #1
 8013f7c:	e7e0      	b.n	8013f40 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x40>
 8013f7e:	bf00      	nop
 8013f80:	08022514 	.word	0x08022514
 8013f84:	08024c30 	.word	0x08024c30
 8013f88:	080224e8 	.word	0x080224e8
 8013f8c:	080248d5 	.word	0x080248d5

08013f90 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8013f90:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013f94:	4605      	mov	r5, r0
 8013f96:	4616      	mov	r6, r2
 8013f98:	1c8c      	adds	r4, r1, #2
 8013f9a:	8809      	ldrh	r1, [r1, #0]
 8013f9c:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8013fa0:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8013fa4:	42b3      	cmp	r3, r6
 8013fa6:	d124      	bne.n	8013ff2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8013fa8:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8013fac:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8013fb0:	f001 070f 	and.w	r7, r1, #15
 8013fb4:	4652      	mov	r2, sl
 8013fb6:	f8cd 8000 	str.w	r8, [sp]
 8013fba:	464b      	mov	r3, r9
 8013fbc:	4621      	mov	r1, r4
 8013fbe:	4628      	mov	r0, r5
 8013fc0:	f7ff ff9e 	bl	8013f00 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8013fc4:	4683      	mov	fp, r0
 8013fc6:	b168      	cbz	r0, 8013fe4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8013fc8:	eb0a 0109 	add.w	r1, sl, r9
 8013fcc:	463a      	mov	r2, r7
 8013fce:	4628      	mov	r0, r5
 8013fd0:	4441      	add	r1, r8
 8013fd2:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8013fd6:	4649      	mov	r1, r9
 8013fd8:	f7ff ff42 	bl	8013e60 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8013fdc:	4658      	mov	r0, fp
 8013fde:	b003      	add	sp, #12
 8013fe0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013fe4:	eb07 010a 	add.w	r1, r7, sl
 8013fe8:	4449      	add	r1, r9
 8013fea:	4441      	add	r1, r8
 8013fec:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8013ff0:	e7d2      	b.n	8013f98 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8013ff2:	f04f 0b00 	mov.w	fp, #0
 8013ff6:	e7f1      	b.n	8013fdc <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08013ff8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8013ff8:	b570      	push	{r4, r5, r6, lr}
 8013ffa:	8810      	ldrh	r0, [r2, #0]
 8013ffc:	4298      	cmp	r0, r3
 8013ffe:	d817      	bhi.n	8014030 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8014000:	1e48      	subs	r0, r1, #1
 8014002:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8014006:	4298      	cmp	r0, r3
 8014008:	d312      	bcc.n	8014030 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801400a:	2400      	movs	r4, #0
 801400c:	428c      	cmp	r4, r1
 801400e:	d20f      	bcs.n	8014030 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8014010:	1860      	adds	r0, r4, r1
 8014012:	1040      	asrs	r0, r0, #1
 8014014:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8014018:	0085      	lsls	r5, r0, #2
 801401a:	42b3      	cmp	r3, r6
 801401c:	d902      	bls.n	8014024 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 801401e:	3001      	adds	r0, #1
 8014020:	b284      	uxth	r4, r0
 8014022:	e7f3      	b.n	801400c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8014024:	d201      	bcs.n	801402a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8014026:	b281      	uxth	r1, r0
 8014028:	e7f0      	b.n	801400c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801402a:	442a      	add	r2, r5
 801402c:	8850      	ldrh	r0, [r2, #2]
 801402e:	bd70      	pop	{r4, r5, r6, pc}
 8014030:	2000      	movs	r0, #0
 8014032:	e7fc      	b.n	801402e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08014034 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8014034:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014038:	6c45      	ldr	r5, [r0, #68]	; 0x44
 801403a:	4604      	mov	r4, r0
 801403c:	260b      	movs	r6, #11
 801403e:	886f      	ldrh	r7, [r5, #2]
 8014040:	087f      	lsrs	r7, r7, #1
 8014042:	3e01      	subs	r6, #1
 8014044:	d01b      	beq.n	801407e <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 8014046:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8014048:	b92b      	cbnz	r3, 8014056 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x22>
 801404a:	4b0e      	ldr	r3, [pc, #56]	; (8014084 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x50>)
 801404c:	21c0      	movs	r1, #192	; 0xc0
 801404e:	4a0e      	ldr	r2, [pc, #56]	; (8014088 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x54>)
 8014050:	480e      	ldr	r0, [pc, #56]	; (801408c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x58>)
 8014052:	f00b ffc5 	bl	801ffe0 <__assert_func>
 8014056:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8014058:	462a      	mov	r2, r5
 801405a:	4639      	mov	r1, r7
 801405c:	4620      	mov	r0, r4
 801405e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8014062:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8014066:	4643      	mov	r3, r8
 8014068:	f7ff ffc6 	bl	8013ff8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 801406c:	b138      	cbz	r0, 801407e <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 801406e:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8014072:	4642      	mov	r2, r8
 8014074:	4620      	mov	r0, r4
 8014076:	f7ff ff8b 	bl	8013f90 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 801407a:	2800      	cmp	r0, #0
 801407c:	d1e1      	bne.n	8014042 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 801407e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014082:	bf00      	nop
 8014084:	08022408 	.word	0x08022408
 8014088:	080249a7 	.word	0x080249a7
 801408c:	080224e8 	.word	0x080224e8

08014090 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8014090:	b570      	push	{r4, r5, r6, lr}
 8014092:	694a      	ldr	r2, [r1, #20]
 8014094:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8014096:	684b      	ldr	r3, [r1, #4]
 8014098:	1b54      	subs	r4, r2, r5
 801409a:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 801409c:	f000 8106 	beq.w	80142ac <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 80140a0:	1b9b      	subs	r3, r3, r6
 80140a2:	d003      	beq.n	80140ac <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80140a4:	4363      	muls	r3, r4
 80140a6:	2210      	movs	r2, #16
 80140a8:	fb93 f3f2 	sdiv	r3, r3, r2
 80140ac:	680c      	ldr	r4, [r1, #0]
 80140ae:	698a      	ldr	r2, [r1, #24]
 80140b0:	1b65      	subs	r5, r4, r5
 80140b2:	f000 80fd 	beq.w	80142b0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 80140b6:	1b92      	subs	r2, r2, r6
 80140b8:	d003      	beq.n	80140c2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80140ba:	436a      	muls	r2, r5
 80140bc:	2410      	movs	r4, #16
 80140be:	fb92 f2f4 	sdiv	r2, r2, r4
 80140c2:	1a9b      	subs	r3, r3, r2
 80140c4:	ed9f 4a89 	vldr	s8, [pc, #548]	; 80142ec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 80140c8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80140cc:	460a      	mov	r2, r1
 80140ce:	ee07 3a90 	vmov	s15, r3
 80140d2:	f100 040c 	add.w	r4, r0, #12
 80140d6:	4603      	mov	r3, r0
 80140d8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80140dc:	ee67 7a84 	vmul.f32	s15, s15, s8
 80140e0:	ee87 3a27 	vdiv.f32	s6, s14, s15
 80140e4:	eeb1 6a43 	vneg.f32	s12, s6
 80140e8:	edd2 7a02 	vldr	s15, [r2, #8]
 80140ec:	3214      	adds	r2, #20
 80140ee:	eec7 6a27 	vdiv.f32	s13, s14, s15
 80140f2:	ece3 6a01 	vstmia	r3!, {s13}
 80140f6:	429c      	cmp	r4, r3
 80140f8:	ed52 7a02 	vldr	s15, [r2, #-8]
 80140fc:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8014100:	edc3 7a02 	vstr	s15, [r3, #8]
 8014104:	ed52 7a01 	vldr	s15, [r2, #-4]
 8014108:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801410c:	edc3 7a05 	vstr	s15, [r3, #20]
 8014110:	d1ea      	bne.n	80140e8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8014112:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8014114:	698b      	ldr	r3, [r1, #24]
 8014116:	edd0 4a02 	vldr	s9, [r0, #8]
 801411a:	1a9b      	subs	r3, r3, r2
 801411c:	edd0 3a00 	vldr	s7, [r0]
 8014120:	edd0 6a01 	vldr	s13, [r0, #4]
 8014124:	ee07 3a90 	vmov	s15, r3
 8014128:	684b      	ldr	r3, [r1, #4]
 801412a:	ee76 6ae4 	vsub.f32	s13, s13, s9
 801412e:	ed90 5a05 	vldr	s10, [r0, #20]
 8014132:	1a9b      	subs	r3, r3, r2
 8014134:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8014138:	ee73 4ae4 	vsub.f32	s9, s7, s9
 801413c:	ed90 2a03 	vldr	s4, [r0, #12]
 8014140:	ee07 3a10 	vmov	s14, r3
 8014144:	edd0 5a04 	vldr	s11, [r0, #16]
 8014148:	ee67 7a84 	vmul.f32	s15, s15, s8
 801414c:	ed90 1a07 	vldr	s2, [r0, #28]
 8014150:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014154:	edd0 2a06 	vldr	s5, [r0, #24]
 8014158:	ee75 5ac5 	vsub.f32	s11, s11, s10
 801415c:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8014160:	ee27 7a04 	vmul.f32	s14, s14, s8
 8014164:	ee32 5a45 	vsub.f32	s10, s4, s10
 8014168:	eee6 7a87 	vfma.f32	s15, s13, s14
 801416c:	ee67 7a83 	vmul.f32	s15, s15, s6
 8014170:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8014174:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8014176:	694a      	ldr	r2, [r1, #20]
 8014178:	1b13      	subs	r3, r2, r4
 801417a:	ee07 3a10 	vmov	s14, r3
 801417e:	680b      	ldr	r3, [r1, #0]
 8014180:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014184:	1b1b      	subs	r3, r3, r4
 8014186:	ee27 7a04 	vmul.f32	s14, s14, s8
 801418a:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 801418e:	ee07 3a10 	vmov	s14, r3
 8014192:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014196:	ee27 7a04 	vmul.f32	s14, s14, s8
 801419a:	eee6 4a87 	vfma.f32	s9, s13, s14
 801419e:	ee64 4a86 	vmul.f32	s9, s9, s12
 80141a2:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 80141a6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80141a8:	698b      	ldr	r3, [r1, #24]
 80141aa:	1a9b      	subs	r3, r3, r2
 80141ac:	ee06 3a90 	vmov	s13, r3
 80141b0:	684b      	ldr	r3, [r1, #4]
 80141b2:	1a9b      	subs	r3, r3, r2
 80141b4:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80141b8:	ee07 3a10 	vmov	s14, r3
 80141bc:	ee66 6a84 	vmul.f32	s13, s13, s8
 80141c0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80141c4:	ee65 6a66 	vnmul.f32	s13, s10, s13
 80141c8:	ee27 7a04 	vmul.f32	s14, s14, s8
 80141cc:	eee5 6a87 	vfma.f32	s13, s11, s14
 80141d0:	ee66 6a83 	vmul.f32	s13, s13, s6
 80141d4:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 80141d8:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80141da:	694a      	ldr	r2, [r1, #20]
 80141dc:	1b13      	subs	r3, r2, r4
 80141de:	ee07 3a10 	vmov	s14, r3
 80141e2:	680b      	ldr	r3, [r1, #0]
 80141e4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80141e8:	1b1b      	subs	r3, r3, r4
 80141ea:	ee27 7a04 	vmul.f32	s14, s14, s8
 80141ee:	ee25 5a47 	vnmul.f32	s10, s10, s14
 80141f2:	ee07 3a10 	vmov	s14, r3
 80141f6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80141fa:	ee27 7a04 	vmul.f32	s14, s14, s8
 80141fe:	eea5 5a87 	vfma.f32	s10, s11, s14
 8014202:	edd0 5a08 	vldr	s11, [r0, #32]
 8014206:	ee31 1a65 	vsub.f32	s2, s2, s11
 801420a:	ee72 5ae5 	vsub.f32	s11, s5, s11
 801420e:	ee25 5a06 	vmul.f32	s10, s10, s12
 8014212:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 8014216:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8014218:	698b      	ldr	r3, [r1, #24]
 801421a:	1a9b      	subs	r3, r3, r2
 801421c:	ee07 3a10 	vmov	s14, r3
 8014220:	684b      	ldr	r3, [r1, #4]
 8014222:	1a9b      	subs	r3, r3, r2
 8014224:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014228:	ee01 3a90 	vmov	s3, r3
 801422c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8014230:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8014234:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8014238:	ee61 1a84 	vmul.f32	s3, s3, s8
 801423c:	eea1 7a21 	vfma.f32	s14, s2, s3
 8014240:	ee27 7a03 	vmul.f32	s14, s14, s6
 8014244:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8014248:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801424a:	694a      	ldr	r2, [r1, #20]
 801424c:	1b13      	subs	r3, r2, r4
 801424e:	ee03 3a10 	vmov	s6, r3
 8014252:	680b      	ldr	r3, [r1, #0]
 8014254:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8014258:	1b1b      	subs	r3, r3, r4
 801425a:	ee23 3a04 	vmul.f32	s6, s6, s8
 801425e:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8014262:	ee03 3a10 	vmov	s6, r3
 8014266:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801426a:	ee23 4a04 	vmul.f32	s8, s6, s8
 801426e:	eee1 5a04 	vfma.f32	s11, s2, s8
 8014272:	ee25 6a86 	vmul.f32	s12, s11, s12
 8014276:	ee62 5a67 	vnmul.f32	s11, s4, s15
 801427a:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 801427e:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8014282:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8014286:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801428a:	dd13      	ble.n	80142b4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 801428c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8014290:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8014294:	63c3      	str	r3, [r0, #60]	; 0x3c
 8014296:	eee3 7a87 	vfma.f32	s15, s7, s14
 801429a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801429e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80142a2:	dd15      	ble.n	80142d0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 80142a4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80142a8:	6403      	str	r3, [r0, #64]	; 0x40
 80142aa:	bd70      	pop	{r4, r5, r6, pc}
 80142ac:	4623      	mov	r3, r4
 80142ae:	e6fd      	b.n	80140ac <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80142b0:	462a      	mov	r2, r5
 80142b2:	e706      	b.n	80140c2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80142b4:	d502      	bpl.n	80142bc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 80142b6:	f647 73ff 	movw	r3, #32767	; 0x7fff
 80142ba:	e7e9      	b.n	8014290 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 80142bc:	ee22 2a64 	vnmul.f32	s4, s4, s9
 80142c0:	eea3 2a85 	vfma.f32	s4, s7, s10
 80142c4:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 80142c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80142cc:	dade      	bge.n	801428c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 80142ce:	e7f2      	b.n	80142b6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 80142d0:	d502      	bpl.n	80142d8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 80142d2:	f647 73ff 	movw	r3, #32767	; 0x7fff
 80142d6:	e7e7      	b.n	80142a8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 80142d8:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 80142dc:	eee3 4a86 	vfma.f32	s9, s7, s12
 80142e0:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 80142e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80142e8:	dadc      	bge.n	80142a4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 80142ea:	e7f2      	b.n	80142d2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 80142ec:	3d800000 	.word	0x3d800000

080142f0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 80142f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80142f4:	2714      	movs	r7, #20
 80142f6:	435f      	muls	r7, r3
 80142f8:	eb02 0c07 	add.w	ip, r2, r7
 80142fc:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8014300:	f115 0e0f 	adds.w	lr, r5, #15
 8014304:	d433      	bmi.n	801436e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x7e>
 8014306:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 801430a:	9c08      	ldr	r4, [sp, #32]
 801430c:	2614      	movs	r6, #20
 801430e:	f8c0 e014 	str.w	lr, [r0, #20]
 8014312:	4366      	muls	r6, r4
 8014314:	eb02 0806 	add.w	r8, r2, r6
 8014318:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801431c:	f115 040f 	adds.w	r4, r5, #15
 8014320:	d431      	bmi.n	8014386 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x96>
 8014322:	1124      	asrs	r4, r4, #4
 8014324:	eba4 040e 	sub.w	r4, r4, lr
 8014328:	6184      	str	r4, [r0, #24]
 801432a:	2c00      	cmp	r4, #0
 801432c:	f000 80aa 	beq.w	8014484 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x194>
 8014330:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8014334:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8014338:	5995      	ldr	r5, [r2, r6]
 801433a:	eba4 0809 	sub.w	r8, r4, r9
 801433e:	59d4      	ldr	r4, [r2, r7]
 8014340:	eba5 0a04 	sub.w	sl, r5, r4
 8014344:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8014348:	ea4f 150a 	mov.w	r5, sl, lsl #4
 801434c:	2e00      	cmp	r6, #0
 801434e:	fb0e fe05 	mul.w	lr, lr, r5
 8014352:	fb0a ee19 	mls	lr, sl, r9, lr
 8014356:	fb08 e404 	mla	r4, r8, r4, lr
 801435a:	f104 34ff 	add.w	r4, r4, #4294967295
 801435e:	4434      	add	r4, r6
 8014360:	dc1d      	bgt.n	801439e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xae>
 8014362:	4b5b      	ldr	r3, [pc, #364]	; (80144d0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1e0>)
 8014364:	21f7      	movs	r1, #247	; 0xf7
 8014366:	4a5b      	ldr	r2, [pc, #364]	; (80144d4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1e4>)
 8014368:	485b      	ldr	r0, [pc, #364]	; (80144d8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1e8>)
 801436a:	f00b fe39 	bl	801ffe0 <__assert_func>
 801436e:	2410      	movs	r4, #16
 8014370:	f1c5 0501 	rsb	r5, r5, #1
 8014374:	fb9e fef4 	sdiv	lr, lr, r4
 8014378:	f015 050f 	ands.w	r5, r5, #15
 801437c:	bf18      	it	ne
 801437e:	2501      	movne	r5, #1
 8014380:	ebae 0e05 	sub.w	lr, lr, r5
 8014384:	e7c1      	b.n	801430a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1a>
 8014386:	f04f 0910 	mov.w	r9, #16
 801438a:	f1c5 0501 	rsb	r5, r5, #1
 801438e:	fb94 f4f9 	sdiv	r4, r4, r9
 8014392:	f015 050f 	ands.w	r5, r5, #15
 8014396:	bf18      	it	ne
 8014398:	2501      	movne	r5, #1
 801439a:	1b64      	subs	r4, r4, r5
 801439c:	e7c2      	b.n	8014324 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x34>
 801439e:	2c00      	cmp	r4, #0
 80143a0:	db72      	blt.n	8014488 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x198>
 80143a2:	fb94 fef6 	sdiv	lr, r4, r6
 80143a6:	fb06 441e 	mls	r4, r6, lr, r4
 80143aa:	f8c0 e000 	str.w	lr, [r0]
 80143ae:	6104      	str	r4, [r0, #16]
 80143b0:	2d00      	cmp	r5, #0
 80143b2:	db7b      	blt.n	80144ac <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1bc>
 80143b4:	fb95 f4f6 	sdiv	r4, r5, r6
 80143b8:	fb06 5514 	mls	r5, r6, r4, r5
 80143bc:	6044      	str	r4, [r0, #4]
 80143be:	6085      	str	r5, [r0, #8]
 80143c0:	60c6      	str	r6, [r0, #12]
 80143c2:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80143c6:	f8dc 4004 	ldr.w	r4, [ip, #4]
 80143ca:	6945      	ldr	r5, [r0, #20]
 80143cc:	59d2      	ldr	r2, [r2, r7]
 80143ce:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 80143d2:	eddf 6a42 	vldr	s13, [pc, #264]	; 80144dc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1ec>
 80143d6:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 80143da:	ee07 4a10 	vmov	s14, r4
 80143de:	6804      	ldr	r4, [r0, #0]
 80143e0:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 80143e4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80143e8:	ee07 2a90 	vmov	s15, r2
 80143ec:	ee27 7a26 	vmul.f32	s14, s14, s13
 80143f0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80143f4:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80143f8:	edd3 6a00 	vldr	s13, [r3]
 80143fc:	eee6 6a07 	vfma.f32	s13, s12, s14
 8014400:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 8014404:	eee6 6a27 	vfma.f32	s13, s12, s15
 8014408:	edc0 6a07 	vstr	s13, [r0, #28]
 801440c:	edd0 6a01 	vldr	s13, [r0, #4]
 8014410:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 8014414:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8014418:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801441c:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8014420:	ed80 6a08 	vstr	s12, [r0, #32]
 8014424:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8014426:	6242      	str	r2, [r0, #36]	; 0x24
 8014428:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 801442c:	ed93 6a03 	vldr	s12, [r3, #12]
 8014430:	eea5 6a87 	vfma.f32	s12, s11, s14
 8014434:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8014438:	eea5 6aa7 	vfma.f32	s12, s11, s15
 801443c:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 8014440:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8014444:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 8014448:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801444c:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8014450:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8014452:	6302      	str	r2, [r0, #48]	; 0x30
 8014454:	ed93 6a06 	vldr	s12, [r3, #24]
 8014458:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 801445c:	eea5 6a87 	vfma.f32	s12, s11, s14
 8014460:	eeb0 7a46 	vmov.f32	s14, s12
 8014464:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 8014468:	eea6 7a27 	vfma.f32	s14, s12, s15
 801446c:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8014470:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 8014474:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 8014478:	eee6 7a87 	vfma.f32	s15, s13, s14
 801447c:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 8014480:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 8014482:	63c3      	str	r3, [r0, #60]	; 0x3c
 8014484:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8014488:	4264      	negs	r4, r4
 801448a:	fb94 fef6 	sdiv	lr, r4, r6
 801448e:	f1ce 0800 	rsb	r8, lr, #0
 8014492:	fb06 441e 	mls	r4, r6, lr, r4
 8014496:	f8c0 8000 	str.w	r8, [r0]
 801449a:	6104      	str	r4, [r0, #16]
 801449c:	2c00      	cmp	r4, #0
 801449e:	d087      	beq.n	80143b0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xc0>
 80144a0:	ea6f 0e0e 	mvn.w	lr, lr
 80144a4:	1b34      	subs	r4, r6, r4
 80144a6:	f8c0 e000 	str.w	lr, [r0]
 80144aa:	e780      	b.n	80143ae <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xbe>
 80144ac:	426d      	negs	r5, r5
 80144ae:	fb95 f4f6 	sdiv	r4, r5, r6
 80144b2:	f1c4 0e00 	rsb	lr, r4, #0
 80144b6:	fb06 5514 	mls	r5, r6, r4, r5
 80144ba:	f8c0 e004 	str.w	lr, [r0, #4]
 80144be:	6085      	str	r5, [r0, #8]
 80144c0:	2d00      	cmp	r5, #0
 80144c2:	f43f af7d 	beq.w	80143c0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xd0>
 80144c6:	43e4      	mvns	r4, r4
 80144c8:	1b75      	subs	r5, r6, r5
 80144ca:	6044      	str	r4, [r0, #4]
 80144cc:	e777      	b.n	80143be <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xce>
 80144ce:	bf00      	nop
 80144d0:	08024d01 	.word	0x08024d01
 80144d4:	08024d40 	.word	0x08024d40
 80144d8:	08024d11 	.word	0x08024d11
 80144dc:	3d800000 	.word	0x3d800000

080144e0 <_ZN8touchgfx7Unicode6strlenEPKt>:
 80144e0:	4602      	mov	r2, r0
 80144e2:	b148      	cbz	r0, 80144f8 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 80144e4:	2300      	movs	r3, #0
 80144e6:	b298      	uxth	r0, r3
 80144e8:	3301      	adds	r3, #1
 80144ea:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 80144ee:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 80144f2:	2900      	cmp	r1, #0
 80144f4:	d1f7      	bne.n	80144e6 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 80144f6:	4770      	bx	lr
 80144f8:	4770      	bx	lr

080144fa <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 80144fa:	b530      	push	{r4, r5, lr}
 80144fc:	4604      	mov	r4, r0
 80144fe:	b159      	cbz	r1, 8014518 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8014500:	b148      	cbz	r0, 8014516 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8014502:	2300      	movs	r3, #0
 8014504:	b298      	uxth	r0, r3
 8014506:	4282      	cmp	r2, r0
 8014508:	d905      	bls.n	8014516 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801450a:	5ccd      	ldrb	r5, [r1, r3]
 801450c:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8014510:	3301      	adds	r3, #1
 8014512:	2d00      	cmp	r5, #0
 8014514:	d1f6      	bne.n	8014504 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 8014516:	bd30      	pop	{r4, r5, pc}
 8014518:	4608      	mov	r0, r1
 801451a:	e7fc      	b.n	8014516 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

0801451c <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>:
 801451c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801451e:	468c      	mov	ip, r1
 8014520:	b08b      	sub	sp, #44	; 0x2c
 8014522:	2100      	movs	r1, #0
 8014524:	ae01      	add	r6, sp, #4
 8014526:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801452a:	211f      	movs	r1, #31
 801452c:	fbb0 f7f3 	udiv	r7, r0, r3
 8014530:	fb03 0517 	mls	r5, r3, r7, r0
 8014534:	4638      	mov	r0, r7
 8014536:	b2ec      	uxtb	r4, r5
 8014538:	2d09      	cmp	r5, #9
 801453a:	bfd4      	ite	le
 801453c:	3430      	addle	r4, #48	; 0x30
 801453e:	3457      	addgt	r4, #87	; 0x57
 8014540:	b2e4      	uxtb	r4, r4
 8014542:	558c      	strb	r4, [r1, r6]
 8014544:	1e4c      	subs	r4, r1, #1
 8014546:	b92f      	cbnz	r7, 8014554 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x38>
 8014548:	4431      	add	r1, r6
 801454a:	4660      	mov	r0, ip
 801454c:	f7ff ffd5 	bl	80144fa <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8014550:	b00b      	add	sp, #44	; 0x2c
 8014552:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014554:	4621      	mov	r1, r4
 8014556:	e7e9      	b.n	801452c <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x10>

08014558 <_ZN8touchgfx7Unicode4itoaElPtti>:
 8014558:	b5f0      	push	{r4, r5, r6, r7, lr}
 801455a:	4607      	mov	r7, r0
 801455c:	b08b      	sub	sp, #44	; 0x2c
 801455e:	4608      	mov	r0, r1
 8014560:	b341      	cbz	r1, 80145b4 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 8014562:	1e99      	subs	r1, r3, #2
 8014564:	2922      	cmp	r1, #34	; 0x22
 8014566:	d825      	bhi.n	80145b4 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 8014568:	2100      	movs	r1, #0
 801456a:	463c      	mov	r4, r7
 801456c:	261f      	movs	r6, #31
 801456e:	f10d 0c04 	add.w	ip, sp, #4
 8014572:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8014576:	1e71      	subs	r1, r6, #1
 8014578:	fb94 fef3 	sdiv	lr, r4, r3
 801457c:	fb03 441e 	mls	r4, r3, lr, r4
 8014580:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8014584:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 8014588:	b2ec      	uxtb	r4, r5
 801458a:	2d09      	cmp	r5, #9
 801458c:	bfd4      	ite	le
 801458e:	3430      	addle	r4, #48	; 0x30
 8014590:	3457      	addgt	r4, #87	; 0x57
 8014592:	b2e4      	uxtb	r4, r4
 8014594:	f80c 4006 	strb.w	r4, [ip, r6]
 8014598:	4674      	mov	r4, lr
 801459a:	b96c      	cbnz	r4, 80145b8 <_ZN8touchgfx7Unicode4itoaElPtti+0x60>
 801459c:	2f00      	cmp	r7, #0
 801459e:	da05      	bge.n	80145ac <_ZN8touchgfx7Unicode4itoaElPtti+0x54>
 80145a0:	ab0a      	add	r3, sp, #40	; 0x28
 80145a2:	4419      	add	r1, r3
 80145a4:	232d      	movs	r3, #45	; 0x2d
 80145a6:	f801 3c24 	strb.w	r3, [r1, #-36]
 80145aa:	1eb1      	subs	r1, r6, #2
 80145ac:	3101      	adds	r1, #1
 80145ae:	4461      	add	r1, ip
 80145b0:	f7ff ffa3 	bl	80144fa <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80145b4:	b00b      	add	sp, #44	; 0x2c
 80145b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80145b8:	460e      	mov	r6, r1
 80145ba:	e7dc      	b.n	8014576 <_ZN8touchgfx7Unicode4itoaElPtti+0x1e>

080145bc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 80145bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80145c0:	b085      	sub	sp, #20
 80145c2:	4691      	mov	r9, r2
 80145c4:	6802      	ldr	r2, [r0, #0]
 80145c6:	4688      	mov	r8, r1
 80145c8:	461c      	mov	r4, r3
 80145ca:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 80145ce:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 80145d2:	4683      	mov	fp, r0
 80145d4:	4610      	mov	r0, r2
 80145d6:	9103      	str	r1, [sp, #12]
 80145d8:	9302      	str	r3, [sp, #8]
 80145da:	9201      	str	r2, [sp, #4]
 80145dc:	f7ff ff80 	bl	80144e0 <_ZN8touchgfx7Unicode6strlenEPKt>
 80145e0:	f1b8 0f00 	cmp.w	r8, #0
 80145e4:	bf0c      	ite	eq
 80145e6:	4684      	moveq	ip, r0
 80145e8:	f100 0c01 	addne.w	ip, r0, #1
 80145ec:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 80145f0:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 80145f4:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80145f6:	fa1f fc8c 	uxth.w	ip, ip
 80145fa:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80145fc:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8014600:	9903      	ldr	r1, [sp, #12]
 8014602:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8014606:	d041      	beq.n	801468c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8014608:	d834      	bhi.n	8014674 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 801460a:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 801460e:	d059      	beq.n	80146c4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8014610:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8014614:	d03a      	beq.n	801468c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8014616:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 801461a:	d034      	beq.n	8014686 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 801461c:	2400      	movs	r4, #0
 801461e:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8014622:	3a01      	subs	r2, #1
 8014624:	b169      	cbz	r1, 8014642 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8014626:	9911      	ldr	r1, [sp, #68]	; 0x44
 8014628:	458c      	cmp	ip, r1
 801462a:	da09      	bge.n	8014640 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 801462c:	eba1 010c 	sub.w	r1, r1, ip
 8014630:	b289      	uxth	r1, r1
 8014632:	b933      	cbnz	r3, 8014642 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8014634:	2e00      	cmp	r6, #0
 8014636:	d051      	beq.n	80146dc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8014638:	2800      	cmp	r0, #0
 801463a:	d04f      	beq.n	80146dc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801463c:	440c      	add	r4, r1
 801463e:	b2a4      	uxth	r4, r4
 8014640:	2100      	movs	r1, #0
 8014642:	682b      	ldr	r3, [r5, #0]
 8014644:	4293      	cmp	r3, r2
 8014646:	da07      	bge.n	8014658 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8014648:	f1b8 0f00 	cmp.w	r8, #0
 801464c:	d004      	beq.n	8014658 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801464e:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8014652:	682b      	ldr	r3, [r5, #0]
 8014654:	3301      	adds	r3, #1
 8014656:	602b      	str	r3, [r5, #0]
 8014658:	2730      	movs	r7, #48	; 0x30
 801465a:	2c00      	cmp	r4, #0
 801465c:	d04e      	beq.n	80146fc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801465e:	682e      	ldr	r6, [r5, #0]
 8014660:	3c01      	subs	r4, #1
 8014662:	42b2      	cmp	r2, r6
 8014664:	b2a4      	uxth	r4, r4
 8014666:	dd49      	ble.n	80146fc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8014668:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801466c:	682b      	ldr	r3, [r5, #0]
 801466e:	3301      	adds	r3, #1
 8014670:	602b      	str	r3, [r5, #0]
 8014672:	e7f2      	b.n	801465a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8014674:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 8014678:	d01d      	beq.n	80146b6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 801467a:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 801467e:	d002      	beq.n	8014686 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8014680:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 8014684:	e7c9      	b.n	801461a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8014686:	4684      	mov	ip, r0
 8014688:	f04f 0800 	mov.w	r8, #0
 801468c:	2c00      	cmp	r4, #0
 801468e:	d0c6      	beq.n	801461e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8014690:	b947      	cbnz	r7, 80146a4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8014692:	2801      	cmp	r0, #1
 8014694:	d106      	bne.n	80146a4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8014696:	8814      	ldrh	r4, [r2, #0]
 8014698:	2c30      	cmp	r4, #48	; 0x30
 801469a:	bf02      	ittt	eq
 801469c:	3202      	addeq	r2, #2
 801469e:	4638      	moveq	r0, r7
 80146a0:	f8cb 2000 	streq.w	r2, [fp]
 80146a4:	45bc      	cmp	ip, r7
 80146a6:	da14      	bge.n	80146d2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 80146a8:	b2bf      	uxth	r7, r7
 80146aa:	eba7 040c 	sub.w	r4, r7, ip
 80146ae:	46bc      	mov	ip, r7
 80146b0:	b2a4      	uxth	r4, r4
 80146b2:	2600      	movs	r6, #0
 80146b4:	e7b3      	b.n	801461e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80146b6:	4684      	mov	ip, r0
 80146b8:	b16c      	cbz	r4, 80146d6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 80146ba:	42b8      	cmp	r0, r7
 80146bc:	dd00      	ble.n	80146c0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 80146be:	b2b8      	uxth	r0, r7
 80146c0:	2400      	movs	r4, #0
 80146c2:	e003      	b.n	80146cc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 80146c4:	f04f 0c01 	mov.w	ip, #1
 80146c8:	2400      	movs	r4, #0
 80146ca:	4660      	mov	r0, ip
 80146cc:	4626      	mov	r6, r4
 80146ce:	46a0      	mov	r8, r4
 80146d0:	e7a5      	b.n	801461e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80146d2:	2400      	movs	r4, #0
 80146d4:	e7ed      	b.n	80146b2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 80146d6:	4626      	mov	r6, r4
 80146d8:	46a0      	mov	r8, r4
 80146da:	e7a0      	b.n	801461e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80146dc:	2900      	cmp	r1, #0
 80146de:	d0b0      	beq.n	8014642 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80146e0:	2720      	movs	r7, #32
 80146e2:	682e      	ldr	r6, [r5, #0]
 80146e4:	2900      	cmp	r1, #0
 80146e6:	d0ac      	beq.n	8014642 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80146e8:	3901      	subs	r1, #1
 80146ea:	4296      	cmp	r6, r2
 80146ec:	b289      	uxth	r1, r1
 80146ee:	daa7      	bge.n	8014640 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 80146f0:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 80146f4:	682b      	ldr	r3, [r5, #0]
 80146f6:	3301      	adds	r3, #1
 80146f8:	602b      	str	r3, [r5, #0]
 80146fa:	e7f2      	b.n	80146e2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 80146fc:	b188      	cbz	r0, 8014722 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 80146fe:	682b      	ldr	r3, [r5, #0]
 8014700:	3801      	subs	r0, #1
 8014702:	429a      	cmp	r2, r3
 8014704:	b280      	uxth	r0, r0
 8014706:	dd0c      	ble.n	8014722 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8014708:	f8db 3000 	ldr.w	r3, [fp]
 801470c:	1c9c      	adds	r4, r3, #2
 801470e:	f8cb 4000 	str.w	r4, [fp]
 8014712:	881c      	ldrh	r4, [r3, #0]
 8014714:	682b      	ldr	r3, [r5, #0]
 8014716:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 801471a:	682b      	ldr	r3, [r5, #0]
 801471c:	3301      	adds	r3, #1
 801471e:	602b      	str	r3, [r5, #0]
 8014720:	e7ec      	b.n	80146fc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8014722:	2620      	movs	r6, #32
 8014724:	b151      	cbz	r1, 801473c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8014726:	6828      	ldr	r0, [r5, #0]
 8014728:	3901      	subs	r1, #1
 801472a:	4282      	cmp	r2, r0
 801472c:	b289      	uxth	r1, r1
 801472e:	dd05      	ble.n	801473c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8014730:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8014734:	682b      	ldr	r3, [r5, #0]
 8014736:	3301      	adds	r3, #1
 8014738:	602b      	str	r3, [r5, #0]
 801473a:	e7f3      	b.n	8014724 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 801473c:	b005      	add	sp, #20
 801473e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014742 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8014742:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014746:	2400      	movs	r4, #0
 8014748:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 801474c:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 8014750:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 8014754:	8014      	strh	r4, [r2, #0]
 8014756:	701c      	strb	r4, [r3, #0]
 8014758:	f888 4000 	strb.w	r4, [r8]
 801475c:	f88c 4000 	strb.w	r4, [ip]
 8014760:	f88e 4000 	strb.w	r4, [lr]
 8014764:	703c      	strb	r4, [r7, #0]
 8014766:	6804      	ldr	r4, [r0, #0]
 8014768:	b1a4      	cbz	r4, 8014794 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 801476a:	8824      	ldrh	r4, [r4, #0]
 801476c:	f04f 0901 	mov.w	r9, #1
 8014770:	b314      	cbz	r4, 80147b8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8014772:	2c2b      	cmp	r4, #43	; 0x2b
 8014774:	d001      	beq.n	801477a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8014776:	2c20      	cmp	r4, #32
 8014778:	d110      	bne.n	801479c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 801477a:	8014      	strh	r4, [r2, #0]
 801477c:	6804      	ldr	r4, [r0, #0]
 801477e:	b10c      	cbz	r4, 8014784 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8014780:	3402      	adds	r4, #2
 8014782:	6004      	str	r4, [r0, #0]
 8014784:	680c      	ldr	r4, [r1, #0]
 8014786:	b10c      	cbz	r4, 801478c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8014788:	3401      	adds	r4, #1
 801478a:	600c      	str	r4, [r1, #0]
 801478c:	6804      	ldr	r4, [r0, #0]
 801478e:	b17c      	cbz	r4, 80147b0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8014790:	8824      	ldrh	r4, [r4, #0]
 8014792:	e7ed      	b.n	8014770 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8014794:	680c      	ldr	r4, [r1, #0]
 8014796:	b17c      	cbz	r4, 80147b8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8014798:	7824      	ldrb	r4, [r4, #0]
 801479a:	e7e7      	b.n	801476c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 801479c:	2c2d      	cmp	r4, #45	; 0x2d
 801479e:	d102      	bne.n	80147a6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 80147a0:	f883 9000 	strb.w	r9, [r3]
 80147a4:	e7ea      	b.n	801477c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 80147a6:	2c23      	cmp	r4, #35	; 0x23
 80147a8:	d107      	bne.n	80147ba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 80147aa:	f888 9000 	strb.w	r9, [r8]
 80147ae:	e7e5      	b.n	801477c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 80147b0:	680c      	ldr	r4, [r1, #0]
 80147b2:	b10c      	cbz	r4, 80147b8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80147b4:	7824      	ldrb	r4, [r4, #0]
 80147b6:	e7db      	b.n	8014770 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 80147b8:	2400      	movs	r4, #0
 80147ba:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 80147be:	2b09      	cmp	r3, #9
 80147c0:	d901      	bls.n	80147c6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 80147c2:	2c2a      	cmp	r4, #42	; 0x2a
 80147c4:	d122      	bne.n	801480c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80147c6:	2301      	movs	r3, #1
 80147c8:	2c30      	cmp	r4, #48	; 0x30
 80147ca:	f88e 3000 	strb.w	r3, [lr]
 80147ce:	d10d      	bne.n	80147ec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 80147d0:	f88c 3000 	strb.w	r3, [ip]
 80147d4:	6803      	ldr	r3, [r0, #0]
 80147d6:	b10b      	cbz	r3, 80147dc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 80147d8:	3302      	adds	r3, #2
 80147da:	6003      	str	r3, [r0, #0]
 80147dc:	680b      	ldr	r3, [r1, #0]
 80147de:	b10b      	cbz	r3, 80147e4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 80147e0:	3301      	adds	r3, #1
 80147e2:	600b      	str	r3, [r1, #0]
 80147e4:	6803      	ldr	r3, [r0, #0]
 80147e6:	2b00      	cmp	r3, #0
 80147e8:	d02f      	beq.n	801484a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 80147ea:	881c      	ldrh	r4, [r3, #0]
 80147ec:	2c2a      	cmp	r4, #42	; 0x2a
 80147ee:	d135      	bne.n	801485c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 80147f0:	f04f 33ff 	mov.w	r3, #4294967295
 80147f4:	6033      	str	r3, [r6, #0]
 80147f6:	6803      	ldr	r3, [r0, #0]
 80147f8:	b10b      	cbz	r3, 80147fe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 80147fa:	3302      	adds	r3, #2
 80147fc:	6003      	str	r3, [r0, #0]
 80147fe:	680b      	ldr	r3, [r1, #0]
 8014800:	b10b      	cbz	r3, 8014806 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8014802:	3301      	adds	r3, #1
 8014804:	600b      	str	r3, [r1, #0]
 8014806:	6803      	ldr	r3, [r0, #0]
 8014808:	b31b      	cbz	r3, 8014852 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 801480a:	881c      	ldrh	r4, [r3, #0]
 801480c:	2c2e      	cmp	r4, #46	; 0x2e
 801480e:	d11a      	bne.n	8014846 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8014810:	2301      	movs	r3, #1
 8014812:	703b      	strb	r3, [r7, #0]
 8014814:	6803      	ldr	r3, [r0, #0]
 8014816:	b10b      	cbz	r3, 801481c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8014818:	3302      	adds	r3, #2
 801481a:	6003      	str	r3, [r0, #0]
 801481c:	680b      	ldr	r3, [r1, #0]
 801481e:	b10b      	cbz	r3, 8014824 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8014820:	3301      	adds	r3, #1
 8014822:	600b      	str	r3, [r1, #0]
 8014824:	6803      	ldr	r3, [r0, #0]
 8014826:	2b00      	cmp	r3, #0
 8014828:	d036      	beq.n	8014898 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 801482a:	881b      	ldrh	r3, [r3, #0]
 801482c:	2b2a      	cmp	r3, #42	; 0x2a
 801482e:	d137      	bne.n	80148a0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8014830:	f04f 33ff 	mov.w	r3, #4294967295
 8014834:	602b      	str	r3, [r5, #0]
 8014836:	6803      	ldr	r3, [r0, #0]
 8014838:	b10b      	cbz	r3, 801483e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 801483a:	3302      	adds	r3, #2
 801483c:	6003      	str	r3, [r0, #0]
 801483e:	680b      	ldr	r3, [r1, #0]
 8014840:	b10b      	cbz	r3, 8014846 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8014842:	3301      	adds	r3, #1
 8014844:	600b      	str	r3, [r1, #0]
 8014846:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801484a:	680c      	ldr	r4, [r1, #0]
 801484c:	b134      	cbz	r4, 801485c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801484e:	7824      	ldrb	r4, [r4, #0]
 8014850:	e7cc      	b.n	80147ec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8014852:	680b      	ldr	r3, [r1, #0]
 8014854:	2b00      	cmp	r3, #0
 8014856:	d0f6      	beq.n	8014846 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8014858:	781c      	ldrb	r4, [r3, #0]
 801485a:	e7d7      	b.n	801480c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801485c:	2300      	movs	r3, #0
 801485e:	220a      	movs	r2, #10
 8014860:	6033      	str	r3, [r6, #0]
 8014862:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8014866:	fa1f f38c 	uxth.w	r3, ip
 801486a:	2b09      	cmp	r3, #9
 801486c:	d8ce      	bhi.n	801480c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801486e:	6833      	ldr	r3, [r6, #0]
 8014870:	fb02 c303 	mla	r3, r2, r3, ip
 8014874:	6033      	str	r3, [r6, #0]
 8014876:	6803      	ldr	r3, [r0, #0]
 8014878:	b10b      	cbz	r3, 801487e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 801487a:	3302      	adds	r3, #2
 801487c:	6003      	str	r3, [r0, #0]
 801487e:	680b      	ldr	r3, [r1, #0]
 8014880:	b10b      	cbz	r3, 8014886 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8014882:	3301      	adds	r3, #1
 8014884:	600b      	str	r3, [r1, #0]
 8014886:	6803      	ldr	r3, [r0, #0]
 8014888:	b10b      	cbz	r3, 801488e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 801488a:	881c      	ldrh	r4, [r3, #0]
 801488c:	e7e9      	b.n	8014862 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801488e:	680c      	ldr	r4, [r1, #0]
 8014890:	2c00      	cmp	r4, #0
 8014892:	d0e6      	beq.n	8014862 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8014894:	7824      	ldrb	r4, [r4, #0]
 8014896:	e7e4      	b.n	8014862 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8014898:	680b      	ldr	r3, [r1, #0]
 801489a:	b10b      	cbz	r3, 80148a0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 801489c:	781b      	ldrb	r3, [r3, #0]
 801489e:	e7c5      	b.n	801482c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 80148a0:	2200      	movs	r2, #0
 80148a2:	240a      	movs	r4, #10
 80148a4:	602a      	str	r2, [r5, #0]
 80148a6:	3b30      	subs	r3, #48	; 0x30
 80148a8:	682a      	ldr	r2, [r5, #0]
 80148aa:	b29e      	uxth	r6, r3
 80148ac:	2e09      	cmp	r6, #9
 80148ae:	d813      	bhi.n	80148d8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 80148b0:	fb04 3302 	mla	r3, r4, r2, r3
 80148b4:	602b      	str	r3, [r5, #0]
 80148b6:	6803      	ldr	r3, [r0, #0]
 80148b8:	b10b      	cbz	r3, 80148be <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 80148ba:	3302      	adds	r3, #2
 80148bc:	6003      	str	r3, [r0, #0]
 80148be:	680b      	ldr	r3, [r1, #0]
 80148c0:	b10b      	cbz	r3, 80148c6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 80148c2:	3301      	adds	r3, #1
 80148c4:	600b      	str	r3, [r1, #0]
 80148c6:	6803      	ldr	r3, [r0, #0]
 80148c8:	b10b      	cbz	r3, 80148ce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 80148ca:	881b      	ldrh	r3, [r3, #0]
 80148cc:	e7eb      	b.n	80148a6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 80148ce:	680b      	ldr	r3, [r1, #0]
 80148d0:	2b00      	cmp	r3, #0
 80148d2:	d0e8      	beq.n	80148a6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 80148d4:	781b      	ldrb	r3, [r3, #0]
 80148d6:	e7e6      	b.n	80148a6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 80148d8:	2a06      	cmp	r2, #6
 80148da:	bfa8      	it	ge
 80148dc:	2206      	movge	r2, #6
 80148de:	602a      	str	r2, [r5, #0]
 80148e0:	e7b1      	b.n	8014846 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

080148e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 80148e2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80148e6:	b0a3      	sub	sp, #140	; 0x8c
 80148e8:	2600      	movs	r6, #0
 80148ea:	4607      	mov	r7, r0
 80148ec:	4688      	mov	r8, r1
 80148ee:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 80148f2:	4631      	mov	r1, r6
 80148f4:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 80148f6:	4648      	mov	r0, r9
 80148f8:	960d      	str	r6, [sp, #52]	; 0x34
 80148fa:	e9cd 3208 	strd	r3, r2, [sp, #32]
 80148fe:	2242      	movs	r2, #66	; 0x42
 8014900:	f00b fc14 	bl	802012c <memset>
 8014904:	b15f      	cbz	r7, 801491e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8014906:	f108 3aff 	add.w	sl, r8, #4294967295
 801490a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801490c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801490e:	b152      	cbz	r2, 8014926 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8014910:	8812      	ldrh	r2, [r2, #0]
 8014912:	b10a      	cbz	r2, 8014918 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8014914:	459a      	cmp	sl, r3
 8014916:	dc2e      	bgt.n	8014976 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8014918:	2200      	movs	r2, #0
 801491a:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801491e:	4638      	mov	r0, r7
 8014920:	b023      	add	sp, #140	; 0x8c
 8014922:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014926:	9a08      	ldr	r2, [sp, #32]
 8014928:	2a00      	cmp	r2, #0
 801492a:	d0f5      	beq.n	8014918 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801492c:	7812      	ldrb	r2, [r2, #0]
 801492e:	e7f0      	b.n	8014912 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8014930:	2d00      	cmp	r5, #0
 8014932:	d0ea      	beq.n	801490a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8014934:	782a      	ldrb	r2, [r5, #0]
 8014936:	b142      	cbz	r2, 801494a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8014938:	2a25      	cmp	r2, #37	; 0x25
 801493a:	d001      	beq.n	8014940 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 801493c:	459a      	cmp	sl, r3
 801493e:	dc08      	bgt.n	8014952 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8014940:	f1bb 0f00 	cmp.w	fp, #0
 8014944:	d121      	bne.n	801498a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8014946:	2d00      	cmp	r5, #0
 8014948:	d0df      	beq.n	801490a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801494a:	782a      	ldrb	r2, [r5, #0]
 801494c:	f04f 0b00 	mov.w	fp, #0
 8014950:	e01d      	b.n	801498e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8014952:	f1bb 0f00 	cmp.w	fp, #0
 8014956:	d077      	beq.n	8014a48 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x166>
 8014958:	f8bb 2000 	ldrh.w	r2, [fp]
 801495c:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8014960:	f1bb 0f00 	cmp.w	fp, #0
 8014964:	d002      	beq.n	801496c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8014966:	f10b 0202 	add.w	r2, fp, #2
 801496a:	9209      	str	r2, [sp, #36]	; 0x24
 801496c:	b10d      	cbz	r5, 8014972 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 801496e:	3501      	adds	r5, #1
 8014970:	9508      	str	r5, [sp, #32]
 8014972:	3301      	adds	r3, #1
 8014974:	930d      	str	r3, [sp, #52]	; 0x34
 8014976:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014978:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 801497c:	f1bb 0f00 	cmp.w	fp, #0
 8014980:	d0d6      	beq.n	8014930 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8014982:	f8bb 2000 	ldrh.w	r2, [fp]
 8014986:	2a00      	cmp	r2, #0
 8014988:	d1d6      	bne.n	8014938 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 801498a:	f8bb 2000 	ldrh.w	r2, [fp]
 801498e:	2a00      	cmp	r2, #0
 8014990:	d0bb      	beq.n	801490a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8014992:	459a      	cmp	sl, r3
 8014994:	ddb9      	ble.n	801490a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8014996:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 801499a:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 801499e:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 80149a2:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 80149a6:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 80149aa:	960e      	str	r6, [sp, #56]	; 0x38
 80149ac:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 80149b0:	960f      	str	r6, [sp, #60]	; 0x3c
 80149b2:	f1bb 0f00 	cmp.w	fp, #0
 80149b6:	d002      	beq.n	80149be <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 80149b8:	f10b 0302 	add.w	r3, fp, #2
 80149bc:	9309      	str	r3, [sp, #36]	; 0x24
 80149be:	b10d      	cbz	r5, 80149c4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 80149c0:	1c6b      	adds	r3, r5, #1
 80149c2:	9308      	str	r3, [sp, #32]
 80149c4:	ab0f      	add	r3, sp, #60	; 0x3c
 80149c6:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 80149ca:	a908      	add	r1, sp, #32
 80149cc:	a809      	add	r0, sp, #36	; 0x24
 80149ce:	9305      	str	r3, [sp, #20]
 80149d0:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 80149d4:	9304      	str	r3, [sp, #16]
 80149d6:	ab0e      	add	r3, sp, #56	; 0x38
 80149d8:	9303      	str	r3, [sp, #12]
 80149da:	ab0c      	add	r3, sp, #48	; 0x30
 80149dc:	9302      	str	r3, [sp, #8]
 80149de:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 80149e2:	9301      	str	r3, [sp, #4]
 80149e4:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 80149e8:	9300      	str	r3, [sp, #0]
 80149ea:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 80149ee:	f7ff fea8 	bl	8014742 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 80149f2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80149f4:	2b00      	cmp	r3, #0
 80149f6:	bfbf      	itttt	lt
 80149f8:	6823      	ldrlt	r3, [r4, #0]
 80149fa:	3404      	addlt	r4, #4
 80149fc:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8014a00:	930e      	strlt	r3, [sp, #56]	; 0x38
 8014a02:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014a04:	2b00      	cmp	r3, #0
 8014a06:	bfbe      	ittt	lt
 8014a08:	6823      	ldrlt	r3, [r4, #0]
 8014a0a:	3404      	addlt	r4, #4
 8014a0c:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8014a10:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8014a14:	bfb8      	it	lt
 8014a16:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8014a18:	b1d9      	cbz	r1, 8014a52 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x170>
 8014a1a:	880b      	ldrh	r3, [r1, #0]
 8014a1c:	2b69      	cmp	r3, #105	; 0x69
 8014a1e:	d01f      	beq.n	8014a60 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 8014a20:	d82f      	bhi.n	8014a82 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a0>
 8014a22:	2b58      	cmp	r3, #88	; 0x58
 8014a24:	d01c      	beq.n	8014a60 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 8014a26:	d818      	bhi.n	8014a5a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x178>
 8014a28:	2b25      	cmp	r3, #37	; 0x25
 8014a2a:	d034      	beq.n	8014a96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b4>
 8014a2c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014a2e:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8014a32:	f1bb 0f00 	cmp.w	fp, #0
 8014a36:	f000 80b7 	beq.w	8014ba8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c6>
 8014a3a:	f8bb 5000 	ldrh.w	r5, [fp]
 8014a3e:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8014a42:	3301      	adds	r3, #1
 8014a44:	930d      	str	r3, [sp, #52]	; 0x34
 8014a46:	e029      	b.n	8014a9c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
 8014a48:	b10d      	cbz	r5, 8014a4e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16c>
 8014a4a:	782a      	ldrb	r2, [r5, #0]
 8014a4c:	e786      	b.n	801495c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8014a4e:	462a      	mov	r2, r5
 8014a50:	e784      	b.n	801495c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8014a52:	2a00      	cmp	r2, #0
 8014a54:	d0ea      	beq.n	8014a2c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
 8014a56:	7813      	ldrb	r3, [r2, #0]
 8014a58:	e7e0      	b.n	8014a1c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13a>
 8014a5a:	3b63      	subs	r3, #99	; 0x63
 8014a5c:	2b01      	cmp	r3, #1
 8014a5e:	d8e5      	bhi.n	8014a2c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
 8014a60:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 8014a64:	b329      	cbz	r1, 8014ab2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d0>
 8014a66:	880b      	ldrh	r3, [r1, #0]
 8014a68:	2b69      	cmp	r3, #105	; 0x69
 8014a6a:	d063      	beq.n	8014b34 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
 8014a6c:	d825      	bhi.n	8014aba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d8>
 8014a6e:	2b63      	cmp	r3, #99	; 0x63
 8014a70:	d038      	beq.n	8014ae4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x202>
 8014a72:	2b64      	cmp	r3, #100	; 0x64
 8014a74:	d05e      	beq.n	8014b34 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
 8014a76:	2b58      	cmp	r3, #88	; 0x58
 8014a78:	d07a      	beq.n	8014b70 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28e>
 8014a7a:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8014a7e:	4625      	mov	r5, r4
 8014a80:	e036      	b.n	8014af0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 8014a82:	2b73      	cmp	r3, #115	; 0x73
 8014a84:	d0ec      	beq.n	8014a60 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 8014a86:	d802      	bhi.n	8014a8e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ac>
 8014a88:	2b6f      	cmp	r3, #111	; 0x6f
 8014a8a:	d1cf      	bne.n	8014a2c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
 8014a8c:	e7e8      	b.n	8014a60 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 8014a8e:	2b75      	cmp	r3, #117	; 0x75
 8014a90:	d0e6      	beq.n	8014a60 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 8014a92:	2b78      	cmp	r3, #120	; 0x78
 8014a94:	e7f9      	b.n	8014a8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a8>
 8014a96:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8014a98:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8014a9c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014a9e:	b10b      	cbz	r3, 8014aa4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c2>
 8014aa0:	3302      	adds	r3, #2
 8014aa2:	9309      	str	r3, [sp, #36]	; 0x24
 8014aa4:	9b08      	ldr	r3, [sp, #32]
 8014aa6:	2b00      	cmp	r3, #0
 8014aa8:	f43f af2f 	beq.w	801490a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8014aac:	3301      	adds	r3, #1
 8014aae:	9308      	str	r3, [sp, #32]
 8014ab0:	e72b      	b.n	801490a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8014ab2:	2a00      	cmp	r2, #0
 8014ab4:	d0e1      	beq.n	8014a7a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
 8014ab6:	7813      	ldrb	r3, [r2, #0]
 8014ab8:	e7d6      	b.n	8014a68 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x186>
 8014aba:	2b73      	cmp	r3, #115	; 0x73
 8014abc:	d036      	beq.n	8014b2c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24a>
 8014abe:	d807      	bhi.n	8014ad0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ee>
 8014ac0:	2b6f      	cmp	r3, #111	; 0x6f
 8014ac2:	d1da      	bne.n	8014a7a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
 8014ac4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8014ac6:	1d25      	adds	r5, r4, #4
 8014ac8:	2308      	movs	r3, #8
 8014aca:	eba8 0202 	sub.w	r2, r8, r2
 8014ace:	e049      	b.n	8014b64 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
 8014ad0:	2b75      	cmp	r3, #117	; 0x75
 8014ad2:	d042      	beq.n	8014b5a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x278>
 8014ad4:	2b78      	cmp	r3, #120	; 0x78
 8014ad6:	d1d0      	bne.n	8014a7a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
 8014ad8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8014ada:	1d25      	adds	r5, r4, #4
 8014adc:	2310      	movs	r3, #16
 8014ade:	eba8 0202 	sub.w	r2, r8, r2
 8014ae2:	e03f      	b.n	8014b64 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
 8014ae4:	7823      	ldrb	r3, [r4, #0]
 8014ae6:	1d25      	adds	r5, r4, #4
 8014ae8:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 8014aec:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8014af0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014af2:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8014af6:	2b00      	cmp	r3, #0
 8014af8:	d051      	beq.n	8014b9e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2bc>
 8014afa:	881a      	ldrh	r2, [r3, #0]
 8014afc:	a80d      	add	r0, sp, #52	; 0x34
 8014afe:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8014b02:	462c      	mov	r4, r5
 8014b04:	9005      	str	r0, [sp, #20]
 8014b06:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 8014b0a:	9004      	str	r0, [sp, #16]
 8014b0c:	980e      	ldr	r0, [sp, #56]	; 0x38
 8014b0e:	9003      	str	r0, [sp, #12]
 8014b10:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8014b14:	9002      	str	r0, [sp, #8]
 8014b16:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8014b18:	9001      	str	r0, [sp, #4]
 8014b1a:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 8014b1e:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8014b22:	9000      	str	r0, [sp, #0]
 8014b24:	a810      	add	r0, sp, #64	; 0x40
 8014b26:	f7ff fd49 	bl	80145bc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8014b2a:	e7b7      	b.n	8014a9c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
 8014b2c:	1d25      	adds	r5, r4, #4
 8014b2e:	6823      	ldr	r3, [r4, #0]
 8014b30:	9310      	str	r3, [sp, #64]	; 0x40
 8014b32:	e7dd      	b.n	8014af0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 8014b34:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8014b36:	230a      	movs	r3, #10
 8014b38:	4649      	mov	r1, r9
 8014b3a:	6820      	ldr	r0, [r4, #0]
 8014b3c:	eba8 0202 	sub.w	r2, r8, r2
 8014b40:	1d25      	adds	r5, r4, #4
 8014b42:	b292      	uxth	r2, r2
 8014b44:	f7ff fd08 	bl	8014558 <_ZN8touchgfx7Unicode4itoaElPtti>
 8014b48:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8014b4c:	2b2d      	cmp	r3, #45	; 0x2d
 8014b4e:	d1cf      	bne.n	8014af0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 8014b50:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8014b54:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014b56:	3302      	adds	r3, #2
 8014b58:	e7ea      	b.n	8014b30 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24e>
 8014b5a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8014b5c:	1d25      	adds	r5, r4, #4
 8014b5e:	230a      	movs	r3, #10
 8014b60:	eba8 0202 	sub.w	r2, r8, r2
 8014b64:	b292      	uxth	r2, r2
 8014b66:	4649      	mov	r1, r9
 8014b68:	6820      	ldr	r0, [r4, #0]
 8014b6a:	f7ff fcd7 	bl	801451c <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 8014b6e:	e7bf      	b.n	8014af0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 8014b70:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8014b72:	2310      	movs	r3, #16
 8014b74:	4649      	mov	r1, r9
 8014b76:	6820      	ldr	r0, [r4, #0]
 8014b78:	eba8 0202 	sub.w	r2, r8, r2
 8014b7c:	1d25      	adds	r5, r4, #4
 8014b7e:	b292      	uxth	r2, r2
 8014b80:	f7ff fccc 	bl	801451c <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 8014b84:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 8014b88:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8014b8c:	2b00      	cmp	r3, #0
 8014b8e:	d0af      	beq.n	8014af0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 8014b90:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8014b94:	2919      	cmp	r1, #25
 8014b96:	d8f7      	bhi.n	8014b88 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
 8014b98:	3b20      	subs	r3, #32
 8014b9a:	8013      	strh	r3, [r2, #0]
 8014b9c:	e7f4      	b.n	8014b88 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
 8014b9e:	9a08      	ldr	r2, [sp, #32]
 8014ba0:	2a00      	cmp	r2, #0
 8014ba2:	d0ab      	beq.n	8014afc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
 8014ba4:	7812      	ldrb	r2, [r2, #0]
 8014ba6:	e7a9      	b.n	8014afc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
 8014ba8:	2d00      	cmp	r5, #0
 8014baa:	f43f af48 	beq.w	8014a3e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>
 8014bae:	782d      	ldrb	r5, [r5, #0]
 8014bb0:	e745      	b.n	8014a3e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>

08014bb2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 8014bb2:	b507      	push	{r0, r1, r2, lr}
 8014bb4:	9300      	str	r3, [sp, #0]
 8014bb6:	4613      	mov	r3, r2
 8014bb8:	2200      	movs	r2, #0
 8014bba:	f7ff fe92 	bl	80148e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8014bbe:	b003      	add	sp, #12
 8014bc0:	f85d fb04 	ldr.w	pc, [sp], #4

08014bc4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8014bc4:	b40c      	push	{r2, r3}
 8014bc6:	b507      	push	{r0, r1, r2, lr}
 8014bc8:	ab04      	add	r3, sp, #16
 8014bca:	f853 2b04 	ldr.w	r2, [r3], #4
 8014bce:	9301      	str	r3, [sp, #4]
 8014bd0:	f7ff ffef 	bl	8014bb2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8014bd4:	b003      	add	sp, #12
 8014bd6:	f85d eb04 	ldr.w	lr, [sp], #4
 8014bda:	b002      	add	sp, #8
 8014bdc:	4770      	bx	lr
	...

08014be0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8014be0:	4b01      	ldr	r3, [pc, #4]	; (8014be8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8014be2:	6018      	str	r0, [r3, #0]
 8014be4:	4770      	bx	lr
 8014be6:	bf00      	nop
 8014be8:	2400e134 	.word	0x2400e134

08014bec <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8014bec:	4b06      	ldr	r3, [pc, #24]	; (8014c08 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8014bee:	881a      	ldrh	r2, [r3, #0]
 8014bf0:	4282      	cmp	r2, r0
 8014bf2:	d807      	bhi.n	8014c04 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8014bf4:	4b05      	ldr	r3, [pc, #20]	; (8014c0c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8014bf6:	881b      	ldrh	r3, [r3, #0]
 8014bf8:	4413      	add	r3, r2
 8014bfa:	4298      	cmp	r0, r3
 8014bfc:	bfac      	ite	ge
 8014bfe:	2000      	movge	r0, #0
 8014c00:	2001      	movlt	r0, #1
 8014c02:	4770      	bx	lr
 8014c04:	2000      	movs	r0, #0
 8014c06:	4770      	bx	lr
 8014c08:	2400e154 	.word	0x2400e154
 8014c0c:	2400e158 	.word	0x2400e158

08014c10 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8014c10:	b508      	push	{r3, lr}
 8014c12:	4601      	mov	r1, r0
 8014c14:	f7ff ffea 	bl	8014bec <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8014c18:	b118      	cbz	r0, 8014c22 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8014c1a:	4b02      	ldr	r3, [pc, #8]	; (8014c24 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8014c1c:	681b      	ldr	r3, [r3, #0]
 8014c1e:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8014c22:	bd08      	pop	{r3, pc}
 8014c24:	2400e138 	.word	0x2400e138

08014c28 <_ZN8touchgfx6Bitmap25dynamicBitmapSetSolidRectEtRKNS_4RectE>:
 8014c28:	b538      	push	{r3, r4, r5, lr}
 8014c2a:	4604      	mov	r4, r0
 8014c2c:	f7ff ffde 	bl	8014bec <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8014c30:	b188      	cbz	r0, 8014c56 <_ZN8touchgfx6Bitmap25dynamicBitmapSetSolidRectEtRKNS_4RectE+0x2e>
 8014c32:	4b09      	ldr	r3, [pc, #36]	; (8014c58 <_ZN8touchgfx6Bitmap25dynamicBitmapSetSolidRectEtRKNS_4RectE+0x30>)
 8014c34:	881a      	ldrh	r2, [r3, #0]
 8014c36:	4b09      	ldr	r3, [pc, #36]	; (8014c5c <_ZN8touchgfx6Bitmap25dynamicBitmapSetSolidRectEtRKNS_4RectE+0x34>)
 8014c38:	1aa4      	subs	r4, r4, r2
 8014c3a:	220e      	movs	r2, #14
 8014c3c:	681d      	ldr	r5, [r3, #0]
 8014c3e:	4362      	muls	r2, r4
 8014c40:	18ac      	adds	r4, r5, r2
 8014c42:	7b23      	ldrb	r3, [r4, #12]
 8014c44:	f013 0320 	ands.w	r3, r3, #32
 8014c48:	bf17      	itett	ne
 8014c4a:	680b      	ldrne	r3, [r1, #0]
 8014c4c:	4618      	moveq	r0, r3
 8014c4e:	50ab      	strne	r3, [r5, r2]
 8014c50:	684b      	ldrne	r3, [r1, #4]
 8014c52:	bf18      	it	ne
 8014c54:	6063      	strne	r3, [r4, #4]
 8014c56:	bd38      	pop	{r3, r4, r5, pc}
 8014c58:	2400e154 	.word	0x2400e154
 8014c5c:	2400e13c 	.word	0x2400e13c

08014c60 <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE>:
 8014c60:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8014c64:	4606      	mov	r6, r0
 8014c66:	460c      	mov	r4, r1
 8014c68:	f7ff ffc0 	bl	8014bec <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8014c6c:	b918      	cbnz	r0, 8014c76 <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0x16>
 8014c6e:	2000      	movs	r0, #0
 8014c70:	b002      	add	sp, #8
 8014c72:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8014c76:	4608      	mov	r0, r1
 8014c78:	f7f7 feff 	bl	800ca7a <_ZNK8touchgfx4Rect7isEmptyEv>
 8014c7c:	2800      	cmp	r0, #0
 8014c7e:	d1f6      	bne.n	8014c6e <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0xe>
 8014c80:	4b3f      	ldr	r3, [pc, #252]	; (8014d80 <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0x120>)
 8014c82:	f8df 9100 	ldr.w	r9, [pc, #256]	; 8014d84 <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0x124>
 8014c86:	881d      	ldrh	r5, [r3, #0]
 8014c88:	f8d9 a000 	ldr.w	sl, [r9]
 8014c8c:	46c8      	mov	r8, r9
 8014c8e:	1b73      	subs	r3, r6, r5
 8014c90:	250e      	movs	r5, #14
 8014c92:	435d      	muls	r5, r3
 8014c94:	eb0a 0705 	add.w	r7, sl, r5
 8014c98:	7b3b      	ldrb	r3, [r7, #12]
 8014c9a:	f013 0f20 	tst.w	r3, #32
 8014c9e:	d0e6      	beq.n	8014c6e <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0xe>
 8014ca0:	4621      	mov	r1, r4
 8014ca2:	4638      	mov	r0, r7
 8014ca4:	f7fc fe5e 	bl	8011964 <_ZNK8touchgfx4Rect8includesERKS0_>
 8014ca8:	2800      	cmp	r0, #0
 8014caa:	d1e1      	bne.n	8014c70 <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0x10>
 8014cac:	4639      	mov	r1, r7
 8014cae:	4620      	mov	r0, r4
 8014cb0:	f7fc fe58 	bl	8011964 <_ZNK8touchgfx4Rect8includesERKS0_>
 8014cb4:	b108      	cbz	r0, 8014cba <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0x5a>
 8014cb6:	4621      	mov	r1, r4
 8014cb8:	e020      	b.n	8014cfc <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0x9c>
 8014cba:	f9b4 2000 	ldrsh.w	r2, [r4]
 8014cbe:	f93a 3005 	ldrsh.w	r3, [sl, r5]
 8014cc2:	429a      	cmp	r2, r3
 8014cc4:	d11e      	bne.n	8014d04 <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0xa4>
 8014cc6:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8014cca:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 8014cce:	429a      	cmp	r2, r3
 8014cd0:	d118      	bne.n	8014d04 <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0xa4>
 8014cd2:	6820      	ldr	r0, [r4, #0]
 8014cd4:	466b      	mov	r3, sp
 8014cd6:	6861      	ldr	r1, [r4, #4]
 8014cd8:	c303      	stmia	r3!, {r0, r1}
 8014cda:	4639      	mov	r1, r7
 8014cdc:	4668      	mov	r0, sp
 8014cde:	f7fc fe67 	bl	80119b0 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8014ce2:	f8d9 3000 	ldr.w	r3, [r9]
 8014ce6:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8014cea:	442b      	add	r3, r5
 8014cec:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 8014cf0:	4413      	add	r3, r2
 8014cf2:	f9bd 2006 	ldrsh.w	r2, [sp, #6]
 8014cf6:	4293      	cmp	r3, r2
 8014cf8:	dc04      	bgt.n	8014d04 <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0xa4>
 8014cfa:	4669      	mov	r1, sp
 8014cfc:	4630      	mov	r0, r6
 8014cfe:	f7ff ff93 	bl	8014c28 <_ZN8touchgfx6Bitmap25dynamicBitmapSetSolidRectEtRKNS_4RectE>
 8014d02:	e7b5      	b.n	8014c70 <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0x10>
 8014d04:	f8d8 3000 	ldr.w	r3, [r8]
 8014d08:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8014d0c:	442b      	add	r3, r5
 8014d0e:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8014d12:	4291      	cmp	r1, r2
 8014d14:	d119      	bne.n	8014d4a <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0xea>
 8014d16:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8014d1a:	f9b3 2006 	ldrsh.w	r2, [r3, #6]
 8014d1e:	4291      	cmp	r1, r2
 8014d20:	d113      	bne.n	8014d4a <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0xea>
 8014d22:	6820      	ldr	r0, [r4, #0]
 8014d24:	466a      	mov	r2, sp
 8014d26:	6861      	ldr	r1, [r4, #4]
 8014d28:	c203      	stmia	r2!, {r0, r1}
 8014d2a:	4619      	mov	r1, r3
 8014d2c:	4668      	mov	r0, sp
 8014d2e:	f7fc fe3f 	bl	80119b0 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8014d32:	f8d8 3000 	ldr.w	r3, [r8]
 8014d36:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8014d3a:	442b      	add	r3, r5
 8014d3c:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8014d40:	4413      	add	r3, r2
 8014d42:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8014d46:	4293      	cmp	r3, r2
 8014d48:	ddd7      	ble.n	8014cfa <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0x9a>
 8014d4a:	4620      	mov	r0, r4
 8014d4c:	f7f7 fe95 	bl	800ca7a <_ZNK8touchgfx4Rect7isEmptyEv>
 8014d50:	b990      	cbnz	r0, 8014d78 <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0x118>
 8014d52:	88a7      	ldrh	r7, [r4, #4]
 8014d54:	88e3      	ldrh	r3, [r4, #6]
 8014d56:	fb17 f703 	smulbb	r7, r7, r3
 8014d5a:	f8d8 3000 	ldr.w	r3, [r8]
 8014d5e:	441d      	add	r5, r3
 8014d60:	4628      	mov	r0, r5
 8014d62:	f7f7 fe8a 	bl	800ca7a <_ZNK8touchgfx4Rect7isEmptyEv>
 8014d66:	b948      	cbnz	r0, 8014d7c <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0x11c>
 8014d68:	88ab      	ldrh	r3, [r5, #4]
 8014d6a:	88ea      	ldrh	r2, [r5, #6]
 8014d6c:	fb13 f302 	smulbb	r3, r3, r2
 8014d70:	42bb      	cmp	r3, r7
 8014d72:	f4bf af7c 	bcs.w	8014c6e <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0xe>
 8014d76:	e79e      	b.n	8014cb6 <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0x56>
 8014d78:	2700      	movs	r7, #0
 8014d7a:	e7ee      	b.n	8014d5a <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0xfa>
 8014d7c:	2300      	movs	r3, #0
 8014d7e:	e7f7      	b.n	8014d70 <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0x110>
 8014d80:	2400e154 	.word	0x2400e154
 8014d84:	2400e13c 	.word	0x2400e13c

08014d88 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8014d88:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014d8a:	4c24      	ldr	r4, [pc, #144]	; (8014e1c <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8014d8c:	6823      	ldr	r3, [r4, #0]
 8014d8e:	2b00      	cmp	r3, #0
 8014d90:	d042      	beq.n	8014e18 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8014d92:	4a23      	ldr	r2, [pc, #140]	; (8014e20 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8014d94:	4d23      	ldr	r5, [pc, #140]	; (8014e24 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8014d96:	8811      	ldrh	r1, [r2, #0]
 8014d98:	f8b5 c000 	ldrh.w	ip, [r5]
 8014d9c:	4822      	ldr	r0, [pc, #136]	; (8014e28 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8014d9e:	4461      	add	r1, ip
 8014da0:	1c4a      	adds	r2, r1, #1
 8014da2:	008f      	lsls	r7, r1, #2
 8014da4:	f022 0201 	bic.w	r2, r2, #1
 8014da8:	19de      	adds	r6, r3, r7
 8014daa:	0412      	lsls	r2, r2, #16
 8014dac:	6006      	str	r6, [r0, #0]
 8014dae:	4e1f      	ldr	r6, [pc, #124]	; (8014e2c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8014db0:	0c12      	lsrs	r2, r2, #16
 8014db2:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8014db6:	19da      	adds	r2, r3, r7
 8014db8:	6032      	str	r2, [r6, #0]
 8014dba:	220e      	movs	r2, #14
 8014dbc:	fb02 f20c 	mul.w	r2, r2, ip
 8014dc0:	3203      	adds	r2, #3
 8014dc2:	f022 0203 	bic.w	r2, r2, #3
 8014dc6:	443a      	add	r2, r7
 8014dc8:	4f19      	ldr	r7, [pc, #100]	; (8014e30 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8014dca:	4413      	add	r3, r2
 8014dcc:	603b      	str	r3, [r7, #0]
 8014dce:	2300      	movs	r3, #0
 8014dd0:	4f18      	ldr	r7, [pc, #96]	; (8014e34 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8014dd2:	469c      	mov	ip, r3
 8014dd4:	803b      	strh	r3, [r7, #0]
 8014dd6:	4f18      	ldr	r7, [pc, #96]	; (8014e38 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8014dd8:	683f      	ldr	r7, [r7, #0]
 8014dda:	1aba      	subs	r2, r7, r2
 8014ddc:	4f17      	ldr	r7, [pc, #92]	; (8014e3c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8014dde:	603a      	str	r2, [r7, #0]
 8014de0:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8014de4:	4a16      	ldr	r2, [pc, #88]	; (8014e40 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8014de6:	8013      	strh	r3, [r2, #0]
 8014de8:	428b      	cmp	r3, r1
 8014dea:	d10d      	bne.n	8014e08 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8014dec:	882d      	ldrh	r5, [r5, #0]
 8014dee:	2300      	movs	r3, #0
 8014df0:	6830      	ldr	r0, [r6, #0]
 8014df2:	240e      	movs	r4, #14
 8014df4:	429d      	cmp	r5, r3
 8014df6:	d90f      	bls.n	8014e18 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8014df8:	fb04 0203 	mla	r2, r4, r3, r0
 8014dfc:	3301      	adds	r3, #1
 8014dfe:	7b11      	ldrb	r1, [r2, #12]
 8014e00:	f36f 1145 	bfc	r1, #5, #1
 8014e04:	7311      	strb	r1, [r2, #12]
 8014e06:	e7f5      	b.n	8014df4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8014e08:	6822      	ldr	r2, [r4, #0]
 8014e0a:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8014e0e:	6802      	ldr	r2, [r0, #0]
 8014e10:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8014e14:	3301      	adds	r3, #1
 8014e16:	e7e7      	b.n	8014de8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8014e18:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014e1a:	bf00      	nop
 8014e1c:	2400e138 	.word	0x2400e138
 8014e20:	2400e154 	.word	0x2400e154
 8014e24:	2400e158 	.word	0x2400e158
 8014e28:	2400e14c 	.word	0x2400e14c
 8014e2c:	2400e13c 	.word	0x2400e13c
 8014e30:	2400e144 	.word	0x2400e144
 8014e34:	2400e156 	.word	0x2400e156
 8014e38:	2400e140 	.word	0x2400e140
 8014e3c:	2400e150 	.word	0x2400e150
 8014e40:	2400e148 	.word	0x2400e148

08014e44 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8014e44:	4b10      	ldr	r3, [pc, #64]	; (8014e88 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x44>)
 8014e46:	b510      	push	{r4, lr}
 8014e48:	681b      	ldr	r3, [r3, #0]
 8014e4a:	b9db      	cbnz	r3, 8014e84 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 8014e4c:	b1d1      	cbz	r1, 8014e84 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 8014e4e:	4b0f      	ldr	r3, [pc, #60]	; (8014e8c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x48>)
 8014e50:	240e      	movs	r4, #14
 8014e52:	801a      	strh	r2, [r3, #0]
 8014e54:	b292      	uxth	r2, r2
 8014e56:	4b0e      	ldr	r3, [pc, #56]	; (8014e90 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x4c>)
 8014e58:	881b      	ldrh	r3, [r3, #0]
 8014e5a:	4413      	add	r3, r2
 8014e5c:	4362      	muls	r2, r4
 8014e5e:	2406      	movs	r4, #6
 8014e60:	fb04 2203 	mla	r2, r4, r3, r2
 8014e64:	428a      	cmp	r2, r1
 8014e66:	d305      	bcc.n	8014e74 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x30>
 8014e68:	4b0a      	ldr	r3, [pc, #40]	; (8014e94 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x50>)
 8014e6a:	2134      	movs	r1, #52	; 0x34
 8014e6c:	4a0a      	ldr	r2, [pc, #40]	; (8014e98 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x54>)
 8014e6e:	480b      	ldr	r0, [pc, #44]	; (8014e9c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x58>)
 8014e70:	f00b f8b6 	bl	801ffe0 <__assert_func>
 8014e74:	4b0a      	ldr	r3, [pc, #40]	; (8014ea0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x5c>)
 8014e76:	6019      	str	r1, [r3, #0]
 8014e78:	4b0a      	ldr	r3, [pc, #40]	; (8014ea4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x60>)
 8014e7a:	6018      	str	r0, [r3, #0]
 8014e7c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014e80:	f7ff bf82 	b.w	8014d88 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8014e84:	bd10      	pop	{r4, pc}
 8014e86:	bf00      	nop
 8014e88:	2400e144 	.word	0x2400e144
 8014e8c:	2400e158 	.word	0x2400e158
 8014e90:	2400e154 	.word	0x2400e154
 8014e94:	08024dde 	.word	0x08024dde
 8014e98:	08024e37 	.word	0x08024e37
 8014e9c:	08024db9 	.word	0x08024db9
 8014ea0:	2400e140 	.word	0x2400e140
 8014ea4:	2400e138 	.word	0x2400e138

08014ea8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8014ea8:	b470      	push	{r4, r5, r6}
 8014eaa:	4c07      	ldr	r4, [pc, #28]	; (8014ec8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8014eac:	4605      	mov	r5, r0
 8014eae:	4610      	mov	r0, r2
 8014eb0:	9a03      	ldr	r2, [sp, #12]
 8014eb2:	6826      	ldr	r6, [r4, #0]
 8014eb4:	b936      	cbnz	r6, 8014ec4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8014eb6:	6025      	str	r5, [r4, #0]
 8014eb8:	4c04      	ldr	r4, [pc, #16]	; (8014ecc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8014eba:	8021      	strh	r1, [r4, #0]
 8014ebc:	4619      	mov	r1, r3
 8014ebe:	bc70      	pop	{r4, r5, r6}
 8014ec0:	f7ff bfc0 	b.w	8014e44 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8014ec4:	bc70      	pop	{r4, r5, r6}
 8014ec6:	4770      	bx	lr
 8014ec8:	2400e15c 	.word	0x2400e15c
 8014ecc:	2400e154 	.word	0x2400e154

08014ed0 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8014ed0:	b508      	push	{r3, lr}
 8014ed2:	4b17      	ldr	r3, [pc, #92]	; (8014f30 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8014ed4:	6819      	ldr	r1, [r3, #0]
 8014ed6:	b931      	cbnz	r1, 8014ee6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x16>
 8014ed8:	4b16      	ldr	r3, [pc, #88]	; (8014f34 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8014eda:	f240 4184 	movw	r1, #1156	; 0x484
 8014ede:	4a16      	ldr	r2, [pc, #88]	; (8014f38 <_ZNK8touchgfx6Bitmap8getWidthEv+0x68>)
 8014ee0:	4816      	ldr	r0, [pc, #88]	; (8014f3c <_ZNK8touchgfx6Bitmap8getWidthEv+0x6c>)
 8014ee2:	f00b f87d 	bl	801ffe0 <__assert_func>
 8014ee6:	4a16      	ldr	r2, [pc, #88]	; (8014f40 <_ZNK8touchgfx6Bitmap8getWidthEv+0x70>)
 8014ee8:	8803      	ldrh	r3, [r0, #0]
 8014eea:	8812      	ldrh	r2, [r2, #0]
 8014eec:	4293      	cmp	r3, r2
 8014eee:	d204      	bcs.n	8014efa <_ZNK8touchgfx6Bitmap8getWidthEv+0x2a>
 8014ef0:	2214      	movs	r2, #20
 8014ef2:	fb02 1303 	mla	r3, r2, r3, r1
 8014ef6:	8918      	ldrh	r0, [r3, #8]
 8014ef8:	bd08      	pop	{r3, pc}
 8014efa:	4912      	ldr	r1, [pc, #72]	; (8014f44 <_ZNK8touchgfx6Bitmap8getWidthEv+0x74>)
 8014efc:	8809      	ldrh	r1, [r1, #0]
 8014efe:	4411      	add	r1, r2
 8014f00:	428b      	cmp	r3, r1
 8014f02:	da06      	bge.n	8014f12 <_ZNK8touchgfx6Bitmap8getWidthEv+0x42>
 8014f04:	1a9b      	subs	r3, r3, r2
 8014f06:	4a10      	ldr	r2, [pc, #64]	; (8014f48 <_ZNK8touchgfx6Bitmap8getWidthEv+0x78>)
 8014f08:	210e      	movs	r1, #14
 8014f0a:	6812      	ldr	r2, [r2, #0]
 8014f0c:	fb01 2303 	mla	r3, r1, r3, r2
 8014f10:	e7f1      	b.n	8014ef6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x26>
 8014f12:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8014f16:	4293      	cmp	r3, r2
 8014f18:	d107      	bne.n	8014f2a <_ZNK8touchgfx6Bitmap8getWidthEv+0x5a>
 8014f1a:	4b0c      	ldr	r3, [pc, #48]	; (8014f4c <_ZNK8touchgfx6Bitmap8getWidthEv+0x7c>)
 8014f1c:	781b      	ldrb	r3, [r3, #0]
 8014f1e:	b913      	cbnz	r3, 8014f26 <_ZNK8touchgfx6Bitmap8getWidthEv+0x56>
 8014f20:	4b0b      	ldr	r3, [pc, #44]	; (8014f50 <_ZNK8touchgfx6Bitmap8getWidthEv+0x80>)
 8014f22:	8818      	ldrh	r0, [r3, #0]
 8014f24:	e7e8      	b.n	8014ef8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 8014f26:	4b0b      	ldr	r3, [pc, #44]	; (8014f54 <_ZNK8touchgfx6Bitmap8getWidthEv+0x84>)
 8014f28:	e7fb      	b.n	8014f22 <_ZNK8touchgfx6Bitmap8getWidthEv+0x52>
 8014f2a:	2000      	movs	r0, #0
 8014f2c:	e7e4      	b.n	8014ef8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 8014f2e:	bf00      	nop
 8014f30:	2400e15c 	.word	0x2400e15c
 8014f34:	080227a4 	.word	0x080227a4
 8014f38:	08024ee4 	.word	0x08024ee4
 8014f3c:	08024db9 	.word	0x08024db9
 8014f40:	2400e154 	.word	0x2400e154
 8014f44:	2400e158 	.word	0x2400e158
 8014f48:	2400e13c 	.word	0x2400e13c
 8014f4c:	2400e0ac 	.word	0x2400e0ac
 8014f50:	2400e0ae 	.word	0x2400e0ae
 8014f54:	2400e0b0 	.word	0x2400e0b0

08014f58 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8014f58:	b508      	push	{r3, lr}
 8014f5a:	4b17      	ldr	r3, [pc, #92]	; (8014fb8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8014f5c:	6819      	ldr	r1, [r3, #0]
 8014f5e:	b931      	cbnz	r1, 8014f6e <_ZNK8touchgfx6Bitmap9getHeightEv+0x16>
 8014f60:	4b16      	ldr	r3, [pc, #88]	; (8014fbc <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8014f62:	f44f 6193 	mov.w	r1, #1176	; 0x498
 8014f66:	4a16      	ldr	r2, [pc, #88]	; (8014fc0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x68>)
 8014f68:	4816      	ldr	r0, [pc, #88]	; (8014fc4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x6c>)
 8014f6a:	f00b f839 	bl	801ffe0 <__assert_func>
 8014f6e:	4a16      	ldr	r2, [pc, #88]	; (8014fc8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x70>)
 8014f70:	8803      	ldrh	r3, [r0, #0]
 8014f72:	8812      	ldrh	r2, [r2, #0]
 8014f74:	4293      	cmp	r3, r2
 8014f76:	d204      	bcs.n	8014f82 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2a>
 8014f78:	2214      	movs	r2, #20
 8014f7a:	fb02 1303 	mla	r3, r2, r3, r1
 8014f7e:	8958      	ldrh	r0, [r3, #10]
 8014f80:	bd08      	pop	{r3, pc}
 8014f82:	4912      	ldr	r1, [pc, #72]	; (8014fcc <_ZNK8touchgfx6Bitmap9getHeightEv+0x74>)
 8014f84:	8809      	ldrh	r1, [r1, #0]
 8014f86:	4411      	add	r1, r2
 8014f88:	428b      	cmp	r3, r1
 8014f8a:	da06      	bge.n	8014f9a <_ZNK8touchgfx6Bitmap9getHeightEv+0x42>
 8014f8c:	1a9b      	subs	r3, r3, r2
 8014f8e:	4a10      	ldr	r2, [pc, #64]	; (8014fd0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x78>)
 8014f90:	210e      	movs	r1, #14
 8014f92:	6812      	ldr	r2, [r2, #0]
 8014f94:	fb01 2303 	mla	r3, r1, r3, r2
 8014f98:	e7f1      	b.n	8014f7e <_ZNK8touchgfx6Bitmap9getHeightEv+0x26>
 8014f9a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8014f9e:	4293      	cmp	r3, r2
 8014fa0:	d107      	bne.n	8014fb2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5a>
 8014fa2:	4b0c      	ldr	r3, [pc, #48]	; (8014fd4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x7c>)
 8014fa4:	781b      	ldrb	r3, [r3, #0]
 8014fa6:	b913      	cbnz	r3, 8014fae <_ZNK8touchgfx6Bitmap9getHeightEv+0x56>
 8014fa8:	4b0b      	ldr	r3, [pc, #44]	; (8014fd8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x80>)
 8014faa:	8818      	ldrh	r0, [r3, #0]
 8014fac:	e7e8      	b.n	8014f80 <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 8014fae:	4b0b      	ldr	r3, [pc, #44]	; (8014fdc <_ZNK8touchgfx6Bitmap9getHeightEv+0x84>)
 8014fb0:	e7fb      	b.n	8014faa <_ZNK8touchgfx6Bitmap9getHeightEv+0x52>
 8014fb2:	2000      	movs	r0, #0
 8014fb4:	e7e4      	b.n	8014f80 <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 8014fb6:	bf00      	nop
 8014fb8:	2400e15c 	.word	0x2400e15c
 8014fbc:	080227a4 	.word	0x080227a4
 8014fc0:	08024f10 	.word	0x08024f10
 8014fc4:	08024db9 	.word	0x08024db9
 8014fc8:	2400e154 	.word	0x2400e154
 8014fcc:	2400e158 	.word	0x2400e158
 8014fd0:	2400e13c 	.word	0x2400e13c
 8014fd4:	2400e0ac 	.word	0x2400e0ac
 8014fd8:	2400e0b0 	.word	0x2400e0b0
 8014fdc:	2400e0ae 	.word	0x2400e0ae

08014fe0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8014fe0:	4b23      	ldr	r3, [pc, #140]	; (8015070 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8014fe2:	b510      	push	{r4, lr}
 8014fe4:	681c      	ldr	r4, [r3, #0]
 8014fe6:	b934      	cbnz	r4, 8014ff6 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x16>
 8014fe8:	4b22      	ldr	r3, [pc, #136]	; (8015074 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8014fea:	f240 41ac 	movw	r1, #1196	; 0x4ac
 8014fee:	4a22      	ldr	r2, [pc, #136]	; (8015078 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 8014ff0:	4822      	ldr	r0, [pc, #136]	; (801507c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 8014ff2:	f00a fff5 	bl	801ffe0 <__assert_func>
 8014ff6:	4a22      	ldr	r2, [pc, #136]	; (8015080 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 8014ff8:	880b      	ldrh	r3, [r1, #0]
 8014ffa:	8812      	ldrh	r2, [r2, #0]
 8014ffc:	4293      	cmp	r3, r2
 8014ffe:	d211      	bcs.n	8015024 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x44>
 8015000:	2214      	movs	r2, #20
 8015002:	fb02 4303 	mla	r3, r2, r3, r4
 8015006:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 801500a:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 801500e:	8a1a      	ldrh	r2, [r3, #16]
 8015010:	8a5b      	ldrh	r3, [r3, #18]
 8015012:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8015016:	8004      	strh	r4, [r0, #0]
 8015018:	f3c3 030c 	ubfx	r3, r3, #0, #13
 801501c:	8041      	strh	r1, [r0, #2]
 801501e:	8082      	strh	r2, [r0, #4]
 8015020:	80c3      	strh	r3, [r0, #6]
 8015022:	e00e      	b.n	8015042 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 8015024:	4917      	ldr	r1, [pc, #92]	; (8015084 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa4>)
 8015026:	8809      	ldrh	r1, [r1, #0]
 8015028:	4411      	add	r1, r2
 801502a:	428b      	cmp	r3, r1
 801502c:	da0a      	bge.n	8015044 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x64>
 801502e:	1a9b      	subs	r3, r3, r2
 8015030:	4a15      	ldr	r2, [pc, #84]	; (8015088 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa8>)
 8015032:	210e      	movs	r1, #14
 8015034:	6812      	ldr	r2, [r2, #0]
 8015036:	fb01 2303 	mla	r3, r1, r3, r2
 801503a:	681a      	ldr	r2, [r3, #0]
 801503c:	6002      	str	r2, [r0, #0]
 801503e:	685a      	ldr	r2, [r3, #4]
 8015040:	6042      	str	r2, [r0, #4]
 8015042:	bd10      	pop	{r4, pc}
 8015044:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8015048:	4293      	cmp	r3, r2
 801504a:	d10b      	bne.n	8015064 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>
 801504c:	4b0f      	ldr	r3, [pc, #60]	; (801508c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xac>)
 801504e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8015052:	4b0f      	ldr	r3, [pc, #60]	; (8015090 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xb0>)
 8015054:	8081      	strh	r1, [r0, #4]
 8015056:	f9b3 2000 	ldrsh.w	r2, [r3]
 801505a:	2300      	movs	r3, #0
 801505c:	80c2      	strh	r2, [r0, #6]
 801505e:	8003      	strh	r3, [r0, #0]
 8015060:	8043      	strh	r3, [r0, #2]
 8015062:	e7ee      	b.n	8015042 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 8015064:	2300      	movs	r3, #0
 8015066:	8003      	strh	r3, [r0, #0]
 8015068:	8043      	strh	r3, [r0, #2]
 801506a:	8083      	strh	r3, [r0, #4]
 801506c:	e7d8      	b.n	8015020 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x40>
 801506e:	bf00      	nop
 8015070:	2400e15c 	.word	0x2400e15c
 8015074:	080227a4 	.word	0x080227a4
 8015078:	08024e7d 	.word	0x08024e7d
 801507c:	08024db9 	.word	0x08024db9
 8015080:	2400e154 	.word	0x2400e154
 8015084:	2400e158 	.word	0x2400e158
 8015088:	2400e13c 	.word	0x2400e13c
 801508c:	2400e0a8 	.word	0x2400e0a8
 8015090:	2400e0aa 	.word	0x2400e0aa

08015094 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8015094:	4b18      	ldr	r3, [pc, #96]	; (80150f8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8015096:	681b      	ldr	r3, [r3, #0]
 8015098:	b34b      	cbz	r3, 80150ee <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 801509a:	4a18      	ldr	r2, [pc, #96]	; (80150fc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 801509c:	8800      	ldrh	r0, [r0, #0]
 801509e:	8812      	ldrh	r2, [r2, #0]
 80150a0:	4290      	cmp	r0, r2
 80150a2:	d211      	bcs.n	80150c8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x34>
 80150a4:	2214      	movs	r2, #20
 80150a6:	fb02 3300 	mla	r3, r2, r0, r3
 80150aa:	8a1a      	ldrh	r2, [r3, #16]
 80150ac:	8919      	ldrh	r1, [r3, #8]
 80150ae:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80150b2:	428a      	cmp	r2, r1
 80150b4:	db1d      	blt.n	80150f2 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 80150b6:	8a58      	ldrh	r0, [r3, #18]
 80150b8:	f3c0 000c 	ubfx	r0, r0, #0, #13
 80150bc:	895b      	ldrh	r3, [r3, #10]
 80150be:	4298      	cmp	r0, r3
 80150c0:	bfac      	ite	ge
 80150c2:	2000      	movge	r0, #0
 80150c4:	2001      	movlt	r0, #1
 80150c6:	4770      	bx	lr
 80150c8:	4b0d      	ldr	r3, [pc, #52]	; (8015100 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 80150ca:	881b      	ldrh	r3, [r3, #0]
 80150cc:	4413      	add	r3, r2
 80150ce:	4298      	cmp	r0, r3
 80150d0:	da0d      	bge.n	80150ee <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 80150d2:	4b0c      	ldr	r3, [pc, #48]	; (8015104 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x70>)
 80150d4:	1a80      	subs	r0, r0, r2
 80150d6:	220e      	movs	r2, #14
 80150d8:	681b      	ldr	r3, [r3, #0]
 80150da:	fb02 3300 	mla	r3, r2, r0, r3
 80150de:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 80150e2:	891a      	ldrh	r2, [r3, #8]
 80150e4:	4291      	cmp	r1, r2
 80150e6:	db04      	blt.n	80150f2 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 80150e8:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 80150ec:	e7e6      	b.n	80150bc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x28>
 80150ee:	2000      	movs	r0, #0
 80150f0:	4770      	bx	lr
 80150f2:	2001      	movs	r0, #1
 80150f4:	4770      	bx	lr
 80150f6:	bf00      	nop
 80150f8:	2400e15c 	.word	0x2400e15c
 80150fc:	2400e154 	.word	0x2400e154
 8015100:	2400e158 	.word	0x2400e158
 8015104:	2400e13c 	.word	0x2400e13c

08015108 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8015108:	b508      	push	{r3, lr}
 801510a:	4b12      	ldr	r3, [pc, #72]	; (8015154 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801510c:	6819      	ldr	r1, [r3, #0]
 801510e:	b931      	cbnz	r1, 801511e <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8015110:	4b11      	ldr	r3, [pc, #68]	; (8015158 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8015112:	f44f 619a 	mov.w	r1, #1232	; 0x4d0
 8015116:	4a11      	ldr	r2, [pc, #68]	; (801515c <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8015118:	4811      	ldr	r0, [pc, #68]	; (8015160 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 801511a:	f00a ff61 	bl	801ffe0 <__assert_func>
 801511e:	8803      	ldrh	r3, [r0, #0]
 8015120:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8015124:	4293      	cmp	r3, r2
 8015126:	d012      	beq.n	801514e <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8015128:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801512c:	4293      	cmp	r3, r2
 801512e:	d103      	bne.n	8015138 <_ZNK8touchgfx6Bitmap7getDataEv+0x30>
 8015130:	4b0c      	ldr	r3, [pc, #48]	; (8015164 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8015132:	681b      	ldr	r3, [r3, #0]
 8015134:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8015136:	bd08      	pop	{r3, pc}
 8015138:	4a0b      	ldr	r2, [pc, #44]	; (8015168 <_ZNK8touchgfx6Bitmap7getDataEv+0x60>)
 801513a:	6812      	ldr	r2, [r2, #0]
 801513c:	b11a      	cbz	r2, 8015146 <_ZNK8touchgfx6Bitmap7getDataEv+0x3e>
 801513e:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8015142:	2800      	cmp	r0, #0
 8015144:	d1f7      	bne.n	8015136 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 8015146:	2214      	movs	r2, #20
 8015148:	4353      	muls	r3, r2
 801514a:	58c8      	ldr	r0, [r1, r3]
 801514c:	e7f3      	b.n	8015136 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 801514e:	2000      	movs	r0, #0
 8015150:	e7f1      	b.n	8015136 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 8015152:	bf00      	nop
 8015154:	2400e15c 	.word	0x2400e15c
 8015158:	080227a4 	.word	0x080227a4
 801515c:	08024eb3 	.word	0x08024eb3
 8015160:	08024db9 	.word	0x08024db9
 8015164:	2400e0b4 	.word	0x2400e0b4
 8015168:	2400e138 	.word	0x2400e138

0801516c <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 801516c:	8802      	ldrh	r2, [r0, #0]
 801516e:	f64f 73fd 	movw	r3, #65533	; 0xfffd
 8015172:	429a      	cmp	r2, r3
 8015174:	d845      	bhi.n	8015202 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 8015176:	4b24      	ldr	r3, [pc, #144]	; (8015208 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8015178:	8818      	ldrh	r0, [r3, #0]
 801517a:	4282      	cmp	r2, r0
 801517c:	d221      	bcs.n	80151c2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x56>
 801517e:	4b23      	ldr	r3, [pc, #140]	; (801520c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8015180:	6819      	ldr	r1, [r3, #0]
 8015182:	2314      	movs	r3, #20
 8015184:	fb03 1302 	mla	r3, r3, r2, r1
 8015188:	6858      	ldr	r0, [r3, #4]
 801518a:	2800      	cmp	r0, #0
 801518c:	d03a      	beq.n	8015204 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 801518e:	4920      	ldr	r1, [pc, #128]	; (8015210 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8015190:	6809      	ldr	r1, [r1, #0]
 8015192:	2900      	cmp	r1, #0
 8015194:	d036      	beq.n	8015204 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 8015196:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801519a:	2900      	cmp	r1, #0
 801519c:	d032      	beq.n	8015204 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 801519e:	891a      	ldrh	r2, [r3, #8]
 80151a0:	8958      	ldrh	r0, [r3, #10]
 80151a2:	4350      	muls	r0, r2
 80151a4:	7c5a      	ldrb	r2, [r3, #17]
 80151a6:	7cdb      	ldrb	r3, [r3, #19]
 80151a8:	0952      	lsrs	r2, r2, #5
 80151aa:	f3c3 1342 	ubfx	r3, r3, #5, #3
 80151ae:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80151b2:	2b0b      	cmp	r3, #11
 80151b4:	bf18      	it	ne
 80151b6:	0040      	lslne	r0, r0, #1
 80151b8:	3003      	adds	r0, #3
 80151ba:	f020 0003 	bic.w	r0, r0, #3
 80151be:	4408      	add	r0, r1
 80151c0:	4770      	bx	lr
 80151c2:	4b14      	ldr	r3, [pc, #80]	; (8015214 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa8>)
 80151c4:	881b      	ldrh	r3, [r3, #0]
 80151c6:	4403      	add	r3, r0
 80151c8:	429a      	cmp	r2, r3
 80151ca:	da1a      	bge.n	8015202 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 80151cc:	4b12      	ldr	r3, [pc, #72]	; (8015218 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xac>)
 80151ce:	1a10      	subs	r0, r2, r0
 80151d0:	210e      	movs	r1, #14
 80151d2:	681b      	ldr	r3, [r3, #0]
 80151d4:	fb01 3000 	mla	r0, r1, r0, r3
 80151d8:	7b03      	ldrb	r3, [r0, #12]
 80151da:	f003 031f 	and.w	r3, r3, #31
 80151de:	2b0b      	cmp	r3, #11
 80151e0:	d10b      	bne.n	80151fa <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80151e2:	8903      	ldrh	r3, [r0, #8]
 80151e4:	8940      	ldrh	r0, [r0, #10]
 80151e6:	4358      	muls	r0, r3
 80151e8:	4b09      	ldr	r3, [pc, #36]	; (8015210 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 80151ea:	3003      	adds	r0, #3
 80151ec:	6819      	ldr	r1, [r3, #0]
 80151ee:	f020 0303 	bic.w	r3, r0, #3
 80151f2:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 80151f6:	4418      	add	r0, r3
 80151f8:	4770      	bx	lr
 80151fa:	2b0d      	cmp	r3, #13
 80151fc:	d101      	bne.n	8015202 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 80151fe:	300d      	adds	r0, #13
 8015200:	4770      	bx	lr
 8015202:	2000      	movs	r0, #0
 8015204:	4770      	bx	lr
 8015206:	bf00      	nop
 8015208:	2400e154 	.word	0x2400e154
 801520c:	2400e15c 	.word	0x2400e15c
 8015210:	2400e138 	.word	0x2400e138
 8015214:	2400e158 	.word	0x2400e158
 8015218:	2400e13c 	.word	0x2400e13c

0801521c <_ZNK8touchgfx6Bitmap9getFormatEv>:
 801521c:	4b17      	ldr	r3, [pc, #92]	; (801527c <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 801521e:	b510      	push	{r4, lr}
 8015220:	6819      	ldr	r1, [r3, #0]
 8015222:	8803      	ldrh	r3, [r0, #0]
 8015224:	b1e9      	cbz	r1, 8015262 <_ZNK8touchgfx6Bitmap9getFormatEv+0x46>
 8015226:	4a16      	ldr	r2, [pc, #88]	; (8015280 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 8015228:	8812      	ldrh	r2, [r2, #0]
 801522a:	429a      	cmp	r2, r3
 801522c:	d90a      	bls.n	8015244 <_ZNK8touchgfx6Bitmap9getFormatEv+0x28>
 801522e:	2214      	movs	r2, #20
 8015230:	fb02 1303 	mla	r3, r2, r3, r1
 8015234:	7c58      	ldrb	r0, [r3, #17]
 8015236:	0942      	lsrs	r2, r0, #5
 8015238:	7cd8      	ldrb	r0, [r3, #19]
 801523a:	f3c0 1042 	ubfx	r0, r0, #5, #3
 801523e:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8015242:	bd10      	pop	{r4, pc}
 8015244:	490f      	ldr	r1, [pc, #60]	; (8015284 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8015246:	8809      	ldrh	r1, [r1, #0]
 8015248:	4411      	add	r1, r2
 801524a:	428b      	cmp	r3, r1
 801524c:	da09      	bge.n	8015262 <_ZNK8touchgfx6Bitmap9getFormatEv+0x46>
 801524e:	1a9b      	subs	r3, r3, r2
 8015250:	4a0d      	ldr	r2, [pc, #52]	; (8015288 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8015252:	210e      	movs	r1, #14
 8015254:	6812      	ldr	r2, [r2, #0]
 8015256:	fb01 2303 	mla	r3, r1, r3, r2
 801525a:	7b18      	ldrb	r0, [r3, #12]
 801525c:	f000 001f 	and.w	r0, r0, #31
 8015260:	e7ef      	b.n	8015242 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8015262:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8015266:	4293      	cmp	r3, r2
 8015268:	d106      	bne.n	8015278 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5c>
 801526a:	f7ed feeb 	bl	8003044 <_ZN8touchgfx3HAL3lcdEv>
 801526e:	6803      	ldr	r3, [r0, #0]
 8015270:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015274:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015276:	4718      	bx	r3
 8015278:	2000      	movs	r0, #0
 801527a:	e7e2      	b.n	8015242 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 801527c:	2400e15c 	.word	0x2400e15c
 8015280:	2400e154 	.word	0x2400e154
 8015284:	2400e158 	.word	0x2400e158
 8015288:	2400e13c 	.word	0x2400e13c

0801528c <_ZNK8touchgfx8LCD24bpp8bitDepthEv>:
 801528c:	2018      	movs	r0, #24
 801528e:	4770      	bx	lr

08015290 <_ZNK8touchgfx8LCD24bpp17framebufferFormatEv>:
 8015290:	2001      	movs	r0, #1
 8015292:	4770      	bx	lr

08015294 <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015294:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015298:	b085      	sub	sp, #20
 801529a:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801529c:	9203      	str	r2, [sp, #12]
 801529e:	6870      	ldr	r0, [r6, #4]
 80152a0:	f8dd c058 	ldr.w	ip, [sp, #88]	; 0x58
 80152a4:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 80152a8:	9101      	str	r1, [sp, #4]
 80152aa:	fa1f f885 	uxth.w	r8, r5
 80152ae:	43ed      	mvns	r5, r5
 80152b0:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80152b4:	b2ed      	uxtb	r5, r5
 80152b6:	fb00 2404 	mla	r4, r0, r4, r2
 80152ba:	6832      	ldr	r2, [r6, #0]
 80152bc:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80152c0:	4414      	add	r4, r2
 80152c2:	f8dc 2000 	ldr.w	r2, [ip]
 80152c6:	9202      	str	r2, [sp, #8]
 80152c8:	f8dc 2004 	ldr.w	r2, [ip, #4]
 80152cc:	f102 0e04 	add.w	lr, r2, #4
 80152d0:	9a01      	ldr	r2, [sp, #4]
 80152d2:	2a00      	cmp	r2, #0
 80152d4:	dc03      	bgt.n	80152de <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80152d6:	9a03      	ldr	r2, [sp, #12]
 80152d8:	2a00      	cmp	r2, #0
 80152da:	f340 8116 	ble.w	801550a <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80152de:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80152e0:	f9bc a008 	ldrsh.w	sl, [ip, #8]
 80152e4:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80152e8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80152ea:	f9bc 900c 	ldrsh.w	r9, [ip, #12]
 80152ee:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80152f2:	2b00      	cmp	r3, #0
 80152f4:	dd0e      	ble.n	8015314 <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80152f6:	1406      	asrs	r6, r0, #16
 80152f8:	d405      	bmi.n	8015306 <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80152fa:	4556      	cmp	r6, sl
 80152fc:	da03      	bge.n	8015306 <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80152fe:	1416      	asrs	r6, r2, #16
 8015300:	d401      	bmi.n	8015306 <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015302:	454e      	cmp	r6, r9
 8015304:	db07      	blt.n	8015316 <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8015306:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8015308:	3b01      	subs	r3, #1
 801530a:	3403      	adds	r4, #3
 801530c:	4430      	add	r0, r6
 801530e:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8015310:	4432      	add	r2, r6
 8015312:	e7ee      	b.n	80152f2 <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8015314:	d063      	beq.n	80153de <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8015316:	1e5e      	subs	r6, r3, #1
 8015318:	9f11      	ldr	r7, [sp, #68]	; 0x44
 801531a:	fb07 0706 	mla	r7, r7, r6, r0
 801531e:	143f      	asrs	r7, r7, #16
 8015320:	d454      	bmi.n	80153cc <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8015322:	4557      	cmp	r7, sl
 8015324:	da52      	bge.n	80153cc <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8015326:	9f12      	ldr	r7, [sp, #72]	; 0x48
 8015328:	fb07 2606 	mla	r6, r7, r6, r2
 801532c:	1436      	asrs	r6, r6, #16
 801532e:	d44d      	bmi.n	80153cc <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8015330:	454e      	cmp	r6, r9
 8015332:	da4b      	bge.n	80153cc <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8015334:	1ce6      	adds	r6, r4, #3
 8015336:	4699      	mov	r9, r3
 8015338:	f1b9 0f00 	cmp.w	r9, #0
 801533c:	f106 0603 	add.w	r6, r6, #3
 8015340:	dd48      	ble.n	80153d4 <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 8015342:	f9bc b008 	ldrsh.w	fp, [ip, #8]
 8015346:	1417      	asrs	r7, r2, #16
 8015348:	9902      	ldr	r1, [sp, #8]
 801534a:	ea4f 4a20 	mov.w	sl, r0, asr #16
 801534e:	f109 39ff 	add.w	r9, r9, #4294967295
 8015352:	fb0b 1707 	mla	r7, fp, r7, r1
 8015356:	f816 bc06 	ldrb.w	fp, [r6, #-6]
 801535a:	9911      	ldr	r1, [sp, #68]	; 0x44
 801535c:	f817 700a 	ldrb.w	r7, [r7, sl]
 8015360:	fb1b fb05 	smulbb	fp, fp, r5
 8015364:	4408      	add	r0, r1
 8015366:	9912      	ldr	r1, [sp, #72]	; 0x48
 8015368:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801536c:	440a      	add	r2, r1
 801536e:	eb0e 0a07 	add.w	sl, lr, r7
 8015372:	f81e 7007 	ldrb.w	r7, [lr, r7]
 8015376:	fb07 b708 	mla	r7, r7, r8, fp
 801537a:	b2bf      	uxth	r7, r7
 801537c:	f107 0b01 	add.w	fp, r7, #1
 8015380:	eb0b 2717 	add.w	r7, fp, r7, lsr #8
 8015384:	f816 bc05 	ldrb.w	fp, [r6, #-5]
 8015388:	fb1b fb05 	smulbb	fp, fp, r5
 801538c:	123f      	asrs	r7, r7, #8
 801538e:	f806 7c06 	strb.w	r7, [r6, #-6]
 8015392:	f89a 7001 	ldrb.w	r7, [sl, #1]
 8015396:	fb07 b708 	mla	r7, r7, r8, fp
 801539a:	b2bf      	uxth	r7, r7
 801539c:	f107 0b01 	add.w	fp, r7, #1
 80153a0:	eb0b 2717 	add.w	r7, fp, r7, lsr #8
 80153a4:	123f      	asrs	r7, r7, #8
 80153a6:	f806 7c05 	strb.w	r7, [r6, #-5]
 80153aa:	f89a 7002 	ldrb.w	r7, [sl, #2]
 80153ae:	f816 ac04 	ldrb.w	sl, [r6, #-4]
 80153b2:	fb1a fa05 	smulbb	sl, sl, r5
 80153b6:	fb07 a708 	mla	r7, r7, r8, sl
 80153ba:	b2bf      	uxth	r7, r7
 80153bc:	f107 0a01 	add.w	sl, r7, #1
 80153c0:	eb0a 2717 	add.w	r7, sl, r7, lsr #8
 80153c4:	123f      	asrs	r7, r7, #8
 80153c6:	f806 7c04 	strb.w	r7, [r6, #-4]
 80153ca:	e7b5      	b.n	8015338 <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 80153cc:	2700      	movs	r7, #0
 80153ce:	1bde      	subs	r6, r3, r7
 80153d0:	2e00      	cmp	r6, #0
 80153d2:	dc42      	bgt.n	801545a <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 80153d4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80153d8:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80153dc:	441c      	add	r4, r3
 80153de:	9b01      	ldr	r3, [sp, #4]
 80153e0:	2b00      	cmp	r3, #0
 80153e2:	f340 8092 	ble.w	801550a <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80153e6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80153ea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80153ec:	ee30 0a04 	vadd.f32	s0, s0, s8
 80153f0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80153f4:	eef0 6a62 	vmov.f32	s13, s5
 80153f8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80153fc:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015400:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015404:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 8015408:	eef0 6a43 	vmov.f32	s13, s6
 801540c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015410:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8015414:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015418:	ee61 7a27 	vmul.f32	s15, s2, s15
 801541c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015420:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015424:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015428:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801542c:	ee12 2a90 	vmov	r2, s5
 8015430:	eef0 2a47 	vmov.f32	s5, s14
 8015434:	fb92 f3f3 	sdiv	r3, r2, r3
 8015438:	ee13 2a10 	vmov	r2, s6
 801543c:	9311      	str	r3, [sp, #68]	; 0x44
 801543e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015440:	eeb0 3a67 	vmov.f32	s6, s15
 8015444:	fb92 f3f3 	sdiv	r3, r2, r3
 8015448:	9312      	str	r3, [sp, #72]	; 0x48
 801544a:	9b01      	ldr	r3, [sp, #4]
 801544c:	9a03      	ldr	r2, [sp, #12]
 801544e:	3b01      	subs	r3, #1
 8015450:	9301      	str	r3, [sp, #4]
 8015452:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015454:	bf08      	it	eq
 8015456:	4613      	moveq	r3, r2
 8015458:	e73a      	b.n	80152d0 <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801545a:	ea5f 4a20 	movs.w	sl, r0, asr #16
 801545e:	d44e      	bmi.n	80154fe <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8015460:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8015464:	4556      	cmp	r6, sl
 8015466:	dd4a      	ble.n	80154fe <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8015468:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801546c:	d447      	bmi.n	80154fe <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801546e:	f8dc 100c 	ldr.w	r1, [ip, #12]
 8015472:	4559      	cmp	r1, fp
 8015474:	dd43      	ble.n	80154fe <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8015476:	fa0f f986 	sxth.w	r9, r6
 801547a:	9902      	ldr	r1, [sp, #8]
 801547c:	eb07 0647 	add.w	r6, r7, r7, lsl #1
 8015480:	fb0b 1909 	mla	r9, fp, r9, r1
 8015484:	f814 b006 	ldrb.w	fp, [r4, r6]
 8015488:	f819 900a 	ldrb.w	r9, [r9, sl]
 801548c:	fb1b fb05 	smulbb	fp, fp, r5
 8015490:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 8015494:	eb0e 0a09 	add.w	sl, lr, r9
 8015498:	f81e 9009 	ldrb.w	r9, [lr, r9]
 801549c:	fb09 b908 	mla	r9, r9, r8, fp
 80154a0:	fa1f f989 	uxth.w	r9, r9
 80154a4:	f109 0b01 	add.w	fp, r9, #1
 80154a8:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 80154ac:	ea4f 2929 	mov.w	r9, r9, asr #8
 80154b0:	f804 9006 	strb.w	r9, [r4, r6]
 80154b4:	4426      	add	r6, r4
 80154b6:	f89a 9001 	ldrb.w	r9, [sl, #1]
 80154ba:	f896 b001 	ldrb.w	fp, [r6, #1]
 80154be:	fb1b fb05 	smulbb	fp, fp, r5
 80154c2:	fb09 b908 	mla	r9, r9, r8, fp
 80154c6:	fa1f f989 	uxth.w	r9, r9
 80154ca:	f109 0b01 	add.w	fp, r9, #1
 80154ce:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 80154d2:	ea4f 2929 	mov.w	r9, r9, asr #8
 80154d6:	f886 9001 	strb.w	r9, [r6, #1]
 80154da:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80154de:	f896 a002 	ldrb.w	sl, [r6, #2]
 80154e2:	fb1a fa05 	smulbb	sl, sl, r5
 80154e6:	fb09 a908 	mla	r9, r9, r8, sl
 80154ea:	fa1f f989 	uxth.w	r9, r9
 80154ee:	f109 0a01 	add.w	sl, r9, #1
 80154f2:	eb0a 2919 	add.w	r9, sl, r9, lsr #8
 80154f6:	ea4f 2929 	mov.w	r9, r9, asr #8
 80154fa:	f886 9002 	strb.w	r9, [r6, #2]
 80154fe:	9911      	ldr	r1, [sp, #68]	; 0x44
 8015500:	3701      	adds	r7, #1
 8015502:	4408      	add	r0, r1
 8015504:	9912      	ldr	r1, [sp, #72]	; 0x48
 8015506:	440a      	add	r2, r1
 8015508:	e761      	b.n	80153ce <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 801550a:	b005      	add	sp, #20
 801550c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015510 <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015510:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015514:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8015516:	4693      	mov	fp, r2
 8015518:	9e14      	ldr	r6, [sp, #80]	; 0x50
 801551a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801551e:	6868      	ldr	r0, [r5, #4]
 8015520:	6877      	ldr	r7, [r6, #4]
 8015522:	9100      	str	r1, [sp, #0]
 8015524:	3704      	adds	r7, #4
 8015526:	e9dd 2412 	ldrd	r2, r4, [sp, #72]	; 0x48
 801552a:	e9dd 8e0f 	ldrd	r8, lr, [sp, #60]	; 0x3c
 801552e:	fb00 2404 	mla	r4, r0, r4, r2
 8015532:	682a      	ldr	r2, [r5, #0]
 8015534:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8015538:	4414      	add	r4, r2
 801553a:	6832      	ldr	r2, [r6, #0]
 801553c:	9201      	str	r2, [sp, #4]
 801553e:	9a00      	ldr	r2, [sp, #0]
 8015540:	2a00      	cmp	r2, #0
 8015542:	dc03      	bgt.n	801554c <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8015544:	f1bb 0f00 	cmp.w	fp, #0
 8015548:	f340 80bc 	ble.w	80156c4 <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801554c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801554e:	f9b6 a008 	ldrsh.w	sl, [r6, #8]
 8015552:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8015556:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8015558:	f9b6 900c 	ldrsh.w	r9, [r6, #12]
 801555c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015560:	2b00      	cmp	r3, #0
 8015562:	dd0c      	ble.n	801557e <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8015564:	1405      	asrs	r5, r0, #16
 8015566:	d405      	bmi.n	8015574 <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8015568:	4555      	cmp	r5, sl
 801556a:	da03      	bge.n	8015574 <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801556c:	1415      	asrs	r5, r2, #16
 801556e:	d401      	bmi.n	8015574 <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8015570:	454d      	cmp	r5, r9
 8015572:	db05      	blt.n	8015580 <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015574:	4440      	add	r0, r8
 8015576:	4472      	add	r2, lr
 8015578:	3b01      	subs	r3, #1
 801557a:	3403      	adds	r4, #3
 801557c:	e7f0      	b.n	8015560 <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801557e:	d03f      	beq.n	8015600 <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xf0>
 8015580:	1e5d      	subs	r5, r3, #1
 8015582:	fb08 0c05 	mla	ip, r8, r5, r0
 8015586:	ea5f 4c2c 	movs.w	ip, ip, asr #16
 801558a:	d42e      	bmi.n	80155ea <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xda>
 801558c:	45d4      	cmp	ip, sl
 801558e:	da2c      	bge.n	80155ea <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xda>
 8015590:	fb0e 2505 	mla	r5, lr, r5, r2
 8015594:	142d      	asrs	r5, r5, #16
 8015596:	d428      	bmi.n	80155ea <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xda>
 8015598:	454d      	cmp	r5, r9
 801559a:	da26      	bge.n	80155ea <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xda>
 801559c:	1ce5      	adds	r5, r4, #3
 801559e:	469c      	mov	ip, r3
 80155a0:	f1bc 0f00 	cmp.w	ip, #0
 80155a4:	f105 0503 	add.w	r5, r5, #3
 80155a8:	dd25      	ble.n	80155f6 <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xe6>
 80155aa:	f9b6 1008 	ldrsh.w	r1, [r6, #8]
 80155ae:	ea4f 4922 	mov.w	r9, r2, asr #16
 80155b2:	f10c 3cff 	add.w	ip, ip, #4294967295
 80155b6:	4472      	add	r2, lr
 80155b8:	468a      	mov	sl, r1
 80155ba:	9901      	ldr	r1, [sp, #4]
 80155bc:	fb0a 1909 	mla	r9, sl, r9, r1
 80155c0:	1401      	asrs	r1, r0, #16
 80155c2:	4440      	add	r0, r8
 80155c4:	f819 9001 	ldrb.w	r9, [r9, r1]
 80155c8:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 80155cc:	eb07 0a09 	add.w	sl, r7, r9
 80155d0:	f817 9009 	ldrb.w	r9, [r7, r9]
 80155d4:	f805 9c06 	strb.w	r9, [r5, #-6]
 80155d8:	f89a 9001 	ldrb.w	r9, [sl, #1]
 80155dc:	f805 9c05 	strb.w	r9, [r5, #-5]
 80155e0:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80155e4:	f805 9c04 	strb.w	r9, [r5, #-4]
 80155e8:	e7da      	b.n	80155a0 <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80155ea:	2500      	movs	r5, #0
 80155ec:	eba3 0c05 	sub.w	ip, r3, r5
 80155f0:	f1bc 0f00 	cmp.w	ip, #0
 80155f4:	dc3b      	bgt.n	801566e <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 80155f6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80155fa:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80155fe:	441c      	add	r4, r3
 8015600:	9b00      	ldr	r3, [sp, #0]
 8015602:	2b00      	cmp	r3, #0
 8015604:	dd5e      	ble.n	80156c4 <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8015606:	ee30 0a04 	vadd.f32	s0, s0, s8
 801560a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801560c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015610:	eeb0 6a62 	vmov.f32	s12, s5
 8015614:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015618:	ee31 1a05 	vadd.f32	s2, s2, s10
 801561c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015620:	ed8d 6a0d 	vstr	s12, [sp, #52]	; 0x34
 8015624:	eeb0 6a43 	vmov.f32	s12, s6
 8015628:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801562c:	ed8d 6a0e 	vstr	s12, [sp, #56]	; 0x38
 8015630:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015634:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015638:	ee77 2a62 	vsub.f32	s5, s14, s5
 801563c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015640:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015644:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015648:	ee12 2a90 	vmov	r2, s5
 801564c:	eef0 2a47 	vmov.f32	s5, s14
 8015650:	fb92 f8f3 	sdiv	r8, r2, r3
 8015654:	ee13 2a10 	vmov	r2, s6
 8015658:	eeb0 3a67 	vmov.f32	s6, s15
 801565c:	fb92 fef3 	sdiv	lr, r2, r3
 8015660:	9b00      	ldr	r3, [sp, #0]
 8015662:	3b01      	subs	r3, #1
 8015664:	9300      	str	r3, [sp, #0]
 8015666:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015668:	bf08      	it	eq
 801566a:	465b      	moveq	r3, fp
 801566c:	e767      	b.n	801553e <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801566e:	ea5f 4920 	movs.w	r9, r0, asr #16
 8015672:	d423      	bmi.n	80156bc <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8015674:	f8d6 c008 	ldr.w	ip, [r6, #8]
 8015678:	45cc      	cmp	ip, r9
 801567a:	dd1f      	ble.n	80156bc <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801567c:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8015680:	d41c      	bmi.n	80156bc <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8015682:	68f1      	ldr	r1, [r6, #12]
 8015684:	4551      	cmp	r1, sl
 8015686:	dd19      	ble.n	80156bc <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8015688:	fa0f fc8c 	sxth.w	ip, ip
 801568c:	9901      	ldr	r1, [sp, #4]
 801568e:	fb0a 1c0c 	mla	ip, sl, ip, r1
 8015692:	f81c c009 	ldrb.w	ip, [ip, r9]
 8015696:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801569a:	f817 a00c 	ldrb.w	sl, [r7, ip]
 801569e:	eb07 090c 	add.w	r9, r7, ip
 80156a2:	eb05 0c45 	add.w	ip, r5, r5, lsl #1
 80156a6:	f804 a00c 	strb.w	sl, [r4, ip]
 80156aa:	44a4      	add	ip, r4
 80156ac:	f899 a001 	ldrb.w	sl, [r9, #1]
 80156b0:	f88c a001 	strb.w	sl, [ip, #1]
 80156b4:	f899 9002 	ldrb.w	r9, [r9, #2]
 80156b8:	f88c 9002 	strb.w	r9, [ip, #2]
 80156bc:	4440      	add	r0, r8
 80156be:	4472      	add	r2, lr
 80156c0:	3501      	adds	r5, #1
 80156c2:	e793      	b.n	80155ec <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xdc>
 80156c4:	b003      	add	sp, #12
 80156c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080156ca <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80156ca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80156ce:	b085      	sub	sp, #20
 80156d0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80156d4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80156d6:	9202      	str	r2, [sp, #8]
 80156d8:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 80156dc:	6860      	ldr	r0, [r4, #4]
 80156de:	9203      	str	r2, [sp, #12]
 80156e0:	f8dd c058 	ldr.w	ip, [sp, #88]	; 0x58
 80156e4:	f8dd e044 	ldr.w	lr, [sp, #68]	; 0x44
 80156e8:	e9dd 2514 	ldrd	r2, r5, [sp, #80]	; 0x50
 80156ec:	fb00 2505 	mla	r5, r0, r5, r2
 80156f0:	6822      	ldr	r2, [r4, #0]
 80156f2:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80156f6:	4415      	add	r5, r2
 80156f8:	f8dc 2000 	ldr.w	r2, [ip]
 80156fc:	9200      	str	r2, [sp, #0]
 80156fe:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8015702:	3204      	adds	r2, #4
 8015704:	9201      	str	r2, [sp, #4]
 8015706:	2900      	cmp	r1, #0
 8015708:	dc03      	bgt.n	8015712 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801570a:	9a02      	ldr	r2, [sp, #8]
 801570c:	2a00      	cmp	r2, #0
 801570e:	f340 8127 	ble.w	8015960 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8015712:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015714:	f9bc 8008 	ldrsh.w	r8, [ip, #8]
 8015718:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 801571c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801571e:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8015722:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8015726:	2b00      	cmp	r3, #0
 8015728:	dd0d      	ble.n	8015746 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801572a:	1422      	asrs	r2, r4, #16
 801572c:	d405      	bmi.n	801573a <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801572e:	4542      	cmp	r2, r8
 8015730:	da03      	bge.n	801573a <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015732:	1402      	asrs	r2, r0, #16
 8015734:	d401      	bmi.n	801573a <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015736:	42ba      	cmp	r2, r7
 8015738:	db06      	blt.n	8015748 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801573a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801573c:	4474      	add	r4, lr
 801573e:	3b01      	subs	r3, #1
 8015740:	3503      	adds	r5, #3
 8015742:	4410      	add	r0, r2
 8015744:	e7ef      	b.n	8015726 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8015746:	d075      	beq.n	8015834 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8015748:	1e5a      	subs	r2, r3, #1
 801574a:	fb0e 4602 	mla	r6, lr, r2, r4
 801574e:	1436      	asrs	r6, r6, #16
 8015750:	d465      	bmi.n	801581e <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8015752:	4546      	cmp	r6, r8
 8015754:	da63      	bge.n	801581e <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8015756:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8015758:	fb06 0202 	mla	r2, r6, r2, r0
 801575c:	1412      	asrs	r2, r2, #16
 801575e:	d45e      	bmi.n	801581e <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8015760:	42ba      	cmp	r2, r7
 8015762:	da5c      	bge.n	801581e <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8015764:	1cef      	adds	r7, r5, #3
 8015766:	4699      	mov	r9, r3
 8015768:	f1b9 0f00 	cmp.w	r9, #0
 801576c:	dd5d      	ble.n	801582a <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x160>
 801576e:	1402      	asrs	r2, r0, #16
 8015770:	f9bc 8008 	ldrsh.w	r8, [ip, #8]
 8015774:	1426      	asrs	r6, r4, #16
 8015776:	4692      	mov	sl, r2
 8015778:	9a00      	ldr	r2, [sp, #0]
 801577a:	fb08 220a 	mla	r2, r8, sl, r2
 801577e:	5d92      	ldrb	r2, [r2, r6]
 8015780:	9e01      	ldr	r6, [sp, #4]
 8015782:	f856 6022 	ldr.w	r6, [r6, r2, lsl #2]
 8015786:	ea5f 6816 	movs.w	r8, r6, lsr #24
 801578a:	d041      	beq.n	8015810 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801578c:	9a03      	ldr	r2, [sp, #12]
 801578e:	fa5f fb86 	uxtb.w	fp, r6
 8015792:	fb02 f808 	mul.w	r8, r2, r8
 8015796:	f108 0201 	add.w	r2, r8, #1
 801579a:	eb02 2228 	add.w	r2, r2, r8, asr #8
 801579e:	f817 8c03 	ldrb.w	r8, [r7, #-3]
 80157a2:	1212      	asrs	r2, r2, #8
 80157a4:	fa1f fa82 	uxth.w	sl, r2
 80157a8:	43d2      	mvns	r2, r2
 80157aa:	fb1b fb0a 	smulbb	fp, fp, sl
 80157ae:	b2d2      	uxtb	r2, r2
 80157b0:	fb08 b802 	mla	r8, r8, r2, fp
 80157b4:	fa1f f888 	uxth.w	r8, r8
 80157b8:	f108 0b01 	add.w	fp, r8, #1
 80157bc:	eb0b 2818 	add.w	r8, fp, r8, lsr #8
 80157c0:	f3c6 2b07 	ubfx	fp, r6, #8, #8
 80157c4:	f3c6 4607 	ubfx	r6, r6, #16, #8
 80157c8:	fb1b fb0a 	smulbb	fp, fp, sl
 80157cc:	ea4f 2828 	mov.w	r8, r8, asr #8
 80157d0:	fb16 fa0a 	smulbb	sl, r6, sl
 80157d4:	f817 6c01 	ldrb.w	r6, [r7, #-1]
 80157d8:	f807 8c03 	strb.w	r8, [r7, #-3]
 80157dc:	f817 8c02 	ldrb.w	r8, [r7, #-2]
 80157e0:	fb06 aa02 	mla	sl, r6, r2, sl
 80157e4:	fb08 b802 	mla	r8, r8, r2, fp
 80157e8:	fa1f fa8a 	uxth.w	sl, sl
 80157ec:	fa1f f888 	uxth.w	r8, r8
 80157f0:	f10a 0601 	add.w	r6, sl, #1
 80157f4:	f108 0b01 	add.w	fp, r8, #1
 80157f8:	eb06 2a1a 	add.w	sl, r6, sl, lsr #8
 80157fc:	eb0b 2818 	add.w	r8, fp, r8, lsr #8
 8015800:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 8015804:	ea4f 2828 	mov.w	r8, r8, asr #8
 8015808:	f807 ac01 	strb.w	sl, [r7, #-1]
 801580c:	f807 8c02 	strb.w	r8, [r7, #-2]
 8015810:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015812:	4474      	add	r4, lr
 8015814:	3703      	adds	r7, #3
 8015816:	f109 39ff 	add.w	r9, r9, #4294967295
 801581a:	4410      	add	r0, r2
 801581c:	e7a4      	b.n	8015768 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801581e:	f04f 0800 	mov.w	r8, #0
 8015822:	eba3 0208 	sub.w	r2, r3, r8
 8015826:	2a00      	cmp	r2, #0
 8015828:	dc3b      	bgt.n	80158a2 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801582a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801582e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8015832:	441d      	add	r5, r3
 8015834:	2900      	cmp	r1, #0
 8015836:	f340 8093 	ble.w	8015960 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801583a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801583e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015840:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015844:	3901      	subs	r1, #1
 8015846:	eeb0 6a62 	vmov.f32	s12, s5
 801584a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801584e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015852:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015856:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801585a:	eeb0 6a43 	vmov.f32	s12, s6
 801585e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015862:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8015866:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801586a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801586e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015872:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015876:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801587a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801587e:	ee12 2a90 	vmov	r2, s5
 8015882:	eef0 2a47 	vmov.f32	s5, s14
 8015886:	fb92 fef3 	sdiv	lr, r2, r3
 801588a:	ee13 2a10 	vmov	r2, s6
 801588e:	eeb0 3a67 	vmov.f32	s6, s15
 8015892:	fb92 f3f3 	sdiv	r3, r2, r3
 8015896:	9a02      	ldr	r2, [sp, #8]
 8015898:	9312      	str	r3, [sp, #72]	; 0x48
 801589a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801589c:	bf08      	it	eq
 801589e:	4613      	moveq	r3, r2
 80158a0:	e731      	b.n	8015706 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80158a2:	1427      	asrs	r7, r4, #16
 80158a4:	d456      	bmi.n	8015954 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 80158a6:	f8dc 6008 	ldr.w	r6, [ip, #8]
 80158aa:	42be      	cmp	r6, r7
 80158ac:	dd52      	ble.n	8015954 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 80158ae:	ea5f 4920 	movs.w	r9, r0, asr #16
 80158b2:	d44f      	bmi.n	8015954 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 80158b4:	f8dc 200c 	ldr.w	r2, [ip, #12]
 80158b8:	454a      	cmp	r2, r9
 80158ba:	dd4b      	ble.n	8015954 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 80158bc:	9a00      	ldr	r2, [sp, #0]
 80158be:	b236      	sxth	r6, r6
 80158c0:	fb09 2606 	mla	r6, r9, r6, r2
 80158c4:	5df2      	ldrb	r2, [r6, r7]
 80158c6:	9e01      	ldr	r6, [sp, #4]
 80158c8:	f856 7022 	ldr.w	r7, [r6, r2, lsl #2]
 80158cc:	0e3a      	lsrs	r2, r7, #24
 80158ce:	d041      	beq.n	8015954 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 80158d0:	9e03      	ldr	r6, [sp, #12]
 80158d2:	fa5f fb87 	uxtb.w	fp, r7
 80158d6:	4372      	muls	r2, r6
 80158d8:	1c56      	adds	r6, r2, #1
 80158da:	eb06 2222 	add.w	r2, r6, r2, asr #8
 80158de:	eb08 0648 	add.w	r6, r8, r8, lsl #1
 80158e2:	1212      	asrs	r2, r2, #8
 80158e4:	f815 9006 	ldrb.w	r9, [r5, r6]
 80158e8:	fa1f fa82 	uxth.w	sl, r2
 80158ec:	43d2      	mvns	r2, r2
 80158ee:	fb1b fb0a 	smulbb	fp, fp, sl
 80158f2:	b2d2      	uxtb	r2, r2
 80158f4:	fb09 b902 	mla	r9, r9, r2, fp
 80158f8:	fa1f f989 	uxth.w	r9, r9
 80158fc:	f109 0b01 	add.w	fp, r9, #1
 8015900:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 8015904:	f3c7 2b07 	ubfx	fp, r7, #8, #8
 8015908:	f3c7 4707 	ubfx	r7, r7, #16, #8
 801590c:	fb1b fb0a 	smulbb	fp, fp, sl
 8015910:	ea4f 2929 	mov.w	r9, r9, asr #8
 8015914:	fb17 fa0a 	smulbb	sl, r7, sl
 8015918:	f805 9006 	strb.w	r9, [r5, r6]
 801591c:	442e      	add	r6, r5
 801591e:	78b7      	ldrb	r7, [r6, #2]
 8015920:	f896 9001 	ldrb.w	r9, [r6, #1]
 8015924:	fb07 aa02 	mla	sl, r7, r2, sl
 8015928:	fb09 b902 	mla	r9, r9, r2, fp
 801592c:	fa1f fa8a 	uxth.w	sl, sl
 8015930:	fa1f f989 	uxth.w	r9, r9
 8015934:	f10a 0701 	add.w	r7, sl, #1
 8015938:	f109 0b01 	add.w	fp, r9, #1
 801593c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8015940:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 8015944:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 8015948:	ea4f 2929 	mov.w	r9, r9, asr #8
 801594c:	f886 a002 	strb.w	sl, [r6, #2]
 8015950:	f886 9001 	strb.w	r9, [r6, #1]
 8015954:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015956:	4474      	add	r4, lr
 8015958:	f108 0801 	add.w	r8, r8, #1
 801595c:	4410      	add	r0, r2
 801595e:	e760      	b.n	8015822 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x158>
 8015960:	b005      	add	sp, #20
 8015962:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015966 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015966:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801596a:	b085      	sub	sp, #20
 801596c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015970:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8015972:	9203      	str	r2, [sp, #12]
 8015974:	6868      	ldr	r0, [r5, #4]
 8015976:	f8dd c058 	ldr.w	ip, [sp, #88]	; 0x58
 801597a:	f8dd e044 	ldr.w	lr, [sp, #68]	; 0x44
 801597e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8015982:	fb00 2404 	mla	r4, r0, r4, r2
 8015986:	682a      	ldr	r2, [r5, #0]
 8015988:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801598c:	4414      	add	r4, r2
 801598e:	f8dc 2000 	ldr.w	r2, [ip]
 8015992:	9201      	str	r2, [sp, #4]
 8015994:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8015998:	3204      	adds	r2, #4
 801599a:	9202      	str	r2, [sp, #8]
 801599c:	2900      	cmp	r1, #0
 801599e:	dc03      	bgt.n	80159a8 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 80159a0:	9a03      	ldr	r2, [sp, #12]
 80159a2:	2a00      	cmp	r2, #0
 80159a4:	f340 8137 	ble.w	8015c16 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 80159a8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80159aa:	f9bc 8008 	ldrsh.w	r8, [ip, #8]
 80159ae:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80159b2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80159b4:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 80159b8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80159bc:	2b00      	cmp	r3, #0
 80159be:	dd0d      	ble.n	80159dc <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80159c0:	1405      	asrs	r5, r0, #16
 80159c2:	d405      	bmi.n	80159d0 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 80159c4:	4545      	cmp	r5, r8
 80159c6:	da03      	bge.n	80159d0 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 80159c8:	1415      	asrs	r5, r2, #16
 80159ca:	d401      	bmi.n	80159d0 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 80159cc:	42bd      	cmp	r5, r7
 80159ce:	db06      	blt.n	80159de <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80159d0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80159d2:	4470      	add	r0, lr
 80159d4:	3b01      	subs	r3, #1
 80159d6:	3403      	adds	r4, #3
 80159d8:	442a      	add	r2, r5
 80159da:	e7ef      	b.n	80159bc <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 80159dc:	d070      	beq.n	8015ac0 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15a>
 80159de:	1e5d      	subs	r5, r3, #1
 80159e0:	fb0e 0605 	mla	r6, lr, r5, r0
 80159e4:	1436      	asrs	r6, r6, #16
 80159e6:	d462      	bmi.n	8015aae <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 80159e8:	4546      	cmp	r6, r8
 80159ea:	da60      	bge.n	8015aae <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 80159ec:	9e12      	ldr	r6, [sp, #72]	; 0x48
 80159ee:	fb06 2505 	mla	r5, r6, r5, r2
 80159f2:	142d      	asrs	r5, r5, #16
 80159f4:	d45b      	bmi.n	8015aae <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 80159f6:	42bd      	cmp	r5, r7
 80159f8:	da59      	bge.n	8015aae <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 80159fa:	1ce5      	adds	r5, r4, #3
 80159fc:	469a      	mov	sl, r3
 80159fe:	f1ba 0f00 	cmp.w	sl, #0
 8015a02:	dd58      	ble.n	8015ab6 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x150>
 8015a04:	1416      	asrs	r6, r2, #16
 8015a06:	f9bc 8008 	ldrsh.w	r8, [ip, #8]
 8015a0a:	1407      	asrs	r7, r0, #16
 8015a0c:	46b1      	mov	r9, r6
 8015a0e:	9e01      	ldr	r6, [sp, #4]
 8015a10:	fb08 6609 	mla	r6, r8, r9, r6
 8015a14:	5df6      	ldrb	r6, [r6, r7]
 8015a16:	9f02      	ldr	r7, [sp, #8]
 8015a18:	f857 6026 	ldr.w	r6, [r7, r6, lsl #2]
 8015a1c:	0e37      	lsrs	r7, r6, #24
 8015a1e:	2fff      	cmp	r7, #255	; 0xff
 8015a20:	f000 80f0 	beq.w	8015c04 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29e>
 8015a24:	fa5f f887 	uxtb.w	r8, r7
 8015a28:	b3d7      	cbz	r7, 8015aa0 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8015a2a:	fa1f f788 	uxth.w	r7, r8
 8015a2e:	ea6f 0808 	mvn.w	r8, r8
 8015a32:	fa5f fb86 	uxtb.w	fp, r6
 8015a36:	f815 9c03 	ldrb.w	r9, [r5, #-3]
 8015a3a:	fa5f f888 	uxtb.w	r8, r8
 8015a3e:	fb1b fb07 	smulbb	fp, fp, r7
 8015a42:	fb09 b908 	mla	r9, r9, r8, fp
 8015a46:	fa1f f989 	uxth.w	r9, r9
 8015a4a:	f109 0b01 	add.w	fp, r9, #1
 8015a4e:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 8015a52:	f815 bc02 	ldrb.w	fp, [r5, #-2]
 8015a56:	fb1b fb08 	smulbb	fp, fp, r8
 8015a5a:	ea4f 2929 	mov.w	r9, r9, asr #8
 8015a5e:	f805 9c03 	strb.w	r9, [r5, #-3]
 8015a62:	f3c6 2907 	ubfx	r9, r6, #8, #8
 8015a66:	f3c6 4607 	ubfx	r6, r6, #16, #8
 8015a6a:	fb09 b907 	mla	r9, r9, r7, fp
 8015a6e:	fa1f f989 	uxth.w	r9, r9
 8015a72:	f109 0b01 	add.w	fp, r9, #1
 8015a76:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 8015a7a:	ea4f 2929 	mov.w	r9, r9, asr #8
 8015a7e:	f805 9c02 	strb.w	r9, [r5, #-2]
 8015a82:	f815 9c01 	ldrb.w	r9, [r5, #-1]
 8015a86:	fb19 f808 	smulbb	r8, r9, r8
 8015a8a:	fb06 8607 	mla	r6, r6, r7, r8
 8015a8e:	b2b6      	uxth	r6, r6
 8015a90:	f106 0801 	add.w	r8, r6, #1
 8015a94:	eb08 2816 	add.w	r8, r8, r6, lsr #8
 8015a98:	ea4f 2828 	mov.w	r8, r8, asr #8
 8015a9c:	f805 8c01 	strb.w	r8, [r5, #-1]
 8015aa0:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8015aa2:	4470      	add	r0, lr
 8015aa4:	3503      	adds	r5, #3
 8015aa6:	f10a 3aff 	add.w	sl, sl, #4294967295
 8015aaa:	4432      	add	r2, r6
 8015aac:	e7a7      	b.n	80159fe <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8015aae:	2600      	movs	r6, #0
 8015ab0:	1b9d      	subs	r5, r3, r6
 8015ab2:	2d00      	cmp	r5, #0
 8015ab4:	dc3b      	bgt.n	8015b2e <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8015ab6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015aba:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8015abe:	441c      	add	r4, r3
 8015ac0:	2900      	cmp	r1, #0
 8015ac2:	f340 80a8 	ble.w	8015c16 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 8015ac6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015aca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015acc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015ad0:	3901      	subs	r1, #1
 8015ad2:	eeb0 6a62 	vmov.f32	s12, s5
 8015ad6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015ada:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015ade:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015ae2:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8015ae6:	eeb0 6a43 	vmov.f32	s12, s6
 8015aea:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015aee:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8015af2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015af6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015afa:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015afe:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015b02:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015b06:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015b0a:	ee12 2a90 	vmov	r2, s5
 8015b0e:	eef0 2a47 	vmov.f32	s5, s14
 8015b12:	fb92 fef3 	sdiv	lr, r2, r3
 8015b16:	ee13 2a10 	vmov	r2, s6
 8015b1a:	eeb0 3a67 	vmov.f32	s6, s15
 8015b1e:	fb92 f3f3 	sdiv	r3, r2, r3
 8015b22:	9a03      	ldr	r2, [sp, #12]
 8015b24:	9312      	str	r3, [sp, #72]	; 0x48
 8015b26:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015b28:	bf08      	it	eq
 8015b2a:	4613      	moveq	r3, r2
 8015b2c:	e736      	b.n	801599c <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8015b2e:	ea5f 4820 	movs.w	r8, r0, asr #16
 8015b32:	d457      	bmi.n	8015be4 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8015b34:	f8dc 7008 	ldr.w	r7, [ip, #8]
 8015b38:	4547      	cmp	r7, r8
 8015b3a:	dd53      	ble.n	8015be4 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8015b3c:	ea5f 4922 	movs.w	r9, r2, asr #16
 8015b40:	d450      	bmi.n	8015be4 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8015b42:	f8dc 500c 	ldr.w	r5, [ip, #12]
 8015b46:	454d      	cmp	r5, r9
 8015b48:	dd4c      	ble.n	8015be4 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8015b4a:	9d01      	ldr	r5, [sp, #4]
 8015b4c:	b23f      	sxth	r7, r7
 8015b4e:	fb09 5707 	mla	r7, r9, r7, r5
 8015b52:	f817 5008 	ldrb.w	r5, [r7, r8]
 8015b56:	9f02      	ldr	r7, [sp, #8]
 8015b58:	f857 5025 	ldr.w	r5, [r7, r5, lsl #2]
 8015b5c:	0e2f      	lsrs	r7, r5, #24
 8015b5e:	2fff      	cmp	r7, #255	; 0xff
 8015b60:	d045      	beq.n	8015bee <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8015b62:	fa5f f987 	uxtb.w	r9, r7
 8015b66:	b3ef      	cbz	r7, 8015be4 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8015b68:	fa1f f889 	uxth.w	r8, r9
 8015b6c:	ea6f 0909 	mvn.w	r9, r9
 8015b70:	eb06 0746 	add.w	r7, r6, r6, lsl #1
 8015b74:	fa5f fb85 	uxtb.w	fp, r5
 8015b78:	f814 a007 	ldrb.w	sl, [r4, r7]
 8015b7c:	fa5f f989 	uxtb.w	r9, r9
 8015b80:	fb1b fb08 	smulbb	fp, fp, r8
 8015b84:	fb0a ba09 	mla	sl, sl, r9, fp
 8015b88:	fa1f fa8a 	uxth.w	sl, sl
 8015b8c:	f10a 0b01 	add.w	fp, sl, #1
 8015b90:	eb0b 2a1a 	add.w	sl, fp, sl, lsr #8
 8015b94:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 8015b98:	f804 a007 	strb.w	sl, [r4, r7]
 8015b9c:	4427      	add	r7, r4
 8015b9e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8015ba2:	f3c5 4507 	ubfx	r5, r5, #16, #8
 8015ba6:	f897 b001 	ldrb.w	fp, [r7, #1]
 8015baa:	fb1b fb09 	smulbb	fp, fp, r9
 8015bae:	fb0a ba08 	mla	sl, sl, r8, fp
 8015bb2:	fa1f fa8a 	uxth.w	sl, sl
 8015bb6:	f10a 0b01 	add.w	fp, sl, #1
 8015bba:	eb0b 2a1a 	add.w	sl, fp, sl, lsr #8
 8015bbe:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 8015bc2:	f887 a001 	strb.w	sl, [r7, #1]
 8015bc6:	f897 a002 	ldrb.w	sl, [r7, #2]
 8015bca:	fb1a f909 	smulbb	r9, sl, r9
 8015bce:	fb05 9508 	mla	r5, r5, r8, r9
 8015bd2:	b2ad      	uxth	r5, r5
 8015bd4:	f105 0901 	add.w	r9, r5, #1
 8015bd8:	eb09 2915 	add.w	r9, r9, r5, lsr #8
 8015bdc:	ea4f 2929 	mov.w	r9, r9, asr #8
 8015be0:	f887 9002 	strb.w	r9, [r7, #2]
 8015be4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8015be6:	4470      	add	r0, lr
 8015be8:	3601      	adds	r6, #1
 8015bea:	442a      	add	r2, r5
 8015bec:	e760      	b.n	8015ab0 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8015bee:	eb06 0746 	add.w	r7, r6, r6, lsl #1
 8015bf2:	ea4f 2815 	mov.w	r8, r5, lsr #8
 8015bf6:	55e5      	strb	r5, [r4, r7]
 8015bf8:	4427      	add	r7, r4
 8015bfa:	0c2d      	lsrs	r5, r5, #16
 8015bfc:	f887 8001 	strb.w	r8, [r7, #1]
 8015c00:	70bd      	strb	r5, [r7, #2]
 8015c02:	e7ef      	b.n	8015be4 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8015c04:	0a37      	lsrs	r7, r6, #8
 8015c06:	f805 6c03 	strb.w	r6, [r5, #-3]
 8015c0a:	0c36      	lsrs	r6, r6, #16
 8015c0c:	f805 7c02 	strb.w	r7, [r5, #-2]
 8015c10:	f805 6c01 	strb.w	r6, [r5, #-1]
 8015c14:	e744      	b.n	8015aa0 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8015c16:	b005      	add	sp, #20
 8015c18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015c1c <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015c1c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015c20:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8015c22:	9201      	str	r2, [sp, #4]
 8015c24:	6870      	ldr	r0, [r6, #4]
 8015c26:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 8015c2a:	f8dd c050 	ldr.w	ip, [sp, #80]	; 0x50
 8015c2e:	fa1f fe85 	uxth.w	lr, r5
 8015c32:	43ed      	mvns	r5, r5
 8015c34:	f8dc 8000 	ldr.w	r8, [ip]
 8015c38:	b2ed      	uxtb	r5, r5
 8015c3a:	e9dd 2412 	ldrd	r2, r4, [sp, #72]	; 0x48
 8015c3e:	fb00 2404 	mla	r4, r0, r4, r2
 8015c42:	6832      	ldr	r2, [r6, #0]
 8015c44:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8015c48:	4414      	add	r4, r2
 8015c4a:	2900      	cmp	r1, #0
 8015c4c:	dc03      	bgt.n	8015c56 <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8015c4e:	9a01      	ldr	r2, [sp, #4]
 8015c50:	2a00      	cmp	r2, #0
 8015c52:	f340 810d 	ble.w	8015e70 <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8015c56:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8015c58:	f9bc a008 	ldrsh.w	sl, [ip, #8]
 8015c5c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8015c60:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8015c62:	f9bc 900c 	ldrsh.w	r9, [ip, #12]
 8015c66:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015c6a:	2b00      	cmp	r3, #0
 8015c6c:	dd0e      	ble.n	8015c8c <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015c6e:	1406      	asrs	r6, r0, #16
 8015c70:	d405      	bmi.n	8015c7e <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8015c72:	4556      	cmp	r6, sl
 8015c74:	da03      	bge.n	8015c7e <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8015c76:	1416      	asrs	r6, r2, #16
 8015c78:	d401      	bmi.n	8015c7e <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8015c7a:	454e      	cmp	r6, r9
 8015c7c:	db07      	blt.n	8015c8e <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015c7e:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8015c80:	3b01      	subs	r3, #1
 8015c82:	3403      	adds	r4, #3
 8015c84:	4430      	add	r0, r6
 8015c86:	9e10      	ldr	r6, [sp, #64]	; 0x40
 8015c88:	4432      	add	r2, r6
 8015c8a:	e7ee      	b.n	8015c6a <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8015c8c:	d060      	beq.n	8015d50 <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 8015c8e:	1e5e      	subs	r6, r3, #1
 8015c90:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8015c92:	fb07 0706 	mla	r7, r7, r6, r0
 8015c96:	143f      	asrs	r7, r7, #16
 8015c98:	d451      	bmi.n	8015d3e <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x122>
 8015c9a:	4557      	cmp	r7, sl
 8015c9c:	da4f      	bge.n	8015d3e <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x122>
 8015c9e:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8015ca0:	fb07 2606 	mla	r6, r7, r6, r2
 8015ca4:	1436      	asrs	r6, r6, #16
 8015ca6:	d44a      	bmi.n	8015d3e <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x122>
 8015ca8:	454e      	cmp	r6, r9
 8015caa:	da48      	bge.n	8015d3e <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x122>
 8015cac:	1ce6      	adds	r6, r4, #3
 8015cae:	4699      	mov	r9, r3
 8015cb0:	f1b9 0f00 	cmp.w	r9, #0
 8015cb4:	f106 0603 	add.w	r6, r6, #3
 8015cb8:	dd45      	ble.n	8015d46 <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 8015cba:	f9bc b008 	ldrsh.w	fp, [ip, #8]
 8015cbe:	ea4f 4a20 	mov.w	sl, r0, asr #16
 8015cc2:	1417      	asrs	r7, r2, #16
 8015cc4:	f109 39ff 	add.w	r9, r9, #4294967295
 8015cc8:	fb0b a707 	mla	r7, fp, r7, sl
 8015ccc:	f816 bc06 	ldrb.w	fp, [r6, #-6]
 8015cd0:	fb1b fb05 	smulbb	fp, fp, r5
 8015cd4:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8015cd8:	eb08 0a07 	add.w	sl, r8, r7
 8015cdc:	f818 7007 	ldrb.w	r7, [r8, r7]
 8015ce0:	fb07 b70e 	mla	r7, r7, lr, fp
 8015ce4:	b2bf      	uxth	r7, r7
 8015ce6:	f107 0b01 	add.w	fp, r7, #1
 8015cea:	eb0b 2717 	add.w	r7, fp, r7, lsr #8
 8015cee:	f816 bc05 	ldrb.w	fp, [r6, #-5]
 8015cf2:	fb1b fb05 	smulbb	fp, fp, r5
 8015cf6:	123f      	asrs	r7, r7, #8
 8015cf8:	f806 7c06 	strb.w	r7, [r6, #-6]
 8015cfc:	f89a 7001 	ldrb.w	r7, [sl, #1]
 8015d00:	fb07 b70e 	mla	r7, r7, lr, fp
 8015d04:	b2bf      	uxth	r7, r7
 8015d06:	f107 0b01 	add.w	fp, r7, #1
 8015d0a:	eb0b 2717 	add.w	r7, fp, r7, lsr #8
 8015d0e:	123f      	asrs	r7, r7, #8
 8015d10:	f806 7c05 	strb.w	r7, [r6, #-5]
 8015d14:	f89a 7002 	ldrb.w	r7, [sl, #2]
 8015d18:	f816 ac04 	ldrb.w	sl, [r6, #-4]
 8015d1c:	fb1a fa05 	smulbb	sl, sl, r5
 8015d20:	fb07 a70e 	mla	r7, r7, lr, sl
 8015d24:	b2bf      	uxth	r7, r7
 8015d26:	f107 0a01 	add.w	sl, r7, #1
 8015d2a:	eb0a 2717 	add.w	r7, sl, r7, lsr #8
 8015d2e:	123f      	asrs	r7, r7, #8
 8015d30:	f806 7c04 	strb.w	r7, [r6, #-4]
 8015d34:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8015d36:	4438      	add	r0, r7
 8015d38:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8015d3a:	443a      	add	r2, r7
 8015d3c:	e7b8      	b.n	8015cb0 <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8015d3e:	2700      	movs	r7, #0
 8015d40:	1bde      	subs	r6, r3, r7
 8015d42:	2e00      	cmp	r6, #0
 8015d44:	dc3f      	bgt.n	8015dc6 <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8015d46:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015d4a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8015d4e:	441c      	add	r4, r3
 8015d50:	2900      	cmp	r1, #0
 8015d52:	f340 808d 	ble.w	8015e70 <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8015d56:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8015d5a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015d5c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015d60:	3901      	subs	r1, #1
 8015d62:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015d66:	eef0 6a62 	vmov.f32	s13, s5
 8015d6a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8015d6e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015d72:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015d76:	edcd 6a0d 	vstr	s13, [sp, #52]	; 0x34
 8015d7a:	eef0 6a43 	vmov.f32	s13, s6
 8015d7e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015d82:	edcd 6a0e 	vstr	s13, [sp, #56]	; 0x38
 8015d86:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015d8a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015d8e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015d92:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015d96:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015d9a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015d9e:	ee12 2a90 	vmov	r2, s5
 8015da2:	eef0 2a47 	vmov.f32	s5, s14
 8015da6:	fb92 f3f3 	sdiv	r3, r2, r3
 8015daa:	ee13 2a10 	vmov	r2, s6
 8015dae:	930f      	str	r3, [sp, #60]	; 0x3c
 8015db0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015db2:	eeb0 3a67 	vmov.f32	s6, s15
 8015db6:	fb92 f3f3 	sdiv	r3, r2, r3
 8015dba:	9a01      	ldr	r2, [sp, #4]
 8015dbc:	9310      	str	r3, [sp, #64]	; 0x40
 8015dbe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015dc0:	bf08      	it	eq
 8015dc2:	4613      	moveq	r3, r2
 8015dc4:	e741      	b.n	8015c4a <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8015dc6:	ea5f 4920 	movs.w	r9, r0, asr #16
 8015dca:	d44b      	bmi.n	8015e64 <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8015dcc:	f8dc b008 	ldr.w	fp, [ip, #8]
 8015dd0:	45cb      	cmp	fp, r9
 8015dd2:	dd47      	ble.n	8015e64 <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8015dd4:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8015dd8:	d444      	bmi.n	8015e64 <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8015dda:	f8dc 600c 	ldr.w	r6, [ip, #12]
 8015dde:	4556      	cmp	r6, sl
 8015de0:	dd40      	ble.n	8015e64 <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8015de2:	fa0f f68b 	sxth.w	r6, fp
 8015de6:	fb0a 9906 	mla	r9, sl, r6, r9
 8015dea:	eb07 0647 	add.w	r6, r7, r7, lsl #1
 8015dee:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 8015df2:	f814 b006 	ldrb.w	fp, [r4, r6]
 8015df6:	fb1b fb05 	smulbb	fp, fp, r5
 8015dfa:	eb08 0a09 	add.w	sl, r8, r9
 8015dfe:	f818 9009 	ldrb.w	r9, [r8, r9]
 8015e02:	fb09 b90e 	mla	r9, r9, lr, fp
 8015e06:	fa1f f989 	uxth.w	r9, r9
 8015e0a:	f109 0b01 	add.w	fp, r9, #1
 8015e0e:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 8015e12:	ea4f 2929 	mov.w	r9, r9, asr #8
 8015e16:	f804 9006 	strb.w	r9, [r4, r6]
 8015e1a:	4426      	add	r6, r4
 8015e1c:	f89a 9001 	ldrb.w	r9, [sl, #1]
 8015e20:	f896 b001 	ldrb.w	fp, [r6, #1]
 8015e24:	fb1b fb05 	smulbb	fp, fp, r5
 8015e28:	fb09 b90e 	mla	r9, r9, lr, fp
 8015e2c:	fa1f f989 	uxth.w	r9, r9
 8015e30:	f109 0b01 	add.w	fp, r9, #1
 8015e34:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 8015e38:	ea4f 2929 	mov.w	r9, r9, asr #8
 8015e3c:	f886 9001 	strb.w	r9, [r6, #1]
 8015e40:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8015e44:	f896 a002 	ldrb.w	sl, [r6, #2]
 8015e48:	fb1a fa05 	smulbb	sl, sl, r5
 8015e4c:	fb09 a90e 	mla	r9, r9, lr, sl
 8015e50:	fa1f f989 	uxth.w	r9, r9
 8015e54:	f109 0a01 	add.w	sl, r9, #1
 8015e58:	eb0a 2919 	add.w	r9, sl, r9, lsr #8
 8015e5c:	ea4f 2929 	mov.w	r9, r9, asr #8
 8015e60:	f886 9002 	strb.w	r9, [r6, #2]
 8015e64:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8015e66:	3701      	adds	r7, #1
 8015e68:	4430      	add	r0, r6
 8015e6a:	9e10      	ldr	r6, [sp, #64]	; 0x40
 8015e6c:	4432      	add	r2, r6
 8015e6e:	e767      	b.n	8015d40 <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 8015e70:	b003      	add	sp, #12
 8015e72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015e76 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015e76:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015e7a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8015e7c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015e80:	9201      	str	r2, [sp, #4]
 8015e82:	6868      	ldr	r0, [r5, #4]
 8015e84:	9f14      	ldr	r7, [sp, #80]	; 0x50
 8015e86:	e9dd 2412 	ldrd	r2, r4, [sp, #72]	; 0x48
 8015e8a:	e9dd ec0f 	ldrd	lr, ip, [sp, #60]	; 0x3c
 8015e8e:	fb00 2404 	mla	r4, r0, r4, r2
 8015e92:	682a      	ldr	r2, [r5, #0]
 8015e94:	f8d7 8000 	ldr.w	r8, [r7]
 8015e98:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8015e9c:	4414      	add	r4, r2
 8015e9e:	2900      	cmp	r1, #0
 8015ea0:	dc03      	bgt.n	8015eaa <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8015ea2:	9a01      	ldr	r2, [sp, #4]
 8015ea4:	2a00      	cmp	r2, #0
 8015ea6:	f340 80af 	ble.w	8016008 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8015eaa:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8015eac:	f9b7 a008 	ldrsh.w	sl, [r7, #8]
 8015eb0:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8015eb4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8015eb6:	f9b7 900c 	ldrsh.w	r9, [r7, #12]
 8015eba:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015ebe:	2b00      	cmp	r3, #0
 8015ec0:	dd0c      	ble.n	8015edc <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015ec2:	1405      	asrs	r5, r0, #16
 8015ec4:	d405      	bmi.n	8015ed2 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8015ec6:	4555      	cmp	r5, sl
 8015ec8:	da03      	bge.n	8015ed2 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8015eca:	1415      	asrs	r5, r2, #16
 8015ecc:	d401      	bmi.n	8015ed2 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8015ece:	454d      	cmp	r5, r9
 8015ed0:	db05      	blt.n	8015ede <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015ed2:	4470      	add	r0, lr
 8015ed4:	4462      	add	r2, ip
 8015ed6:	3b01      	subs	r3, #1
 8015ed8:	3403      	adds	r4, #3
 8015eda:	e7f0      	b.n	8015ebe <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8015edc:	d038      	beq.n	8015f50 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xda>
 8015ede:	1e5d      	subs	r5, r3, #1
 8015ee0:	fb0e 0605 	mla	r6, lr, r5, r0
 8015ee4:	1436      	asrs	r6, r6, #16
 8015ee6:	d42a      	bmi.n	8015f3e <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc8>
 8015ee8:	4556      	cmp	r6, sl
 8015eea:	da28      	bge.n	8015f3e <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc8>
 8015eec:	fb0c 2505 	mla	r5, ip, r5, r2
 8015ef0:	142d      	asrs	r5, r5, #16
 8015ef2:	d424      	bmi.n	8015f3e <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc8>
 8015ef4:	454d      	cmp	r5, r9
 8015ef6:	da22      	bge.n	8015f3e <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc8>
 8015ef8:	1ce6      	adds	r6, r4, #3
 8015efa:	4699      	mov	r9, r3
 8015efc:	f1b9 0f00 	cmp.w	r9, #0
 8015f00:	f106 0603 	add.w	r6, r6, #3
 8015f04:	dd1f      	ble.n	8015f46 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xd0>
 8015f06:	f9b7 b008 	ldrsh.w	fp, [r7, #8]
 8015f0a:	ea4f 4a20 	mov.w	sl, r0, asr #16
 8015f0e:	1415      	asrs	r5, r2, #16
 8015f10:	4470      	add	r0, lr
 8015f12:	4462      	add	r2, ip
 8015f14:	f109 39ff 	add.w	r9, r9, #4294967295
 8015f18:	fb0b a505 	mla	r5, fp, r5, sl
 8015f1c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8015f20:	eb08 0a05 	add.w	sl, r8, r5
 8015f24:	f818 5005 	ldrb.w	r5, [r8, r5]
 8015f28:	f806 5c06 	strb.w	r5, [r6, #-6]
 8015f2c:	f89a 5001 	ldrb.w	r5, [sl, #1]
 8015f30:	f806 5c05 	strb.w	r5, [r6, #-5]
 8015f34:	f89a 5002 	ldrb.w	r5, [sl, #2]
 8015f38:	f806 5c04 	strb.w	r5, [r6, #-4]
 8015f3c:	e7de      	b.n	8015efc <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8015f3e:	2600      	movs	r6, #0
 8015f40:	1b9d      	subs	r5, r3, r6
 8015f42:	2d00      	cmp	r5, #0
 8015f44:	dc38      	bgt.n	8015fb8 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x142>
 8015f46:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015f4a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8015f4e:	441c      	add	r4, r3
 8015f50:	2900      	cmp	r1, #0
 8015f52:	dd59      	ble.n	8016008 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8015f54:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015f58:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015f5a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015f5e:	3901      	subs	r1, #1
 8015f60:	eeb0 6a62 	vmov.f32	s12, s5
 8015f64:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015f68:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015f6c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015f70:	ed8d 6a0d 	vstr	s12, [sp, #52]	; 0x34
 8015f74:	eeb0 6a43 	vmov.f32	s12, s6
 8015f78:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015f7c:	ed8d 6a0e 	vstr	s12, [sp, #56]	; 0x38
 8015f80:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015f84:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015f88:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015f8c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015f90:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015f94:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015f98:	ee12 2a90 	vmov	r2, s5
 8015f9c:	eef0 2a47 	vmov.f32	s5, s14
 8015fa0:	fb92 fef3 	sdiv	lr, r2, r3
 8015fa4:	ee13 2a10 	vmov	r2, s6
 8015fa8:	eeb0 3a67 	vmov.f32	s6, s15
 8015fac:	fb92 fcf3 	sdiv	ip, r2, r3
 8015fb0:	9a01      	ldr	r2, [sp, #4]
 8015fb2:	bf08      	it	eq
 8015fb4:	4613      	moveq	r3, r2
 8015fb6:	e772      	b.n	8015e9e <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28>
 8015fb8:	ea5f 4920 	movs.w	r9, r0, asr #16
 8015fbc:	d420      	bmi.n	8016000 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8015fbe:	f8d7 b008 	ldr.w	fp, [r7, #8]
 8015fc2:	45cb      	cmp	fp, r9
 8015fc4:	dd1c      	ble.n	8016000 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8015fc6:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8015fca:	d419      	bmi.n	8016000 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8015fcc:	68fd      	ldr	r5, [r7, #12]
 8015fce:	4555      	cmp	r5, sl
 8015fd0:	dd16      	ble.n	8016000 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8015fd2:	fa0f f58b 	sxth.w	r5, fp
 8015fd6:	fb0a 9505 	mla	r5, sl, r5, r9
 8015fda:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8015fde:	f818 9005 	ldrb.w	r9, [r8, r5]
 8015fe2:	eb08 0b05 	add.w	fp, r8, r5
 8015fe6:	eb06 0546 	add.w	r5, r6, r6, lsl #1
 8015fea:	f804 9005 	strb.w	r9, [r4, r5]
 8015fee:	4425      	add	r5, r4
 8015ff0:	f89b 9001 	ldrb.w	r9, [fp, #1]
 8015ff4:	f885 9001 	strb.w	r9, [r5, #1]
 8015ff8:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8015ffc:	f885 9002 	strb.w	r9, [r5, #2]
 8016000:	4470      	add	r0, lr
 8016002:	4462      	add	r2, ip
 8016004:	3601      	adds	r6, #1
 8016006:	e79b      	b.n	8015f40 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xca>
 8016008:	b003      	add	sp, #12
 801600a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801600e <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801600e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016012:	b085      	sub	sp, #20
 8016014:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016018:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801601a:	9202      	str	r2, [sp, #8]
 801601c:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8016020:	6860      	ldr	r0, [r4, #4]
 8016022:	9203      	str	r2, [sp, #12]
 8016024:	f8dd c058 	ldr.w	ip, [sp, #88]	; 0x58
 8016028:	f8dd e044 	ldr.w	lr, [sp, #68]	; 0x44
 801602c:	e9dd 2514 	ldrd	r2, r5, [sp, #80]	; 0x50
 8016030:	fb00 2505 	mla	r5, r0, r5, r2
 8016034:	6822      	ldr	r2, [r4, #0]
 8016036:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801603a:	4415      	add	r5, r2
 801603c:	f8dc 2000 	ldr.w	r2, [ip]
 8016040:	9201      	str	r2, [sp, #4]
 8016042:	2900      	cmp	r1, #0
 8016044:	dc03      	bgt.n	801604e <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8016046:	9a02      	ldr	r2, [sp, #8]
 8016048:	2a00      	cmp	r2, #0
 801604a:	f340 8122 	ble.w	8016292 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801604e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8016050:	f9bc 8008 	ldrsh.w	r8, [ip, #8]
 8016054:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 8016058:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801605a:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 801605e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8016062:	2b00      	cmp	r3, #0
 8016064:	dd0d      	ble.n	8016082 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8016066:	1422      	asrs	r2, r4, #16
 8016068:	d405      	bmi.n	8016076 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801606a:	4542      	cmp	r2, r8
 801606c:	da03      	bge.n	8016076 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801606e:	1402      	asrs	r2, r0, #16
 8016070:	d401      	bmi.n	8016076 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8016072:	42ba      	cmp	r2, r7
 8016074:	db06      	blt.n	8016084 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8016076:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8016078:	4474      	add	r4, lr
 801607a:	3b01      	subs	r3, #1
 801607c:	3503      	adds	r5, #3
 801607e:	4410      	add	r0, r2
 8016080:	e7ef      	b.n	8016062 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8016082:	d072      	beq.n	801616a <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8016084:	1e5a      	subs	r2, r3, #1
 8016086:	fb0e 4602 	mla	r6, lr, r2, r4
 801608a:	1436      	asrs	r6, r6, #16
 801608c:	d462      	bmi.n	8016154 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801608e:	4546      	cmp	r6, r8
 8016090:	da60      	bge.n	8016154 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8016092:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8016094:	fb06 0202 	mla	r2, r6, r2, r0
 8016098:	1412      	asrs	r2, r2, #16
 801609a:	d45b      	bmi.n	8016154 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801609c:	42ba      	cmp	r2, r7
 801609e:	da59      	bge.n	8016154 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 80160a0:	1cef      	adds	r7, r5, #3
 80160a2:	4699      	mov	r9, r3
 80160a4:	f1b9 0f00 	cmp.w	r9, #0
 80160a8:	dd5a      	ble.n	8016160 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80160aa:	f9bc 8008 	ldrsh.w	r8, [ip, #8]
 80160ae:	1426      	asrs	r6, r4, #16
 80160b0:	1402      	asrs	r2, r0, #16
 80160b2:	fb08 6202 	mla	r2, r8, r2, r6
 80160b6:	9e01      	ldr	r6, [sp, #4]
 80160b8:	f856 6022 	ldr.w	r6, [r6, r2, lsl #2]
 80160bc:	ea5f 6816 	movs.w	r8, r6, lsr #24
 80160c0:	d041      	beq.n	8016146 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 80160c2:	9a03      	ldr	r2, [sp, #12]
 80160c4:	fa5f fb86 	uxtb.w	fp, r6
 80160c8:	fb02 f808 	mul.w	r8, r2, r8
 80160cc:	f108 0201 	add.w	r2, r8, #1
 80160d0:	eb02 2228 	add.w	r2, r2, r8, asr #8
 80160d4:	f817 8c03 	ldrb.w	r8, [r7, #-3]
 80160d8:	1212      	asrs	r2, r2, #8
 80160da:	fa1f fa82 	uxth.w	sl, r2
 80160de:	43d2      	mvns	r2, r2
 80160e0:	fb1b fb0a 	smulbb	fp, fp, sl
 80160e4:	b2d2      	uxtb	r2, r2
 80160e6:	fb08 b802 	mla	r8, r8, r2, fp
 80160ea:	fa1f f888 	uxth.w	r8, r8
 80160ee:	f108 0b01 	add.w	fp, r8, #1
 80160f2:	eb0b 2818 	add.w	r8, fp, r8, lsr #8
 80160f6:	f3c6 2b07 	ubfx	fp, r6, #8, #8
 80160fa:	f3c6 4607 	ubfx	r6, r6, #16, #8
 80160fe:	fb1b fb0a 	smulbb	fp, fp, sl
 8016102:	ea4f 2828 	mov.w	r8, r8, asr #8
 8016106:	fb16 fa0a 	smulbb	sl, r6, sl
 801610a:	f817 6c01 	ldrb.w	r6, [r7, #-1]
 801610e:	f807 8c03 	strb.w	r8, [r7, #-3]
 8016112:	f817 8c02 	ldrb.w	r8, [r7, #-2]
 8016116:	fb06 aa02 	mla	sl, r6, r2, sl
 801611a:	fb08 b802 	mla	r8, r8, r2, fp
 801611e:	fa1f fa8a 	uxth.w	sl, sl
 8016122:	fa1f f888 	uxth.w	r8, r8
 8016126:	f10a 0601 	add.w	r6, sl, #1
 801612a:	f108 0b01 	add.w	fp, r8, #1
 801612e:	eb06 2a1a 	add.w	sl, r6, sl, lsr #8
 8016132:	eb0b 2818 	add.w	r8, fp, r8, lsr #8
 8016136:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 801613a:	ea4f 2828 	mov.w	r8, r8, asr #8
 801613e:	f807 ac01 	strb.w	sl, [r7, #-1]
 8016142:	f807 8c02 	strb.w	r8, [r7, #-2]
 8016146:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8016148:	4474      	add	r4, lr
 801614a:	3703      	adds	r7, #3
 801614c:	f109 39ff 	add.w	r9, r9, #4294967295
 8016150:	4410      	add	r0, r2
 8016152:	e7a7      	b.n	80160a4 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8016154:	f04f 0800 	mov.w	r8, #0
 8016158:	eba3 0208 	sub.w	r2, r3, r8
 801615c:	2a00      	cmp	r2, #0
 801615e:	dc3b      	bgt.n	80161d8 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8016160:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016164:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8016168:	441d      	add	r5, r3
 801616a:	2900      	cmp	r1, #0
 801616c:	f340 8091 	ble.w	8016292 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8016170:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016174:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016176:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801617a:	3901      	subs	r1, #1
 801617c:	eeb0 6a62 	vmov.f32	s12, s5
 8016180:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016184:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016188:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801618c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8016190:	eeb0 6a43 	vmov.f32	s12, s6
 8016194:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016198:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801619c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80161a0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80161a4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80161a8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80161ac:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80161b0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80161b4:	ee12 2a90 	vmov	r2, s5
 80161b8:	eef0 2a47 	vmov.f32	s5, s14
 80161bc:	fb92 fef3 	sdiv	lr, r2, r3
 80161c0:	ee13 2a10 	vmov	r2, s6
 80161c4:	eeb0 3a67 	vmov.f32	s6, s15
 80161c8:	fb92 f3f3 	sdiv	r3, r2, r3
 80161cc:	9a02      	ldr	r2, [sp, #8]
 80161ce:	9312      	str	r3, [sp, #72]	; 0x48
 80161d0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80161d2:	bf08      	it	eq
 80161d4:	4613      	moveq	r3, r2
 80161d6:	e734      	b.n	8016042 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 80161d8:	1427      	asrs	r7, r4, #16
 80161da:	d454      	bmi.n	8016286 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 80161dc:	f8dc 6008 	ldr.w	r6, [ip, #8]
 80161e0:	42be      	cmp	r6, r7
 80161e2:	dd50      	ble.n	8016286 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 80161e4:	ea5f 4920 	movs.w	r9, r0, asr #16
 80161e8:	d44d      	bmi.n	8016286 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 80161ea:	f8dc 200c 	ldr.w	r2, [ip, #12]
 80161ee:	454a      	cmp	r2, r9
 80161f0:	dd49      	ble.n	8016286 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 80161f2:	b236      	sxth	r6, r6
 80161f4:	9a01      	ldr	r2, [sp, #4]
 80161f6:	fb09 7606 	mla	r6, r9, r6, r7
 80161fa:	f852 7026 	ldr.w	r7, [r2, r6, lsl #2]
 80161fe:	0e3a      	lsrs	r2, r7, #24
 8016200:	d041      	beq.n	8016286 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 8016202:	9e03      	ldr	r6, [sp, #12]
 8016204:	fa5f fb87 	uxtb.w	fp, r7
 8016208:	4372      	muls	r2, r6
 801620a:	1c56      	adds	r6, r2, #1
 801620c:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8016210:	eb08 0648 	add.w	r6, r8, r8, lsl #1
 8016214:	1212      	asrs	r2, r2, #8
 8016216:	f815 9006 	ldrb.w	r9, [r5, r6]
 801621a:	fa1f fa82 	uxth.w	sl, r2
 801621e:	43d2      	mvns	r2, r2
 8016220:	fb1b fb0a 	smulbb	fp, fp, sl
 8016224:	b2d2      	uxtb	r2, r2
 8016226:	fb09 b902 	mla	r9, r9, r2, fp
 801622a:	fa1f f989 	uxth.w	r9, r9
 801622e:	f109 0b01 	add.w	fp, r9, #1
 8016232:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 8016236:	f3c7 2b07 	ubfx	fp, r7, #8, #8
 801623a:	f3c7 4707 	ubfx	r7, r7, #16, #8
 801623e:	fb1b fb0a 	smulbb	fp, fp, sl
 8016242:	ea4f 2929 	mov.w	r9, r9, asr #8
 8016246:	fb17 fa0a 	smulbb	sl, r7, sl
 801624a:	f805 9006 	strb.w	r9, [r5, r6]
 801624e:	442e      	add	r6, r5
 8016250:	78b7      	ldrb	r7, [r6, #2]
 8016252:	f896 9001 	ldrb.w	r9, [r6, #1]
 8016256:	fb07 aa02 	mla	sl, r7, r2, sl
 801625a:	fb09 b902 	mla	r9, r9, r2, fp
 801625e:	fa1f fa8a 	uxth.w	sl, sl
 8016262:	fa1f f989 	uxth.w	r9, r9
 8016266:	f10a 0701 	add.w	r7, sl, #1
 801626a:	f109 0b01 	add.w	fp, r9, #1
 801626e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8016272:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 8016276:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 801627a:	ea4f 2929 	mov.w	r9, r9, asr #8
 801627e:	f886 a002 	strb.w	sl, [r6, #2]
 8016282:	f886 9001 	strb.w	r9, [r6, #1]
 8016286:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8016288:	4474      	add	r4, lr
 801628a:	f108 0801 	add.w	r8, r8, #1
 801628e:	4410      	add	r0, r2
 8016290:	e762      	b.n	8016158 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8016292:	b005      	add	sp, #20
 8016294:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016298 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016298:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801629c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801629e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80162a2:	9201      	str	r2, [sp, #4]
 80162a4:	6860      	ldr	r0, [r4, #4]
 80162a6:	f8dd c050 	ldr.w	ip, [sp, #80]	; 0x50
 80162aa:	e9dd 2512 	ldrd	r2, r5, [sp, #72]	; 0x48
 80162ae:	fb00 2505 	mla	r5, r0, r5, r2
 80162b2:	6822      	ldr	r2, [r4, #0]
 80162b4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80162b8:	4415      	add	r5, r2
 80162ba:	f8dc 2000 	ldr.w	r2, [ip]
 80162be:	9200      	str	r2, [sp, #0]
 80162c0:	2900      	cmp	r1, #0
 80162c2:	dc03      	bgt.n	80162cc <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 80162c4:	9a01      	ldr	r2, [sp, #4]
 80162c6:	2a00      	cmp	r2, #0
 80162c8:	f340 812b 	ble.w	8016522 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 80162cc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80162ce:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 80162d2:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 80162d6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80162d8:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 80162dc:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80162e0:	2b00      	cmp	r3, #0
 80162e2:	dd0e      	ble.n	8016302 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 80162e4:	1422      	asrs	r2, r4, #16
 80162e6:	d405      	bmi.n	80162f4 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80162e8:	4572      	cmp	r2, lr
 80162ea:	da03      	bge.n	80162f4 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80162ec:	1402      	asrs	r2, r0, #16
 80162ee:	d401      	bmi.n	80162f4 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80162f0:	42ba      	cmp	r2, r7
 80162f2:	db07      	blt.n	8016304 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80162f4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80162f6:	3b01      	subs	r3, #1
 80162f8:	3503      	adds	r5, #3
 80162fa:	4414      	add	r4, r2
 80162fc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80162fe:	4410      	add	r0, r2
 8016300:	e7ee      	b.n	80162e0 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8016302:	d06f      	beq.n	80163e4 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8016304:	1e5a      	subs	r2, r3, #1
 8016306:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8016308:	fb06 4602 	mla	r6, r6, r2, r4
 801630c:	1436      	asrs	r6, r6, #16
 801630e:	d45e      	bmi.n	80163ce <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x136>
 8016310:	4576      	cmp	r6, lr
 8016312:	da5c      	bge.n	80163ce <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x136>
 8016314:	9e10      	ldr	r6, [sp, #64]	; 0x40
 8016316:	fb06 0202 	mla	r2, r6, r2, r0
 801631a:	1412      	asrs	r2, r2, #16
 801631c:	d457      	bmi.n	80163ce <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x136>
 801631e:	42ba      	cmp	r2, r7
 8016320:	da55      	bge.n	80163ce <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x136>
 8016322:	1cee      	adds	r6, r5, #3
 8016324:	469a      	mov	sl, r3
 8016326:	f1ba 0f00 	cmp.w	sl, #0
 801632a:	dd56      	ble.n	80163da <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x142>
 801632c:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8016330:	1427      	asrs	r7, r4, #16
 8016332:	1402      	asrs	r2, r0, #16
 8016334:	fb0e 7202 	mla	r2, lr, r2, r7
 8016338:	9f00      	ldr	r7, [sp, #0]
 801633a:	f857 7022 	ldr.w	r7, [r7, r2, lsl #2]
 801633e:	ea5f 6e17 	movs.w	lr, r7, lsr #24
 8016342:	d03c      	beq.n	80163be <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8016344:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8016348:	f3c7 4b07 	ubfx	fp, r7, #16, #8
 801634c:	f3c7 2907 	ubfx	r9, r7, #8, #8
 8016350:	fa5f f28e 	uxtb.w	r2, lr
 8016354:	b2ff      	uxtb	r7, r7
 8016356:	f000 80dd 	beq.w	8016514 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801635a:	fa1f f882 	uxth.w	r8, r2
 801635e:	43d2      	mvns	r2, r2
 8016360:	f816 ec03 	ldrb.w	lr, [r6, #-3]
 8016364:	fb17 f708 	smulbb	r7, r7, r8
 8016368:	b2d2      	uxtb	r2, r2
 801636a:	fb19 f908 	smulbb	r9, r9, r8
 801636e:	fb0e 7702 	mla	r7, lr, r2, r7
 8016372:	fb1b f808 	smulbb	r8, fp, r8
 8016376:	b2bf      	uxth	r7, r7
 8016378:	f107 0e01 	add.w	lr, r7, #1
 801637c:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 8016380:	123f      	asrs	r7, r7, #8
 8016382:	f806 7c03 	strb.w	r7, [r6, #-3]
 8016386:	f816 7c02 	ldrb.w	r7, [r6, #-2]
 801638a:	fb07 9902 	mla	r9, r7, r2, r9
 801638e:	fa1f f989 	uxth.w	r9, r9
 8016392:	f109 0701 	add.w	r7, r9, #1
 8016396:	eb07 2919 	add.w	r9, r7, r9, lsr #8
 801639a:	f816 7c01 	ldrb.w	r7, [r6, #-1]
 801639e:	fb07 8802 	mla	r8, r7, r2, r8
 80163a2:	ea4f 2929 	mov.w	r9, r9, asr #8
 80163a6:	fa1f f888 	uxth.w	r8, r8
 80163aa:	f806 9c02 	strb.w	r9, [r6, #-2]
 80163ae:	f108 0201 	add.w	r2, r8, #1
 80163b2:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 80163b6:	ea4f 2828 	mov.w	r8, r8, asr #8
 80163ba:	f806 8c01 	strb.w	r8, [r6, #-1]
 80163be:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80163c0:	3603      	adds	r6, #3
 80163c2:	f10a 3aff 	add.w	sl, sl, #4294967295
 80163c6:	4414      	add	r4, r2
 80163c8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80163ca:	4410      	add	r0, r2
 80163cc:	e7ab      	b.n	8016326 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80163ce:	f04f 0e00 	mov.w	lr, #0
 80163d2:	eba3 020e 	sub.w	r2, r3, lr
 80163d6:	2a00      	cmp	r2, #0
 80163d8:	dc3d      	bgt.n	8016456 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 80163da:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80163de:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80163e2:	441d      	add	r5, r3
 80163e4:	2900      	cmp	r1, #0
 80163e6:	f340 809c 	ble.w	8016522 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 80163ea:	ee30 0a04 	vadd.f32	s0, s0, s8
 80163ee:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80163f0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80163f4:	3901      	subs	r1, #1
 80163f6:	eeb0 6a62 	vmov.f32	s12, s5
 80163fa:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80163fe:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016402:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016406:	ed8d 6a0d 	vstr	s12, [sp, #52]	; 0x34
 801640a:	eeb0 6a43 	vmov.f32	s12, s6
 801640e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016412:	ed8d 6a0e 	vstr	s12, [sp, #56]	; 0x38
 8016416:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801641a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801641e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016422:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016426:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801642a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801642e:	ee12 2a90 	vmov	r2, s5
 8016432:	eef0 2a47 	vmov.f32	s5, s14
 8016436:	fb92 f3f3 	sdiv	r3, r2, r3
 801643a:	ee13 2a10 	vmov	r2, s6
 801643e:	930f      	str	r3, [sp, #60]	; 0x3c
 8016440:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016442:	eeb0 3a67 	vmov.f32	s6, s15
 8016446:	fb92 f3f3 	sdiv	r3, r2, r3
 801644a:	9a01      	ldr	r2, [sp, #4]
 801644c:	9310      	str	r3, [sp, #64]	; 0x40
 801644e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016450:	bf08      	it	eq
 8016452:	4613      	moveq	r3, r2
 8016454:	e734      	b.n	80162c0 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28>
 8016456:	1427      	asrs	r7, r4, #16
 8016458:	d44d      	bmi.n	80164f6 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 801645a:	f8dc 6008 	ldr.w	r6, [ip, #8]
 801645e:	42be      	cmp	r6, r7
 8016460:	dd49      	ble.n	80164f6 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 8016462:	ea5f 4820 	movs.w	r8, r0, asr #16
 8016466:	d446      	bmi.n	80164f6 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 8016468:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801646c:	4542      	cmp	r2, r8
 801646e:	dd42      	ble.n	80164f6 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 8016470:	b236      	sxth	r6, r6
 8016472:	9a00      	ldr	r2, [sp, #0]
 8016474:	fb08 7606 	mla	r6, r8, r6, r7
 8016478:	f852 7026 	ldr.w	r7, [r2, r6, lsl #2]
 801647c:	0e3a      	lsrs	r2, r7, #24
 801647e:	d03a      	beq.n	80164f6 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 8016480:	2aff      	cmp	r2, #255	; 0xff
 8016482:	b2d6      	uxtb	r6, r2
 8016484:	f3c7 4b07 	ubfx	fp, r7, #16, #8
 8016488:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801648c:	ea4f 024e 	mov.w	r2, lr, lsl #1
 8016490:	b2ff      	uxtb	r7, r7
 8016492:	d037      	beq.n	8016504 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8016494:	fa1f f986 	uxth.w	r9, r6
 8016498:	4472      	add	r2, lr
 801649a:	43f6      	mvns	r6, r6
 801649c:	f815 8002 	ldrb.w	r8, [r5, r2]
 80164a0:	fb17 f709 	smulbb	r7, r7, r9
 80164a4:	fb1a fa09 	smulbb	sl, sl, r9
 80164a8:	b2f6      	uxtb	r6, r6
 80164aa:	fb1b f909 	smulbb	r9, fp, r9
 80164ae:	fb08 7706 	mla	r7, r8, r6, r7
 80164b2:	b2bf      	uxth	r7, r7
 80164b4:	f107 0801 	add.w	r8, r7, #1
 80164b8:	eb08 2717 	add.w	r7, r8, r7, lsr #8
 80164bc:	123f      	asrs	r7, r7, #8
 80164be:	54af      	strb	r7, [r5, r2]
 80164c0:	442a      	add	r2, r5
 80164c2:	7857      	ldrb	r7, [r2, #1]
 80164c4:	fb07 aa06 	mla	sl, r7, r6, sl
 80164c8:	fa1f fa8a 	uxth.w	sl, sl
 80164cc:	f10a 0701 	add.w	r7, sl, #1
 80164d0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80164d4:	7897      	ldrb	r7, [r2, #2]
 80164d6:	fb07 9906 	mla	r9, r7, r6, r9
 80164da:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 80164de:	fa1f f989 	uxth.w	r9, r9
 80164e2:	f882 a001 	strb.w	sl, [r2, #1]
 80164e6:	f109 0601 	add.w	r6, r9, #1
 80164ea:	eb06 2919 	add.w	r9, r6, r9, lsr #8
 80164ee:	ea4f 2929 	mov.w	r9, r9, asr #8
 80164f2:	f882 9002 	strb.w	r9, [r2, #2]
 80164f6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80164f8:	f10e 0e01 	add.w	lr, lr, #1
 80164fc:	4414      	add	r4, r2
 80164fe:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8016500:	4410      	add	r0, r2
 8016502:	e766      	b.n	80163d2 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8016504:	4472      	add	r2, lr
 8016506:	54af      	strb	r7, [r5, r2]
 8016508:	442a      	add	r2, r5
 801650a:	f882 a001 	strb.w	sl, [r2, #1]
 801650e:	f882 b002 	strb.w	fp, [r2, #2]
 8016512:	e7f0      	b.n	80164f6 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 8016514:	f806 7c03 	strb.w	r7, [r6, #-3]
 8016518:	f806 9c02 	strb.w	r9, [r6, #-2]
 801651c:	f806 bc01 	strb.w	fp, [r6, #-1]
 8016520:	e74d      	b.n	80163be <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8016522:	b003      	add	sp, #12
 8016524:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016528 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016528:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801652c:	b087      	sub	sp, #28
 801652e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016532:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8016534:	9204      	str	r2, [sp, #16]
 8016536:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801653a:	6860      	ldr	r0, [r4, #4]
 801653c:	9205      	str	r2, [sp, #20]
 801653e:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8016542:	f8dd e04c 	ldr.w	lr, [sp, #76]	; 0x4c
 8016546:	9101      	str	r1, [sp, #4]
 8016548:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801654c:	fb00 2505 	mla	r5, r0, r5, r2
 8016550:	6822      	ldr	r2, [r4, #0]
 8016552:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8016556:	4415      	add	r5, r2
 8016558:	f8dc 2008 	ldr.w	r2, [ip, #8]
 801655c:	3201      	adds	r2, #1
 801655e:	f022 0201 	bic.w	r2, r2, #1
 8016562:	9202      	str	r2, [sp, #8]
 8016564:	f8dc 2000 	ldr.w	r2, [ip]
 8016568:	9203      	str	r2, [sp, #12]
 801656a:	9a01      	ldr	r2, [sp, #4]
 801656c:	2a00      	cmp	r2, #0
 801656e:	dc03      	bgt.n	8016578 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8016570:	9a04      	ldr	r2, [sp, #16]
 8016572:	2a00      	cmp	r2, #0
 8016574:	f340 8135 	ble.w	80167e2 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8016578:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801657a:	f9bc 8008 	ldrsh.w	r8, [ip, #8]
 801657e:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 8016582:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8016584:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8016588:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801658c:	2b00      	cmp	r3, #0
 801658e:	dd0d      	ble.n	80165ac <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8016590:	1422      	asrs	r2, r4, #16
 8016592:	d405      	bmi.n	80165a0 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8016594:	4542      	cmp	r2, r8
 8016596:	da03      	bge.n	80165a0 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8016598:	1402      	asrs	r2, r0, #16
 801659a:	d401      	bmi.n	80165a0 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801659c:	42ba      	cmp	r2, r7
 801659e:	db06      	blt.n	80165ae <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80165a0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80165a2:	4474      	add	r4, lr
 80165a4:	3b01      	subs	r3, #1
 80165a6:	3503      	adds	r5, #3
 80165a8:	4410      	add	r0, r2
 80165aa:	e7ef      	b.n	801658c <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80165ac:	d077      	beq.n	801669e <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 80165ae:	1e5a      	subs	r2, r3, #1
 80165b0:	fb0e 4602 	mla	r6, lr, r2, r4
 80165b4:	1436      	asrs	r6, r6, #16
 80165b6:	d469      	bmi.n	801668c <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80165b8:	4546      	cmp	r6, r8
 80165ba:	da67      	bge.n	801668c <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80165bc:	9e14      	ldr	r6, [sp, #80]	; 0x50
 80165be:	fb06 0202 	mla	r2, r6, r2, r0
 80165c2:	1412      	asrs	r2, r2, #16
 80165c4:	d462      	bmi.n	801668c <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80165c6:	42ba      	cmp	r2, r7
 80165c8:	da60      	bge.n	801668c <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80165ca:	1cee      	adds	r6, r5, #3
 80165cc:	4699      	mov	r9, r3
 80165ce:	f1b9 0f00 	cmp.w	r9, #0
 80165d2:	dd5f      	ble.n	8016694 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 80165d4:	1422      	asrs	r2, r4, #16
 80165d6:	9902      	ldr	r1, [sp, #8]
 80165d8:	1407      	asrs	r7, r0, #16
 80165da:	fb01 2707 	mla	r7, r1, r7, r2
 80165de:	9903      	ldr	r1, [sp, #12]
 80165e0:	087a      	lsrs	r2, r7, #1
 80165e2:	5c8a      	ldrb	r2, [r1, r2]
 80165e4:	07f9      	lsls	r1, r7, #31
 80165e6:	bf54      	ite	pl
 80165e8:	f002 020f 	andpl.w	r2, r2, #15
 80165ec:	1112      	asrmi	r2, r2, #4
 80165ee:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80165f2:	b2d2      	uxtb	r2, r2
 80165f4:	2a00      	cmp	r2, #0
 80165f6:	d042      	beq.n	801667e <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 80165f8:	497b      	ldr	r1, [pc, #492]	; (80167e8 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>)
 80165fa:	680f      	ldr	r7, [r1, #0]
 80165fc:	9905      	ldr	r1, [sp, #20]
 80165fe:	fa5f fb87 	uxtb.w	fp, r7
 8016602:	434a      	muls	r2, r1
 8016604:	f102 0801 	add.w	r8, r2, #1
 8016608:	eb08 2222 	add.w	r2, r8, r2, asr #8
 801660c:	f816 8c03 	ldrb.w	r8, [r6, #-3]
 8016610:	1212      	asrs	r2, r2, #8
 8016612:	fa1f fa82 	uxth.w	sl, r2
 8016616:	43d2      	mvns	r2, r2
 8016618:	fb1b fb0a 	smulbb	fp, fp, sl
 801661c:	b2d2      	uxtb	r2, r2
 801661e:	fb08 b802 	mla	r8, r8, r2, fp
 8016622:	fa1f f888 	uxth.w	r8, r8
 8016626:	f108 0b01 	add.w	fp, r8, #1
 801662a:	eb0b 2818 	add.w	r8, fp, r8, lsr #8
 801662e:	f3c7 2b07 	ubfx	fp, r7, #8, #8
 8016632:	f3c7 4707 	ubfx	r7, r7, #16, #8
 8016636:	fb1b fb0a 	smulbb	fp, fp, sl
 801663a:	ea4f 2828 	mov.w	r8, r8, asr #8
 801663e:	fb17 fa0a 	smulbb	sl, r7, sl
 8016642:	f816 7c01 	ldrb.w	r7, [r6, #-1]
 8016646:	f806 8c03 	strb.w	r8, [r6, #-3]
 801664a:	f816 8c02 	ldrb.w	r8, [r6, #-2]
 801664e:	fb07 aa02 	mla	sl, r7, r2, sl
 8016652:	fb08 b802 	mla	r8, r8, r2, fp
 8016656:	fa1f fa8a 	uxth.w	sl, sl
 801665a:	fa1f f888 	uxth.w	r8, r8
 801665e:	f10a 0701 	add.w	r7, sl, #1
 8016662:	f108 0b01 	add.w	fp, r8, #1
 8016666:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801666a:	eb0b 2818 	add.w	r8, fp, r8, lsr #8
 801666e:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 8016672:	ea4f 2828 	mov.w	r8, r8, asr #8
 8016676:	f806 ac01 	strb.w	sl, [r6, #-1]
 801667a:	f806 8c02 	strb.w	r8, [r6, #-2]
 801667e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016680:	4474      	add	r4, lr
 8016682:	3603      	adds	r6, #3
 8016684:	f109 39ff 	add.w	r9, r9, #4294967295
 8016688:	4410      	add	r0, r2
 801668a:	e7a0      	b.n	80165ce <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801668c:	2700      	movs	r7, #0
 801668e:	1bda      	subs	r2, r3, r7
 8016690:	2a00      	cmp	r2, #0
 8016692:	dc3e      	bgt.n	8016712 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8016694:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016698:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801669c:	441d      	add	r5, r3
 801669e:	9b01      	ldr	r3, [sp, #4]
 80166a0:	2b00      	cmp	r3, #0
 80166a2:	f340 809e 	ble.w	80167e2 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 80166a6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80166aa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80166ac:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80166b0:	eeb0 6a62 	vmov.f32	s12, s5
 80166b4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80166b8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80166bc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80166c0:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80166c4:	eeb0 6a43 	vmov.f32	s12, s6
 80166c8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80166cc:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80166d0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80166d4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80166d8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80166dc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80166e0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80166e4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80166e8:	ee12 2a90 	vmov	r2, s5
 80166ec:	eef0 2a47 	vmov.f32	s5, s14
 80166f0:	fb92 fef3 	sdiv	lr, r2, r3
 80166f4:	ee13 2a10 	vmov	r2, s6
 80166f8:	eeb0 3a67 	vmov.f32	s6, s15
 80166fc:	fb92 f3f3 	sdiv	r3, r2, r3
 8016700:	9314      	str	r3, [sp, #80]	; 0x50
 8016702:	9b01      	ldr	r3, [sp, #4]
 8016704:	9a04      	ldr	r2, [sp, #16]
 8016706:	3b01      	subs	r3, #1
 8016708:	9301      	str	r3, [sp, #4]
 801670a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801670c:	bf08      	it	eq
 801670e:	4613      	moveq	r3, r2
 8016710:	e72b      	b.n	801656a <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8016712:	1426      	asrs	r6, r4, #16
 8016714:	d460      	bmi.n	80167d8 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 8016716:	f8dc 2008 	ldr.w	r2, [ip, #8]
 801671a:	42b2      	cmp	r2, r6
 801671c:	dd5c      	ble.n	80167d8 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 801671e:	ea5f 4820 	movs.w	r8, r0, asr #16
 8016722:	d459      	bmi.n	80167d8 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 8016724:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8016728:	4542      	cmp	r2, r8
 801672a:	dd55      	ble.n	80167d8 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 801672c:	9a02      	ldr	r2, [sp, #8]
 801672e:	9903      	ldr	r1, [sp, #12]
 8016730:	fb08 6602 	mla	r6, r8, r2, r6
 8016734:	0872      	lsrs	r2, r6, #1
 8016736:	07f6      	lsls	r6, r6, #31
 8016738:	5c8a      	ldrb	r2, [r1, r2]
 801673a:	bf54      	ite	pl
 801673c:	f002 020f 	andpl.w	r2, r2, #15
 8016740:	1112      	asrmi	r2, r2, #4
 8016742:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8016746:	b2d2      	uxtb	r2, r2
 8016748:	2a00      	cmp	r2, #0
 801674a:	d045      	beq.n	80167d8 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 801674c:	4926      	ldr	r1, [pc, #152]	; (80167e8 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>)
 801674e:	f8d1 8000 	ldr.w	r8, [r1]
 8016752:	9905      	ldr	r1, [sp, #20]
 8016754:	fa5f fb88 	uxtb.w	fp, r8
 8016758:	434a      	muls	r2, r1
 801675a:	1c56      	adds	r6, r2, #1
 801675c:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8016760:	eb07 0647 	add.w	r6, r7, r7, lsl #1
 8016764:	1212      	asrs	r2, r2, #8
 8016766:	f815 9006 	ldrb.w	r9, [r5, r6]
 801676a:	fa1f fa82 	uxth.w	sl, r2
 801676e:	43d2      	mvns	r2, r2
 8016770:	fb1b fb0a 	smulbb	fp, fp, sl
 8016774:	b2d2      	uxtb	r2, r2
 8016776:	fb09 b902 	mla	r9, r9, r2, fp
 801677a:	fa1f f989 	uxth.w	r9, r9
 801677e:	f109 0b01 	add.w	fp, r9, #1
 8016782:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 8016786:	f3c8 2b07 	ubfx	fp, r8, #8, #8
 801678a:	f3c8 4807 	ubfx	r8, r8, #16, #8
 801678e:	fb1b fb0a 	smulbb	fp, fp, sl
 8016792:	ea4f 2929 	mov.w	r9, r9, asr #8
 8016796:	fb18 fa0a 	smulbb	sl, r8, sl
 801679a:	f805 9006 	strb.w	r9, [r5, r6]
 801679e:	442e      	add	r6, r5
 80167a0:	f896 8002 	ldrb.w	r8, [r6, #2]
 80167a4:	f896 9001 	ldrb.w	r9, [r6, #1]
 80167a8:	fb08 aa02 	mla	sl, r8, r2, sl
 80167ac:	fb09 b902 	mla	r9, r9, r2, fp
 80167b0:	fa1f fa8a 	uxth.w	sl, sl
 80167b4:	fa1f f989 	uxth.w	r9, r9
 80167b8:	f10a 0801 	add.w	r8, sl, #1
 80167bc:	f109 0b01 	add.w	fp, r9, #1
 80167c0:	eb08 2a1a 	add.w	sl, r8, sl, lsr #8
 80167c4:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 80167c8:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 80167cc:	ea4f 2929 	mov.w	r9, r9, asr #8
 80167d0:	f886 a002 	strb.w	sl, [r6, #2]
 80167d4:	f886 9001 	strb.w	r9, [r6, #1]
 80167d8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80167da:	4474      	add	r4, lr
 80167dc:	3701      	adds	r7, #1
 80167de:	4410      	add	r0, r2
 80167e0:	e755      	b.n	801668e <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x166>
 80167e2:	b007      	add	sp, #28
 80167e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80167e8:	2400e0dc 	.word	0x2400e0dc

080167ec <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80167ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80167f0:	b085      	sub	sp, #20
 80167f2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80167f6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80167f8:	9203      	str	r2, [sp, #12]
 80167fa:	6860      	ldr	r0, [r4, #4]
 80167fc:	f8dd c058 	ldr.w	ip, [sp, #88]	; 0x58
 8016800:	9100      	str	r1, [sp, #0]
 8016802:	e9dd 2614 	ldrd	r2, r6, [sp, #80]	; 0x50
 8016806:	fb00 2606 	mla	r6, r0, r6, r2
 801680a:	6822      	ldr	r2, [r4, #0]
 801680c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8016810:	4416      	add	r6, r2
 8016812:	f8dc 2008 	ldr.w	r2, [ip, #8]
 8016816:	3201      	adds	r2, #1
 8016818:	f022 0201 	bic.w	r2, r2, #1
 801681c:	9201      	str	r2, [sp, #4]
 801681e:	f8dc 2000 	ldr.w	r2, [ip]
 8016822:	9202      	str	r2, [sp, #8]
 8016824:	9a00      	ldr	r2, [sp, #0]
 8016826:	2a00      	cmp	r2, #0
 8016828:	dc03      	bgt.n	8016832 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801682a:	9a03      	ldr	r2, [sp, #12]
 801682c:	2a00      	cmp	r2, #0
 801682e:	f340 8140 	ble.w	8016ab2 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c6>
 8016832:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8016834:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8016838:	f502 4500 	add.w	r5, r2, #32768	; 0x8000
 801683c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801683e:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8016842:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 8016846:	2b00      	cmp	r3, #0
 8016848:	dd0e      	ble.n	8016868 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801684a:	142a      	asrs	r2, r5, #16
 801684c:	d405      	bmi.n	801685a <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801684e:	4572      	cmp	r2, lr
 8016850:	da03      	bge.n	801685a <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8016852:	1422      	asrs	r2, r4, #16
 8016854:	d401      	bmi.n	801685a <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8016856:	42ba      	cmp	r2, r7
 8016858:	db07      	blt.n	801686a <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801685a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801685c:	3b01      	subs	r3, #1
 801685e:	3603      	adds	r6, #3
 8016860:	4415      	add	r5, r2
 8016862:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8016864:	4414      	add	r4, r2
 8016866:	e7ee      	b.n	8016846 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8016868:	d072      	beq.n	8016950 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801686a:	1e5a      	subs	r2, r3, #1
 801686c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801686e:	fb00 5002 	mla	r0, r0, r2, r5
 8016872:	1400      	asrs	r0, r0, #16
 8016874:	d463      	bmi.n	801693e <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8016876:	4570      	cmp	r0, lr
 8016878:	da61      	bge.n	801693e <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801687a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801687c:	fb00 4202 	mla	r2, r0, r2, r4
 8016880:	1412      	asrs	r2, r2, #16
 8016882:	d45c      	bmi.n	801693e <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8016884:	42ba      	cmp	r2, r7
 8016886:	da5a      	bge.n	801693e <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8016888:	1cf0      	adds	r0, r6, #3
 801688a:	469a      	mov	sl, r3
 801688c:	f1ba 0f00 	cmp.w	sl, #0
 8016890:	dd59      	ble.n	8016946 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15a>
 8016892:	142a      	asrs	r2, r5, #16
 8016894:	9901      	ldr	r1, [sp, #4]
 8016896:	1427      	asrs	r7, r4, #16
 8016898:	fb01 2707 	mla	r7, r1, r7, r2
 801689c:	9902      	ldr	r1, [sp, #8]
 801689e:	087a      	lsrs	r2, r7, #1
 80168a0:	5c8a      	ldrb	r2, [r1, r2]
 80168a2:	07f9      	lsls	r1, r7, #31
 80168a4:	bf54      	ite	pl
 80168a6:	f002 020f 	andpl.w	r2, r2, #15
 80168aa:	1112      	asrmi	r2, r2, #4
 80168ac:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80168b0:	b2d2      	uxtb	r2, r2
 80168b2:	2a00      	cmp	r2, #0
 80168b4:	d03b      	beq.n	801692e <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x142>
 80168b6:	4980      	ldr	r1, [pc, #512]	; (8016ab8 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>)
 80168b8:	2aff      	cmp	r2, #255	; 0xff
 80168ba:	680f      	ldr	r7, [r1, #0]
 80168bc:	f3c7 4b07 	ubfx	fp, r7, #16, #8
 80168c0:	f3c7 2907 	ubfx	r9, r7, #8, #8
 80168c4:	b2ff      	uxtb	r7, r7
 80168c6:	f000 80ed 	beq.w	8016aa4 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b8>
 80168ca:	fa1f f882 	uxth.w	r8, r2
 80168ce:	43d2      	mvns	r2, r2
 80168d0:	f810 ec03 	ldrb.w	lr, [r0, #-3]
 80168d4:	fb17 f708 	smulbb	r7, r7, r8
 80168d8:	b2d2      	uxtb	r2, r2
 80168da:	fb19 f908 	smulbb	r9, r9, r8
 80168de:	fb0e 7702 	mla	r7, lr, r2, r7
 80168e2:	fb1b f808 	smulbb	r8, fp, r8
 80168e6:	b2bf      	uxth	r7, r7
 80168e8:	f107 0e01 	add.w	lr, r7, #1
 80168ec:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 80168f0:	123f      	asrs	r7, r7, #8
 80168f2:	f800 7c03 	strb.w	r7, [r0, #-3]
 80168f6:	f810 7c02 	ldrb.w	r7, [r0, #-2]
 80168fa:	fb07 9902 	mla	r9, r7, r2, r9
 80168fe:	fa1f f989 	uxth.w	r9, r9
 8016902:	f109 0701 	add.w	r7, r9, #1
 8016906:	eb07 2919 	add.w	r9, r7, r9, lsr #8
 801690a:	f810 7c01 	ldrb.w	r7, [r0, #-1]
 801690e:	fb07 8802 	mla	r8, r7, r2, r8
 8016912:	ea4f 2929 	mov.w	r9, r9, asr #8
 8016916:	fa1f f888 	uxth.w	r8, r8
 801691a:	f800 9c02 	strb.w	r9, [r0, #-2]
 801691e:	f108 0201 	add.w	r2, r8, #1
 8016922:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8016926:	ea4f 2828 	mov.w	r8, r8, asr #8
 801692a:	f800 8c01 	strb.w	r8, [r0, #-1]
 801692e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8016930:	3003      	adds	r0, #3
 8016932:	f10a 3aff 	add.w	sl, sl, #4294967295
 8016936:	4415      	add	r5, r2
 8016938:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801693a:	4414      	add	r4, r2
 801693c:	e7a6      	b.n	801688c <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801693e:	2700      	movs	r7, #0
 8016940:	1bda      	subs	r2, r3, r7
 8016942:	2a00      	cmp	r2, #0
 8016944:	dc40      	bgt.n	80169c8 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8016946:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801694a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801694e:	441e      	add	r6, r3
 8016950:	9b00      	ldr	r3, [sp, #0]
 8016952:	2b00      	cmp	r3, #0
 8016954:	f340 80ad 	ble.w	8016ab2 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c6>
 8016958:	ee30 0a04 	vadd.f32	s0, s0, s8
 801695c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801695e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016962:	eeb0 6a62 	vmov.f32	s12, s5
 8016966:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801696a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801696e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016972:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8016976:	eeb0 6a43 	vmov.f32	s12, s6
 801697a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801697e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8016982:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016986:	ee61 7a27 	vmul.f32	s15, s2, s15
 801698a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801698e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016992:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016996:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801699a:	ee12 2a90 	vmov	r2, s5
 801699e:	eef0 2a47 	vmov.f32	s5, s14
 80169a2:	fb92 f3f3 	sdiv	r3, r2, r3
 80169a6:	ee13 2a10 	vmov	r2, s6
 80169aa:	9311      	str	r3, [sp, #68]	; 0x44
 80169ac:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80169ae:	eeb0 3a67 	vmov.f32	s6, s15
 80169b2:	fb92 f3f3 	sdiv	r3, r2, r3
 80169b6:	9312      	str	r3, [sp, #72]	; 0x48
 80169b8:	9b00      	ldr	r3, [sp, #0]
 80169ba:	9a03      	ldr	r2, [sp, #12]
 80169bc:	3b01      	subs	r3, #1
 80169be:	9300      	str	r3, [sp, #0]
 80169c0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80169c2:	bf08      	it	eq
 80169c4:	4613      	moveq	r3, r2
 80169c6:	e72d      	b.n	8016824 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80169c8:	1428      	asrs	r0, r5, #16
 80169ca:	d45c      	bmi.n	8016a86 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80169cc:	f8dc 2008 	ldr.w	r2, [ip, #8]
 80169d0:	4282      	cmp	r2, r0
 80169d2:	dd58      	ble.n	8016a86 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80169d4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80169d8:	d455      	bmi.n	8016a86 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80169da:	f8dc 200c 	ldr.w	r2, [ip, #12]
 80169de:	4572      	cmp	r2, lr
 80169e0:	dd51      	ble.n	8016a86 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80169e2:	9a01      	ldr	r2, [sp, #4]
 80169e4:	9902      	ldr	r1, [sp, #8]
 80169e6:	fb0e 0002 	mla	r0, lr, r2, r0
 80169ea:	0842      	lsrs	r2, r0, #1
 80169ec:	07c0      	lsls	r0, r0, #31
 80169ee:	5c8a      	ldrb	r2, [r1, r2]
 80169f0:	bf54      	ite	pl
 80169f2:	f002 020f 	andpl.w	r2, r2, #15
 80169f6:	1112      	asrmi	r2, r2, #4
 80169f8:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80169fc:	b2d2      	uxtb	r2, r2
 80169fe:	2a00      	cmp	r2, #0
 8016a00:	d041      	beq.n	8016a86 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8016a02:	492d      	ldr	r1, [pc, #180]	; (8016ab8 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>)
 8016a04:	2aff      	cmp	r2, #255	; 0xff
 8016a06:	6808      	ldr	r0, [r1, #0]
 8016a08:	f3c0 4b07 	ubfx	fp, r0, #16, #8
 8016a0c:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8016a10:	fa5f fe80 	uxtb.w	lr, r0
 8016a14:	ea4f 0047 	mov.w	r0, r7, lsl #1
 8016a18:	d03b      	beq.n	8016a92 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8016a1a:	fa1f f982 	uxth.w	r9, r2
 8016a1e:	4438      	add	r0, r7
 8016a20:	43d2      	mvns	r2, r2
 8016a22:	f816 8000 	ldrb.w	r8, [r6, r0]
 8016a26:	fb1e fe09 	smulbb	lr, lr, r9
 8016a2a:	fb1a fa09 	smulbb	sl, sl, r9
 8016a2e:	b2d2      	uxtb	r2, r2
 8016a30:	fb1b f909 	smulbb	r9, fp, r9
 8016a34:	fb08 ee02 	mla	lr, r8, r2, lr
 8016a38:	fa1f fe8e 	uxth.w	lr, lr
 8016a3c:	f10e 0801 	add.w	r8, lr, #1
 8016a40:	eb08 2e1e 	add.w	lr, r8, lr, lsr #8
 8016a44:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 8016a48:	f806 e000 	strb.w	lr, [r6, r0]
 8016a4c:	4430      	add	r0, r6
 8016a4e:	f890 e001 	ldrb.w	lr, [r0, #1]
 8016a52:	fb0e aa02 	mla	sl, lr, r2, sl
 8016a56:	fa1f fa8a 	uxth.w	sl, sl
 8016a5a:	f10a 0e01 	add.w	lr, sl, #1
 8016a5e:	eb0e 2a1a 	add.w	sl, lr, sl, lsr #8
 8016a62:	f890 e002 	ldrb.w	lr, [r0, #2]
 8016a66:	fb0e 9902 	mla	r9, lr, r2, r9
 8016a6a:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 8016a6e:	fa1f f989 	uxth.w	r9, r9
 8016a72:	f880 a001 	strb.w	sl, [r0, #1]
 8016a76:	f109 0201 	add.w	r2, r9, #1
 8016a7a:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 8016a7e:	ea4f 2929 	mov.w	r9, r9, asr #8
 8016a82:	f880 9002 	strb.w	r9, [r0, #2]
 8016a86:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8016a88:	3701      	adds	r7, #1
 8016a8a:	4415      	add	r5, r2
 8016a8c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8016a8e:	4414      	add	r4, r2
 8016a90:	e756      	b.n	8016940 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8016a92:	4438      	add	r0, r7
 8016a94:	f806 e000 	strb.w	lr, [r6, r0]
 8016a98:	4430      	add	r0, r6
 8016a9a:	f880 a001 	strb.w	sl, [r0, #1]
 8016a9e:	f880 b002 	strb.w	fp, [r0, #2]
 8016aa2:	e7f0      	b.n	8016a86 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8016aa4:	f800 7c03 	strb.w	r7, [r0, #-3]
 8016aa8:	f800 9c02 	strb.w	r9, [r0, #-2]
 8016aac:	f800 bc01 	strb.w	fp, [r0, #-1]
 8016ab0:	e73d      	b.n	801692e <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x142>
 8016ab2:	b005      	add	sp, #20
 8016ab4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016ab8:	2400e0dc 	.word	0x2400e0dc

08016abc <_ZN8touchgfx8LCD24bppD1Ev>:
 8016abc:	4770      	bx	lr

08016abe <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8016abe:	4770      	bx	lr

08016ac0 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8016ac0:	4770      	bx	lr

08016ac2 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8016ac2:	4770      	bx	lr

08016ac4 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8016ac4:	4770      	bx	lr

08016ac6 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8016ac6:	4770      	bx	lr

08016ac8 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8016ac8:	4770      	bx	lr

08016aca <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8016aca:	4770      	bx	lr

08016acc <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8016acc:	4770      	bx	lr

08016ace <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8016ace:	4770      	bx	lr

08016ad0 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8016ad0:	4770      	bx	lr

08016ad2 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8016ad2:	4770      	bx	lr

08016ad4 <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8016ad4:	4770      	bx	lr

08016ad6 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8016ad6:	4770      	bx	lr

08016ad8 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8016ad8:	4770      	bx	lr

08016ada <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8016ada:	4770      	bx	lr

08016adc <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8016adc:	4770      	bx	lr

08016ade <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8016ade:	4770      	bx	lr

08016ae0 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8016ae0:	4770      	bx	lr

08016ae2 <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8016ae2:	4770      	bx	lr

08016ae4 <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8016ae4:	4770      	bx	lr
	...

08016ae8 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8016ae8:	2bff      	cmp	r3, #255	; 0xff
 8016aea:	b508      	push	{r3, lr}
 8016aec:	d04f      	beq.n	8016b8e <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8016aee:	2a2c      	cmp	r2, #44	; 0x2c
 8016af0:	d032      	beq.n	8016b58 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x70>
 8016af2:	d80f      	bhi.n	8016b14 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2c>
 8016af4:	2a08      	cmp	r2, #8
 8016af6:	d046      	beq.n	8016b86 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8016af8:	d805      	bhi.n	8016b06 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1e>
 8016afa:	2a04      	cmp	r2, #4
 8016afc:	d041      	beq.n	8016b82 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8016afe:	2a05      	cmp	r2, #5
 8016b00:	d03d      	beq.n	8016b7e <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 8016b02:	2000      	movs	r0, #0
 8016b04:	e027      	b.n	8016b56 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8016b06:	2a0a      	cmp	r2, #10
 8016b08:	d03d      	beq.n	8016b86 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8016b0a:	d301      	bcc.n	8016b10 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8016b0c:	2a0b      	cmp	r2, #11
 8016b0e:	d1f8      	bne.n	8016b02 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8016b10:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8016b12:	e020      	b.n	8016b56 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8016b14:	2a30      	cmp	r2, #48	; 0x30
 8016b16:	d038      	beq.n	8016b8a <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8016b18:	d808      	bhi.n	8016b2c <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x44>
 8016b1a:	2a2e      	cmp	r2, #46	; 0x2e
 8016b1c:	684b      	ldr	r3, [r1, #4]
 8016b1e:	d029      	beq.n	8016b74 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8c>
 8016b20:	d90b      	bls.n	8016b3a <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 8016b22:	781b      	ldrb	r3, [r3, #0]
 8016b24:	2b00      	cmp	r3, #0
 8016b26:	d1ec      	bne.n	8016b02 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8016b28:	6a00      	ldr	r0, [r0, #32]
 8016b2a:	e014      	b.n	8016b56 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8016b2c:	2a32      	cmp	r2, #50	; 0x32
 8016b2e:	d02c      	beq.n	8016b8a <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8016b30:	d301      	bcc.n	8016b36 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4e>
 8016b32:	2a33      	cmp	r2, #51	; 0x33
 8016b34:	d1e5      	bne.n	8016b02 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8016b36:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8016b38:	e00d      	b.n	8016b56 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8016b3a:	781b      	ldrb	r3, [r3, #0]
 8016b3c:	2b01      	cmp	r3, #1
 8016b3e:	d009      	beq.n	8016b54 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6c>
 8016b40:	d3f2      	bcc.n	8016b28 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x40>
 8016b42:	2b02      	cmp	r3, #2
 8016b44:	d1dd      	bne.n	8016b02 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8016b46:	4b39      	ldr	r3, [pc, #228]	; (8016c2c <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x144>)
 8016b48:	f44f 6184 	mov.w	r1, #1056	; 0x420
 8016b4c:	4a38      	ldr	r2, [pc, #224]	; (8016c30 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x148>)
 8016b4e:	4839      	ldr	r0, [pc, #228]	; (8016c34 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x14c>)
 8016b50:	f009 fa46 	bl	801ffe0 <__assert_func>
 8016b54:	6900      	ldr	r0, [r0, #16]
 8016b56:	bd08      	pop	{r3, pc}
 8016b58:	684b      	ldr	r3, [r1, #4]
 8016b5a:	781b      	ldrb	r3, [r3, #0]
 8016b5c:	2b01      	cmp	r3, #1
 8016b5e:	d007      	beq.n	8016b70 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x88>
 8016b60:	d30b      	bcc.n	8016b7a <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8016b62:	2b02      	cmp	r3, #2
 8016b64:	d1cd      	bne.n	8016b02 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8016b66:	4b31      	ldr	r3, [pc, #196]	; (8016c2c <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x144>)
 8016b68:	f240 412c 	movw	r1, #1068	; 0x42c
 8016b6c:	4a30      	ldr	r2, [pc, #192]	; (8016c30 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x148>)
 8016b6e:	e7ee      	b.n	8016b4e <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x66>
 8016b70:	6880      	ldr	r0, [r0, #8]
 8016b72:	e7f0      	b.n	8016b56 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8016b74:	781b      	ldrb	r3, [r3, #0]
 8016b76:	2b00      	cmp	r3, #0
 8016b78:	d1c3      	bne.n	8016b02 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8016b7a:	6980      	ldr	r0, [r0, #24]
 8016b7c:	e7eb      	b.n	8016b56 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8016b7e:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8016b80:	e7e9      	b.n	8016b56 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8016b82:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8016b84:	e7e7      	b.n	8016b56 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8016b86:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8016b88:	e7e5      	b.n	8016b56 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8016b8a:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8016b8c:	e7e3      	b.n	8016b56 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8016b8e:	2a2c      	cmp	r2, #44	; 0x2c
 8016b90:	d030      	beq.n	8016bf4 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x10c>
 8016b92:	d80f      	bhi.n	8016bb4 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xcc>
 8016b94:	2a08      	cmp	r2, #8
 8016b96:	d044      	beq.n	8016c22 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 8016b98:	d805      	bhi.n	8016ba6 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 8016b9a:	2a04      	cmp	r2, #4
 8016b9c:	d03f      	beq.n	8016c1e <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 8016b9e:	2a05      	cmp	r2, #5
 8016ba0:	d1af      	bne.n	8016b02 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8016ba2:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8016ba4:	e7d7      	b.n	8016b56 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8016ba6:	2a0a      	cmp	r2, #10
 8016ba8:	d03b      	beq.n	8016c22 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 8016baa:	d301      	bcc.n	8016bb0 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc8>
 8016bac:	2a0b      	cmp	r2, #11
 8016bae:	d1a8      	bne.n	8016b02 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8016bb0:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8016bb2:	e7d0      	b.n	8016b56 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8016bb4:	2a30      	cmp	r2, #48	; 0x30
 8016bb6:	d036      	beq.n	8016c26 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8016bb8:	d808      	bhi.n	8016bcc <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe4>
 8016bba:	2a2e      	cmp	r2, #46	; 0x2e
 8016bbc:	684b      	ldr	r3, [r1, #4]
 8016bbe:	d028      	beq.n	8016c12 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12a>
 8016bc0:	d90b      	bls.n	8016bda <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xf2>
 8016bc2:	781b      	ldrb	r3, [r3, #0]
 8016bc4:	2b00      	cmp	r3, #0
 8016bc6:	d19c      	bne.n	8016b02 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8016bc8:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8016bca:	e7c4      	b.n	8016b56 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8016bcc:	2a32      	cmp	r2, #50	; 0x32
 8016bce:	d02a      	beq.n	8016c26 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8016bd0:	d301      	bcc.n	8016bd6 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xee>
 8016bd2:	2a33      	cmp	r2, #51	; 0x33
 8016bd4:	d195      	bne.n	8016b02 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8016bd6:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8016bd8:	e7bd      	b.n	8016b56 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8016bda:	781b      	ldrb	r3, [r3, #0]
 8016bdc:	2b01      	cmp	r3, #1
 8016bde:	d007      	beq.n	8016bf0 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x108>
 8016be0:	d3f2      	bcc.n	8016bc8 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe0>
 8016be2:	2b02      	cmp	r3, #2
 8016be4:	d18d      	bne.n	8016b02 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8016be6:	4b11      	ldr	r3, [pc, #68]	; (8016c2c <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x144>)
 8016be8:	f240 415d 	movw	r1, #1117	; 0x45d
 8016bec:	4a10      	ldr	r2, [pc, #64]	; (8016c30 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x148>)
 8016bee:	e7ae      	b.n	8016b4e <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x66>
 8016bf0:	6940      	ldr	r0, [r0, #20]
 8016bf2:	e7b0      	b.n	8016b56 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8016bf4:	684b      	ldr	r3, [r1, #4]
 8016bf6:	781b      	ldrb	r3, [r3, #0]
 8016bf8:	2b01      	cmp	r3, #1
 8016bfa:	d008      	beq.n	8016c0e <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x126>
 8016bfc:	d30d      	bcc.n	8016c1a <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 8016bfe:	2b02      	cmp	r3, #2
 8016c00:	f47f af7f 	bne.w	8016b02 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8016c04:	4b09      	ldr	r3, [pc, #36]	; (8016c2c <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x144>)
 8016c06:	f240 4169 	movw	r1, #1129	; 0x469
 8016c0a:	4a09      	ldr	r2, [pc, #36]	; (8016c30 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x148>)
 8016c0c:	e79f      	b.n	8016b4e <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x66>
 8016c0e:	68c0      	ldr	r0, [r0, #12]
 8016c10:	e7a1      	b.n	8016b56 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8016c12:	781b      	ldrb	r3, [r3, #0]
 8016c14:	2b00      	cmp	r3, #0
 8016c16:	f47f af74 	bne.w	8016b02 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8016c1a:	69c0      	ldr	r0, [r0, #28]
 8016c1c:	e79b      	b.n	8016b56 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8016c1e:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8016c20:	e799      	b.n	8016b56 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8016c22:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8016c24:	e797      	b.n	8016b56 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8016c26:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8016c28:	e795      	b.n	8016b56 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8016c2a:	bf00      	nop
 8016c2c:	08025059 	.word	0x08025059
 8016c30:	080257d3 	.word	0x080257d3
 8016c34:	080250a5 	.word	0x080250a5

08016c38 <_ZNK8touchgfx8LCD24bpp17framebufferStrideEv>:
 8016c38:	b508      	push	{r3, lr}
 8016c3a:	4b06      	ldr	r3, [pc, #24]	; (8016c54 <_ZNK8touchgfx8LCD24bpp17framebufferStrideEv+0x1c>)
 8016c3c:	8818      	ldrh	r0, [r3, #0]
 8016c3e:	b928      	cbnz	r0, 8016c4c <_ZNK8touchgfx8LCD24bpp17framebufferStrideEv+0x14>
 8016c40:	4b05      	ldr	r3, [pc, #20]	; (8016c58 <_ZNK8touchgfx8LCD24bpp17framebufferStrideEv+0x20>)
 8016c42:	2151      	movs	r1, #81	; 0x51
 8016c44:	4a05      	ldr	r2, [pc, #20]	; (8016c5c <_ZNK8touchgfx8LCD24bpp17framebufferStrideEv+0x24>)
 8016c46:	4806      	ldr	r0, [pc, #24]	; (8016c60 <_ZNK8touchgfx8LCD24bpp17framebufferStrideEv+0x28>)
 8016c48:	f009 f9ca 	bl	801ffe0 <__assert_func>
 8016c4c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8016c50:	b280      	uxth	r0, r0
 8016c52:	bd08      	pop	{r3, pc}
 8016c54:	2400e0ae 	.word	0x2400e0ae
 8016c58:	0802529f 	.word	0x0802529f
 8016c5c:	08025798 	.word	0x08025798
 8016c60:	080252e1 	.word	0x080252e1

08016c64 <_ZN8touchgfx8LCD24bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8016c64:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016c66:	4606      	mov	r6, r0
 8016c68:	b087      	sub	sp, #28
 8016c6a:	4615      	mov	r5, r2
 8016c6c:	461f      	mov	r7, r3
 8016c6e:	b353      	cbz	r3, 8016cc6 <_ZN8touchgfx8LCD24bpp8fillRectERKNS_4RectENS_9colortypeEh+0x62>
 8016c70:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8016c74:	2b00      	cmp	r3, #0
 8016c76:	dd26      	ble.n	8016cc6 <_ZN8touchgfx8LCD24bpp8fillRectERKNS_4RectENS_9colortypeEh+0x62>
 8016c78:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8016c7c:	2b00      	cmp	r3, #0
 8016c7e:	dd22      	ble.n	8016cc6 <_ZN8touchgfx8LCD24bpp8fillRectERKNS_4RectENS_9colortypeEh+0x62>
 8016c80:	6808      	ldr	r0, [r1, #0]
 8016c82:	aa04      	add	r2, sp, #16
 8016c84:	6849      	ldr	r1, [r1, #4]
 8016c86:	4c1b      	ldr	r4, [pc, #108]	; (8016cf4 <_ZN8touchgfx8LCD24bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 8016c88:	c203      	stmia	r2!, {r0, r1}
 8016c8a:	a804      	add	r0, sp, #16
 8016c8c:	f7fa fcba 	bl	8011604 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016c90:	6820      	ldr	r0, [r4, #0]
 8016c92:	6803      	ldr	r3, [r0, #0]
 8016c94:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016c96:	4798      	blx	r3
 8016c98:	2fff      	cmp	r7, #255	; 0xff
 8016c9a:	d016      	beq.n	8016cca <_ZN8touchgfx8LCD24bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 8016c9c:	f010 0f08 	tst.w	r0, #8
 8016ca0:	6820      	ldr	r0, [r4, #0]
 8016ca2:	d015      	beq.n	8016cd0 <_ZN8touchgfx8LCD24bpp8fillRectERKNS_4RectENS_9colortypeEh+0x6c>
 8016ca4:	2400      	movs	r4, #0
 8016ca6:	6801      	ldr	r1, [r0, #0]
 8016ca8:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8016cac:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8016cb0:	e9cd 7402 	strd	r7, r4, [sp, #8]
 8016cb4:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 8016cb8:	9401      	str	r4, [sp, #4]
 8016cba:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 8016cbe:	9400      	str	r4, [sp, #0]
 8016cc0:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 8016cc2:	4629      	mov	r1, r5
 8016cc4:	47a0      	blx	r4
 8016cc6:	b007      	add	sp, #28
 8016cc8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8016cca:	f010 0f02 	tst.w	r0, #2
 8016cce:	e7e7      	b.n	8016ca0 <_ZN8touchgfx8LCD24bpp8fillRectERKNS_4RectENS_9colortypeEh+0x3c>
 8016cd0:	6803      	ldr	r3, [r0, #0]
 8016cd2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016cd4:	4798      	blx	r3
 8016cd6:	4b08      	ldr	r3, [pc, #32]	; (8016cf8 <_ZN8touchgfx8LCD24bpp8fillRectERKNS_4RectENS_9colortypeEh+0x94>)
 8016cd8:	4601      	mov	r1, r0
 8016cda:	4630      	mov	r0, r6
 8016cdc:	881a      	ldrh	r2, [r3, #0]
 8016cde:	6833      	ldr	r3, [r6, #0]
 8016ce0:	e9cd 5700 	strd	r5, r7, [sp]
 8016ce4:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8016ce6:	ab04      	add	r3, sp, #16
 8016ce8:	47a8      	blx	r5
 8016cea:	6820      	ldr	r0, [r4, #0]
 8016cec:	6803      	ldr	r3, [r0, #0]
 8016cee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016cf0:	4798      	blx	r3
 8016cf2:	e7e8      	b.n	8016cc6 <_ZN8touchgfx8LCD24bpp8fillRectERKNS_4RectENS_9colortypeEh+0x62>
 8016cf4:	2400e0b4 	.word	0x2400e0b4
 8016cf8:	2400e0ae 	.word	0x2400e0ae

08016cfc <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8016cfc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8016d00:	b08b      	sub	sp, #44	; 0x2c
 8016d02:	460d      	mov	r5, r1
 8016d04:	4616      	mov	r6, r2
 8016d06:	f89d 8048 	ldrb.w	r8, [sp, #72]	; 0x48
 8016d0a:	f1b8 0f00 	cmp.w	r8, #0
 8016d0e:	d047      	beq.n	8016da0 <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa4>
 8016d10:	6810      	ldr	r0, [r2, #0]
 8016d12:	ac06      	add	r4, sp, #24
 8016d14:	6851      	ldr	r1, [r2, #4]
 8016d16:	4f51      	ldr	r7, [pc, #324]	; (8016e5c <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0x160>)
 8016d18:	c403      	stmia	r4!, {r0, r1}
 8016d1a:	6818      	ldr	r0, [r3, #0]
 8016d1c:	ac08      	add	r4, sp, #32
 8016d1e:	6859      	ldr	r1, [r3, #4]
 8016d20:	c403      	stmia	r4!, {r0, r1}
 8016d22:	a806      	add	r0, sp, #24
 8016d24:	f7fa fc6e 	bl	8011604 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016d28:	4631      	mov	r1, r6
 8016d2a:	a808      	add	r0, sp, #32
 8016d2c:	f7fa fcae 	bl	801168c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016d30:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8016d34:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8016d38:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8016d3c:	6838      	ldr	r0, [r7, #0]
 8016d3e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8016d42:	f9bd 6024 	ldrsh.w	r6, [sp, #36]	; 0x24
 8016d46:	f9bd 4026 	ldrsh.w	r4, [sp, #38]	; 0x26
 8016d4a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8016d4e:	440d      	add	r5, r1
 8016d50:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8016d54:	440a      	add	r2, r1
 8016d56:	f8ad 2020 	strh.w	r2, [sp, #32]
 8016d5a:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8016d5e:	4413      	add	r3, r2
 8016d60:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8016d64:	6803      	ldr	r3, [r0, #0]
 8016d66:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016d68:	4798      	blx	r3
 8016d6a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8016d6e:	d01a      	beq.n	8016da6 <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0xaa>
 8016d70:	f010 0f04 	tst.w	r0, #4
 8016d74:	6838      	ldr	r0, [r7, #0]
 8016d76:	d019      	beq.n	8016dac <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb0>
 8016d78:	2100      	movs	r1, #0
 8016d7a:	6807      	ldr	r7, [r0, #0]
 8016d7c:	b2a4      	uxth	r4, r4
 8016d7e:	f8cd 800c 	str.w	r8, [sp, #12]
 8016d82:	b2b6      	uxth	r6, r6
 8016d84:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8016d88:	9401      	str	r4, [sp, #4]
 8016d8a:	9600      	str	r6, [sp, #0]
 8016d8c:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8016d90:	e9cd 1104 	strd	r1, r1, [sp, #16]
 8016d94:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8016d98:	9102      	str	r1, [sp, #8]
 8016d9a:	4629      	mov	r1, r5
 8016d9c:	6c7c      	ldr	r4, [r7, #68]	; 0x44
 8016d9e:	47a0      	blx	r4
 8016da0:	b00b      	add	sp, #44	; 0x2c
 8016da2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8016da6:	f010 0f01 	tst.w	r0, #1
 8016daa:	e7e3      	b.n	8016d74 <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0x78>
 8016dac:	6803      	ldr	r3, [r0, #0]
 8016dae:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016db0:	4798      	blx	r3
 8016db2:	4a2b      	ldr	r2, [pc, #172]	; (8016e60 <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0x164>)
 8016db4:	f9bd 1022 	ldrsh.w	r1, [sp, #34]	; 0x22
 8016db8:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8016dbc:	8813      	ldrh	r3, [r2, #0]
 8016dbe:	f9bd c020 	ldrsh.w	ip, [sp, #32]
 8016dc2:	fb03 f404 	mul.w	r4, r3, r4
 8016dc6:	fb03 c101 	mla	r1, r3, r1, ip
 8016dca:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8016dce:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8016dd2:	4408      	add	r0, r1
 8016dd4:	eb06 0146 	add.w	r1, r6, r6, lsl #1
 8016dd8:	4404      	add	r4, r0
 8016dda:	d02e      	beq.n	8016e3a <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0x13e>
 8016ddc:	f9bd 201c 	ldrsh.w	r2, [sp, #28]
 8016de0:	1b9b      	subs	r3, r3, r6
 8016de2:	f1c8 0cff 	rsb	ip, r8, #255	; 0xff
 8016de6:	1b96      	subs	r6, r2, r6
 8016de8:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8016dec:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8016df0:	42a0      	cmp	r0, r4
 8016df2:	d22d      	bcs.n	8016e50 <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0x154>
 8016df4:	eb00 0e01 	add.w	lr, r0, r1
 8016df8:	4570      	cmp	r0, lr
 8016dfa:	d210      	bcs.n	8016e1e <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0x122>
 8016dfc:	f890 9000 	ldrb.w	r9, [r0]
 8016e00:	f815 2b01 	ldrb.w	r2, [r5], #1
 8016e04:	fb19 f90c 	smulbb	r9, r9, ip
 8016e08:	fb02 9208 	mla	r2, r2, r8, r9
 8016e0c:	b292      	uxth	r2, r2
 8016e0e:	f102 0901 	add.w	r9, r2, #1
 8016e12:	eb09 2212 	add.w	r2, r9, r2, lsr #8
 8016e16:	1212      	asrs	r2, r2, #8
 8016e18:	f800 2b01 	strb.w	r2, [r0], #1
 8016e1c:	e7ec      	b.n	8016df8 <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfc>
 8016e1e:	4418      	add	r0, r3
 8016e20:	4435      	add	r5, r6
 8016e22:	e7e5      	b.n	8016df0 <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0xf4>
 8016e24:	8813      	ldrh	r3, [r2, #0]
 8016e26:	1b9b      	subs	r3, r3, r6
 8016e28:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8016e2c:	4418      	add	r0, r3
 8016e2e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8016e32:	1b9b      	subs	r3, r3, r6
 8016e34:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8016e38:	441d      	add	r5, r3
 8016e3a:	42a0      	cmp	r0, r4
 8016e3c:	d208      	bcs.n	8016e50 <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0x154>
 8016e3e:	eb00 0c01 	add.w	ip, r0, r1
 8016e42:	4560      	cmp	r0, ip
 8016e44:	d2ee      	bcs.n	8016e24 <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0x128>
 8016e46:	f815 3b01 	ldrb.w	r3, [r5], #1
 8016e4a:	f800 3b01 	strb.w	r3, [r0], #1
 8016e4e:	e7f8      	b.n	8016e42 <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0x146>
 8016e50:	6838      	ldr	r0, [r7, #0]
 8016e52:	6803      	ldr	r3, [r0, #0]
 8016e54:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016e56:	4798      	blx	r3
 8016e58:	e7a2      	b.n	8016da0 <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa4>
 8016e5a:	bf00      	nop
 8016e5c:	2400e0b4 	.word	0x2400e0b4
 8016e60:	2400e0ae 	.word	0x2400e0ae

08016e64 <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8016e64:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016e66:	2300      	movs	r3, #0
 8016e68:	b085      	sub	sp, #20
 8016e6a:	9300      	str	r3, [sp, #0]
 8016e6c:	4b41      	ldr	r3, [pc, #260]	; (8016f74 <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x110>)
 8016e6e:	781b      	ldrb	r3, [r3, #0]
 8016e70:	2b00      	cmp	r3, #0
 8016e72:	d136      	bne.n	8016ee2 <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7e>
 8016e74:	4a40      	ldr	r2, [pc, #256]	; (8016f78 <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x114>)
 8016e76:	f9b2 2000 	ldrsh.w	r2, [r2]
 8016e7a:	f8ad 2004 	strh.w	r2, [sp, #4]
 8016e7e:	2b00      	cmp	r3, #0
 8016e80:	d131      	bne.n	8016ee6 <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x82>
 8016e82:	4b3e      	ldr	r3, [pc, #248]	; (8016f7c <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x118>)
 8016e84:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016e88:	ac02      	add	r4, sp, #8
 8016e8a:	6808      	ldr	r0, [r1, #0]
 8016e8c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8016e90:	ab02      	add	r3, sp, #8
 8016e92:	6849      	ldr	r1, [r1, #4]
 8016e94:	4d3a      	ldr	r5, [pc, #232]	; (8016f80 <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x11c>)
 8016e96:	c303      	stmia	r3!, {r0, r1}
 8016e98:	4669      	mov	r1, sp
 8016e9a:	4620      	mov	r0, r4
 8016e9c:	f7fa fbf6 	bl	801168c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016ea0:	4668      	mov	r0, sp
 8016ea2:	f7fa fbaf 	bl	8011604 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016ea6:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8016eaa:	f8bd 2000 	ldrh.w	r2, [sp]
 8016eae:	462e      	mov	r6, r5
 8016eb0:	6828      	ldr	r0, [r5, #0]
 8016eb2:	4413      	add	r3, r2
 8016eb4:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8016eb8:	f8ad 3008 	strh.w	r3, [sp, #8]
 8016ebc:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8016ec0:	4413      	add	r3, r2
 8016ec2:	f8ad 300a 	strh.w	r3, [sp, #10]
 8016ec6:	6803      	ldr	r3, [r0, #0]
 8016ec8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016eca:	4798      	blx	r3
 8016ecc:	f010 0f01 	tst.w	r0, #1
 8016ed0:	d00b      	beq.n	8016eea <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x86>
 8016ed2:	6828      	ldr	r0, [r5, #0]
 8016ed4:	6803      	ldr	r3, [r0, #0]
 8016ed6:	e894 0006 	ldmia.w	r4, {r1, r2}
 8016eda:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8016edc:	4798      	blx	r3
 8016ede:	b005      	add	sp, #20
 8016ee0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8016ee2:	4a26      	ldr	r2, [pc, #152]	; (8016f7c <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x118>)
 8016ee4:	e7c7      	b.n	8016e76 <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8016ee6:	4b24      	ldr	r3, [pc, #144]	; (8016f78 <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x114>)
 8016ee8:	e7cc      	b.n	8016e84 <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8016eea:	6830      	ldr	r0, [r6, #0]
 8016eec:	f9bd 700e 	ldrsh.w	r7, [sp, #14]
 8016ef0:	6803      	ldr	r3, [r0, #0]
 8016ef2:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 8016ef6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8016ef8:	4798      	blx	r3
 8016efa:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8016efe:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8016f02:	f8bd 4004 	ldrh.w	r4, [sp, #4]
 8016f06:	fb14 3402 	smlabb	r4, r4, r2, r3
 8016f0a:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8016f0e:	4404      	add	r4, r0
 8016f10:	6830      	ldr	r0, [r6, #0]
 8016f12:	6803      	ldr	r3, [r0, #0]
 8016f14:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016f16:	4798      	blx	r3
 8016f18:	4917      	ldr	r1, [pc, #92]	; (8016f78 <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x114>)
 8016f1a:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8016f1e:	880b      	ldrh	r3, [r1, #0]
 8016f20:	f9bd c008 	ldrsh.w	ip, [sp, #8]
 8016f24:	fb03 c202 	mla	r2, r3, r2, ip
 8016f28:	437b      	muls	r3, r7
 8016f2a:	eb05 0745 	add.w	r7, r5, r5, lsl #1
 8016f2e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016f32:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8016f36:	4410      	add	r0, r2
 8016f38:	18c2      	adds	r2, r0, r3
 8016f3a:	4290      	cmp	r0, r2
 8016f3c:	d214      	bcs.n	8016f68 <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>
 8016f3e:	eb00 0c07 	add.w	ip, r0, r7
 8016f42:	4560      	cmp	r0, ip
 8016f44:	d204      	bcs.n	8016f50 <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xec>
 8016f46:	f814 3b01 	ldrb.w	r3, [r4], #1
 8016f4a:	f800 3b01 	strb.w	r3, [r0], #1
 8016f4e:	e7f8      	b.n	8016f42 <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xde>
 8016f50:	880b      	ldrh	r3, [r1, #0]
 8016f52:	1b5b      	subs	r3, r3, r5
 8016f54:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8016f58:	4418      	add	r0, r3
 8016f5a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8016f5e:	1b5b      	subs	r3, r3, r5
 8016f60:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8016f64:	441c      	add	r4, r3
 8016f66:	e7e8      	b.n	8016f3a <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd6>
 8016f68:	6830      	ldr	r0, [r6, #0]
 8016f6a:	6803      	ldr	r3, [r0, #0]
 8016f6c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016f6e:	4798      	blx	r3
 8016f70:	e7b5      	b.n	8016ede <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 8016f72:	bf00      	nop
 8016f74:	2400e0ac 	.word	0x2400e0ac
 8016f78:	2400e0ae 	.word	0x2400e0ae
 8016f7c:	2400e0b0 	.word	0x2400e0b0
 8016f80:	2400e0b4 	.word	0x2400e0b4

08016f84 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8016f84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016f88:	4698      	mov	r8, r3
 8016f8a:	4b24      	ldr	r3, [pc, #144]	; (801701c <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x98>)
 8016f8c:	b089      	sub	sp, #36	; 0x24
 8016f8e:	4605      	mov	r5, r0
 8016f90:	681b      	ldr	r3, [r3, #0]
 8016f92:	468a      	mov	sl, r1
 8016f94:	4693      	mov	fp, r2
 8016f96:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8016f9a:	2b02      	cmp	r3, #2
 8016f9c:	d106      	bne.n	8016fac <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x28>
 8016f9e:	4b20      	ldr	r3, [pc, #128]	; (8017020 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x9c>)
 8016fa0:	f240 11eb 	movw	r1, #491	; 0x1eb
 8016fa4:	4a1f      	ldr	r2, [pc, #124]	; (8017024 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xa0>)
 8016fa6:	4820      	ldr	r0, [pc, #128]	; (8017028 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xa4>)
 8016fa8:	f009 f81a 	bl	801ffe0 <__assert_func>
 8016fac:	ac08      	add	r4, sp, #32
 8016fae:	f824 8d0c 	strh.w	r8, [r4, #-12]!
 8016fb2:	4620      	mov	r0, r4
 8016fb4:	f7fe f932 	bl	801521c <_ZNK8touchgfx6Bitmap9getFormatEv>
 8016fb8:	682b      	ldr	r3, [r5, #0]
 8016fba:	4606      	mov	r6, r0
 8016fbc:	4628      	mov	r0, r5
 8016fbe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016fc0:	4798      	blx	r3
 8016fc2:	4286      	cmp	r6, r0
 8016fc4:	d004      	beq.n	8016fd0 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x4c>
 8016fc6:	4b19      	ldr	r3, [pc, #100]	; (801702c <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xa8>)
 8016fc8:	f240 11ed 	movw	r1, #493	; 0x1ed
 8016fcc:	4a15      	ldr	r2, [pc, #84]	; (8017024 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xa0>)
 8016fce:	e7ea      	b.n	8016fa6 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x22>
 8016fd0:	4620      	mov	r0, r4
 8016fd2:	f7fe f899 	bl	8015108 <_ZNK8touchgfx6Bitmap7getDataEv>
 8016fd6:	4606      	mov	r6, r0
 8016fd8:	b920      	cbnz	r0, 8016fe4 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x60>
 8016fda:	4b15      	ldr	r3, [pc, #84]	; (8017030 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xac>)
 8016fdc:	f240 11ef 	movw	r1, #495	; 0x1ef
 8016fe0:	4a10      	ldr	r2, [pc, #64]	; (8017024 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xa0>)
 8016fe2:	e7e0      	b.n	8016fa6 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x22>
 8016fe4:	682b      	ldr	r3, [r5, #0]
 8016fe6:	4620      	mov	r0, r4
 8016fe8:	f8d3 9018 	ldr.w	r9, [r3, #24]
 8016fec:	f7fd ff70 	bl	8014ed0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8016ff0:	4607      	mov	r7, r0
 8016ff2:	4620      	mov	r0, r4
 8016ff4:	f7fd ffb0 	bl	8014f58 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8016ff8:	465b      	mov	r3, fp
 8016ffa:	b200      	sxth	r0, r0
 8016ffc:	4652      	mov	r2, sl
 8016ffe:	b23f      	sxth	r7, r7
 8017000:	4629      	mov	r1, r5
 8017002:	9002      	str	r0, [sp, #8]
 8017004:	a806      	add	r0, sp, #24
 8017006:	e9cd 6700 	strd	r6, r7, [sp]
 801700a:	47c8      	blx	r9
 801700c:	a906      	add	r1, sp, #24
 801700e:	4640      	mov	r0, r8
 8017010:	f7fd fe26 	bl	8014c60 <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE>
 8017014:	4630      	mov	r0, r6
 8017016:	b009      	add	sp, #36	; 0x24
 8017018:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801701c:	2400e0b4 	.word	0x2400e0b4
 8017020:	08025125 	.word	0x08025125
 8017024:	08025910 	.word	0x08025910
 8017028:	080250a5 	.word	0x080250a5
 801702c:	080251d7 	.word	0x080251d7
 8017030:	0802522c 	.word	0x0802522c

08017034 <_ZN8touchgfx8LCD24bppD0Ev>:
 8017034:	b510      	push	{r4, lr}
 8017036:	4604      	mov	r4, r0
 8017038:	2158      	movs	r1, #88	; 0x58
 801703a:	f008 fdd8 	bl	801fbee <_ZdlPvj>
 801703e:	4620      	mov	r0, r4
 8017040:	bd10      	pop	{r4, pc}

08017042 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8017042:	b510      	push	{r4, lr}
 8017044:	4604      	mov	r4, r0
 8017046:	2104      	movs	r1, #4
 8017048:	f008 fdd1 	bl	801fbee <_ZdlPvj>
 801704c:	4620      	mov	r0, r4
 801704e:	bd10      	pop	{r4, pc}

08017050 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8017050:	b510      	push	{r4, lr}
 8017052:	4604      	mov	r4, r0
 8017054:	2104      	movs	r1, #4
 8017056:	f008 fdca 	bl	801fbee <_ZdlPvj>
 801705a:	4620      	mov	r0, r4
 801705c:	bd10      	pop	{r4, pc}

0801705e <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801705e:	b510      	push	{r4, lr}
 8017060:	4604      	mov	r4, r0
 8017062:	2104      	movs	r1, #4
 8017064:	f008 fdc3 	bl	801fbee <_ZdlPvj>
 8017068:	4620      	mov	r0, r4
 801706a:	bd10      	pop	{r4, pc}

0801706c <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801706c:	b510      	push	{r4, lr}
 801706e:	4604      	mov	r4, r0
 8017070:	2104      	movs	r1, #4
 8017072:	f008 fdbc 	bl	801fbee <_ZdlPvj>
 8017076:	4620      	mov	r0, r4
 8017078:	bd10      	pop	{r4, pc}

0801707a <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801707a:	b510      	push	{r4, lr}
 801707c:	4604      	mov	r4, r0
 801707e:	2104      	movs	r1, #4
 8017080:	f008 fdb5 	bl	801fbee <_ZdlPvj>
 8017084:	4620      	mov	r0, r4
 8017086:	bd10      	pop	{r4, pc}

08017088 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8017088:	b510      	push	{r4, lr}
 801708a:	4604      	mov	r4, r0
 801708c:	2104      	movs	r1, #4
 801708e:	f008 fdae 	bl	801fbee <_ZdlPvj>
 8017092:	4620      	mov	r0, r4
 8017094:	bd10      	pop	{r4, pc}

08017096 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8017096:	b510      	push	{r4, lr}
 8017098:	4604      	mov	r4, r0
 801709a:	2104      	movs	r1, #4
 801709c:	f008 fda7 	bl	801fbee <_ZdlPvj>
 80170a0:	4620      	mov	r0, r4
 80170a2:	bd10      	pop	{r4, pc}

080170a4 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80170a4:	b510      	push	{r4, lr}
 80170a6:	4604      	mov	r4, r0
 80170a8:	2104      	movs	r1, #4
 80170aa:	f008 fda0 	bl	801fbee <_ZdlPvj>
 80170ae:	4620      	mov	r0, r4
 80170b0:	bd10      	pop	{r4, pc}

080170b2 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80170b2:	b510      	push	{r4, lr}
 80170b4:	4604      	mov	r4, r0
 80170b6:	2104      	movs	r1, #4
 80170b8:	f008 fd99 	bl	801fbee <_ZdlPvj>
 80170bc:	4620      	mov	r0, r4
 80170be:	bd10      	pop	{r4, pc}

080170c0 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 80170c0:	b510      	push	{r4, lr}
 80170c2:	4604      	mov	r4, r0
 80170c4:	2104      	movs	r1, #4
 80170c6:	f008 fd92 	bl	801fbee <_ZdlPvj>
 80170ca:	4620      	mov	r0, r4
 80170cc:	bd10      	pop	{r4, pc}

080170ce <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 80170ce:	b510      	push	{r4, lr}
 80170d0:	4604      	mov	r4, r0
 80170d2:	2104      	movs	r1, #4
 80170d4:	f008 fd8b 	bl	801fbee <_ZdlPvj>
 80170d8:	4620      	mov	r0, r4
 80170da:	bd10      	pop	{r4, pc}

080170dc <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 80170dc:	b510      	push	{r4, lr}
 80170de:	4604      	mov	r4, r0
 80170e0:	2104      	movs	r1, #4
 80170e2:	f008 fd84 	bl	801fbee <_ZdlPvj>
 80170e6:	4620      	mov	r0, r4
 80170e8:	bd10      	pop	{r4, pc}

080170ea <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80170ea:	b510      	push	{r4, lr}
 80170ec:	4604      	mov	r4, r0
 80170ee:	2104      	movs	r1, #4
 80170f0:	f008 fd7d 	bl	801fbee <_ZdlPvj>
 80170f4:	4620      	mov	r0, r4
 80170f6:	bd10      	pop	{r4, pc}

080170f8 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80170f8:	b510      	push	{r4, lr}
 80170fa:	4604      	mov	r4, r0
 80170fc:	2104      	movs	r1, #4
 80170fe:	f008 fd76 	bl	801fbee <_ZdlPvj>
 8017102:	4620      	mov	r0, r4
 8017104:	bd10      	pop	{r4, pc}

08017106 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8017106:	b510      	push	{r4, lr}
 8017108:	4604      	mov	r4, r0
 801710a:	2104      	movs	r1, #4
 801710c:	f008 fd6f 	bl	801fbee <_ZdlPvj>
 8017110:	4620      	mov	r0, r4
 8017112:	bd10      	pop	{r4, pc}

08017114 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8017114:	b510      	push	{r4, lr}
 8017116:	4604      	mov	r4, r0
 8017118:	2104      	movs	r1, #4
 801711a:	f008 fd68 	bl	801fbee <_ZdlPvj>
 801711e:	4620      	mov	r0, r4
 8017120:	bd10      	pop	{r4, pc}

08017122 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8017122:	b510      	push	{r4, lr}
 8017124:	4604      	mov	r4, r0
 8017126:	2104      	movs	r1, #4
 8017128:	f008 fd61 	bl	801fbee <_ZdlPvj>
 801712c:	4620      	mov	r0, r4
 801712e:	bd10      	pop	{r4, pc}

08017130 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8017130:	b510      	push	{r4, lr}
 8017132:	4604      	mov	r4, r0
 8017134:	2104      	movs	r1, #4
 8017136:	f008 fd5a 	bl	801fbee <_ZdlPvj>
 801713a:	4620      	mov	r0, r4
 801713c:	bd10      	pop	{r4, pc}

0801713e <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801713e:	b510      	push	{r4, lr}
 8017140:	4604      	mov	r4, r0
 8017142:	2104      	movs	r1, #4
 8017144:	f008 fd53 	bl	801fbee <_ZdlPvj>
 8017148:	4620      	mov	r0, r4
 801714a:	bd10      	pop	{r4, pc}

0801714c <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801714c:	b510      	push	{r4, lr}
 801714e:	4604      	mov	r4, r0
 8017150:	2104      	movs	r1, #4
 8017152:	f008 fd4c 	bl	801fbee <_ZdlPvj>
 8017156:	4620      	mov	r0, r4
 8017158:	bd10      	pop	{r4, pc}

0801715a <_ZN8touchgfx8LCD24bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801715a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801715e:	f89d 001c 	ldrb.w	r0, [sp, #28]
 8017162:	9c06      	ldr	r4, [sp, #24]
 8017164:	2800      	cmp	r0, #0
 8017166:	d06e      	beq.n	8017246 <_ZN8touchgfx8LCD24bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xec>
 8017168:	f9b3 5004 	ldrsh.w	r5, [r3, #4]
 801716c:	2d00      	cmp	r5, #0
 801716e:	dd6a      	ble.n	8017246 <_ZN8touchgfx8LCD24bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xec>
 8017170:	f9b3 c006 	ldrsh.w	ip, [r3, #6]
 8017174:	f1bc 0f00 	cmp.w	ip, #0
 8017178:	dd65      	ble.n	8017246 <_ZN8touchgfx8LCD24bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xec>
 801717a:	f9b3 6002 	ldrsh.w	r6, [r3, #2]
 801717e:	28ff      	cmp	r0, #255	; 0xff
 8017180:	f9b3 3000 	ldrsh.w	r3, [r3]
 8017184:	f3c4 2707 	ubfx	r7, r4, #8, #8
 8017188:	fb02 3306 	mla	r3, r2, r6, r3
 801718c:	f3c4 4607 	ubfx	r6, r4, #16, #8
 8017190:	b2e4      	uxtb	r4, r4
 8017192:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8017196:	4419      	add	r1, r3
 8017198:	fb02 f30c 	mul.w	r3, r2, ip
 801719c:	eba2 0205 	sub.w	r2, r2, r5
 80171a0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80171a4:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80171a8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80171ac:	440b      	add	r3, r1
 80171ae:	d03e      	beq.n	801722e <_ZN8touchgfx8LCD24bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xd4>
 80171b0:	fa1f fc80 	uxth.w	ip, r0
 80171b4:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 80171b8:	fb06 f60c 	mul.w	r6, r6, ip
 80171bc:	b280      	uxth	r0, r0
 80171be:	fb07 f70c 	mul.w	r7, r7, ip
 80171c2:	fb04 f40c 	mul.w	r4, r4, ip
 80171c6:	4299      	cmp	r1, r3
 80171c8:	d23d      	bcs.n	8017246 <_ZN8touchgfx8LCD24bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xec>
 80171ca:	eb01 0c05 	add.w	ip, r1, r5
 80171ce:	458c      	cmp	ip, r1
 80171d0:	f101 0e03 	add.w	lr, r1, #3
 80171d4:	d928      	bls.n	8017228 <_ZN8touchgfx8LCD24bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xce>
 80171d6:	f81e 1c03 	ldrb.w	r1, [lr, #-3]
 80171da:	fb11 f100 	smulbb	r1, r1, r0
 80171de:	4421      	add	r1, r4
 80171e0:	b289      	uxth	r1, r1
 80171e2:	f101 0801 	add.w	r8, r1, #1
 80171e6:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 80171ea:	1209      	asrs	r1, r1, #8
 80171ec:	f80e 1c03 	strb.w	r1, [lr, #-3]
 80171f0:	f81e 1c02 	ldrb.w	r1, [lr, #-2]
 80171f4:	fb11 f100 	smulbb	r1, r1, r0
 80171f8:	4439      	add	r1, r7
 80171fa:	b289      	uxth	r1, r1
 80171fc:	f101 0801 	add.w	r8, r1, #1
 8017200:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8017204:	1209      	asrs	r1, r1, #8
 8017206:	f80e 1c02 	strb.w	r1, [lr, #-2]
 801720a:	f81e 1c01 	ldrb.w	r1, [lr, #-1]
 801720e:	fb11 f100 	smulbb	r1, r1, r0
 8017212:	4431      	add	r1, r6
 8017214:	b289      	uxth	r1, r1
 8017216:	f101 0801 	add.w	r8, r1, #1
 801721a:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801721e:	1209      	asrs	r1, r1, #8
 8017220:	f80e 1c01 	strb.w	r1, [lr, #-1]
 8017224:	4671      	mov	r1, lr
 8017226:	e7d2      	b.n	80171ce <_ZN8touchgfx8LCD24bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x74>
 8017228:	4411      	add	r1, r2
 801722a:	e7cc      	b.n	80171c6 <_ZN8touchgfx8LCD24bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6c>
 801722c:	4411      	add	r1, r2
 801722e:	4299      	cmp	r1, r3
 8017230:	d209      	bcs.n	8017246 <_ZN8touchgfx8LCD24bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xec>
 8017232:	1948      	adds	r0, r1, r5
 8017234:	4281      	cmp	r1, r0
 8017236:	d2f9      	bcs.n	801722c <_ZN8touchgfx8LCD24bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xd2>
 8017238:	700c      	strb	r4, [r1, #0]
 801723a:	3103      	adds	r1, #3
 801723c:	f801 7c02 	strb.w	r7, [r1, #-2]
 8017240:	f801 6c01 	strb.w	r6, [r1, #-1]
 8017244:	e7f6      	b.n	8017234 <_ZN8touchgfx8LCD24bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xda>
 8017246:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

0801724c <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801724c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017250:	b093      	sub	sp, #76	; 0x4c
 8017252:	4699      	mov	r9, r3
 8017254:	4605      	mov	r5, r0
 8017256:	460e      	mov	r6, r1
 8017258:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801725c:	4617      	mov	r7, r2
 801725e:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8017260:	9304      	str	r3, [sp, #16]
 8017262:	4b8c      	ldr	r3, [pc, #560]	; (8017494 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x248>)
 8017264:	f9bd 8078 	ldrsh.w	r8, [sp, #120]	; 0x78
 8017268:	681b      	ldr	r3, [r3, #0]
 801726a:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 801726e:	2b02      	cmp	r3, #2
 8017270:	d106      	bne.n	8017280 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x34>
 8017272:	4b89      	ldr	r3, [pc, #548]	; (8017498 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x24c>)
 8017274:	f240 11f7 	movw	r1, #503	; 0x1f7
 8017278:	4a88      	ldr	r2, [pc, #544]	; (801749c <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x250>)
 801727a:	4889      	ldr	r0, [pc, #548]	; (80174a0 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x254>)
 801727c:	f008 feb0 	bl	801ffe0 <__assert_func>
 8017280:	b924      	cbnz	r4, 801728c <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x40>
 8017282:	4b88      	ldr	r3, [pc, #544]	; (80174a4 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x258>)
 8017284:	f44f 71fc 	mov.w	r1, #504	; 0x1f8
 8017288:	4a84      	ldr	r2, [pc, #528]	; (801749c <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x250>)
 801728a:	e7f6      	b.n	801727a <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x2e>
 801728c:	f9b9 3002 	ldrsh.w	r3, [r9, #2]
 8017290:	4649      	mov	r1, r9
 8017292:	f9b9 2000 	ldrsh.w	r2, [r9]
 8017296:	a80c      	add	r0, sp, #48	; 0x30
 8017298:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801729c:	9b04      	ldr	r3, [sp, #16]
 801729e:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 80172a2:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80172a6:	f8ad 8036 	strh.w	r8, [sp, #54]	; 0x36
 80172aa:	f7f5 fba3 	bl	800c9f4 <_ZN8touchgfx4RectaNERKS0_>
 80172ae:	4639      	mov	r1, r7
 80172b0:	a80c      	add	r0, sp, #48	; 0x30
 80172b2:	f7f5 fb9f 	bl	800c9f4 <_ZN8touchgfx4RectaNERKS0_>
 80172b6:	4b7c      	ldr	r3, [pc, #496]	; (80174a8 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x25c>)
 80172b8:	8818      	ldrh	r0, [r3, #0]
 80172ba:	4b7c      	ldr	r3, [pc, #496]	; (80174ac <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x260>)
 80172bc:	fa0f fc80 	sxth.w	ip, r0
 80172c0:	8819      	ldrh	r1, [r3, #0]
 80172c2:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 80172c6:	b20f      	sxth	r7, r1
 80172c8:	2b00      	cmp	r3, #0
 80172ca:	da07      	bge.n	80172dc <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x90>
 80172cc:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 80172d0:	4413      	add	r3, r2
 80172d2:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80172d6:	2300      	movs	r3, #0
 80172d8:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80172dc:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 80172e0:	f9bd e034 	ldrsh.w	lr, [sp, #52]	; 0x34
 80172e4:	ebac 0302 	sub.w	r3, ip, r2
 80172e8:	459e      	cmp	lr, r3
 80172ea:	bfc4      	itt	gt
 80172ec:	1a83      	subgt	r3, r0, r2
 80172ee:	f8ad 3034 	strhgt.w	r3, [sp, #52]	; 0x34
 80172f2:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80172f6:	2b00      	cmp	r3, #0
 80172f8:	da07      	bge.n	801730a <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xbe>
 80172fa:	f8bd c036 	ldrh.w	ip, [sp, #54]	; 0x36
 80172fe:	4463      	add	r3, ip
 8017300:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8017304:	2300      	movs	r3, #0
 8017306:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801730a:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801730e:	f9bd c036 	ldrsh.w	ip, [sp, #54]	; 0x36
 8017312:	1aff      	subs	r7, r7, r3
 8017314:	45bc      	cmp	ip, r7
 8017316:	f8df c19c 	ldr.w	ip, [pc, #412]	; 80174b4 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x268>
 801731a:	bfc8      	it	gt
 801731c:	1acf      	subgt	r7, r1, r3
 801731e:	f89c c000 	ldrb.w	ip, [ip]
 8017322:	bfc8      	it	gt
 8017324:	f8ad 7036 	strhgt.w	r7, [sp, #54]	; 0x36
 8017328:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801732c:	f1bc 0f00 	cmp.w	ip, #0
 8017330:	d174      	bne.n	801741c <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1d0>
 8017332:	4287      	cmp	r7, r0
 8017334:	bf14      	ite	ne
 8017336:	2100      	movne	r1, #0
 8017338:	2101      	moveq	r1, #1
 801733a:	2f00      	cmp	r7, #0
 801733c:	9107      	str	r1, [sp, #28]
 801733e:	dd71      	ble.n	8017424 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1d8>
 8017340:	f9bd 1036 	ldrsh.w	r1, [sp, #54]	; 0x36
 8017344:	2900      	cmp	r1, #0
 8017346:	9103      	str	r1, [sp, #12]
 8017348:	dd6c      	ble.n	8017424 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1d8>
 801734a:	f8b9 1000 	ldrh.w	r1, [r9]
 801734e:	a80e      	add	r0, sp, #56	; 0x38
 8017350:	f8ad 8046 	strh.w	r8, [sp, #70]	; 0x46
 8017354:	f04f 0803 	mov.w	r8, #3
 8017358:	1a52      	subs	r2, r2, r1
 801735a:	a910      	add	r1, sp, #64	; 0x40
 801735c:	f8ad 703c 	strh.w	r7, [sp, #60]	; 0x3c
 8017360:	b212      	sxth	r2, r2
 8017362:	9205      	str	r2, [sp, #20]
 8017364:	f8b9 2002 	ldrh.w	r2, [r9, #2]
 8017368:	f8df 9128 	ldr.w	r9, [pc, #296]	; 8017494 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x248>
 801736c:	1a9b      	subs	r3, r3, r2
 801736e:	b21b      	sxth	r3, r3
 8017370:	9306      	str	r3, [sp, #24]
 8017372:	9b05      	ldr	r3, [sp, #20]
 8017374:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8017378:	9b06      	ldr	r3, [sp, #24]
 801737a:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801737e:	9b03      	ldr	r3, [sp, #12]
 8017380:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8017384:	2300      	movs	r3, #0
 8017386:	9310      	str	r3, [sp, #64]	; 0x40
 8017388:	9b04      	ldr	r3, [sp, #16]
 801738a:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 801738e:	f7fa f97d 	bl	801168c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017392:	a90c      	add	r1, sp, #48	; 0x30
 8017394:	4608      	mov	r0, r1
 8017396:	910b      	str	r1, [sp, #44]	; 0x2c
 8017398:	f7fa f934 	bl	8011604 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801739c:	a810      	add	r0, sp, #64	; 0x40
 801739e:	f7fa f931 	bl	8011604 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80173a2:	4b43      	ldr	r3, [pc, #268]	; (80174b0 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x264>)
 80173a4:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 80173a8:	4630      	mov	r0, r6
 80173aa:	881b      	ldrh	r3, [r3, #0]
 80173ac:	9308      	str	r3, [sp, #32]
 80173ae:	eb0b 034b 	add.w	r3, fp, fp, lsl #1
 80173b2:	b21b      	sxth	r3, r3
 80173b4:	9302      	str	r3, [sp, #8]
 80173b6:	6833      	ldr	r3, [r6, #0]
 80173b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80173ba:	4798      	blx	r3
 80173bc:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 80173c0:	9a02      	ldr	r2, [sp, #8]
 80173c2:	4682      	mov	sl, r0
 80173c4:	f8d9 0000 	ldr.w	r0, [r9]
 80173c8:	fb13 f202 	smulbb	r2, r3, r2
 80173cc:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80173d0:	fb13 2308 	smlabb	r3, r3, r8, r2
 80173d4:	441c      	add	r4, r3
 80173d6:	6803      	ldr	r3, [r0, #0]
 80173d8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80173da:	4798      	blx	r3
 80173dc:	900a      	str	r0, [sp, #40]	; 0x28
 80173de:	f8d9 0000 	ldr.w	r0, [r9]
 80173e2:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 80173e6:	6802      	ldr	r2, [r0, #0]
 80173e8:	9309      	str	r3, [sp, #36]	; 0x24
 80173ea:	6b92      	ldr	r2, [r2, #56]	; 0x38
 80173ec:	f9bd 6032 	ldrsh.w	r6, [sp, #50]	; 0x32
 80173f0:	4790      	blx	r2
 80173f2:	f010 0f01 	tst.w	r0, #1
 80173f6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80173f8:	d01d      	beq.n	8017436 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1ea>
 80173fa:	f8d9 0000 	ldr.w	r0, [r9]
 80173fe:	9a04      	ldr	r2, [sp, #16]
 8017400:	6803      	ldr	r3, [r0, #0]
 8017402:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8017404:	9200      	str	r2, [sp, #0]
 8017406:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8017408:	4623      	mov	r3, r4
 801740a:	c906      	ldmia	r1, {r1, r2}
 801740c:	47b0      	blx	r6
 801740e:	9b05      	ldr	r3, [sp, #20]
 8017410:	80af      	strh	r7, [r5, #4]
 8017412:	802b      	strh	r3, [r5, #0]
 8017414:	9b06      	ldr	r3, [sp, #24]
 8017416:	806b      	strh	r3, [r5, #2]
 8017418:	9b03      	ldr	r3, [sp, #12]
 801741a:	e007      	b.n	801742c <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e0>
 801741c:	f9bd 0036 	ldrsh.w	r0, [sp, #54]	; 0x36
 8017420:	4288      	cmp	r0, r1
 8017422:	e787      	b.n	8017334 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe8>
 8017424:	2300      	movs	r3, #0
 8017426:	802b      	strh	r3, [r5, #0]
 8017428:	806b      	strh	r3, [r5, #2]
 801742a:	80ab      	strh	r3, [r5, #4]
 801742c:	4628      	mov	r0, r5
 801742e:	80eb      	strh	r3, [r5, #6]
 8017430:	b013      	add	sp, #76	; 0x4c
 8017432:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017436:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8017438:	fb0a f606 	mul.w	r6, sl, r6
 801743c:	fb12 6608 	smlabb	r6, r2, r8, r6
 8017440:	9a07      	ldr	r2, [sp, #28]
 8017442:	441e      	add	r6, r3
 8017444:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	; 0x3e
 8017448:	b16a      	cbz	r2, 8017466 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21a>
 801744a:	9a08      	ldr	r2, [sp, #32]
 801744c:	4593      	cmp	fp, r2
 801744e:	d10a      	bne.n	8017466 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21a>
 8017450:	f8d9 0000 	ldr.w	r0, [r9]
 8017454:	fb03 f30a 	mul.w	r3, r3, sl
 8017458:	4621      	mov	r1, r4
 801745a:	6802      	ldr	r2, [r0, #0]
 801745c:	f8d2 9034 	ldr.w	r9, [r2, #52]	; 0x34
 8017460:	4632      	mov	r2, r6
 8017462:	47c8      	blx	r9
 8017464:	e7d3      	b.n	801740e <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1c2>
 8017466:	9a02      	ldr	r2, [sp, #8]
 8017468:	f8df b028 	ldr.w	fp, [pc, #40]	; 8017494 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x248>
 801746c:	fb02 4803 	mla	r8, r2, r3, r4
 8017470:	4544      	cmp	r4, r8
 8017472:	d2cc      	bcs.n	801740e <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1c2>
 8017474:	f8db 0000 	ldr.w	r0, [fp]
 8017478:	4621      	mov	r1, r4
 801747a:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 801747e:	6802      	ldr	r2, [r0, #0]
 8017480:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8017484:	f8d2 9034 	ldr.w	r9, [r2, #52]	; 0x34
 8017488:	4632      	mov	r2, r6
 801748a:	47c8      	blx	r9
 801748c:	9b02      	ldr	r3, [sp, #8]
 801748e:	4456      	add	r6, sl
 8017490:	441c      	add	r4, r3
 8017492:	e7ed      	b.n	8017470 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8017494:	2400e0b4 	.word	0x2400e0b4
 8017498:	08025125 	.word	0x08025125
 801749c:	0802587d 	.word	0x0802587d
 80174a0:	080250a5 	.word	0x080250a5
 80174a4:	080250d7 	.word	0x080250d7
 80174a8:	2400e0a8 	.word	0x2400e0a8
 80174ac:	2400e0aa 	.word	0x2400e0aa
 80174b0:	2400e0ae 	.word	0x2400e0ae
 80174b4:	2400e0ac 	.word	0x2400e0ac

080174b8 <_ZN8touchgfx8LCD24bppC1Ev>:
 80174b8:	2200      	movs	r2, #0
 80174ba:	490c      	ldr	r1, [pc, #48]	; (80174ec <_ZN8touchgfx8LCD24bppC1Ev+0x34>)
 80174bc:	6042      	str	r2, [r0, #4]
 80174be:	6001      	str	r1, [r0, #0]
 80174c0:	e9c0 2202 	strd	r2, r2, [r0, #8]
 80174c4:	e9c0 2204 	strd	r2, r2, [r0, #16]
 80174c8:	e9c0 2206 	strd	r2, r2, [r0, #24]
 80174cc:	e9c0 2208 	strd	r2, r2, [r0, #32]
 80174d0:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 80174d4:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 80174d8:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 80174dc:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 80174e0:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 80174e4:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 80174e8:	4770      	bx	lr
 80174ea:	bf00      	nop
 80174ec:	080254c0 	.word	0x080254c0

080174f0 <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 80174f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80174f4:	b091      	sub	sp, #68	; 0x44
 80174f6:	880d      	ldrh	r5, [r1, #0]
 80174f8:	4607      	mov	r7, r0
 80174fa:	4688      	mov	r8, r1
 80174fc:	4616      	mov	r6, r2
 80174fe:	f89d 9068 	ldrb.w	r9, [sp, #104]	; 0x68
 8017502:	b12d      	cbz	r5, 8017510 <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x20>
 8017504:	4b69      	ldr	r3, [pc, #420]	; (80176ac <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1bc>)
 8017506:	215e      	movs	r1, #94	; 0x5e
 8017508:	4a69      	ldr	r2, [pc, #420]	; (80176b0 <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c0>)
 801750a:	486a      	ldr	r0, [pc, #424]	; (80176b4 <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801750c:	f008 fd68 	bl	801ffe0 <__assert_func>
 8017510:	6810      	ldr	r0, [r2, #0]
 8017512:	ac0c      	add	r4, sp, #48	; 0x30
 8017514:	6851      	ldr	r1, [r2, #4]
 8017516:	f8df a1a0 	ldr.w	sl, [pc, #416]	; 80176b8 <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>
 801751a:	f8df b1a0 	ldr.w	fp, [pc, #416]	; 80176bc <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1cc>
 801751e:	c403      	stmia	r4!, {r0, r1}
 8017520:	6818      	ldr	r0, [r3, #0]
 8017522:	ac0e      	add	r4, sp, #56	; 0x38
 8017524:	6859      	ldr	r1, [r3, #4]
 8017526:	c403      	stmia	r4!, {r0, r1}
 8017528:	a80c      	add	r0, sp, #48	; 0x30
 801752a:	f7fa f86b 	bl	8011604 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801752e:	4631      	mov	r1, r6
 8017530:	a80e      	add	r0, sp, #56	; 0x38
 8017532:	f7fa f8ab 	bl	801168c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017536:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801753a:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801753e:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8017542:	f8da 0000 	ldr.w	r0, [sl]
 8017546:	fb11 2103 	smlabb	r1, r1, r3, r2
 801754a:	f9bd 403c 	ldrsh.w	r4, [sp, #60]	; 0x3c
 801754e:	f9bd 603e 	ldrsh.w	r6, [sp, #62]	; 0x3e
 8017552:	440f      	add	r7, r1
 8017554:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 8017558:	440a      	add	r2, r1
 801755a:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801755e:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8017562:	4413      	add	r3, r2
 8017564:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8017568:	6803      	ldr	r3, [r0, #0]
 801756a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801756c:	4798      	blx	r3
 801756e:	f010 0f80 	tst.w	r0, #128	; 0x80
 8017572:	f8da 0000 	ldr.w	r0, [sl]
 8017576:	d01e      	beq.n	80175b6 <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xc6>
 8017578:	6801      	ldr	r1, [r0, #0]
 801757a:	2201      	movs	r2, #1
 801757c:	9509      	str	r5, [sp, #36]	; 0x24
 801757e:	250b      	movs	r5, #11
 8017580:	b2a4      	uxth	r4, r4
 8017582:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8017586:	b2b6      	uxth	r6, r6
 8017588:	e9cd 5207 	strd	r5, r2, [sp, #28]
 801758c:	f8bb 5000 	ldrh.w	r5, [fp]
 8017590:	f8cd 9010 	str.w	r9, [sp, #16]
 8017594:	9602      	str	r6, [sp, #8]
 8017596:	9401      	str	r4, [sp, #4]
 8017598:	e9cd 2505 	strd	r2, r5, [sp, #20]
 801759c:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 80175a0:	9203      	str	r2, [sp, #12]
 80175a2:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 80175a6:	9200      	str	r2, [sp, #0]
 80175a8:	4642      	mov	r2, r8
 80175aa:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 80175ac:	4639      	mov	r1, r7
 80175ae:	47a0      	blx	r4
 80175b0:	b011      	add	sp, #68	; 0x44
 80175b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80175b6:	6803      	ldr	r3, [r0, #0]
 80175b8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80175ba:	4798      	blx	r3
 80175bc:	f8bb 5000 	ldrh.w	r5, [fp]
 80175c0:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 80175c4:	f04f 0e04 	mov.w	lr, #4
 80175c8:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 80175cc:	436e      	muls	r6, r5
 80175ce:	fb05 2303 	mla	r3, r5, r3, r2
 80175d2:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80175d6:	1b2d      	subs	r5, r5, r4
 80175d8:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80175dc:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80175e0:	4418      	add	r0, r3
 80175e2:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80175e6:	1982      	adds	r2, r0, r6
 80175e8:	1b1b      	subs	r3, r3, r4
 80175ea:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80175ee:	930b      	str	r3, [sp, #44]	; 0x2c
 80175f0:	4290      	cmp	r0, r2
 80175f2:	d254      	bcs.n	801769e <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ae>
 80175f4:	eb00 0a04 	add.w	sl, r0, r4
 80175f8:	4550      	cmp	r0, sl
 80175fa:	d24c      	bcs.n	8017696 <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1a6>
 80175fc:	f817 1b01 	ldrb.w	r1, [r7], #1
 8017600:	fb1e e101 	smlabb	r1, lr, r1, lr
 8017604:	eb08 0c01 	add.w	ip, r8, r1
 8017608:	f89c 3003 	ldrb.w	r3, [ip, #3]
 801760c:	b173      	cbz	r3, 801762c <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13c>
 801760e:	2bff      	cmp	r3, #255	; 0xff
 8017610:	f818 b001 	ldrb.w	fp, [r8, r1]
 8017614:	d10c      	bne.n	8017630 <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x140>
 8017616:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801761a:	d109      	bne.n	8017630 <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x140>
 801761c:	f880 b000 	strb.w	fp, [r0]
 8017620:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8017624:	7043      	strb	r3, [r0, #1]
 8017626:	f89c 3002 	ldrb.w	r3, [ip, #2]
 801762a:	7083      	strb	r3, [r0, #2]
 801762c:	3003      	adds	r0, #3
 801762e:	e7e3      	b.n	80175f8 <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x108>
 8017630:	fb09 f103 	mul.w	r1, r9, r3
 8017634:	1c4b      	adds	r3, r1, #1
 8017636:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801763a:	7801      	ldrb	r1, [r0, #0]
 801763c:	121b      	asrs	r3, r3, #8
 801763e:	b29e      	uxth	r6, r3
 8017640:	43db      	mvns	r3, r3
 8017642:	fb1b fb06 	smulbb	fp, fp, r6
 8017646:	b2db      	uxtb	r3, r3
 8017648:	fb01 b103 	mla	r1, r1, r3, fp
 801764c:	b289      	uxth	r1, r1
 801764e:	f101 0b01 	add.w	fp, r1, #1
 8017652:	eb0b 2111 	add.w	r1, fp, r1, lsr #8
 8017656:	f890 b001 	ldrb.w	fp, [r0, #1]
 801765a:	fb1b fb03 	smulbb	fp, fp, r3
 801765e:	1209      	asrs	r1, r1, #8
 8017660:	7001      	strb	r1, [r0, #0]
 8017662:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8017666:	fb01 b106 	mla	r1, r1, r6, fp
 801766a:	b289      	uxth	r1, r1
 801766c:	f101 0b01 	add.w	fp, r1, #1
 8017670:	eb0b 2111 	add.w	r1, fp, r1, lsr #8
 8017674:	1209      	asrs	r1, r1, #8
 8017676:	7041      	strb	r1, [r0, #1]
 8017678:	f89c 1002 	ldrb.w	r1, [ip, #2]
 801767c:	f890 c002 	ldrb.w	ip, [r0, #2]
 8017680:	fb1c f303 	smulbb	r3, ip, r3
 8017684:	fb01 3606 	mla	r6, r1, r6, r3
 8017688:	b2b6      	uxth	r6, r6
 801768a:	1c73      	adds	r3, r6, #1
 801768c:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8017690:	1236      	asrs	r6, r6, #8
 8017692:	7086      	strb	r6, [r0, #2]
 8017694:	e7ca      	b.n	801762c <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13c>
 8017696:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017698:	4428      	add	r0, r5
 801769a:	441f      	add	r7, r3
 801769c:	e7a8      	b.n	80175f0 <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x100>
 801769e:	4b06      	ldr	r3, [pc, #24]	; (80176b8 <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 80176a0:	6818      	ldr	r0, [r3, #0]
 80176a2:	6803      	ldr	r3, [r0, #0]
 80176a4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80176a6:	4798      	blx	r3
 80176a8:	e782      	b.n	80175b0 <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xc0>
 80176aa:	bf00      	nop
 80176ac:	08025009 	.word	0x08025009
 80176b0:	0802569f 	.word	0x0802569f
 80176b4:	080250a5 	.word	0x080250a5
 80176b8:	2400e0b4 	.word	0x2400e0b4
 80176bc:	2400e0ae 	.word	0x2400e0ae

080176c0 <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 80176c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80176c4:	f8b1 9000 	ldrh.w	r9, [r1]
 80176c8:	b091      	sub	sp, #68	; 0x44
 80176ca:	4604      	mov	r4, r0
 80176cc:	460e      	mov	r6, r1
 80176ce:	f1b9 0f01 	cmp.w	r9, #1
 80176d2:	4690      	mov	r8, r2
 80176d4:	f89d 7068 	ldrb.w	r7, [sp, #104]	; 0x68
 80176d8:	d005      	beq.n	80176e6 <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x26>
 80176da:	4b69      	ldr	r3, [pc, #420]	; (8017880 <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1c0>)
 80176dc:	21ac      	movs	r1, #172	; 0xac
 80176de:	4a69      	ldr	r2, [pc, #420]	; (8017884 <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 80176e0:	4869      	ldr	r0, [pc, #420]	; (8017888 <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 80176e2:	f008 fc7d 	bl	801ffe0 <__assert_func>
 80176e6:	6810      	ldr	r0, [r2, #0]
 80176e8:	ad0c      	add	r5, sp, #48	; 0x30
 80176ea:	6851      	ldr	r1, [r2, #4]
 80176ec:	f8df a19c 	ldr.w	sl, [pc, #412]	; 801788c <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1cc>
 80176f0:	f8df b19c 	ldr.w	fp, [pc, #412]	; 8017890 <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d0>
 80176f4:	c503      	stmia	r5!, {r0, r1}
 80176f6:	6818      	ldr	r0, [r3, #0]
 80176f8:	ad0e      	add	r5, sp, #56	; 0x38
 80176fa:	6859      	ldr	r1, [r3, #4]
 80176fc:	c503      	stmia	r5!, {r0, r1}
 80176fe:	a80c      	add	r0, sp, #48	; 0x30
 8017700:	f7f9 ff80 	bl	8011604 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017704:	4641      	mov	r1, r8
 8017706:	a80e      	add	r0, sp, #56	; 0x38
 8017708:	f7f9 ffc0 	bl	801168c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801770c:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8017710:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8017714:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8017718:	f8da 0000 	ldr.w	r0, [sl]
 801771c:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017720:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8017724:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 8017728:	440c      	add	r4, r1
 801772a:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801772e:	440a      	add	r2, r1
 8017730:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 8017734:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8017738:	4413      	add	r3, r2
 801773a:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801773e:	6803      	ldr	r3, [r0, #0]
 8017740:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017742:	4798      	blx	r3
 8017744:	f010 0f80 	tst.w	r0, #128	; 0x80
 8017748:	f8da 0000 	ldr.w	r0, [sl]
 801774c:	d020      	beq.n	8017790 <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xd0>
 801774e:	2200      	movs	r2, #0
 8017750:	f04f 0c0b 	mov.w	ip, #11
 8017754:	6801      	ldr	r1, [r0, #0]
 8017756:	b2ad      	uxth	r5, r5
 8017758:	f8cd c01c 	str.w	ip, [sp, #28]
 801775c:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8017760:	e9cd 9208 	strd	r9, r2, [sp, #32]
 8017764:	f8bb c000 	ldrh.w	ip, [fp]
 8017768:	9704      	str	r7, [sp, #16]
 801776a:	9502      	str	r5, [sp, #8]
 801776c:	e9cd 2c05 	strd	r2, ip, [sp, #20]
 8017770:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 8017774:	9203      	str	r2, [sp, #12]
 8017776:	fa1f f288 	uxth.w	r2, r8
 801777a:	9201      	str	r2, [sp, #4]
 801777c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8017780:	9200      	str	r2, [sp, #0]
 8017782:	4632      	mov	r2, r6
 8017784:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 8017786:	4621      	mov	r1, r4
 8017788:	47a8      	blx	r5
 801778a:	b011      	add	sp, #68	; 0x44
 801778c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017790:	6803      	ldr	r3, [r0, #0]
 8017792:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017794:	4798      	blx	r3
 8017796:	f8bb 2000 	ldrh.w	r2, [fp]
 801779a:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801779e:	f04f 0e03 	mov.w	lr, #3
 80177a2:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 80177a6:	4355      	muls	r5, r2
 80177a8:	fa1f fc87 	uxth.w	ip, r7
 80177ac:	fb02 1303 	mla	r3, r2, r3, r1
 80177b0:	eba2 0208 	sub.w	r2, r2, r8
 80177b4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80177b8:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80177bc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80177c0:	4418      	add	r0, r3
 80177c2:	920b      	str	r2, [sp, #44]	; 0x2c
 80177c4:	1943      	adds	r3, r0, r5
 80177c6:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 80177ca:	f1c7 05ff 	rsb	r5, r7, #255	; 0xff
 80177ce:	eba2 0208 	sub.w	r2, r2, r8
 80177d2:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80177d6:	b2ad      	uxth	r5, r5
 80177d8:	4298      	cmp	r0, r3
 80177da:	d24a      	bcs.n	8017872 <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b2>
 80177dc:	eb00 0908 	add.w	r9, r0, r8
 80177e0:	4621      	mov	r1, r4
 80177e2:	4548      	cmp	r0, r9
 80177e4:	460c      	mov	r4, r1
 80177e6:	d240      	bcs.n	801786a <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 80177e8:	f04f 0a04 	mov.w	sl, #4
 80177ec:	7824      	ldrb	r4, [r4, #0]
 80177ee:	2fff      	cmp	r7, #255	; 0xff
 80177f0:	f101 0101 	add.w	r1, r1, #1
 80177f4:	fb1e a404 	smlabb	r4, lr, r4, sl
 80177f8:	eb06 0a04 	add.w	sl, r6, r4
 80177fc:	f816 b004 	ldrb.w	fp, [r6, r4]
 8017800:	d02b      	beq.n	801785a <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x19a>
 8017802:	7804      	ldrb	r4, [r0, #0]
 8017804:	fb14 f405 	smulbb	r4, r4, r5
 8017808:	fb0b 440c 	mla	r4, fp, ip, r4
 801780c:	b2a4      	uxth	r4, r4
 801780e:	f104 0b01 	add.w	fp, r4, #1
 8017812:	eb0b 2414 	add.w	r4, fp, r4, lsr #8
 8017816:	f890 b001 	ldrb.w	fp, [r0, #1]
 801781a:	fb1b fb05 	smulbb	fp, fp, r5
 801781e:	1224      	asrs	r4, r4, #8
 8017820:	7004      	strb	r4, [r0, #0]
 8017822:	f89a 4001 	ldrb.w	r4, [sl, #1]
 8017826:	fb04 b40c 	mla	r4, r4, ip, fp
 801782a:	b2a4      	uxth	r4, r4
 801782c:	f104 0b01 	add.w	fp, r4, #1
 8017830:	eb0b 2414 	add.w	r4, fp, r4, lsr #8
 8017834:	1224      	asrs	r4, r4, #8
 8017836:	7044      	strb	r4, [r0, #1]
 8017838:	f89a 4002 	ldrb.w	r4, [sl, #2]
 801783c:	f890 a002 	ldrb.w	sl, [r0, #2]
 8017840:	fb1a fa05 	smulbb	sl, sl, r5
 8017844:	fb04 a40c 	mla	r4, r4, ip, sl
 8017848:	b2a4      	uxth	r4, r4
 801784a:	f104 0a01 	add.w	sl, r4, #1
 801784e:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8017852:	1224      	asrs	r4, r4, #8
 8017854:	7084      	strb	r4, [r0, #2]
 8017856:	3003      	adds	r0, #3
 8017858:	e7c3      	b.n	80177e2 <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x122>
 801785a:	f880 b000 	strb.w	fp, [r0]
 801785e:	f89a 4001 	ldrb.w	r4, [sl, #1]
 8017862:	7044      	strb	r4, [r0, #1]
 8017864:	f89a 4002 	ldrb.w	r4, [sl, #2]
 8017868:	e7f4      	b.n	8017854 <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x194>
 801786a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801786c:	4420      	add	r0, r4
 801786e:	188c      	adds	r4, r1, r2
 8017870:	e7b2      	b.n	80177d8 <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x118>
 8017872:	4b06      	ldr	r3, [pc, #24]	; (801788c <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1cc>)
 8017874:	6818      	ldr	r0, [r3, #0]
 8017876:	6803      	ldr	r3, [r0, #0]
 8017878:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801787a:	4798      	blx	r3
 801787c:	e785      	b.n	801778a <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xca>
 801787e:	bf00      	nop
 8017880:	08024f88 	.word	0x08024f88
 8017884:	08025592 	.word	0x08025592
 8017888:	080250a5 	.word	0x080250a5
 801788c:	2400e0b4 	.word	0x2400e0b4
 8017890:	2400e0ae 	.word	0x2400e0ae

08017894 <_ZN8touchgfx8LCD24bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8017894:	b570      	push	{r4, r5, r6, lr}
 8017896:	780d      	ldrb	r5, [r1, #0]
 8017898:	f89d 4010 	ldrb.w	r4, [sp, #16]
 801789c:	2d01      	cmp	r5, #1
 801789e:	d00d      	beq.n	80178bc <_ZN8touchgfx8LCD24bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x28>
 80178a0:	d307      	bcc.n	80178b2 <_ZN8touchgfx8LCD24bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1e>
 80178a2:	2d02      	cmp	r5, #2
 80178a4:	d10f      	bne.n	80178c6 <_ZN8touchgfx8LCD24bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x32>
 80178a6:	4b08      	ldr	r3, [pc, #32]	; (80178c8 <_ZN8touchgfx8LCD24bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>)
 80178a8:	2151      	movs	r1, #81	; 0x51
 80178aa:	4a08      	ldr	r2, [pc, #32]	; (80178cc <_ZN8touchgfx8LCD24bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x38>)
 80178ac:	4808      	ldr	r0, [pc, #32]	; (80178d0 <_ZN8touchgfx8LCD24bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x3c>)
 80178ae:	f008 fb97 	bl	801ffe0 <__assert_func>
 80178b2:	9404      	str	r4, [sp, #16]
 80178b4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80178b8:	f7ff be1a 	b.w	80174f0 <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 80178bc:	9404      	str	r4, [sp, #16]
 80178be:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80178c2:	f7ff befd 	b.w	80176c0 <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 80178c6:	bd70      	pop	{r4, r5, r6, pc}
 80178c8:	08024f3d 	.word	0x08024f3d
 80178cc:	08025510 	.word	0x08025510
 80178d0:	080250a5 	.word	0x080250a5

080178d4 <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h>:
 80178d4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80178d8:	4605      	mov	r5, r0
 80178da:	b08f      	sub	sp, #60	; 0x3c
 80178dc:	460c      	mov	r4, r1
 80178de:	461f      	mov	r7, r3
 80178e0:	2b00      	cmp	r3, #0
 80178e2:	d052      	beq.n	801798a <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0xb6>
 80178e4:	6808      	ldr	r0, [r1, #0]
 80178e6:	ab0a      	add	r3, sp, #40	; 0x28
 80178e8:	6849      	ldr	r1, [r1, #4]
 80178ea:	f8df 81c8 	ldr.w	r8, [pc, #456]	; 8017ab4 <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0x1e0>
 80178ee:	f8df 91c8 	ldr.w	r9, [pc, #456]	; 8017ab8 <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0x1e4>
 80178f2:	c303      	stmia	r3!, {r0, r1}
 80178f4:	6810      	ldr	r0, [r2, #0]
 80178f6:	ab0c      	add	r3, sp, #48	; 0x30
 80178f8:	6851      	ldr	r1, [r2, #4]
 80178fa:	c303      	stmia	r3!, {r0, r1}
 80178fc:	a80a      	add	r0, sp, #40	; 0x28
 80178fe:	f7f9 fe81 	bl	8011604 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017902:	4621      	mov	r1, r4
 8017904:	a80c      	add	r0, sp, #48	; 0x30
 8017906:	f7f9 fec1 	bl	801168c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801790a:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801790e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8017912:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8017916:	f8d8 0000 	ldr.w	r0, [r8]
 801791a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801791e:	f9bd 6034 	ldrsh.w	r6, [sp, #52]	; 0x34
 8017922:	f9bd 4036 	ldrsh.w	r4, [sp, #54]	; 0x36
 8017926:	eb05 0541 	add.w	r5, r5, r1, lsl #1
 801792a:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801792e:	440a      	add	r2, r1
 8017930:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8017934:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 8017938:	4413      	add	r3, r2
 801793a:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801793e:	6803      	ldr	r3, [r0, #0]
 8017940:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017942:	4798      	blx	r3
 8017944:	2fff      	cmp	r7, #255	; 0xff
 8017946:	d023      	beq.n	8017990 <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0xbc>
 8017948:	f010 0f04 	tst.w	r0, #4
 801794c:	f8d8 0000 	ldr.w	r0, [r8]
 8017950:	d021      	beq.n	8017996 <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0xc2>
 8017952:	2100      	movs	r1, #0
 8017954:	f04f 0e01 	mov.w	lr, #1
 8017958:	f8d0 c000 	ldr.w	ip, [r0]
 801795c:	b2a4      	uxth	r4, r4
 801795e:	9106      	str	r1, [sp, #24]
 8017960:	b2b6      	uxth	r6, r6
 8017962:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8017966:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801796a:	e9cd e107 	strd	lr, r1, [sp, #28]
 801796e:	f8b9 e000 	ldrh.w	lr, [r9]
 8017972:	9703      	str	r7, [sp, #12]
 8017974:	9401      	str	r4, [sp, #4]
 8017976:	9600      	str	r6, [sp, #0]
 8017978:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801797c:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8017980:	9102      	str	r1, [sp, #8]
 8017982:	4629      	mov	r1, r5
 8017984:	f8dc 4040 	ldr.w	r4, [ip, #64]	; 0x40
 8017988:	47a0      	blx	r4
 801798a:	b00f      	add	sp, #60	; 0x3c
 801798c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8017990:	f010 0f01 	tst.w	r0, #1
 8017994:	e7da      	b.n	801794c <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0x78>
 8017996:	6803      	ldr	r3, [r0, #0]
 8017998:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801799a:	4798      	blx	r3
 801799c:	f8b9 1000 	ldrh.w	r1, [r9]
 80179a0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80179a4:	eb06 0c46 	add.w	ip, r6, r6, lsl #1
 80179a8:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 80179ac:	434c      	muls	r4, r1
 80179ae:	2fff      	cmp	r7, #255	; 0xff
 80179b0:	fb01 2303 	mla	r3, r1, r3, r2
 80179b4:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80179b8:	eba1 0106 	sub.w	r1, r1, r6
 80179bc:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80179c0:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80179c4:	4418      	add	r0, r3
 80179c6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80179ca:	eba3 0606 	sub.w	r6, r3, r6
 80179ce:	4404      	add	r4, r0
 80179d0:	ea4f 0646 	mov.w	r6, r6, lsl #1
 80179d4:	d04a      	beq.n	8017a6c <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0x198>
 80179d6:	43fa      	mvns	r2, r7
 80179d8:	b2bb      	uxth	r3, r7
 80179da:	b2d7      	uxtb	r7, r2
 80179dc:	42a0      	cmp	r0, r4
 80179de:	d263      	bcs.n	8017aa8 <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0x1d4>
 80179e0:	eb00 0e0c 	add.w	lr, r0, ip
 80179e4:	4586      	cmp	lr, r0
 80179e6:	f100 0803 	add.w	r8, r0, #3
 80179ea:	d93a      	bls.n	8017a62 <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0x18e>
 80179ec:	f835 2b02 	ldrh.w	r2, [r5], #2
 80179f0:	f818 9c03 	ldrb.w	r9, [r8, #-3]
 80179f4:	00d0      	lsls	r0, r2, #3
 80179f6:	fb19 f907 	smulbb	r9, r9, r7
 80179fa:	b2c0      	uxtb	r0, r0
 80179fc:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8017a00:	fb00 9003 	mla	r0, r0, r3, r9
 8017a04:	b280      	uxth	r0, r0
 8017a06:	f100 0901 	add.w	r9, r0, #1
 8017a0a:	eb09 2010 	add.w	r0, r9, r0, lsr #8
 8017a0e:	f818 9c02 	ldrb.w	r9, [r8, #-2]
 8017a12:	fb19 f907 	smulbb	r9, r9, r7
 8017a16:	1200      	asrs	r0, r0, #8
 8017a18:	f808 0c03 	strb.w	r0, [r8, #-3]
 8017a1c:	10d0      	asrs	r0, r2, #3
 8017a1e:	1212      	asrs	r2, r2, #8
 8017a20:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8017a24:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8017a28:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8017a2c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8017a30:	fb00 9003 	mla	r0, r0, r3, r9
 8017a34:	b280      	uxth	r0, r0
 8017a36:	f100 0901 	add.w	r9, r0, #1
 8017a3a:	eb09 2010 	add.w	r0, r9, r0, lsr #8
 8017a3e:	1200      	asrs	r0, r0, #8
 8017a40:	f808 0c02 	strb.w	r0, [r8, #-2]
 8017a44:	f818 0c01 	ldrb.w	r0, [r8, #-1]
 8017a48:	fb10 f007 	smulbb	r0, r0, r7
 8017a4c:	fb02 0203 	mla	r2, r2, r3, r0
 8017a50:	b292      	uxth	r2, r2
 8017a52:	1c50      	adds	r0, r2, #1
 8017a54:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8017a58:	4640      	mov	r0, r8
 8017a5a:	1212      	asrs	r2, r2, #8
 8017a5c:	f808 2c01 	strb.w	r2, [r8, #-1]
 8017a60:	e7c0      	b.n	80179e4 <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0x110>
 8017a62:	4408      	add	r0, r1
 8017a64:	4435      	add	r5, r6
 8017a66:	e7b9      	b.n	80179dc <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0x108>
 8017a68:	4408      	add	r0, r1
 8017a6a:	4435      	add	r5, r6
 8017a6c:	42a0      	cmp	r0, r4
 8017a6e:	d21b      	bcs.n	8017aa8 <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0x1d4>
 8017a70:	eb00 070c 	add.w	r7, r0, ip
 8017a74:	42b8      	cmp	r0, r7
 8017a76:	d2f7      	bcs.n	8017a68 <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0x194>
 8017a78:	f835 3b02 	ldrh.w	r3, [r5], #2
 8017a7c:	3003      	adds	r0, #3
 8017a7e:	00da      	lsls	r2, r3, #3
 8017a80:	b2d2      	uxtb	r2, r2
 8017a82:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8017a86:	f800 2c03 	strb.w	r2, [r0, #-3]
 8017a8a:	10da      	asrs	r2, r3, #3
 8017a8c:	121b      	asrs	r3, r3, #8
 8017a8e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8017a92:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8017a96:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8017a9a:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 8017a9e:	f800 2c02 	strb.w	r2, [r0, #-2]
 8017aa2:	f800 3c01 	strb.w	r3, [r0, #-1]
 8017aa6:	e7e5      	b.n	8017a74 <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0x1a0>
 8017aa8:	4b02      	ldr	r3, [pc, #8]	; (8017ab4 <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0x1e0>)
 8017aaa:	6818      	ldr	r0, [r3, #0]
 8017aac:	6803      	ldr	r3, [r0, #0]
 8017aae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017ab0:	4798      	blx	r3
 8017ab2:	e76a      	b.n	801798a <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0xb6>
 8017ab4:	2400e0b4 	.word	0x2400e0b4
 8017ab8:	2400e0ae 	.word	0x2400e0ae

08017abc <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8017abc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017ac0:	b08a      	sub	sp, #40	; 0x28
 8017ac2:	460d      	mov	r5, r1
 8017ac4:	4604      	mov	r4, r0
 8017ac6:	461e      	mov	r6, r3
 8017ac8:	6808      	ldr	r0, [r1, #0]
 8017aca:	ab06      	add	r3, sp, #24
 8017acc:	6849      	ldr	r1, [r1, #4]
 8017ace:	4f5d      	ldr	r7, [pc, #372]	; (8017c44 <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x188>)
 8017ad0:	c303      	stmia	r3!, {r0, r1}
 8017ad2:	6810      	ldr	r0, [r2, #0]
 8017ad4:	ab08      	add	r3, sp, #32
 8017ad6:	6851      	ldr	r1, [r2, #4]
 8017ad8:	c303      	stmia	r3!, {r0, r1}
 8017ada:	a806      	add	r0, sp, #24
 8017adc:	f7f9 fd92 	bl	8011604 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017ae0:	4629      	mov	r1, r5
 8017ae2:	a808      	add	r0, sp, #32
 8017ae4:	f7f9 fdd2 	bl	801168c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017ae8:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8017aec:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8017af0:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8017af4:	6838      	ldr	r0, [r7, #0]
 8017af6:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017afa:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8017afe:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 8017b02:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8017b06:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8017b0a:	440a      	add	r2, r1
 8017b0c:	f8ad 2020 	strh.w	r2, [sp, #32]
 8017b10:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8017b14:	4413      	add	r3, r2
 8017b16:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8017b1a:	6803      	ldr	r3, [r0, #0]
 8017b1c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017b1e:	4798      	blx	r3
 8017b20:	2eff      	cmp	r6, #255	; 0xff
 8017b22:	d119      	bne.n	8017b58 <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9c>
 8017b24:	f010 0f20 	tst.w	r0, #32
 8017b28:	6838      	ldr	r0, [r7, #0]
 8017b2a:	d018      	beq.n	8017b5e <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa2>
 8017b2c:	b2ad      	uxth	r5, r5
 8017b2e:	2700      	movs	r7, #0
 8017b30:	6801      	ldr	r1, [r0, #0]
 8017b32:	9501      	str	r5, [sp, #4]
 8017b34:	fa1f f588 	uxth.w	r5, r8
 8017b38:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8017b3c:	9500      	str	r5, [sp, #0]
 8017b3e:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8017b42:	e9cd 6703 	strd	r6, r7, [sp, #12]
 8017b46:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8017b4a:	9602      	str	r6, [sp, #8]
 8017b4c:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 8017b4e:	4621      	mov	r1, r4
 8017b50:	47a8      	blx	r5
 8017b52:	b00a      	add	sp, #40	; 0x28
 8017b54:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017b58:	f010 0f40 	tst.w	r0, #64	; 0x40
 8017b5c:	e7e4      	b.n	8017b28 <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6c>
 8017b5e:	6803      	ldr	r3, [r0, #0]
 8017b60:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017b62:	4798      	blx	r3
 8017b64:	4b38      	ldr	r3, [pc, #224]	; (8017c48 <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x18c>)
 8017b66:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8017b6a:	f8b3 c000 	ldrh.w	ip, [r3]
 8017b6e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8017b72:	fb0c f505 	mul.w	r5, ip, r5
 8017b76:	f9bd e01c 	ldrsh.w	lr, [sp, #28]
 8017b7a:	fb0c 2303 	mla	r3, ip, r3, r2
 8017b7e:	ebac 0c08 	sub.w	ip, ip, r8
 8017b82:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8017b86:	ebae 0e08 	sub.w	lr, lr, r8
 8017b8a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8017b8e:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8017b92:	4418      	add	r0, r3
 8017b94:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8017b98:	eb08 0348 	add.w	r3, r8, r8, lsl #1
 8017b9c:	4405      	add	r5, r0
 8017b9e:	42a8      	cmp	r0, r5
 8017ba0:	d24a      	bcs.n	8017c38 <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x17c>
 8017ba2:	eb00 0803 	add.w	r8, r0, r3
 8017ba6:	4540      	cmp	r0, r8
 8017ba8:	d243      	bcs.n	8017c32 <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x176>
 8017baa:	78e2      	ldrb	r2, [r4, #3]
 8017bac:	b15a      	cbz	r2, 8017bc6 <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10a>
 8017bae:	2aff      	cmp	r2, #255	; 0xff
 8017bb0:	f894 9000 	ldrb.w	r9, [r4]
 8017bb4:	d10a      	bne.n	8017bcc <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x110>
 8017bb6:	2eff      	cmp	r6, #255	; 0xff
 8017bb8:	d108      	bne.n	8017bcc <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x110>
 8017bba:	f880 9000 	strb.w	r9, [r0]
 8017bbe:	7862      	ldrb	r2, [r4, #1]
 8017bc0:	7042      	strb	r2, [r0, #1]
 8017bc2:	78a2      	ldrb	r2, [r4, #2]
 8017bc4:	7082      	strb	r2, [r0, #2]
 8017bc6:	3003      	adds	r0, #3
 8017bc8:	3404      	adds	r4, #4
 8017bca:	e7ec      	b.n	8017ba6 <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xea>
 8017bcc:	4372      	muls	r2, r6
 8017bce:	1c51      	adds	r1, r2, #1
 8017bd0:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8017bd4:	1209      	asrs	r1, r1, #8
 8017bd6:	fa1f fa81 	uxth.w	sl, r1
 8017bda:	43c9      	mvns	r1, r1
 8017bdc:	fb19 f90a 	smulbb	r9, r9, sl
 8017be0:	b2ca      	uxtb	r2, r1
 8017be2:	7801      	ldrb	r1, [r0, #0]
 8017be4:	fb01 9902 	mla	r9, r1, r2, r9
 8017be8:	fa1f f989 	uxth.w	r9, r9
 8017bec:	f109 0101 	add.w	r1, r9, #1
 8017bf0:	eb01 2919 	add.w	r9, r1, r9, lsr #8
 8017bf4:	ea4f 2929 	mov.w	r9, r9, asr #8
 8017bf8:	f880 9000 	strb.w	r9, [r0]
 8017bfc:	f890 9001 	ldrb.w	r9, [r0, #1]
 8017c00:	7861      	ldrb	r1, [r4, #1]
 8017c02:	fb19 f902 	smulbb	r9, r9, r2
 8017c06:	fb01 910a 	mla	r1, r1, sl, r9
 8017c0a:	b289      	uxth	r1, r1
 8017c0c:	f101 0901 	add.w	r9, r1, #1
 8017c10:	eb09 2111 	add.w	r1, r9, r1, lsr #8
 8017c14:	1209      	asrs	r1, r1, #8
 8017c16:	7041      	strb	r1, [r0, #1]
 8017c18:	7881      	ldrb	r1, [r0, #2]
 8017c1a:	f894 9002 	ldrb.w	r9, [r4, #2]
 8017c1e:	fb11 f202 	smulbb	r2, r1, r2
 8017c22:	fb09 220a 	mla	r2, r9, sl, r2
 8017c26:	b292      	uxth	r2, r2
 8017c28:	1c51      	adds	r1, r2, #1
 8017c2a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8017c2e:	1212      	asrs	r2, r2, #8
 8017c30:	e7c8      	b.n	8017bc4 <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x108>
 8017c32:	4460      	add	r0, ip
 8017c34:	4474      	add	r4, lr
 8017c36:	e7b2      	b.n	8017b9e <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xe2>
 8017c38:	6838      	ldr	r0, [r7, #0]
 8017c3a:	6803      	ldr	r3, [r0, #0]
 8017c3c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017c3e:	4798      	blx	r3
 8017c40:	e787      	b.n	8017b52 <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x96>
 8017c42:	bf00      	nop
 8017c44:	2400e0b4 	.word	0x2400e0b4
 8017c48:	2400e0ae 	.word	0x2400e0ae

08017c4c <_ZN8touchgfx8LCD24bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8017c4c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8017c50:	b085      	sub	sp, #20
 8017c52:	4606      	mov	r6, r0
 8017c54:	460c      	mov	r4, r1
 8017c56:	4691      	mov	r9, r2
 8017c58:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8017c5c:	4698      	mov	r8, r3
 8017c5e:	b31d      	cbz	r5, 8017ca8 <_ZN8touchgfx8LCD24bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 8017c60:	4608      	mov	r0, r1
 8017c62:	f7fd f935 	bl	8014ed0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8017c66:	4607      	mov	r7, r0
 8017c68:	4620      	mov	r0, r4
 8017c6a:	f7fd f975 	bl	8014f58 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8017c6e:	f8ad 000e 	strh.w	r0, [sp, #14]
 8017c72:	4620      	mov	r0, r4
 8017c74:	f8ad 9008 	strh.w	r9, [sp, #8]
 8017c78:	f8ad 800a 	strh.w	r8, [sp, #10]
 8017c7c:	f8ad 700c 	strh.w	r7, [sp, #12]
 8017c80:	f7fd facc 	bl	801521c <_ZNK8touchgfx6Bitmap9getFormatEv>
 8017c84:	280b      	cmp	r0, #11
 8017c86:	d838      	bhi.n	8017cfa <_ZN8touchgfx8LCD24bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xae>
 8017c88:	e8df f000 	tbb	[pc, r0]
 8017c8c:	37062920 	.word	0x37062920
 8017c90:	37373737 	.word	0x37373737
 8017c94:	11373737 	.word	0x11373737
 8017c98:	4620      	mov	r0, r4
 8017c9a:	f7fd fa35 	bl	8015108 <_ZNK8touchgfx6Bitmap7getDataEv>
 8017c9e:	462b      	mov	r3, r5
 8017ca0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8017ca2:	a902      	add	r1, sp, #8
 8017ca4:	f7ff ff0a 	bl	8017abc <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8017ca8:	b005      	add	sp, #20
 8017caa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8017cae:	4620      	mov	r0, r4
 8017cb0:	f7fd fa2a 	bl	8015108 <_ZNK8touchgfx6Bitmap7getDataEv>
 8017cb4:	4606      	mov	r6, r0
 8017cb6:	4620      	mov	r0, r4
 8017cb8:	f7fd fa58 	bl	801516c <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8017cbc:	9500      	str	r5, [sp, #0]
 8017cbe:	4601      	mov	r1, r0
 8017cc0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017cc2:	aa02      	add	r2, sp, #8
 8017cc4:	4630      	mov	r0, r6
 8017cc6:	f7ff fde5 	bl	8017894 <_ZN8touchgfx8LCD24bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8017cca:	e7ed      	b.n	8017ca8 <_ZN8touchgfx8LCD24bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 8017ccc:	4620      	mov	r0, r4
 8017cce:	f7fd fa1b 	bl	8015108 <_ZNK8touchgfx6Bitmap7getDataEv>
 8017cd2:	462b      	mov	r3, r5
 8017cd4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8017cd6:	a902      	add	r1, sp, #8
 8017cd8:	f7ff fdfc 	bl	80178d4 <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h>
 8017cdc:	e7e4      	b.n	8017ca8 <_ZN8touchgfx8LCD24bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 8017cde:	6833      	ldr	r3, [r6, #0]
 8017ce0:	4620      	mov	r0, r4
 8017ce2:	68df      	ldr	r7, [r3, #12]
 8017ce4:	f7fd fa10 	bl	8015108 <_ZNK8touchgfx6Bitmap7getDataEv>
 8017ce8:	2300      	movs	r3, #0
 8017cea:	4601      	mov	r1, r0
 8017cec:	aa02      	add	r2, sp, #8
 8017cee:	4630      	mov	r0, r6
 8017cf0:	e9cd 5300 	strd	r5, r3, [sp]
 8017cf4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017cf6:	47b8      	blx	r7
 8017cf8:	e7d6      	b.n	8017ca8 <_ZN8touchgfx8LCD24bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 8017cfa:	4b03      	ldr	r3, [pc, #12]	; (8017d08 <_ZN8touchgfx8LCD24bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xbc>)
 8017cfc:	2145      	movs	r1, #69	; 0x45
 8017cfe:	4a03      	ldr	r2, [pc, #12]	; (8017d0c <_ZN8touchgfx8LCD24bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>)
 8017d00:	4803      	ldr	r0, [pc, #12]	; (8017d10 <_ZN8touchgfx8LCD24bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc4>)
 8017d02:	f008 f96d 	bl	801ffe0 <__assert_func>
 8017d06:	bf00      	nop
 8017d08:	08024fd6 	.word	0x08024fd6
 8017d0c:	0802561b 	.word	0x0802561b
 8017d10:	080250a5 	.word	0x080250a5

08017d14 <_ZN8touchgfx8LCD24bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8017d14:	b570      	push	{r4, r5, r6, lr}
 8017d16:	9c04      	ldr	r4, [sp, #16]
 8017d18:	4605      	mov	r5, r0
 8017d1a:	4608      	mov	r0, r1
 8017d1c:	4619      	mov	r1, r3
 8017d1e:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8017d22:	2a0d      	cmp	r2, #13
 8017d24:	d826      	bhi.n	8017d74 <_ZN8touchgfx8LCD24bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x60>
 8017d26:	e8df f002 	tbb	[pc, r2]
 8017d2a:	1107      	.short	0x1107
 8017d2c:	1e1e1e0c 	.word	0x1e1e1e0c
 8017d30:	1e1e1e1e 	.word	0x1e1e1e1e
 8017d34:	1e1e1e1e 	.word	0x1e1e1e1e
 8017d38:	4622      	mov	r2, r4
 8017d3a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017d3e:	f7ff bdc9 	b.w	80178d4 <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h>
 8017d42:	4622      	mov	r2, r4
 8017d44:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017d48:	f7ff beb8 	b.w	8017abc <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8017d4c:	682a      	ldr	r2, [r5, #0]
 8017d4e:	2600      	movs	r6, #0
 8017d50:	e9cd 3604 	strd	r3, r6, [sp, #16]
 8017d54:	68d6      	ldr	r6, [r2, #12]
 8017d56:	4623      	mov	r3, r4
 8017d58:	460a      	mov	r2, r1
 8017d5a:	4601      	mov	r1, r0
 8017d5c:	46b4      	mov	ip, r6
 8017d5e:	4628      	mov	r0, r5
 8017d60:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017d64:	4760      	bx	ip
 8017d66:	4b04      	ldr	r3, [pc, #16]	; (8017d78 <_ZN8touchgfx8LCD24bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x64>)
 8017d68:	f44f 71f2 	mov.w	r1, #484	; 0x1e4
 8017d6c:	4a03      	ldr	r2, [pc, #12]	; (8017d7c <_ZN8touchgfx8LCD24bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x68>)
 8017d6e:	4804      	ldr	r0, [pc, #16]	; (8017d80 <_ZN8touchgfx8LCD24bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x6c>)
 8017d70:	f008 f936 	bl	801ffe0 <__assert_func>
 8017d74:	bd70      	pop	{r4, r5, r6, pc}
 8017d76:	bf00      	nop
 8017d78:	0802526a 	.word	0x0802526a
 8017d7c:	08025996 	.word	0x08025996
 8017d80:	080250a5 	.word	0x080250a5

08017d84 <_ZN8touchgfx8LCD24bpp9nextPixelEbNS_12TextRotationE>:
 8017d84:	b158      	cbz	r0, 8017d9e <_ZN8touchgfx8LCD24bpp9nextPixelEbNS_12TextRotationE+0x1a>
 8017d86:	2902      	cmp	r1, #2
 8017d88:	d00f      	beq.n	8017daa <_ZN8touchgfx8LCD24bpp9nextPixelEbNS_12TextRotationE+0x26>
 8017d8a:	2903      	cmp	r1, #3
 8017d8c:	d010      	beq.n	8017db0 <_ZN8touchgfx8LCD24bpp9nextPixelEbNS_12TextRotationE+0x2c>
 8017d8e:	2901      	cmp	r1, #1
 8017d90:	d101      	bne.n	8017d96 <_ZN8touchgfx8LCD24bpp9nextPixelEbNS_12TextRotationE+0x12>
 8017d92:	2001      	movs	r0, #1
 8017d94:	4770      	bx	lr
 8017d96:	4b08      	ldr	r3, [pc, #32]	; (8017db8 <_ZN8touchgfx8LCD24bpp9nextPixelEbNS_12TextRotationE+0x34>)
 8017d98:	8819      	ldrh	r1, [r3, #0]
 8017d9a:	4248      	negs	r0, r1
 8017d9c:	4770      	bx	lr
 8017d9e:	2902      	cmp	r1, #2
 8017da0:	d006      	beq.n	8017db0 <_ZN8touchgfx8LCD24bpp9nextPixelEbNS_12TextRotationE+0x2c>
 8017da2:	2903      	cmp	r1, #3
 8017da4:	d0f7      	beq.n	8017d96 <_ZN8touchgfx8LCD24bpp9nextPixelEbNS_12TextRotationE+0x12>
 8017da6:	2901      	cmp	r1, #1
 8017da8:	d1f3      	bne.n	8017d92 <_ZN8touchgfx8LCD24bpp9nextPixelEbNS_12TextRotationE+0xe>
 8017daa:	4b03      	ldr	r3, [pc, #12]	; (8017db8 <_ZN8touchgfx8LCD24bpp9nextPixelEbNS_12TextRotationE+0x34>)
 8017dac:	8818      	ldrh	r0, [r3, #0]
 8017dae:	4770      	bx	lr
 8017db0:	f04f 30ff 	mov.w	r0, #4294967295
 8017db4:	4770      	bx	lr
 8017db6:	bf00      	nop
 8017db8:	2400e0ae 	.word	0x2400e0ae

08017dbc <_ZN8touchgfx8LCD24bpp8nextLineEbNS_12TextRotationE>:
 8017dbc:	b170      	cbz	r0, 8017ddc <_ZN8touchgfx8LCD24bpp8nextLineEbNS_12TextRotationE+0x20>
 8017dbe:	2902      	cmp	r1, #2
 8017dc0:	d012      	beq.n	8017de8 <_ZN8touchgfx8LCD24bpp8nextLineEbNS_12TextRotationE+0x2c>
 8017dc2:	2903      	cmp	r1, #3
 8017dc4:	d006      	beq.n	8017dd4 <_ZN8touchgfx8LCD24bpp8nextLineEbNS_12TextRotationE+0x18>
 8017dc6:	2901      	cmp	r1, #1
 8017dc8:	d001      	beq.n	8017dce <_ZN8touchgfx8LCD24bpp8nextLineEbNS_12TextRotationE+0x12>
 8017dca:	2001      	movs	r0, #1
 8017dcc:	4770      	bx	lr
 8017dce:	4b08      	ldr	r3, [pc, #32]	; (8017df0 <_ZN8touchgfx8LCD24bpp8nextLineEbNS_12TextRotationE+0x34>)
 8017dd0:	8818      	ldrh	r0, [r3, #0]
 8017dd2:	4770      	bx	lr
 8017dd4:	4b06      	ldr	r3, [pc, #24]	; (8017df0 <_ZN8touchgfx8LCD24bpp8nextLineEbNS_12TextRotationE+0x34>)
 8017dd6:	8818      	ldrh	r0, [r3, #0]
 8017dd8:	4240      	negs	r0, r0
 8017dda:	4770      	bx	lr
 8017ddc:	2902      	cmp	r1, #2
 8017dde:	d0f9      	beq.n	8017dd4 <_ZN8touchgfx8LCD24bpp8nextLineEbNS_12TextRotationE+0x18>
 8017de0:	2903      	cmp	r1, #3
 8017de2:	d0f2      	beq.n	8017dca <_ZN8touchgfx8LCD24bpp8nextLineEbNS_12TextRotationE+0xe>
 8017de4:	2901      	cmp	r1, #1
 8017de6:	d1f2      	bne.n	8017dce <_ZN8touchgfx8LCD24bpp8nextLineEbNS_12TextRotationE+0x12>
 8017de8:	f04f 30ff 	mov.w	r0, #4294967295
 8017dec:	4770      	bx	lr
 8017dee:	bf00      	nop
 8017df0:	2400e0ae 	.word	0x2400e0ae

08017df4 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8017df4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017df8:	b097      	sub	sp, #92	; 0x5c
 8017dfa:	910b      	str	r1, [sp, #44]	; 0x2c
 8017dfc:	a912      	add	r1, sp, #72	; 0x48
 8017dfe:	f9bd 6080 	ldrsh.w	r6, [sp, #128]	; 0x80
 8017e02:	f8bd 7088 	ldrh.w	r7, [sp, #136]	; 0x88
 8017e06:	f8bd 408c 	ldrh.w	r4, [sp, #140]	; 0x8c
 8017e0a:	f89d 80a4 	ldrb.w	r8, [sp, #164]	; 0xa4
 8017e0e:	f89d 90ac 	ldrb.w	r9, [sp, #172]	; 0xac
 8017e12:	e881 000c 	stmia.w	r1, {r2, r3}
 8017e16:	f9bd 3084 	ldrsh.w	r3, [sp, #132]	; 0x84
 8017e1a:	930a      	str	r3, [sp, #40]	; 0x28
 8017e1c:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 8017e20:	e9dd 2124 	ldrd	r2, r1, [sp, #144]	; 0x90
 8017e24:	9311      	str	r3, [sp, #68]	; 0x44
 8017e26:	f89d 30a8 	ldrb.w	r3, [sp, #168]	; 0xa8
 8017e2a:	798d      	ldrb	r5, [r1, #6]
 8017e2c:	930c      	str	r3, [sp, #48]	; 0x30
 8017e2e:	7b4b      	ldrb	r3, [r1, #13]
 8017e30:	0158      	lsls	r0, r3, #5
 8017e32:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8017e36:	4328      	orrs	r0, r5
 8017e38:	9009      	str	r0, [sp, #36]	; 0x24
 8017e3a:	f000 817d 	beq.w	8018138 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x344>
 8017e3e:	011b      	lsls	r3, r3, #4
 8017e40:	79c8      	ldrb	r0, [r1, #7]
 8017e42:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8017e46:	4303      	orrs	r3, r0
 8017e48:	930e      	str	r3, [sp, #56]	; 0x38
 8017e4a:	f000 8175 	beq.w	8018138 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x344>
 8017e4e:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8017e52:	b29b      	uxth	r3, r3
 8017e54:	2f00      	cmp	r7, #0
 8017e56:	f000 8117 	beq.w	8018088 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x294>
 8017e5a:	1aff      	subs	r7, r7, r3
 8017e5c:	b2bf      	uxth	r7, r7
 8017e5e:	043b      	lsls	r3, r7, #16
 8017e60:	d502      	bpl.n	8017e68 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x74>
 8017e62:	1bf6      	subs	r6, r6, r7
 8017e64:	2700      	movs	r7, #0
 8017e66:	b236      	sxth	r6, r6
 8017e68:	f9b2 1000 	ldrsh.w	r1, [r2]
 8017e6c:	a812      	add	r0, sp, #72	; 0x48
 8017e6e:	f8b2 a002 	ldrh.w	sl, [r2, #2]
 8017e72:	428e      	cmp	r6, r1
 8017e74:	b28b      	uxth	r3, r1
 8017e76:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 8017e7a:	bfbf      	itttt	lt
 8017e7c:	18ff      	addlt	r7, r7, r3
 8017e7e:	1bbe      	sublt	r6, r7, r6
 8017e80:	b2b7      	uxthlt	r7, r6
 8017e82:	460e      	movlt	r6, r1
 8017e84:	8891      	ldrh	r1, [r2, #4]
 8017e86:	440b      	add	r3, r1
 8017e88:	4631      	mov	r1, r6
 8017e8a:	b21b      	sxth	r3, r3
 8017e8c:	9310      	str	r3, [sp, #64]	; 0x40
 8017e8e:	88d3      	ldrh	r3, [r2, #6]
 8017e90:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8017e92:	449a      	add	sl, r3
 8017e94:	fa0f f38a 	sxth.w	r3, sl
 8017e98:	f8bd a038 	ldrh.w	sl, [sp, #56]	; 0x38
 8017e9c:	930f      	str	r3, [sp, #60]	; 0x3c
 8017e9e:	4bb6      	ldr	r3, [pc, #728]	; (8018178 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x384>)
 8017ea0:	f893 b000 	ldrb.w	fp, [r3]
 8017ea4:	f10b 3cff 	add.w	ip, fp, #4294967295
 8017ea8:	f1dc 0300 	rsbs	r3, ip, #0
 8017eac:	eb43 030c 	adc.w	r3, r3, ip
 8017eb0:	930d      	str	r3, [sp, #52]	; 0x34
 8017eb2:	464b      	mov	r3, r9
 8017eb4:	f7f9 fa2a 	bl	801130c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8017eb8:	4631      	mov	r1, r6
 8017eba:	f8ad 0054 	strh.w	r0, [sp, #84]	; 0x54
 8017ebe:	464b      	mov	r3, r9
 8017ec0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8017ec2:	a812      	add	r0, sp, #72	; 0x48
 8017ec4:	f7f9 fa3a 	bl	801133c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8017ec8:	a916      	add	r1, sp, #88	; 0x58
 8017eca:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8017ece:	a815      	add	r0, sp, #84	; 0x54
 8017ed0:	f7f9 fb56 	bl	8011580 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8017ed4:	f1b9 0f00 	cmp.w	r9, #0
 8017ed8:	f040 80d9 	bne.w	801808e <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x29a>
 8017edc:	f1bb 0f01 	cmp.w	fp, #1
 8017ee0:	f040 80dd 	bne.w	801809e <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2aa>
 8017ee4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017ee6:	b153      	cbz	r3, 8017efe <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x10a>
 8017ee8:	2508      	movs	r5, #8
 8017eea:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8017eec:	fb95 f3f8 	sdiv	r3, r5, r8
 8017ef0:	1e5d      	subs	r5, r3, #1
 8017ef2:	4415      	add	r5, r2
 8017ef4:	fb95 f5f3 	sdiv	r5, r5, r3
 8017ef8:	fb15 f503 	smulbb	r5, r5, r3
 8017efc:	b2ad      	uxth	r5, r5
 8017efe:	b907      	cbnz	r7, 8017f02 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x10e>
 8017f00:	b16c      	cbz	r4, 8017f1e <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x12a>
 8017f02:	fb04 7305 	mla	r3, r4, r5, r7
 8017f06:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8017f08:	ebaa 0a04 	sub.w	sl, sl, r4
 8017f0c:	fb08 f303 	mul.w	r3, r8, r3
 8017f10:	fa1f fa8a 	uxth.w	sl, sl
 8017f14:	eb02 02d3 	add.w	r2, r2, r3, lsr #3
 8017f18:	f003 0407 	and.w	r4, r3, #7
 8017f1c:	9226      	str	r2, [sp, #152]	; 0x98
 8017f1e:	4649      	mov	r1, r9
 8017f20:	980d      	ldr	r0, [sp, #52]	; 0x34
 8017f22:	f7ff ff2f 	bl	8017d84 <_ZN8touchgfx8LCD24bpp9nextPixelEbNS_12TextRotationE>
 8017f26:	4649      	mov	r1, r9
 8017f28:	4683      	mov	fp, r0
 8017f2a:	980d      	ldr	r0, [sp, #52]	; 0x34
 8017f2c:	f7ff ff46 	bl	8017dbc <_ZN8touchgfx8LCD24bpp8nextLineEbNS_12TextRotationE>
 8017f30:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8017f32:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8017f34:	4681      	mov	r9, r0
 8017f36:	1a9b      	subs	r3, r3, r2
 8017f38:	459a      	cmp	sl, r3
 8017f3a:	bfa8      	it	ge
 8017f3c:	469a      	movge	sl, r3
 8017f3e:	f1ba 0f00 	cmp.w	sl, #0
 8017f42:	f340 80f9 	ble.w	8018138 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x344>
 8017f46:	1bf6      	subs	r6, r6, r7
 8017f48:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017f4a:	1b9e      	subs	r6, r3, r6
 8017f4c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017f4e:	429e      	cmp	r6, r3
 8017f50:	bfd4      	ite	le
 8017f52:	ebc7 0706 	rsble	r7, r7, r6
 8017f56:	ebc7 0703 	rsbgt	r7, r7, r3
 8017f5a:	2f00      	cmp	r7, #0
 8017f5c:	f340 80ec 	ble.w	8018138 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x344>
 8017f60:	1bed      	subs	r5, r5, r7
 8017f62:	fb08 f305 	mul.w	r3, r8, r5
 8017f66:	930d      	str	r3, [sp, #52]	; 0x34
 8017f68:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017f6a:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8017f6e:	930e      	str	r3, [sp, #56]	; 0x38
 8017f70:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017f72:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8017f76:	930f      	str	r3, [sp, #60]	; 0x3c
 8017f78:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017f7a:	b2db      	uxtb	r3, r3
 8017f7c:	9310      	str	r3, [sp, #64]	; 0x40
 8017f7e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017f80:	2b00      	cmp	r3, #0
 8017f82:	f040 80de 	bne.w	8018142 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x34e>
 8017f86:	4b7d      	ldr	r3, [pc, #500]	; (801817c <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x388>)
 8017f88:	6818      	ldr	r0, [r3, #0]
 8017f8a:	6803      	ldr	r3, [r0, #0]
 8017f8c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017f8e:	4798      	blx	r3
 8017f90:	2301      	movs	r3, #1
 8017f92:	4a7b      	ldr	r2, [pc, #492]	; (8018180 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x38c>)
 8017f94:	eb0b 064b 	add.w	r6, fp, fp, lsl #1
 8017f98:	fb07 9b1b 	mls	fp, r7, fp, r9
 8017f9c:	fa03 f308 	lsl.w	r3, r3, r8
 8017fa0:	8811      	ldrh	r1, [r2, #0]
 8017fa2:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 8017fa6:	eb0b 0b4b 	add.w	fp, fp, fp, lsl #1
 8017faa:	3b01      	subs	r3, #1
 8017fac:	fb06 bb07 	mla	fp, r6, r7, fp
 8017fb0:	b2db      	uxtb	r3, r3
 8017fb2:	930a      	str	r3, [sp, #40]	; 0x28
 8017fb4:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8017fb8:	fb01 2303 	mla	r3, r1, r3, r2
 8017fbc:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8017fc0:	18c3      	adds	r3, r0, r3
 8017fc2:	9309      	str	r3, [sp, #36]	; 0x24
 8017fc4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8017fc6:	781a      	ldrb	r2, [r3, #0]
 8017fc8:	4122      	asrs	r2, r4
 8017fca:	b2d2      	uxtb	r2, r2
 8017fcc:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8017fd0:	f0c0 80d8 	bcc.w	8018184 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 8017fd4:	46be      	mov	lr, r7
 8017fd6:	9909      	ldr	r1, [sp, #36]	; 0x24
 8017fd8:	f11e 3eff 	adds.w	lr, lr, #4294967295
 8017fdc:	f0c0 80ba 	bcc.w	8018154 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x360>
 8017fe0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017fe2:	4013      	ands	r3, r2
 8017fe4:	d041      	beq.n	801806a <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x276>
 8017fe6:	20ff      	movs	r0, #255	; 0xff
 8017fe8:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8017fea:	fb90 f5f5 	sdiv	r5, r0, r5
 8017fee:	436b      	muls	r3, r5
 8017ff0:	2bfe      	cmp	r3, #254	; 0xfe
 8017ff2:	dd03      	ble.n	8017ffc <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x208>
 8017ff4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8017ff6:	4285      	cmp	r5, r0
 8017ff8:	f000 80a5 	beq.w	8018146 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x352>
 8017ffc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8017ffe:	9810      	ldr	r0, [sp, #64]	; 0x40
 8018000:	fb15 f303 	smulbb	r3, r5, r3
 8018004:	b29b      	uxth	r3, r3
 8018006:	1c5d      	adds	r5, r3, #1
 8018008:	eb05 2313 	add.w	r3, r5, r3, lsr #8
 801800c:	780d      	ldrb	r5, [r1, #0]
 801800e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018012:	fa1f fc83 	uxth.w	ip, r3
 8018016:	43db      	mvns	r3, r3
 8018018:	fb10 f90c 	smulbb	r9, r0, ip
 801801c:	b2db      	uxtb	r3, r3
 801801e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8018020:	fb05 9503 	mla	r5, r5, r3, r9
 8018024:	b2ad      	uxth	r5, r5
 8018026:	f105 0901 	add.w	r9, r5, #1
 801802a:	eb09 2515 	add.w	r5, r9, r5, lsr #8
 801802e:	fb10 f90c 	smulbb	r9, r0, ip
 8018032:	980e      	ldr	r0, [sp, #56]	; 0x38
 8018034:	122d      	asrs	r5, r5, #8
 8018036:	fb10 fc0c 	smulbb	ip, r0, ip
 801803a:	700d      	strb	r5, [r1, #0]
 801803c:	784d      	ldrb	r5, [r1, #1]
 801803e:	fb05 9503 	mla	r5, r5, r3, r9
 8018042:	b2ad      	uxth	r5, r5
 8018044:	f105 0901 	add.w	r9, r5, #1
 8018048:	eb09 2515 	add.w	r5, r9, r5, lsr #8
 801804c:	122d      	asrs	r5, r5, #8
 801804e:	704d      	strb	r5, [r1, #1]
 8018050:	788d      	ldrb	r5, [r1, #2]
 8018052:	fb05 cc03 	mla	ip, r5, r3, ip
 8018056:	fa1f fc8c 	uxth.w	ip, ip
 801805a:	f10c 0301 	add.w	r3, ip, #1
 801805e:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8018062:	ea4f 2c2c 	mov.w	ip, ip, asr #8
 8018066:	f881 c002 	strb.w	ip, [r1, #2]
 801806a:	4444      	add	r4, r8
 801806c:	4431      	add	r1, r6
 801806e:	b2a4      	uxth	r4, r4
 8018070:	2c07      	cmp	r4, #7
 8018072:	bf89      	itett	hi
 8018074:	9b26      	ldrhi	r3, [sp, #152]	; 0x98
 8018076:	fa42 f208 	asrls.w	r2, r2, r8
 801807a:	2400      	movhi	r4, #0
 801807c:	785a      	ldrbhi	r2, [r3, #1]
 801807e:	bf8a      	itet	hi
 8018080:	3301      	addhi	r3, #1
 8018082:	b2d2      	uxtbls	r2, r2
 8018084:	9326      	strhi	r3, [sp, #152]	; 0x98
 8018086:	e7a7      	b.n	8017fd8 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e4>
 8018088:	441e      	add	r6, r3
 801808a:	b236      	sxth	r6, r6
 801808c:	e6ec      	b.n	8017e68 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x74>
 801808e:	f1b9 0f01 	cmp.w	r9, #1
 8018092:	f47f af27 	bne.w	8017ee4 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8018096:	f1bb 0f01 	cmp.w	fp, #1
 801809a:	f47f af23 	bne.w	8017ee4 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 801809e:	f8df b0dc 	ldr.w	fp, [pc, #220]	; 801817c <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x388>
 80180a2:	f8db 0000 	ldr.w	r0, [fp]
 80180a6:	6803      	ldr	r3, [r0, #0]
 80180a8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80180aa:	4798      	blx	r3
 80180ac:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 80180b0:	465a      	mov	r2, fp
 80180b2:	d006      	beq.n	80180c2 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 80180b4:	f1b8 0f04 	cmp.w	r8, #4
 80180b8:	d141      	bne.n	801813e <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x34a>
 80180ba:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80180bc:	3300      	adds	r3, #0
 80180be:	bf18      	it	ne
 80180c0:	2301      	movne	r3, #1
 80180c2:	0580      	lsls	r0, r0, #22
 80180c4:	d567      	bpl.n	8018196 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a2>
 80180c6:	f1b8 0f08 	cmp.w	r8, #8
 80180ca:	d164      	bne.n	8018196 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a2>
 80180cc:	2b00      	cmp	r3, #0
 80180ce:	bf0c      	ite	eq
 80180d0:	f44f 7100 	moveq.w	r1, #512	; 0x200
 80180d4:	f44f 7180 	movne.w	r1, #256	; 0x100
 80180d8:	2f00      	cmp	r7, #0
 80180da:	f47f af03 	bne.w	8017ee4 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 80180de:	2c00      	cmp	r4, #0
 80180e0:	f47f af00 	bne.w	8017ee4 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 80180e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80180e6:	9810      	ldr	r0, [sp, #64]	; 0x40
 80180e8:	18f3      	adds	r3, r6, r3
 80180ea:	4283      	cmp	r3, r0
 80180ec:	f73f aefa 	bgt.w	8017ee4 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 80180f0:	980a      	ldr	r0, [sp, #40]	; 0x28
 80180f2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80180f4:	4403      	add	r3, r0
 80180f6:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80180f8:	4283      	cmp	r3, r0
 80180fa:	f73f aef3 	bgt.w	8017ee4 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 80180fe:	f1b8 0f08 	cmp.w	r8, #8
 8018102:	6810      	ldr	r0, [r2, #0]
 8018104:	f04f 0600 	mov.w	r6, #0
 8018108:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 801810c:	bf18      	it	ne
 801810e:	3501      	addne	r5, #1
 8018110:	6804      	ldr	r4, [r0, #0]
 8018112:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 8018116:	bf18      	it	ne
 8018118:	f025 0501 	bicne.w	r5, r5, #1
 801811c:	e9cd 1605 	strd	r1, r6, [sp, #20]
 8018120:	990c      	ldr	r1, [sp, #48]	; 0x30
 8018122:	bf18      	it	ne
 8018124:	b2ad      	uxthne	r5, r5
 8018126:	9104      	str	r1, [sp, #16]
 8018128:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801812a:	e9cd 5a00 	strd	r5, sl, [sp]
 801812e:	e9cd 5102 	strd	r5, r1, [sp, #8]
 8018132:	9926      	ldr	r1, [sp, #152]	; 0x98
 8018134:	6d64      	ldr	r4, [r4, #84]	; 0x54
 8018136:	47a0      	blx	r4
 8018138:	b017      	add	sp, #92	; 0x5c
 801813a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801813e:	2300      	movs	r3, #0
 8018140:	e7bf      	b.n	80180c2 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 8018142:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8018144:	e724      	b.n	8017f90 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x19c>
 8018146:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018148:	700b      	strb	r3, [r1, #0]
 801814a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801814c:	704b      	strb	r3, [r1, #1]
 801814e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018150:	708b      	strb	r3, [r1, #2]
 8018152:	e78a      	b.n	801806a <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x276>
 8018154:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018156:	b153      	cbz	r3, 801816e <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37a>
 8018158:	441c      	add	r4, r3
 801815a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801815c:	b2a4      	uxth	r4, r4
 801815e:	eb03 03d4 	add.w	r3, r3, r4, lsr #3
 8018162:	f004 0407 	and.w	r4, r4, #7
 8018166:	781a      	ldrb	r2, [r3, #0]
 8018168:	9326      	str	r3, [sp, #152]	; 0x98
 801816a:	4122      	asrs	r2, r4
 801816c:	b2d2      	uxtb	r2, r2
 801816e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018170:	445b      	add	r3, fp
 8018172:	9309      	str	r3, [sp, #36]	; 0x24
 8018174:	e72a      	b.n	8017fcc <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1d8>
 8018176:	bf00      	nop
 8018178:	2400e0ac 	.word	0x2400e0ac
 801817c:	2400e0b4 	.word	0x2400e0b4
 8018180:	2400e0ae 	.word	0x2400e0ae
 8018184:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018186:	2b00      	cmp	r3, #0
 8018188:	d1d6      	bne.n	8018138 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x344>
 801818a:	4b06      	ldr	r3, [pc, #24]	; (80181a4 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>)
 801818c:	6818      	ldr	r0, [r3, #0]
 801818e:	6803      	ldr	r3, [r0, #0]
 8018190:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018192:	4798      	blx	r3
 8018194:	e7d0      	b.n	8018138 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x344>
 8018196:	2b00      	cmp	r3, #0
 8018198:	f43f aea4 	beq.w	8017ee4 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 801819c:	f44f 7180 	mov.w	r1, #256	; 0x100
 80181a0:	e79a      	b.n	80180d8 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e4>
 80181a2:	bf00      	nop
 80181a4:	2400e0b4 	.word	0x2400e0b4

080181a8 <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 80181a8:	b538      	push	{r3, r4, r5, lr}
 80181aa:	4c15      	ldr	r4, [pc, #84]	; (8018200 <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 80181ac:	4605      	mov	r5, r0
 80181ae:	7823      	ldrb	r3, [r4, #0]
 80181b0:	f3bf 8f5b 	dmb	ish
 80181b4:	07da      	lsls	r2, r3, #31
 80181b6:	d40b      	bmi.n	80181d0 <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 80181b8:	4620      	mov	r0, r4
 80181ba:	f007 fd1a 	bl	801fbf2 <__cxa_guard_acquire>
 80181be:	b138      	cbz	r0, 80181d0 <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 80181c0:	4620      	mov	r0, r4
 80181c2:	f007 fd22 	bl	801fc0a <__cxa_guard_release>
 80181c6:	4a0f      	ldr	r2, [pc, #60]	; (8018204 <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 80181c8:	490f      	ldr	r1, [pc, #60]	; (8018208 <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 80181ca:	4810      	ldr	r0, [pc, #64]	; (801820c <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 80181cc:	f007 fd0a 	bl	801fbe4 <__aeabi_atexit>
 80181d0:	4c0f      	ldr	r4, [pc, #60]	; (8018210 <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 80181d2:	7823      	ldrb	r3, [r4, #0]
 80181d4:	f3bf 8f5b 	dmb	ish
 80181d8:	07db      	lsls	r3, r3, #31
 80181da:	d40b      	bmi.n	80181f4 <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 80181dc:	4620      	mov	r0, r4
 80181de:	f007 fd08 	bl	801fbf2 <__cxa_guard_acquire>
 80181e2:	b138      	cbz	r0, 80181f4 <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 80181e4:	4620      	mov	r0, r4
 80181e6:	f007 fd10 	bl	801fc0a <__cxa_guard_release>
 80181ea:	4a06      	ldr	r2, [pc, #24]	; (8018204 <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 80181ec:	4909      	ldr	r1, [pc, #36]	; (8018214 <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 80181ee:	480a      	ldr	r0, [pc, #40]	; (8018218 <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 80181f0:	f007 fcf8 	bl	801fbe4 <__aeabi_atexit>
 80181f4:	4b05      	ldr	r3, [pc, #20]	; (801820c <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 80181f6:	612b      	str	r3, [r5, #16]
 80181f8:	4b07      	ldr	r3, [pc, #28]	; (8018218 <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 80181fa:	616b      	str	r3, [r5, #20]
 80181fc:	bd38      	pop	{r3, r4, r5, pc}
 80181fe:	bf00      	nop
 8018200:	2400e1a0 	.word	0x2400e1a0
 8018204:	24000000 	.word	0x24000000
 8018208:	08016ae1 	.word	0x08016ae1
 801820c:	240000a0 	.word	0x240000a0
 8018210:	2400e1a4 	.word	0x2400e1a4
 8018214:	08016adf 	.word	0x08016adf
 8018218:	240000a4 	.word	0x240000a4

0801821c <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801821c:	b538      	push	{r3, r4, r5, lr}
 801821e:	4c15      	ldr	r4, [pc, #84]	; (8018274 <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8018220:	4605      	mov	r5, r0
 8018222:	7823      	ldrb	r3, [r4, #0]
 8018224:	f3bf 8f5b 	dmb	ish
 8018228:	07da      	lsls	r2, r3, #31
 801822a:	d40b      	bmi.n	8018244 <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801822c:	4620      	mov	r0, r4
 801822e:	f007 fce0 	bl	801fbf2 <__cxa_guard_acquire>
 8018232:	b138      	cbz	r0, 8018244 <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8018234:	4620      	mov	r0, r4
 8018236:	f007 fce8 	bl	801fc0a <__cxa_guard_release>
 801823a:	4a0f      	ldr	r2, [pc, #60]	; (8018278 <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801823c:	490f      	ldr	r1, [pc, #60]	; (801827c <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801823e:	4810      	ldr	r0, [pc, #64]	; (8018280 <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8018240:	f007 fcd0 	bl	801fbe4 <__aeabi_atexit>
 8018244:	4c0f      	ldr	r4, [pc, #60]	; (8018284 <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8018246:	7823      	ldrb	r3, [r4, #0]
 8018248:	f3bf 8f5b 	dmb	ish
 801824c:	07db      	lsls	r3, r3, #31
 801824e:	d40b      	bmi.n	8018268 <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8018250:	4620      	mov	r0, r4
 8018252:	f007 fcce 	bl	801fbf2 <__cxa_guard_acquire>
 8018256:	b138      	cbz	r0, 8018268 <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8018258:	4620      	mov	r0, r4
 801825a:	f007 fcd6 	bl	801fc0a <__cxa_guard_release>
 801825e:	4a06      	ldr	r2, [pc, #24]	; (8018278 <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8018260:	4909      	ldr	r1, [pc, #36]	; (8018288 <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8018262:	480a      	ldr	r0, [pc, #40]	; (801828c <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8018264:	f007 fcbe 	bl	801fbe4 <__aeabi_atexit>
 8018268:	4b05      	ldr	r3, [pc, #20]	; (8018280 <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801826a:	60ab      	str	r3, [r5, #8]
 801826c:	4b07      	ldr	r3, [pc, #28]	; (801828c <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801826e:	60eb      	str	r3, [r5, #12]
 8018270:	bd38      	pop	{r3, r4, r5, pc}
 8018272:	bf00      	nop
 8018274:	2400e180 	.word	0x2400e180
 8018278:	24000000 	.word	0x24000000
 801827c:	08016ae5 	.word	0x08016ae5
 8018280:	24000080 	.word	0x24000080
 8018284:	2400e184 	.word	0x2400e184
 8018288:	08016ae3 	.word	0x08016ae3
 801828c:	24000084 	.word	0x24000084

08018290 <_ZN8touchgfx8LCD24bpp28enableTextureMapperL8_RGB888Ev>:
 8018290:	b510      	push	{r4, lr}
 8018292:	4604      	mov	r4, r0
 8018294:	f7ff ff88 	bl	80181a8 <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8018298:	4620      	mov	r0, r4
 801829a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801829e:	f7ff bfbd 	b.w	801821c <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

080182a4 <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 80182a4:	b538      	push	{r3, r4, r5, lr}
 80182a6:	4c15      	ldr	r4, [pc, #84]	; (80182fc <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 80182a8:	4605      	mov	r5, r0
 80182aa:	7823      	ldrb	r3, [r4, #0]
 80182ac:	f3bf 8f5b 	dmb	ish
 80182b0:	07da      	lsls	r2, r3, #31
 80182b2:	d40b      	bmi.n	80182cc <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 80182b4:	4620      	mov	r0, r4
 80182b6:	f007 fc9c 	bl	801fbf2 <__cxa_guard_acquire>
 80182ba:	b138      	cbz	r0, 80182cc <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 80182bc:	4620      	mov	r0, r4
 80182be:	f007 fca4 	bl	801fc0a <__cxa_guard_release>
 80182c2:	4a0f      	ldr	r2, [pc, #60]	; (8018300 <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 80182c4:	490f      	ldr	r1, [pc, #60]	; (8018304 <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 80182c6:	4810      	ldr	r0, [pc, #64]	; (8018308 <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 80182c8:	f007 fc8c 	bl	801fbe4 <__aeabi_atexit>
 80182cc:	4c0f      	ldr	r4, [pc, #60]	; (801830c <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 80182ce:	7823      	ldrb	r3, [r4, #0]
 80182d0:	f3bf 8f5b 	dmb	ish
 80182d4:	07db      	lsls	r3, r3, #31
 80182d6:	d40b      	bmi.n	80182f0 <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 80182d8:	4620      	mov	r0, r4
 80182da:	f007 fc8a 	bl	801fbf2 <__cxa_guard_acquire>
 80182de:	b138      	cbz	r0, 80182f0 <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 80182e0:	4620      	mov	r0, r4
 80182e2:	f007 fc92 	bl	801fc0a <__cxa_guard_release>
 80182e6:	4a06      	ldr	r2, [pc, #24]	; (8018300 <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 80182e8:	4909      	ldr	r1, [pc, #36]	; (8018310 <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 80182ea:	480a      	ldr	r0, [pc, #40]	; (8018314 <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 80182ec:	f007 fc7a 	bl	801fbe4 <__aeabi_atexit>
 80182f0:	4b05      	ldr	r3, [pc, #20]	; (8018308 <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 80182f2:	622b      	str	r3, [r5, #32]
 80182f4:	4b07      	ldr	r3, [pc, #28]	; (8018314 <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 80182f6:	626b      	str	r3, [r5, #36]	; 0x24
 80182f8:	bd38      	pop	{r3, r4, r5, pc}
 80182fa:	bf00      	nop
 80182fc:	2400e1a8 	.word	0x2400e1a8
 8018300:	24000000 	.word	0x24000000
 8018304:	08016ad9 	.word	0x08016ad9
 8018308:	240000a8 	.word	0x240000a8
 801830c:	2400e1ac 	.word	0x2400e1ac
 8018310:	08016ad7 	.word	0x08016ad7
 8018314:	240000ac 	.word	0x240000ac

08018318 <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8018318:	b538      	push	{r3, r4, r5, lr}
 801831a:	4c15      	ldr	r4, [pc, #84]	; (8018370 <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801831c:	4605      	mov	r5, r0
 801831e:	7823      	ldrb	r3, [r4, #0]
 8018320:	f3bf 8f5b 	dmb	ish
 8018324:	07da      	lsls	r2, r3, #31
 8018326:	d40b      	bmi.n	8018340 <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8018328:	4620      	mov	r0, r4
 801832a:	f007 fc62 	bl	801fbf2 <__cxa_guard_acquire>
 801832e:	b138      	cbz	r0, 8018340 <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8018330:	4620      	mov	r0, r4
 8018332:	f007 fc6a 	bl	801fc0a <__cxa_guard_release>
 8018336:	4a0f      	ldr	r2, [pc, #60]	; (8018374 <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8018338:	490f      	ldr	r1, [pc, #60]	; (8018378 <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801833a:	4810      	ldr	r0, [pc, #64]	; (801837c <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801833c:	f007 fc52 	bl	801fbe4 <__aeabi_atexit>
 8018340:	4c0f      	ldr	r4, [pc, #60]	; (8018380 <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8018342:	7823      	ldrb	r3, [r4, #0]
 8018344:	f3bf 8f5b 	dmb	ish
 8018348:	07db      	lsls	r3, r3, #31
 801834a:	d40b      	bmi.n	8018364 <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801834c:	4620      	mov	r0, r4
 801834e:	f007 fc50 	bl	801fbf2 <__cxa_guard_acquire>
 8018352:	b138      	cbz	r0, 8018364 <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8018354:	4620      	mov	r0, r4
 8018356:	f007 fc58 	bl	801fc0a <__cxa_guard_release>
 801835a:	4a06      	ldr	r2, [pc, #24]	; (8018374 <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801835c:	4909      	ldr	r1, [pc, #36]	; (8018384 <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801835e:	480a      	ldr	r0, [pc, #40]	; (8018388 <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8018360:	f007 fc40 	bl	801fbe4 <__aeabi_atexit>
 8018364:	4b05      	ldr	r3, [pc, #20]	; (801837c <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8018366:	61ab      	str	r3, [r5, #24]
 8018368:	4b07      	ldr	r3, [pc, #28]	; (8018388 <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801836a:	61eb      	str	r3, [r5, #28]
 801836c:	bd38      	pop	{r3, r4, r5, pc}
 801836e:	bf00      	nop
 8018370:	2400e188 	.word	0x2400e188
 8018374:	24000000 	.word	0x24000000
 8018378:	08016add 	.word	0x08016add
 801837c:	24000088 	.word	0x24000088
 8018380:	2400e18c 	.word	0x2400e18c
 8018384:	08016adb 	.word	0x08016adb
 8018388:	2400008c 	.word	0x2400008c

0801838c <_ZN8touchgfx8LCD24bpp30enableTextureMapperL8_ARGB8888Ev>:
 801838c:	b510      	push	{r4, lr}
 801838e:	4604      	mov	r4, r0
 8018390:	f7ff ff88 	bl	80182a4 <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8018394:	4620      	mov	r0, r4
 8018396:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801839a:	f7ff bfbd 	b.w	8018318 <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

080183a0 <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv>:
 80183a0:	b538      	push	{r3, r4, r5, lr}
 80183a2:	4c15      	ldr	r4, [pc, #84]	; (80183f8 <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x58>)
 80183a4:	4605      	mov	r5, r0
 80183a6:	7823      	ldrb	r3, [r4, #0]
 80183a8:	f3bf 8f5b 	dmb	ish
 80183ac:	07da      	lsls	r2, r3, #31
 80183ae:	d40b      	bmi.n	80183c8 <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x28>
 80183b0:	4620      	mov	r0, r4
 80183b2:	f007 fc1e 	bl	801fbf2 <__cxa_guard_acquire>
 80183b6:	b138      	cbz	r0, 80183c8 <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x28>
 80183b8:	4620      	mov	r0, r4
 80183ba:	f007 fc26 	bl	801fc0a <__cxa_guard_release>
 80183be:	4a0f      	ldr	r2, [pc, #60]	; (80183fc <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x5c>)
 80183c0:	490f      	ldr	r1, [pc, #60]	; (8018400 <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x60>)
 80183c2:	4810      	ldr	r0, [pc, #64]	; (8018404 <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x64>)
 80183c4:	f007 fc0e 	bl	801fbe4 <__aeabi_atexit>
 80183c8:	4c0f      	ldr	r4, [pc, #60]	; (8018408 <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x68>)
 80183ca:	7823      	ldrb	r3, [r4, #0]
 80183cc:	f3bf 8f5b 	dmb	ish
 80183d0:	07db      	lsls	r3, r3, #31
 80183d2:	d40b      	bmi.n	80183ec <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x4c>
 80183d4:	4620      	mov	r0, r4
 80183d6:	f007 fc0c 	bl	801fbf2 <__cxa_guard_acquire>
 80183da:	b138      	cbz	r0, 80183ec <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x4c>
 80183dc:	4620      	mov	r0, r4
 80183de:	f007 fc14 	bl	801fc0a <__cxa_guard_release>
 80183e2:	4a06      	ldr	r2, [pc, #24]	; (80183fc <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x5c>)
 80183e4:	4909      	ldr	r1, [pc, #36]	; (801840c <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x6c>)
 80183e6:	480a      	ldr	r0, [pc, #40]	; (8018410 <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x70>)
 80183e8:	f007 fbfc 	bl	801fbe4 <__aeabi_atexit>
 80183ec:	4b05      	ldr	r3, [pc, #20]	; (8018404 <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x64>)
 80183ee:	632b      	str	r3, [r5, #48]	; 0x30
 80183f0:	4b07      	ldr	r3, [pc, #28]	; (8018410 <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x70>)
 80183f2:	636b      	str	r3, [r5, #52]	; 0x34
 80183f4:	bd38      	pop	{r3, r4, r5, pc}
 80183f6:	bf00      	nop
 80183f8:	2400e190 	.word	0x2400e190
 80183fc:	24000000 	.word	0x24000000
 8018400:	08016ad1 	.word	0x08016ad1
 8018404:	24000090 	.word	0x24000090
 8018408:	2400e194 	.word	0x2400e194
 801840c:	08016acf 	.word	0x08016acf
 8018410:	24000094 	.word	0x24000094

08018414 <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv>:
 8018414:	b538      	push	{r3, r4, r5, lr}
 8018416:	4c15      	ldr	r4, [pc, #84]	; (801846c <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x58>)
 8018418:	4605      	mov	r5, r0
 801841a:	7823      	ldrb	r3, [r4, #0]
 801841c:	f3bf 8f5b 	dmb	ish
 8018420:	07da      	lsls	r2, r3, #31
 8018422:	d40b      	bmi.n	801843c <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x28>
 8018424:	4620      	mov	r0, r4
 8018426:	f007 fbe4 	bl	801fbf2 <__cxa_guard_acquire>
 801842a:	b138      	cbz	r0, 801843c <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x28>
 801842c:	4620      	mov	r0, r4
 801842e:	f007 fbec 	bl	801fc0a <__cxa_guard_release>
 8018432:	4a0f      	ldr	r2, [pc, #60]	; (8018470 <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x5c>)
 8018434:	490f      	ldr	r1, [pc, #60]	; (8018474 <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x60>)
 8018436:	4810      	ldr	r0, [pc, #64]	; (8018478 <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x64>)
 8018438:	f007 fbd4 	bl	801fbe4 <__aeabi_atexit>
 801843c:	4c0f      	ldr	r4, [pc, #60]	; (801847c <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x68>)
 801843e:	7823      	ldrb	r3, [r4, #0]
 8018440:	f3bf 8f5b 	dmb	ish
 8018444:	07db      	lsls	r3, r3, #31
 8018446:	d40b      	bmi.n	8018460 <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x4c>
 8018448:	4620      	mov	r0, r4
 801844a:	f007 fbd2 	bl	801fbf2 <__cxa_guard_acquire>
 801844e:	b138      	cbz	r0, 8018460 <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x4c>
 8018450:	4620      	mov	r0, r4
 8018452:	f007 fbda 	bl	801fc0a <__cxa_guard_release>
 8018456:	4a06      	ldr	r2, [pc, #24]	; (8018470 <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x5c>)
 8018458:	4909      	ldr	r1, [pc, #36]	; (8018480 <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x6c>)
 801845a:	480a      	ldr	r0, [pc, #40]	; (8018484 <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x70>)
 801845c:	f007 fbc2 	bl	801fbe4 <__aeabi_atexit>
 8018460:	4b05      	ldr	r3, [pc, #20]	; (8018478 <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x64>)
 8018462:	62ab      	str	r3, [r5, #40]	; 0x28
 8018464:	4b07      	ldr	r3, [pc, #28]	; (8018484 <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x70>)
 8018466:	62eb      	str	r3, [r5, #44]	; 0x2c
 8018468:	bd38      	pop	{r3, r4, r5, pc}
 801846a:	bf00      	nop
 801846c:	2400e168 	.word	0x2400e168
 8018470:	24000000 	.word	0x24000000
 8018474:	08016ad5 	.word	0x08016ad5
 8018478:	24000068 	.word	0x24000068
 801847c:	2400e16c 	.word	0x2400e16c
 8018480:	08016ad3 	.word	0x08016ad3
 8018484:	2400006c 	.word	0x2400006c

08018488 <_ZN8touchgfx8LCD24bpp25enableTextureMapperRGB888Ev>:
 8018488:	b510      	push	{r4, lr}
 801848a:	4604      	mov	r4, r0
 801848c:	f7ff ff88 	bl	80183a0 <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv>
 8018490:	4620      	mov	r0, r4
 8018492:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018496:	f7ff bfbd 	b.w	8018414 <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv>
	...

0801849c <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801849c:	b538      	push	{r3, r4, r5, lr}
 801849e:	4c15      	ldr	r4, [pc, #84]	; (80184f4 <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 80184a0:	4605      	mov	r5, r0
 80184a2:	7823      	ldrb	r3, [r4, #0]
 80184a4:	f3bf 8f5b 	dmb	ish
 80184a8:	07da      	lsls	r2, r3, #31
 80184aa:	d40b      	bmi.n	80184c4 <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80184ac:	4620      	mov	r0, r4
 80184ae:	f007 fba0 	bl	801fbf2 <__cxa_guard_acquire>
 80184b2:	b138      	cbz	r0, 80184c4 <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80184b4:	4620      	mov	r0, r4
 80184b6:	f007 fba8 	bl	801fc0a <__cxa_guard_release>
 80184ba:	4a0f      	ldr	r2, [pc, #60]	; (80184f8 <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80184bc:	490f      	ldr	r1, [pc, #60]	; (80184fc <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 80184be:	4810      	ldr	r0, [pc, #64]	; (8018500 <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80184c0:	f007 fb90 	bl	801fbe4 <__aeabi_atexit>
 80184c4:	4c0f      	ldr	r4, [pc, #60]	; (8018504 <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 80184c6:	7823      	ldrb	r3, [r4, #0]
 80184c8:	f3bf 8f5b 	dmb	ish
 80184cc:	07db      	lsls	r3, r3, #31
 80184ce:	d40b      	bmi.n	80184e8 <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80184d0:	4620      	mov	r0, r4
 80184d2:	f007 fb8e 	bl	801fbf2 <__cxa_guard_acquire>
 80184d6:	b138      	cbz	r0, 80184e8 <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80184d8:	4620      	mov	r0, r4
 80184da:	f007 fb96 	bl	801fc0a <__cxa_guard_release>
 80184de:	4a06      	ldr	r2, [pc, #24]	; (80184f8 <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80184e0:	4909      	ldr	r1, [pc, #36]	; (8018508 <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 80184e2:	480a      	ldr	r0, [pc, #40]	; (801850c <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80184e4:	f007 fb7e 	bl	801fbe4 <__aeabi_atexit>
 80184e8:	4b05      	ldr	r3, [pc, #20]	; (8018500 <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80184ea:	642b      	str	r3, [r5, #64]	; 0x40
 80184ec:	4b07      	ldr	r3, [pc, #28]	; (801850c <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80184ee:	646b      	str	r3, [r5, #68]	; 0x44
 80184f0:	bd38      	pop	{r3, r4, r5, pc}
 80184f2:	bf00      	nop
 80184f4:	2400e198 	.word	0x2400e198
 80184f8:	24000000 	.word	0x24000000
 80184fc:	08016ac9 	.word	0x08016ac9
 8018500:	24000098 	.word	0x24000098
 8018504:	2400e19c 	.word	0x2400e19c
 8018508:	08016ac7 	.word	0x08016ac7
 801850c:	2400009c 	.word	0x2400009c

08018510 <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8018510:	b538      	push	{r3, r4, r5, lr}
 8018512:	4c15      	ldr	r4, [pc, #84]	; (8018568 <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8018514:	4605      	mov	r5, r0
 8018516:	7823      	ldrb	r3, [r4, #0]
 8018518:	f3bf 8f5b 	dmb	ish
 801851c:	07da      	lsls	r2, r3, #31
 801851e:	d40b      	bmi.n	8018538 <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8018520:	4620      	mov	r0, r4
 8018522:	f007 fb66 	bl	801fbf2 <__cxa_guard_acquire>
 8018526:	b138      	cbz	r0, 8018538 <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8018528:	4620      	mov	r0, r4
 801852a:	f007 fb6e 	bl	801fc0a <__cxa_guard_release>
 801852e:	4a0f      	ldr	r2, [pc, #60]	; (801856c <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8018530:	490f      	ldr	r1, [pc, #60]	; (8018570 <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 8018532:	4810      	ldr	r0, [pc, #64]	; (8018574 <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8018534:	f007 fb56 	bl	801fbe4 <__aeabi_atexit>
 8018538:	4c0f      	ldr	r4, [pc, #60]	; (8018578 <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801853a:	7823      	ldrb	r3, [r4, #0]
 801853c:	f3bf 8f5b 	dmb	ish
 8018540:	07db      	lsls	r3, r3, #31
 8018542:	d40b      	bmi.n	801855c <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8018544:	4620      	mov	r0, r4
 8018546:	f007 fb54 	bl	801fbf2 <__cxa_guard_acquire>
 801854a:	b138      	cbz	r0, 801855c <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801854c:	4620      	mov	r0, r4
 801854e:	f007 fb5c 	bl	801fc0a <__cxa_guard_release>
 8018552:	4a06      	ldr	r2, [pc, #24]	; (801856c <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8018554:	4909      	ldr	r1, [pc, #36]	; (801857c <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 8018556:	480a      	ldr	r0, [pc, #40]	; (8018580 <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8018558:	f007 fb44 	bl	801fbe4 <__aeabi_atexit>
 801855c:	4b05      	ldr	r3, [pc, #20]	; (8018574 <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801855e:	63ab      	str	r3, [r5, #56]	; 0x38
 8018560:	4b07      	ldr	r3, [pc, #28]	; (8018580 <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8018562:	63eb      	str	r3, [r5, #60]	; 0x3c
 8018564:	bd38      	pop	{r3, r4, r5, pc}
 8018566:	bf00      	nop
 8018568:	2400e178 	.word	0x2400e178
 801856c:	24000000 	.word	0x24000000
 8018570:	08016acd 	.word	0x08016acd
 8018574:	24000078 	.word	0x24000078
 8018578:	2400e17c 	.word	0x2400e17c
 801857c:	08016acb 	.word	0x08016acb
 8018580:	2400007c 	.word	0x2400007c

08018584 <_ZN8touchgfx8LCD24bpp27enableTextureMapperARGB8888Ev>:
 8018584:	b510      	push	{r4, lr}
 8018586:	4604      	mov	r4, r0
 8018588:	f7ff ff88 	bl	801849c <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801858c:	4620      	mov	r0, r4
 801858e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018592:	f7ff bfbd 	b.w	8018510 <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08018598 <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8018598:	b538      	push	{r3, r4, r5, lr}
 801859a:	4c15      	ldr	r4, [pc, #84]	; (80185f0 <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801859c:	4605      	mov	r5, r0
 801859e:	7823      	ldrb	r3, [r4, #0]
 80185a0:	f3bf 8f5b 	dmb	ish
 80185a4:	07da      	lsls	r2, r3, #31
 80185a6:	d40b      	bmi.n	80185c0 <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80185a8:	4620      	mov	r0, r4
 80185aa:	f007 fb22 	bl	801fbf2 <__cxa_guard_acquire>
 80185ae:	b138      	cbz	r0, 80185c0 <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80185b0:	4620      	mov	r0, r4
 80185b2:	f007 fb2a 	bl	801fc0a <__cxa_guard_release>
 80185b6:	4a0f      	ldr	r2, [pc, #60]	; (80185f4 <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80185b8:	490f      	ldr	r1, [pc, #60]	; (80185f8 <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 80185ba:	4810      	ldr	r0, [pc, #64]	; (80185fc <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80185bc:	f007 fb12 	bl	801fbe4 <__aeabi_atexit>
 80185c0:	4c0f      	ldr	r4, [pc, #60]	; (8018600 <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 80185c2:	7823      	ldrb	r3, [r4, #0]
 80185c4:	f3bf 8f5b 	dmb	ish
 80185c8:	07db      	lsls	r3, r3, #31
 80185ca:	d40b      	bmi.n	80185e4 <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80185cc:	4620      	mov	r0, r4
 80185ce:	f007 fb10 	bl	801fbf2 <__cxa_guard_acquire>
 80185d2:	b138      	cbz	r0, 80185e4 <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80185d4:	4620      	mov	r0, r4
 80185d6:	f007 fb18 	bl	801fc0a <__cxa_guard_release>
 80185da:	4a06      	ldr	r2, [pc, #24]	; (80185f4 <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80185dc:	4909      	ldr	r1, [pc, #36]	; (8018604 <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 80185de:	480a      	ldr	r0, [pc, #40]	; (8018608 <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80185e0:	f007 fb00 	bl	801fbe4 <__aeabi_atexit>
 80185e4:	4b05      	ldr	r3, [pc, #20]	; (80185fc <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80185e6:	652b      	str	r3, [r5, #80]	; 0x50
 80185e8:	4b07      	ldr	r3, [pc, #28]	; (8018608 <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80185ea:	656b      	str	r3, [r5, #84]	; 0x54
 80185ec:	bd38      	pop	{r3, r4, r5, pc}
 80185ee:	bf00      	nop
 80185f0:	2400e170 	.word	0x2400e170
 80185f4:	24000000 	.word	0x24000000
 80185f8:	08016ac1 	.word	0x08016ac1
 80185fc:	24000070 	.word	0x24000070
 8018600:	2400e174 	.word	0x2400e174
 8018604:	08016abf 	.word	0x08016abf
 8018608:	24000074 	.word	0x24000074

0801860c <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv>:
 801860c:	b538      	push	{r3, r4, r5, lr}
 801860e:	4c15      	ldr	r4, [pc, #84]	; (8018664 <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8018610:	4605      	mov	r5, r0
 8018612:	7823      	ldrb	r3, [r4, #0]
 8018614:	f3bf 8f5b 	dmb	ish
 8018618:	07da      	lsls	r2, r3, #31
 801861a:	d40b      	bmi.n	8018634 <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801861c:	4620      	mov	r0, r4
 801861e:	f007 fae8 	bl	801fbf2 <__cxa_guard_acquire>
 8018622:	b138      	cbz	r0, 8018634 <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8018624:	4620      	mov	r0, r4
 8018626:	f007 faf0 	bl	801fc0a <__cxa_guard_release>
 801862a:	4a0f      	ldr	r2, [pc, #60]	; (8018668 <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801862c:	490f      	ldr	r1, [pc, #60]	; (801866c <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801862e:	4810      	ldr	r0, [pc, #64]	; (8018670 <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8018630:	f007 fad8 	bl	801fbe4 <__aeabi_atexit>
 8018634:	4c0f      	ldr	r4, [pc, #60]	; (8018674 <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 8018636:	7823      	ldrb	r3, [r4, #0]
 8018638:	f3bf 8f5b 	dmb	ish
 801863c:	07db      	lsls	r3, r3, #31
 801863e:	d40b      	bmi.n	8018658 <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8018640:	4620      	mov	r0, r4
 8018642:	f007 fad6 	bl	801fbf2 <__cxa_guard_acquire>
 8018646:	b138      	cbz	r0, 8018658 <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8018648:	4620      	mov	r0, r4
 801864a:	f007 fade 	bl	801fc0a <__cxa_guard_release>
 801864e:	4a06      	ldr	r2, [pc, #24]	; (8018668 <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8018650:	4909      	ldr	r1, [pc, #36]	; (8018678 <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 8018652:	480a      	ldr	r0, [pc, #40]	; (801867c <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8018654:	f007 fac6 	bl	801fbe4 <__aeabi_atexit>
 8018658:	4b05      	ldr	r3, [pc, #20]	; (8018670 <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801865a:	64ab      	str	r3, [r5, #72]	; 0x48
 801865c:	4b07      	ldr	r3, [pc, #28]	; (801867c <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801865e:	64eb      	str	r3, [r5, #76]	; 0x4c
 8018660:	bd38      	pop	{r3, r4, r5, pc}
 8018662:	bf00      	nop
 8018664:	2400e160 	.word	0x2400e160
 8018668:	24000000 	.word	0x24000000
 801866c:	08016ac5 	.word	0x08016ac5
 8018670:	24000060 	.word	0x24000060
 8018674:	2400e164 	.word	0x2400e164
 8018678:	08016ac3 	.word	0x08016ac3
 801867c:	24000064 	.word	0x24000064

08018680 <_ZN8touchgfx8LCD24bpp21enableTextureMapperA4Ev>:
 8018680:	b510      	push	{r4, lr}
 8018682:	4604      	mov	r4, r0
 8018684:	f7ff ff88 	bl	8018598 <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8018688:	4620      	mov	r0, r4
 801868a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801868e:	f7ff bfbd 	b.w	801860c <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv>

08018692 <_ZN8touchgfx8LCD24bpp22enableTextureMapperAllEv>:
 8018692:	b510      	push	{r4, lr}
 8018694:	4604      	mov	r4, r0
 8018696:	f7ff fff3 	bl	8018680 <_ZN8touchgfx8LCD24bpp21enableTextureMapperA4Ev>
 801869a:	4620      	mov	r0, r4
 801869c:	f7ff ff72 	bl	8018584 <_ZN8touchgfx8LCD24bpp27enableTextureMapperARGB8888Ev>
 80186a0:	4620      	mov	r0, r4
 80186a2:	f7ff fe73 	bl	801838c <_ZN8touchgfx8LCD24bpp30enableTextureMapperL8_ARGB8888Ev>
 80186a6:	4620      	mov	r0, r4
 80186a8:	f7ff fdf2 	bl	8018290 <_ZN8touchgfx8LCD24bpp28enableTextureMapperL8_RGB888Ev>
 80186ac:	4620      	mov	r0, r4
 80186ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80186b2:	f7ff bee9 	b.w	8018488 <_ZN8touchgfx8LCD24bpp25enableTextureMapperRGB888Ev>
	...

080186b8 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh>:
 80186b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80186bc:	b087      	sub	sp, #28
 80186be:	7888      	ldrb	r0, [r1, #2]
 80186c0:	4616      	mov	r6, r2
 80186c2:	9001      	str	r0, [sp, #4]
 80186c4:	7848      	ldrb	r0, [r1, #1]
 80186c6:	9100      	str	r1, [sp, #0]
 80186c8:	9002      	str	r0, [sp, #8]
 80186ca:	7808      	ldrb	r0, [r1, #0]
 80186cc:	9901      	ldr	r1, [sp, #4]
 80186ce:	9003      	str	r0, [sp, #12]
 80186d0:	9802      	ldr	r0, [sp, #8]
 80186d2:	f9bd e040 	ldrsh.w	lr, [sp, #64]	; 0x40
 80186d6:	0200      	lsls	r0, r0, #8
 80186d8:	f9bd 9044 	ldrsh.w	r9, [sp, #68]	; 0x44
 80186dc:	f89d 2050 	ldrb.w	r2, [sp, #80]	; 0x50
 80186e0:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 80186e4:	9903      	ldr	r1, [sp, #12]
 80186e6:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 80186ea:	4308      	orrs	r0, r1
 80186ec:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 80186f0:	e9dd c512 	ldrd	ip, r5, [sp, #72]	; 0x48
 80186f4:	9005      	str	r0, [sp, #20]
 80186f6:	fb05 ca0e 	mla	sl, r5, lr, ip
 80186fa:	2d00      	cmp	r5, #0
 80186fc:	eb06 080a 	add.w	r8, r6, sl
 8018700:	db4a      	blt.n	8018798 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0xe0>
 8018702:	45a9      	cmp	r9, r5
 8018704:	dd48      	ble.n	8018798 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0xe0>
 8018706:	f1bc 0f00 	cmp.w	ip, #0
 801870a:	db43      	blt.n	8018794 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0xdc>
 801870c:	45e6      	cmp	lr, ip
 801870e:	dd41      	ble.n	8018794 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0xdc>
 8018710:	f816 600a 	ldrb.w	r6, [r6, sl]
 8018714:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8018718:	441e      	add	r6, r3
 801871a:	f11c 0001 	adds.w	r0, ip, #1
 801871e:	d43e      	bmi.n	801879e <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0xe6>
 8018720:	4586      	cmp	lr, r0
 8018722:	dd3c      	ble.n	801879e <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0xe6>
 8018724:	2a00      	cmp	r2, #0
 8018726:	d03a      	beq.n	801879e <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0xe6>
 8018728:	f898 0001 	ldrb.w	r0, [r8, #1]
 801872c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8018730:	4418      	add	r0, r3
 8018732:	3501      	adds	r5, #1
 8018734:	d437      	bmi.n	80187a6 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0xee>
 8018736:	45a9      	cmp	r9, r5
 8018738:	dd35      	ble.n	80187a6 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0xee>
 801873a:	b3a4      	cbz	r4, 80187a6 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0xee>
 801873c:	f1bc 0f00 	cmp.w	ip, #0
 8018740:	db2f      	blt.n	80187a2 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0xea>
 8018742:	45e6      	cmp	lr, ip
 8018744:	dd2d      	ble.n	80187a2 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0xea>
 8018746:	f818 500e 	ldrb.w	r5, [r8, lr]
 801874a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801874e:	441d      	add	r5, r3
 8018750:	f11c 0c01 	adds.w	ip, ip, #1
 8018754:	d42a      	bmi.n	80187ac <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0xf4>
 8018756:	45e6      	cmp	lr, ip
 8018758:	dd28      	ble.n	80187ac <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0xf4>
 801875a:	b33a      	cbz	r2, 80187ac <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0xf4>
 801875c:	44c6      	add	lr, r8
 801875e:	f89e c001 	ldrb.w	ip, [lr, #1]
 8018762:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8018766:	4463      	add	r3, ip
 8018768:	ea6f 0c07 	mvn.w	ip, r7
 801876c:	2a0f      	cmp	r2, #15
 801876e:	f896 a000 	ldrb.w	sl, [r6]
 8018772:	fa5f fc8c 	uxtb.w	ip, ip
 8018776:	f890 b000 	ldrb.w	fp, [r0]
 801877a:	f895 9000 	ldrb.w	r9, [r5]
 801877e:	7819      	ldrb	r1, [r3, #0]
 8018780:	d801      	bhi.n	8018786 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0xce>
 8018782:	2c0f      	cmp	r4, #15
 8018784:	d914      	bls.n	80187b0 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0xf8>
 8018786:	4b40      	ldr	r3, [pc, #256]	; (8018888 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1d0>)
 8018788:	f240 115b 	movw	r1, #347	; 0x15b
 801878c:	4a3f      	ldr	r2, [pc, #252]	; (801888c <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1d4>)
 801878e:	4840      	ldr	r0, [pc, #256]	; (8018890 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1d8>)
 8018790:	f007 fc26 	bl	801ffe0 <__assert_func>
 8018794:	ae05      	add	r6, sp, #20
 8018796:	e7c0      	b.n	801871a <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x62>
 8018798:	a805      	add	r0, sp, #20
 801879a:	4606      	mov	r6, r0
 801879c:	e7c9      	b.n	8018732 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x7a>
 801879e:	a805      	add	r0, sp, #20
 80187a0:	e7c7      	b.n	8018732 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x7a>
 80187a2:	ad05      	add	r5, sp, #20
 80187a4:	e7d4      	b.n	8018750 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x98>
 80187a6:	ab05      	add	r3, sp, #20
 80187a8:	461d      	mov	r5, r3
 80187aa:	e7dd      	b.n	8018768 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0xb0>
 80187ac:	ab05      	add	r3, sp, #20
 80187ae:	e7db      	b.n	8018768 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0xb0>
 80187b0:	b292      	uxth	r2, r2
 80187b2:	b2a4      	uxth	r4, r4
 80187b4:	fa1f fc8c 	uxth.w	ip, ip
 80187b8:	fb02 f804 	mul.w	r8, r2, r4
 80187bc:	0112      	lsls	r2, r2, #4
 80187be:	b2bf      	uxth	r7, r7
 80187c0:	ebc8 1404 	rsb	r4, r8, r4, lsl #4
 80187c4:	f5c2 7e80 	rsb	lr, r2, #256	; 0x100
 80187c8:	eba2 0208 	sub.w	r2, r2, r8
 80187cc:	b2a4      	uxth	r4, r4
 80187ce:	b292      	uxth	r2, r2
 80187d0:	ebae 0e04 	sub.w	lr, lr, r4
 80187d4:	fb02 fb0b 	mul.w	fp, r2, fp
 80187d8:	fa1f fe8e 	uxth.w	lr, lr
 80187dc:	fb0e ba0a 	mla	sl, lr, sl, fp
 80187e0:	fb04 aa09 	mla	sl, r4, r9, sl
 80187e4:	fb08 aa01 	mla	sl, r8, r1, sl
 80187e8:	9903      	ldr	r1, [sp, #12]
 80187ea:	fb11 f90c 	smulbb	r9, r1, ip
 80187ee:	f3ca 2a07 	ubfx	sl, sl, #8, #8
 80187f2:	9900      	ldr	r1, [sp, #0]
 80187f4:	fb0a 9a07 	mla	sl, sl, r7, r9
 80187f8:	fa1f fa8a 	uxth.w	sl, sl
 80187fc:	f10a 0901 	add.w	r9, sl, #1
 8018800:	eb09 2a1a 	add.w	sl, r9, sl, lsr #8
 8018804:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 8018808:	f881 a000 	strb.w	sl, [r1]
 801880c:	f890 a001 	ldrb.w	sl, [r0, #1]
 8018810:	f896 9001 	ldrb.w	r9, [r6, #1]
 8018814:	fb02 fa0a 	mul.w	sl, r2, sl
 8018818:	9902      	ldr	r1, [sp, #8]
 801881a:	fb0e aa09 	mla	sl, lr, r9, sl
 801881e:	f895 9001 	ldrb.w	r9, [r5, #1]
 8018822:	fb04 aa09 	mla	sl, r4, r9, sl
 8018826:	f893 9001 	ldrb.w	r9, [r3, #1]
 801882a:	fb08 a909 	mla	r9, r8, r9, sl
 801882e:	fb11 fa0c 	smulbb	sl, r1, ip
 8018832:	9900      	ldr	r1, [sp, #0]
 8018834:	f3c9 2907 	ubfx	r9, r9, #8, #8
 8018838:	fb09 a907 	mla	r9, r9, r7, sl
 801883c:	fa1f f989 	uxth.w	r9, r9
 8018840:	f109 0a01 	add.w	sl, r9, #1
 8018844:	eb0a 2919 	add.w	r9, sl, r9, lsr #8
 8018848:	ea4f 2929 	mov.w	r9, r9, asr #8
 801884c:	f881 9001 	strb.w	r9, [r1, #1]
 8018850:	7880      	ldrb	r0, [r0, #2]
 8018852:	78b6      	ldrb	r6, [r6, #2]
 8018854:	4342      	muls	r2, r0
 8018856:	78a8      	ldrb	r0, [r5, #2]
 8018858:	789b      	ldrb	r3, [r3, #2]
 801885a:	fb0e 2206 	mla	r2, lr, r6, r2
 801885e:	fb04 2400 	mla	r4, r4, r0, r2
 8018862:	fb08 4803 	mla	r8, r8, r3, r4
 8018866:	9b01      	ldr	r3, [sp, #4]
 8018868:	fb13 fc0c 	smulbb	ip, r3, ip
 801886c:	f3c8 2807 	ubfx	r8, r8, #8, #8
 8018870:	fb08 c707 	mla	r7, r8, r7, ip
 8018874:	b2bf      	uxth	r7, r7
 8018876:	f107 0c01 	add.w	ip, r7, #1
 801887a:	eb0c 2717 	add.w	r7, ip, r7, lsr #8
 801887e:	123f      	asrs	r7, r7, #8
 8018880:	708f      	strb	r7, [r1, #2]
 8018882:	b007      	add	sp, #28
 8018884:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018888:	08025314 	.word	0x08025314
 801888c:	0802572a 	.word	0x0802572a
 8018890:	080252e1 	.word	0x080252e1

08018894 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018894:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018898:	ed2d 8b08 	vpush	{d8-d11}
 801889c:	b093      	sub	sp, #76	; 0x4c
 801889e:	eeb0 aa40 	vmov.f32	s20, s0
 80188a2:	eef0 9a60 	vmov.f32	s19, s1
 80188a6:	9210      	str	r2, [sp, #64]	; 0x40
 80188a8:	eeb0 9a41 	vmov.f32	s18, s2
 80188ac:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80188ae:	eeb0 8a62 	vmov.f32	s16, s5
 80188b2:	9309      	str	r3, [sp, #36]	; 0x24
 80188b4:	eef0 8a43 	vmov.f32	s17, s6
 80188b8:	f89d 30b4 	ldrb.w	r3, [sp, #180]	; 0xb4
 80188bc:	eef0 ba44 	vmov.f32	s23, s8
 80188c0:	9011      	str	r0, [sp, #68]	; 0x44
 80188c2:	eeb0 ba64 	vmov.f32	s22, s9
 80188c6:	930e      	str	r3, [sp, #56]	; 0x38
 80188c8:	eef0 aa45 	vmov.f32	s21, s10
 80188cc:	6850      	ldr	r0, [r2, #4]
 80188ce:	910d      	str	r1, [sp, #52]	; 0x34
 80188d0:	6812      	ldr	r2, [r2, #0]
 80188d2:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 80188d6:	fb00 1303 	mla	r3, r0, r3, r1
 80188da:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80188de:	18d3      	adds	r3, r2, r3
 80188e0:	930a      	str	r3, [sp, #40]	; 0x28
 80188e2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80188e4:	681b      	ldr	r3, [r3, #0]
 80188e6:	930c      	str	r3, [sp, #48]	; 0x30
 80188e8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80188ea:	685c      	ldr	r4, [r3, #4]
 80188ec:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80188ee:	3404      	adds	r4, #4
 80188f0:	43db      	mvns	r3, r3
 80188f2:	b2db      	uxtb	r3, r3
 80188f4:	930b      	str	r3, [sp, #44]	; 0x2c
 80188f6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80188f8:	2b00      	cmp	r3, #0
 80188fa:	dc03      	bgt.n	8018904 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80188fc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80188fe:	2b00      	cmp	r3, #0
 8018900:	f340 8250 	ble.w	8018da4 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8018904:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018906:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801890a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801890e:	1e48      	subs	r0, r1, #1
 8018910:	1e55      	subs	r5, r2, #1
 8018912:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018914:	2b00      	cmp	r3, #0
 8018916:	f340 80ee 	ble.w	8018af6 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801891a:	9e25      	ldr	r6, [sp, #148]	; 0x94
 801891c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801891e:	1436      	asrs	r6, r6, #16
 8018920:	ea4f 4323 	mov.w	r3, r3, asr #16
 8018924:	d406      	bmi.n	8018934 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8018926:	4286      	cmp	r6, r0
 8018928:	da04      	bge.n	8018934 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801892a:	2b00      	cmp	r3, #0
 801892c:	db02      	blt.n	8018934 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801892e:	42ab      	cmp	r3, r5
 8018930:	f2c0 80e2 	blt.w	8018af8 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8018934:	3601      	adds	r6, #1
 8018936:	f100 80cf 	bmi.w	8018ad8 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x244>
 801893a:	42b1      	cmp	r1, r6
 801893c:	f2c0 80cc 	blt.w	8018ad8 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x244>
 8018940:	3301      	adds	r3, #1
 8018942:	f100 80c9 	bmi.w	8018ad8 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x244>
 8018946:	429a      	cmp	r2, r3
 8018948:	f2c0 80c6 	blt.w	8018ad8 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x244>
 801894c:	e9dd b609 	ldrd	fp, r6, [sp, #36]	; 0x24
 8018950:	f1bb 0f00 	cmp.w	fp, #0
 8018954:	f340 80f1 	ble.w	8018b3a <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8018958:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801895a:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801895c:	982c      	ldr	r0, [sp, #176]	; 0xb0
 801895e:	141d      	asrs	r5, r3, #16
 8018960:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8018962:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8018966:	68c7      	ldr	r7, [r0, #12]
 8018968:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801896a:	1418      	asrs	r0, r3, #16
 801896c:	f3c3 3803 	ubfx	r8, r3, #12, #4
 8018970:	6892      	ldr	r2, [r2, #8]
 8018972:	f100 8137 	bmi.w	8018be4 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8018976:	f102 3cff 	add.w	ip, r2, #4294967295
 801897a:	4560      	cmp	r0, ip
 801897c:	f280 8132 	bge.w	8018be4 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8018980:	2d00      	cmp	r5, #0
 8018982:	f2c0 812f 	blt.w	8018be4 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8018986:	f107 3cff 	add.w	ip, r7, #4294967295
 801898a:	4565      	cmp	r5, ip
 801898c:	f280 812a 	bge.w	8018be4 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8018990:	b212      	sxth	r2, r2
 8018992:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8018994:	fb05 0002 	mla	r0, r5, r2, r0
 8018998:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801899a:	f817 c000 	ldrb.w	ip, [r7, r0]
 801899e:	4405      	add	r5, r0
 80189a0:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80189a4:	eb04 0e0c 	add.w	lr, r4, ip
 80189a8:	f1b8 0f00 	cmp.w	r8, #0
 80189ac:	f000 810c 	beq.w	8018bc8 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x334>
 80189b0:	786f      	ldrb	r7, [r5, #1]
 80189b2:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80189b6:	4427      	add	r7, r4
 80189b8:	2900      	cmp	r1, #0
 80189ba:	f000 810d 	beq.w	8018bd8 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80189be:	18a8      	adds	r0, r5, r2
 80189c0:	5caa      	ldrb	r2, [r5, r2]
 80189c2:	7840      	ldrb	r0, [r0, #1]
 80189c4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80189c8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80189cc:	4422      	add	r2, r4
 80189ce:	4420      	add	r0, r4
 80189d0:	fa1f f388 	uxth.w	r3, r8
 80189d4:	f814 a00c 	ldrb.w	sl, [r4, ip]
 80189d8:	b289      	uxth	r1, r1
 80189da:	f897 c000 	ldrb.w	ip, [r7]
 80189de:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 80189e2:	fb03 f901 	mul.w	r9, r3, r1
 80189e6:	011b      	lsls	r3, r3, #4
 80189e8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80189ec:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 80189f0:	eba3 0309 	sub.w	r3, r3, r9
 80189f4:	b289      	uxth	r1, r1
 80189f6:	b29b      	uxth	r3, r3
 80189f8:	eba8 0801 	sub.w	r8, r8, r1
 80189fc:	fb03 fc0c 	mul.w	ip, r3, ip
 8018a00:	fa1f f888 	uxth.w	r8, r8
 8018a04:	930f      	str	r3, [sp, #60]	; 0x3c
 8018a06:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018a08:	fb08 cc0a 	mla	ip, r8, sl, ip
 8018a0c:	f892 a000 	ldrb.w	sl, [r2]
 8018a10:	fb01 cc0a 	mla	ip, r1, sl, ip
 8018a14:	f890 a000 	ldrb.w	sl, [r0]
 8018a18:	fb09 cc0a 	mla	ip, r9, sl, ip
 8018a1c:	f896 a000 	ldrb.w	sl, [r6]
 8018a20:	fb1a fa03 	smulbb	sl, sl, r3
 8018a24:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8018a28:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018a2a:	fb0c ac05 	mla	ip, ip, r5, sl
 8018a2e:	fa1f fc8c 	uxth.w	ip, ip
 8018a32:	f10c 0a01 	add.w	sl, ip, #1
 8018a36:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 8018a3a:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 8018a3e:	f886 a000 	strb.w	sl, [r6]
 8018a42:	f897 c001 	ldrb.w	ip, [r7, #1]
 8018a46:	f89e a001 	ldrb.w	sl, [lr, #1]
 8018a4a:	fb03 fc0c 	mul.w	ip, r3, ip
 8018a4e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018a50:	fb08 cc0a 	mla	ip, r8, sl, ip
 8018a54:	f892 a001 	ldrb.w	sl, [r2, #1]
 8018a58:	fb01 cc0a 	mla	ip, r1, sl, ip
 8018a5c:	f890 a001 	ldrb.w	sl, [r0, #1]
 8018a60:	fb09 cc0a 	mla	ip, r9, sl, ip
 8018a64:	f896 a001 	ldrb.w	sl, [r6, #1]
 8018a68:	fb1a fa03 	smulbb	sl, sl, r3
 8018a6c:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8018a70:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018a72:	fb0c ac05 	mla	ip, ip, r5, sl
 8018a76:	fa1f fc8c 	uxth.w	ip, ip
 8018a7a:	f10c 0a01 	add.w	sl, ip, #1
 8018a7e:	eb0a 2c1c 	add.w	ip, sl, ip, lsr #8
 8018a82:	ea4f 2c2c 	mov.w	ip, ip, asr #8
 8018a86:	f886 c001 	strb.w	ip, [r6, #1]
 8018a8a:	78bf      	ldrb	r7, [r7, #2]
 8018a8c:	f89e c002 	ldrb.w	ip, [lr, #2]
 8018a90:	437b      	muls	r3, r7
 8018a92:	fb08 330c 	mla	r3, r8, ip, r3
 8018a96:	f892 c002 	ldrb.w	ip, [r2, #2]
 8018a9a:	7882      	ldrb	r2, [r0, #2]
 8018a9c:	fb01 310c 	mla	r1, r1, ip, r3
 8018aa0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018aa2:	fb09 1902 	mla	r9, r9, r2, r1
 8018aa6:	78b1      	ldrb	r1, [r6, #2]
 8018aa8:	fb11 f103 	smulbb	r1, r1, r3
 8018aac:	f3c9 2907 	ubfx	r9, r9, #8, #8
 8018ab0:	fb09 1505 	mla	r5, r9, r5, r1
 8018ab4:	b2ad      	uxth	r5, r5
 8018ab6:	1c6b      	adds	r3, r5, #1
 8018ab8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8018abc:	122d      	asrs	r5, r5, #8
 8018abe:	70b5      	strb	r5, [r6, #2]
 8018ac0:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8018ac2:	3603      	adds	r6, #3
 8018ac4:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8018ac6:	f10b 3bff 	add.w	fp, fp, #4294967295
 8018aca:	4413      	add	r3, r2
 8018acc:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8018ace:	9325      	str	r3, [sp, #148]	; 0x94
 8018ad0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018ad2:	4413      	add	r3, r2
 8018ad4:	9326      	str	r3, [sp, #152]	; 0x98
 8018ad6:	e73b      	b.n	8018950 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbc>
 8018ad8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8018ada:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 8018adc:	4433      	add	r3, r6
 8018ade:	9e28      	ldr	r6, [sp, #160]	; 0xa0
 8018ae0:	9325      	str	r3, [sp, #148]	; 0x94
 8018ae2:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018ae4:	4433      	add	r3, r6
 8018ae6:	9326      	str	r3, [sp, #152]	; 0x98
 8018ae8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018aea:	3b01      	subs	r3, #1
 8018aec:	9309      	str	r3, [sp, #36]	; 0x24
 8018aee:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018af0:	3303      	adds	r3, #3
 8018af2:	930a      	str	r3, [sp, #40]	; 0x28
 8018af4:	e70d      	b.n	8018912 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8018af6:	d028      	beq.n	8018b4a <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8018af8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018afa:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8018afc:	3b01      	subs	r3, #1
 8018afe:	9d25      	ldr	r5, [sp, #148]	; 0x94
 8018b00:	fb00 5003 	mla	r0, r0, r3, r5
 8018b04:	1400      	asrs	r0, r0, #16
 8018b06:	f53f af21 	bmi.w	801894c <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8018b0a:	3901      	subs	r1, #1
 8018b0c:	4288      	cmp	r0, r1
 8018b0e:	f6bf af1d 	bge.w	801894c <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8018b12:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8018b14:	9826      	ldr	r0, [sp, #152]	; 0x98
 8018b16:	fb01 0303 	mla	r3, r1, r3, r0
 8018b1a:	141b      	asrs	r3, r3, #16
 8018b1c:	f53f af16 	bmi.w	801894c <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8018b20:	3a01      	subs	r2, #1
 8018b22:	4293      	cmp	r3, r2
 8018b24:	f6bf af12 	bge.w	801894c <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8018b28:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018b2a:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 8018b2e:	1cdf      	adds	r7, r3, #3
 8018b30:	f8bd a038 	ldrh.w	sl, [sp, #56]	; 0x38
 8018b34:	f1b9 0f00 	cmp.w	r9, #0
 8018b38:	dc73      	bgt.n	8018c22 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38e>
 8018b3a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018b3c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8018b3e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018b42:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8018b46:	441a      	add	r2, r3
 8018b48:	920a      	str	r2, [sp, #40]	; 0x28
 8018b4a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018b4c:	2b00      	cmp	r3, #0
 8018b4e:	f340 8129 	ble.w	8018da4 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8018b52:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018b56:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018b58:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8018b5c:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8018b60:	eef0 6a48 	vmov.f32	s13, s16
 8018b64:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8018b68:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8018b6c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018b70:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8018b74:	eef0 6a68 	vmov.f32	s13, s17
 8018b78:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018b7c:	edcd 6a26 	vstr	s13, [sp, #152]	; 0x98
 8018b80:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8018b84:	ee69 7a27 	vmul.f32	s15, s18, s15
 8018b88:	ee37 8a48 	vsub.f32	s16, s14, s16
 8018b8c:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8018b90:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8018b94:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8018b98:	ee18 2a10 	vmov	r2, s16
 8018b9c:	eeb0 8a47 	vmov.f32	s16, s14
 8018ba0:	fb92 f3f3 	sdiv	r3, r2, r3
 8018ba4:	ee18 2a90 	vmov	r2, s17
 8018ba8:	9327      	str	r3, [sp, #156]	; 0x9c
 8018baa:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018bac:	eef0 8a67 	vmov.f32	s17, s15
 8018bb0:	fb92 f3f3 	sdiv	r3, r2, r3
 8018bb4:	9328      	str	r3, [sp, #160]	; 0xa0
 8018bb6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018bb8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018bba:	3b01      	subs	r3, #1
 8018bbc:	930d      	str	r3, [sp, #52]	; 0x34
 8018bbe:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018bc0:	bf08      	it	eq
 8018bc2:	4613      	moveq	r3, r2
 8018bc4:	9309      	str	r3, [sp, #36]	; 0x24
 8018bc6:	e696      	b.n	80188f6 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8018bc8:	b149      	cbz	r1, 8018bde <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34a>
 8018bca:	5caa      	ldrb	r2, [r5, r2]
 8018bcc:	4670      	mov	r0, lr
 8018bce:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8018bd2:	4422      	add	r2, r4
 8018bd4:	4677      	mov	r7, lr
 8018bd6:	e6fb      	b.n	80189d0 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13c>
 8018bd8:	4670      	mov	r0, lr
 8018bda:	4672      	mov	r2, lr
 8018bdc:	e6f8      	b.n	80189d0 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13c>
 8018bde:	4670      	mov	r0, lr
 8018be0:	4672      	mov	r2, lr
 8018be2:	e7f7      	b.n	8018bd4 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x340>
 8018be4:	f110 0c01 	adds.w	ip, r0, #1
 8018be8:	f53f af6a 	bmi.w	8018ac0 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8018bec:	4562      	cmp	r2, ip
 8018bee:	f6ff af67 	blt.w	8018ac0 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8018bf2:	f115 0c01 	adds.w	ip, r5, #1
 8018bf6:	f53f af63 	bmi.w	8018ac0 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8018bfa:	4567      	cmp	r7, ip
 8018bfc:	f6ff af60 	blt.w	8018ac0 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8018c00:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018c02:	b23f      	sxth	r7, r7
 8018c04:	b212      	sxth	r2, r2
 8018c06:	9002      	str	r0, [sp, #8]
 8018c08:	9701      	str	r7, [sp, #4]
 8018c0a:	9200      	str	r2, [sp, #0]
 8018c0c:	9811      	ldr	r0, [sp, #68]	; 0x44
 8018c0e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8018c10:	e9cd 1305 	strd	r1, r3, [sp, #20]
 8018c14:	e9cd 5803 	strd	r5, r8, [sp, #12]
 8018c18:	4623      	mov	r3, r4
 8018c1a:	4631      	mov	r1, r6
 8018c1c:	f7ff fd4c 	bl	80186b8 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh>
 8018c20:	e74e      	b.n	8018ac0 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8018c22:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8018c24:	9826      	ldr	r0, [sp, #152]	; 0x98
 8018c26:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8018c2a:	9d25      	ldr	r5, [sp, #148]	; 0x94
 8018c2c:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8018c2e:	1400      	asrs	r0, r0, #16
 8018c30:	142d      	asrs	r5, r5, #16
 8018c32:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8018c34:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8018c38:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8018c3c:	fb02 5000 	mla	r0, r2, r0, r5
 8018c40:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8018c42:	f815 e000 	ldrb.w	lr, [r5, r0]
 8018c46:	eb05 0c00 	add.w	ip, r5, r0
 8018c4a:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8018c4e:	eb04 060e 	add.w	r6, r4, lr
 8018c52:	2b00      	cmp	r3, #0
 8018c54:	f000 8097 	beq.w	8018d86 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f2>
 8018c58:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8018c5c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8018c60:	4425      	add	r5, r4
 8018c62:	2900      	cmp	r1, #0
 8018c64:	f000 8098 	beq.w	8018d98 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 8018c68:	eb0c 0002 	add.w	r0, ip, r2
 8018c6c:	f81c 2002 	ldrb.w	r2, [ip, r2]
 8018c70:	7840      	ldrb	r0, [r0, #1]
 8018c72:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8018c76:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8018c7a:	4422      	add	r2, r4
 8018c7c:	4420      	add	r0, r4
 8018c7e:	b29b      	uxth	r3, r3
 8018c80:	f814 b00e 	ldrb.w	fp, [r4, lr]
 8018c84:	b289      	uxth	r1, r1
 8018c86:	f895 e000 	ldrb.w	lr, [r5]
 8018c8a:	3703      	adds	r7, #3
 8018c8c:	f109 39ff 	add.w	r9, r9, #4294967295
 8018c90:	fb03 f801 	mul.w	r8, r3, r1
 8018c94:	011b      	lsls	r3, r3, #4
 8018c96:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 8018c9a:	f5c3 7c80 	rsb	ip, r3, #256	; 0x100
 8018c9e:	eba3 0308 	sub.w	r3, r3, r8
 8018ca2:	b289      	uxth	r1, r1
 8018ca4:	b29b      	uxth	r3, r3
 8018ca6:	ebac 0c01 	sub.w	ip, ip, r1
 8018caa:	fb03 fe0e 	mul.w	lr, r3, lr
 8018cae:	fa1f fc8c 	uxth.w	ip, ip
 8018cb2:	930f      	str	r3, [sp, #60]	; 0x3c
 8018cb4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018cb6:	fb0c ee0b 	mla	lr, ip, fp, lr
 8018cba:	f892 b000 	ldrb.w	fp, [r2]
 8018cbe:	fb01 ee0b 	mla	lr, r1, fp, lr
 8018cc2:	f890 b000 	ldrb.w	fp, [r0]
 8018cc6:	fb08 ee0b 	mla	lr, r8, fp, lr
 8018cca:	f817 bc06 	ldrb.w	fp, [r7, #-6]
 8018cce:	fb1b fb03 	smulbb	fp, fp, r3
 8018cd2:	f3ce 2e07 	ubfx	lr, lr, #8, #8
 8018cd6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018cd8:	fb0e be0a 	mla	lr, lr, sl, fp
 8018cdc:	fa1f fe8e 	uxth.w	lr, lr
 8018ce0:	f10e 0b01 	add.w	fp, lr, #1
 8018ce4:	eb0b 2e1e 	add.w	lr, fp, lr, lsr #8
 8018ce8:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 8018cec:	f807 ec06 	strb.w	lr, [r7, #-6]
 8018cf0:	f895 e001 	ldrb.w	lr, [r5, #1]
 8018cf4:	f896 b001 	ldrb.w	fp, [r6, #1]
 8018cf8:	fb03 fe0e 	mul.w	lr, r3, lr
 8018cfc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018cfe:	fb0c ee0b 	mla	lr, ip, fp, lr
 8018d02:	f892 b001 	ldrb.w	fp, [r2, #1]
 8018d06:	fb01 ee0b 	mla	lr, r1, fp, lr
 8018d0a:	f890 b001 	ldrb.w	fp, [r0, #1]
 8018d0e:	fb08 ee0b 	mla	lr, r8, fp, lr
 8018d12:	f817 bc05 	ldrb.w	fp, [r7, #-5]
 8018d16:	fb1b fb03 	smulbb	fp, fp, r3
 8018d1a:	f3ce 2e07 	ubfx	lr, lr, #8, #8
 8018d1e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018d20:	fb0e be0a 	mla	lr, lr, sl, fp
 8018d24:	fa1f fe8e 	uxth.w	lr, lr
 8018d28:	f10e 0b01 	add.w	fp, lr, #1
 8018d2c:	eb0b 2e1e 	add.w	lr, fp, lr, lsr #8
 8018d30:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 8018d34:	f807 ec05 	strb.w	lr, [r7, #-5]
 8018d38:	78ad      	ldrb	r5, [r5, #2]
 8018d3a:	78b6      	ldrb	r6, [r6, #2]
 8018d3c:	436b      	muls	r3, r5
 8018d3e:	7895      	ldrb	r5, [r2, #2]
 8018d40:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8018d42:	fb0c 3306 	mla	r3, ip, r6, r3
 8018d46:	fb01 3305 	mla	r3, r1, r5, r3
 8018d4a:	7885      	ldrb	r5, [r0, #2]
 8018d4c:	fb08 3805 	mla	r8, r8, r5, r3
 8018d50:	f817 3c04 	ldrb.w	r3, [r7, #-4]
 8018d54:	fb13 f302 	smulbb	r3, r3, r2
 8018d58:	f3c8 2807 	ubfx	r8, r8, #8, #8
 8018d5c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8018d5e:	fb08 380a 	mla	r8, r8, sl, r3
 8018d62:	fa1f f888 	uxth.w	r8, r8
 8018d66:	f108 0301 	add.w	r3, r8, #1
 8018d6a:	eb03 2818 	add.w	r8, r3, r8, lsr #8
 8018d6e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8018d70:	4413      	add	r3, r2
 8018d72:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8018d74:	ea4f 2828 	mov.w	r8, r8, asr #8
 8018d78:	9325      	str	r3, [sp, #148]	; 0x94
 8018d7a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018d7c:	f807 8c04 	strb.w	r8, [r7, #-4]
 8018d80:	4413      	add	r3, r2
 8018d82:	9326      	str	r3, [sp, #152]	; 0x98
 8018d84:	e6d6      	b.n	8018b34 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8018d86:	b151      	cbz	r1, 8018d9e <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50a>
 8018d88:	f81c 2002 	ldrb.w	r2, [ip, r2]
 8018d8c:	4630      	mov	r0, r6
 8018d8e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8018d92:	4422      	add	r2, r4
 8018d94:	4635      	mov	r5, r6
 8018d96:	e772      	b.n	8018c7e <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8018d98:	4630      	mov	r0, r6
 8018d9a:	4632      	mov	r2, r6
 8018d9c:	e76f      	b.n	8018c7e <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8018d9e:	4630      	mov	r0, r6
 8018da0:	4632      	mov	r2, r6
 8018da2:	e7f7      	b.n	8018d94 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x500>
 8018da4:	b013      	add	sp, #76	; 0x4c
 8018da6:	ecbd 8b08 	vpop	{d8-d11}
 8018daa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08018db0 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh>:
 8018db0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018db4:	784d      	ldrb	r5, [r1, #1]
 8018db6:	f891 9002 	ldrb.w	r9, [r1, #2]
 8018dba:	022d      	lsls	r5, r5, #8
 8018dbc:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 8018dc0:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 8018dc4:	ea45 4509 	orr.w	r5, r5, r9, lsl #16
 8018dc8:	f891 9000 	ldrb.w	r9, [r1]
 8018dcc:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 8018dd0:	ea45 0509 	orr.w	r5, r5, r9
 8018dd4:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
 8018dd8:	e9dd 460e 	ldrd	r4, r6, [sp, #56]	; 0x38
 8018ddc:	9501      	str	r5, [sp, #4]
 8018dde:	fb06 470c 	mla	r7, r6, ip, r4
 8018de2:	2e00      	cmp	r6, #0
 8018de4:	eb02 0e07 	add.w	lr, r2, r7
 8018de8:	db46      	blt.n	8018e78 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0xc8>
 8018dea:	45b0      	cmp	r8, r6
 8018dec:	dd44      	ble.n	8018e78 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0xc8>
 8018dee:	2c00      	cmp	r4, #0
 8018df0:	db40      	blt.n	8018e74 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0xc4>
 8018df2:	45a4      	cmp	ip, r4
 8018df4:	dd3e      	ble.n	8018e74 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0xc4>
 8018df6:	5dd7      	ldrb	r7, [r2, r7]
 8018df8:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8018dfc:	441f      	add	r7, r3
 8018dfe:	1c62      	adds	r2, r4, #1
 8018e00:	d43d      	bmi.n	8018e7e <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0xce>
 8018e02:	4594      	cmp	ip, r2
 8018e04:	dd3b      	ble.n	8018e7e <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0xce>
 8018e06:	f1ba 0f00 	cmp.w	sl, #0
 8018e0a:	d038      	beq.n	8018e7e <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0xce>
 8018e0c:	f89e 5001 	ldrb.w	r5, [lr, #1]
 8018e10:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8018e14:	441d      	add	r5, r3
 8018e16:	3601      	adds	r6, #1
 8018e18:	d435      	bmi.n	8018e86 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0xd6>
 8018e1a:	45b0      	cmp	r8, r6
 8018e1c:	dd33      	ble.n	8018e86 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0xd6>
 8018e1e:	b390      	cbz	r0, 8018e86 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0xd6>
 8018e20:	2c00      	cmp	r4, #0
 8018e22:	db2e      	blt.n	8018e82 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0xd2>
 8018e24:	45a4      	cmp	ip, r4
 8018e26:	dd2c      	ble.n	8018e82 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0xd2>
 8018e28:	f81e 600c 	ldrb.w	r6, [lr, ip]
 8018e2c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8018e30:	441e      	add	r6, r3
 8018e32:	1c62      	adds	r2, r4, #1
 8018e34:	d42a      	bmi.n	8018e8c <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0xdc>
 8018e36:	4594      	cmp	ip, r2
 8018e38:	dd28      	ble.n	8018e8c <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0xdc>
 8018e3a:	f1ba 0f00 	cmp.w	sl, #0
 8018e3e:	d025      	beq.n	8018e8c <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0xdc>
 8018e40:	44f4      	add	ip, lr
 8018e42:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8018e46:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8018e4a:	4413      	add	r3, r2
 8018e4c:	f1ba 0f0f 	cmp.w	sl, #15
 8018e50:	f897 8000 	ldrb.w	r8, [r7]
 8018e54:	f895 9000 	ldrb.w	r9, [r5]
 8018e58:	f896 e000 	ldrb.w	lr, [r6]
 8018e5c:	f893 c000 	ldrb.w	ip, [r3]
 8018e60:	d801      	bhi.n	8018e66 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0xb6>
 8018e62:	280f      	cmp	r0, #15
 8018e64:	d914      	bls.n	8018e90 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0xe0>
 8018e66:	4b29      	ldr	r3, [pc, #164]	; (8018f0c <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x15c>)
 8018e68:	f240 115b 	movw	r1, #347	; 0x15b
 8018e6c:	4a28      	ldr	r2, [pc, #160]	; (8018f10 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x160>)
 8018e6e:	4829      	ldr	r0, [pc, #164]	; (8018f14 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x164>)
 8018e70:	f007 f8b6 	bl	801ffe0 <__assert_func>
 8018e74:	af01      	add	r7, sp, #4
 8018e76:	e7c2      	b.n	8018dfe <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x4e>
 8018e78:	ad01      	add	r5, sp, #4
 8018e7a:	462f      	mov	r7, r5
 8018e7c:	e7cb      	b.n	8018e16 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x66>
 8018e7e:	ad01      	add	r5, sp, #4
 8018e80:	e7c9      	b.n	8018e16 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x66>
 8018e82:	ae01      	add	r6, sp, #4
 8018e84:	e7d5      	b.n	8018e32 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x82>
 8018e86:	ab01      	add	r3, sp, #4
 8018e88:	461e      	mov	r6, r3
 8018e8a:	e7df      	b.n	8018e4c <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x9c>
 8018e8c:	ab01      	add	r3, sp, #4
 8018e8e:	e7dd      	b.n	8018e4c <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x9c>
 8018e90:	fa1f f48a 	uxth.w	r4, sl
 8018e94:	b280      	uxth	r0, r0
 8018e96:	fb04 fa00 	mul.w	sl, r4, r0
 8018e9a:	0124      	lsls	r4, r4, #4
 8018e9c:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 8018ea0:	f5c4 7b80 	rsb	fp, r4, #256	; 0x100
 8018ea4:	b282      	uxth	r2, r0
 8018ea6:	eba4 000a 	sub.w	r0, r4, sl
 8018eaa:	ebab 0b02 	sub.w	fp, fp, r2
 8018eae:	b280      	uxth	r0, r0
 8018eb0:	fa1f fb8b 	uxth.w	fp, fp
 8018eb4:	fb00 f909 	mul.w	r9, r0, r9
 8018eb8:	fb0b 9808 	mla	r8, fp, r8, r9
 8018ebc:	fb02 8e0e 	mla	lr, r2, lr, r8
 8018ec0:	fb0a ec0c 	mla	ip, sl, ip, lr
 8018ec4:	ea4f 2c2c 	mov.w	ip, ip, asr #8
 8018ec8:	f881 c000 	strb.w	ip, [r1]
 8018ecc:	786c      	ldrb	r4, [r5, #1]
 8018ece:	f897 c001 	ldrb.w	ip, [r7, #1]
 8018ed2:	4344      	muls	r4, r0
 8018ed4:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8018ed8:	7874      	ldrb	r4, [r6, #1]
 8018eda:	fb02 cc04 	mla	ip, r2, r4, ip
 8018ede:	785c      	ldrb	r4, [r3, #1]
 8018ee0:	fb0a c404 	mla	r4, sl, r4, ip
 8018ee4:	1224      	asrs	r4, r4, #8
 8018ee6:	704c      	strb	r4, [r1, #1]
 8018ee8:	78ad      	ldrb	r5, [r5, #2]
 8018eea:	78bc      	ldrb	r4, [r7, #2]
 8018eec:	4368      	muls	r0, r5
 8018eee:	fb0b 0b04 	mla	fp, fp, r4, r0
 8018ef2:	78b0      	ldrb	r0, [r6, #2]
 8018ef4:	fb02 b000 	mla	r0, r2, r0, fp
 8018ef8:	789a      	ldrb	r2, [r3, #2]
 8018efa:	fb0a 0a02 	mla	sl, sl, r2, r0
 8018efe:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 8018f02:	f881 a002 	strb.w	sl, [r1, #2]
 8018f06:	b003      	add	sp, #12
 8018f08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018f0c:	08025314 	.word	0x08025314
 8018f10:	0802572a 	.word	0x0802572a
 8018f14:	080252e1 	.word	0x080252e1

08018f18 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018f18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018f1c:	ed2d 8b0a 	vpush	{d8-d12}
 8018f20:	b08d      	sub	sp, #52	; 0x34
 8018f22:	eeb0 aa40 	vmov.f32	s20, s0
 8018f26:	eef0 9a60 	vmov.f32	s19, s1
 8018f2a:	900b      	str	r0, [sp, #44]	; 0x2c
 8018f2c:	eeb0 9a41 	vmov.f32	s18, s2
 8018f30:	9306      	str	r3, [sp, #24]
 8018f32:	eeb0 8a62 	vmov.f32	s16, s5
 8018f36:	eef0 8a43 	vmov.f32	s17, s6
 8018f3a:	9c21      	ldr	r4, [sp, #132]	; 0x84
 8018f3c:	eeb0 ca44 	vmov.f32	s24, s8
 8018f40:	eef0 ba64 	vmov.f32	s23, s9
 8018f44:	eeb0 ba45 	vmov.f32	s22, s10
 8018f48:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 8018f4c:	e9cd 1209 	strd	r1, r2, [sp, #36]	; 0x24
 8018f50:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8018f52:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8018f56:	6850      	ldr	r0, [r2, #4]
 8018f58:	6812      	ldr	r2, [r2, #0]
 8018f5a:	fb00 1303 	mla	r3, r0, r3, r1
 8018f5e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8018f62:	18d3      	adds	r3, r2, r3
 8018f64:	9307      	str	r3, [sp, #28]
 8018f66:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018f68:	681b      	ldr	r3, [r3, #0]
 8018f6a:	9308      	str	r3, [sp, #32]
 8018f6c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018f6e:	685d      	ldr	r5, [r3, #4]
 8018f70:	3504      	adds	r5, #4
 8018f72:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018f74:	2b00      	cmp	r3, #0
 8018f76:	dc03      	bgt.n	8018f80 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8018f78:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018f7a:	2b00      	cmp	r3, #0
 8018f7c:	f340 81e6 	ble.w	801934c <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x434>
 8018f80:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018f82:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018f86:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8018f8a:	1e48      	subs	r0, r1, #1
 8018f8c:	1e56      	subs	r6, r2, #1
 8018f8e:	9b06      	ldr	r3, [sp, #24]
 8018f90:	2b00      	cmp	r3, #0
 8018f92:	f340 80bd 	ble.w	8019110 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 8018f96:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8018f98:	1427      	asrs	r7, r4, #16
 8018f9a:	ea4f 4323 	mov.w	r3, r3, asr #16
 8018f9e:	d406      	bmi.n	8018fae <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8018fa0:	4287      	cmp	r7, r0
 8018fa2:	da04      	bge.n	8018fae <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8018fa4:	2b00      	cmp	r3, #0
 8018fa6:	db02      	blt.n	8018fae <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8018fa8:	42b3      	cmp	r3, r6
 8018faa:	f2c0 80b2 	blt.w	8019112 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8018fae:	3701      	adds	r7, #1
 8018fb0:	f100 80a1 	bmi.w	80190f6 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8018fb4:	42b9      	cmp	r1, r7
 8018fb6:	f2c0 809e 	blt.w	80190f6 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8018fba:	3301      	adds	r3, #1
 8018fbc:	f100 809b 	bmi.w	80190f6 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8018fc0:	429a      	cmp	r2, r3
 8018fc2:	f2c0 8098 	blt.w	80190f6 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8018fc6:	e9dd b606 	ldrd	fp, r6, [sp, #24]
 8018fca:	f1bb 0f00 	cmp.w	fp, #0
 8018fce:	f340 80bf 	ble.w	8019150 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8018fd2:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8018fd4:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8018fd6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8018fd8:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8018fdc:	f8d0 c00c 	ldr.w	ip, [r0, #12]
 8018fe0:	1420      	asrs	r0, r4, #16
 8018fe2:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8018fe4:	ea4f 4723 	mov.w	r7, r3, asr #16
 8018fe8:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8018fec:	6892      	ldr	r2, [r2, #8]
 8018fee:	f100 8103 	bmi.w	80191f8 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8018ff2:	f102 3eff 	add.w	lr, r2, #4294967295
 8018ff6:	4570      	cmp	r0, lr
 8018ff8:	f280 80fe 	bge.w	80191f8 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8018ffc:	2f00      	cmp	r7, #0
 8018ffe:	f2c0 80fb 	blt.w	80191f8 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8019002:	f10c 3eff 	add.w	lr, ip, #4294967295
 8019006:	4577      	cmp	r7, lr
 8019008:	f280 80f6 	bge.w	80191f8 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801900c:	b212      	sxth	r2, r2
 801900e:	fb07 0002 	mla	r0, r7, r2, r0
 8019012:	9f08      	ldr	r7, [sp, #32]
 8019014:	f817 8000 	ldrb.w	r8, [r7, r0]
 8019018:	eb07 0e00 	add.w	lr, r7, r0
 801901c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8019020:	eb05 0c08 	add.w	ip, r5, r8
 8019024:	2b00      	cmp	r3, #0
 8019026:	f000 80d8 	beq.w	80191da <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c2>
 801902a:	f89e 7001 	ldrb.w	r7, [lr, #1]
 801902e:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8019032:	442f      	add	r7, r5
 8019034:	2900      	cmp	r1, #0
 8019036:	f000 80d9 	beq.w	80191ec <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 801903a:	eb0e 0002 	add.w	r0, lr, r2
 801903e:	f81e 2002 	ldrb.w	r2, [lr, r2]
 8019042:	7840      	ldrb	r0, [r0, #1]
 8019044:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019048:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801904c:	442a      	add	r2, r5
 801904e:	4428      	add	r0, r5
 8019050:	b29b      	uxth	r3, r3
 8019052:	f815 a008 	ldrb.w	sl, [r5, r8]
 8019056:	b289      	uxth	r1, r1
 8019058:	f897 8000 	ldrb.w	r8, [r7]
 801905c:	fb03 f901 	mul.w	r9, r3, r1
 8019060:	011b      	lsls	r3, r3, #4
 8019062:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8019066:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801906a:	eba3 0309 	sub.w	r3, r3, r9
 801906e:	b289      	uxth	r1, r1
 8019070:	b29b      	uxth	r3, r3
 8019072:	ebae 0e01 	sub.w	lr, lr, r1
 8019076:	fb03 f808 	mul.w	r8, r3, r8
 801907a:	fa1f fe8e 	uxth.w	lr, lr
 801907e:	fb0e 880a 	mla	r8, lr, sl, r8
 8019082:	f892 a000 	ldrb.w	sl, [r2]
 8019086:	fb01 880a 	mla	r8, r1, sl, r8
 801908a:	f890 a000 	ldrb.w	sl, [r0]
 801908e:	fb09 880a 	mla	r8, r9, sl, r8
 8019092:	ea4f 2828 	mov.w	r8, r8, asr #8
 8019096:	f886 8000 	strb.w	r8, [r6]
 801909a:	f897 8001 	ldrb.w	r8, [r7, #1]
 801909e:	f89c a001 	ldrb.w	sl, [ip, #1]
 80190a2:	fb03 f808 	mul.w	r8, r3, r8
 80190a6:	fb0e 880a 	mla	r8, lr, sl, r8
 80190aa:	f892 a001 	ldrb.w	sl, [r2, #1]
 80190ae:	fb01 880a 	mla	r8, r1, sl, r8
 80190b2:	f890 a001 	ldrb.w	sl, [r0, #1]
 80190b6:	fb09 880a 	mla	r8, r9, sl, r8
 80190ba:	ea4f 2828 	mov.w	r8, r8, asr #8
 80190be:	f886 8001 	strb.w	r8, [r6, #1]
 80190c2:	78bf      	ldrb	r7, [r7, #2]
 80190c4:	f89c c002 	ldrb.w	ip, [ip, #2]
 80190c8:	437b      	muls	r3, r7
 80190ca:	7892      	ldrb	r2, [r2, #2]
 80190cc:	fb0e 330c 	mla	r3, lr, ip, r3
 80190d0:	fb01 3102 	mla	r1, r1, r2, r3
 80190d4:	7882      	ldrb	r2, [r0, #2]
 80190d6:	fb09 1902 	mla	r9, r9, r2, r1
 80190da:	ea4f 2929 	mov.w	r9, r9, asr #8
 80190de:	f886 9002 	strb.w	r9, [r6, #2]
 80190e2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80190e4:	3603      	adds	r6, #3
 80190e6:	9a24      	ldr	r2, [sp, #144]	; 0x90
 80190e8:	f10b 3bff 	add.w	fp, fp, #4294967295
 80190ec:	441c      	add	r4, r3
 80190ee:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80190f0:	4413      	add	r3, r2
 80190f2:	9322      	str	r3, [sp, #136]	; 0x88
 80190f4:	e769      	b.n	8018fca <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80190f6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80190f8:	9f24      	ldr	r7, [sp, #144]	; 0x90
 80190fa:	441c      	add	r4, r3
 80190fc:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80190fe:	443b      	add	r3, r7
 8019100:	9322      	str	r3, [sp, #136]	; 0x88
 8019102:	9b06      	ldr	r3, [sp, #24]
 8019104:	3b01      	subs	r3, #1
 8019106:	9306      	str	r3, [sp, #24]
 8019108:	9b07      	ldr	r3, [sp, #28]
 801910a:	3303      	adds	r3, #3
 801910c:	9307      	str	r3, [sp, #28]
 801910e:	e73e      	b.n	8018f8e <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019110:	d026      	beq.n	8019160 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8019112:	9b06      	ldr	r3, [sp, #24]
 8019114:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8019116:	3b01      	subs	r3, #1
 8019118:	fb00 4003 	mla	r0, r0, r3, r4
 801911c:	1400      	asrs	r0, r0, #16
 801911e:	f53f af52 	bmi.w	8018fc6 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8019122:	3901      	subs	r1, #1
 8019124:	4288      	cmp	r0, r1
 8019126:	f6bf af4e 	bge.w	8018fc6 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801912a:	9924      	ldr	r1, [sp, #144]	; 0x90
 801912c:	9822      	ldr	r0, [sp, #136]	; 0x88
 801912e:	fb01 0303 	mla	r3, r1, r3, r0
 8019132:	141b      	asrs	r3, r3, #16
 8019134:	f53f af47 	bmi.w	8018fc6 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8019138:	3a01      	subs	r2, #1
 801913a:	4293      	cmp	r3, r2
 801913c:	f6bf af43 	bge.w	8018fc6 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8019140:	9b07      	ldr	r3, [sp, #28]
 8019142:	f8dd a018 	ldr.w	sl, [sp, #24]
 8019146:	f103 0803 	add.w	r8, r3, #3
 801914a:	f1ba 0f00 	cmp.w	sl, #0
 801914e:	dc71      	bgt.n	8019234 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8019150:	9b06      	ldr	r3, [sp, #24]
 8019152:	9a07      	ldr	r2, [sp, #28]
 8019154:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019158:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801915c:	441a      	add	r2, r3
 801915e:	9207      	str	r2, [sp, #28]
 8019160:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019162:	2b00      	cmp	r3, #0
 8019164:	f340 80f2 	ble.w	801934c <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x434>
 8019168:	ee3a aa0c 	vadd.f32	s20, s20, s24
 801916c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801916e:	ee79 9aab 	vadd.f32	s19, s19, s23
 8019172:	eef0 6a48 	vmov.f32	s13, s16
 8019176:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 801917a:	ee39 9a0b 	vadd.f32	s18, s18, s22
 801917e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019182:	ee16 4a90 	vmov	r4, s13
 8019186:	eef0 6a68 	vmov.f32	s13, s17
 801918a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801918e:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 8019192:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8019196:	ee69 7a27 	vmul.f32	s15, s18, s15
 801919a:	ee37 8a48 	vsub.f32	s16, s14, s16
 801919e:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80191a2:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80191a6:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80191aa:	ee18 2a10 	vmov	r2, s16
 80191ae:	eeb0 8a47 	vmov.f32	s16, s14
 80191b2:	fb92 f3f3 	sdiv	r3, r2, r3
 80191b6:	ee18 2a90 	vmov	r2, s17
 80191ba:	9323      	str	r3, [sp, #140]	; 0x8c
 80191bc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80191be:	eef0 8a67 	vmov.f32	s17, s15
 80191c2:	fb92 f3f3 	sdiv	r3, r2, r3
 80191c6:	9324      	str	r3, [sp, #144]	; 0x90
 80191c8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80191ca:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80191cc:	3b01      	subs	r3, #1
 80191ce:	9309      	str	r3, [sp, #36]	; 0x24
 80191d0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80191d2:	bf08      	it	eq
 80191d4:	4613      	moveq	r3, r2
 80191d6:	9306      	str	r3, [sp, #24]
 80191d8:	e6cb      	b.n	8018f72 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 80191da:	b151      	cbz	r1, 80191f2 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 80191dc:	f81e 2002 	ldrb.w	r2, [lr, r2]
 80191e0:	4660      	mov	r0, ip
 80191e2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80191e6:	442a      	add	r2, r5
 80191e8:	4667      	mov	r7, ip
 80191ea:	e731      	b.n	8019050 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 80191ec:	4660      	mov	r0, ip
 80191ee:	4662      	mov	r2, ip
 80191f0:	e72e      	b.n	8019050 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 80191f2:	4660      	mov	r0, ip
 80191f4:	4662      	mov	r2, ip
 80191f6:	e7f7      	b.n	80191e8 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d0>
 80191f8:	f110 0e01 	adds.w	lr, r0, #1
 80191fc:	f53f af71 	bmi.w	80190e2 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8019200:	4572      	cmp	r2, lr
 8019202:	f6ff af6e 	blt.w	80190e2 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8019206:	f117 0e01 	adds.w	lr, r7, #1
 801920a:	f53f af6a 	bmi.w	80190e2 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 801920e:	45f4      	cmp	ip, lr
 8019210:	f6ff af67 	blt.w	80190e2 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8019214:	b212      	sxth	r2, r2
 8019216:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801921a:	fa0f f38c 	sxth.w	r3, ip
 801921e:	9200      	str	r2, [sp, #0]
 8019220:	4631      	mov	r1, r6
 8019222:	9a08      	ldr	r2, [sp, #32]
 8019224:	9301      	str	r3, [sp, #4]
 8019226:	462b      	mov	r3, r5
 8019228:	e9cd 0702 	strd	r0, r7, [sp, #8]
 801922c:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801922e:	f7ff fdbf 	bl	8018db0 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh>
 8019232:	e756      	b.n	80190e2 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8019234:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8019236:	1426      	asrs	r6, r4, #16
 8019238:	9822      	ldr	r0, [sp, #136]	; 0x88
 801923a:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801923e:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8019242:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8019244:	1400      	asrs	r0, r0, #16
 8019246:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801924a:	fb02 6000 	mla	r0, r2, r0, r6
 801924e:	9e08      	ldr	r6, [sp, #32]
 8019250:	f816 e000 	ldrb.w	lr, [r6, r0]
 8019254:	eb06 0c00 	add.w	ip, r6, r0
 8019258:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801925c:	eb05 070e 	add.w	r7, r5, lr
 8019260:	2b00      	cmp	r3, #0
 8019262:	d064      	beq.n	801932e <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x416>
 8019264:	f89c 6001 	ldrb.w	r6, [ip, #1]
 8019268:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801926c:	442e      	add	r6, r5
 801926e:	2900      	cmp	r1, #0
 8019270:	d066      	beq.n	8019340 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x428>
 8019272:	eb0c 0002 	add.w	r0, ip, r2
 8019276:	f81c 2002 	ldrb.w	r2, [ip, r2]
 801927a:	7840      	ldrb	r0, [r0, #1]
 801927c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019280:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8019284:	442a      	add	r2, r5
 8019286:	4428      	add	r0, r5
 8019288:	b29b      	uxth	r3, r3
 801928a:	f815 b00e 	ldrb.w	fp, [r5, lr]
 801928e:	b289      	uxth	r1, r1
 8019290:	f896 e000 	ldrb.w	lr, [r6]
 8019294:	f108 0803 	add.w	r8, r8, #3
 8019298:	f10a 3aff 	add.w	sl, sl, #4294967295
 801929c:	fb03 f901 	mul.w	r9, r3, r1
 80192a0:	011b      	lsls	r3, r3, #4
 80192a2:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80192a6:	f5c3 7c80 	rsb	ip, r3, #256	; 0x100
 80192aa:	eba3 0309 	sub.w	r3, r3, r9
 80192ae:	b289      	uxth	r1, r1
 80192b0:	b29b      	uxth	r3, r3
 80192b2:	ebac 0c01 	sub.w	ip, ip, r1
 80192b6:	fb03 fe0e 	mul.w	lr, r3, lr
 80192ba:	fa1f fc8c 	uxth.w	ip, ip
 80192be:	fb0c ee0b 	mla	lr, ip, fp, lr
 80192c2:	f892 b000 	ldrb.w	fp, [r2]
 80192c6:	fb01 ee0b 	mla	lr, r1, fp, lr
 80192ca:	f890 b000 	ldrb.w	fp, [r0]
 80192ce:	fb09 ee0b 	mla	lr, r9, fp, lr
 80192d2:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 80192d6:	f808 ec06 	strb.w	lr, [r8, #-6]
 80192da:	f896 e001 	ldrb.w	lr, [r6, #1]
 80192de:	f897 b001 	ldrb.w	fp, [r7, #1]
 80192e2:	fb03 fe0e 	mul.w	lr, r3, lr
 80192e6:	fb0c ee0b 	mla	lr, ip, fp, lr
 80192ea:	f892 b001 	ldrb.w	fp, [r2, #1]
 80192ee:	fb01 ee0b 	mla	lr, r1, fp, lr
 80192f2:	f890 b001 	ldrb.w	fp, [r0, #1]
 80192f6:	fb09 ee0b 	mla	lr, r9, fp, lr
 80192fa:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 80192fe:	f808 ec05 	strb.w	lr, [r8, #-5]
 8019302:	78b6      	ldrb	r6, [r6, #2]
 8019304:	78bf      	ldrb	r7, [r7, #2]
 8019306:	4373      	muls	r3, r6
 8019308:	7896      	ldrb	r6, [r2, #2]
 801930a:	7882      	ldrb	r2, [r0, #2]
 801930c:	fb0c 3307 	mla	r3, ip, r7, r3
 8019310:	fb01 3306 	mla	r3, r1, r6, r3
 8019314:	fb09 3902 	mla	r9, r9, r2, r3
 8019318:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801931a:	9a24      	ldr	r2, [sp, #144]	; 0x90
 801931c:	441c      	add	r4, r3
 801931e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8019320:	ea4f 2929 	mov.w	r9, r9, asr #8
 8019324:	4413      	add	r3, r2
 8019326:	f808 9c04 	strb.w	r9, [r8, #-4]
 801932a:	9322      	str	r3, [sp, #136]	; 0x88
 801932c:	e70d      	b.n	801914a <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 801932e:	b151      	cbz	r1, 8019346 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 8019330:	f81c 2002 	ldrb.w	r2, [ip, r2]
 8019334:	4638      	mov	r0, r7
 8019336:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801933a:	442a      	add	r2, r5
 801933c:	463e      	mov	r6, r7
 801933e:	e7a3      	b.n	8019288 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8019340:	4638      	mov	r0, r7
 8019342:	463a      	mov	r2, r7
 8019344:	e7a0      	b.n	8019288 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8019346:	4638      	mov	r0, r7
 8019348:	463a      	mov	r2, r7
 801934a:	e7f7      	b.n	801933c <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x424>
 801934c:	b00d      	add	sp, #52	; 0x34
 801934e:	ecbd 8b0a 	vpop	{d8-d12}
 8019352:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08019358 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh>:
 8019358:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801935c:	e9dd 050e 	ldrd	r0, r5, [sp, #56]	; 0x38
 8019360:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 8019364:	2d00      	cmp	r5, #0
 8019366:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801936a:	fb05 040e 	mla	r4, r5, lr, r0
 801936e:	f89d 7040 	ldrb.w	r7, [sp, #64]	; 0x40
 8019372:	f89d c044 	ldrb.w	ip, [sp, #68]	; 0x44
 8019376:	eb02 0804 	add.w	r8, r2, r4
 801937a:	db40      	blt.n	80193fe <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0xa6>
 801937c:	45a9      	cmp	r9, r5
 801937e:	dd3e      	ble.n	80193fe <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0xa6>
 8019380:	2800      	cmp	r0, #0
 8019382:	db3a      	blt.n	80193fa <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0xa2>
 8019384:	4586      	cmp	lr, r0
 8019386:	dd38      	ble.n	80193fa <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0xa2>
 8019388:	5d12      	ldrb	r2, [r2, r4]
 801938a:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801938e:	1c42      	adds	r2, r0, #1
 8019390:	d438      	bmi.n	8019404 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0xac>
 8019392:	4596      	cmp	lr, r2
 8019394:	dd36      	ble.n	8019404 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0xac>
 8019396:	b3bf      	cbz	r7, 8019408 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0xb0>
 8019398:	f898 2001 	ldrb.w	r2, [r8, #1]
 801939c:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 80193a0:	3501      	adds	r5, #1
 80193a2:	d435      	bmi.n	8019410 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0xb8>
 80193a4:	45a9      	cmp	r9, r5
 80193a6:	dd33      	ble.n	8019410 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0xb8>
 80193a8:	f1bc 0f00 	cmp.w	ip, #0
 80193ac:	d033      	beq.n	8019416 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0xbe>
 80193ae:	2800      	cmp	r0, #0
 80193b0:	db2c      	blt.n	801940c <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0xb4>
 80193b2:	4586      	cmp	lr, r0
 80193b4:	dd2a      	ble.n	801940c <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0xb4>
 80193b6:	f818 200e 	ldrb.w	r2, [r8, lr]
 80193ba:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80193be:	3001      	adds	r0, #1
 80193c0:	d42c      	bmi.n	801941c <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0xc4>
 80193c2:	4586      	cmp	lr, r0
 80193c4:	dd2a      	ble.n	801941c <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0xc4>
 80193c6:	b35f      	cbz	r7, 8019420 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0xc8>
 80193c8:	44c6      	add	lr, r8
 80193ca:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80193ce:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80193d2:	2f0f      	cmp	r7, #15
 80193d4:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 80193d8:	ea4f 6a14 	mov.w	sl, r4, lsr #24
 80193dc:	ea4f 6915 	mov.w	r9, r5, lsr #24
 80193e0:	ea4f 6812 	mov.w	r8, r2, lsr #24
 80193e4:	d802      	bhi.n	80193ec <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x94>
 80193e6:	f1bc 0f0f 	cmp.w	ip, #15
 80193ea:	d91b      	bls.n	8019424 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0xcc>
 80193ec:	4b77      	ldr	r3, [pc, #476]	; (80195cc <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x274>)
 80193ee:	f240 115b 	movw	r1, #347	; 0x15b
 80193f2:	4a77      	ldr	r2, [pc, #476]	; (80195d0 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x278>)
 80193f4:	4877      	ldr	r0, [pc, #476]	; (80195d4 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x27c>)
 80193f6:	f006 fdf3 	bl	801ffe0 <__assert_func>
 80193fa:	2600      	movs	r6, #0
 80193fc:	e7c7      	b.n	801938e <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x36>
 80193fe:	2400      	movs	r4, #0
 8019400:	4626      	mov	r6, r4
 8019402:	e7cd      	b.n	80193a0 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x48>
 8019404:	2400      	movs	r4, #0
 8019406:	e7cb      	b.n	80193a0 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x48>
 8019408:	463c      	mov	r4, r7
 801940a:	e7c9      	b.n	80193a0 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x48>
 801940c:	2500      	movs	r5, #0
 801940e:	e7d6      	b.n	80193be <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x66>
 8019410:	2200      	movs	r2, #0
 8019412:	4615      	mov	r5, r2
 8019414:	e7dd      	b.n	80193d2 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x7a>
 8019416:	4662      	mov	r2, ip
 8019418:	4665      	mov	r5, ip
 801941a:	e7da      	b.n	80193d2 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x7a>
 801941c:	2200      	movs	r2, #0
 801941e:	e7d8      	b.n	80193d2 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x7a>
 8019420:	463a      	mov	r2, r7
 8019422:	e7d6      	b.n	80193d2 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x7a>
 8019424:	b2bf      	uxth	r7, r7
 8019426:	fa1f f08c 	uxth.w	r0, ip
 801942a:	ea4f 1c07 	mov.w	ip, r7, lsl #4
 801942e:	fb00 fe07 	mul.w	lr, r0, r7
 8019432:	f5cc 7380 	rsb	r3, ip, #256	; 0x100
 8019436:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801943a:	ebac 070e 	sub.w	r7, ip, lr
 801943e:	b280      	uxth	r0, r0
 8019440:	b2bf      	uxth	r7, r7
 8019442:	1a1b      	subs	r3, r3, r0
 8019444:	fb07 fc0a 	mul.w	ip, r7, sl
 8019448:	b29b      	uxth	r3, r3
 801944a:	fb03 cc0b 	mla	ip, r3, fp, ip
 801944e:	9300      	str	r3, [sp, #0]
 8019450:	fb00 cc09 	mla	ip, r0, r9, ip
 8019454:	fb0e cc08 	mla	ip, lr, r8, ip
 8019458:	f3cc 2307 	ubfx	r3, ip, #8, #8
 801945c:	9301      	str	r3, [sp, #4]
 801945e:	2b00      	cmp	r3, #0
 8019460:	f000 80b0 	beq.w	80195c4 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x26c>
 8019464:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8019468:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801946c:	fb0b fc0c 	mul.w	ip, fp, ip
 8019470:	fb0b f606 	mul.w	r6, fp, r6
 8019474:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8019478:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801947c:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8019480:	44dc      	add	ip, fp
 8019482:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8019486:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801948a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801948e:	fb0a fb0b 	mul.w	fp, sl, fp
 8019492:	fb0a fa04 	mul.w	sl, sl, r4
 8019496:	f00c 13ff 	and.w	r3, ip, #16711935	; 0xff00ff
 801949a:	f506 7c80 	add.w	ip, r6, #256	; 0x100
 801949e:	f50a 7480 	add.w	r4, sl, #256	; 0x100
 80194a2:	eb0c 2616 	add.w	r6, ip, r6, lsr #8
 80194a6:	ea4f 2c1b 	mov.w	ip, fp, lsr #8
 80194aa:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80194ae:	eb04 2a1a 	add.w	sl, r4, sl, lsr #8
 80194b2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80194b6:	0a36      	lsrs	r6, r6, #8
 80194b8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80194bc:	44dc      	add	ip, fp
 80194be:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80194c2:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 80194c6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80194ca:	fb09 fb0b 	mul.w	fp, r9, fp
 80194ce:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80194d2:	fb09 f905 	mul.w	r9, r9, r5
 80194d6:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80194da:	ea4f 241b 	mov.w	r4, fp, lsr #8
 80194de:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80194e2:	f509 7580 	add.w	r5, r9, #256	; 0x100
 80194e6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80194ea:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80194ee:	fb0c fc07 	mul.w	ip, ip, r7
 80194f2:	eb05 2919 	add.w	r9, r5, r9, lsr #8
 80194f6:	f002 15ff 	and.w	r5, r2, #16711935	; 0xff00ff
 80194fa:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80194fe:	445c      	add	r4, fp
 8019500:	fb08 f505 	mul.w	r5, r8, r5
 8019504:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8019508:	fb08 f802 	mul.w	r8, r8, r2
 801950c:	0a24      	lsrs	r4, r4, #8
 801950e:	0a2a      	lsrs	r2, r5, #8
 8019510:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 8019514:	fb07 f70a 	mul.w	r7, r7, sl
 8019518:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801951c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019520:	4415      	add	r5, r2
 8019522:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8019526:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801952a:	9a00      	ldr	r2, [sp, #0]
 801952c:	0a2d      	lsrs	r5, r5, #8
 801952e:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8019532:	fb03 cc02 	mla	ip, r3, r2, ip
 8019536:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801953a:	fb02 7306 	mla	r3, r2, r6, r7
 801953e:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8019542:	9a01      	ldr	r2, [sp, #4]
 8019544:	fb05 c50e 	mla	r5, r5, lr, ip
 8019548:	fb0e 3e08 	mla	lr, lr, r8, r3
 801954c:	f409 437f 	and.w	r3, r9, #65280	; 0xff00
 8019550:	fb04 5400 	mla	r4, r4, r0, r5
 8019554:	fb00 e303 	mla	r3, r0, r3, lr
 8019558:	0a24      	lsrs	r4, r4, #8
 801955a:	0a1b      	lsrs	r3, r3, #8
 801955c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8019560:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019564:	431c      	orrs	r4, r3
 8019566:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 801956a:	b29b      	uxth	r3, r3
 801956c:	b2e0      	uxtb	r0, r4
 801956e:	435a      	muls	r2, r3
 8019570:	fb10 f003 	smulbb	r0, r0, r3
 8019574:	1c55      	adds	r5, r2, #1
 8019576:	eb05 2512 	add.w	r5, r5, r2, lsr #8
 801957a:	780a      	ldrb	r2, [r1, #0]
 801957c:	ea6f 2515 	mvn.w	r5, r5, lsr #8
 8019580:	b2ed      	uxtb	r5, r5
 8019582:	fb02 0205 	mla	r2, r2, r5, r0
 8019586:	b292      	uxth	r2, r2
 8019588:	1c50      	adds	r0, r2, #1
 801958a:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801958e:	7848      	ldrb	r0, [r1, #1]
 8019590:	fb10 f005 	smulbb	r0, r0, r5
 8019594:	1212      	asrs	r2, r2, #8
 8019596:	700a      	strb	r2, [r1, #0]
 8019598:	f3c4 2207 	ubfx	r2, r4, #8, #8
 801959c:	0c24      	lsrs	r4, r4, #16
 801959e:	fb02 0203 	mla	r2, r2, r3, r0
 80195a2:	b292      	uxth	r2, r2
 80195a4:	1c50      	adds	r0, r2, #1
 80195a6:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80195aa:	1212      	asrs	r2, r2, #8
 80195ac:	704a      	strb	r2, [r1, #1]
 80195ae:	788a      	ldrb	r2, [r1, #2]
 80195b0:	fb12 f505 	smulbb	r5, r2, r5
 80195b4:	fb04 5303 	mla	r3, r4, r3, r5
 80195b8:	b29b      	uxth	r3, r3
 80195ba:	1c5a      	adds	r2, r3, #1
 80195bc:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80195c0:	121b      	asrs	r3, r3, #8
 80195c2:	708b      	strb	r3, [r1, #2]
 80195c4:	b003      	add	sp, #12
 80195c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80195ca:	bf00      	nop
 80195cc:	08025314 	.word	0x08025314
 80195d0:	0802572a 	.word	0x0802572a
 80195d4:	080252e1 	.word	0x080252e1

080195d8 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80195d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80195dc:	ed2d 8b08 	vpush	{d8-d11}
 80195e0:	b09f      	sub	sp, #124	; 0x7c
 80195e2:	eeb0 aa40 	vmov.f32	s20, s0
 80195e6:	eef0 9a60 	vmov.f32	s19, s1
 80195ea:	921b      	str	r2, [sp, #108]	; 0x6c
 80195ec:	eeb0 9a41 	vmov.f32	s18, s2
 80195f0:	9a35      	ldr	r2, [sp, #212]	; 0xd4
 80195f2:	eeb0 8a62 	vmov.f32	s16, s5
 80195f6:	9309      	str	r3, [sp, #36]	; 0x24
 80195f8:	eef0 8a43 	vmov.f32	s17, s6
 80195fc:	f89d 30e4 	ldrb.w	r3, [sp, #228]	; 0xe4
 8019600:	eef0 ba44 	vmov.f32	s23, s8
 8019604:	901d      	str	r0, [sp, #116]	; 0x74
 8019606:	eeb0 ba64 	vmov.f32	s22, s9
 801960a:	931c      	str	r3, [sp, #112]	; 0x70
 801960c:	eef0 aa45 	vmov.f32	s21, s10
 8019610:	6850      	ldr	r0, [r2, #4]
 8019612:	9119      	str	r1, [sp, #100]	; 0x64
 8019614:	6812      	ldr	r2, [r2, #0]
 8019616:	9d32      	ldr	r5, [sp, #200]	; 0xc8
 8019618:	e9dd 1336 	ldrd	r1, r3, [sp, #216]	; 0xd8
 801961c:	fb00 1303 	mla	r3, r0, r3, r1
 8019620:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8019624:	18d3      	adds	r3, r2, r3
 8019626:	930c      	str	r3, [sp, #48]	; 0x30
 8019628:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 801962a:	681b      	ldr	r3, [r3, #0]
 801962c:	9312      	str	r3, [sp, #72]	; 0x48
 801962e:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8019630:	685e      	ldr	r6, [r3, #4]
 8019632:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 8019636:	3604      	adds	r6, #4
 8019638:	930d      	str	r3, [sp, #52]	; 0x34
 801963a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801963c:	2b00      	cmp	r3, #0
 801963e:	dc03      	bgt.n	8019648 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019640:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8019642:	2b00      	cmp	r3, #0
 8019644:	f340 8378 	ble.w	8019d38 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x760>
 8019648:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 801964a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801964e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019652:	1e48      	subs	r0, r1, #1
 8019654:	1e57      	subs	r7, r2, #1
 8019656:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019658:	2b00      	cmp	r3, #0
 801965a:	f340 818c 	ble.w	8019976 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 801965e:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8019660:	142b      	asrs	r3, r5, #16
 8019662:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8019666:	d406      	bmi.n	8019676 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019668:	4584      	cmp	ip, r0
 801966a:	da04      	bge.n	8019676 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801966c:	2b00      	cmp	r3, #0
 801966e:	db02      	blt.n	8019676 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019670:	42bb      	cmp	r3, r7
 8019672:	f2c0 8181 	blt.w	8019978 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a0>
 8019676:	f11c 0c01 	adds.w	ip, ip, #1
 801967a:	f100 816f 	bmi.w	801995c <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x384>
 801967e:	4561      	cmp	r1, ip
 8019680:	f2c0 816c 	blt.w	801995c <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x384>
 8019684:	3301      	adds	r3, #1
 8019686:	f100 8169 	bmi.w	801995c <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x384>
 801968a:	429a      	cmp	r2, r3
 801968c:	f2c0 8166 	blt.w	801995c <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x384>
 8019690:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019692:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8019694:	931a      	str	r3, [sp, #104]	; 0x68
 8019696:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8019698:	2b00      	cmp	r3, #0
 801969a:	f340 818c 	ble.w	80199b6 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
 801969e:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 80196a0:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80196a4:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80196a8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80196ac:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 80196ae:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 80196b2:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 80196b4:	141b      	asrs	r3, r3, #16
 80196b6:	f100 81d0 	bmi.w	8019a5a <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x482>
 80196ba:	f100 38ff 	add.w	r8, r0, #4294967295
 80196be:	4543      	cmp	r3, r8
 80196c0:	f280 81cb 	bge.w	8019a5a <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x482>
 80196c4:	f1bc 0f00 	cmp.w	ip, #0
 80196c8:	f2c0 81c7 	blt.w	8019a5a <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x482>
 80196cc:	f10e 38ff 	add.w	r8, lr, #4294967295
 80196d0:	45c4      	cmp	ip, r8
 80196d2:	f280 81c2 	bge.w	8019a5a <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x482>
 80196d6:	b200      	sxth	r0, r0
 80196d8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80196da:	fb0c 3300 	mla	r3, ip, r0, r3
 80196de:	eb04 0803 	add.w	r8, r4, r3
 80196e2:	5ce3      	ldrb	r3, [r4, r3]
 80196e4:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80196e8:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 80196ec:	2a00      	cmp	r2, #0
 80196ee:	f000 81a9 	beq.w	8019a44 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46c>
 80196f2:	f898 c001 	ldrb.w	ip, [r8, #1]
 80196f6:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 80196fa:	940e      	str	r4, [sp, #56]	; 0x38
 80196fc:	0e24      	lsrs	r4, r4, #24
 80196fe:	9415      	str	r4, [sp, #84]	; 0x54
 8019700:	b179      	cbz	r1, 8019722 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8019702:	eb08 0c00 	add.w	ip, r8, r0
 8019706:	f818 0000 	ldrb.w	r0, [r8, r0]
 801970a:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801970e:	900a      	str	r0, [sp, #40]	; 0x28
 8019710:	0e00      	lsrs	r0, r0, #24
 8019712:	9013      	str	r0, [sp, #76]	; 0x4c
 8019714:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8019718:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801971c:	900f      	str	r0, [sp, #60]	; 0x3c
 801971e:	0e00      	lsrs	r0, r0, #24
 8019720:	9016      	str	r0, [sp, #88]	; 0x58
 8019722:	b292      	uxth	r2, r2
 8019724:	9815      	ldr	r0, [sp, #84]	; 0x54
 8019726:	b289      	uxth	r1, r1
 8019728:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801972a:	fb02 f901 	mul.w	r9, r2, r1
 801972e:	0112      	lsls	r2, r2, #4
 8019730:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8019734:	eba2 0809 	sub.w	r8, r2, r9
 8019738:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801973c:	b289      	uxth	r1, r1
 801973e:	fa1f f888 	uxth.w	r8, r8
 8019742:	1a52      	subs	r2, r2, r1
 8019744:	fb08 f000 	mul.w	r0, r8, r0
 8019748:	b292      	uxth	r2, r2
 801974a:	fb02 000e 	mla	r0, r2, lr, r0
 801974e:	fb01 0004 	mla	r0, r1, r4, r0
 8019752:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8019754:	fb09 0004 	mla	r0, r9, r4, r0
 8019758:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801975c:	2800      	cmp	r0, #0
 801975e:	f000 80f2 	beq.w	8019946 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 8019762:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8019766:	d01b      	beq.n	80197a0 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8019768:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801976c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019770:	fb0e fa0a 	mul.w	sl, lr, sl
 8019774:	fb0e fe03 	mul.w	lr, lr, r3
 8019778:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801977c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8019780:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8019784:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019788:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801978c:	4453      	add	r3, sl
 801978e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019792:	0a1b      	lsrs	r3, r3, #8
 8019794:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8019798:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801979c:	ea43 030c 	orr.w	r3, r3, ip
 80197a0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80197a2:	2cff      	cmp	r4, #255	; 0xff
 80197a4:	d021      	beq.n	80197ea <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 80197a6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80197a8:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80197ac:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80197ae:	fb04 fb0b 	mul.w	fp, r4, fp
 80197b2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80197b4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80197b8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80197ba:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80197be:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80197c2:	fb04 fa0a 	mul.w	sl, r4, sl
 80197c6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80197ca:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80197ce:	44de      	add	lr, fp
 80197d0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80197d4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80197d8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80197dc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80197e0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80197e4:	ea4e 040a 	orr.w	r4, lr, sl
 80197e8:	940e      	str	r4, [sp, #56]	; 0x38
 80197ea:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80197ec:	2cff      	cmp	r4, #255	; 0xff
 80197ee:	d021      	beq.n	8019834 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25c>
 80197f0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80197f2:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80197f6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80197f8:	fb04 fb0b 	mul.w	fp, r4, fp
 80197fc:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80197fe:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8019802:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019804:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019808:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801980c:	fb04 fa0a 	mul.w	sl, r4, sl
 8019810:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019814:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019818:	44de      	add	lr, fp
 801981a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801981e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019822:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019826:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801982a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801982e:	ea4e 040a 	orr.w	r4, lr, sl
 8019832:	940a      	str	r4, [sp, #40]	; 0x28
 8019834:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8019836:	2cff      	cmp	r4, #255	; 0xff
 8019838:	d021      	beq.n	801987e <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801983a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801983c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8019840:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8019842:	fb04 fb0b 	mul.w	fp, r4, fp
 8019846:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8019848:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801984c:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801984e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019852:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019856:	fb04 fa0a 	mul.w	sl, r4, sl
 801985a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801985e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019862:	44de      	add	lr, fp
 8019864:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019868:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801986c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019870:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019874:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019878:	ea4e 040a 	orr.w	r4, lr, sl
 801987c:	940f      	str	r4, [sp, #60]	; 0x3c
 801987e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8019880:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8019884:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019888:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801988c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801988e:	fb08 fc0c 	mul.w	ip, r8, ip
 8019892:	fb02 cc0e 	mla	ip, r2, lr, ip
 8019896:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801989a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801989c:	fb01 cc0e 	mla	ip, r1, lr, ip
 80198a0:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80198a4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80198a6:	fb09 cc0e 	mla	ip, r9, lr, ip
 80198aa:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 80198ae:	fb08 f80e 	mul.w	r8, r8, lr
 80198b2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80198b6:	fb02 8303 	mla	r3, r2, r3, r8
 80198ba:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80198bc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80198c0:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80198c4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80198c6:	fb01 330a 	mla	r3, r1, sl, r3
 80198ca:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 80198ce:	fb09 3901 	mla	r9, r9, r1, r3
 80198d2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80198d4:	990d      	ldr	r1, [sp, #52]	; 0x34
 80198d6:	4343      	muls	r3, r0
 80198d8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80198dc:	1c58      	adds	r0, r3, #1
 80198de:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80198e2:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80198e6:	ea4c 0c09 	orr.w	ip, ip, r9
 80198ea:	783b      	ldrb	r3, [r7, #0]
 80198ec:	fa5f f28c 	uxtb.w	r2, ip
 80198f0:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80198f4:	fb12 f201 	smulbb	r2, r2, r1
 80198f8:	b2c0      	uxtb	r0, r0
 80198fa:	fb03 2300 	mla	r3, r3, r0, r2
 80198fe:	b29b      	uxth	r3, r3
 8019900:	1c5a      	adds	r2, r3, #1
 8019902:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8019906:	787a      	ldrb	r2, [r7, #1]
 8019908:	fb12 f200 	smulbb	r2, r2, r0
 801990c:	121b      	asrs	r3, r3, #8
 801990e:	703b      	strb	r3, [r7, #0]
 8019910:	f3cc 2307 	ubfx	r3, ip, #8, #8
 8019914:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 8019918:	fb03 2301 	mla	r3, r3, r1, r2
 801991c:	b29b      	uxth	r3, r3
 801991e:	1c5a      	adds	r2, r3, #1
 8019920:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8019924:	121b      	asrs	r3, r3, #8
 8019926:	707b      	strb	r3, [r7, #1]
 8019928:	78bb      	ldrb	r3, [r7, #2]
 801992a:	fb13 f000 	smulbb	r0, r3, r0
 801992e:	fb0c 0c01 	mla	ip, ip, r1, r0
 8019932:	fa1f fc8c 	uxth.w	ip, ip
 8019936:	f10c 0301 	add.w	r3, ip, #1
 801993a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801993e:	ea4f 2c2c 	mov.w	ip, ip, asr #8
 8019942:	f887 c002 	strb.w	ip, [r7, #2]
 8019946:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8019948:	3703      	adds	r7, #3
 801994a:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 801994c:	441a      	add	r2, r3
 801994e:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8019950:	441d      	add	r5, r3
 8019952:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8019954:	9231      	str	r2, [sp, #196]	; 0xc4
 8019956:	3b01      	subs	r3, #1
 8019958:	931a      	str	r3, [sp, #104]	; 0x68
 801995a:	e69c      	b.n	8019696 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 801995c:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 801995e:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8019960:	441c      	add	r4, r3
 8019962:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8019964:	441d      	add	r5, r3
 8019966:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019968:	9431      	str	r4, [sp, #196]	; 0xc4
 801996a:	3b01      	subs	r3, #1
 801996c:	9309      	str	r3, [sp, #36]	; 0x24
 801996e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019970:	3303      	adds	r3, #3
 8019972:	930c      	str	r3, [sp, #48]	; 0x30
 8019974:	e66f      	b.n	8019656 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019976:	d026      	beq.n	80199c6 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 8019978:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801997a:	9833      	ldr	r0, [sp, #204]	; 0xcc
 801997c:	3b01      	subs	r3, #1
 801997e:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8019980:	fb00 4003 	mla	r0, r0, r3, r4
 8019984:	1400      	asrs	r0, r0, #16
 8019986:	f53f ae83 	bmi.w	8019690 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801998a:	3901      	subs	r1, #1
 801998c:	4288      	cmp	r0, r1
 801998e:	f6bf ae7f 	bge.w	8019690 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8019992:	9934      	ldr	r1, [sp, #208]	; 0xd0
 8019994:	fb01 5303 	mla	r3, r1, r3, r5
 8019998:	141b      	asrs	r3, r3, #16
 801999a:	f53f ae79 	bmi.w	8019690 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801999e:	3a01      	subs	r2, #1
 80199a0:	4293      	cmp	r3, r2
 80199a2:	f6bf ae75 	bge.w	8019690 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 80199a6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80199a8:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80199ac:	f103 0e03 	add.w	lr, r3, #3
 80199b0:	f1bb 0f00 	cmp.w	fp, #0
 80199b4:	dc71      	bgt.n	8019a9a <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c2>
 80199b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80199b8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80199bc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80199be:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80199c2:	4423      	add	r3, r4
 80199c4:	930c      	str	r3, [sp, #48]	; 0x30
 80199c6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80199c8:	2b00      	cmp	r3, #0
 80199ca:	f340 81b5 	ble.w	8019d38 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x760>
 80199ce:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80199d2:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80199d4:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80199d8:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80199dc:	eef0 6a48 	vmov.f32	s13, s16
 80199e0:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80199e4:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80199e8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80199ec:	edcd 6a31 	vstr	s13, [sp, #196]	; 0xc4
 80199f0:	eef0 6a68 	vmov.f32	s13, s17
 80199f4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80199f8:	ee16 5a90 	vmov	r5, s13
 80199fc:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8019a00:	ee69 7a27 	vmul.f32	s15, s18, s15
 8019a04:	ee37 8a48 	vsub.f32	s16, s14, s16
 8019a08:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8019a0c:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8019a10:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8019a14:	ee18 2a10 	vmov	r2, s16
 8019a18:	eeb0 8a47 	vmov.f32	s16, s14
 8019a1c:	fb92 f3f3 	sdiv	r3, r2, r3
 8019a20:	ee18 2a90 	vmov	r2, s17
 8019a24:	9333      	str	r3, [sp, #204]	; 0xcc
 8019a26:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8019a28:	eef0 8a67 	vmov.f32	s17, s15
 8019a2c:	fb92 f3f3 	sdiv	r3, r2, r3
 8019a30:	9334      	str	r3, [sp, #208]	; 0xd0
 8019a32:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8019a34:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8019a36:	3b01      	subs	r3, #1
 8019a38:	9319      	str	r3, [sp, #100]	; 0x64
 8019a3a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8019a3c:	bf08      	it	eq
 8019a3e:	4613      	moveq	r3, r2
 8019a40:	9309      	str	r3, [sp, #36]	; 0x24
 8019a42:	e5fa      	b.n	801963a <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8019a44:	2900      	cmp	r1, #0
 8019a46:	f43f ae6c 	beq.w	8019722 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8019a4a:	f818 0000 	ldrb.w	r0, [r8, r0]
 8019a4e:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8019a52:	900a      	str	r0, [sp, #40]	; 0x28
 8019a54:	0e00      	lsrs	r0, r0, #24
 8019a56:	9013      	str	r0, [sp, #76]	; 0x4c
 8019a58:	e663      	b.n	8019722 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8019a5a:	f113 0801 	adds.w	r8, r3, #1
 8019a5e:	f53f af72 	bmi.w	8019946 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 8019a62:	4540      	cmp	r0, r8
 8019a64:	f6ff af6f 	blt.w	8019946 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 8019a68:	f11c 0801 	adds.w	r8, ip, #1
 8019a6c:	f53f af6b 	bmi.w	8019946 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 8019a70:	45c6      	cmp	lr, r8
 8019a72:	f6ff af68 	blt.w	8019946 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 8019a76:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8019a78:	b200      	sxth	r0, r0
 8019a7a:	9302      	str	r3, [sp, #8]
 8019a7c:	fa0f f38e 	sxth.w	r3, lr
 8019a80:	9000      	str	r0, [sp, #0]
 8019a82:	9301      	str	r3, [sp, #4]
 8019a84:	4633      	mov	r3, r6
 8019a86:	981d      	ldr	r0, [sp, #116]	; 0x74
 8019a88:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8019a8c:	e9cd c203 	strd	ip, r2, [sp, #12]
 8019a90:	4639      	mov	r1, r7
 8019a92:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019a94:	f7ff fc60 	bl	8019358 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh>
 8019a98:	e755      	b.n	8019946 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 8019a9a:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8019a9c:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8019aa0:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8019aa2:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8019aa6:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8019aa8:	1427      	asrs	r7, r4, #16
 8019aaa:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019aac:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019ab0:	142b      	asrs	r3, r5, #16
 8019ab2:	fb01 7303 	mla	r3, r1, r3, r7
 8019ab6:	18e7      	adds	r7, r4, r3
 8019ab8:	5ce3      	ldrb	r3, [r4, r3]
 8019aba:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8019abe:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8019ac2:	2a00      	cmp	r2, #0
 8019ac4:	f000 812e 	beq.w	8019d24 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>
 8019ac8:	f897 8001 	ldrb.w	r8, [r7, #1]
 8019acc:	f856 4028 	ldr.w	r4, [r6, r8, lsl #2]
 8019ad0:	9410      	str	r4, [sp, #64]	; 0x40
 8019ad2:	0e24      	lsrs	r4, r4, #24
 8019ad4:	9417      	str	r4, [sp, #92]	; 0x5c
 8019ad6:	b170      	cbz	r0, 8019af6 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x51e>
 8019ad8:	eb07 0801 	add.w	r8, r7, r1
 8019adc:	5c79      	ldrb	r1, [r7, r1]
 8019ade:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8019ae2:	910b      	str	r1, [sp, #44]	; 0x2c
 8019ae4:	0e09      	lsrs	r1, r1, #24
 8019ae6:	9114      	str	r1, [sp, #80]	; 0x50
 8019ae8:	f898 1001 	ldrb.w	r1, [r8, #1]
 8019aec:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8019af0:	9111      	str	r1, [sp, #68]	; 0x44
 8019af2:	0e09      	lsrs	r1, r1, #24
 8019af4:	9118      	str	r1, [sp, #96]	; 0x60
 8019af6:	b292      	uxth	r2, r2
 8019af8:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8019afa:	b280      	uxth	r0, r0
 8019afc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019afe:	fb02 f900 	mul.w	r9, r2, r0
 8019b02:	0112      	lsls	r2, r2, #4
 8019b04:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8019b08:	eba2 0809 	sub.w	r8, r2, r9
 8019b0c:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8019b10:	b280      	uxth	r0, r0
 8019b12:	fa1f f888 	uxth.w	r8, r8
 8019b16:	1a12      	subs	r2, r2, r0
 8019b18:	fb08 f101 	mul.w	r1, r8, r1
 8019b1c:	b292      	uxth	r2, r2
 8019b1e:	fb02 110c 	mla	r1, r2, ip, r1
 8019b22:	fb00 1104 	mla	r1, r0, r4, r1
 8019b26:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8019b28:	fb09 1104 	mla	r1, r9, r4, r1
 8019b2c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8019b30:	2900      	cmp	r1, #0
 8019b32:	f000 80ec 	beq.w	8019d0e <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 8019b36:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8019b3a:	d019      	beq.n	8019b70 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x598>
 8019b3c:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8019b40:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019b44:	fb0c fa0a 	mul.w	sl, ip, sl
 8019b48:	fb0c fc03 	mul.w	ip, ip, r3
 8019b4c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8019b50:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8019b54:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8019b58:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019b5c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8019b60:	4453      	add	r3, sl
 8019b62:	0a3f      	lsrs	r7, r7, #8
 8019b64:	0a1b      	lsrs	r3, r3, #8
 8019b66:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8019b6a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019b6e:	433b      	orrs	r3, r7
 8019b70:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8019b72:	2cff      	cmp	r4, #255	; 0xff
 8019b74:	d020      	beq.n	8019bb8 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e0>
 8019b76:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8019b78:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8019b7c:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8019b7e:	4367      	muls	r7, r4
 8019b80:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8019b82:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019b86:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8019b8a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8019b8c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8019b90:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019b94:	fb04 fa0a 	mul.w	sl, r4, sl
 8019b98:	44bc      	add	ip, r7
 8019b9a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8019b9e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019ba2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8019ba6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019baa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019bae:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019bb2:	ea4c 040a 	orr.w	r4, ip, sl
 8019bb6:	9410      	str	r4, [sp, #64]	; 0x40
 8019bb8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019bba:	2cff      	cmp	r4, #255	; 0xff
 8019bbc:	d020      	beq.n	8019c00 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x628>
 8019bbe:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8019bc0:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8019bc4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019bc6:	4367      	muls	r7, r4
 8019bc8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8019bca:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019bce:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8019bd2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019bd4:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8019bd8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019bdc:	fb04 fa0a 	mul.w	sl, r4, sl
 8019be0:	44bc      	add	ip, r7
 8019be2:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8019be6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019bea:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8019bee:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019bf2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019bf6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019bfa:	ea4c 040a 	orr.w	r4, ip, sl
 8019bfe:	940b      	str	r4, [sp, #44]	; 0x2c
 8019c00:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8019c02:	2cff      	cmp	r4, #255	; 0xff
 8019c04:	d020      	beq.n	8019c48 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x670>
 8019c06:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019c08:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8019c0c:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8019c0e:	4367      	muls	r7, r4
 8019c10:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019c12:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019c16:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8019c1a:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8019c1c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8019c20:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019c24:	fb04 fa0a 	mul.w	sl, r4, sl
 8019c28:	44bc      	add	ip, r7
 8019c2a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8019c2e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019c32:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8019c36:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019c3a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019c3e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019c42:	ea4c 040a 	orr.w	r4, ip, sl
 8019c46:	9411      	str	r4, [sp, #68]	; 0x44
 8019c48:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8019c4a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8019c4e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019c52:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8019c56:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8019c58:	fb08 f707 	mul.w	r7, r8, r7
 8019c5c:	fb02 770c 	mla	r7, r2, ip, r7
 8019c60:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8019c64:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019c66:	fb00 770c 	mla	r7, r0, ip, r7
 8019c6a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8019c6e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8019c70:	fb09 770c 	mla	r7, r9, ip, r7
 8019c74:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8019c78:	fb08 f80c 	mul.w	r8, r8, ip
 8019c7c:	0a3f      	lsrs	r7, r7, #8
 8019c7e:	fb02 8303 	mla	r3, r2, r3, r8
 8019c82:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8019c84:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8019c88:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8019c8c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019c8e:	fb00 330a 	mla	r3, r0, sl, r3
 8019c92:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8019c96:	980d      	ldr	r0, [sp, #52]	; 0x34
 8019c98:	fb09 3c0c 	mla	ip, r9, ip, r3
 8019c9c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019c9e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019ca2:	434b      	muls	r3, r1
 8019ca4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8019ca8:	1c59      	adds	r1, r3, #1
 8019caa:	ea47 070c 	orr.w	r7, r7, ip
 8019cae:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8019cb2:	f81e 3c03 	ldrb.w	r3, [lr, #-3]
 8019cb6:	b2fa      	uxtb	r2, r7
 8019cb8:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8019cbc:	fb12 f200 	smulbb	r2, r2, r0
 8019cc0:	b2c9      	uxtb	r1, r1
 8019cc2:	fb03 2301 	mla	r3, r3, r1, r2
 8019cc6:	b29b      	uxth	r3, r3
 8019cc8:	1c5a      	adds	r2, r3, #1
 8019cca:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8019cce:	f81e 2c02 	ldrb.w	r2, [lr, #-2]
 8019cd2:	fb12 f201 	smulbb	r2, r2, r1
 8019cd6:	121b      	asrs	r3, r3, #8
 8019cd8:	f80e 3c03 	strb.w	r3, [lr, #-3]
 8019cdc:	f3c7 2307 	ubfx	r3, r7, #8, #8
 8019ce0:	0c3f      	lsrs	r7, r7, #16
 8019ce2:	fb03 2300 	mla	r3, r3, r0, r2
 8019ce6:	b29b      	uxth	r3, r3
 8019ce8:	1c5a      	adds	r2, r3, #1
 8019cea:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8019cee:	121b      	asrs	r3, r3, #8
 8019cf0:	f80e 3c02 	strb.w	r3, [lr, #-2]
 8019cf4:	f81e 3c01 	ldrb.w	r3, [lr, #-1]
 8019cf8:	fb13 f101 	smulbb	r1, r3, r1
 8019cfc:	fb07 1700 	mla	r7, r7, r0, r1
 8019d00:	b2bf      	uxth	r7, r7
 8019d02:	1c7b      	adds	r3, r7, #1
 8019d04:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8019d08:	123f      	asrs	r7, r7, #8
 8019d0a:	f80e 7c01 	strb.w	r7, [lr, #-1]
 8019d0e:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8019d10:	f10e 0e03 	add.w	lr, lr, #3
 8019d14:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8019d16:	f10b 3bff 	add.w	fp, fp, #4294967295
 8019d1a:	441a      	add	r2, r3
 8019d1c:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8019d1e:	9231      	str	r2, [sp, #196]	; 0xc4
 8019d20:	441d      	add	r5, r3
 8019d22:	e645      	b.n	80199b0 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d8>
 8019d24:	2800      	cmp	r0, #0
 8019d26:	f43f aee6 	beq.w	8019af6 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x51e>
 8019d2a:	5c79      	ldrb	r1, [r7, r1]
 8019d2c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8019d30:	910b      	str	r1, [sp, #44]	; 0x2c
 8019d32:	0e09      	lsrs	r1, r1, #24
 8019d34:	9114      	str	r1, [sp, #80]	; 0x50
 8019d36:	e6de      	b.n	8019af6 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x51e>
 8019d38:	b01f      	add	sp, #124	; 0x7c
 8019d3a:	ecbd 8b08 	vpop	{d8-d11}
 8019d3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08019d44 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh>:
 8019d44:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019d48:	e9dd 040e 	ldrd	r0, r4, [sp, #56]	; 0x38
 8019d4c:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 8019d50:	2c00      	cmp	r4, #0
 8019d52:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 8019d56:	fb04 060c 	mla	r6, r4, ip, r0
 8019d5a:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8019d5e:	f89d 7044 	ldrb.w	r7, [sp, #68]	; 0x44
 8019d62:	eb02 0e06 	add.w	lr, r2, r6
 8019d66:	db3d      	blt.n	8019de4 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0xa0>
 8019d68:	45a0      	cmp	r8, r4
 8019d6a:	dd3b      	ble.n	8019de4 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0xa0>
 8019d6c:	2800      	cmp	r0, #0
 8019d6e:	db37      	blt.n	8019de0 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x9c>
 8019d70:	4584      	cmp	ip, r0
 8019d72:	dd35      	ble.n	8019de0 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x9c>
 8019d74:	5d92      	ldrb	r2, [r2, r6]
 8019d76:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8019d7a:	1c46      	adds	r6, r0, #1
 8019d7c:	d435      	bmi.n	8019dea <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0xa6>
 8019d7e:	45b4      	cmp	ip, r6
 8019d80:	dd33      	ble.n	8019dea <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0xa6>
 8019d82:	b3a5      	cbz	r5, 8019dee <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0xaa>
 8019d84:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8019d88:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 8019d8c:	3401      	adds	r4, #1
 8019d8e:	d432      	bmi.n	8019df6 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0xb2>
 8019d90:	45a0      	cmp	r8, r4
 8019d92:	dd30      	ble.n	8019df6 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0xb2>
 8019d94:	b397      	cbz	r7, 8019dfc <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0xb8>
 8019d96:	2800      	cmp	r0, #0
 8019d98:	db2b      	blt.n	8019df2 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0xae>
 8019d9a:	4584      	cmp	ip, r0
 8019d9c:	dd29      	ble.n	8019df2 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0xae>
 8019d9e:	f81e 400c 	ldrb.w	r4, [lr, ip]
 8019da2:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 8019da6:	3001      	adds	r0, #1
 8019da8:	d42b      	bmi.n	8019e02 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0xbe>
 8019daa:	4584      	cmp	ip, r0
 8019dac:	dd29      	ble.n	8019e02 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0xbe>
 8019dae:	b355      	cbz	r5, 8019e06 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0xc2>
 8019db0:	44f4      	add	ip, lr
 8019db2:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8019db6:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8019dba:	2d0f      	cmp	r5, #15
 8019dbc:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8019dc0:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8019dc4:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8019dc8:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8019dcc:	d801      	bhi.n	8019dd2 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x8e>
 8019dce:	2f0f      	cmp	r7, #15
 8019dd0:	d91b      	bls.n	8019e0a <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0xc6>
 8019dd2:	4b7f      	ldr	r3, [pc, #508]	; (8019fd0 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x28c>)
 8019dd4:	f240 115b 	movw	r1, #347	; 0x15b
 8019dd8:	4a7e      	ldr	r2, [pc, #504]	; (8019fd4 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x290>)
 8019dda:	487f      	ldr	r0, [pc, #508]	; (8019fd8 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x294>)
 8019ddc:	f006 f900 	bl	801ffe0 <__assert_func>
 8019de0:	2200      	movs	r2, #0
 8019de2:	e7ca      	b.n	8019d7a <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x36>
 8019de4:	2600      	movs	r6, #0
 8019de6:	4632      	mov	r2, r6
 8019de8:	e7d0      	b.n	8019d8c <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x48>
 8019dea:	2600      	movs	r6, #0
 8019dec:	e7ce      	b.n	8019d8c <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x48>
 8019dee:	462e      	mov	r6, r5
 8019df0:	e7cc      	b.n	8019d8c <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x48>
 8019df2:	2400      	movs	r4, #0
 8019df4:	e7d7      	b.n	8019da6 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x62>
 8019df6:	2300      	movs	r3, #0
 8019df8:	461c      	mov	r4, r3
 8019dfa:	e7de      	b.n	8019dba <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x76>
 8019dfc:	463b      	mov	r3, r7
 8019dfe:	463c      	mov	r4, r7
 8019e00:	e7db      	b.n	8019dba <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x76>
 8019e02:	2300      	movs	r3, #0
 8019e04:	e7d9      	b.n	8019dba <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x76>
 8019e06:	462b      	mov	r3, r5
 8019e08:	e7d7      	b.n	8019dba <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x76>
 8019e0a:	b2a8      	uxth	r0, r5
 8019e0c:	b2bf      	uxth	r7, r7
 8019e0e:	fb07 fe00 	mul.w	lr, r7, r0
 8019e12:	0100      	lsls	r0, r0, #4
 8019e14:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8019e18:	eba0 0c0e 	sub.w	ip, r0, lr
 8019e1c:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8019e20:	b2bf      	uxth	r7, r7
 8019e22:	fa1f fc8c 	uxth.w	ip, ip
 8019e26:	1bc5      	subs	r5, r0, r7
 8019e28:	fb0c f00a 	mul.w	r0, ip, sl
 8019e2c:	b2ad      	uxth	r5, r5
 8019e2e:	fb05 000b 	mla	r0, r5, fp, r0
 8019e32:	fb07 0009 	mla	r0, r7, r9, r0
 8019e36:	fb0e 0008 	mla	r0, lr, r8, r0
 8019e3a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8019e3e:	9001      	str	r0, [sp, #4]
 8019e40:	2800      	cmp	r0, #0
 8019e42:	f000 80c2 	beq.w	8019fca <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x286>
 8019e46:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8019e4a:	d018      	beq.n	8019e7e <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x13a>
 8019e4c:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8019e50:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019e54:	fb0b f000 	mul.w	r0, fp, r0
 8019e58:	fb0b fb02 	mul.w	fp, fp, r2
 8019e5c:	0a02      	lsrs	r2, r0, #8
 8019e5e:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8019e62:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019e66:	4402      	add	r2, r0
 8019e68:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8019e6c:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8019e70:	0a12      	lsrs	r2, r2, #8
 8019e72:	0a00      	lsrs	r0, r0, #8
 8019e74:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019e78:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8019e7c:	4302      	orrs	r2, r0
 8019e7e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8019e82:	d01a      	beq.n	8019eba <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x176>
 8019e84:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 8019e88:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8019e8c:	fb0a f000 	mul.w	r0, sl, r0
 8019e90:	fb0a fa06 	mul.w	sl, sl, r6
 8019e94:	0a06      	lsrs	r6, r0, #8
 8019e96:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8019e9a:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8019e9e:	4406      	add	r6, r0
 8019ea0:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8019ea4:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 8019ea8:	0a36      	lsrs	r6, r6, #8
 8019eaa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019eae:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8019eb2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019eb6:	ea46 060a 	orr.w	r6, r6, sl
 8019eba:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8019ebe:	d01b      	beq.n	8019ef8 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x1b4>
 8019ec0:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8019ec4:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8019ec8:	fb09 fa0a 	mul.w	sl, r9, sl
 8019ecc:	fb09 f004 	mul.w	r0, r9, r4
 8019ed0:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8019ed4:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8019ed8:	f500 7980 	add.w	r9, r0, #256	; 0x100
 8019edc:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8019ee0:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 8019ee4:	4454      	add	r4, sl
 8019ee6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8019eea:	0a24      	lsrs	r4, r4, #8
 8019eec:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8019ef0:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8019ef4:	ea44 0409 	orr.w	r4, r4, r9
 8019ef8:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8019efc:	d01b      	beq.n	8019f36 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x1f2>
 8019efe:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8019f02:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019f06:	fb08 f909 	mul.w	r9, r8, r9
 8019f0a:	fb08 f003 	mul.w	r0, r8, r3
 8019f0e:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8019f12:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8019f16:	f500 7880 	add.w	r8, r0, #256	; 0x100
 8019f1a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019f1e:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 8019f22:	444b      	add	r3, r9
 8019f24:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8019f28:	0a1b      	lsrs	r3, r3, #8
 8019f2a:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8019f2e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019f32:	ea43 0308 	orr.w	r3, r3, r8
 8019f36:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 8019f3a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8019f3e:	f002 18ff 	and.w	r8, r2, #16711935	; 0xff00ff
 8019f42:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019f46:	fb0c f000 	mul.w	r0, ip, r0
 8019f4a:	fb0c f606 	mul.w	r6, ip, r6
 8019f4e:	fb05 0808 	mla	r8, r5, r8, r0
 8019f52:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 8019f56:	fb05 6502 	mla	r5, r5, r2, r6
 8019f5a:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8019f5e:	fb07 8800 	mla	r8, r7, r0, r8
 8019f62:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 8019f66:	fb07 5704 	mla	r7, r7, r4, r5
 8019f6a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019f6e:	fb0e 8000 	mla	r0, lr, r0, r8
 8019f72:	780a      	ldrb	r2, [r1, #0]
 8019f74:	fb0e 7e03 	mla	lr, lr, r3, r7
 8019f78:	9b01      	ldr	r3, [sp, #4]
 8019f7a:	0a00      	lsrs	r0, r0, #8
 8019f7c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019f80:	43db      	mvns	r3, r3
 8019f82:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8019f86:	b2db      	uxtb	r3, r3
 8019f88:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8019f8c:	ea40 0e0e 	orr.w	lr, r0, lr
 8019f90:	fb02 f003 	mul.w	r0, r2, r3
 8019f94:	1c42      	adds	r2, r0, #1
 8019f96:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8019f9a:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 8019f9e:	700a      	strb	r2, [r1, #0]
 8019fa0:	784a      	ldrb	r2, [r1, #1]
 8019fa2:	435a      	muls	r2, r3
 8019fa4:	1c50      	adds	r0, r2, #1
 8019fa6:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8019faa:	ea4f 221e 	mov.w	r2, lr, lsr #8
 8019fae:	ea4f 4e1e 	mov.w	lr, lr, lsr #16
 8019fb2:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8019fb6:	704a      	strb	r2, [r1, #1]
 8019fb8:	788a      	ldrb	r2, [r1, #2]
 8019fba:	4353      	muls	r3, r2
 8019fbc:	1c5a      	adds	r2, r3, #1
 8019fbe:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8019fc2:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 8019fc6:	f881 e002 	strb.w	lr, [r1, #2]
 8019fca:	b003      	add	sp, #12
 8019fcc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019fd0:	08025314 	.word	0x08025314
 8019fd4:	0802572a 	.word	0x0802572a
 8019fd8:	080252e1 	.word	0x080252e1

08019fdc <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019fdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019fe0:	ed2d 8b0a 	vpush	{d8-d12}
 8019fe4:	b09b      	sub	sp, #108	; 0x6c
 8019fe6:	eeb0 aa40 	vmov.f32	s20, s0
 8019fea:	eef0 9a60 	vmov.f32	s19, s1
 8019fee:	9218      	str	r2, [sp, #96]	; 0x60
 8019ff0:	eeb0 9a41 	vmov.f32	s18, s2
 8019ff4:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 8019ff6:	eeb0 8a62 	vmov.f32	s16, s5
 8019ffa:	9019      	str	r0, [sp, #100]	; 0x64
 8019ffc:	eef0 8a43 	vmov.f32	s17, s6
 801a000:	6850      	ldr	r0, [r2, #4]
 801a002:	eeb0 ca44 	vmov.f32	s24, s8
 801a006:	9116      	str	r1, [sp, #88]	; 0x58
 801a008:	eef0 ba64 	vmov.f32	s23, s9
 801a00c:	9307      	str	r3, [sp, #28]
 801a00e:	eeb0 ba45 	vmov.f32	s22, s10
 801a012:	6812      	ldr	r2, [r2, #0]
 801a014:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 801a018:	9d30      	ldr	r5, [sp, #192]	; 0xc0
 801a01a:	e9dd 1334 	ldrd	r1, r3, [sp, #208]	; 0xd0
 801a01e:	fb00 1303 	mla	r3, r0, r3, r1
 801a022:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801a026:	18d3      	adds	r3, r2, r3
 801a028:	930a      	str	r3, [sp, #40]	; 0x28
 801a02a:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 801a02c:	681b      	ldr	r3, [r3, #0]
 801a02e:	930f      	str	r3, [sp, #60]	; 0x3c
 801a030:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 801a032:	685e      	ldr	r6, [r3, #4]
 801a034:	3604      	adds	r6, #4
 801a036:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801a038:	2b00      	cmp	r3, #0
 801a03a:	dc03      	bgt.n	801a044 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a03c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a03e:	2b00      	cmp	r3, #0
 801a040:	f340 834f 	ble.w	801a6e2 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 801a044:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 801a046:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a04a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a04e:	1e48      	subs	r0, r1, #1
 801a050:	1e57      	subs	r7, r2, #1
 801a052:	9b07      	ldr	r3, [sp, #28]
 801a054:	2b00      	cmp	r3, #0
 801a056:	f340 8178 	ble.w	801a34a <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801a05a:	9c2f      	ldr	r4, [sp, #188]	; 0xbc
 801a05c:	142b      	asrs	r3, r5, #16
 801a05e:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801a062:	d406      	bmi.n	801a072 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a064:	4584      	cmp	ip, r0
 801a066:	da04      	bge.n	801a072 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a068:	2b00      	cmp	r3, #0
 801a06a:	db02      	blt.n	801a072 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a06c:	42bb      	cmp	r3, r7
 801a06e:	f2c0 816d 	blt.w	801a34c <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801a072:	f11c 0c01 	adds.w	ip, ip, #1
 801a076:	f100 815b 	bmi.w	801a330 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801a07a:	4561      	cmp	r1, ip
 801a07c:	f2c0 8158 	blt.w	801a330 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801a080:	3301      	adds	r3, #1
 801a082:	f100 8155 	bmi.w	801a330 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801a086:	429a      	cmp	r2, r3
 801a088:	f2c0 8152 	blt.w	801a330 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801a08c:	9b07      	ldr	r3, [sp, #28]
 801a08e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801a090:	9317      	str	r3, [sp, #92]	; 0x5c
 801a092:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801a094:	2b00      	cmp	r3, #0
 801a096:	f340 8178 	ble.w	801a38a <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801a09a:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801a09c:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801a0a0:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801a0a4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801a0a8:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 801a0aa:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801a0ae:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801a0b0:	141b      	asrs	r3, r3, #16
 801a0b2:	f100 81ba 	bmi.w	801a42a <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801a0b6:	f101 38ff 	add.w	r8, r1, #4294967295
 801a0ba:	4543      	cmp	r3, r8
 801a0bc:	f280 81b5 	bge.w	801a42a <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801a0c0:	f1bc 0f00 	cmp.w	ip, #0
 801a0c4:	f2c0 81b1 	blt.w	801a42a <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801a0c8:	f10e 38ff 	add.w	r8, lr, #4294967295
 801a0cc:	45c4      	cmp	ip, r8
 801a0ce:	f280 81ac 	bge.w	801a42a <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801a0d2:	b209      	sxth	r1, r1
 801a0d4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801a0d6:	fb0c 3301 	mla	r3, ip, r1, r3
 801a0da:	eb04 0803 	add.w	r8, r4, r3
 801a0de:	5ce3      	ldrb	r3, [r4, r3]
 801a0e0:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801a0e4:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801a0e8:	2a00      	cmp	r2, #0
 801a0ea:	f000 8193 	beq.w	801a414 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x438>
 801a0ee:	f898 c001 	ldrb.w	ip, [r8, #1]
 801a0f2:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801a0f6:	940b      	str	r4, [sp, #44]	; 0x2c
 801a0f8:	0e24      	lsrs	r4, r4, #24
 801a0fa:	9412      	str	r4, [sp, #72]	; 0x48
 801a0fc:	b178      	cbz	r0, 801a11e <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x142>
 801a0fe:	eb08 0c01 	add.w	ip, r8, r1
 801a102:	f818 1001 	ldrb.w	r1, [r8, r1]
 801a106:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801a10a:	9108      	str	r1, [sp, #32]
 801a10c:	0e09      	lsrs	r1, r1, #24
 801a10e:	9110      	str	r1, [sp, #64]	; 0x40
 801a110:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801a114:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801a118:	910c      	str	r1, [sp, #48]	; 0x30
 801a11a:	0e09      	lsrs	r1, r1, #24
 801a11c:	9113      	str	r1, [sp, #76]	; 0x4c
 801a11e:	b292      	uxth	r2, r2
 801a120:	9912      	ldr	r1, [sp, #72]	; 0x48
 801a122:	b280      	uxth	r0, r0
 801a124:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801a126:	fb02 f900 	mul.w	r9, r2, r0
 801a12a:	0112      	lsls	r2, r2, #4
 801a12c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801a130:	eba2 0809 	sub.w	r8, r2, r9
 801a134:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801a138:	b280      	uxth	r0, r0
 801a13a:	fa1f f888 	uxth.w	r8, r8
 801a13e:	1a12      	subs	r2, r2, r0
 801a140:	fb08 f101 	mul.w	r1, r8, r1
 801a144:	b292      	uxth	r2, r2
 801a146:	fb02 110e 	mla	r1, r2, lr, r1
 801a14a:	fb00 1104 	mla	r1, r0, r4, r1
 801a14e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a150:	fb09 1104 	mla	r1, r9, r4, r1
 801a154:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801a158:	2900      	cmp	r1, #0
 801a15a:	f000 80de 	beq.w	801a31a <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a15e:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801a162:	d01b      	beq.n	801a19c <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801a164:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801a168:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a16c:	fb0e fa0a 	mul.w	sl, lr, sl
 801a170:	fb0e fe03 	mul.w	lr, lr, r3
 801a174:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801a178:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801a17c:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801a180:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a184:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801a188:	4453      	add	r3, sl
 801a18a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a18e:	0a1b      	lsrs	r3, r3, #8
 801a190:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801a194:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a198:	ea43 030c 	orr.w	r3, r3, ip
 801a19c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801a19e:	2cff      	cmp	r4, #255	; 0xff
 801a1a0:	d021      	beq.n	801a1e6 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20a>
 801a1a2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801a1a4:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801a1a8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801a1aa:	fb04 fb0b 	mul.w	fp, r4, fp
 801a1ae:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801a1b0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801a1b4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801a1b6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801a1ba:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801a1be:	fb04 fa0a 	mul.w	sl, r4, sl
 801a1c2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a1c6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801a1ca:	44de      	add	lr, fp
 801a1cc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a1d0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a1d4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a1d8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a1dc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a1e0:	ea4e 040a 	orr.w	r4, lr, sl
 801a1e4:	940b      	str	r4, [sp, #44]	; 0x2c
 801a1e6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801a1e8:	2cff      	cmp	r4, #255	; 0xff
 801a1ea:	d021      	beq.n	801a230 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801a1ec:	9c08      	ldr	r4, [sp, #32]
 801a1ee:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801a1f2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801a1f4:	fb04 fb0b 	mul.w	fp, r4, fp
 801a1f8:	9c08      	ldr	r4, [sp, #32]
 801a1fa:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801a1fe:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801a200:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801a204:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801a208:	fb04 fa0a 	mul.w	sl, r4, sl
 801a20c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a210:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801a214:	44de      	add	lr, fp
 801a216:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a21a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a21e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a222:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a226:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a22a:	ea4e 040a 	orr.w	r4, lr, sl
 801a22e:	9408      	str	r4, [sp, #32]
 801a230:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a232:	2cff      	cmp	r4, #255	; 0xff
 801a234:	d021      	beq.n	801a27a <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29e>
 801a236:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801a238:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801a23c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a23e:	fb04 fb0b 	mul.w	fp, r4, fp
 801a242:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801a244:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801a248:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a24a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801a24e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801a252:	fb04 fa0a 	mul.w	sl, r4, sl
 801a256:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a25a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801a25e:	44de      	add	lr, fp
 801a260:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a264:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a268:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a26c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a270:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a274:	ea4e 040a 	orr.w	r4, lr, sl
 801a278:	940c      	str	r4, [sp, #48]	; 0x30
 801a27a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801a27c:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801a280:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a284:	43c9      	mvns	r1, r1
 801a286:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801a28a:	9c08      	ldr	r4, [sp, #32]
 801a28c:	b2c9      	uxtb	r1, r1
 801a28e:	fb08 fc0c 	mul.w	ip, r8, ip
 801a292:	fb02 cc0e 	mla	ip, r2, lr, ip
 801a296:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801a29a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801a29c:	fb00 cc0e 	mla	ip, r0, lr, ip
 801a2a0:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801a2a4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801a2a6:	fb09 cc0e 	mla	ip, r9, lr, ip
 801a2aa:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801a2ae:	fb08 f80e 	mul.w	r8, r8, lr
 801a2b2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a2b6:	fb02 8303 	mla	r3, r2, r3, r8
 801a2ba:	9a08      	ldr	r2, [sp, #32]
 801a2bc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a2c0:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801a2c4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801a2c6:	fb00 330a 	mla	r3, r0, sl, r3
 801a2ca:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 801a2ce:	fb09 3900 	mla	r9, r9, r0, r3
 801a2d2:	783b      	ldrb	r3, [r7, #0]
 801a2d4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801a2d8:	fb03 f201 	mul.w	r2, r3, r1
 801a2dc:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801a2e0:	1c53      	adds	r3, r2, #1
 801a2e2:	ea4c 0c09 	orr.w	ip, ip, r9
 801a2e6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a2ea:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801a2ee:	703b      	strb	r3, [r7, #0]
 801a2f0:	787b      	ldrb	r3, [r7, #1]
 801a2f2:	434b      	muls	r3, r1
 801a2f4:	1c5a      	adds	r2, r3, #1
 801a2f6:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801a2fa:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801a2fe:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 801a302:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a306:	707b      	strb	r3, [r7, #1]
 801a308:	78bb      	ldrb	r3, [r7, #2]
 801a30a:	4359      	muls	r1, r3
 801a30c:	1c4b      	adds	r3, r1, #1
 801a30e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801a312:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801a316:	f887 c002 	strb.w	ip, [r7, #2]
 801a31a:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801a31c:	3703      	adds	r7, #3
 801a31e:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801a320:	441a      	add	r2, r3
 801a322:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801a324:	441d      	add	r5, r3
 801a326:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801a328:	922f      	str	r2, [sp, #188]	; 0xbc
 801a32a:	3b01      	subs	r3, #1
 801a32c:	9317      	str	r3, [sp, #92]	; 0x5c
 801a32e:	e6b0      	b.n	801a092 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801a330:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801a332:	9c2f      	ldr	r4, [sp, #188]	; 0xbc
 801a334:	441c      	add	r4, r3
 801a336:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801a338:	441d      	add	r5, r3
 801a33a:	9b07      	ldr	r3, [sp, #28]
 801a33c:	942f      	str	r4, [sp, #188]	; 0xbc
 801a33e:	3b01      	subs	r3, #1
 801a340:	9307      	str	r3, [sp, #28]
 801a342:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a344:	3303      	adds	r3, #3
 801a346:	930a      	str	r3, [sp, #40]	; 0x28
 801a348:	e683      	b.n	801a052 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a34a:	d026      	beq.n	801a39a <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3be>
 801a34c:	9b07      	ldr	r3, [sp, #28]
 801a34e:	9831      	ldr	r0, [sp, #196]	; 0xc4
 801a350:	3b01      	subs	r3, #1
 801a352:	9c2f      	ldr	r4, [sp, #188]	; 0xbc
 801a354:	fb00 4003 	mla	r0, r0, r3, r4
 801a358:	1400      	asrs	r0, r0, #16
 801a35a:	f53f ae97 	bmi.w	801a08c <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801a35e:	3901      	subs	r1, #1
 801a360:	4288      	cmp	r0, r1
 801a362:	f6bf ae93 	bge.w	801a08c <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801a366:	9932      	ldr	r1, [sp, #200]	; 0xc8
 801a368:	fb01 5303 	mla	r3, r1, r3, r5
 801a36c:	141b      	asrs	r3, r3, #16
 801a36e:	f53f ae8d 	bmi.w	801a08c <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801a372:	3a01      	subs	r2, #1
 801a374:	4293      	cmp	r3, r2
 801a376:	f6bf ae89 	bge.w	801a08c <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801a37a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a37c:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801a380:	f103 0e03 	add.w	lr, r3, #3
 801a384:	f1bb 0f00 	cmp.w	fp, #0
 801a388:	dc6d      	bgt.n	801a466 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48a>
 801a38a:	9b07      	ldr	r3, [sp, #28]
 801a38c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801a390:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a392:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801a396:	4423      	add	r3, r4
 801a398:	930a      	str	r3, [sp, #40]	; 0x28
 801a39a:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801a39c:	2b00      	cmp	r3, #0
 801a39e:	f340 81a0 	ble.w	801a6e2 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 801a3a2:	ee3a aa0c 	vadd.f32	s20, s20, s24
 801a3a6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801a3a8:	ee79 9aab 	vadd.f32	s19, s19, s23
 801a3ac:	eef0 6a48 	vmov.f32	s13, s16
 801a3b0:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 801a3b4:	ee39 9a0b 	vadd.f32	s18, s18, s22
 801a3b8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a3bc:	edcd 6a2f 	vstr	s13, [sp, #188]	; 0xbc
 801a3c0:	eef0 6a68 	vmov.f32	s13, s17
 801a3c4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a3c8:	ee16 5a90 	vmov	r5, s13
 801a3cc:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801a3d0:	ee69 7a27 	vmul.f32	s15, s18, s15
 801a3d4:	ee37 8a48 	vsub.f32	s16, s14, s16
 801a3d8:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801a3dc:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801a3e0:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801a3e4:	ee18 2a10 	vmov	r2, s16
 801a3e8:	eeb0 8a47 	vmov.f32	s16, s14
 801a3ec:	fb92 f3f3 	sdiv	r3, r2, r3
 801a3f0:	ee18 2a90 	vmov	r2, s17
 801a3f4:	9331      	str	r3, [sp, #196]	; 0xc4
 801a3f6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801a3f8:	eef0 8a67 	vmov.f32	s17, s15
 801a3fc:	fb92 f3f3 	sdiv	r3, r2, r3
 801a400:	9332      	str	r3, [sp, #200]	; 0xc8
 801a402:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801a404:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801a406:	3b01      	subs	r3, #1
 801a408:	9316      	str	r3, [sp, #88]	; 0x58
 801a40a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801a40c:	bf08      	it	eq
 801a40e:	4613      	moveq	r3, r2
 801a410:	9307      	str	r3, [sp, #28]
 801a412:	e610      	b.n	801a036 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801a414:	2800      	cmp	r0, #0
 801a416:	f43f ae82 	beq.w	801a11e <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x142>
 801a41a:	f818 1001 	ldrb.w	r1, [r8, r1]
 801a41e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801a422:	9108      	str	r1, [sp, #32]
 801a424:	0e09      	lsrs	r1, r1, #24
 801a426:	9110      	str	r1, [sp, #64]	; 0x40
 801a428:	e679      	b.n	801a11e <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x142>
 801a42a:	f113 0801 	adds.w	r8, r3, #1
 801a42e:	f53f af74 	bmi.w	801a31a <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a432:	4541      	cmp	r1, r8
 801a434:	f6ff af71 	blt.w	801a31a <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a438:	f11c 0801 	adds.w	r8, ip, #1
 801a43c:	f53f af6d 	bmi.w	801a31a <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a440:	45c6      	cmp	lr, r8
 801a442:	f6ff af6a 	blt.w	801a31a <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a446:	b209      	sxth	r1, r1
 801a448:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801a44c:	fa0f f38e 	sxth.w	r3, lr
 801a450:	9100      	str	r1, [sp, #0]
 801a452:	4639      	mov	r1, r7
 801a454:	9301      	str	r3, [sp, #4]
 801a456:	4633      	mov	r3, r6
 801a458:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801a45c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a45e:	9819      	ldr	r0, [sp, #100]	; 0x64
 801a460:	f7ff fc70 	bl	8019d44 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh>
 801a464:	e759      	b.n	801a31a <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a466:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801a468:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801a46c:	9c2f      	ldr	r4, [sp, #188]	; 0xbc
 801a46e:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801a472:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 801a474:	1427      	asrs	r7, r4, #16
 801a476:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801a478:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a47c:	142b      	asrs	r3, r5, #16
 801a47e:	fb01 7303 	mla	r3, r1, r3, r7
 801a482:	18e7      	adds	r7, r4, r3
 801a484:	5ce3      	ldrb	r3, [r4, r3]
 801a486:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801a48a:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801a48e:	2a00      	cmp	r2, #0
 801a490:	f000 811d 	beq.w	801a6ce <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6f2>
 801a494:	f897 8001 	ldrb.w	r8, [r7, #1]
 801a498:	f856 4028 	ldr.w	r4, [r6, r8, lsl #2]
 801a49c:	940d      	str	r4, [sp, #52]	; 0x34
 801a49e:	0e24      	lsrs	r4, r4, #24
 801a4a0:	9414      	str	r4, [sp, #80]	; 0x50
 801a4a2:	b170      	cbz	r0, 801a4c2 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e6>
 801a4a4:	eb07 0801 	add.w	r8, r7, r1
 801a4a8:	5c79      	ldrb	r1, [r7, r1]
 801a4aa:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801a4ae:	9109      	str	r1, [sp, #36]	; 0x24
 801a4b0:	0e09      	lsrs	r1, r1, #24
 801a4b2:	9111      	str	r1, [sp, #68]	; 0x44
 801a4b4:	f898 1001 	ldrb.w	r1, [r8, #1]
 801a4b8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801a4bc:	910e      	str	r1, [sp, #56]	; 0x38
 801a4be:	0e09      	lsrs	r1, r1, #24
 801a4c0:	9115      	str	r1, [sp, #84]	; 0x54
 801a4c2:	b292      	uxth	r2, r2
 801a4c4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801a4c6:	b280      	uxth	r0, r0
 801a4c8:	fb02 f900 	mul.w	r9, r2, r0
 801a4cc:	0112      	lsls	r2, r2, #4
 801a4ce:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801a4d2:	eba2 0809 	sub.w	r8, r2, r9
 801a4d6:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801a4da:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a4dc:	b280      	uxth	r0, r0
 801a4de:	fa1f f888 	uxth.w	r8, r8
 801a4e2:	1a09      	subs	r1, r1, r0
 801a4e4:	fb08 f202 	mul.w	r2, r8, r2
 801a4e8:	b289      	uxth	r1, r1
 801a4ea:	fb01 220c 	mla	r2, r1, ip, r2
 801a4ee:	fb00 2204 	mla	r2, r0, r4, r2
 801a4f2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801a4f4:	fb09 2204 	mla	r2, r9, r4, r2
 801a4f8:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801a4fc:	2a00      	cmp	r2, #0
 801a4fe:	f000 80db 	beq.w	801a6b8 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
 801a502:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801a506:	d019      	beq.n	801a53c <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x560>
 801a508:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801a50c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a510:	fb0c fa0a 	mul.w	sl, ip, sl
 801a514:	fb0c fc03 	mul.w	ip, ip, r3
 801a518:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801a51c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801a520:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801a524:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a528:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801a52c:	4453      	add	r3, sl
 801a52e:	0a3f      	lsrs	r7, r7, #8
 801a530:	0a1b      	lsrs	r3, r3, #8
 801a532:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801a536:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a53a:	433b      	orrs	r3, r7
 801a53c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a53e:	2cff      	cmp	r4, #255	; 0xff
 801a540:	d020      	beq.n	801a584 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a8>
 801a542:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801a544:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801a548:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a54a:	4367      	muls	r7, r4
 801a54c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801a54e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a552:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801a556:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a558:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a55c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a560:	fb04 fa0a 	mul.w	sl, r4, sl
 801a564:	44bc      	add	ip, r7
 801a566:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a56a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a56e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a572:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a576:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a57a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a57e:	ea4c 040a 	orr.w	r4, ip, sl
 801a582:	940d      	str	r4, [sp, #52]	; 0x34
 801a584:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801a586:	2cff      	cmp	r4, #255	; 0xff
 801a588:	d020      	beq.n	801a5cc <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5f0>
 801a58a:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801a58c:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801a590:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801a592:	4367      	muls	r7, r4
 801a594:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801a596:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a59a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801a59e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801a5a0:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a5a4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a5a8:	fb04 fa0a 	mul.w	sl, r4, sl
 801a5ac:	44bc      	add	ip, r7
 801a5ae:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a5b2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a5b6:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a5ba:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a5be:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a5c2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a5c6:	ea4c 040a 	orr.w	r4, ip, sl
 801a5ca:	9409      	str	r4, [sp, #36]	; 0x24
 801a5cc:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801a5ce:	2cff      	cmp	r4, #255	; 0xff
 801a5d0:	d020      	beq.n	801a614 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x638>
 801a5d2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801a5d4:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801a5d8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801a5da:	4367      	muls	r7, r4
 801a5dc:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801a5de:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a5e2:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801a5e6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801a5e8:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a5ec:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a5f0:	fb04 fa0a 	mul.w	sl, r4, sl
 801a5f4:	44bc      	add	ip, r7
 801a5f6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a5fa:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a5fe:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a602:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a606:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a60a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a60e:	ea4c 040a 	orr.w	r4, ip, sl
 801a612:	940e      	str	r4, [sp, #56]	; 0x38
 801a614:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801a616:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801a61a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a61e:	43d2      	mvns	r2, r2
 801a620:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801a624:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801a626:	b2d2      	uxtb	r2, r2
 801a628:	fb08 f707 	mul.w	r7, r8, r7
 801a62c:	fb01 770c 	mla	r7, r1, ip, r7
 801a630:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801a634:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801a636:	fb00 770c 	mla	r7, r0, ip, r7
 801a63a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801a63e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801a640:	fb09 770c 	mla	r7, r9, ip, r7
 801a644:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801a648:	fb08 f80c 	mul.w	r8, r8, ip
 801a64c:	0a3f      	lsrs	r7, r7, #8
 801a64e:	fb01 8303 	mla	r3, r1, r3, r8
 801a652:	9909      	ldr	r1, [sp, #36]	; 0x24
 801a654:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801a658:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801a65c:	990e      	ldr	r1, [sp, #56]	; 0x38
 801a65e:	fb00 330a 	mla	r3, r0, sl, r3
 801a662:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801a666:	fb09 3c0c 	mla	ip, r9, ip, r3
 801a66a:	f81e 3c03 	ldrb.w	r3, [lr, #-3]
 801a66e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a672:	fb03 f102 	mul.w	r1, r3, r2
 801a676:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801a67a:	1c4b      	adds	r3, r1, #1
 801a67c:	ea47 070c 	orr.w	r7, r7, ip
 801a680:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801a684:	eb07 2313 	add.w	r3, r7, r3, lsr #8
 801a688:	f80e 3c03 	strb.w	r3, [lr, #-3]
 801a68c:	f81e 3c02 	ldrb.w	r3, [lr, #-2]
 801a690:	4353      	muls	r3, r2
 801a692:	1c59      	adds	r1, r3, #1
 801a694:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801a698:	0a3b      	lsrs	r3, r7, #8
 801a69a:	0c3f      	lsrs	r7, r7, #16
 801a69c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801a6a0:	f80e 3c02 	strb.w	r3, [lr, #-2]
 801a6a4:	f81e 3c01 	ldrb.w	r3, [lr, #-1]
 801a6a8:	435a      	muls	r2, r3
 801a6aa:	1c53      	adds	r3, r2, #1
 801a6ac:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801a6b0:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801a6b4:	f80e 7c01 	strb.w	r7, [lr, #-1]
 801a6b8:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801a6ba:	f10e 0e03 	add.w	lr, lr, #3
 801a6be:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801a6c0:	f10b 3bff 	add.w	fp, fp, #4294967295
 801a6c4:	441a      	add	r2, r3
 801a6c6:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801a6c8:	922f      	str	r2, [sp, #188]	; 0xbc
 801a6ca:	441d      	add	r5, r3
 801a6cc:	e65a      	b.n	801a384 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
 801a6ce:	2800      	cmp	r0, #0
 801a6d0:	f43f aef7 	beq.w	801a4c2 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e6>
 801a6d4:	5c79      	ldrb	r1, [r7, r1]
 801a6d6:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801a6da:	9109      	str	r1, [sp, #36]	; 0x24
 801a6dc:	0e09      	lsrs	r1, r1, #24
 801a6de:	9111      	str	r1, [sp, #68]	; 0x44
 801a6e0:	e6ef      	b.n	801a4c2 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e6>
 801a6e2:	b01b      	add	sp, #108	; 0x6c
 801a6e4:	ecbd 8b0a 	vpop	{d8-d12}
 801a6e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a6ec <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh>:
 801a6ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a6f0:	b08d      	sub	sp, #52	; 0x34
 801a6f2:	e9dd 5717 	ldrd	r5, r7, [sp, #92]	; 0x5c
 801a6f6:	9103      	str	r1, [sp, #12]
 801a6f8:	fb07 5803 	mla	r8, r7, r3, r5
 801a6fc:	f89d 106c 	ldrb.w	r1, [sp, #108]	; 0x6c
 801a700:	9803      	ldr	r0, [sp, #12]
 801a702:	2f00      	cmp	r7, #0
 801a704:	910b      	str	r1, [sp, #44]	; 0x2c
 801a706:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801a70a:	9903      	ldr	r1, [sp, #12]
 801a70c:	9c03      	ldr	r4, [sp, #12]
 801a70e:	eb02 0608 	add.w	r6, r2, r8
 801a712:	f9bd e058 	ldrsh.w	lr, [sp, #88]	; 0x58
 801a716:	f89d c064 	ldrb.w	ip, [sp, #100]	; 0x64
 801a71a:	f89d 9068 	ldrb.w	r9, [sp, #104]	; 0x68
 801a71e:	7809      	ldrb	r1, [r1, #0]
 801a720:	7840      	ldrb	r0, [r0, #1]
 801a722:	78a4      	ldrb	r4, [r4, #2]
 801a724:	db51      	blt.n	801a7ca <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0xde>
 801a726:	45be      	cmp	lr, r7
 801a728:	dd4f      	ble.n	801a7ca <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0xde>
 801a72a:	2d00      	cmp	r5, #0
 801a72c:	db49      	blt.n	801a7c2 <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0xd6>
 801a72e:	42ab      	cmp	r3, r5
 801a730:	dd47      	ble.n	801a7c2 <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0xd6>
 801a732:	f812 2008 	ldrb.w	r2, [r2, r8]
 801a736:	9204      	str	r2, [sp, #16]
 801a738:	7872      	ldrb	r2, [r6, #1]
 801a73a:	9205      	str	r2, [sp, #20]
 801a73c:	78b2      	ldrb	r2, [r6, #2]
 801a73e:	9206      	str	r2, [sp, #24]
 801a740:	1c6a      	adds	r2, r5, #1
 801a742:	d449      	bmi.n	801a7d8 <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0xec>
 801a744:	4293      	cmp	r3, r2
 801a746:	dd47      	ble.n	801a7d8 <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0xec>
 801a748:	f1bc 0f00 	cmp.w	ip, #0
 801a74c:	d044      	beq.n	801a7d8 <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0xec>
 801a74e:	7972      	ldrb	r2, [r6, #5]
 801a750:	f896 b003 	ldrb.w	fp, [r6, #3]
 801a754:	f896 a004 	ldrb.w	sl, [r6, #4]
 801a758:	9201      	str	r2, [sp, #4]
 801a75a:	3701      	adds	r7, #1
 801a75c:	d444      	bmi.n	801a7e8 <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0xfc>
 801a75e:	45be      	cmp	lr, r7
 801a760:	dd42      	ble.n	801a7e8 <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0xfc>
 801a762:	f1b9 0f00 	cmp.w	r9, #0
 801a766:	f000 80c1 	beq.w	801a8ec <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x200>
 801a76a:	2d00      	cmp	r5, #0
 801a76c:	db38      	blt.n	801a7e0 <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0xf4>
 801a76e:	42ab      	cmp	r3, r5
 801a770:	dd36      	ble.n	801a7e0 <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0xf4>
 801a772:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 801a776:	f816 8002 	ldrb.w	r8, [r6, r2]
 801a77a:	2203      	movs	r2, #3
 801a77c:	fb03 6702 	mla	r7, r3, r2, r6
 801a780:	fb03 6202 	mla	r2, r3, r2, r6
 801a784:	787f      	ldrb	r7, [r7, #1]
 801a786:	f892 e002 	ldrb.w	lr, [r2, #2]
 801a78a:	9702      	str	r7, [sp, #8]
 801a78c:	3501      	adds	r5, #1
 801a78e:	d432      	bmi.n	801a7f6 <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x10a>
 801a790:	42ab      	cmp	r3, r5
 801a792:	dd30      	ble.n	801a7f6 <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x10a>
 801a794:	f1bc 0f00 	cmp.w	ip, #0
 801a798:	d031      	beq.n	801a7fe <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x112>
 801a79a:	2703      	movs	r7, #3
 801a79c:	fb13 7207 	smlabb	r2, r3, r7, r7
 801a7a0:	5cb5      	ldrb	r5, [r6, r2]
 801a7a2:	fb03 6207 	mla	r2, r3, r7, r6
 801a7a6:	fb03 6307 	mla	r3, r3, r7, r6
 801a7aa:	7912      	ldrb	r2, [r2, #4]
 801a7ac:	795e      	ldrb	r6, [r3, #5]
 801a7ae:	f1bc 0f0f 	cmp.w	ip, #15
 801a7b2:	d927      	bls.n	801a804 <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x118>
 801a7b4:	4b53      	ldr	r3, [pc, #332]	; (801a904 <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x218>)
 801a7b6:	f240 115b 	movw	r1, #347	; 0x15b
 801a7ba:	4a53      	ldr	r2, [pc, #332]	; (801a908 <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x21c>)
 801a7bc:	4853      	ldr	r0, [pc, #332]	; (801a90c <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x220>)
 801a7be:	f005 fc0f 	bl	801ffe0 <__assert_func>
 801a7c2:	e9cd 0405 	strd	r0, r4, [sp, #20]
 801a7c6:	9104      	str	r1, [sp, #16]
 801a7c8:	e7ba      	b.n	801a740 <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x54>
 801a7ca:	9401      	str	r4, [sp, #4]
 801a7cc:	4682      	mov	sl, r0
 801a7ce:	468b      	mov	fp, r1
 801a7d0:	9104      	str	r1, [sp, #16]
 801a7d2:	e9cd 0405 	strd	r0, r4, [sp, #20]
 801a7d6:	e7c0      	b.n	801a75a <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x6e>
 801a7d8:	9401      	str	r4, [sp, #4]
 801a7da:	4682      	mov	sl, r0
 801a7dc:	468b      	mov	fp, r1
 801a7de:	e7bc      	b.n	801a75a <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x6e>
 801a7e0:	46a6      	mov	lr, r4
 801a7e2:	9002      	str	r0, [sp, #8]
 801a7e4:	4688      	mov	r8, r1
 801a7e6:	e7d1      	b.n	801a78c <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0xa0>
 801a7e8:	4626      	mov	r6, r4
 801a7ea:	4602      	mov	r2, r0
 801a7ec:	460d      	mov	r5, r1
 801a7ee:	46a6      	mov	lr, r4
 801a7f0:	9002      	str	r0, [sp, #8]
 801a7f2:	4688      	mov	r8, r1
 801a7f4:	e7db      	b.n	801a7ae <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0xc2>
 801a7f6:	4626      	mov	r6, r4
 801a7f8:	4602      	mov	r2, r0
 801a7fa:	460d      	mov	r5, r1
 801a7fc:	e7d7      	b.n	801a7ae <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0xc2>
 801a7fe:	4626      	mov	r6, r4
 801a800:	4602      	mov	r2, r0
 801a802:	460d      	mov	r5, r1
 801a804:	f1b9 0f0f 	cmp.w	r9, #15
 801a808:	d8d4      	bhi.n	801a7b4 <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0xc8>
 801a80a:	fa1f f38c 	uxth.w	r3, ip
 801a80e:	fa1f fc89 	uxth.w	ip, r9
 801a812:	fb03 f70c 	mul.w	r7, r3, ip
 801a816:	011b      	lsls	r3, r3, #4
 801a818:	ebc7 1c0c 	rsb	ip, r7, ip, lsl #4
 801a81c:	9707      	str	r7, [sp, #28]
 801a81e:	f5c3 7780 	rsb	r7, r3, #256	; 0x100
 801a822:	fa1f fc8c 	uxth.w	ip, ip
 801a826:	eba7 070c 	sub.w	r7, r7, ip
 801a82a:	b2bf      	uxth	r7, r7
 801a82c:	9709      	str	r7, [sp, #36]	; 0x24
 801a82e:	9f07      	ldr	r7, [sp, #28]
 801a830:	1bdb      	subs	r3, r3, r7
 801a832:	f8bd 702c 	ldrh.w	r7, [sp, #44]	; 0x2c
 801a836:	b29b      	uxth	r3, r3
 801a838:	9708      	str	r7, [sp, #32]
 801a83a:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801a83c:	930a      	str	r3, [sp, #40]	; 0x28
 801a83e:	ea6f 0907 	mvn.w	r9, r7
 801a842:	fb03 fb0b 	mul.w	fp, r3, fp
 801a846:	9f04      	ldr	r7, [sp, #16]
 801a848:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a84a:	fa5f f989 	uxtb.w	r9, r9
 801a84e:	fb03 bb07 	mla	fp, r3, r7, fp
 801a852:	9f07      	ldr	r7, [sp, #28]
 801a854:	fb11 f109 	smulbb	r1, r1, r9
 801a858:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a85a:	fb0c b808 	mla	r8, ip, r8, fp
 801a85e:	fb10 f009 	smulbb	r0, r0, r9
 801a862:	fb14 f409 	smulbb	r4, r4, r9
 801a866:	fb07 8805 	mla	r8, r7, r5, r8
 801a86a:	9d08      	ldr	r5, [sp, #32]
 801a86c:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801a86e:	f3c8 2807 	ubfx	r8, r8, #8, #8
 801a872:	fb08 1805 	mla	r8, r8, r5, r1
 801a876:	9d05      	ldr	r5, [sp, #20]
 801a878:	fa1f f888 	uxth.w	r8, r8
 801a87c:	f108 0101 	add.w	r1, r8, #1
 801a880:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801a884:	9903      	ldr	r1, [sp, #12]
 801a886:	ea4f 2828 	mov.w	r8, r8, asr #8
 801a88a:	f881 8000 	strb.w	r8, [r1]
 801a88e:	fb03 f10a 	mul.w	r1, r3, sl
 801a892:	fb07 1105 	mla	r1, r7, r5, r1
 801a896:	9d02      	ldr	r5, [sp, #8]
 801a898:	fb0c 1105 	mla	r1, ip, r5, r1
 801a89c:	9d07      	ldr	r5, [sp, #28]
 801a89e:	fb05 1102 	mla	r1, r5, r2, r1
 801a8a2:	9a08      	ldr	r2, [sp, #32]
 801a8a4:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801a8a8:	fb01 0102 	mla	r1, r1, r2, r0
 801a8ac:	9a03      	ldr	r2, [sp, #12]
 801a8ae:	b289      	uxth	r1, r1
 801a8b0:	1c48      	adds	r0, r1, #1
 801a8b2:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 801a8b6:	1209      	asrs	r1, r1, #8
 801a8b8:	7051      	strb	r1, [r2, #1]
 801a8ba:	9a01      	ldr	r2, [sp, #4]
 801a8bc:	4353      	muls	r3, r2
 801a8be:	9a06      	ldr	r2, [sp, #24]
 801a8c0:	fb07 3702 	mla	r7, r7, r2, r3
 801a8c4:	9b08      	ldr	r3, [sp, #32]
 801a8c6:	fb0c 7c0e 	mla	ip, ip, lr, r7
 801a8ca:	fb05 c606 	mla	r6, r5, r6, ip
 801a8ce:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801a8d2:	fb06 4603 	mla	r6, r6, r3, r4
 801a8d6:	9b03      	ldr	r3, [sp, #12]
 801a8d8:	b2b6      	uxth	r6, r6
 801a8da:	f106 0e01 	add.w	lr, r6, #1
 801a8de:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801a8e2:	1236      	asrs	r6, r6, #8
 801a8e4:	709e      	strb	r6, [r3, #2]
 801a8e6:	b00d      	add	sp, #52	; 0x34
 801a8e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a8ec:	f1bc 0f0f 	cmp.w	ip, #15
 801a8f0:	f63f af60 	bhi.w	801a7b4 <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0xc8>
 801a8f4:	4626      	mov	r6, r4
 801a8f6:	4602      	mov	r2, r0
 801a8f8:	460d      	mov	r5, r1
 801a8fa:	46a6      	mov	lr, r4
 801a8fc:	9002      	str	r0, [sp, #8]
 801a8fe:	4688      	mov	r8, r1
 801a900:	e783      	b.n	801a80a <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x11e>
 801a902:	bf00      	nop
 801a904:	08025314 	.word	0x08025314
 801a908:	0802572a 	.word	0x0802572a
 801a90c:	080252e1 	.word	0x080252e1

0801a910 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a910:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a914:	ed2d 8b08 	vpush	{d8-d11}
 801a918:	b09f      	sub	sp, #124	; 0x7c
 801a91a:	eeb0 aa40 	vmov.f32	s20, s0
 801a91e:	eef0 9a60 	vmov.f32	s19, s1
 801a922:	920e      	str	r2, [sp, #56]	; 0x38
 801a924:	eeb0 9a41 	vmov.f32	s18, s2
 801a928:	9a35      	ldr	r2, [sp, #212]	; 0xd4
 801a92a:	eeb0 8a62 	vmov.f32	s16, s5
 801a92e:	9307      	str	r3, [sp, #28]
 801a930:	eef0 8a43 	vmov.f32	s17, s6
 801a934:	f89d 30e4 	ldrb.w	r3, [sp, #228]	; 0xe4
 801a938:	eef0 ba44 	vmov.f32	s23, s8
 801a93c:	901d      	str	r0, [sp, #116]	; 0x74
 801a93e:	eeb0 ba64 	vmov.f32	s22, s9
 801a942:	930c      	str	r3, [sp, #48]	; 0x30
 801a944:	eef0 aa45 	vmov.f32	s21, s10
 801a948:	6850      	ldr	r0, [r2, #4]
 801a94a:	910b      	str	r1, [sp, #44]	; 0x2c
 801a94c:	6812      	ldr	r2, [r2, #0]
 801a94e:	e9dd 1336 	ldrd	r1, r3, [sp, #216]	; 0xd8
 801a952:	e9dd a831 	ldrd	sl, r8, [sp, #196]	; 0xc4
 801a956:	fb00 1303 	mla	r3, r0, r3, r1
 801a95a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801a95e:	18d3      	adds	r3, r2, r3
 801a960:	9308      	str	r3, [sp, #32]
 801a962:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 801a964:	681b      	ldr	r3, [r3, #0]
 801a966:	930a      	str	r3, [sp, #40]	; 0x28
 801a968:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a96a:	43db      	mvns	r3, r3
 801a96c:	b2db      	uxtb	r3, r3
 801a96e:	9309      	str	r3, [sp, #36]	; 0x24
 801a970:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a972:	2b00      	cmp	r3, #0
 801a974:	dc03      	bgt.n	801a97e <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a976:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a978:	2b00      	cmp	r3, #0
 801a97a:	f340 81f5 	ble.w	801ad68 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x458>
 801a97e:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 801a980:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a984:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a988:	1e48      	subs	r0, r1, #1
 801a98a:	1e54      	subs	r4, r2, #1
 801a98c:	9b07      	ldr	r3, [sp, #28]
 801a98e:	2b00      	cmp	r3, #0
 801a990:	f340 80d5 	ble.w	801ab3e <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801a994:	ea5f 452a 	movs.w	r5, sl, asr #16
 801a998:	ea4f 4328 	mov.w	r3, r8, asr #16
 801a99c:	d406      	bmi.n	801a9ac <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801a99e:	4285      	cmp	r5, r0
 801a9a0:	da04      	bge.n	801a9ac <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801a9a2:	2b00      	cmp	r3, #0
 801a9a4:	db02      	blt.n	801a9ac <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801a9a6:	42a3      	cmp	r3, r4
 801a9a8:	f2c0 80ca 	blt.w	801ab40 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801a9ac:	3501      	adds	r5, #1
 801a9ae:	f100 80bb 	bmi.w	801ab28 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801a9b2:	42a9      	cmp	r1, r5
 801a9b4:	f2c0 80b8 	blt.w	801ab28 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801a9b8:	3301      	adds	r3, #1
 801a9ba:	f100 80b5 	bmi.w	801ab28 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801a9be:	429a      	cmp	r2, r3
 801a9c0:	f2c0 80b2 	blt.w	801ab28 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801a9c4:	9b07      	ldr	r3, [sp, #28]
 801a9c6:	9d08      	ldr	r5, [sp, #32]
 801a9c8:	930d      	str	r3, [sp, #52]	; 0x34
 801a9ca:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a9cc:	2b00      	cmp	r3, #0
 801a9ce:	f340 80d6 	ble.w	801ab7e <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26e>
 801a9d2:	9838      	ldr	r0, [sp, #224]	; 0xe0
 801a9d4:	ea4f 4428 	mov.w	r4, r8, asr #16
 801a9d8:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 801a9da:	f3ca 3203 	ubfx	r2, sl, #12, #4
 801a9de:	68c6      	ldr	r6, [r0, #12]
 801a9e0:	ea5f 402a 	movs.w	r0, sl, asr #16
 801a9e4:	f3c8 3103 	ubfx	r1, r8, #12, #4
 801a9e8:	689b      	ldr	r3, [r3, #8]
 801a9ea:	f100 810f 	bmi.w	801ac0c <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 801a9ee:	1e5f      	subs	r7, r3, #1
 801a9f0:	42b8      	cmp	r0, r7
 801a9f2:	f280 810b 	bge.w	801ac0c <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 801a9f6:	2c00      	cmp	r4, #0
 801a9f8:	f2c0 8108 	blt.w	801ac0c <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 801a9fc:	1e77      	subs	r7, r6, #1
 801a9fe:	42bc      	cmp	r4, r7
 801aa00:	f280 8104 	bge.w	801ac0c <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 801aa04:	b21b      	sxth	r3, r3
 801aa06:	fb04 0003 	mla	r0, r4, r3, r0
 801aa0a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801aa0c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801aa10:	1826      	adds	r6, r4, r0
 801aa12:	5c24      	ldrb	r4, [r4, r0]
 801aa14:	78b7      	ldrb	r7, [r6, #2]
 801aa16:	7870      	ldrb	r0, [r6, #1]
 801aa18:	970f      	str	r7, [sp, #60]	; 0x3c
 801aa1a:	7977      	ldrb	r7, [r6, #5]
 801aa1c:	f896 e003 	ldrb.w	lr, [r6, #3]
 801aa20:	f896 c004 	ldrb.w	ip, [r6, #4]
 801aa24:	9710      	str	r7, [sp, #64]	; 0x40
 801aa26:	b1c9      	cbz	r1, 801aa5c <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801aa28:	f04f 0b03 	mov.w	fp, #3
 801aa2c:	f06f 0904 	mvn.w	r9, #4
 801aa30:	3605      	adds	r6, #5
 801aa32:	fb13 930b 	smlabb	r3, r3, fp, r9
 801aa36:	eb06 0b03 	add.w	fp, r6, r3
 801aa3a:	5cf3      	ldrb	r3, [r6, r3]
 801aa3c:	9311      	str	r3, [sp, #68]	; 0x44
 801aa3e:	f89b 3001 	ldrb.w	r3, [fp, #1]
 801aa42:	9313      	str	r3, [sp, #76]	; 0x4c
 801aa44:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801aa48:	9315      	str	r3, [sp, #84]	; 0x54
 801aa4a:	f89b 3003 	ldrb.w	r3, [fp, #3]
 801aa4e:	9312      	str	r3, [sp, #72]	; 0x48
 801aa50:	f89b 3004 	ldrb.w	r3, [fp, #4]
 801aa54:	9314      	str	r3, [sp, #80]	; 0x50
 801aa56:	f89b 3005 	ldrb.w	r3, [fp, #5]
 801aa5a:	9316      	str	r3, [sp, #88]	; 0x58
 801aa5c:	b292      	uxth	r2, r2
 801aa5e:	9f11      	ldr	r7, [sp, #68]	; 0x44
 801aa60:	b289      	uxth	r1, r1
 801aa62:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 801aa66:	fb02 f601 	mul.w	r6, r2, r1
 801aa6a:	0112      	lsls	r2, r2, #4
 801aa6c:	ebc6 1101 	rsb	r1, r6, r1, lsl #4
 801aa70:	f5c2 7980 	rsb	r9, r2, #256	; 0x100
 801aa74:	1b92      	subs	r2, r2, r6
 801aa76:	b289      	uxth	r1, r1
 801aa78:	b292      	uxth	r2, r2
 801aa7a:	eba9 0901 	sub.w	r9, r9, r1
 801aa7e:	fb02 fe0e 	mul.w	lr, r2, lr
 801aa82:	fa1f f989 	uxth.w	r9, r9
 801aa86:	fb02 fc0c 	mul.w	ip, r2, ip
 801aa8a:	fb09 e404 	mla	r4, r9, r4, lr
 801aa8e:	f895 e000 	ldrb.w	lr, [r5]
 801aa92:	fb09 c000 	mla	r0, r9, r0, ip
 801aa96:	fb01 4407 	mla	r4, r1, r7, r4
 801aa9a:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801aa9c:	fb06 4407 	mla	r4, r6, r7, r4
 801aaa0:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801aaa2:	fb1e fe07 	smulbb	lr, lr, r7
 801aaa6:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801aaaa:	fb04 e403 	mla	r4, r4, r3, lr
 801aaae:	b2a4      	uxth	r4, r4
 801aab0:	f104 0e01 	add.w	lr, r4, #1
 801aab4:	eb0e 2e14 	add.w	lr, lr, r4, lsr #8
 801aab8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801aaba:	fb01 0004 	mla	r0, r1, r4, r0
 801aabe:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801aac0:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 801aac4:	fb06 0004 	mla	r0, r6, r4, r0
 801aac8:	786c      	ldrb	r4, [r5, #1]
 801aaca:	f885 e000 	strb.w	lr, [r5]
 801aace:	fb14 f407 	smulbb	r4, r4, r7
 801aad2:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801aad6:	fb00 4003 	mla	r0, r0, r3, r4
 801aada:	b280      	uxth	r0, r0
 801aadc:	1c44      	adds	r4, r0, #1
 801aade:	eb04 2010 	add.w	r0, r4, r0, lsr #8
 801aae2:	1200      	asrs	r0, r0, #8
 801aae4:	7068      	strb	r0, [r5, #1]
 801aae6:	9810      	ldr	r0, [sp, #64]	; 0x40
 801aae8:	4342      	muls	r2, r0
 801aaea:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801aaec:	fb09 2200 	mla	r2, r9, r0, r2
 801aaf0:	9815      	ldr	r0, [sp, #84]	; 0x54
 801aaf2:	fb01 2100 	mla	r1, r1, r0, r2
 801aaf6:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801aaf8:	fb06 1602 	mla	r6, r6, r2, r1
 801aafc:	78a9      	ldrb	r1, [r5, #2]
 801aafe:	fb11 f107 	smulbb	r1, r1, r7
 801ab02:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801ab06:	fb06 1303 	mla	r3, r6, r3, r1
 801ab0a:	b29b      	uxth	r3, r3
 801ab0c:	1c5e      	adds	r6, r3, #1
 801ab0e:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 801ab12:	121b      	asrs	r3, r3, #8
 801ab14:	70ab      	strb	r3, [r5, #2]
 801ab16:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 801ab18:	3503      	adds	r5, #3
 801ab1a:	449a      	add	sl, r3
 801ab1c:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801ab1e:	4498      	add	r8, r3
 801ab20:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ab22:	3b01      	subs	r3, #1
 801ab24:	930d      	str	r3, [sp, #52]	; 0x34
 801ab26:	e750      	b.n	801a9ca <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 801ab28:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 801ab2a:	449a      	add	sl, r3
 801ab2c:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801ab2e:	4498      	add	r8, r3
 801ab30:	9b07      	ldr	r3, [sp, #28]
 801ab32:	3b01      	subs	r3, #1
 801ab34:	9307      	str	r3, [sp, #28]
 801ab36:	9b08      	ldr	r3, [sp, #32]
 801ab38:	3303      	adds	r3, #3
 801ab3a:	9308      	str	r3, [sp, #32]
 801ab3c:	e726      	b.n	801a98c <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ab3e:	d026      	beq.n	801ab8e <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 801ab40:	9b07      	ldr	r3, [sp, #28]
 801ab42:	9833      	ldr	r0, [sp, #204]	; 0xcc
 801ab44:	3b01      	subs	r3, #1
 801ab46:	fb00 a003 	mla	r0, r0, r3, sl
 801ab4a:	1400      	asrs	r0, r0, #16
 801ab4c:	f53f af3a 	bmi.w	801a9c4 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801ab50:	3901      	subs	r1, #1
 801ab52:	4288      	cmp	r0, r1
 801ab54:	f6bf af36 	bge.w	801a9c4 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801ab58:	9934      	ldr	r1, [sp, #208]	; 0xd0
 801ab5a:	fb01 8303 	mla	r3, r1, r3, r8
 801ab5e:	141b      	asrs	r3, r3, #16
 801ab60:	f53f af30 	bmi.w	801a9c4 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801ab64:	3a01      	subs	r2, #1
 801ab66:	4293      	cmp	r3, r2
 801ab68:	f6bf af2c 	bge.w	801a9c4 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801ab6c:	9b08      	ldr	r3, [sp, #32]
 801ab6e:	f8dd c01c 	ldr.w	ip, [sp, #28]
 801ab72:	1cdd      	adds	r5, r3, #3
 801ab74:	f8bd e030 	ldrh.w	lr, [sp, #48]	; 0x30
 801ab78:	f1bc 0f00 	cmp.w	ip, #0
 801ab7c:	dc5f      	bgt.n	801ac3e <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801ab7e:	9b07      	ldr	r3, [sp, #28]
 801ab80:	9a08      	ldr	r2, [sp, #32]
 801ab82:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ab86:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801ab8a:	441a      	add	r2, r3
 801ab8c:	9208      	str	r2, [sp, #32]
 801ab8e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ab90:	2b00      	cmp	r3, #0
 801ab92:	f340 80e9 	ble.w	801ad68 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x458>
 801ab96:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ab9a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ab9c:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801aba0:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801aba4:	eef0 6a48 	vmov.f32	s13, s16
 801aba8:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801abac:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801abb0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801abb4:	ee16 aa90 	vmov	sl, s13
 801abb8:	eef0 6a68 	vmov.f32	s13, s17
 801abbc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801abc0:	ee16 8a90 	vmov	r8, s13
 801abc4:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801abc8:	ee69 7a27 	vmul.f32	s15, s18, s15
 801abcc:	ee37 8a48 	vsub.f32	s16, s14, s16
 801abd0:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801abd4:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801abd8:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801abdc:	ee18 2a10 	vmov	r2, s16
 801abe0:	eeb0 8a47 	vmov.f32	s16, s14
 801abe4:	fb92 f3f3 	sdiv	r3, r2, r3
 801abe8:	ee18 2a90 	vmov	r2, s17
 801abec:	9333      	str	r3, [sp, #204]	; 0xcc
 801abee:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801abf0:	eef0 8a67 	vmov.f32	s17, s15
 801abf4:	fb92 f3f3 	sdiv	r3, r2, r3
 801abf8:	9334      	str	r3, [sp, #208]	; 0xd0
 801abfa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801abfc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801abfe:	3b01      	subs	r3, #1
 801ac00:	930b      	str	r3, [sp, #44]	; 0x2c
 801ac02:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ac04:	bf08      	it	eq
 801ac06:	4613      	moveq	r3, r2
 801ac08:	9307      	str	r3, [sp, #28]
 801ac0a:	e6b1      	b.n	801a970 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801ac0c:	1c47      	adds	r7, r0, #1
 801ac0e:	d482      	bmi.n	801ab16 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 801ac10:	42bb      	cmp	r3, r7
 801ac12:	db80      	blt.n	801ab16 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 801ac14:	1c67      	adds	r7, r4, #1
 801ac16:	f53f af7e 	bmi.w	801ab16 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 801ac1a:	42be      	cmp	r6, r7
 801ac1c:	f6ff af7b 	blt.w	801ab16 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 801ac20:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801ac22:	b236      	sxth	r6, r6
 801ac24:	9001      	str	r0, [sp, #4]
 801ac26:	b21b      	sxth	r3, r3
 801ac28:	9600      	str	r6, [sp, #0]
 801ac2a:	981d      	ldr	r0, [sp, #116]	; 0x74
 801ac2c:	e9cd 1704 	strd	r1, r7, [sp, #16]
 801ac30:	e9cd 4202 	strd	r4, r2, [sp, #8]
 801ac34:	4629      	mov	r1, r5
 801ac36:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801ac38:	f7ff fd58 	bl	801a6ec <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh>
 801ac3c:	e76b      	b.n	801ab16 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 801ac3e:	9938      	ldr	r1, [sp, #224]	; 0xe0
 801ac40:	ea4f 402a 	mov.w	r0, sl, asr #16
 801ac44:	f3c8 3203 	ubfx	r2, r8, #12, #4
 801ac48:	f3ca 3303 	ubfx	r3, sl, #12, #4
 801ac4c:	f9b1 7008 	ldrsh.w	r7, [r1, #8]
 801ac50:	ea4f 4128 	mov.w	r1, r8, asr #16
 801ac54:	fb07 0101 	mla	r1, r7, r1, r0
 801ac58:	980a      	ldr	r0, [sp, #40]	; 0x28
 801ac5a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801ac5e:	1844      	adds	r4, r0, r1
 801ac60:	5c40      	ldrb	r0, [r0, r1]
 801ac62:	78a6      	ldrb	r6, [r4, #2]
 801ac64:	7861      	ldrb	r1, [r4, #1]
 801ac66:	960f      	str	r6, [sp, #60]	; 0x3c
 801ac68:	78e6      	ldrb	r6, [r4, #3]
 801ac6a:	910d      	str	r1, [sp, #52]	; 0x34
 801ac6c:	9610      	str	r6, [sp, #64]	; 0x40
 801ac6e:	f894 9004 	ldrb.w	r9, [r4, #4]
 801ac72:	f894 b005 	ldrb.w	fp, [r4, #5]
 801ac76:	b192      	cbz	r2, 801ac9e <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38e>
 801ac78:	f06f 0604 	mvn.w	r6, #4
 801ac7c:	2103      	movs	r1, #3
 801ac7e:	3405      	adds	r4, #5
 801ac80:	fb17 6701 	smlabb	r7, r7, r1, r6
 801ac84:	19e6      	adds	r6, r4, r7
 801ac86:	5de4      	ldrb	r4, [r4, r7]
 801ac88:	9417      	str	r4, [sp, #92]	; 0x5c
 801ac8a:	7874      	ldrb	r4, [r6, #1]
 801ac8c:	9419      	str	r4, [sp, #100]	; 0x64
 801ac8e:	78b4      	ldrb	r4, [r6, #2]
 801ac90:	941b      	str	r4, [sp, #108]	; 0x6c
 801ac92:	78f4      	ldrb	r4, [r6, #3]
 801ac94:	9418      	str	r4, [sp, #96]	; 0x60
 801ac96:	7934      	ldrb	r4, [r6, #4]
 801ac98:	941a      	str	r4, [sp, #104]	; 0x68
 801ac9a:	7974      	ldrb	r4, [r6, #5]
 801ac9c:	941c      	str	r4, [sp, #112]	; 0x70
 801ac9e:	b29b      	uxth	r3, r3
 801aca0:	9f10      	ldr	r7, [sp, #64]	; 0x40
 801aca2:	b292      	uxth	r2, r2
 801aca4:	9909      	ldr	r1, [sp, #36]	; 0x24
 801aca6:	3503      	adds	r5, #3
 801aca8:	f10c 3cff 	add.w	ip, ip, #4294967295
 801acac:	fb03 f402 	mul.w	r4, r3, r2
 801acb0:	011b      	lsls	r3, r3, #4
 801acb2:	ebc4 1202 	rsb	r2, r4, r2, lsl #4
 801acb6:	f5c3 7680 	rsb	r6, r3, #256	; 0x100
 801acba:	1b1b      	subs	r3, r3, r4
 801acbc:	b292      	uxth	r2, r2
 801acbe:	b29b      	uxth	r3, r3
 801acc0:	1ab6      	subs	r6, r6, r2
 801acc2:	435f      	muls	r7, r3
 801acc4:	b2b6      	uxth	r6, r6
 801acc6:	fb03 f909 	mul.w	r9, r3, r9
 801acca:	fb03 fb0b 	mul.w	fp, r3, fp
 801acce:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801acd0:	fb06 7000 	mla	r0, r6, r0, r7
 801acd4:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 801acd6:	fb06 bb03 	mla	fp, r6, r3, fp
 801acda:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801acdc:	fb02 0007 	mla	r0, r2, r7, r0
 801ace0:	9f18      	ldr	r7, [sp, #96]	; 0x60
 801ace2:	fb02 bb03 	mla	fp, r2, r3, fp
 801ace6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ace8:	fb04 0007 	mla	r0, r4, r7, r0
 801acec:	f815 7c06 	ldrb.w	r7, [r5, #-6]
 801acf0:	fb17 f701 	smulbb	r7, r7, r1
 801acf4:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801acf8:	990d      	ldr	r1, [sp, #52]	; 0x34
 801acfa:	fb00 700e 	mla	r0, r0, lr, r7
 801acfe:	fb06 9101 	mla	r1, r6, r1, r9
 801ad02:	b280      	uxth	r0, r0
 801ad04:	1c47      	adds	r7, r0, #1
 801ad06:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 801ad0a:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801ad0c:	1200      	asrs	r0, r0, #8
 801ad0e:	f805 0c06 	strb.w	r0, [r5, #-6]
 801ad12:	9819      	ldr	r0, [sp, #100]	; 0x64
 801ad14:	fb02 1100 	mla	r1, r2, r0, r1
 801ad18:	981a      	ldr	r0, [sp, #104]	; 0x68
 801ad1a:	fb04 1100 	mla	r1, r4, r0, r1
 801ad1e:	f815 0c05 	ldrb.w	r0, [r5, #-5]
 801ad22:	fb04 b403 	mla	r4, r4, r3, fp
 801ad26:	f815 3c04 	ldrb.w	r3, [r5, #-4]
 801ad2a:	fb10 f007 	smulbb	r0, r0, r7
 801ad2e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801ad32:	fb13 f307 	smulbb	r3, r3, r7
 801ad36:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801ad3a:	fb01 010e 	mla	r1, r1, lr, r0
 801ad3e:	fb04 340e 	mla	r4, r4, lr, r3
 801ad42:	b289      	uxth	r1, r1
 801ad44:	b2a4      	uxth	r4, r4
 801ad46:	1c48      	adds	r0, r1, #1
 801ad48:	1c63      	adds	r3, r4, #1
 801ad4a:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 801ad4e:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801ad52:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 801ad54:	1209      	asrs	r1, r1, #8
 801ad56:	1224      	asrs	r4, r4, #8
 801ad58:	449a      	add	sl, r3
 801ad5a:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801ad5c:	f805 1c05 	strb.w	r1, [r5, #-5]
 801ad60:	f805 4c04 	strb.w	r4, [r5, #-4]
 801ad64:	4498      	add	r8, r3
 801ad66:	e707      	b.n	801ab78 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801ad68:	b01f      	add	sp, #124	; 0x7c
 801ad6a:	ecbd 8b08 	vpop	{d8-d11}
 801ad6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801ad74 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh>:
 801ad74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ad78:	b085      	sub	sp, #20
 801ad7a:	784d      	ldrb	r5, [r1, #1]
 801ad7c:	788e      	ldrb	r6, [r1, #2]
 801ad7e:	f89d 4048 	ldrb.w	r4, [sp, #72]	; 0x48
 801ad82:	f9bd 9038 	ldrsh.w	r9, [sp, #56]	; 0x38
 801ad86:	9403      	str	r4, [sp, #12]
 801ad88:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
 801ad8c:	780c      	ldrb	r4, [r1, #0]
 801ad8e:	e9dd c70f 	ldrd	ip, r7, [sp, #60]	; 0x3c
 801ad92:	fb07 ce03 	mla	lr, r7, r3, ip
 801ad96:	2f00      	cmp	r7, #0
 801ad98:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801ad9c:	eb02 0b0e 	add.w	fp, r2, lr
 801ada0:	db56      	blt.n	801ae50 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0xdc>
 801ada2:	45b9      	cmp	r9, r7
 801ada4:	dd54      	ble.n	801ae50 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0xdc>
 801ada6:	f1bc 0f00 	cmp.w	ip, #0
 801adaa:	db4d      	blt.n	801ae48 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0xd4>
 801adac:	4563      	cmp	r3, ip
 801adae:	dd4b      	ble.n	801ae48 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0xd4>
 801adb0:	f812 200e 	ldrb.w	r2, [r2, lr]
 801adb4:	9200      	str	r2, [sp, #0]
 801adb6:	f89b 2001 	ldrb.w	r2, [fp, #1]
 801adba:	9201      	str	r2, [sp, #4]
 801adbc:	f89b 2002 	ldrb.w	r2, [fp, #2]
 801adc0:	9202      	str	r2, [sp, #8]
 801adc2:	f11c 0201 	adds.w	r2, ip, #1
 801adc6:	d44a      	bmi.n	801ae5e <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0xea>
 801adc8:	4293      	cmp	r3, r2
 801adca:	dd48      	ble.n	801ae5e <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0xea>
 801adcc:	2800      	cmp	r0, #0
 801adce:	d046      	beq.n	801ae5e <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0xea>
 801add0:	f89b e003 	ldrb.w	lr, [fp, #3]
 801add4:	f89b 8004 	ldrb.w	r8, [fp, #4]
 801add8:	f89b a005 	ldrb.w	sl, [fp, #5]
 801addc:	3701      	adds	r7, #1
 801adde:	d446      	bmi.n	801ae6e <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0xfa>
 801ade0:	45b9      	cmp	r9, r7
 801ade2:	dd44      	ble.n	801ae6e <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0xfa>
 801ade4:	9a03      	ldr	r2, [sp, #12]
 801ade6:	2a00      	cmp	r2, #0
 801ade8:	d045      	beq.n	801ae76 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0x102>
 801adea:	f1bc 0f00 	cmp.w	ip, #0
 801adee:	db3a      	blt.n	801ae66 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0xf2>
 801adf0:	4563      	cmp	r3, ip
 801adf2:	dd38      	ble.n	801ae66 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0xf2>
 801adf4:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 801adf8:	f04f 0903 	mov.w	r9, #3
 801adfc:	f81b 7002 	ldrb.w	r7, [fp, r2]
 801ae00:	fb03 b209 	mla	r2, r3, r9, fp
 801ae04:	fb03 b909 	mla	r9, r3, r9, fp
 801ae08:	7852      	ldrb	r2, [r2, #1]
 801ae0a:	f899 9002 	ldrb.w	r9, [r9, #2]
 801ae0e:	f11c 0c01 	adds.w	ip, ip, #1
 801ae12:	d40d      	bmi.n	801ae30 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0xbc>
 801ae14:	4563      	cmp	r3, ip
 801ae16:	dd0b      	ble.n	801ae30 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0xbc>
 801ae18:	b160      	cbz	r0, 801ae34 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0xc0>
 801ae1a:	2603      	movs	r6, #3
 801ae1c:	fb13 6406 	smlabb	r4, r3, r6, r6
 801ae20:	fb03 b506 	mla	r5, r3, r6, fp
 801ae24:	fb03 b306 	mla	r3, r3, r6, fp
 801ae28:	f81b 4004 	ldrb.w	r4, [fp, r4]
 801ae2c:	792d      	ldrb	r5, [r5, #4]
 801ae2e:	795e      	ldrb	r6, [r3, #5]
 801ae30:	280f      	cmp	r0, #15
 801ae32:	d802      	bhi.n	801ae3a <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0xc6>
 801ae34:	9b03      	ldr	r3, [sp, #12]
 801ae36:	2b0f      	cmp	r3, #15
 801ae38:	d922      	bls.n	801ae80 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0x10c>
 801ae3a:	4b2f      	ldr	r3, [pc, #188]	; (801aef8 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0x184>)
 801ae3c:	f240 115b 	movw	r1, #347	; 0x15b
 801ae40:	4a2e      	ldr	r2, [pc, #184]	; (801aefc <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0x188>)
 801ae42:	482f      	ldr	r0, [pc, #188]	; (801af00 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0x18c>)
 801ae44:	f005 f8cc 	bl	801ffe0 <__assert_func>
 801ae48:	e9cd 5601 	strd	r5, r6, [sp, #4]
 801ae4c:	9400      	str	r4, [sp, #0]
 801ae4e:	e7b8      	b.n	801adc2 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0x4e>
 801ae50:	46b2      	mov	sl, r6
 801ae52:	46a8      	mov	r8, r5
 801ae54:	46a6      	mov	lr, r4
 801ae56:	9400      	str	r4, [sp, #0]
 801ae58:	e9cd 5601 	strd	r5, r6, [sp, #4]
 801ae5c:	e7be      	b.n	801addc <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0x68>
 801ae5e:	46b2      	mov	sl, r6
 801ae60:	46a8      	mov	r8, r5
 801ae62:	46a6      	mov	lr, r4
 801ae64:	e7ba      	b.n	801addc <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0x68>
 801ae66:	46b1      	mov	r9, r6
 801ae68:	462a      	mov	r2, r5
 801ae6a:	4627      	mov	r7, r4
 801ae6c:	e7cf      	b.n	801ae0e <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0x9a>
 801ae6e:	46b1      	mov	r9, r6
 801ae70:	462a      	mov	r2, r5
 801ae72:	4627      	mov	r7, r4
 801ae74:	e7dc      	b.n	801ae30 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0xbc>
 801ae76:	280f      	cmp	r0, #15
 801ae78:	d8df      	bhi.n	801ae3a <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0xc6>
 801ae7a:	46b1      	mov	r9, r6
 801ae7c:	462a      	mov	r2, r5
 801ae7e:	4627      	mov	r7, r4
 801ae80:	f8bd b00c 	ldrh.w	fp, [sp, #12]
 801ae84:	b280      	uxth	r0, r0
 801ae86:	fb00 f30b 	mul.w	r3, r0, fp
 801ae8a:	0100      	lsls	r0, r0, #4
 801ae8c:	ebc3 1b0b 	rsb	fp, r3, fp, lsl #4
 801ae90:	f5c0 7c80 	rsb	ip, r0, #256	; 0x100
 801ae94:	1ac0      	subs	r0, r0, r3
 801ae96:	fa1f fb8b 	uxth.w	fp, fp
 801ae9a:	b280      	uxth	r0, r0
 801ae9c:	ebac 0c0b 	sub.w	ip, ip, fp
 801aea0:	9003      	str	r0, [sp, #12]
 801aea2:	fa1f fc8c 	uxth.w	ip, ip
 801aea6:	fb00 fe0e 	mul.w	lr, r0, lr
 801aeaa:	9800      	ldr	r0, [sp, #0]
 801aeac:	fb0c ee00 	mla	lr, ip, r0, lr
 801aeb0:	9803      	ldr	r0, [sp, #12]
 801aeb2:	fb00 f808 	mul.w	r8, r0, r8
 801aeb6:	9801      	ldr	r0, [sp, #4]
 801aeb8:	fb0b ee07 	mla	lr, fp, r7, lr
 801aebc:	fb0c 8800 	mla	r8, ip, r0, r8
 801aec0:	fb03 ee04 	mla	lr, r3, r4, lr
 801aec4:	fb0b 8202 	mla	r2, fp, r2, r8
 801aec8:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 801aecc:	fb03 2505 	mla	r5, r3, r5, r2
 801aed0:	9a03      	ldr	r2, [sp, #12]
 801aed2:	f881 e000 	strb.w	lr, [r1]
 801aed6:	fb02 f00a 	mul.w	r0, r2, sl
 801aeda:	9a02      	ldr	r2, [sp, #8]
 801aedc:	122d      	asrs	r5, r5, #8
 801aede:	fb0c 0c02 	mla	ip, ip, r2, r0
 801aee2:	704d      	strb	r5, [r1, #1]
 801aee4:	fb0b c909 	mla	r9, fp, r9, ip
 801aee8:	fb03 9606 	mla	r6, r3, r6, r9
 801aeec:	1236      	asrs	r6, r6, #8
 801aeee:	708e      	strb	r6, [r1, #2]
 801aef0:	b005      	add	sp, #20
 801aef2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801aef6:	bf00      	nop
 801aef8:	08025314 	.word	0x08025314
 801aefc:	0802572a 	.word	0x0802572a
 801af00:	080252e1 	.word	0x080252e1

0801af04 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801af04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801af08:	ed2d 8b08 	vpush	{d8-d11}
 801af0c:	b09b      	sub	sp, #108	; 0x6c
 801af0e:	eeb0 aa40 	vmov.f32	s20, s0
 801af12:	eef0 9a60 	vmov.f32	s19, s1
 801af16:	920b      	str	r2, [sp, #44]	; 0x2c
 801af18:	eeb0 9a41 	vmov.f32	s18, s2
 801af1c:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 801af1e:	eeb0 8a62 	vmov.f32	s16, s5
 801af22:	9019      	str	r0, [sp, #100]	; 0x64
 801af24:	eef0 8a43 	vmov.f32	s17, s6
 801af28:	6850      	ldr	r0, [r2, #4]
 801af2a:	eef0 ba44 	vmov.f32	s23, s8
 801af2e:	9109      	str	r1, [sp, #36]	; 0x24
 801af30:	eeb0 ba64 	vmov.f32	s22, s9
 801af34:	9306      	str	r3, [sp, #24]
 801af36:	eef0 aa45 	vmov.f32	s21, s10
 801af3a:	6812      	ldr	r2, [r2, #0]
 801af3c:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 801af40:	e9dd b42d 	ldrd	fp, r4, [sp, #180]	; 0xb4
 801af44:	fb00 1303 	mla	r3, r0, r3, r1
 801af48:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801af4c:	18d3      	adds	r3, r2, r3
 801af4e:	9307      	str	r3, [sp, #28]
 801af50:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801af52:	681b      	ldr	r3, [r3, #0]
 801af54:	9308      	str	r3, [sp, #32]
 801af56:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801af58:	2b00      	cmp	r3, #0
 801af5a:	dc03      	bgt.n	801af64 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801af5c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801af5e:	2b00      	cmp	r3, #0
 801af60:	f340 81ab 	ble.w	801b2ba <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b6>
 801af64:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801af66:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801af6a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801af6e:	1e48      	subs	r0, r1, #1
 801af70:	1e55      	subs	r5, r2, #1
 801af72:	9b06      	ldr	r3, [sp, #24]
 801af74:	2b00      	cmp	r3, #0
 801af76:	f340 80b1 	ble.w	801b0dc <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801af7a:	ea5f 462b 	movs.w	r6, fp, asr #16
 801af7e:	ea4f 4324 	mov.w	r3, r4, asr #16
 801af82:	d406      	bmi.n	801af92 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801af84:	4286      	cmp	r6, r0
 801af86:	da04      	bge.n	801af92 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801af88:	2b00      	cmp	r3, #0
 801af8a:	db02      	blt.n	801af92 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801af8c:	42ab      	cmp	r3, r5
 801af8e:	f2c0 80a6 	blt.w	801b0de <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 801af92:	3601      	adds	r6, #1
 801af94:	f100 8097 	bmi.w	801b0c6 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801af98:	42b1      	cmp	r1, r6
 801af9a:	f2c0 8094 	blt.w	801b0c6 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801af9e:	3301      	adds	r3, #1
 801afa0:	f100 8091 	bmi.w	801b0c6 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801afa4:	429a      	cmp	r2, r3
 801afa6:	f2c0 808e 	blt.w	801b0c6 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801afaa:	9b06      	ldr	r3, [sp, #24]
 801afac:	9e07      	ldr	r6, [sp, #28]
 801afae:	930a      	str	r3, [sp, #40]	; 0x28
 801afb0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801afb2:	2b00      	cmp	r3, #0
 801afb4:	f340 80b0 	ble.w	801b118 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801afb8:	9834      	ldr	r0, [sp, #208]	; 0xd0
 801afba:	1425      	asrs	r5, r4, #16
 801afbc:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801afbe:	f3cb 3203 	ubfx	r2, fp, #12, #4
 801afc2:	68c7      	ldr	r7, [r0, #12]
 801afc4:	ea5f 402b 	movs.w	r0, fp, asr #16
 801afc8:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801afcc:	689b      	ldr	r3, [r3, #8]
 801afce:	f100 80ea 	bmi.w	801b1a6 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801afd2:	f103 3cff 	add.w	ip, r3, #4294967295
 801afd6:	4560      	cmp	r0, ip
 801afd8:	f280 80e5 	bge.w	801b1a6 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801afdc:	2d00      	cmp	r5, #0
 801afde:	f2c0 80e2 	blt.w	801b1a6 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801afe2:	f107 3cff 	add.w	ip, r7, #4294967295
 801afe6:	4565      	cmp	r5, ip
 801afe8:	f280 80dd 	bge.w	801b1a6 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801afec:	b21b      	sxth	r3, r3
 801afee:	fb05 0003 	mla	r0, r5, r3, r0
 801aff2:	9d08      	ldr	r5, [sp, #32]
 801aff4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801aff8:	182f      	adds	r7, r5, r0
 801affa:	5c2d      	ldrb	r5, [r5, r0]
 801affc:	7878      	ldrb	r0, [r7, #1]
 801affe:	f897 e002 	ldrb.w	lr, [r7, #2]
 801b002:	900c      	str	r0, [sp, #48]	; 0x30
 801b004:	f897 9003 	ldrb.w	r9, [r7, #3]
 801b008:	f897 8004 	ldrb.w	r8, [r7, #4]
 801b00c:	f897 a005 	ldrb.w	sl, [r7, #5]
 801b010:	b1c9      	cbz	r1, 801b046 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x142>
 801b012:	f04f 0c03 	mov.w	ip, #3
 801b016:	f06f 0004 	mvn.w	r0, #4
 801b01a:	3705      	adds	r7, #5
 801b01c:	fb13 030c 	smlabb	r3, r3, ip, r0
 801b020:	eb07 0c03 	add.w	ip, r7, r3
 801b024:	5cfb      	ldrb	r3, [r7, r3]
 801b026:	930d      	str	r3, [sp, #52]	; 0x34
 801b028:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801b02c:	930f      	str	r3, [sp, #60]	; 0x3c
 801b02e:	f89c 3002 	ldrb.w	r3, [ip, #2]
 801b032:	9311      	str	r3, [sp, #68]	; 0x44
 801b034:	f89c 3003 	ldrb.w	r3, [ip, #3]
 801b038:	930e      	str	r3, [sp, #56]	; 0x38
 801b03a:	f89c 3004 	ldrb.w	r3, [ip, #4]
 801b03e:	9310      	str	r3, [sp, #64]	; 0x40
 801b040:	f89c 3005 	ldrb.w	r3, [ip, #5]
 801b044:	9312      	str	r3, [sp, #72]	; 0x48
 801b046:	b292      	uxth	r2, r2
 801b048:	980c      	ldr	r0, [sp, #48]	; 0x30
 801b04a:	b289      	uxth	r1, r1
 801b04c:	fb02 f301 	mul.w	r3, r2, r1
 801b050:	0112      	lsls	r2, r2, #4
 801b052:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801b056:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801b05a:	1ad2      	subs	r2, r2, r3
 801b05c:	b289      	uxth	r1, r1
 801b05e:	b292      	uxth	r2, r2
 801b060:	1a7f      	subs	r7, r7, r1
 801b062:	fb02 f909 	mul.w	r9, r2, r9
 801b066:	b2bf      	uxth	r7, r7
 801b068:	fb02 f808 	mul.w	r8, r2, r8
 801b06c:	fb02 fa0a 	mul.w	sl, r2, sl
 801b070:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b072:	fb07 9905 	mla	r9, r7, r5, r9
 801b076:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801b078:	fb07 8800 	mla	r8, r7, r0, r8
 801b07c:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801b07e:	fb07 aa0e 	mla	sl, r7, lr, sl
 801b082:	fb01 9905 	mla	r9, r1, r5, r9
 801b086:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801b088:	fb01 8800 	mla	r8, r1, r0, r8
 801b08c:	9810      	ldr	r0, [sp, #64]	; 0x40
 801b08e:	fb01 a102 	mla	r1, r1, r2, sl
 801b092:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b094:	fb03 9905 	mla	r9, r3, r5, r9
 801b098:	fb03 8800 	mla	r8, r3, r0, r8
 801b09c:	fb03 1302 	mla	r3, r3, r2, r1
 801b0a0:	ea4f 2929 	mov.w	r9, r9, asr #8
 801b0a4:	ea4f 2828 	mov.w	r8, r8, asr #8
 801b0a8:	121b      	asrs	r3, r3, #8
 801b0aa:	f886 9000 	strb.w	r9, [r6]
 801b0ae:	f886 8001 	strb.w	r8, [r6, #1]
 801b0b2:	70b3      	strb	r3, [r6, #2]
 801b0b4:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801b0b6:	3603      	adds	r6, #3
 801b0b8:	449b      	add	fp, r3
 801b0ba:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b0bc:	441c      	add	r4, r3
 801b0be:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b0c0:	3b01      	subs	r3, #1
 801b0c2:	930a      	str	r3, [sp, #40]	; 0x28
 801b0c4:	e774      	b.n	801afb0 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 801b0c6:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801b0c8:	449b      	add	fp, r3
 801b0ca:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b0cc:	441c      	add	r4, r3
 801b0ce:	9b06      	ldr	r3, [sp, #24]
 801b0d0:	3b01      	subs	r3, #1
 801b0d2:	9306      	str	r3, [sp, #24]
 801b0d4:	9b07      	ldr	r3, [sp, #28]
 801b0d6:	3303      	adds	r3, #3
 801b0d8:	9307      	str	r3, [sp, #28]
 801b0da:	e74a      	b.n	801af72 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b0dc:	d024      	beq.n	801b128 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 801b0de:	9b06      	ldr	r3, [sp, #24]
 801b0e0:	982f      	ldr	r0, [sp, #188]	; 0xbc
 801b0e2:	3b01      	subs	r3, #1
 801b0e4:	fb00 b003 	mla	r0, r0, r3, fp
 801b0e8:	1400      	asrs	r0, r0, #16
 801b0ea:	f53f af5e 	bmi.w	801afaa <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801b0ee:	3901      	subs	r1, #1
 801b0f0:	4288      	cmp	r0, r1
 801b0f2:	f6bf af5a 	bge.w	801afaa <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801b0f6:	9930      	ldr	r1, [sp, #192]	; 0xc0
 801b0f8:	fb01 4303 	mla	r3, r1, r3, r4
 801b0fc:	141b      	asrs	r3, r3, #16
 801b0fe:	f53f af54 	bmi.w	801afaa <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801b102:	3a01      	subs	r2, #1
 801b104:	4293      	cmp	r3, r2
 801b106:	f6bf af50 	bge.w	801afaa <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801b10a:	9b07      	ldr	r3, [sp, #28]
 801b10c:	f8dd e018 	ldr.w	lr, [sp, #24]
 801b110:	1cde      	adds	r6, r3, #3
 801b112:	f1be 0f00 	cmp.w	lr, #0
 801b116:	dc5f      	bgt.n	801b1d8 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 801b118:	9b06      	ldr	r3, [sp, #24]
 801b11a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801b11e:	9b07      	ldr	r3, [sp, #28]
 801b120:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801b124:	4423      	add	r3, r4
 801b126:	9307      	str	r3, [sp, #28]
 801b128:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b12a:	2b00      	cmp	r3, #0
 801b12c:	f340 80c5 	ble.w	801b2ba <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b6>
 801b130:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b134:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b136:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801b13a:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801b13e:	eef0 6a48 	vmov.f32	s13, s16
 801b142:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801b146:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801b14a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b14e:	ee16 ba90 	vmov	fp, s13
 801b152:	eef0 6a68 	vmov.f32	s13, s17
 801b156:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b15a:	ee16 4a90 	vmov	r4, s13
 801b15e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801b162:	ee69 7a27 	vmul.f32	s15, s18, s15
 801b166:	ee37 8a48 	vsub.f32	s16, s14, s16
 801b16a:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801b16e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801b172:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801b176:	ee18 2a10 	vmov	r2, s16
 801b17a:	eeb0 8a47 	vmov.f32	s16, s14
 801b17e:	fb92 f3f3 	sdiv	r3, r2, r3
 801b182:	ee18 2a90 	vmov	r2, s17
 801b186:	932f      	str	r3, [sp, #188]	; 0xbc
 801b188:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b18a:	eef0 8a67 	vmov.f32	s17, s15
 801b18e:	fb92 f3f3 	sdiv	r3, r2, r3
 801b192:	9330      	str	r3, [sp, #192]	; 0xc0
 801b194:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b196:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801b198:	3b01      	subs	r3, #1
 801b19a:	9309      	str	r3, [sp, #36]	; 0x24
 801b19c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b19e:	bf08      	it	eq
 801b1a0:	4613      	moveq	r3, r2
 801b1a2:	9306      	str	r3, [sp, #24]
 801b1a4:	e6d7      	b.n	801af56 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801b1a6:	f110 0c01 	adds.w	ip, r0, #1
 801b1aa:	d483      	bmi.n	801b0b4 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b0>
 801b1ac:	4563      	cmp	r3, ip
 801b1ae:	db81      	blt.n	801b0b4 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b0>
 801b1b0:	f115 0c01 	adds.w	ip, r5, #1
 801b1b4:	f53f af7e 	bmi.w	801b0b4 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b0>
 801b1b8:	4567      	cmp	r7, ip
 801b1ba:	f6ff af7b 	blt.w	801b0b4 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b0>
 801b1be:	b23f      	sxth	r7, r7
 801b1c0:	b21b      	sxth	r3, r3
 801b1c2:	9700      	str	r7, [sp, #0]
 801b1c4:	e9cd 2103 	strd	r2, r1, [sp, #12]
 801b1c8:	e9cd 0501 	strd	r0, r5, [sp, #4]
 801b1cc:	9a08      	ldr	r2, [sp, #32]
 801b1ce:	4631      	mov	r1, r6
 801b1d0:	9819      	ldr	r0, [sp, #100]	; 0x64
 801b1d2:	f7ff fdcf 	bl	801ad74 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh>
 801b1d6:	e76d      	b.n	801b0b4 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b0>
 801b1d8:	9934      	ldr	r1, [sp, #208]	; 0xd0
 801b1da:	ea4f 402b 	mov.w	r0, fp, asr #16
 801b1de:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801b1e2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801b1e6:	f9b1 c008 	ldrsh.w	ip, [r1, #8]
 801b1ea:	1421      	asrs	r1, r4, #16
 801b1ec:	930a      	str	r3, [sp, #40]	; 0x28
 801b1ee:	fb0c 0101 	mla	r1, ip, r1, r0
 801b1f2:	9808      	ldr	r0, [sp, #32]
 801b1f4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801b1f8:	1845      	adds	r5, r0, r1
 801b1fa:	5c40      	ldrb	r0, [r0, r1]
 801b1fc:	796f      	ldrb	r7, [r5, #5]
 801b1fe:	7869      	ldrb	r1, [r5, #1]
 801b200:	f895 8002 	ldrb.w	r8, [r5, #2]
 801b204:	f895 a003 	ldrb.w	sl, [r5, #3]
 801b208:	f895 9004 	ldrb.w	r9, [r5, #4]
 801b20c:	970c      	str	r7, [sp, #48]	; 0x30
 801b20e:	b1a2      	cbz	r2, 801b23a <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x336>
 801b210:	2703      	movs	r7, #3
 801b212:	f06f 0304 	mvn.w	r3, #4
 801b216:	3505      	adds	r5, #5
 801b218:	fb1c 3c07 	smlabb	ip, ip, r7, r3
 801b21c:	eb05 070c 	add.w	r7, r5, ip
 801b220:	f815 500c 	ldrb.w	r5, [r5, ip]
 801b224:	9513      	str	r5, [sp, #76]	; 0x4c
 801b226:	787d      	ldrb	r5, [r7, #1]
 801b228:	9515      	str	r5, [sp, #84]	; 0x54
 801b22a:	78bd      	ldrb	r5, [r7, #2]
 801b22c:	9517      	str	r5, [sp, #92]	; 0x5c
 801b22e:	78fd      	ldrb	r5, [r7, #3]
 801b230:	9514      	str	r5, [sp, #80]	; 0x50
 801b232:	793d      	ldrb	r5, [r7, #4]
 801b234:	9516      	str	r5, [sp, #88]	; 0x58
 801b236:	797d      	ldrb	r5, [r7, #5]
 801b238:	9518      	str	r5, [sp, #96]	; 0x60
 801b23a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801b23e:	b292      	uxth	r2, r2
 801b240:	3603      	adds	r6, #3
 801b242:	f10e 3eff 	add.w	lr, lr, #4294967295
 801b246:	fb03 f502 	mul.w	r5, r3, r2
 801b24a:	011b      	lsls	r3, r3, #4
 801b24c:	ebc5 1202 	rsb	r2, r5, r2, lsl #4
 801b250:	f5c3 7780 	rsb	r7, r3, #256	; 0x100
 801b254:	1b5b      	subs	r3, r3, r5
 801b256:	b292      	uxth	r2, r2
 801b258:	b29b      	uxth	r3, r3
 801b25a:	1abf      	subs	r7, r7, r2
 801b25c:	fb03 f909 	mul.w	r9, r3, r9
 801b260:	b2bf      	uxth	r7, r7
 801b262:	fb03 fa0a 	mul.w	sl, r3, sl
 801b266:	fb07 9901 	mla	r9, r7, r1, r9
 801b26a:	9915      	ldr	r1, [sp, #84]	; 0x54
 801b26c:	fb07 aa00 	mla	sl, r7, r0, sl
 801b270:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801b272:	fb02 9901 	mla	r9, r2, r1, r9
 801b276:	9916      	ldr	r1, [sp, #88]	; 0x58
 801b278:	fb02 aa00 	mla	sl, r2, r0, sl
 801b27c:	9814      	ldr	r0, [sp, #80]	; 0x50
 801b27e:	fb05 9901 	mla	r9, r5, r1, r9
 801b282:	990c      	ldr	r1, [sp, #48]	; 0x30
 801b284:	fb05 aa00 	mla	sl, r5, r0, sl
 801b288:	434b      	muls	r3, r1
 801b28a:	9917      	ldr	r1, [sp, #92]	; 0x5c
 801b28c:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 801b290:	fb07 3308 	mla	r3, r7, r8, r3
 801b294:	ea4f 2929 	mov.w	r9, r9, asr #8
 801b298:	f806 ac06 	strb.w	sl, [r6, #-6]
 801b29c:	fb02 3201 	mla	r2, r2, r1, r3
 801b2a0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b2a2:	f806 9c05 	strb.w	r9, [r6, #-5]
 801b2a6:	fb05 2503 	mla	r5, r5, r3, r2
 801b2aa:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801b2ac:	122d      	asrs	r5, r5, #8
 801b2ae:	449b      	add	fp, r3
 801b2b0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b2b2:	f806 5c04 	strb.w	r5, [r6, #-4]
 801b2b6:	441c      	add	r4, r3
 801b2b8:	e72b      	b.n	801b112 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801b2ba:	b01b      	add	sp, #108	; 0x6c
 801b2bc:	ecbd 8b08 	vpop	{d8-d11}
 801b2c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b2c4 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh>:
 801b2c4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b2c8:	e9dd 540d 	ldrd	r5, r4, [sp, #52]	; 0x34
 801b2cc:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801b2d0:	fb04 5603 	mla	r6, r4, r3, r5
 801b2d4:	2c00      	cmp	r4, #0
 801b2d6:	f89d 003c 	ldrb.w	r0, [sp, #60]	; 0x3c
 801b2da:	f89d 7040 	ldrb.w	r7, [sp, #64]	; 0x40
 801b2de:	eb02 0c86 	add.w	ip, r2, r6, lsl #2
 801b2e2:	db36      	blt.n	801b352 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x8e>
 801b2e4:	45a6      	cmp	lr, r4
 801b2e6:	dd34      	ble.n	801b352 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x8e>
 801b2e8:	2d00      	cmp	r5, #0
 801b2ea:	db30      	blt.n	801b34e <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x8a>
 801b2ec:	42ab      	cmp	r3, r5
 801b2ee:	dd2e      	ble.n	801b34e <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x8a>
 801b2f0:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 801b2f4:	1c6e      	adds	r6, r5, #1
 801b2f6:	d42f      	bmi.n	801b358 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x94>
 801b2f8:	42b3      	cmp	r3, r6
 801b2fa:	dd2d      	ble.n	801b358 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x94>
 801b2fc:	b370      	cbz	r0, 801b35c <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x98>
 801b2fe:	f8dc 6004 	ldr.w	r6, [ip, #4]
 801b302:	3401      	adds	r4, #1
 801b304:	d42e      	bmi.n	801b364 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0xa0>
 801b306:	45a6      	cmp	lr, r4
 801b308:	dd2c      	ble.n	801b364 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0xa0>
 801b30a:	b377      	cbz	r7, 801b36a <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0xa6>
 801b30c:	2d00      	cmp	r5, #0
 801b30e:	db27      	blt.n	801b360 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x9c>
 801b310:	42ab      	cmp	r3, r5
 801b312:	dd25      	ble.n	801b360 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x9c>
 801b314:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801b318:	3501      	adds	r5, #1
 801b31a:	d429      	bmi.n	801b370 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0xac>
 801b31c:	42ab      	cmp	r3, r5
 801b31e:	dd27      	ble.n	801b370 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0xac>
 801b320:	b340      	cbz	r0, 801b374 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0xb0>
 801b322:	3301      	adds	r3, #1
 801b324:	f85c 3023 	ldr.w	r3, [ip, r3, lsl #2]
 801b328:	280f      	cmp	r0, #15
 801b32a:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 801b32e:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801b332:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801b336:	ea4f 6813 	mov.w	r8, r3, lsr #24
 801b33a:	d801      	bhi.n	801b340 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x7c>
 801b33c:	2f0f      	cmp	r7, #15
 801b33e:	d91b      	bls.n	801b378 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0xb4>
 801b340:	4b89      	ldr	r3, [pc, #548]	; (801b568 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x2a4>)
 801b342:	f240 115b 	movw	r1, #347	; 0x15b
 801b346:	4a89      	ldr	r2, [pc, #548]	; (801b56c <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x2a8>)
 801b348:	4889      	ldr	r0, [pc, #548]	; (801b570 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x2ac>)
 801b34a:	f004 fe49 	bl	801ffe0 <__assert_func>
 801b34e:	2200      	movs	r2, #0
 801b350:	e7d0      	b.n	801b2f4 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x30>
 801b352:	2600      	movs	r6, #0
 801b354:	4632      	mov	r2, r6
 801b356:	e7d4      	b.n	801b302 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x3e>
 801b358:	2600      	movs	r6, #0
 801b35a:	e7d2      	b.n	801b302 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x3e>
 801b35c:	4606      	mov	r6, r0
 801b35e:	e7d0      	b.n	801b302 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x3e>
 801b360:	2400      	movs	r4, #0
 801b362:	e7d9      	b.n	801b318 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x54>
 801b364:	2300      	movs	r3, #0
 801b366:	461c      	mov	r4, r3
 801b368:	e7de      	b.n	801b328 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x64>
 801b36a:	463b      	mov	r3, r7
 801b36c:	463c      	mov	r4, r7
 801b36e:	e7db      	b.n	801b328 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x64>
 801b370:	2300      	movs	r3, #0
 801b372:	e7d9      	b.n	801b328 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x64>
 801b374:	4603      	mov	r3, r0
 801b376:	e7d7      	b.n	801b328 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x64>
 801b378:	b280      	uxth	r0, r0
 801b37a:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801b37e:	b2bf      	uxth	r7, r7
 801b380:	fb00 fe07 	mul.w	lr, r0, r7
 801b384:	ea4f 1000 	mov.w	r0, r0, lsl #4
 801b388:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 801b38c:	eba0 0c0e 	sub.w	ip, r0, lr
 801b390:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 801b394:	b2bf      	uxth	r7, r7
 801b396:	fa1f fc8c 	uxth.w	ip, ip
 801b39a:	eba5 0507 	sub.w	r5, r5, r7
 801b39e:	fb0c f00a 	mul.w	r0, ip, sl
 801b3a2:	b2ad      	uxth	r5, r5
 801b3a4:	fb05 000b 	mla	r0, r5, fp, r0
 801b3a8:	fb07 0009 	mla	r0, r7, r9, r0
 801b3ac:	fb0e 0008 	mla	r0, lr, r8, r0
 801b3b0:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801b3b4:	9001      	str	r0, [sp, #4]
 801b3b6:	d018      	beq.n	801b3ea <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x126>
 801b3b8:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801b3bc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801b3c0:	fb0b f000 	mul.w	r0, fp, r0
 801b3c4:	fb0b fb02 	mul.w	fp, fp, r2
 801b3c8:	0a02      	lsrs	r2, r0, #8
 801b3ca:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801b3ce:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801b3d2:	4402      	add	r2, r0
 801b3d4:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 801b3d8:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801b3dc:	0a12      	lsrs	r2, r2, #8
 801b3de:	0a00      	lsrs	r0, r0, #8
 801b3e0:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801b3e4:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801b3e8:	4302      	orrs	r2, r0
 801b3ea:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801b3ee:	d01a      	beq.n	801b426 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x162>
 801b3f0:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 801b3f4:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801b3f8:	fb0a f000 	mul.w	r0, sl, r0
 801b3fc:	fb0a fa06 	mul.w	sl, sl, r6
 801b400:	0a06      	lsrs	r6, r0, #8
 801b402:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801b406:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801b40a:	4406      	add	r6, r0
 801b40c:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 801b410:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 801b414:	0a36      	lsrs	r6, r6, #8
 801b416:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b41a:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801b41e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b422:	ea46 060a 	orr.w	r6, r6, sl
 801b426:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801b42a:	d01b      	beq.n	801b464 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x1a0>
 801b42c:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801b430:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801b434:	fb09 fa0a 	mul.w	sl, r9, sl
 801b438:	fb09 f004 	mul.w	r0, r9, r4
 801b43c:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801b440:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b444:	f500 7980 	add.w	r9, r0, #256	; 0x100
 801b448:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801b44c:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 801b450:	4454      	add	r4, sl
 801b452:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b456:	0a24      	lsrs	r4, r4, #8
 801b458:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801b45c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801b460:	ea44 0409 	orr.w	r4, r4, r9
 801b464:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801b468:	d01b      	beq.n	801b4a2 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x1de>
 801b46a:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 801b46e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b472:	fb08 f909 	mul.w	r9, r8, r9
 801b476:	fb08 f003 	mul.w	r0, r8, r3
 801b47a:	ea4f 2319 	mov.w	r3, r9, lsr #8
 801b47e:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 801b482:	f500 7880 	add.w	r8, r0, #256	; 0x100
 801b486:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b48a:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 801b48e:	444b      	add	r3, r9
 801b490:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801b494:	0a1b      	lsrs	r3, r3, #8
 801b496:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801b49a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b49e:	ea43 0308 	orr.w	r3, r3, r8
 801b4a2:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 801b4a6:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801b4aa:	f002 18ff 	and.w	r8, r2, #16711935	; 0xff00ff
 801b4ae:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801b4b2:	fb0c f000 	mul.w	r0, ip, r0
 801b4b6:	fb0c f606 	mul.w	r6, ip, r6
 801b4ba:	fb05 0808 	mla	r8, r5, r8, r0
 801b4be:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 801b4c2:	fb05 6502 	mla	r5, r5, r2, r6
 801b4c6:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801b4ca:	fb07 8800 	mla	r8, r7, r0, r8
 801b4ce:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 801b4d2:	fb07 5704 	mla	r7, r7, r4, r5
 801b4d6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b4da:	fb0e 8000 	mla	r0, lr, r0, r8
 801b4de:	fb0e 7e03 	mla	lr, lr, r3, r7
 801b4e2:	9b01      	ldr	r3, [sp, #4]
 801b4e4:	0a00      	lsrs	r0, r0, #8
 801b4e6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b4ea:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801b4ee:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801b4f2:	ea40 0e0e 	orr.w	lr, r0, lr
 801b4f6:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
 801b4fa:	b280      	uxth	r0, r0
 801b4fc:	fa5f f48e 	uxtb.w	r4, lr
 801b500:	4343      	muls	r3, r0
 801b502:	fb14 f400 	smulbb	r4, r4, r0
 801b506:	1c5a      	adds	r2, r3, #1
 801b508:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801b50c:	780b      	ldrb	r3, [r1, #0]
 801b50e:	ea6f 2212 	mvn.w	r2, r2, lsr #8
 801b512:	b2d2      	uxtb	r2, r2
 801b514:	fb03 4302 	mla	r3, r3, r2, r4
 801b518:	b29b      	uxth	r3, r3
 801b51a:	1c5c      	adds	r4, r3, #1
 801b51c:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 801b520:	784c      	ldrb	r4, [r1, #1]
 801b522:	fb14 f402 	smulbb	r4, r4, r2
 801b526:	121b      	asrs	r3, r3, #8
 801b528:	700b      	strb	r3, [r1, #0]
 801b52a:	f3ce 2307 	ubfx	r3, lr, #8, #8
 801b52e:	fb03 4300 	mla	r3, r3, r0, r4
 801b532:	b29b      	uxth	r3, r3
 801b534:	1c5c      	adds	r4, r3, #1
 801b536:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 801b53a:	121b      	asrs	r3, r3, #8
 801b53c:	704b      	strb	r3, [r1, #1]
 801b53e:	ea4f 431e 	mov.w	r3, lr, lsr #16
 801b542:	f891 e002 	ldrb.w	lr, [r1, #2]
 801b546:	fb1e fe02 	smulbb	lr, lr, r2
 801b54a:	fb03 ee00 	mla	lr, r3, r0, lr
 801b54e:	fa1f fe8e 	uxth.w	lr, lr
 801b552:	f10e 0301 	add.w	r3, lr, #1
 801b556:	eb03 2e1e 	add.w	lr, r3, lr, lsr #8
 801b55a:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 801b55e:	f881 e002 	strb.w	lr, [r1, #2]
 801b562:	b003      	add	sp, #12
 801b564:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b568:	08025314 	.word	0x08025314
 801b56c:	0802572a 	.word	0x0802572a
 801b570:	080252e1 	.word	0x080252e1

0801b574 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b574:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b578:	ed2d 8b08 	vpush	{d8-d11}
 801b57c:	b09d      	sub	sp, #116	; 0x74
 801b57e:	eeb0 aa40 	vmov.f32	s20, s0
 801b582:	eef0 9a60 	vmov.f32	s19, s1
 801b586:	9219      	str	r2, [sp, #100]	; 0x64
 801b588:	eeb0 9a41 	vmov.f32	s18, s2
 801b58c:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 801b58e:	eeb0 8a62 	vmov.f32	s16, s5
 801b592:	9307      	str	r3, [sp, #28]
 801b594:	eef0 8a43 	vmov.f32	s17, s6
 801b598:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 801b59c:	eef0 ba44 	vmov.f32	s23, s8
 801b5a0:	901b      	str	r0, [sp, #108]	; 0x6c
 801b5a2:	eeb0 ba64 	vmov.f32	s22, s9
 801b5a6:	931a      	str	r3, [sp, #104]	; 0x68
 801b5a8:	eef0 aa45 	vmov.f32	s21, s10
 801b5ac:	6850      	ldr	r0, [r2, #4]
 801b5ae:	9117      	str	r1, [sp, #92]	; 0x5c
 801b5b0:	6812      	ldr	r2, [r2, #0]
 801b5b2:	e9dd 1334 	ldrd	r1, r3, [sp, #208]	; 0xd0
 801b5b6:	e9dd 562f 	ldrd	r5, r6, [sp, #188]	; 0xbc
 801b5ba:	fb00 1303 	mla	r3, r0, r3, r1
 801b5be:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801b5c2:	18d3      	adds	r3, r2, r3
 801b5c4:	930a      	str	r3, [sp, #40]	; 0x28
 801b5c6:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 801b5c8:	681b      	ldr	r3, [r3, #0]
 801b5ca:	9310      	str	r3, [sp, #64]	; 0x40
 801b5cc:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801b5d0:	930b      	str	r3, [sp, #44]	; 0x2c
 801b5d2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801b5d4:	2b00      	cmp	r3, #0
 801b5d6:	dc03      	bgt.n	801b5e0 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b5d8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801b5da:	2b00      	cmp	r3, #0
 801b5dc:	f340 8368 	ble.w	801bcb0 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73c>
 801b5e0:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 801b5e2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b5e6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b5ea:	1e48      	subs	r0, r1, #1
 801b5ec:	1e57      	subs	r7, r2, #1
 801b5ee:	9b07      	ldr	r3, [sp, #28]
 801b5f0:	2b00      	cmp	r3, #0
 801b5f2:	f340 8187 	ble.w	801b904 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 801b5f6:	ea5f 4c25 	movs.w	ip, r5, asr #16
 801b5fa:	ea4f 4326 	mov.w	r3, r6, asr #16
 801b5fe:	d406      	bmi.n	801b60e <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801b600:	4584      	cmp	ip, r0
 801b602:	da04      	bge.n	801b60e <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801b604:	2b00      	cmp	r3, #0
 801b606:	db02      	blt.n	801b60e <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801b608:	42bb      	cmp	r3, r7
 801b60a:	f2c0 817c 	blt.w	801b906 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x392>
 801b60e:	f11c 0c01 	adds.w	ip, ip, #1
 801b612:	f100 816c 	bmi.w	801b8ee <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801b616:	4561      	cmp	r1, ip
 801b618:	f2c0 8169 	blt.w	801b8ee <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801b61c:	3301      	adds	r3, #1
 801b61e:	f100 8166 	bmi.w	801b8ee <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801b622:	429a      	cmp	r2, r3
 801b624:	f2c0 8163 	blt.w	801b8ee <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801b628:	9b07      	ldr	r3, [sp, #28]
 801b62a:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801b62c:	9318      	str	r3, [sp, #96]	; 0x60
 801b62e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b630:	2b00      	cmp	r3, #0
 801b632:	f340 8186 	ble.w	801b942 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
 801b636:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 801b638:	142a      	asrs	r2, r5, #16
 801b63a:	ea4f 4026 	mov.w	r0, r6, asr #16
 801b63e:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801b642:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801b646:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801b64a:	f100 81cb 	bmi.w	801b9e4 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x470>
 801b64e:	f10e 38ff 	add.w	r8, lr, #4294967295
 801b652:	4542      	cmp	r2, r8
 801b654:	f280 81c6 	bge.w	801b9e4 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x470>
 801b658:	2800      	cmp	r0, #0
 801b65a:	f2c0 81c3 	blt.w	801b9e4 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x470>
 801b65e:	f103 38ff 	add.w	r8, r3, #4294967295
 801b662:	4540      	cmp	r0, r8
 801b664:	f280 81be 	bge.w	801b9e4 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x470>
 801b668:	fa0f f38e 	sxth.w	r3, lr
 801b66c:	fb00 2203 	mla	r2, r0, r3, r2
 801b670:	9810      	ldr	r0, [sp, #64]	; 0x40
 801b672:	eb00 0882 	add.w	r8, r0, r2, lsl #2
 801b676:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 801b67a:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801b67e:	2900      	cmp	r1, #0
 801b680:	f000 81a6 	beq.w	801b9d0 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x45c>
 801b684:	f8d8 0004 	ldr.w	r0, [r8, #4]
 801b688:	900c      	str	r0, [sp, #48]	; 0x30
 801b68a:	0e00      	lsrs	r0, r0, #24
 801b68c:	9013      	str	r0, [sp, #76]	; 0x4c
 801b68e:	f1bc 0f00 	cmp.w	ip, #0
 801b692:	d00f      	beq.n	801b6b4 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 801b694:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801b698:	3b01      	subs	r3, #1
 801b69a:	009b      	lsls	r3, r3, #2
 801b69c:	3304      	adds	r3, #4
 801b69e:	eb08 0003 	add.w	r0, r8, r3
 801b6a2:	f858 3003 	ldr.w	r3, [r8, r3]
 801b6a6:	9308      	str	r3, [sp, #32]
 801b6a8:	0e1b      	lsrs	r3, r3, #24
 801b6aa:	9311      	str	r3, [sp, #68]	; 0x44
 801b6ac:	6843      	ldr	r3, [r0, #4]
 801b6ae:	930d      	str	r3, [sp, #52]	; 0x34
 801b6b0:	0e1b      	lsrs	r3, r3, #24
 801b6b2:	9314      	str	r3, [sp, #80]	; 0x50
 801b6b4:	b289      	uxth	r1, r1
 801b6b6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b6b8:	fa1f fc8c 	uxth.w	ip, ip
 801b6bc:	0108      	lsls	r0, r1, #4
 801b6be:	fb01 f90c 	mul.w	r9, r1, ip
 801b6c2:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801b6c6:	ebc9 1c0c 	rsb	ip, r9, ip, lsl #4
 801b6ca:	eba0 0809 	sub.w	r8, r0, r9
 801b6ce:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801b6d0:	fa1f f18c 	uxth.w	r1, ip
 801b6d4:	fa1f f888 	uxth.w	r8, r8
 801b6d8:	1a5b      	subs	r3, r3, r1
 801b6da:	fb08 f000 	mul.w	r0, r8, r0
 801b6de:	b29b      	uxth	r3, r3
 801b6e0:	fb03 000e 	mla	r0, r3, lr, r0
 801b6e4:	fb01 0004 	mla	r0, r1, r4, r0
 801b6e8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b6ea:	fb09 0004 	mla	r0, r9, r4, r0
 801b6ee:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801b6f2:	2800      	cmp	r0, #0
 801b6f4:	f000 80f2 	beq.w	801b8dc <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801b6f8:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801b6fc:	d01b      	beq.n	801b736 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801b6fe:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801b702:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801b706:	fb0e fa0a 	mul.w	sl, lr, sl
 801b70a:	fb0e fe02 	mul.w	lr, lr, r2
 801b70e:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801b712:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b716:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801b71a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801b71e:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801b722:	4452      	add	r2, sl
 801b724:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b728:	0a12      	lsrs	r2, r2, #8
 801b72a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801b72e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801b732:	ea42 020c 	orr.w	r2, r2, ip
 801b736:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b738:	2cff      	cmp	r4, #255	; 0xff
 801b73a:	d021      	beq.n	801b780 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 801b73c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801b73e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b742:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b744:	fb04 fb0b 	mul.w	fp, r4, fp
 801b748:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801b74a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b74e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b750:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b754:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b758:	fb04 fa0a 	mul.w	sl, r4, sl
 801b75c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b760:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b764:	44de      	add	lr, fp
 801b766:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b76a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b76e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b772:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b776:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b77a:	ea4e 040a 	orr.w	r4, lr, sl
 801b77e:	940c      	str	r4, [sp, #48]	; 0x30
 801b780:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b782:	2cff      	cmp	r4, #255	; 0xff
 801b784:	d021      	beq.n	801b7ca <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x256>
 801b786:	9c08      	ldr	r4, [sp, #32]
 801b788:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b78c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b78e:	fb04 fb0b 	mul.w	fp, r4, fp
 801b792:	9c08      	ldr	r4, [sp, #32]
 801b794:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b798:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b79a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b79e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b7a2:	fb04 fa0a 	mul.w	sl, r4, sl
 801b7a6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b7aa:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b7ae:	44de      	add	lr, fp
 801b7b0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b7b4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b7b8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b7bc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b7c0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b7c4:	ea4e 040a 	orr.w	r4, lr, sl
 801b7c8:	9408      	str	r4, [sp, #32]
 801b7ca:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b7cc:	2cff      	cmp	r4, #255	; 0xff
 801b7ce:	d021      	beq.n	801b814 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801b7d0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b7d2:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b7d6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b7d8:	fb04 fb0b 	mul.w	fp, r4, fp
 801b7dc:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b7de:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b7e2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b7e4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b7e8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b7ec:	fb04 fa0a 	mul.w	sl, r4, sl
 801b7f0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b7f4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b7f8:	44de      	add	lr, fp
 801b7fa:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b7fe:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b802:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b806:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b80a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b80e:	ea4e 040a 	orr.w	r4, lr, sl
 801b812:	940d      	str	r4, [sp, #52]	; 0x34
 801b814:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801b816:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801b81a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801b81e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b822:	9c08      	ldr	r4, [sp, #32]
 801b824:	fb08 fc0c 	mul.w	ip, r8, ip
 801b828:	fb03 cc0e 	mla	ip, r3, lr, ip
 801b82c:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801b830:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b832:	fb01 cc0e 	mla	ip, r1, lr, ip
 801b836:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801b83a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801b83c:	fb09 cc0e 	mla	ip, r9, lr, ip
 801b840:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801b844:	fb08 f80e 	mul.w	r8, r8, lr
 801b848:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b84c:	fb03 8202 	mla	r2, r3, r2, r8
 801b850:	9b08      	ldr	r3, [sp, #32]
 801b852:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b856:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 801b85a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b85c:	fb01 220a 	mla	r2, r1, sl, r2
 801b860:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 801b864:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801b866:	fb09 2901 	mla	r9, r9, r1, r2
 801b86a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801b86c:	4343      	muls	r3, r0
 801b86e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b872:	1c58      	adds	r0, r3, #1
 801b874:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801b878:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801b87c:	783b      	ldrb	r3, [r7, #0]
 801b87e:	ea4c 0c09 	orr.w	ip, ip, r9
 801b882:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801b886:	fa5f f28c 	uxtb.w	r2, ip
 801b88a:	b2c0      	uxtb	r0, r0
 801b88c:	fb12 f201 	smulbb	r2, r2, r1
 801b890:	fb03 2300 	mla	r3, r3, r0, r2
 801b894:	b29b      	uxth	r3, r3
 801b896:	1c5a      	adds	r2, r3, #1
 801b898:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801b89c:	787a      	ldrb	r2, [r7, #1]
 801b89e:	fb12 f200 	smulbb	r2, r2, r0
 801b8a2:	121b      	asrs	r3, r3, #8
 801b8a4:	703b      	strb	r3, [r7, #0]
 801b8a6:	f3cc 2307 	ubfx	r3, ip, #8, #8
 801b8aa:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 801b8ae:	fb03 2301 	mla	r3, r3, r1, r2
 801b8b2:	b29b      	uxth	r3, r3
 801b8b4:	1c5a      	adds	r2, r3, #1
 801b8b6:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801b8ba:	121b      	asrs	r3, r3, #8
 801b8bc:	707b      	strb	r3, [r7, #1]
 801b8be:	78bb      	ldrb	r3, [r7, #2]
 801b8c0:	fb13 f000 	smulbb	r0, r3, r0
 801b8c4:	fb0c 0c01 	mla	ip, ip, r1, r0
 801b8c8:	fa1f fc8c 	uxth.w	ip, ip
 801b8cc:	f10c 0301 	add.w	r3, ip, #1
 801b8d0:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801b8d4:	ea4f 2c2c 	mov.w	ip, ip, asr #8
 801b8d8:	f887 c002 	strb.w	ip, [r7, #2]
 801b8dc:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801b8de:	3703      	adds	r7, #3
 801b8e0:	441d      	add	r5, r3
 801b8e2:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801b8e4:	441e      	add	r6, r3
 801b8e6:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b8e8:	3b01      	subs	r3, #1
 801b8ea:	9318      	str	r3, [sp, #96]	; 0x60
 801b8ec:	e69f      	b.n	801b62e <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 801b8ee:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801b8f0:	441d      	add	r5, r3
 801b8f2:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801b8f4:	441e      	add	r6, r3
 801b8f6:	9b07      	ldr	r3, [sp, #28]
 801b8f8:	3b01      	subs	r3, #1
 801b8fa:	9307      	str	r3, [sp, #28]
 801b8fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b8fe:	3303      	adds	r3, #3
 801b900:	930a      	str	r3, [sp, #40]	; 0x28
 801b902:	e674      	b.n	801b5ee <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b904:	d025      	beq.n	801b952 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
 801b906:	9b07      	ldr	r3, [sp, #28]
 801b908:	9831      	ldr	r0, [sp, #196]	; 0xc4
 801b90a:	3b01      	subs	r3, #1
 801b90c:	fb00 5003 	mla	r0, r0, r3, r5
 801b910:	1400      	asrs	r0, r0, #16
 801b912:	f53f ae89 	bmi.w	801b628 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801b916:	3901      	subs	r1, #1
 801b918:	4288      	cmp	r0, r1
 801b91a:	f6bf ae85 	bge.w	801b628 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801b91e:	9932      	ldr	r1, [sp, #200]	; 0xc8
 801b920:	fb01 6303 	mla	r3, r1, r3, r6
 801b924:	141b      	asrs	r3, r3, #16
 801b926:	f53f ae7f 	bmi.w	801b628 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801b92a:	3a01      	subs	r2, #1
 801b92c:	4293      	cmp	r3, r2
 801b92e:	f6bf ae7b 	bge.w	801b628 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801b932:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b934:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801b938:	f103 0e03 	add.w	lr, r3, #3
 801b93c:	f1bb 0f00 	cmp.w	fp, #0
 801b940:	dc6e      	bgt.n	801ba20 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 801b942:	9b07      	ldr	r3, [sp, #28]
 801b944:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801b948:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b94a:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801b94e:	4423      	add	r3, r4
 801b950:	930a      	str	r3, [sp, #40]	; 0x28
 801b952:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801b954:	2b00      	cmp	r3, #0
 801b956:	f340 81ab 	ble.w	801bcb0 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73c>
 801b95a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b95e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801b960:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801b964:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801b968:	eef0 6a48 	vmov.f32	s13, s16
 801b96c:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801b970:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801b974:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b978:	ee16 5a90 	vmov	r5, s13
 801b97c:	eef0 6a68 	vmov.f32	s13, s17
 801b980:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b984:	ee16 6a90 	vmov	r6, s13
 801b988:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801b98c:	ee69 7a27 	vmul.f32	s15, s18, s15
 801b990:	ee37 8a48 	vsub.f32	s16, s14, s16
 801b994:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801b998:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801b99c:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801b9a0:	ee18 2a10 	vmov	r2, s16
 801b9a4:	eeb0 8a47 	vmov.f32	s16, s14
 801b9a8:	fb92 f3f3 	sdiv	r3, r2, r3
 801b9ac:	ee18 2a90 	vmov	r2, s17
 801b9b0:	9331      	str	r3, [sp, #196]	; 0xc4
 801b9b2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801b9b4:	eef0 8a67 	vmov.f32	s17, s15
 801b9b8:	fb92 f3f3 	sdiv	r3, r2, r3
 801b9bc:	9332      	str	r3, [sp, #200]	; 0xc8
 801b9be:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801b9c0:	9a19      	ldr	r2, [sp, #100]	; 0x64
 801b9c2:	3b01      	subs	r3, #1
 801b9c4:	9317      	str	r3, [sp, #92]	; 0x5c
 801b9c6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801b9c8:	bf08      	it	eq
 801b9ca:	4613      	moveq	r3, r2
 801b9cc:	9307      	str	r3, [sp, #28]
 801b9ce:	e600      	b.n	801b5d2 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801b9d0:	f1bc 0f00 	cmp.w	ip, #0
 801b9d4:	f43f ae6e 	beq.w	801b6b4 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 801b9d8:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801b9dc:	9308      	str	r3, [sp, #32]
 801b9de:	0e1b      	lsrs	r3, r3, #24
 801b9e0:	9311      	str	r3, [sp, #68]	; 0x44
 801b9e2:	e667      	b.n	801b6b4 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 801b9e4:	f112 0801 	adds.w	r8, r2, #1
 801b9e8:	f53f af78 	bmi.w	801b8dc <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801b9ec:	45c6      	cmp	lr, r8
 801b9ee:	f6ff af75 	blt.w	801b8dc <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801b9f2:	f110 0801 	adds.w	r8, r0, #1
 801b9f6:	f53f af71 	bmi.w	801b8dc <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801b9fa:	4543      	cmp	r3, r8
 801b9fc:	f6ff af6e 	blt.w	801b8dc <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801ba00:	9c1a      	ldr	r4, [sp, #104]	; 0x68
 801ba02:	b21b      	sxth	r3, r3
 801ba04:	9201      	str	r2, [sp, #4]
 801ba06:	9300      	str	r3, [sp, #0]
 801ba08:	fa0f f38e 	sxth.w	r3, lr
 801ba0c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801ba0e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 801ba12:	e9cd c404 	strd	ip, r4, [sp, #16]
 801ba16:	4639      	mov	r1, r7
 801ba18:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801ba1a:	f7ff fc53 	bl	801b2c4 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh>
 801ba1e:	e75d      	b.n	801b8dc <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801ba20:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 801ba22:	142f      	asrs	r7, r5, #16
 801ba24:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801ba26:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801ba2a:	f9b3 2008 	ldrsh.w	r2, [r3, #8]
 801ba2e:	1433      	asrs	r3, r6, #16
 801ba30:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801ba34:	fb02 7303 	mla	r3, r2, r3, r7
 801ba38:	eb04 0783 	add.w	r7, r4, r3, lsl #2
 801ba3c:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 801ba40:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801ba44:	2900      	cmp	r1, #0
 801ba46:	f000 812a 	beq.w	801bc9e <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72a>
 801ba4a:	687c      	ldr	r4, [r7, #4]
 801ba4c:	940e      	str	r4, [sp, #56]	; 0x38
 801ba4e:	0e24      	lsrs	r4, r4, #24
 801ba50:	9415      	str	r4, [sp, #84]	; 0x54
 801ba52:	b178      	cbz	r0, 801ba74 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x500>
 801ba54:	f102 4280 	add.w	r2, r2, #1073741824	; 0x40000000
 801ba58:	3a01      	subs	r2, #1
 801ba5a:	0092      	lsls	r2, r2, #2
 801ba5c:	3204      	adds	r2, #4
 801ba5e:	eb07 0802 	add.w	r8, r7, r2
 801ba62:	58ba      	ldr	r2, [r7, r2]
 801ba64:	9209      	str	r2, [sp, #36]	; 0x24
 801ba66:	0e12      	lsrs	r2, r2, #24
 801ba68:	9212      	str	r2, [sp, #72]	; 0x48
 801ba6a:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801ba6e:	920f      	str	r2, [sp, #60]	; 0x3c
 801ba70:	0e12      	lsrs	r2, r2, #24
 801ba72:	9216      	str	r2, [sp, #88]	; 0x58
 801ba74:	b289      	uxth	r1, r1
 801ba76:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801ba78:	b280      	uxth	r0, r0
 801ba7a:	fb01 f900 	mul.w	r9, r1, r0
 801ba7e:	0109      	lsls	r1, r1, #4
 801ba80:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801ba84:	eba1 0809 	sub.w	r8, r1, r9
 801ba88:	f5c1 7280 	rsb	r2, r1, #256	; 0x100
 801ba8c:	9915      	ldr	r1, [sp, #84]	; 0x54
 801ba8e:	b280      	uxth	r0, r0
 801ba90:	fa1f f888 	uxth.w	r8, r8
 801ba94:	1a12      	subs	r2, r2, r0
 801ba96:	fb08 f101 	mul.w	r1, r8, r1
 801ba9a:	b292      	uxth	r2, r2
 801ba9c:	fb02 110c 	mla	r1, r2, ip, r1
 801baa0:	fb00 1104 	mla	r1, r0, r4, r1
 801baa4:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801baa6:	fb09 1104 	mla	r1, r9, r4, r1
 801baaa:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801baae:	2900      	cmp	r1, #0
 801bab0:	f000 80ec 	beq.w	801bc8c <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
 801bab4:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801bab8:	d019      	beq.n	801baee <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57a>
 801baba:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801babe:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801bac2:	fb0c fa0a 	mul.w	sl, ip, sl
 801bac6:	fb0c fc03 	mul.w	ip, ip, r3
 801baca:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801bace:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801bad2:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801bad6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801bada:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801bade:	4453      	add	r3, sl
 801bae0:	0a3f      	lsrs	r7, r7, #8
 801bae2:	0a1b      	lsrs	r3, r3, #8
 801bae4:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801bae8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801baec:	433b      	orrs	r3, r7
 801baee:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801baf0:	2cff      	cmp	r4, #255	; 0xff
 801baf2:	d020      	beq.n	801bb36 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c2>
 801baf4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801baf6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801bafa:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801bafc:	4367      	muls	r7, r4
 801bafe:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801bb00:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bb04:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801bb08:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801bb0a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801bb0e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bb12:	fb04 fa0a 	mul.w	sl, r4, sl
 801bb16:	44bc      	add	ip, r7
 801bb18:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801bb1c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bb20:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bb24:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bb28:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bb2c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bb30:	ea4c 040a 	orr.w	r4, ip, sl
 801bb34:	940e      	str	r4, [sp, #56]	; 0x38
 801bb36:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801bb38:	2cff      	cmp	r4, #255	; 0xff
 801bb3a:	d020      	beq.n	801bb7e <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60a>
 801bb3c:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801bb3e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801bb42:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801bb44:	4367      	muls	r7, r4
 801bb46:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801bb48:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bb4c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801bb50:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801bb52:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801bb56:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bb5a:	fb04 fa0a 	mul.w	sl, r4, sl
 801bb5e:	44bc      	add	ip, r7
 801bb60:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801bb64:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bb68:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bb6c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bb70:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bb74:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bb78:	ea4c 040a 	orr.w	r4, ip, sl
 801bb7c:	9409      	str	r4, [sp, #36]	; 0x24
 801bb7e:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801bb80:	2cff      	cmp	r4, #255	; 0xff
 801bb82:	d020      	beq.n	801bbc6 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x652>
 801bb84:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801bb86:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801bb8a:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801bb8c:	4367      	muls	r7, r4
 801bb8e:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801bb90:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bb94:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801bb98:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801bb9a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801bb9e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bba2:	fb04 fa0a 	mul.w	sl, r4, sl
 801bba6:	44bc      	add	ip, r7
 801bba8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801bbac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bbb0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bbb4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bbb8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bbbc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bbc0:	ea4c 040a 	orr.w	r4, ip, sl
 801bbc4:	940f      	str	r4, [sp, #60]	; 0x3c
 801bbc6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801bbc8:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801bbcc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801bbd0:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801bbd4:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801bbd6:	fb08 f707 	mul.w	r7, r8, r7
 801bbda:	fb02 770c 	mla	r7, r2, ip, r7
 801bbde:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801bbe2:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801bbe4:	fb00 770c 	mla	r7, r0, ip, r7
 801bbe8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801bbec:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801bbee:	fb09 770c 	mla	r7, r9, ip, r7
 801bbf2:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801bbf6:	fb08 f80c 	mul.w	r8, r8, ip
 801bbfa:	0a3f      	lsrs	r7, r7, #8
 801bbfc:	fb02 8303 	mla	r3, r2, r3, r8
 801bc00:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801bc02:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801bc06:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801bc0a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801bc0c:	fb00 330a 	mla	r3, r0, sl, r3
 801bc10:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801bc14:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801bc16:	fb09 3c0c 	mla	ip, r9, ip, r3
 801bc1a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801bc1c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bc20:	434b      	muls	r3, r1
 801bc22:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801bc26:	1c59      	adds	r1, r3, #1
 801bc28:	ea47 070c 	orr.w	r7, r7, ip
 801bc2c:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801bc30:	f81e 3c03 	ldrb.w	r3, [lr, #-3]
 801bc34:	b2fa      	uxtb	r2, r7
 801bc36:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801bc3a:	fb12 f200 	smulbb	r2, r2, r0
 801bc3e:	b2c9      	uxtb	r1, r1
 801bc40:	fb03 2301 	mla	r3, r3, r1, r2
 801bc44:	b29b      	uxth	r3, r3
 801bc46:	1c5a      	adds	r2, r3, #1
 801bc48:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801bc4c:	f81e 2c02 	ldrb.w	r2, [lr, #-2]
 801bc50:	fb12 f201 	smulbb	r2, r2, r1
 801bc54:	121b      	asrs	r3, r3, #8
 801bc56:	f80e 3c03 	strb.w	r3, [lr, #-3]
 801bc5a:	f3c7 2307 	ubfx	r3, r7, #8, #8
 801bc5e:	0c3f      	lsrs	r7, r7, #16
 801bc60:	fb03 2300 	mla	r3, r3, r0, r2
 801bc64:	b29b      	uxth	r3, r3
 801bc66:	1c5a      	adds	r2, r3, #1
 801bc68:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801bc6c:	121b      	asrs	r3, r3, #8
 801bc6e:	f80e 3c02 	strb.w	r3, [lr, #-2]
 801bc72:	f81e 3c01 	ldrb.w	r3, [lr, #-1]
 801bc76:	fb13 f101 	smulbb	r1, r3, r1
 801bc7a:	fb07 1700 	mla	r7, r7, r0, r1
 801bc7e:	b2bf      	uxth	r7, r7
 801bc80:	1c79      	adds	r1, r7, #1
 801bc82:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801bc86:	123f      	asrs	r7, r7, #8
 801bc88:	f80e 7c01 	strb.w	r7, [lr, #-1]
 801bc8c:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801bc8e:	f10e 0e03 	add.w	lr, lr, #3
 801bc92:	f10b 3bff 	add.w	fp, fp, #4294967295
 801bc96:	441d      	add	r5, r3
 801bc98:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801bc9a:	441e      	add	r6, r3
 801bc9c:	e64e      	b.n	801b93c <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 801bc9e:	2800      	cmp	r0, #0
 801bca0:	f43f aee8 	beq.w	801ba74 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x500>
 801bca4:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 801bca8:	9209      	str	r2, [sp, #36]	; 0x24
 801bcaa:	0e12      	lsrs	r2, r2, #24
 801bcac:	9212      	str	r2, [sp, #72]	; 0x48
 801bcae:	e6e1      	b.n	801ba74 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x500>
 801bcb0:	b01d      	add	sp, #116	; 0x74
 801bcb2:	ecbd 8b08 	vpop	{d8-d11}
 801bcb6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801bcbc <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh>:
 801bcbc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bcc0:	e9dd 540d 	ldrd	r5, r4, [sp, #52]	; 0x34
 801bcc4:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801bcc8:	fb04 5603 	mla	r6, r4, r3, r5
 801bccc:	2c00      	cmp	r4, #0
 801bcce:	f89d 003c 	ldrb.w	r0, [sp, #60]	; 0x3c
 801bcd2:	f89d 7040 	ldrb.w	r7, [sp, #64]	; 0x40
 801bcd6:	eb02 0c86 	add.w	ip, r2, r6, lsl #2
 801bcda:	db36      	blt.n	801bd4a <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x8e>
 801bcdc:	45a6      	cmp	lr, r4
 801bcde:	dd34      	ble.n	801bd4a <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x8e>
 801bce0:	2d00      	cmp	r5, #0
 801bce2:	db30      	blt.n	801bd46 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x8a>
 801bce4:	42ab      	cmp	r3, r5
 801bce6:	dd2e      	ble.n	801bd46 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x8a>
 801bce8:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 801bcec:	1c6e      	adds	r6, r5, #1
 801bcee:	d42f      	bmi.n	801bd50 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x94>
 801bcf0:	42b3      	cmp	r3, r6
 801bcf2:	dd2d      	ble.n	801bd50 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x94>
 801bcf4:	b370      	cbz	r0, 801bd54 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x98>
 801bcf6:	f8dc 6004 	ldr.w	r6, [ip, #4]
 801bcfa:	3401      	adds	r4, #1
 801bcfc:	d42e      	bmi.n	801bd5c <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0xa0>
 801bcfe:	45a6      	cmp	lr, r4
 801bd00:	dd2c      	ble.n	801bd5c <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0xa0>
 801bd02:	b377      	cbz	r7, 801bd62 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0xa6>
 801bd04:	2d00      	cmp	r5, #0
 801bd06:	db27      	blt.n	801bd58 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x9c>
 801bd08:	42ab      	cmp	r3, r5
 801bd0a:	dd25      	ble.n	801bd58 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x9c>
 801bd0c:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801bd10:	3501      	adds	r5, #1
 801bd12:	d429      	bmi.n	801bd68 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0xac>
 801bd14:	42ab      	cmp	r3, r5
 801bd16:	dd27      	ble.n	801bd68 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0xac>
 801bd18:	b340      	cbz	r0, 801bd6c <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0xb0>
 801bd1a:	3301      	adds	r3, #1
 801bd1c:	f85c 3023 	ldr.w	r3, [ip, r3, lsl #2]
 801bd20:	280f      	cmp	r0, #15
 801bd22:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 801bd26:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801bd2a:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801bd2e:	ea4f 6813 	mov.w	r8, r3, lsr #24
 801bd32:	d801      	bhi.n	801bd38 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x7c>
 801bd34:	2f0f      	cmp	r7, #15
 801bd36:	d91b      	bls.n	801bd70 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0xb4>
 801bd38:	4b7e      	ldr	r3, [pc, #504]	; (801bf34 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x278>)
 801bd3a:	f240 115b 	movw	r1, #347	; 0x15b
 801bd3e:	4a7e      	ldr	r2, [pc, #504]	; (801bf38 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x27c>)
 801bd40:	487e      	ldr	r0, [pc, #504]	; (801bf3c <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x280>)
 801bd42:	f004 f94d 	bl	801ffe0 <__assert_func>
 801bd46:	2200      	movs	r2, #0
 801bd48:	e7d0      	b.n	801bcec <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x30>
 801bd4a:	2600      	movs	r6, #0
 801bd4c:	4632      	mov	r2, r6
 801bd4e:	e7d4      	b.n	801bcfa <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x3e>
 801bd50:	2600      	movs	r6, #0
 801bd52:	e7d2      	b.n	801bcfa <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x3e>
 801bd54:	4606      	mov	r6, r0
 801bd56:	e7d0      	b.n	801bcfa <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x3e>
 801bd58:	2400      	movs	r4, #0
 801bd5a:	e7d9      	b.n	801bd10 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x54>
 801bd5c:	2300      	movs	r3, #0
 801bd5e:	461c      	mov	r4, r3
 801bd60:	e7de      	b.n	801bd20 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x64>
 801bd62:	463b      	mov	r3, r7
 801bd64:	463c      	mov	r4, r7
 801bd66:	e7db      	b.n	801bd20 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x64>
 801bd68:	2300      	movs	r3, #0
 801bd6a:	e7d9      	b.n	801bd20 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x64>
 801bd6c:	4603      	mov	r3, r0
 801bd6e:	e7d7      	b.n	801bd20 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x64>
 801bd70:	b280      	uxth	r0, r0
 801bd72:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801bd76:	b2bf      	uxth	r7, r7
 801bd78:	fb00 fe07 	mul.w	lr, r0, r7
 801bd7c:	ea4f 1000 	mov.w	r0, r0, lsl #4
 801bd80:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 801bd84:	eba0 0c0e 	sub.w	ip, r0, lr
 801bd88:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 801bd8c:	b2bf      	uxth	r7, r7
 801bd8e:	fa1f fc8c 	uxth.w	ip, ip
 801bd92:	eba0 0507 	sub.w	r5, r0, r7
 801bd96:	fb0c f00a 	mul.w	r0, ip, sl
 801bd9a:	b2ad      	uxth	r5, r5
 801bd9c:	fb05 000b 	mla	r0, r5, fp, r0
 801bda0:	fb07 0009 	mla	r0, r7, r9, r0
 801bda4:	fb0e 0008 	mla	r0, lr, r8, r0
 801bda8:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801bdac:	9001      	str	r0, [sp, #4]
 801bdae:	d018      	beq.n	801bde2 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x126>
 801bdb0:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801bdb4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801bdb8:	fb0b f000 	mul.w	r0, fp, r0
 801bdbc:	fb0b fb02 	mul.w	fp, fp, r2
 801bdc0:	0a02      	lsrs	r2, r0, #8
 801bdc2:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801bdc6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801bdca:	4402      	add	r2, r0
 801bdcc:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 801bdd0:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801bdd4:	0a12      	lsrs	r2, r2, #8
 801bdd6:	0a00      	lsrs	r0, r0, #8
 801bdd8:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801bddc:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801bde0:	4302      	orrs	r2, r0
 801bde2:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801bde6:	d01a      	beq.n	801be1e <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x162>
 801bde8:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 801bdec:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801bdf0:	fb0a f000 	mul.w	r0, sl, r0
 801bdf4:	fb0a fa06 	mul.w	sl, sl, r6
 801bdf8:	0a06      	lsrs	r6, r0, #8
 801bdfa:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801bdfe:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801be02:	4406      	add	r6, r0
 801be04:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 801be08:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 801be0c:	0a36      	lsrs	r6, r6, #8
 801be0e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801be12:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801be16:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801be1a:	ea46 060a 	orr.w	r6, r6, sl
 801be1e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801be22:	d01b      	beq.n	801be5c <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x1a0>
 801be24:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801be28:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801be2c:	fb09 fa0a 	mul.w	sl, r9, sl
 801be30:	fb09 f004 	mul.w	r0, r9, r4
 801be34:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801be38:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801be3c:	f500 7980 	add.w	r9, r0, #256	; 0x100
 801be40:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801be44:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 801be48:	4454      	add	r4, sl
 801be4a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801be4e:	0a24      	lsrs	r4, r4, #8
 801be50:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801be54:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801be58:	ea44 0409 	orr.w	r4, r4, r9
 801be5c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801be60:	d01b      	beq.n	801be9a <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x1de>
 801be62:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 801be66:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801be6a:	fb08 f909 	mul.w	r9, r8, r9
 801be6e:	fb08 f003 	mul.w	r0, r8, r3
 801be72:	ea4f 2319 	mov.w	r3, r9, lsr #8
 801be76:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 801be7a:	f500 7880 	add.w	r8, r0, #256	; 0x100
 801be7e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801be82:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 801be86:	444b      	add	r3, r9
 801be88:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801be8c:	0a1b      	lsrs	r3, r3, #8
 801be8e:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801be92:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801be96:	ea43 0308 	orr.w	r3, r3, r8
 801be9a:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 801be9e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801bea2:	f002 18ff 	and.w	r8, r2, #16711935	; 0xff00ff
 801bea6:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801beaa:	fb0c f000 	mul.w	r0, ip, r0
 801beae:	fb0c f606 	mul.w	r6, ip, r6
 801beb2:	fb05 0808 	mla	r8, r5, r8, r0
 801beb6:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 801beba:	fb05 6502 	mla	r5, r5, r2, r6
 801bebe:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801bec2:	fb07 8800 	mla	r8, r7, r0, r8
 801bec6:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 801beca:	fb07 5704 	mla	r7, r7, r4, r5
 801bece:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801bed2:	fb0e 8000 	mla	r0, lr, r0, r8
 801bed6:	780a      	ldrb	r2, [r1, #0]
 801bed8:	fb0e 7e03 	mla	lr, lr, r3, r7
 801bedc:	9b01      	ldr	r3, [sp, #4]
 801bede:	0a00      	lsrs	r0, r0, #8
 801bee0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801bee4:	43db      	mvns	r3, r3
 801bee6:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801beea:	b2db      	uxtb	r3, r3
 801beec:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801bef0:	ea40 0e0e 	orr.w	lr, r0, lr
 801bef4:	fb02 f003 	mul.w	r0, r2, r3
 801bef8:	1c42      	adds	r2, r0, #1
 801befa:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801befe:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801bf02:	700a      	strb	r2, [r1, #0]
 801bf04:	784a      	ldrb	r2, [r1, #1]
 801bf06:	435a      	muls	r2, r3
 801bf08:	1c50      	adds	r0, r2, #1
 801bf0a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801bf0e:	ea4f 221e 	mov.w	r2, lr, lsr #8
 801bf12:	ea4f 4e1e 	mov.w	lr, lr, lsr #16
 801bf16:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801bf1a:	704a      	strb	r2, [r1, #1]
 801bf1c:	788a      	ldrb	r2, [r1, #2]
 801bf1e:	4353      	muls	r3, r2
 801bf20:	1c5a      	adds	r2, r3, #1
 801bf22:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801bf26:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801bf2a:	f881 e002 	strb.w	lr, [r1, #2]
 801bf2e:	b003      	add	sp, #12
 801bf30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bf34:	08025314 	.word	0x08025314
 801bf38:	0802572a 	.word	0x0802572a
 801bf3c:	080252e1 	.word	0x080252e1

0801bf40 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bf40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bf44:	ed2d 8b08 	vpush	{d8-d11}
 801bf48:	b099      	sub	sp, #100	; 0x64
 801bf4a:	eeb0 aa40 	vmov.f32	s20, s0
 801bf4e:	eef0 9a60 	vmov.f32	s19, s1
 801bf52:	9017      	str	r0, [sp, #92]	; 0x5c
 801bf54:	eeb0 9a41 	vmov.f32	s18, s2
 801bf58:	9306      	str	r3, [sp, #24]
 801bf5a:	eeb0 8a62 	vmov.f32	s16, s5
 801bf5e:	eef0 8a43 	vmov.f32	s17, s6
 801bf62:	eef0 ba44 	vmov.f32	s23, s8
 801bf66:	eeb0 ba64 	vmov.f32	s22, s9
 801bf6a:	eef0 aa45 	vmov.f32	s21, s10
 801bf6e:	e9cd 1215 	strd	r1, r2, [sp, #84]	; 0x54
 801bf72:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801bf74:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 801bf78:	6850      	ldr	r0, [r2, #4]
 801bf7a:	6812      	ldr	r2, [r2, #0]
 801bf7c:	fb00 1303 	mla	r3, r0, r3, r1
 801bf80:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801bf84:	18d3      	adds	r3, r2, r3
 801bf86:	9309      	str	r3, [sp, #36]	; 0x24
 801bf88:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801bf8a:	e9dd 562b 	ldrd	r5, r6, [sp, #172]	; 0xac
 801bf8e:	681b      	ldr	r3, [r3, #0]
 801bf90:	930e      	str	r3, [sp, #56]	; 0x38
 801bf92:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801bf94:	2b00      	cmp	r3, #0
 801bf96:	dc03      	bgt.n	801bfa0 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801bf98:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801bf9a:	2b00      	cmp	r3, #0
 801bf9c:	f340 8360 	ble.w	801c660 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x720>
 801bfa0:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801bfa2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801bfa6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801bfaa:	1e48      	subs	r0, r1, #1
 801bfac:	1e57      	subs	r7, r2, #1
 801bfae:	9b06      	ldr	r3, [sp, #24]
 801bfb0:	2b00      	cmp	r3, #0
 801bfb2:	f340 817b 	ble.w	801c2ac <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801bfb6:	ea5f 4c25 	movs.w	ip, r5, asr #16
 801bfba:	ea4f 4326 	mov.w	r3, r6, asr #16
 801bfbe:	d406      	bmi.n	801bfce <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801bfc0:	4584      	cmp	ip, r0
 801bfc2:	da04      	bge.n	801bfce <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801bfc4:	2b00      	cmp	r3, #0
 801bfc6:	db02      	blt.n	801bfce <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801bfc8:	42bb      	cmp	r3, r7
 801bfca:	f2c0 8170 	blt.w	801c2ae <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801bfce:	f11c 0c01 	adds.w	ip, ip, #1
 801bfd2:	f100 8160 	bmi.w	801c296 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801bfd6:	4561      	cmp	r1, ip
 801bfd8:	f2c0 815d 	blt.w	801c296 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801bfdc:	3301      	adds	r3, #1
 801bfde:	f100 815a 	bmi.w	801c296 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801bfe2:	429a      	cmp	r2, r3
 801bfe4:	f2c0 8157 	blt.w	801c296 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801bfe8:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801bfec:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801bfee:	f1b8 0f00 	cmp.w	r8, #0
 801bff2:	f340 8179 	ble.w	801c2e8 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
 801bff6:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 801bff8:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801bffc:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801bffe:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801c002:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801c006:	142a      	asrs	r2, r5, #16
 801c008:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801c00c:	689b      	ldr	r3, [r3, #8]
 801c00e:	f100 81be 	bmi.w	801c38e <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801c012:	f103 39ff 	add.w	r9, r3, #4294967295
 801c016:	454a      	cmp	r2, r9
 801c018:	f280 81b9 	bge.w	801c38e <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801c01c:	f1bc 0f00 	cmp.w	ip, #0
 801c020:	f2c0 81b5 	blt.w	801c38e <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801c024:	f10e 39ff 	add.w	r9, lr, #4294967295
 801c028:	45cc      	cmp	ip, r9
 801c02a:	f280 81b0 	bge.w	801c38e <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801c02e:	b21b      	sxth	r3, r3
 801c030:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801c032:	fb0c 2203 	mla	r2, ip, r3, r2
 801c036:	eb04 0982 	add.w	r9, r4, r2, lsl #2
 801c03a:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 801c03e:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801c042:	2900      	cmp	r1, #0
 801c044:	f000 8197 	beq.w	801c376 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x436>
 801c048:	f8d9 4004 	ldr.w	r4, [r9, #4]
 801c04c:	940a      	str	r4, [sp, #40]	; 0x28
 801c04e:	0e24      	lsrs	r4, r4, #24
 801c050:	9411      	str	r4, [sp, #68]	; 0x44
 801c052:	b180      	cbz	r0, 801c076 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x136>
 801c054:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801c058:	3b01      	subs	r3, #1
 801c05a:	009b      	lsls	r3, r3, #2
 801c05c:	3304      	adds	r3, #4
 801c05e:	eb09 0c03 	add.w	ip, r9, r3
 801c062:	f859 3003 	ldr.w	r3, [r9, r3]
 801c066:	9307      	str	r3, [sp, #28]
 801c068:	0e1b      	lsrs	r3, r3, #24
 801c06a:	930f      	str	r3, [sp, #60]	; 0x3c
 801c06c:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801c070:	930b      	str	r3, [sp, #44]	; 0x2c
 801c072:	0e1b      	lsrs	r3, r3, #24
 801c074:	9312      	str	r3, [sp, #72]	; 0x48
 801c076:	b289      	uxth	r1, r1
 801c078:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c07a:	b280      	uxth	r0, r0
 801c07c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801c07e:	fb01 fa00 	mul.w	sl, r1, r0
 801c082:	0109      	lsls	r1, r1, #4
 801c084:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 801c088:	eba1 090a 	sub.w	r9, r1, sl
 801c08c:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 801c090:	b280      	uxth	r0, r0
 801c092:	fa1f f989 	uxth.w	r9, r9
 801c096:	1a09      	subs	r1, r1, r0
 801c098:	fb09 f303 	mul.w	r3, r9, r3
 801c09c:	b289      	uxth	r1, r1
 801c09e:	fb01 330e 	mla	r3, r1, lr, r3
 801c0a2:	fb00 3304 	mla	r3, r0, r4, r3
 801c0a6:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801c0a8:	fb0a 3304 	mla	r3, sl, r4, r3
 801c0ac:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c0b0:	2b00      	cmp	r3, #0
 801c0b2:	f000 80e8 	beq.w	801c286 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 801c0b6:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801c0ba:	d01b      	beq.n	801c0f4 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801c0bc:	f002 1bff 	and.w	fp, r2, #16711935	; 0xff00ff
 801c0c0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801c0c4:	fb0e fb0b 	mul.w	fp, lr, fp
 801c0c8:	fb0e fe02 	mul.w	lr, lr, r2
 801c0cc:	ea4f 221b 	mov.w	r2, fp, lsr #8
 801c0d0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801c0d4:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801c0d8:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801c0dc:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801c0e0:	445a      	add	r2, fp
 801c0e2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c0e6:	0a12      	lsrs	r2, r2, #8
 801c0e8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801c0ec:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801c0f0:	ea42 020c 	orr.w	r2, r2, ip
 801c0f4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801c0f6:	2cff      	cmp	r4, #255	; 0xff
 801c0f8:	d021      	beq.n	801c13e <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801c0fa:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801c0fc:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801c100:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801c102:	fb04 fc0c 	mul.w	ip, r4, ip
 801c106:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801c108:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 801c10c:	f404 4b7f 	and.w	fp, r4, #65280	; 0xff00
 801c110:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801c112:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801c116:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801c11a:	fb04 fb0b 	mul.w	fp, r4, fp
 801c11e:	44e6      	add	lr, ip
 801c120:	f50b 7c80 	add.w	ip, fp, #256	; 0x100
 801c124:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c128:	eb0c 2b1b 	add.w	fp, ip, fp, lsr #8
 801c12c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801c130:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 801c134:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 801c138:	ea4e 040b 	orr.w	r4, lr, fp
 801c13c:	940a      	str	r4, [sp, #40]	; 0x28
 801c13e:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801c140:	2cff      	cmp	r4, #255	; 0xff
 801c142:	d021      	beq.n	801c188 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801c144:	9c07      	ldr	r4, [sp, #28]
 801c146:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801c14a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801c14c:	fb04 fc0c 	mul.w	ip, r4, ip
 801c150:	9c07      	ldr	r4, [sp, #28]
 801c152:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 801c156:	f404 4b7f 	and.w	fp, r4, #65280	; 0xff00
 801c15a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801c15c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801c160:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801c164:	fb04 fb0b 	mul.w	fp, r4, fp
 801c168:	44e6      	add	lr, ip
 801c16a:	f50b 7c80 	add.w	ip, fp, #256	; 0x100
 801c16e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c172:	eb0c 2b1b 	add.w	fp, ip, fp, lsr #8
 801c176:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801c17a:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 801c17e:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 801c182:	ea4e 040b 	orr.w	r4, lr, fp
 801c186:	9407      	str	r4, [sp, #28]
 801c188:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801c18a:	2cff      	cmp	r4, #255	; 0xff
 801c18c:	d021      	beq.n	801c1d2 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801c18e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c190:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801c194:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801c196:	fb04 fc0c 	mul.w	ip, r4, ip
 801c19a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c19c:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 801c1a0:	f404 4b7f 	and.w	fp, r4, #65280	; 0xff00
 801c1a4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801c1a6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801c1aa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801c1ae:	fb04 fb0b 	mul.w	fp, r4, fp
 801c1b2:	44e6      	add	lr, ip
 801c1b4:	f50b 7c80 	add.w	ip, fp, #256	; 0x100
 801c1b8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c1bc:	eb0c 2b1b 	add.w	fp, ip, fp, lsr #8
 801c1c0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801c1c4:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 801c1c8:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 801c1cc:	ea4e 040b 	orr.w	r4, lr, fp
 801c1d0:	940b      	str	r4, [sp, #44]	; 0x2c
 801c1d2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801c1d4:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801c1d8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801c1dc:	2bff      	cmp	r3, #255	; 0xff
 801c1de:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801c1e2:	9c07      	ldr	r4, [sp, #28]
 801c1e4:	fb09 fc0c 	mul.w	ip, r9, ip
 801c1e8:	fb01 cc0e 	mla	ip, r1, lr, ip
 801c1ec:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801c1f0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c1f2:	fb00 cc0e 	mla	ip, r0, lr, ip
 801c1f6:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801c1fa:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801c1fc:	fb0a cc0e 	mla	ip, sl, lr, ip
 801c200:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801c204:	fb09 f90e 	mul.w	r9, r9, lr
 801c208:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c20c:	fb01 9202 	mla	r2, r1, r2, r9
 801c210:	9907      	ldr	r1, [sp, #28]
 801c212:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c216:	f401 4b7f 	and.w	fp, r1, #65280	; 0xff00
 801c21a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801c21c:	fb00 220b 	mla	r2, r0, fp, r2
 801c220:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 801c224:	fb0a 2a00 	mla	sl, sl, r0, r2
 801c228:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c22c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c230:	ea4c 0c0a 	orr.w	ip, ip, sl
 801c234:	fa5f f08c 	uxtb.w	r0, ip
 801c238:	f3cc 2107 	ubfx	r1, ip, #8, #8
 801c23c:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 801c240:	f000 80a2 	beq.w	801c388 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x448>
 801c244:	43db      	mvns	r3, r3
 801c246:	783a      	ldrb	r2, [r7, #0]
 801c248:	f897 a002 	ldrb.w	sl, [r7, #2]
 801c24c:	b2db      	uxtb	r3, r3
 801c24e:	fb02 fe03 	mul.w	lr, r2, r3
 801c252:	fb0a fa03 	mul.w	sl, sl, r3
 801c256:	f10e 0201 	add.w	r2, lr, #1
 801c25a:	eb02 221e 	add.w	r2, r2, lr, lsr #8
 801c25e:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801c262:	703a      	strb	r2, [r7, #0]
 801c264:	787a      	ldrb	r2, [r7, #1]
 801c266:	fb02 f003 	mul.w	r0, r2, r3
 801c26a:	f10a 0301 	add.w	r3, sl, #1
 801c26e:	1c42      	adds	r2, r0, #1
 801c270:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 801c274:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801c278:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801c27c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801c280:	707a      	strb	r2, [r7, #1]
 801c282:	f887 c002 	strb.w	ip, [r7, #2]
 801c286:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801c288:	3703      	adds	r7, #3
 801c28a:	f108 38ff 	add.w	r8, r8, #4294967295
 801c28e:	441d      	add	r5, r3
 801c290:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801c292:	441e      	add	r6, r3
 801c294:	e6ab      	b.n	801bfee <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801c296:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801c298:	441d      	add	r5, r3
 801c29a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801c29c:	441e      	add	r6, r3
 801c29e:	9b06      	ldr	r3, [sp, #24]
 801c2a0:	3b01      	subs	r3, #1
 801c2a2:	9306      	str	r3, [sp, #24]
 801c2a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c2a6:	3303      	adds	r3, #3
 801c2a8:	9309      	str	r3, [sp, #36]	; 0x24
 801c2aa:	e680      	b.n	801bfae <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801c2ac:	d024      	beq.n	801c2f8 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b8>
 801c2ae:	9b06      	ldr	r3, [sp, #24]
 801c2b0:	982d      	ldr	r0, [sp, #180]	; 0xb4
 801c2b2:	3b01      	subs	r3, #1
 801c2b4:	fb00 5003 	mla	r0, r0, r3, r5
 801c2b8:	1400      	asrs	r0, r0, #16
 801c2ba:	f53f ae95 	bmi.w	801bfe8 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801c2be:	3901      	subs	r1, #1
 801c2c0:	4288      	cmp	r0, r1
 801c2c2:	f6bf ae91 	bge.w	801bfe8 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801c2c6:	992e      	ldr	r1, [sp, #184]	; 0xb8
 801c2c8:	fb01 6303 	mla	r3, r1, r3, r6
 801c2cc:	141b      	asrs	r3, r3, #16
 801c2ce:	f53f ae8b 	bmi.w	801bfe8 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801c2d2:	3a01      	subs	r2, #1
 801c2d4:	4293      	cmp	r3, r2
 801c2d6:	f6bf ae87 	bge.w	801bfe8 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801c2da:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c2dc:	f8dd b018 	ldr.w	fp, [sp, #24]
 801c2e0:	1cdf      	adds	r7, r3, #3
 801c2e2:	f1bb 0f00 	cmp.w	fp, #0
 801c2e6:	dc6e      	bgt.n	801c3c6 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801c2e8:	9b06      	ldr	r3, [sp, #24]
 801c2ea:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801c2ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c2f0:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801c2f4:	4423      	add	r3, r4
 801c2f6:	9309      	str	r3, [sp, #36]	; 0x24
 801c2f8:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801c2fa:	2b00      	cmp	r3, #0
 801c2fc:	f340 81b0 	ble.w	801c660 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x720>
 801c300:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c304:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801c306:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801c30a:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801c30e:	eef0 6a48 	vmov.f32	s13, s16
 801c312:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801c316:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801c31a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c31e:	ee16 5a90 	vmov	r5, s13
 801c322:	eef0 6a68 	vmov.f32	s13, s17
 801c326:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c32a:	ee16 6a90 	vmov	r6, s13
 801c32e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801c332:	ee69 7a27 	vmul.f32	s15, s18, s15
 801c336:	ee37 8a48 	vsub.f32	s16, s14, s16
 801c33a:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801c33e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801c342:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801c346:	ee18 2a10 	vmov	r2, s16
 801c34a:	eeb0 8a47 	vmov.f32	s16, s14
 801c34e:	fb92 f3f3 	sdiv	r3, r2, r3
 801c352:	ee18 2a90 	vmov	r2, s17
 801c356:	932d      	str	r3, [sp, #180]	; 0xb4
 801c358:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801c35a:	eef0 8a67 	vmov.f32	s17, s15
 801c35e:	fb92 f3f3 	sdiv	r3, r2, r3
 801c362:	932e      	str	r3, [sp, #184]	; 0xb8
 801c364:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801c366:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801c368:	3b01      	subs	r3, #1
 801c36a:	9315      	str	r3, [sp, #84]	; 0x54
 801c36c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801c36e:	bf08      	it	eq
 801c370:	4613      	moveq	r3, r2
 801c372:	9306      	str	r3, [sp, #24]
 801c374:	e60d      	b.n	801bf92 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801c376:	2800      	cmp	r0, #0
 801c378:	f43f ae7d 	beq.w	801c076 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x136>
 801c37c:	f859 3023 	ldr.w	r3, [r9, r3, lsl #2]
 801c380:	9307      	str	r3, [sp, #28]
 801c382:	0e1b      	lsrs	r3, r3, #24
 801c384:	930f      	str	r3, [sp, #60]	; 0x3c
 801c386:	e676      	b.n	801c076 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x136>
 801c388:	7038      	strb	r0, [r7, #0]
 801c38a:	7079      	strb	r1, [r7, #1]
 801c38c:	e779      	b.n	801c282 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801c38e:	f112 0901 	adds.w	r9, r2, #1
 801c392:	f53f af78 	bmi.w	801c286 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 801c396:	454b      	cmp	r3, r9
 801c398:	f6ff af75 	blt.w	801c286 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 801c39c:	f11c 0901 	adds.w	r9, ip, #1
 801c3a0:	f53f af71 	bmi.w	801c286 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 801c3a4:	45ce      	cmp	lr, r9
 801c3a6:	f6ff af6e 	blt.w	801c286 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 801c3aa:	b21b      	sxth	r3, r3
 801c3ac:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801c3b0:	fa0f f28e 	sxth.w	r2, lr
 801c3b4:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801c3b8:	9200      	str	r2, [sp, #0]
 801c3ba:	4639      	mov	r1, r7
 801c3bc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801c3be:	9817      	ldr	r0, [sp, #92]	; 0x5c
 801c3c0:	f7ff fc7c 	bl	801bcbc <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh>
 801c3c4:	e75f      	b.n	801c286 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 801c3c6:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801c3c8:	1429      	asrs	r1, r5, #16
 801c3ca:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801c3cc:	f3c5 3203 	ubfx	r2, r5, #12, #4
 801c3d0:	f9b3 c008 	ldrsh.w	ip, [r3, #8]
 801c3d4:	1433      	asrs	r3, r6, #16
 801c3d6:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801c3da:	fb0c 1303 	mla	r3, ip, r3, r1
 801c3de:	990e      	ldr	r1, [sp, #56]	; 0x38
 801c3e0:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801c3e4:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 801c3e8:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801c3ec:	2a00      	cmp	r2, #0
 801c3ee:	f000 8129 	beq.w	801c644 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 801c3f2:	684c      	ldr	r4, [r1, #4]
 801c3f4:	940c      	str	r4, [sp, #48]	; 0x30
 801c3f6:	0e24      	lsrs	r4, r4, #24
 801c3f8:	9413      	str	r4, [sp, #76]	; 0x4c
 801c3fa:	b198      	cbz	r0, 801c424 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801c3fc:	f10c 4c80 	add.w	ip, ip, #1073741824	; 0x40000000
 801c400:	f10c 3cff 	add.w	ip, ip, #4294967295
 801c404:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 801c408:	f10c 0c04 	add.w	ip, ip, #4
 801c40c:	eb01 080c 	add.w	r8, r1, ip
 801c410:	f851 100c 	ldr.w	r1, [r1, ip]
 801c414:	9108      	str	r1, [sp, #32]
 801c416:	0e09      	lsrs	r1, r1, #24
 801c418:	9110      	str	r1, [sp, #64]	; 0x40
 801c41a:	f8d8 1004 	ldr.w	r1, [r8, #4]
 801c41e:	910d      	str	r1, [sp, #52]	; 0x34
 801c420:	0e09      	lsrs	r1, r1, #24
 801c422:	9114      	str	r1, [sp, #80]	; 0x50
 801c424:	b292      	uxth	r2, r2
 801c426:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801c428:	b280      	uxth	r0, r0
 801c42a:	fb02 f900 	mul.w	r9, r2, r0
 801c42e:	0112      	lsls	r2, r2, #4
 801c430:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801c434:	eba2 0809 	sub.w	r8, r2, r9
 801c438:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801c43c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c43e:	b280      	uxth	r0, r0
 801c440:	fa1f f888 	uxth.w	r8, r8
 801c444:	1a09      	subs	r1, r1, r0
 801c446:	fb08 f202 	mul.w	r2, r8, r2
 801c44a:	b289      	uxth	r1, r1
 801c44c:	fb01 220e 	mla	r2, r1, lr, r2
 801c450:	fb00 2204 	mla	r2, r0, r4, r2
 801c454:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801c456:	fb09 2204 	mla	r2, r9, r4, r2
 801c45a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801c45e:	2a00      	cmp	r2, #0
 801c460:	f000 80e8 	beq.w	801c634 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6f4>
 801c464:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801c468:	d01b      	beq.n	801c4a2 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x562>
 801c46a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801c46e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801c472:	fb0e fa0a 	mul.w	sl, lr, sl
 801c476:	fb0e fe03 	mul.w	lr, lr, r3
 801c47a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801c47e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801c482:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801c486:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801c48a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801c48e:	4453      	add	r3, sl
 801c490:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c494:	0a1b      	lsrs	r3, r3, #8
 801c496:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801c49a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801c49e:	ea43 030c 	orr.w	r3, r3, ip
 801c4a2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801c4a4:	2cff      	cmp	r4, #255	; 0xff
 801c4a6:	d021      	beq.n	801c4ec <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ac>
 801c4a8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801c4aa:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801c4ae:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801c4b0:	fb04 fc0c 	mul.w	ip, r4, ip
 801c4b4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801c4b6:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 801c4ba:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801c4be:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801c4c0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801c4c4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801c4c8:	fb04 fa0a 	mul.w	sl, r4, sl
 801c4cc:	44e6      	add	lr, ip
 801c4ce:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801c4d2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c4d6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c4da:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801c4de:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c4e2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c4e6:	ea4e 040a 	orr.w	r4, lr, sl
 801c4ea:	940c      	str	r4, [sp, #48]	; 0x30
 801c4ec:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801c4ee:	2cff      	cmp	r4, #255	; 0xff
 801c4f0:	d021      	beq.n	801c536 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5f6>
 801c4f2:	9c08      	ldr	r4, [sp, #32]
 801c4f4:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801c4f8:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801c4fa:	fb04 fc0c 	mul.w	ip, r4, ip
 801c4fe:	9c08      	ldr	r4, [sp, #32]
 801c500:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801c504:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801c506:	fb04 fa0e 	mul.w	sl, r4, lr
 801c50a:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 801c50e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801c512:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801c516:	44e6      	add	lr, ip
 801c518:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801c51c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c520:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c524:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c528:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801c52c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c530:	ea4e 040a 	orr.w	r4, lr, sl
 801c534:	9408      	str	r4, [sp, #32]
 801c536:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801c538:	2cff      	cmp	r4, #255	; 0xff
 801c53a:	d021      	beq.n	801c580 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x640>
 801c53c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c53e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801c542:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801c544:	fb04 fc0c 	mul.w	ip, r4, ip
 801c548:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c54a:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 801c54e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801c552:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801c554:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801c558:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801c55c:	fb04 fa0a 	mul.w	sl, r4, sl
 801c560:	44e6      	add	lr, ip
 801c562:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801c566:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c56a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c56e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801c572:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c576:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c57a:	ea4e 040a 	orr.w	r4, lr, sl
 801c57e:	940d      	str	r4, [sp, #52]	; 0x34
 801c580:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801c582:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801c586:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801c58a:	2aff      	cmp	r2, #255	; 0xff
 801c58c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801c590:	9c08      	ldr	r4, [sp, #32]
 801c592:	fb08 fc0c 	mul.w	ip, r8, ip
 801c596:	fb01 cc0e 	mla	ip, r1, lr, ip
 801c59a:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801c59e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c5a0:	fb00 cc0e 	mla	ip, r0, lr, ip
 801c5a4:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801c5a8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801c5aa:	fb09 cc0e 	mla	ip, r9, lr, ip
 801c5ae:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801c5b2:	fb08 f80e 	mul.w	r8, r8, lr
 801c5b6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c5ba:	fb01 8303 	mla	r3, r1, r3, r8
 801c5be:	9908      	ldr	r1, [sp, #32]
 801c5c0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c5c4:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801c5c8:	990d      	ldr	r1, [sp, #52]	; 0x34
 801c5ca:	fb00 330a 	mla	r3, r0, sl, r3
 801c5ce:	f401 4e7f 	and.w	lr, r1, #65280	; 0xff00
 801c5d2:	fb09 3e0e 	mla	lr, r9, lr, r3
 801c5d6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c5da:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801c5de:	ea4c 0c0e 	orr.w	ip, ip, lr
 801c5e2:	fa5f f08c 	uxtb.w	r0, ip
 801c5e6:	f3cc 2107 	ubfx	r1, ip, #8, #8
 801c5ea:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 801c5ee:	d032      	beq.n	801c656 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x716>
 801c5f0:	43d2      	mvns	r2, r2
 801c5f2:	f817 ec03 	ldrb.w	lr, [r7, #-3]
 801c5f6:	b2d2      	uxtb	r2, r2
 801c5f8:	fb0e fe02 	mul.w	lr, lr, r2
 801c5fc:	f10e 0301 	add.w	r3, lr, #1
 801c600:	eb03 231e 	add.w	r3, r3, lr, lsr #8
 801c604:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801c608:	f817 0c02 	ldrb.w	r0, [r7, #-2]
 801c60c:	4350      	muls	r0, r2
 801c60e:	f807 3c03 	strb.w	r3, [r7, #-3]
 801c612:	1c43      	adds	r3, r0, #1
 801c614:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801c618:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801c61c:	f817 3c01 	ldrb.w	r3, [r7, #-1]
 801c620:	4353      	muls	r3, r2
 801c622:	f807 1c02 	strb.w	r1, [r7, #-2]
 801c626:	1c5a      	adds	r2, r3, #1
 801c628:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801c62c:	eb0c 2c12 	add.w	ip, ip, r2, lsr #8
 801c630:	f807 cc01 	strb.w	ip, [r7, #-1]
 801c634:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801c636:	3703      	adds	r7, #3
 801c638:	f10b 3bff 	add.w	fp, fp, #4294967295
 801c63c:	441d      	add	r5, r3
 801c63e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801c640:	441e      	add	r6, r3
 801c642:	e64e      	b.n	801c2e2 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a2>
 801c644:	2800      	cmp	r0, #0
 801c646:	f43f aeed 	beq.w	801c424 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801c64a:	f851 102c 	ldr.w	r1, [r1, ip, lsl #2]
 801c64e:	9108      	str	r1, [sp, #32]
 801c650:	0e09      	lsrs	r1, r1, #24
 801c652:	9110      	str	r1, [sp, #64]	; 0x40
 801c654:	e6e6      	b.n	801c424 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801c656:	f807 0c03 	strb.w	r0, [r7, #-3]
 801c65a:	f807 1c02 	strb.w	r1, [r7, #-2]
 801c65e:	e7e7      	b.n	801c630 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6f0>
 801c660:	b019      	add	sp, #100	; 0x64
 801c662:	ecbd 8b08 	vpop	{d8-d11}
 801c666:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801c66c <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh>:
 801c66c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c670:	e9dd 0c0c 	ldrd	r0, ip, [sp, #48]	; 0x30
 801c674:	f9bd 8028 	ldrsh.w	r8, [sp, #40]	; 0x28
 801c678:	2800      	cmp	r0, #0
 801c67a:	f9bd 902c 	ldrsh.w	r9, [sp, #44]	; 0x2c
 801c67e:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 801c682:	fb0c 0e03 	mla	lr, ip, r3, r0
 801c686:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 801c68a:	db6b      	blt.n	801c764 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0xf8>
 801c68c:	4580      	cmp	r8, r0
 801c68e:	dd69      	ble.n	801c764 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0xf8>
 801c690:	f1bc 0f00 	cmp.w	ip, #0
 801c694:	db66      	blt.n	801c764 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0xf8>
 801c696:	45e1      	cmp	r9, ip
 801c698:	dd64      	ble.n	801c764 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0xf8>
 801c69a:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801c69e:	f01e 0f01 	tst.w	lr, #1
 801c6a2:	5d16      	ldrb	r6, [r2, r4]
 801c6a4:	bf0c      	ite	eq
 801c6a6:	f006 060f 	andeq.w	r6, r6, #15
 801c6aa:	1136      	asrne	r6, r6, #4
 801c6ac:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801c6b0:	b2f6      	uxtb	r6, r6
 801c6b2:	f110 0a01 	adds.w	sl, r0, #1
 801c6b6:	d457      	bmi.n	801c768 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0xfc>
 801c6b8:	45d0      	cmp	r8, sl
 801c6ba:	dd55      	ble.n	801c768 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0xfc>
 801c6bc:	f1bc 0f00 	cmp.w	ip, #0
 801c6c0:	db52      	blt.n	801c768 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0xfc>
 801c6c2:	45e1      	cmp	r9, ip
 801c6c4:	dd50      	ble.n	801c768 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0xfc>
 801c6c6:	2f00      	cmp	r7, #0
 801c6c8:	f000 80ac 	beq.w	801c824 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x1b8>
 801c6cc:	f10e 0b01 	add.w	fp, lr, #1
 801c6d0:	ea4f 045b 	mov.w	r4, fp, lsr #1
 801c6d4:	f01b 0f01 	tst.w	fp, #1
 801c6d8:	5d14      	ldrb	r4, [r2, r4]
 801c6da:	bf0c      	ite	eq
 801c6dc:	f004 040f 	andeq.w	r4, r4, #15
 801c6e0:	1124      	asrne	r4, r4, #4
 801c6e2:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801c6e6:	b2e4      	uxtb	r4, r4
 801c6e8:	2d00      	cmp	r5, #0
 801c6ea:	f000 8096 	beq.w	801c81a <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x1ae>
 801c6ee:	2800      	cmp	r0, #0
 801c6f0:	f10c 0c01 	add.w	ip, ip, #1
 801c6f4:	db3c      	blt.n	801c770 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x104>
 801c6f6:	4580      	cmp	r8, r0
 801c6f8:	dd3a      	ble.n	801c770 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x104>
 801c6fa:	f1bc 0f00 	cmp.w	ip, #0
 801c6fe:	db37      	blt.n	801c770 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x104>
 801c700:	45e1      	cmp	r9, ip
 801c702:	dd35      	ble.n	801c770 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x104>
 801c704:	eb03 0b0e 	add.w	fp, r3, lr
 801c708:	ea4f 005b 	mov.w	r0, fp, lsr #1
 801c70c:	f01b 0f01 	tst.w	fp, #1
 801c710:	5c10      	ldrb	r0, [r2, r0]
 801c712:	bf0c      	ite	eq
 801c714:	f000 000f 	andeq.w	r0, r0, #15
 801c718:	1100      	asrne	r0, r0, #4
 801c71a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801c71e:	b2c0      	uxtb	r0, r0
 801c720:	f1ba 0f00 	cmp.w	sl, #0
 801c724:	db26      	blt.n	801c774 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x108>
 801c726:	45d0      	cmp	r8, sl
 801c728:	dd24      	ble.n	801c774 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x108>
 801c72a:	f1bc 0f00 	cmp.w	ip, #0
 801c72e:	db21      	blt.n	801c774 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x108>
 801c730:	45e1      	cmp	r9, ip
 801c732:	dd1f      	ble.n	801c774 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x108>
 801c734:	b307      	cbz	r7, 801c778 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x10c>
 801c736:	3301      	adds	r3, #1
 801c738:	449e      	add	lr, r3
 801c73a:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801c73e:	f01e 0f01 	tst.w	lr, #1
 801c742:	5cd3      	ldrb	r3, [r2, r3]
 801c744:	bf0c      	ite	eq
 801c746:	f003 030f 	andeq.w	r3, r3, #15
 801c74a:	111b      	asrne	r3, r3, #4
 801c74c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801c750:	b2db      	uxtb	r3, r3
 801c752:	2f0f      	cmp	r7, #15
 801c754:	d911      	bls.n	801c77a <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x10e>
 801c756:	4b35      	ldr	r3, [pc, #212]	; (801c82c <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x1c0>)
 801c758:	f240 115b 	movw	r1, #347	; 0x15b
 801c75c:	4a34      	ldr	r2, [pc, #208]	; (801c830 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x1c4>)
 801c75e:	4835      	ldr	r0, [pc, #212]	; (801c834 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x1c8>)
 801c760:	f003 fc3e 	bl	801ffe0 <__assert_func>
 801c764:	2600      	movs	r6, #0
 801c766:	e7a4      	b.n	801c6b2 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x46>
 801c768:	2400      	movs	r4, #0
 801c76a:	e7bd      	b.n	801c6e8 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x7c>
 801c76c:	463c      	mov	r4, r7
 801c76e:	e7be      	b.n	801c6ee <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x82>
 801c770:	2000      	movs	r0, #0
 801c772:	e7d5      	b.n	801c720 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0xb4>
 801c774:	2300      	movs	r3, #0
 801c776:	e7ec      	b.n	801c752 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0xe6>
 801c778:	463b      	mov	r3, r7
 801c77a:	2d0f      	cmp	r5, #15
 801c77c:	d8eb      	bhi.n	801c756 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0xea>
 801c77e:	b2bf      	uxth	r7, r7
 801c780:	b2ad      	uxth	r5, r5
 801c782:	fb07 f205 	mul.w	r2, r7, r5
 801c786:	013f      	lsls	r7, r7, #4
 801c788:	ebc2 1505 	rsb	r5, r2, r5, lsl #4
 801c78c:	f5c7 7c80 	rsb	ip, r7, #256	; 0x100
 801c790:	1abf      	subs	r7, r7, r2
 801c792:	b2ad      	uxth	r5, r5
 801c794:	b2bf      	uxth	r7, r7
 801c796:	ebac 0c05 	sub.w	ip, ip, r5
 801c79a:	437c      	muls	r4, r7
 801c79c:	fa1f fc8c 	uxth.w	ip, ip
 801c7a0:	fb06 440c 	mla	r4, r6, ip, r4
 801c7a4:	fb05 4400 	mla	r4, r5, r0, r4
 801c7a8:	fb02 4203 	mla	r2, r2, r3, r4
 801c7ac:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801c7b0:	b38a      	cbz	r2, 801c816 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x1aa>
 801c7b2:	4b21      	ldr	r3, [pc, #132]	; (801c838 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x1cc>)
 801c7b4:	681c      	ldr	r4, [r3, #0]
 801c7b6:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 801c7ba:	b2e5      	uxtb	r5, r4
 801c7bc:	4353      	muls	r3, r2
 801c7be:	1c5a      	adds	r2, r3, #1
 801c7c0:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801c7c4:	1212      	asrs	r2, r2, #8
 801c7c6:	b290      	uxth	r0, r2
 801c7c8:	43d2      	mvns	r2, r2
 801c7ca:	fb15 f500 	smulbb	r5, r5, r0
 801c7ce:	b2d3      	uxtb	r3, r2
 801c7d0:	780a      	ldrb	r2, [r1, #0]
 801c7d2:	fb02 5203 	mla	r2, r2, r3, r5
 801c7d6:	b292      	uxth	r2, r2
 801c7d8:	1c55      	adds	r5, r2, #1
 801c7da:	eb05 2212 	add.w	r2, r5, r2, lsr #8
 801c7de:	784d      	ldrb	r5, [r1, #1]
 801c7e0:	fb15 f503 	smulbb	r5, r5, r3
 801c7e4:	1212      	asrs	r2, r2, #8
 801c7e6:	700a      	strb	r2, [r1, #0]
 801c7e8:	f3c4 2207 	ubfx	r2, r4, #8, #8
 801c7ec:	f3c4 4407 	ubfx	r4, r4, #16, #8
 801c7f0:	fb02 5200 	mla	r2, r2, r0, r5
 801c7f4:	b292      	uxth	r2, r2
 801c7f6:	1c55      	adds	r5, r2, #1
 801c7f8:	eb05 2212 	add.w	r2, r5, r2, lsr #8
 801c7fc:	1212      	asrs	r2, r2, #8
 801c7fe:	704a      	strb	r2, [r1, #1]
 801c800:	788a      	ldrb	r2, [r1, #2]
 801c802:	fb12 f303 	smulbb	r3, r2, r3
 801c806:	fb04 3300 	mla	r3, r4, r0, r3
 801c80a:	b29b      	uxth	r3, r3
 801c80c:	1c5a      	adds	r2, r3, #1
 801c80e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801c812:	121b      	asrs	r3, r3, #8
 801c814:	708b      	strb	r3, [r1, #2]
 801c816:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c81a:	2f0f      	cmp	r7, #15
 801c81c:	d89b      	bhi.n	801c756 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0xea>
 801c81e:	462b      	mov	r3, r5
 801c820:	4628      	mov	r0, r5
 801c822:	e7ac      	b.n	801c77e <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x112>
 801c824:	2d00      	cmp	r5, #0
 801c826:	d1a1      	bne.n	801c76c <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x100>
 801c828:	462c      	mov	r4, r5
 801c82a:	e7f8      	b.n	801c81e <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x1b2>
 801c82c:	08025314 	.word	0x08025314
 801c830:	0802572a 	.word	0x0802572a
 801c834:	080252e1 	.word	0x080252e1
 801c838:	2400e0dc 	.word	0x2400e0dc

0801c83c <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c83c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c840:	ed2d 8b08 	vpush	{d8-d11}
 801c844:	b097      	sub	sp, #92	; 0x5c
 801c846:	eeb0 aa40 	vmov.f32	s20, s0
 801c84a:	eef0 9a60 	vmov.f32	s19, s1
 801c84e:	9214      	str	r2, [sp, #80]	; 0x50
 801c850:	eeb0 9a41 	vmov.f32	s18, s2
 801c854:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801c856:	eeb0 8a62 	vmov.f32	s16, s5
 801c85a:	9309      	str	r3, [sp, #36]	; 0x24
 801c85c:	eef0 8a43 	vmov.f32	s17, s6
 801c860:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801c864:	eef0 ba44 	vmov.f32	s23, s8
 801c868:	9015      	str	r0, [sp, #84]	; 0x54
 801c86a:	eeb0 ba64 	vmov.f32	s22, s9
 801c86e:	6850      	ldr	r0, [r2, #4]
 801c870:	eef0 aa45 	vmov.f32	s21, s10
 801c874:	910c      	str	r1, [sp, #48]	; 0x30
 801c876:	930e      	str	r3, [sp, #56]	; 0x38
 801c878:	6812      	ldr	r2, [r2, #0]
 801c87a:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801c87e:	e9dd 5629 	ldrd	r5, r6, [sp, #164]	; 0xa4
 801c882:	fb00 1303 	mla	r3, r0, r3, r1
 801c886:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801c88a:	eb02 0a03 	add.w	sl, r2, r3
 801c88e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801c890:	689b      	ldr	r3, [r3, #8]
 801c892:	3301      	adds	r3, #1
 801c894:	f023 0301 	bic.w	r3, r3, #1
 801c898:	930f      	str	r3, [sp, #60]	; 0x3c
 801c89a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801c89c:	681f      	ldr	r7, [r3, #0]
 801c89e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c8a0:	2b00      	cmp	r3, #0
 801c8a2:	dc03      	bgt.n	801c8ac <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c8a4:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801c8a6:	2b00      	cmp	r3, #0
 801c8a8:	f340 8247 	ble.w	801cd3a <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4fe>
 801c8ac:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801c8ae:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c8b2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c8b6:	1e48      	subs	r0, r1, #1
 801c8b8:	f102 3cff 	add.w	ip, r2, #4294967295
 801c8bc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c8be:	2b00      	cmp	r3, #0
 801c8c0:	f340 80e5 	ble.w	801ca8e <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801c8c4:	ea5f 4e25 	movs.w	lr, r5, asr #16
 801c8c8:	ea4f 4326 	mov.w	r3, r6, asr #16
 801c8cc:	d406      	bmi.n	801c8dc <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801c8ce:	4586      	cmp	lr, r0
 801c8d0:	da04      	bge.n	801c8dc <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801c8d2:	2b00      	cmp	r3, #0
 801c8d4:	db02      	blt.n	801c8dc <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801c8d6:	4563      	cmp	r3, ip
 801c8d8:	f2c0 80da 	blt.w	801ca90 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801c8dc:	f11e 0e01 	adds.w	lr, lr, #1
 801c8e0:	f100 80cb 	bmi.w	801ca7a <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23e>
 801c8e4:	4571      	cmp	r1, lr
 801c8e6:	f2c0 80c8 	blt.w	801ca7a <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23e>
 801c8ea:	3301      	adds	r3, #1
 801c8ec:	f100 80c5 	bmi.w	801ca7a <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23e>
 801c8f0:	429a      	cmp	r2, r3
 801c8f2:	f2c0 80c2 	blt.w	801ca7a <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23e>
 801c8f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c8f8:	46d0      	mov	r8, sl
 801c8fa:	f9bd 903c 	ldrsh.w	r9, [sp, #60]	; 0x3c
 801c8fe:	930d      	str	r3, [sp, #52]	; 0x34
 801c900:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c902:	2b00      	cmp	r3, #0
 801c904:	f340 80e3 	ble.w	801cace <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801c908:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801c90a:	1430      	asrs	r0, r6, #16
 801c90c:	f3c5 3203 	ubfx	r2, r5, #12, #4
 801c910:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801c914:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801c918:	142b      	asrs	r3, r5, #16
 801c91a:	f100 812e 	bmi.w	801cb7a <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801c91e:	f10c 3bff 	add.w	fp, ip, #4294967295
 801c922:	455b      	cmp	r3, fp
 801c924:	f280 8129 	bge.w	801cb7a <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801c928:	2800      	cmp	r0, #0
 801c92a:	f2c0 8126 	blt.w	801cb7a <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801c92e:	f10e 3bff 	add.w	fp, lr, #4294967295
 801c932:	4558      	cmp	r0, fp
 801c934:	f280 8121 	bge.w	801cb7a <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801c938:	fb00 3309 	mla	r3, r0, r9, r3
 801c93c:	0858      	lsrs	r0, r3, #1
 801c93e:	07dc      	lsls	r4, r3, #31
 801c940:	f817 c000 	ldrb.w	ip, [r7, r0]
 801c944:	bf54      	ite	pl
 801c946:	f00c 0c0f 	andpl.w	ip, ip, #15
 801c94a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801c94e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801c952:	fa5f fc8c 	uxtb.w	ip, ip
 801c956:	2a00      	cmp	r2, #0
 801c958:	f000 80fe 	beq.w	801cb58 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801c95c:	1c58      	adds	r0, r3, #1
 801c95e:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801c962:	07c0      	lsls	r0, r0, #31
 801c964:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801c968:	bf54      	ite	pl
 801c96a:	f00e 0e0f 	andpl.w	lr, lr, #15
 801c96e:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801c972:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801c976:	fa5f f08e 	uxtb.w	r0, lr
 801c97a:	9010      	str	r0, [sp, #64]	; 0x40
 801c97c:	b1d9      	cbz	r1, 801c9b6 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17a>
 801c97e:	444b      	add	r3, r9
 801c980:	0858      	lsrs	r0, r3, #1
 801c982:	07dc      	lsls	r4, r3, #31
 801c984:	f103 0301 	add.w	r3, r3, #1
 801c988:	5c38      	ldrb	r0, [r7, r0]
 801c98a:	bf54      	ite	pl
 801c98c:	f000 000f 	andpl.w	r0, r0, #15
 801c990:	1100      	asrmi	r0, r0, #4
 801c992:	07dc      	lsls	r4, r3, #31
 801c994:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801c998:	b2c0      	uxtb	r0, r0
 801c99a:	900a      	str	r0, [sp, #40]	; 0x28
 801c99c:	ea4f 0053 	mov.w	r0, r3, lsr #1
 801c9a0:	f817 e000 	ldrb.w	lr, [r7, r0]
 801c9a4:	bf54      	ite	pl
 801c9a6:	f00e 030f 	andpl.w	r3, lr, #15
 801c9aa:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801c9ae:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801c9b2:	b2db      	uxtb	r3, r3
 801c9b4:	9311      	str	r3, [sp, #68]	; 0x44
 801c9b6:	b292      	uxth	r2, r2
 801c9b8:	b289      	uxth	r1, r1
 801c9ba:	0113      	lsls	r3, r2, #4
 801c9bc:	fb02 f001 	mul.w	r0, r2, r1
 801c9c0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801c9c2:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801c9c6:	ebc0 1101 	rsb	r1, r0, r1, lsl #4
 801c9ca:	1a1b      	subs	r3, r3, r0
 801c9cc:	b289      	uxth	r1, r1
 801c9ce:	b29b      	uxth	r3, r3
 801c9d0:	ebae 0e01 	sub.w	lr, lr, r1
 801c9d4:	4353      	muls	r3, r2
 801c9d6:	fa1f fe8e 	uxth.w	lr, lr
 801c9da:	fb0c 320e 	mla	r2, ip, lr, r3
 801c9de:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c9e0:	fb01 2203 	mla	r2, r1, r3, r2
 801c9e4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c9e6:	fb00 2203 	mla	r2, r0, r3, r2
 801c9ea:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801c9ee:	2a00      	cmp	r2, #0
 801c9f0:	d039      	beq.n	801ca66 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801c9f2:	4bc7      	ldr	r3, [pc, #796]	; (801cd10 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>)
 801c9f4:	6819      	ldr	r1, [r3, #0]
 801c9f6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c9f8:	fa5f fc81 	uxtb.w	ip, r1
 801c9fc:	435a      	muls	r2, r3
 801c9fe:	1c53      	adds	r3, r2, #1
 801ca00:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801ca04:	1212      	asrs	r2, r2, #8
 801ca06:	b290      	uxth	r0, r2
 801ca08:	43d2      	mvns	r2, r2
 801ca0a:	fb1c fc00 	smulbb	ip, ip, r0
 801ca0e:	b2d3      	uxtb	r3, r2
 801ca10:	f898 2000 	ldrb.w	r2, [r8]
 801ca14:	fb02 c203 	mla	r2, r2, r3, ip
 801ca18:	b292      	uxth	r2, r2
 801ca1a:	f102 0c01 	add.w	ip, r2, #1
 801ca1e:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801ca22:	f898 c001 	ldrb.w	ip, [r8, #1]
 801ca26:	fb1c fc03 	smulbb	ip, ip, r3
 801ca2a:	1212      	asrs	r2, r2, #8
 801ca2c:	f888 2000 	strb.w	r2, [r8]
 801ca30:	f3c1 2207 	ubfx	r2, r1, #8, #8
 801ca34:	f3c1 4107 	ubfx	r1, r1, #16, #8
 801ca38:	fb02 c200 	mla	r2, r2, r0, ip
 801ca3c:	b292      	uxth	r2, r2
 801ca3e:	f102 0c01 	add.w	ip, r2, #1
 801ca42:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801ca46:	1212      	asrs	r2, r2, #8
 801ca48:	f888 2001 	strb.w	r2, [r8, #1]
 801ca4c:	f898 2002 	ldrb.w	r2, [r8, #2]
 801ca50:	fb12 f303 	smulbb	r3, r2, r3
 801ca54:	fb01 3300 	mla	r3, r1, r0, r3
 801ca58:	b29b      	uxth	r3, r3
 801ca5a:	1c5a      	adds	r2, r3, #1
 801ca5c:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801ca60:	121b      	asrs	r3, r3, #8
 801ca62:	f888 3002 	strb.w	r3, [r8, #2]
 801ca66:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801ca68:	f108 0803 	add.w	r8, r8, #3
 801ca6c:	441d      	add	r5, r3
 801ca6e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ca70:	441e      	add	r6, r3
 801ca72:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ca74:	3b01      	subs	r3, #1
 801ca76:	930d      	str	r3, [sp, #52]	; 0x34
 801ca78:	e742      	b.n	801c900 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc4>
 801ca7a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801ca7c:	f10a 0a03 	add.w	sl, sl, #3
 801ca80:	441d      	add	r5, r3
 801ca82:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ca84:	441e      	add	r6, r3
 801ca86:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ca88:	3b01      	subs	r3, #1
 801ca8a:	9309      	str	r3, [sp, #36]	; 0x24
 801ca8c:	e716      	b.n	801c8bc <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801ca8e:	d024      	beq.n	801cada <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29e>
 801ca90:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ca92:	982b      	ldr	r0, [sp, #172]	; 0xac
 801ca94:	3b01      	subs	r3, #1
 801ca96:	fb00 5003 	mla	r0, r0, r3, r5
 801ca9a:	1400      	asrs	r0, r0, #16
 801ca9c:	f53f af2b 	bmi.w	801c8f6 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 801caa0:	3901      	subs	r1, #1
 801caa2:	4288      	cmp	r0, r1
 801caa4:	f6bf af27 	bge.w	801c8f6 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 801caa8:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801caaa:	fb01 6303 	mla	r3, r1, r3, r6
 801caae:	141b      	asrs	r3, r3, #16
 801cab0:	f53f af21 	bmi.w	801c8f6 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 801cab4:	3a01      	subs	r2, #1
 801cab6:	4293      	cmp	r3, r2
 801cab8:	f6bf af1d 	bge.w	801c8f6 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 801cabc:	f10a 0e03 	add.w	lr, sl, #3
 801cac0:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
 801cac4:	f9bd 903c 	ldrsh.w	r9, [sp, #60]	; 0x3c
 801cac8:	f1b8 0f00 	cmp.w	r8, #0
 801cacc:	dc76      	bgt.n	801cbbc <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
 801cace:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cad0:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801cad4:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801cad8:	44a2      	add	sl, r4
 801cada:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801cadc:	2b00      	cmp	r3, #0
 801cade:	f340 812c 	ble.w	801cd3a <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4fe>
 801cae2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801cae6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801cae8:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801caec:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801caf0:	eef0 6a48 	vmov.f32	s13, s16
 801caf4:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801caf8:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801cafc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cb00:	ee16 5a90 	vmov	r5, s13
 801cb04:	eef0 6a68 	vmov.f32	s13, s17
 801cb08:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cb0c:	ee16 6a90 	vmov	r6, s13
 801cb10:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801cb14:	ee69 7a27 	vmul.f32	s15, s18, s15
 801cb18:	ee37 8a48 	vsub.f32	s16, s14, s16
 801cb1c:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801cb20:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801cb24:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801cb28:	ee18 2a10 	vmov	r2, s16
 801cb2c:	eeb0 8a47 	vmov.f32	s16, s14
 801cb30:	fb92 f3f3 	sdiv	r3, r2, r3
 801cb34:	ee18 2a90 	vmov	r2, s17
 801cb38:	932b      	str	r3, [sp, #172]	; 0xac
 801cb3a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801cb3c:	eef0 8a67 	vmov.f32	s17, s15
 801cb40:	fb92 f3f3 	sdiv	r3, r2, r3
 801cb44:	932c      	str	r3, [sp, #176]	; 0xb0
 801cb46:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801cb48:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801cb4a:	3b01      	subs	r3, #1
 801cb4c:	930c      	str	r3, [sp, #48]	; 0x30
 801cb4e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801cb50:	bf08      	it	eq
 801cb52:	4613      	moveq	r3, r2
 801cb54:	9309      	str	r3, [sp, #36]	; 0x24
 801cb56:	e6a2      	b.n	801c89e <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 801cb58:	2900      	cmp	r1, #0
 801cb5a:	f43f af2c 	beq.w	801c9b6 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17a>
 801cb5e:	eb09 0003 	add.w	r0, r9, r3
 801cb62:	0843      	lsrs	r3, r0, #1
 801cb64:	07c0      	lsls	r0, r0, #31
 801cb66:	5cfb      	ldrb	r3, [r7, r3]
 801cb68:	bf54      	ite	pl
 801cb6a:	f003 030f 	andpl.w	r3, r3, #15
 801cb6e:	111b      	asrmi	r3, r3, #4
 801cb70:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801cb74:	b2db      	uxtb	r3, r3
 801cb76:	930a      	str	r3, [sp, #40]	; 0x28
 801cb78:	e71d      	b.n	801c9b6 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17a>
 801cb7a:	f113 0b01 	adds.w	fp, r3, #1
 801cb7e:	f53f af72 	bmi.w	801ca66 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801cb82:	45dc      	cmp	ip, fp
 801cb84:	f6ff af6f 	blt.w	801ca66 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801cb88:	f110 0b01 	adds.w	fp, r0, #1
 801cb8c:	f53f af6b 	bmi.w	801ca66 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801cb90:	45de      	cmp	lr, fp
 801cb92:	f6ff af68 	blt.w	801ca66 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801cb96:	9302      	str	r3, [sp, #8]
 801cb98:	fa0f f38e 	sxth.w	r3, lr
 801cb9c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801cb9e:	9301      	str	r3, [sp, #4]
 801cba0:	fa0f f38c 	sxth.w	r3, ip
 801cba4:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801cba8:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801cbac:	9300      	str	r3, [sp, #0]
 801cbae:	463a      	mov	r2, r7
 801cbb0:	464b      	mov	r3, r9
 801cbb2:	4641      	mov	r1, r8
 801cbb4:	9815      	ldr	r0, [sp, #84]	; 0x54
 801cbb6:	f7ff fd59 	bl	801c66c <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh>
 801cbba:	e754      	b.n	801ca66 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801cbbc:	142a      	asrs	r2, r5, #16
 801cbbe:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801cbc2:	1433      	asrs	r3, r6, #16
 801cbc4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801cbc8:	fb09 2303 	mla	r3, r9, r3, r2
 801cbcc:	085a      	lsrs	r2, r3, #1
 801cbce:	07dc      	lsls	r4, r3, #31
 801cbd0:	5cba      	ldrb	r2, [r7, r2]
 801cbd2:	bf54      	ite	pl
 801cbd4:	f002 020f 	andpl.w	r2, r2, #15
 801cbd8:	1112      	asrmi	r2, r2, #4
 801cbda:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801cbde:	b2d2      	uxtb	r2, r2
 801cbe0:	2900      	cmp	r1, #0
 801cbe2:	f000 8097 	beq.w	801cd14 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801cbe6:	f103 0b01 	add.w	fp, r3, #1
 801cbea:	ea4f 0c5b 	mov.w	ip, fp, lsr #1
 801cbee:	f01b 0f01 	tst.w	fp, #1
 801cbf2:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801cbf6:	bf0c      	ite	eq
 801cbf8:	f00c 0c0f 	andeq.w	ip, ip, #15
 801cbfc:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801cc00:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801cc04:	fa5f f48c 	uxtb.w	r4, ip
 801cc08:	9412      	str	r4, [sp, #72]	; 0x48
 801cc0a:	b300      	cbz	r0, 801cc4e <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x412>
 801cc0c:	444b      	add	r3, r9
 801cc0e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801cc12:	07dc      	lsls	r4, r3, #31
 801cc14:	f103 0301 	add.w	r3, r3, #1
 801cc18:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801cc1c:	bf54      	ite	pl
 801cc1e:	f00c 0c0f 	andpl.w	ip, ip, #15
 801cc22:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801cc26:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801cc2a:	fa5f f48c 	uxtb.w	r4, ip
 801cc2e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801cc32:	940b      	str	r4, [sp, #44]	; 0x2c
 801cc34:	07dc      	lsls	r4, r3, #31
 801cc36:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801cc3a:	bf54      	ite	pl
 801cc3c:	f00c 0c0f 	andpl.w	ip, ip, #15
 801cc40:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801cc44:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801cc48:	fa5f f38c 	uxtb.w	r3, ip
 801cc4c:	9313      	str	r3, [sp, #76]	; 0x4c
 801cc4e:	b289      	uxth	r1, r1
 801cc50:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801cc52:	b280      	uxth	r0, r0
 801cc54:	fb01 f300 	mul.w	r3, r1, r0
 801cc58:	0109      	lsls	r1, r1, #4
 801cc5a:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801cc5e:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801cc62:	1ac9      	subs	r1, r1, r3
 801cc64:	b280      	uxth	r0, r0
 801cc66:	b289      	uxth	r1, r1
 801cc68:	ebac 0c00 	sub.w	ip, ip, r0
 801cc6c:	4361      	muls	r1, r4
 801cc6e:	fa1f fc8c 	uxth.w	ip, ip
 801cc72:	fb02 120c 	mla	r2, r2, ip, r1
 801cc76:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801cc78:	fb00 2001 	mla	r0, r0, r1, r2
 801cc7c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801cc7e:	fb03 0302 	mla	r3, r3, r2, r0
 801cc82:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801cc86:	2b00      	cmp	r3, #0
 801cc88:	d039      	beq.n	801ccfe <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c2>
 801cc8a:	4a21      	ldr	r2, [pc, #132]	; (801cd10 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>)
 801cc8c:	f81e 1c03 	ldrb.w	r1, [lr, #-3]
 801cc90:	6810      	ldr	r0, [r2, #0]
 801cc92:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801cc94:	fa5f fc80 	uxtb.w	ip, r0
 801cc98:	4353      	muls	r3, r2
 801cc9a:	1c5a      	adds	r2, r3, #1
 801cc9c:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801cca0:	121b      	asrs	r3, r3, #8
 801cca2:	b29a      	uxth	r2, r3
 801cca4:	43db      	mvns	r3, r3
 801cca6:	fb1c fc02 	smulbb	ip, ip, r2
 801ccaa:	b2db      	uxtb	r3, r3
 801ccac:	fb01 c103 	mla	r1, r1, r3, ip
 801ccb0:	b289      	uxth	r1, r1
 801ccb2:	f101 0c01 	add.w	ip, r1, #1
 801ccb6:	eb0c 2111 	add.w	r1, ip, r1, lsr #8
 801ccba:	f81e cc02 	ldrb.w	ip, [lr, #-2]
 801ccbe:	fb1c fc03 	smulbb	ip, ip, r3
 801ccc2:	1209      	asrs	r1, r1, #8
 801ccc4:	f80e 1c03 	strb.w	r1, [lr, #-3]
 801ccc8:	f3c0 2107 	ubfx	r1, r0, #8, #8
 801cccc:	f3c0 4007 	ubfx	r0, r0, #16, #8
 801ccd0:	fb01 c102 	mla	r1, r1, r2, ip
 801ccd4:	b289      	uxth	r1, r1
 801ccd6:	f101 0c01 	add.w	ip, r1, #1
 801ccda:	eb0c 2111 	add.w	r1, ip, r1, lsr #8
 801ccde:	1209      	asrs	r1, r1, #8
 801cce0:	f80e 1c02 	strb.w	r1, [lr, #-2]
 801cce4:	f81e 1c01 	ldrb.w	r1, [lr, #-1]
 801cce8:	fb11 f303 	smulbb	r3, r1, r3
 801ccec:	fb00 3002 	mla	r0, r0, r2, r3
 801ccf0:	b280      	uxth	r0, r0
 801ccf2:	1c42      	adds	r2, r0, #1
 801ccf4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801ccf8:	1200      	asrs	r0, r0, #8
 801ccfa:	f80e 0c01 	strb.w	r0, [lr, #-1]
 801ccfe:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801cd00:	f10e 0e03 	add.w	lr, lr, #3
 801cd04:	f108 38ff 	add.w	r8, r8, #4294967295
 801cd08:	441d      	add	r5, r3
 801cd0a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801cd0c:	441e      	add	r6, r3
 801cd0e:	e6db      	b.n	801cac8 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801cd10:	2400e0dc 	.word	0x2400e0dc
 801cd14:	2800      	cmp	r0, #0
 801cd16:	d09a      	beq.n	801cc4e <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x412>
 801cd18:	444b      	add	r3, r9
 801cd1a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801cd1e:	07db      	lsls	r3, r3, #31
 801cd20:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801cd24:	bf54      	ite	pl
 801cd26:	f00c 0c0f 	andpl.w	ip, ip, #15
 801cd2a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801cd2e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801cd32:	fa5f f38c 	uxtb.w	r3, ip
 801cd36:	930b      	str	r3, [sp, #44]	; 0x2c
 801cd38:	e789      	b.n	801cc4e <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x412>
 801cd3a:	b017      	add	sp, #92	; 0x5c
 801cd3c:	ecbd 8b08 	vpop	{d8-d11}
 801cd40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801cd44 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh>:
 801cd44:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cd48:	e9dd 0c0c 	ldrd	r0, ip, [sp, #48]	; 0x30
 801cd4c:	f9bd 8028 	ldrsh.w	r8, [sp, #40]	; 0x28
 801cd50:	2800      	cmp	r0, #0
 801cd52:	f9bd 902c 	ldrsh.w	r9, [sp, #44]	; 0x2c
 801cd56:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 801cd5a:	fb0c 0e03 	mla	lr, ip, r3, r0
 801cd5e:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 801cd62:	db6b      	blt.n	801ce3c <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0xf8>
 801cd64:	4580      	cmp	r8, r0
 801cd66:	dd69      	ble.n	801ce3c <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0xf8>
 801cd68:	f1bc 0f00 	cmp.w	ip, #0
 801cd6c:	db66      	blt.n	801ce3c <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0xf8>
 801cd6e:	45e1      	cmp	r9, ip
 801cd70:	dd64      	ble.n	801ce3c <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0xf8>
 801cd72:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801cd76:	f01e 0f01 	tst.w	lr, #1
 801cd7a:	5d16      	ldrb	r6, [r2, r4]
 801cd7c:	bf0c      	ite	eq
 801cd7e:	f006 060f 	andeq.w	r6, r6, #15
 801cd82:	1136      	asrne	r6, r6, #4
 801cd84:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801cd88:	b2f6      	uxtb	r6, r6
 801cd8a:	f110 0a01 	adds.w	sl, r0, #1
 801cd8e:	d457      	bmi.n	801ce40 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0xfc>
 801cd90:	45d0      	cmp	r8, sl
 801cd92:	dd55      	ble.n	801ce40 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0xfc>
 801cd94:	f1bc 0f00 	cmp.w	ip, #0
 801cd98:	db52      	blt.n	801ce40 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0xfc>
 801cd9a:	45e1      	cmp	r9, ip
 801cd9c:	dd50      	ble.n	801ce40 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0xfc>
 801cd9e:	2f00      	cmp	r7, #0
 801cda0:	f000 80a5 	beq.w	801ceee <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x1aa>
 801cda4:	f10e 0b01 	add.w	fp, lr, #1
 801cda8:	ea4f 045b 	mov.w	r4, fp, lsr #1
 801cdac:	f01b 0f01 	tst.w	fp, #1
 801cdb0:	5d14      	ldrb	r4, [r2, r4]
 801cdb2:	bf0c      	ite	eq
 801cdb4:	f004 040f 	andeq.w	r4, r4, #15
 801cdb8:	1124      	asrne	r4, r4, #4
 801cdba:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801cdbe:	b2e4      	uxtb	r4, r4
 801cdc0:	2d00      	cmp	r5, #0
 801cdc2:	f000 808f 	beq.w	801cee4 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x1a0>
 801cdc6:	2800      	cmp	r0, #0
 801cdc8:	f10c 0c01 	add.w	ip, ip, #1
 801cdcc:	db3c      	blt.n	801ce48 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x104>
 801cdce:	4580      	cmp	r8, r0
 801cdd0:	dd3a      	ble.n	801ce48 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x104>
 801cdd2:	f1bc 0f00 	cmp.w	ip, #0
 801cdd6:	db37      	blt.n	801ce48 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x104>
 801cdd8:	45e1      	cmp	r9, ip
 801cdda:	dd35      	ble.n	801ce48 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x104>
 801cddc:	eb03 0b0e 	add.w	fp, r3, lr
 801cde0:	ea4f 005b 	mov.w	r0, fp, lsr #1
 801cde4:	f01b 0f01 	tst.w	fp, #1
 801cde8:	5c10      	ldrb	r0, [r2, r0]
 801cdea:	bf0c      	ite	eq
 801cdec:	f000 000f 	andeq.w	r0, r0, #15
 801cdf0:	1100      	asrne	r0, r0, #4
 801cdf2:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801cdf6:	b2c0      	uxtb	r0, r0
 801cdf8:	f1ba 0f00 	cmp.w	sl, #0
 801cdfc:	db26      	blt.n	801ce4c <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x108>
 801cdfe:	45d0      	cmp	r8, sl
 801ce00:	dd24      	ble.n	801ce4c <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x108>
 801ce02:	f1bc 0f00 	cmp.w	ip, #0
 801ce06:	db21      	blt.n	801ce4c <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x108>
 801ce08:	45e1      	cmp	r9, ip
 801ce0a:	dd1f      	ble.n	801ce4c <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x108>
 801ce0c:	b307      	cbz	r7, 801ce50 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x10c>
 801ce0e:	3301      	adds	r3, #1
 801ce10:	449e      	add	lr, r3
 801ce12:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801ce16:	f01e 0f01 	tst.w	lr, #1
 801ce1a:	5cd3      	ldrb	r3, [r2, r3]
 801ce1c:	bf0c      	ite	eq
 801ce1e:	f003 030f 	andeq.w	r3, r3, #15
 801ce22:	111b      	asrne	r3, r3, #4
 801ce24:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801ce28:	b2db      	uxtb	r3, r3
 801ce2a:	2f0f      	cmp	r7, #15
 801ce2c:	d911      	bls.n	801ce52 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x10e>
 801ce2e:	4b32      	ldr	r3, [pc, #200]	; (801cef8 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x1b4>)
 801ce30:	f240 115b 	movw	r1, #347	; 0x15b
 801ce34:	4a31      	ldr	r2, [pc, #196]	; (801cefc <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x1b8>)
 801ce36:	4832      	ldr	r0, [pc, #200]	; (801cf00 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x1bc>)
 801ce38:	f003 f8d2 	bl	801ffe0 <__assert_func>
 801ce3c:	2600      	movs	r6, #0
 801ce3e:	e7a4      	b.n	801cd8a <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x46>
 801ce40:	2400      	movs	r4, #0
 801ce42:	e7bd      	b.n	801cdc0 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x7c>
 801ce44:	463c      	mov	r4, r7
 801ce46:	e7be      	b.n	801cdc6 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x82>
 801ce48:	2000      	movs	r0, #0
 801ce4a:	e7d5      	b.n	801cdf8 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0xb4>
 801ce4c:	2300      	movs	r3, #0
 801ce4e:	e7ec      	b.n	801ce2a <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0xe6>
 801ce50:	463b      	mov	r3, r7
 801ce52:	2d0f      	cmp	r5, #15
 801ce54:	d8eb      	bhi.n	801ce2e <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0xea>
 801ce56:	b2bf      	uxth	r7, r7
 801ce58:	b2ad      	uxth	r5, r5
 801ce5a:	fb07 f205 	mul.w	r2, r7, r5
 801ce5e:	013f      	lsls	r7, r7, #4
 801ce60:	ebc2 1505 	rsb	r5, r2, r5, lsl #4
 801ce64:	f5c7 7c80 	rsb	ip, r7, #256	; 0x100
 801ce68:	1abf      	subs	r7, r7, r2
 801ce6a:	b2ad      	uxth	r5, r5
 801ce6c:	b2bf      	uxth	r7, r7
 801ce6e:	ebac 0c05 	sub.w	ip, ip, r5
 801ce72:	437c      	muls	r4, r7
 801ce74:	fa1f fc8c 	uxth.w	ip, ip
 801ce78:	fb06 440c 	mla	r4, r6, ip, r4
 801ce7c:	fb05 4400 	mla	r4, r5, r0, r4
 801ce80:	fb02 4303 	mla	r3, r2, r3, r4
 801ce84:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ce88:	b353      	cbz	r3, 801cee0 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x19c>
 801ce8a:	4a1e      	ldr	r2, [pc, #120]	; (801cf04 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x1c0>)
 801ce8c:	7808      	ldrb	r0, [r1, #0]
 801ce8e:	6814      	ldr	r4, [r2, #0]
 801ce90:	b29a      	uxth	r2, r3
 801ce92:	43db      	mvns	r3, r3
 801ce94:	b2e5      	uxtb	r5, r4
 801ce96:	b2db      	uxtb	r3, r3
 801ce98:	fb15 f502 	smulbb	r5, r5, r2
 801ce9c:	fb00 5003 	mla	r0, r0, r3, r5
 801cea0:	b280      	uxth	r0, r0
 801cea2:	1c45      	adds	r5, r0, #1
 801cea4:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801cea8:	784d      	ldrb	r5, [r1, #1]
 801ceaa:	fb15 f503 	smulbb	r5, r5, r3
 801ceae:	1200      	asrs	r0, r0, #8
 801ceb0:	7008      	strb	r0, [r1, #0]
 801ceb2:	f3c4 2007 	ubfx	r0, r4, #8, #8
 801ceb6:	f3c4 4407 	ubfx	r4, r4, #16, #8
 801ceba:	fb00 5002 	mla	r0, r0, r2, r5
 801cebe:	b280      	uxth	r0, r0
 801cec0:	1c45      	adds	r5, r0, #1
 801cec2:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801cec6:	1200      	asrs	r0, r0, #8
 801cec8:	7048      	strb	r0, [r1, #1]
 801ceca:	7888      	ldrb	r0, [r1, #2]
 801cecc:	fb10 f303 	smulbb	r3, r0, r3
 801ced0:	fb04 3202 	mla	r2, r4, r2, r3
 801ced4:	b292      	uxth	r2, r2
 801ced6:	1c53      	adds	r3, r2, #1
 801ced8:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801cedc:	1212      	asrs	r2, r2, #8
 801cede:	708a      	strb	r2, [r1, #2]
 801cee0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cee4:	2f0f      	cmp	r7, #15
 801cee6:	d8a2      	bhi.n	801ce2e <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0xea>
 801cee8:	462b      	mov	r3, r5
 801ceea:	4628      	mov	r0, r5
 801ceec:	e7b3      	b.n	801ce56 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x112>
 801ceee:	2d00      	cmp	r5, #0
 801cef0:	d1a8      	bne.n	801ce44 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x100>
 801cef2:	462c      	mov	r4, r5
 801cef4:	e7f8      	b.n	801cee8 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x1a4>
 801cef6:	bf00      	nop
 801cef8:	08025314 	.word	0x08025314
 801cefc:	0802572a 	.word	0x0802572a
 801cf00:	080252e1 	.word	0x080252e1
 801cf04:	2400e0dc 	.word	0x2400e0dc

0801cf08 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cf08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cf0c:	ed2d 8b08 	vpush	{d8-d11}
 801cf10:	b093      	sub	sp, #76	; 0x4c
 801cf12:	461c      	mov	r4, r3
 801cf14:	eeb0 aa40 	vmov.f32	s20, s0
 801cf18:	920c      	str	r2, [sp, #48]	; 0x30
 801cf1a:	eef0 9a60 	vmov.f32	s19, s1
 801cf1e:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801cf20:	eeb0 9a41 	vmov.f32	s18, s2
 801cf24:	9011      	str	r0, [sp, #68]	; 0x44
 801cf26:	eeb0 8a62 	vmov.f32	s16, s5
 801cf2a:	6850      	ldr	r0, [r2, #4]
 801cf2c:	eef0 8a43 	vmov.f32	s17, s6
 801cf30:	9107      	str	r1, [sp, #28]
 801cf32:	eef0 ba44 	vmov.f32	s23, s8
 801cf36:	6812      	ldr	r2, [r2, #0]
 801cf38:	eeb0 ba64 	vmov.f32	s22, s9
 801cf3c:	eef0 aa45 	vmov.f32	s21, s10
 801cf40:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801cf44:	e9dd 5625 	ldrd	r5, r6, [sp, #148]	; 0x94
 801cf48:	fb00 1303 	mla	r3, r0, r3, r1
 801cf4c:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801cf50:	eb02 0b03 	add.w	fp, r2, r3
 801cf54:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801cf56:	689b      	ldr	r3, [r3, #8]
 801cf58:	3301      	adds	r3, #1
 801cf5a:	f023 0301 	bic.w	r3, r3, #1
 801cf5e:	9309      	str	r3, [sp, #36]	; 0x24
 801cf60:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801cf62:	f8d3 8000 	ldr.w	r8, [r3]
 801cf66:	9b07      	ldr	r3, [sp, #28]
 801cf68:	2b00      	cmp	r3, #0
 801cf6a:	dc03      	bgt.n	801cf74 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801cf6c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801cf6e:	2b00      	cmp	r3, #0
 801cf70:	f340 822b 	ble.w	801d3ca <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c2>
 801cf74:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801cf76:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801cf7a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801cf7e:	1e48      	subs	r0, r1, #1
 801cf80:	1e57      	subs	r7, r2, #1
 801cf82:	2c00      	cmp	r4, #0
 801cf84:	f340 80d7 	ble.w	801d136 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801cf88:	ea5f 4c25 	movs.w	ip, r5, asr #16
 801cf8c:	ea4f 4326 	mov.w	r3, r6, asr #16
 801cf90:	d406      	bmi.n	801cfa0 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801cf92:	4584      	cmp	ip, r0
 801cf94:	da04      	bge.n	801cfa0 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801cf96:	2b00      	cmp	r3, #0
 801cf98:	db02      	blt.n	801cfa0 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801cf9a:	42bb      	cmp	r3, r7
 801cf9c:	f2c0 80cc 	blt.w	801d138 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801cfa0:	f11c 0c01 	adds.w	ip, ip, #1
 801cfa4:	f100 80bf 	bmi.w	801d126 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21e>
 801cfa8:	4561      	cmp	r1, ip
 801cfaa:	f2c0 80bc 	blt.w	801d126 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21e>
 801cfae:	3301      	adds	r3, #1
 801cfb0:	f100 80b9 	bmi.w	801d126 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21e>
 801cfb4:	429a      	cmp	r2, r3
 801cfb6:	f2c0 80b6 	blt.w	801d126 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21e>
 801cfba:	46a2      	mov	sl, r4
 801cfbc:	465f      	mov	r7, fp
 801cfbe:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801cfc2:	f1ba 0f00 	cmp.w	sl, #0
 801cfc6:	f340 80d4 	ble.w	801d172 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801cfca:	f3c5 3303 	ubfx	r3, r5, #12, #4
 801cfce:	1430      	asrs	r0, r6, #16
 801cfd0:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801cfd4:	9308      	str	r3, [sp, #32]
 801cfd6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801cfd8:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801cfdc:	142b      	asrs	r3, r5, #16
 801cfde:	f100 8124 	bmi.w	801d22a <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801cfe2:	f10c 32ff 	add.w	r2, ip, #4294967295
 801cfe6:	4293      	cmp	r3, r2
 801cfe8:	f280 811f 	bge.w	801d22a <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801cfec:	2800      	cmp	r0, #0
 801cfee:	f2c0 811c 	blt.w	801d22a <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801cff2:	f10e 32ff 	add.w	r2, lr, #4294967295
 801cff6:	4290      	cmp	r0, r2
 801cff8:	f280 8117 	bge.w	801d22a <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801cffc:	fb00 3309 	mla	r3, r0, r9, r3
 801d000:	0858      	lsrs	r0, r3, #1
 801d002:	07da      	lsls	r2, r3, #31
 801d004:	9a08      	ldr	r2, [sp, #32]
 801d006:	f818 c000 	ldrb.w	ip, [r8, r0]
 801d00a:	bf54      	ite	pl
 801d00c:	f00c 0c0f 	andpl.w	ip, ip, #15
 801d010:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801d014:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801d018:	fa5f fc8c 	uxtb.w	ip, ip
 801d01c:	2a00      	cmp	r2, #0
 801d01e:	f000 80ed 	beq.w	801d1fc <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801d022:	1c58      	adds	r0, r3, #1
 801d024:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801d028:	07c0      	lsls	r0, r0, #31
 801d02a:	f818 e00e 	ldrb.w	lr, [r8, lr]
 801d02e:	bf54      	ite	pl
 801d030:	f00e 0e0f 	andpl.w	lr, lr, #15
 801d034:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801d038:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801d03c:	fa5f fe8e 	uxtb.w	lr, lr
 801d040:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 801d044:	b1c9      	cbz	r1, 801d07a <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x172>
 801d046:	444b      	add	r3, r9
 801d048:	0858      	lsrs	r0, r3, #1
 801d04a:	07da      	lsls	r2, r3, #31
 801d04c:	f818 0000 	ldrb.w	r0, [r8, r0]
 801d050:	bf54      	ite	pl
 801d052:	f000 000f 	andpl.w	r0, r0, #15
 801d056:	1100      	asrmi	r0, r0, #4
 801d058:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801d05c:	b2c0      	uxtb	r0, r0
 801d05e:	900a      	str	r0, [sp, #40]	; 0x28
 801d060:	1c58      	adds	r0, r3, #1
 801d062:	0843      	lsrs	r3, r0, #1
 801d064:	07c2      	lsls	r2, r0, #31
 801d066:	f818 3003 	ldrb.w	r3, [r8, r3]
 801d06a:	bf54      	ite	pl
 801d06c:	f003 030f 	andpl.w	r3, r3, #15
 801d070:	111b      	asrmi	r3, r3, #4
 801d072:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801d076:	b2db      	uxtb	r3, r3
 801d078:	930e      	str	r3, [sp, #56]	; 0x38
 801d07a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801d07e:	b289      	uxth	r1, r1
 801d080:	fb02 f301 	mul.w	r3, r2, r1
 801d084:	0112      	lsls	r2, r2, #4
 801d086:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801d08a:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801d08e:	1ad2      	subs	r2, r2, r3
 801d090:	b289      	uxth	r1, r1
 801d092:	b292      	uxth	r2, r2
 801d094:	1a40      	subs	r0, r0, r1
 801d096:	fa1f fe80 	uxth.w	lr, r0
 801d09a:	980d      	ldr	r0, [sp, #52]	; 0x34
 801d09c:	4342      	muls	r2, r0
 801d09e:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801d0a2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801d0a4:	fb01 c102 	mla	r1, r1, r2, ip
 801d0a8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801d0aa:	fb03 1302 	mla	r3, r3, r2, r1
 801d0ae:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d0b2:	b383      	cbz	r3, 801d116 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801d0b4:	4ac7      	ldr	r2, [pc, #796]	; (801d3d4 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4cc>)
 801d0b6:	2bff      	cmp	r3, #255	; 0xff
 801d0b8:	6812      	ldr	r2, [r2, #0]
 801d0ba:	f3c2 4e07 	ubfx	lr, r2, #16, #8
 801d0be:	f3c2 2007 	ubfx	r0, r2, #8, #8
 801d0c2:	b2d2      	uxtb	r2, r2
 801d0c4:	f000 80ac 	beq.w	801d220 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801d0c8:	b299      	uxth	r1, r3
 801d0ca:	43db      	mvns	r3, r3
 801d0cc:	f897 c000 	ldrb.w	ip, [r7]
 801d0d0:	fb12 f201 	smulbb	r2, r2, r1
 801d0d4:	b2db      	uxtb	r3, r3
 801d0d6:	fb10 f001 	smulbb	r0, r0, r1
 801d0da:	fb0c 2203 	mla	r2, ip, r3, r2
 801d0de:	fb1e f101 	smulbb	r1, lr, r1
 801d0e2:	b292      	uxth	r2, r2
 801d0e4:	f102 0c01 	add.w	ip, r2, #1
 801d0e8:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801d0ec:	1212      	asrs	r2, r2, #8
 801d0ee:	703a      	strb	r2, [r7, #0]
 801d0f0:	787a      	ldrb	r2, [r7, #1]
 801d0f2:	fb02 0003 	mla	r0, r2, r3, r0
 801d0f6:	b280      	uxth	r0, r0
 801d0f8:	1c42      	adds	r2, r0, #1
 801d0fa:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801d0fe:	78ba      	ldrb	r2, [r7, #2]
 801d100:	fb02 1303 	mla	r3, r2, r3, r1
 801d104:	1200      	asrs	r0, r0, #8
 801d106:	b29b      	uxth	r3, r3
 801d108:	7078      	strb	r0, [r7, #1]
 801d10a:	f103 0e01 	add.w	lr, r3, #1
 801d10e:	eb0e 2313 	add.w	r3, lr, r3, lsr #8
 801d112:	121b      	asrs	r3, r3, #8
 801d114:	70bb      	strb	r3, [r7, #2]
 801d116:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801d118:	3703      	adds	r7, #3
 801d11a:	f10a 3aff 	add.w	sl, sl, #4294967295
 801d11e:	441d      	add	r5, r3
 801d120:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d122:	441e      	add	r6, r3
 801d124:	e74d      	b.n	801cfc2 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 801d126:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801d128:	3c01      	subs	r4, #1
 801d12a:	f10b 0b03 	add.w	fp, fp, #3
 801d12e:	441d      	add	r5, r3
 801d130:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d132:	441e      	add	r6, r3
 801d134:	e725      	b.n	801cf82 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801d136:	d021      	beq.n	801d17c <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801d138:	1e63      	subs	r3, r4, #1
 801d13a:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801d13c:	fb00 5003 	mla	r0, r0, r3, r5
 801d140:	1400      	asrs	r0, r0, #16
 801d142:	f53f af3a 	bmi.w	801cfba <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801d146:	3901      	subs	r1, #1
 801d148:	4288      	cmp	r0, r1
 801d14a:	f6bf af36 	bge.w	801cfba <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801d14e:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801d150:	fb01 6303 	mla	r3, r1, r3, r6
 801d154:	141b      	asrs	r3, r3, #16
 801d156:	f53f af30 	bmi.w	801cfba <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801d15a:	3a01      	subs	r2, #1
 801d15c:	4293      	cmp	r3, r2
 801d15e:	f6bf af2c 	bge.w	801cfba <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801d162:	f10b 0c03 	add.w	ip, fp, #3
 801d166:	46a6      	mov	lr, r4
 801d168:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801d16c:	f1be 0f00 	cmp.w	lr, #0
 801d170:	dc79      	bgt.n	801d266 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801d172:	ea24 74e4 	bic.w	r4, r4, r4, asr #31
 801d176:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801d17a:	44a3      	add	fp, r4
 801d17c:	9b07      	ldr	r3, [sp, #28]
 801d17e:	2b00      	cmp	r3, #0
 801d180:	f340 8123 	ble.w	801d3ca <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c2>
 801d184:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801d188:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d18a:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801d18e:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801d192:	eef0 6a48 	vmov.f32	s13, s16
 801d196:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801d19a:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801d19e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d1a2:	ee16 5a90 	vmov	r5, s13
 801d1a6:	eef0 6a68 	vmov.f32	s13, s17
 801d1aa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d1ae:	ee16 6a90 	vmov	r6, s13
 801d1b2:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801d1b6:	ee69 7a27 	vmul.f32	s15, s18, s15
 801d1ba:	ee37 8a48 	vsub.f32	s16, s14, s16
 801d1be:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801d1c2:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801d1c6:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801d1ca:	ee18 2a10 	vmov	r2, s16
 801d1ce:	eeb0 8a47 	vmov.f32	s16, s14
 801d1d2:	fb92 f3f3 	sdiv	r3, r2, r3
 801d1d6:	ee18 2a90 	vmov	r2, s17
 801d1da:	9327      	str	r3, [sp, #156]	; 0x9c
 801d1dc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d1de:	eef0 8a67 	vmov.f32	s17, s15
 801d1e2:	fb92 f3f3 	sdiv	r3, r2, r3
 801d1e6:	9328      	str	r3, [sp, #160]	; 0xa0
 801d1e8:	9b07      	ldr	r3, [sp, #28]
 801d1ea:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801d1ec:	3b01      	subs	r3, #1
 801d1ee:	9307      	str	r3, [sp, #28]
 801d1f0:	bf08      	it	eq
 801d1f2:	4614      	moveq	r4, r2
 801d1f4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d1f6:	bf18      	it	ne
 801d1f8:	461c      	movne	r4, r3
 801d1fa:	e6b4      	b.n	801cf66 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801d1fc:	2900      	cmp	r1, #0
 801d1fe:	f43f af3c 	beq.w	801d07a <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x172>
 801d202:	eb09 0003 	add.w	r0, r9, r3
 801d206:	0843      	lsrs	r3, r0, #1
 801d208:	07c0      	lsls	r0, r0, #31
 801d20a:	f818 3003 	ldrb.w	r3, [r8, r3]
 801d20e:	bf54      	ite	pl
 801d210:	f003 030f 	andpl.w	r3, r3, #15
 801d214:	111b      	asrmi	r3, r3, #4
 801d216:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801d21a:	b2db      	uxtb	r3, r3
 801d21c:	930a      	str	r3, [sp, #40]	; 0x28
 801d21e:	e72c      	b.n	801d07a <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x172>
 801d220:	703a      	strb	r2, [r7, #0]
 801d222:	7078      	strb	r0, [r7, #1]
 801d224:	f887 e002 	strb.w	lr, [r7, #2]
 801d228:	e775      	b.n	801d116 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801d22a:	1c5a      	adds	r2, r3, #1
 801d22c:	f53f af73 	bmi.w	801d116 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801d230:	4594      	cmp	ip, r2
 801d232:	f6ff af70 	blt.w	801d116 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801d236:	1c42      	adds	r2, r0, #1
 801d238:	f53f af6d 	bmi.w	801d116 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801d23c:	4596      	cmp	lr, r2
 801d23e:	f6ff af6a 	blt.w	801d116 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801d242:	9302      	str	r3, [sp, #8]
 801d244:	fa0f f38e 	sxth.w	r3, lr
 801d248:	9a08      	ldr	r2, [sp, #32]
 801d24a:	9301      	str	r3, [sp, #4]
 801d24c:	fa0f f38c 	sxth.w	r3, ip
 801d250:	9105      	str	r1, [sp, #20]
 801d252:	4639      	mov	r1, r7
 801d254:	9300      	str	r3, [sp, #0]
 801d256:	464b      	mov	r3, r9
 801d258:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801d25c:	4642      	mov	r2, r8
 801d25e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d260:	f7ff fd70 	bl	801cd44 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh>
 801d264:	e757      	b.n	801d116 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801d266:	142a      	asrs	r2, r5, #16
 801d268:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801d26c:	1433      	asrs	r3, r6, #16
 801d26e:	f3c6 3703 	ubfx	r7, r6, #12, #4
 801d272:	fb09 2303 	mla	r3, r9, r3, r2
 801d276:	085a      	lsrs	r2, r3, #1
 801d278:	07d9      	lsls	r1, r3, #31
 801d27a:	f818 2002 	ldrb.w	r2, [r8, r2]
 801d27e:	bf54      	ite	pl
 801d280:	f002 020f 	andpl.w	r2, r2, #15
 801d284:	1112      	asrmi	r2, r2, #4
 801d286:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801d28a:	b2d2      	uxtb	r2, r2
 801d28c:	2800      	cmp	r0, #0
 801d28e:	f000 8085 	beq.w	801d39c <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801d292:	f103 0a01 	add.w	sl, r3, #1
 801d296:	ea4f 015a 	mov.w	r1, sl, lsr #1
 801d29a:	f01a 0f01 	tst.w	sl, #1
 801d29e:	f818 1001 	ldrb.w	r1, [r8, r1]
 801d2a2:	bf0c      	ite	eq
 801d2a4:	f001 010f 	andeq.w	r1, r1, #15
 801d2a8:	1109      	asrne	r1, r1, #4
 801d2aa:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801d2ae:	b2c9      	uxtb	r1, r1
 801d2b0:	910f      	str	r1, [sp, #60]	; 0x3c
 801d2b2:	b1df      	cbz	r7, 801d2ec <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 801d2b4:	444b      	add	r3, r9
 801d2b6:	0859      	lsrs	r1, r3, #1
 801d2b8:	f013 0f01 	tst.w	r3, #1
 801d2bc:	f103 0301 	add.w	r3, r3, #1
 801d2c0:	f818 1001 	ldrb.w	r1, [r8, r1]
 801d2c4:	bf0c      	ite	eq
 801d2c6:	f001 010f 	andeq.w	r1, r1, #15
 801d2ca:	1109      	asrne	r1, r1, #4
 801d2cc:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801d2d0:	b2c9      	uxtb	r1, r1
 801d2d2:	910b      	str	r1, [sp, #44]	; 0x2c
 801d2d4:	0859      	lsrs	r1, r3, #1
 801d2d6:	07db      	lsls	r3, r3, #31
 801d2d8:	f818 1001 	ldrb.w	r1, [r8, r1]
 801d2dc:	bf54      	ite	pl
 801d2de:	f001 010f 	andpl.w	r1, r1, #15
 801d2e2:	1109      	asrmi	r1, r1, #4
 801d2e4:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801d2e8:	b2c9      	uxtb	r1, r1
 801d2ea:	9110      	str	r1, [sp, #64]	; 0x40
 801d2ec:	b280      	uxth	r0, r0
 801d2ee:	b2bf      	uxth	r7, r7
 801d2f0:	fb00 f307 	mul.w	r3, r0, r7
 801d2f4:	0100      	lsls	r0, r0, #4
 801d2f6:	ebc3 1707 	rsb	r7, r3, r7, lsl #4
 801d2fa:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 801d2fe:	1ac0      	subs	r0, r0, r3
 801d300:	b2bf      	uxth	r7, r7
 801d302:	b280      	uxth	r0, r0
 801d304:	1bc9      	subs	r1, r1, r7
 801d306:	fa1f fa81 	uxth.w	sl, r1
 801d30a:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801d30c:	4348      	muls	r0, r1
 801d30e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801d310:	fb02 020a 	mla	r2, r2, sl, r0
 801d314:	fb07 2701 	mla	r7, r7, r1, r2
 801d318:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d31a:	fb03 7302 	mla	r3, r3, r2, r7
 801d31e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d322:	b393      	cbz	r3, 801d38a <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x482>
 801d324:	4a2b      	ldr	r2, [pc, #172]	; (801d3d4 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4cc>)
 801d326:	2bff      	cmp	r3, #255	; 0xff
 801d328:	6811      	ldr	r1, [r2, #0]
 801d32a:	f3c1 4a07 	ubfx	sl, r1, #16, #8
 801d32e:	f3c1 2707 	ubfx	r7, r1, #8, #8
 801d332:	b2c9      	uxtb	r1, r1
 801d334:	d042      	beq.n	801d3bc <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801d336:	b298      	uxth	r0, r3
 801d338:	43db      	mvns	r3, r3
 801d33a:	f81c 2c03 	ldrb.w	r2, [ip, #-3]
 801d33e:	fb11 f100 	smulbb	r1, r1, r0
 801d342:	b2db      	uxtb	r3, r3
 801d344:	fb17 f700 	smulbb	r7, r7, r0
 801d348:	fb02 1103 	mla	r1, r2, r3, r1
 801d34c:	fb1a f000 	smulbb	r0, sl, r0
 801d350:	b289      	uxth	r1, r1
 801d352:	1c4a      	adds	r2, r1, #1
 801d354:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801d358:	f81c 2c02 	ldrb.w	r2, [ip, #-2]
 801d35c:	fb02 7703 	mla	r7, r2, r3, r7
 801d360:	1209      	asrs	r1, r1, #8
 801d362:	b2bf      	uxth	r7, r7
 801d364:	f80c 1c03 	strb.w	r1, [ip, #-3]
 801d368:	1c7a      	adds	r2, r7, #1
 801d36a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801d36e:	f81c 2c01 	ldrb.w	r2, [ip, #-1]
 801d372:	fb02 0303 	mla	r3, r2, r3, r0
 801d376:	123f      	asrs	r7, r7, #8
 801d378:	b29b      	uxth	r3, r3
 801d37a:	f80c 7c02 	strb.w	r7, [ip, #-2]
 801d37e:	1c5a      	adds	r2, r3, #1
 801d380:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801d384:	121b      	asrs	r3, r3, #8
 801d386:	f80c 3c01 	strb.w	r3, [ip, #-1]
 801d38a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801d38c:	f10c 0c03 	add.w	ip, ip, #3
 801d390:	f10e 3eff 	add.w	lr, lr, #4294967295
 801d394:	441d      	add	r5, r3
 801d396:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d398:	441e      	add	r6, r3
 801d39a:	e6e7      	b.n	801d16c <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 801d39c:	2f00      	cmp	r7, #0
 801d39e:	d0a5      	beq.n	801d2ec <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 801d3a0:	444b      	add	r3, r9
 801d3a2:	0859      	lsrs	r1, r3, #1
 801d3a4:	07db      	lsls	r3, r3, #31
 801d3a6:	f818 1001 	ldrb.w	r1, [r8, r1]
 801d3aa:	bf54      	ite	pl
 801d3ac:	f001 010f 	andpl.w	r1, r1, #15
 801d3b0:	1109      	asrmi	r1, r1, #4
 801d3b2:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801d3b6:	b2c9      	uxtb	r1, r1
 801d3b8:	910b      	str	r1, [sp, #44]	; 0x2c
 801d3ba:	e797      	b.n	801d2ec <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 801d3bc:	f80c 1c03 	strb.w	r1, [ip, #-3]
 801d3c0:	f80c 7c02 	strb.w	r7, [ip, #-2]
 801d3c4:	f80c ac01 	strb.w	sl, [ip, #-1]
 801d3c8:	e7df      	b.n	801d38a <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x482>
 801d3ca:	b013      	add	sp, #76	; 0x4c
 801d3cc:	ecbd 8b08 	vpop	{d8-d11}
 801d3d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d3d4:	2400e0dc 	.word	0x2400e0dc

0801d3d8 <CRC_Lock>:
 801d3d8:	4a20      	ldr	r2, [pc, #128]	; (801d45c <CRC_Lock+0x84>)
 801d3da:	b530      	push	{r4, r5, lr}
 801d3dc:	6813      	ldr	r3, [r2, #0]
 801d3de:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 801d3e2:	f24c 2540 	movw	r5, #49728	; 0xc240
 801d3e6:	f023 0301 	bic.w	r3, r3, #1
 801d3ea:	6013      	str	r3, [r2, #0]
 801d3ec:	4b1c      	ldr	r3, [pc, #112]	; (801d460 <CRC_Lock+0x88>)
 801d3ee:	681a      	ldr	r2, [r3, #0]
 801d3f0:	4022      	ands	r2, r4
 801d3f2:	42aa      	cmp	r2, r5
 801d3f4:	d005      	beq.n	801d402 <CRC_Lock+0x2a>
 801d3f6:	681b      	ldr	r3, [r3, #0]
 801d3f8:	f24c 2270 	movw	r2, #49776	; 0xc270
 801d3fc:	4023      	ands	r3, r4
 801d3fe:	4293      	cmp	r3, r2
 801d400:	d124      	bne.n	801d44c <CRC_Lock+0x74>
 801d402:	4b18      	ldr	r3, [pc, #96]	; (801d464 <CRC_Lock+0x8c>)
 801d404:	681b      	ldr	r3, [r3, #0]
 801d406:	bb0b      	cbnz	r3, 801d44c <CRC_Lock+0x74>
 801d408:	4b17      	ldr	r3, [pc, #92]	; (801d468 <CRC_Lock+0x90>)
 801d40a:	681a      	ldr	r2, [r3, #0]
 801d40c:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801d410:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 801d414:	d00d      	beq.n	801d432 <CRC_Lock+0x5a>
 801d416:	681a      	ldr	r2, [r3, #0]
 801d418:	f240 4483 	movw	r4, #1155	; 0x483
 801d41c:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801d420:	42a2      	cmp	r2, r4
 801d422:	d006      	beq.n	801d432 <CRC_Lock+0x5a>
 801d424:	681b      	ldr	r3, [r3, #0]
 801d426:	f240 4285 	movw	r2, #1157	; 0x485
 801d42a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801d42e:	4293      	cmp	r3, r2
 801d430:	d10c      	bne.n	801d44c <CRC_Lock+0x74>
 801d432:	4b0e      	ldr	r3, [pc, #56]	; (801d46c <CRC_Lock+0x94>)
 801d434:	2201      	movs	r2, #1
 801d436:	601a      	str	r2, [r3, #0]
 801d438:	681a      	ldr	r2, [r3, #0]
 801d43a:	2a00      	cmp	r2, #0
 801d43c:	d1fc      	bne.n	801d438 <CRC_Lock+0x60>
 801d43e:	4b0c      	ldr	r3, [pc, #48]	; (801d470 <CRC_Lock+0x98>)
 801d440:	6018      	str	r0, [r3, #0]
 801d442:	6818      	ldr	r0, [r3, #0]
 801d444:	1a43      	subs	r3, r0, r1
 801d446:	4258      	negs	r0, r3
 801d448:	4158      	adcs	r0, r3
 801d44a:	bd30      	pop	{r4, r5, pc}
 801d44c:	4b09      	ldr	r3, [pc, #36]	; (801d474 <CRC_Lock+0x9c>)
 801d44e:	2201      	movs	r2, #1
 801d450:	601a      	str	r2, [r3, #0]
 801d452:	681a      	ldr	r2, [r3, #0]
 801d454:	2a00      	cmp	r2, #0
 801d456:	d1fc      	bne.n	801d452 <CRC_Lock+0x7a>
 801d458:	4b07      	ldr	r3, [pc, #28]	; (801d478 <CRC_Lock+0xa0>)
 801d45a:	e7f1      	b.n	801d440 <CRC_Lock+0x68>
 801d45c:	e0002000 	.word	0xe0002000
 801d460:	e000ed00 	.word	0xe000ed00
 801d464:	e0042000 	.word	0xe0042000
 801d468:	5c001000 	.word	0x5c001000
 801d46c:	58024c08 	.word	0x58024c08
 801d470:	58024c00 	.word	0x58024c00
 801d474:	40023008 	.word	0x40023008
 801d478:	40023000 	.word	0x40023000

0801d47c <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801d47c:	6101      	str	r1, [r0, #16]
 801d47e:	4770      	bx	lr

0801d480 <_ZN8touchgfx8Gestures4tickEv>:
 801d480:	7b83      	ldrb	r3, [r0, #14]
 801d482:	b14b      	cbz	r3, 801d498 <_ZN8touchgfx8Gestures4tickEv+0x18>
 801d484:	8903      	ldrh	r3, [r0, #8]
 801d486:	3301      	adds	r3, #1
 801d488:	b29b      	uxth	r3, r3
 801d48a:	2b07      	cmp	r3, #7
 801d48c:	8103      	strh	r3, [r0, #8]
 801d48e:	bf81      	itttt	hi
 801d490:	2300      	movhi	r3, #0
 801d492:	8143      	strhhi	r3, [r0, #10]
 801d494:	8183      	strhhi	r3, [r0, #12]
 801d496:	7383      	strbhi	r3, [r0, #14]
 801d498:	4770      	bx	lr
	...

0801d49c <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801d49c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801d4a0:	4698      	mov	r8, r3
 801d4a2:	8883      	ldrh	r3, [r0, #4]
 801d4a4:	4604      	mov	r4, r0
 801d4a6:	4617      	mov	r7, r2
 801d4a8:	f8ad 3006 	strh.w	r3, [sp, #6]
 801d4ac:	eba8 0303 	sub.w	r3, r8, r3
 801d4b0:	4a19      	ldr	r2, [pc, #100]	; (801d518 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 801d4b2:	460e      	mov	r6, r1
 801d4b4:	b21b      	sxth	r3, r3
 801d4b6:	88c1      	ldrh	r1, [r0, #6]
 801d4b8:	9200      	str	r2, [sp, #0]
 801d4ba:	2000      	movs	r0, #0
 801d4bc:	2b00      	cmp	r3, #0
 801d4be:	8aa2      	ldrh	r2, [r4, #20]
 801d4c0:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 801d4c4:	bfb8      	it	lt
 801d4c6:	425b      	neglt	r3, r3
 801d4c8:	f88d 0004 	strb.w	r0, [sp, #4]
 801d4cc:	f8ad 1008 	strh.w	r1, [sp, #8]
 801d4d0:	b21b      	sxth	r3, r3
 801d4d2:	f8ad 800a 	strh.w	r8, [sp, #10]
 801d4d6:	f8ad 500c 	strh.w	r5, [sp, #12]
 801d4da:	4293      	cmp	r3, r2
 801d4dc:	dc07      	bgt.n	801d4ee <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
 801d4de:	1a69      	subs	r1, r5, r1
 801d4e0:	b209      	sxth	r1, r1
 801d4e2:	2900      	cmp	r1, #0
 801d4e4:	bfb8      	it	lt
 801d4e6:	4249      	neglt	r1, r1
 801d4e8:	b209      	sxth	r1, r1
 801d4ea:	428a      	cmp	r2, r1
 801d4ec:	da10      	bge.n	801d510 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
 801d4ee:	6920      	ldr	r0, [r4, #16]
 801d4f0:	4669      	mov	r1, sp
 801d4f2:	eba8 0606 	sub.w	r6, r8, r6
 801d4f6:	1bef      	subs	r7, r5, r7
 801d4f8:	6803      	ldr	r3, [r0, #0]
 801d4fa:	685b      	ldr	r3, [r3, #4]
 801d4fc:	4798      	blx	r3
 801d4fe:	2300      	movs	r3, #0
 801d500:	2001      	movs	r0, #1
 801d502:	8166      	strh	r6, [r4, #10]
 801d504:	8123      	strh	r3, [r4, #8]
 801d506:	81a7      	strh	r7, [r4, #12]
 801d508:	f8a4 8004 	strh.w	r8, [r4, #4]
 801d50c:	80e5      	strh	r5, [r4, #6]
 801d50e:	73a0      	strb	r0, [r4, #14]
 801d510:	b004      	add	sp, #16
 801d512:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801d516:	bf00      	nop
 801d518:	08024724 	.word	0x08024724

0801d51c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801d51c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801d51e:	461e      	mov	r6, r3
 801d520:	1e4b      	subs	r3, r1, #1
 801d522:	b085      	sub	sp, #20
 801d524:	4604      	mov	r4, r0
 801d526:	2b01      	cmp	r3, #1
 801d528:	460d      	mov	r5, r1
 801d52a:	4617      	mov	r7, r2
 801d52c:	d84b      	bhi.n	801d5c6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801d52e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801d532:	1cd3      	adds	r3, r2, #3
 801d534:	b29b      	uxth	r3, r3
 801d536:	2b06      	cmp	r3, #6
 801d538:	d916      	bls.n	801d568 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801d53a:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 801d5dc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801d53e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801d542:	f8cd c004 	str.w	ip, [sp, #4]
 801d546:	f04f 0c00 	mov.w	ip, #0
 801d54a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801d54e:	6900      	ldr	r0, [r0, #16]
 801d550:	f8ad 100c 	strh.w	r1, [sp, #12]
 801d554:	a901      	add	r1, sp, #4
 801d556:	f88d c008 	strb.w	ip, [sp, #8]
 801d55a:	f8ad 200a 	strh.w	r2, [sp, #10]
 801d55e:	f8ad 300e 	strh.w	r3, [sp, #14]
 801d562:	6803      	ldr	r3, [r0, #0]
 801d564:	689b      	ldr	r3, [r3, #8]
 801d566:	4798      	blx	r3
 801d568:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801d56c:	1cd3      	adds	r3, r2, #3
 801d56e:	b29b      	uxth	r3, r3
 801d570:	2b06      	cmp	r3, #6
 801d572:	d916      	bls.n	801d5a2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801d574:	f8df c064 	ldr.w	ip, [pc, #100]	; 801d5dc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801d578:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801d57c:	f8cd c004 	str.w	ip, [sp, #4]
 801d580:	f04f 0c01 	mov.w	ip, #1
 801d584:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801d588:	6920      	ldr	r0, [r4, #16]
 801d58a:	f8ad 100c 	strh.w	r1, [sp, #12]
 801d58e:	a901      	add	r1, sp, #4
 801d590:	f88d c008 	strb.w	ip, [sp, #8]
 801d594:	f8ad 200a 	strh.w	r2, [sp, #10]
 801d598:	f8ad 300e 	strh.w	r3, [sp, #14]
 801d59c:	6803      	ldr	r3, [r0, #0]
 801d59e:	689b      	ldr	r3, [r3, #8]
 801d5a0:	4798      	blx	r3
 801d5a2:	4b0d      	ldr	r3, [pc, #52]	; (801d5d8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 801d5a4:	a901      	add	r1, sp, #4
 801d5a6:	6920      	ldr	r0, [r4, #16]
 801d5a8:	9301      	str	r3, [sp, #4]
 801d5aa:	2300      	movs	r3, #0
 801d5ac:	f88d 5008 	strb.w	r5, [sp, #8]
 801d5b0:	f8ad 700a 	strh.w	r7, [sp, #10]
 801d5b4:	f8ad 600c 	strh.w	r6, [sp, #12]
 801d5b8:	f8ad 300e 	strh.w	r3, [sp, #14]
 801d5bc:	6803      	ldr	r3, [r0, #0]
 801d5be:	681b      	ldr	r3, [r3, #0]
 801d5c0:	4798      	blx	r3
 801d5c2:	b005      	add	sp, #20
 801d5c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801d5c6:	2900      	cmp	r1, #0
 801d5c8:	d1eb      	bne.n	801d5a2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801d5ca:	80a2      	strh	r2, [r4, #4]
 801d5cc:	80c6      	strh	r6, [r0, #6]
 801d5ce:	60a1      	str	r1, [r4, #8]
 801d5d0:	81a1      	strh	r1, [r4, #12]
 801d5d2:	73a1      	strb	r1, [r4, #14]
 801d5d4:	e7e5      	b.n	801d5a2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801d5d6:	bf00      	nop
 801d5d8:	08024710 	.word	0x08024710
 801d5dc:	08024738 	.word	0x08024738

0801d5e0 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.14>:
 801d5e0:	10c9      	asrs	r1, r1, #3
 801d5e2:	2900      	cmp	r1, #0
 801d5e4:	bfb8      	it	lt
 801d5e6:	4249      	neglt	r1, r1
 801d5e8:	2801      	cmp	r0, #1
 801d5ea:	d108      	bne.n	801d5fe <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.14+0x1e>
 801d5ec:	f3c1 0008 	ubfx	r0, r1, #0, #9
 801d5f0:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 801d5f4:	4601      	mov	r1, r0
 801d5f6:	dd02      	ble.n	801d5fe <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.14+0x1e>
 801d5f8:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 801d5fc:	4770      	bx	lr
 801d5fe:	29ff      	cmp	r1, #255	; 0xff
 801d600:	bfa8      	it	ge
 801d602:	21ff      	movge	r1, #255	; 0xff
 801d604:	4608      	mov	r0, r1
 801d606:	4770      	bx	lr

0801d608 <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE>:
 801d608:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d60c:	688c      	ldr	r4, [r1, #8]
 801d60e:	b087      	sub	sp, #28
 801d610:	4607      	mov	r7, r0
 801d612:	2c00      	cmp	r4, #0
 801d614:	db2b      	blt.n	801d66e <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE+0x66>
 801d616:	6803      	ldr	r3, [r0, #0]
 801d618:	691a      	ldr	r2, [r3, #16]
 801d61a:	42a2      	cmp	r2, r4
 801d61c:	dd27      	ble.n	801d66e <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE+0x66>
 801d61e:	685a      	ldr	r2, [r3, #4]
 801d620:	695e      	ldr	r6, [r3, #20]
 801d622:	68cd      	ldr	r5, [r1, #12]
 801d624:	fb06 2604 	mla	r6, r6, r4, r2
 801d628:	f8d1 901c 	ldr.w	r9, [r1, #28]
 801d62c:	698a      	ldr	r2, [r1, #24]
 801d62e:	f893 a008 	ldrb.w	sl, [r3, #8]
 801d632:	f8d1 8020 	ldr.w	r8, [r1, #32]
 801d636:	9205      	str	r2, [sp, #20]
 801d638:	f839 2f02 	ldrh.w	r2, [r9, #2]!
 801d63c:	9b05      	ldr	r3, [sp, #20]
 801d63e:	6839      	ldr	r1, [r7, #0]
 801d640:	eb03 0c02 	add.w	ip, r3, r2
 801d644:	f838 3f02 	ldrh.w	r3, [r8, #2]!
 801d648:	68c9      	ldr	r1, [r1, #12]
 801d64a:	1898      	adds	r0, r3, r2
 801d64c:	4288      	cmp	r0, r1
 801d64e:	db02      	blt.n	801d656 <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE+0x4e>
 801d650:	1a8b      	subs	r3, r1, r2
 801d652:	2b00      	cmp	r3, #0
 801d654:	dd09      	ble.n	801d66a <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE+0x62>
 801d656:	6878      	ldr	r0, [r7, #4]
 801d658:	6801      	ldr	r1, [r0, #0]
 801d65a:	9400      	str	r4, [sp, #0]
 801d65c:	e9cd 3c01 	strd	r3, ip, [sp, #4]
 801d660:	4653      	mov	r3, sl
 801d662:	f8d1 b008 	ldr.w	fp, [r1, #8]
 801d666:	4631      	mov	r1, r6
 801d668:	47d8      	blx	fp
 801d66a:	3d01      	subs	r5, #1
 801d66c:	d1e4      	bne.n	801d638 <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE+0x30>
 801d66e:	b007      	add	sp, #28
 801d670:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d674 <_ZN8touchgfx10Rasterizer6lineToEii>:
 801d674:	f890 3044 	ldrb.w	r3, [r0, #68]	; 0x44
 801d678:	b90b      	cbnz	r3, 801d67e <_ZN8touchgfx10Rasterizer6lineToEii+0xa>
 801d67a:	f001 bf29 	b.w	801f4d0 <_ZN8touchgfx7Outline6lineToEii>
 801d67e:	4770      	bx	lr

0801d680 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 801d680:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801d684:	4604      	mov	r4, r0
 801d686:	2600      	movs	r6, #0
 801d688:	4b8f      	ldr	r3, [pc, #572]	; (801d8c8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x248>)
 801d68a:	f100 0518 	add.w	r5, r0, #24
 801d68e:	f104 0730 	add.w	r7, r4, #48	; 0x30
 801d692:	b086      	sub	sp, #24
 801d694:	4690      	mov	r8, r2
 801d696:	e9c0 3100 	strd	r3, r1, [r0]
 801d69a:	e9c0 6602 	strd	r6, r6, [r0, #8]
 801d69e:	e9c0 6604 	strd	r6, r6, [r0, #16]
 801d6a2:	4628      	mov	r0, r5
 801d6a4:	f002 f938 	bl	801f918 <_ZN8touchgfx15RenderingBufferC1Ev>
 801d6a8:	4638      	mov	r0, r7
 801d6aa:	f001 f8dd 	bl	801e868 <_ZN8touchgfx7OutlineC1Ev>
 801d6ae:	f104 0078 	add.w	r0, r4, #120	; 0x78
 801d6b2:	f002 f8d9 	bl	801f868 <_ZN8touchgfx8ScanlineC1Ev>
 801d6b6:	2301      	movs	r3, #1
 801d6b8:	f884 609c 	strb.w	r6, [r4, #156]	; 0x9c
 801d6bc:	f8c4 60a0 	str.w	r6, [r4, #160]	; 0xa0
 801d6c0:	f884 60a4 	strb.w	r6, [r4, #164]	; 0xa4
 801d6c4:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 801d6c8:	f884 60a6 	strb.w	r6, [r4, #166]	; 0xa6
 801d6cc:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 801d6d0:	e9c4 662a 	strd	r6, r6, [r4, #168]	; 0xa8
 801d6d4:	e9c4 662d 	strd	r6, r6, [r4, #180]	; 0xb4
 801d6d8:	f7f2 fc84 	bl	800ffe4 <_ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv>
 801d6dc:	b928      	cbnz	r0, 801d6ea <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x6a>
 801d6de:	4b7b      	ldr	r3, [pc, #492]	; (801d8cc <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x24c>)
 801d6e0:	212a      	movs	r1, #42	; 0x2a
 801d6e2:	4a7b      	ldr	r2, [pc, #492]	; (801d8d0 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x250>)
 801d6e4:	487b      	ldr	r0, [pc, #492]	; (801d8d4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x254>)
 801d6e6:	f002 fc7b 	bl	801ffe0 <__assert_func>
 801d6ea:	f9b8 2000 	ldrsh.w	r2, [r8]
 801d6ee:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 801d6f2:	f8d4 c004 	ldr.w	ip, [r4, #4]
 801d6f6:	4410      	add	r0, r2
 801d6f8:	9602      	str	r6, [sp, #8]
 801d6fa:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 801d6fe:	b280      	uxth	r0, r0
 801d700:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 801d704:	fa0f fa80 	sxth.w	sl, r0
 801d708:	f1ba 0f00 	cmp.w	sl, #0
 801d70c:	dd70      	ble.n	801d7f0 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x170>
 801d70e:	4591      	cmp	r9, r2
 801d710:	dd6e      	ble.n	801d7f0 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x170>
 801d712:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 801d716:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 801d71a:	440b      	add	r3, r1
 801d71c:	b29b      	uxth	r3, r3
 801d71e:	b21e      	sxth	r6, r3
 801d720:	2e00      	cmp	r6, #0
 801d722:	dd65      	ble.n	801d7f0 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x170>
 801d724:	458e      	cmp	lr, r1
 801d726:	dd63      	ble.n	801d7f0 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x170>
 801d728:	45d1      	cmp	r9, sl
 801d72a:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 801d72e:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 801d732:	bfb8      	it	lt
 801d734:	fa1f f089 	uxthlt.w	r0, r9
 801d738:	45b6      	cmp	lr, r6
 801d73a:	f8ad 2008 	strh.w	r2, [sp, #8]
 801d73e:	bfb8      	it	lt
 801d740:	fa1f f38e 	uxthlt.w	r3, lr
 801d744:	1a80      	subs	r0, r0, r2
 801d746:	f8ad 100a 	strh.w	r1, [sp, #10]
 801d74a:	1a5b      	subs	r3, r3, r1
 801d74c:	f8ad 000c 	strh.w	r0, [sp, #12]
 801d750:	f8ad 300e 	strh.w	r3, [sp, #14]
 801d754:	f10d 0808 	add.w	r8, sp, #8
 801d758:	ae04      	add	r6, sp, #16
 801d75a:	e898 0003 	ldmia.w	r8, {r0, r1}
 801d75e:	e886 0003 	stmia.w	r6, {r0, r1}
 801d762:	f8dc 3000 	ldr.w	r3, [ip]
 801d766:	4660      	mov	r0, ip
 801d768:	4631      	mov	r1, r6
 801d76a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d76c:	4798      	blx	r3
 801d76e:	6861      	ldr	r1, [r4, #4]
 801d770:	4640      	mov	r0, r8
 801d772:	3104      	adds	r1, #4
 801d774:	f7f3 ff8a 	bl	801168c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d778:	4630      	mov	r0, r6
 801d77a:	f7f3 ff43 	bl	8011604 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d77e:	f9bd 000c 	ldrsh.w	r0, [sp, #12]
 801d782:	f7f2 fbbf 	bl	800ff04 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj>
 801d786:	f884 00a4 	strb.w	r0, [r4, #164]	; 0xa4
 801d78a:	4638      	mov	r0, r7
 801d78c:	f001 f848 	bl	801e820 <_ZN8touchgfx7Outline5resetEv>
 801d790:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801d794:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801d798:	f8a4 30a2 	strh.w	r3, [r4, #162]	; 0xa2
 801d79c:	015b      	lsls	r3, r3, #5
 801d79e:	f8a4 20a0 	strh.w	r2, [r4, #160]	; 0xa0
 801d7a2:	0152      	lsls	r2, r2, #5
 801d7a4:	60e3      	str	r3, [r4, #12]
 801d7a6:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801d7aa:	60a2      	str	r2, [r4, #8]
 801d7ac:	015b      	lsls	r3, r3, #5
 801d7ae:	6123      	str	r3, [r4, #16]
 801d7b0:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 801d7b4:	015b      	lsls	r3, r3, #5
 801d7b6:	6163      	str	r3, [r4, #20]
 801d7b8:	4b47      	ldr	r3, [pc, #284]	; (801d8d8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x258>)
 801d7ba:	6818      	ldr	r0, [r3, #0]
 801d7bc:	6803      	ldr	r3, [r0, #0]
 801d7be:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d7c0:	4798      	blx	r3
 801d7c2:	4606      	mov	r6, r0
 801d7c4:	f7e5 fc3e 	bl	8003044 <_ZN8touchgfx3HAL3lcdEv>
 801d7c8:	6803      	ldr	r3, [r0, #0]
 801d7ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801d7cc:	4798      	blx	r3
 801d7ce:	4607      	mov	r7, r0
 801d7d0:	f7e5 fc38 	bl	8003044 <_ZN8touchgfx3HAL3lcdEv>
 801d7d4:	6803      	ldr	r3, [r0, #0]
 801d7d6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d7d8:	4798      	blx	r3
 801d7da:	280d      	cmp	r0, #13
 801d7dc:	d854      	bhi.n	801d888 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x208>
 801d7de:	e8df f000 	tbb	[pc, r0]
 801d7e2:	554b      	.short	0x554b
 801d7e4:	2b6e0a66 	.word	0x2b6e0a66
 801d7e8:	5f5f5f3b 	.word	0x5f5f5f3b
 801d7ec:	6e6e5f5f 	.word	0x6e6e5f5f
 801d7f0:	2300      	movs	r3, #0
 801d7f2:	9303      	str	r3, [sp, #12]
 801d7f4:	e7ae      	b.n	801d754 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xd4>
 801d7f6:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d7fa:	2108      	movs	r1, #8
 801d7fc:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d800:	fb92 f1f1 	sdiv	r1, r2, r1
 801d804:	fb07 1303 	mla	r3, r7, r3, r1
 801d808:	441e      	add	r6, r3
 801d80a:	4253      	negs	r3, r2
 801d80c:	f002 0207 	and.w	r2, r2, #7
 801d810:	f003 0307 	and.w	r3, r3, #7
 801d814:	bf58      	it	pl
 801d816:	425a      	negpl	r2, r3
 801d818:	b2d2      	uxtb	r2, r2
 801d81a:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801d81e:	4628      	mov	r0, r5
 801d820:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 801d824:	6721      	str	r1, [r4, #112]	; 0x70
 801d826:	e9cd 1700 	strd	r1, r7, [sp]
 801d82a:	4631      	mov	r1, r6
 801d82c:	f002 f880 	bl	801f930 <_ZN8touchgfx15RenderingBuffer6attachEPhhjji>
 801d830:	4620      	mov	r0, r4
 801d832:	b006      	add	sp, #24
 801d834:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d838:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d83c:	2104      	movs	r1, #4
 801d83e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d842:	fb92 f1f1 	sdiv	r1, r2, r1
 801d846:	fb07 1303 	mla	r3, r7, r3, r1
 801d84a:	441e      	add	r6, r3
 801d84c:	4253      	negs	r3, r2
 801d84e:	f002 0203 	and.w	r2, r2, #3
 801d852:	f003 0303 	and.w	r3, r3, #3
 801d856:	e7dd      	b.n	801d814 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x194>
 801d858:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d85c:	2102      	movs	r1, #2
 801d85e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d862:	2a00      	cmp	r2, #0
 801d864:	fb92 f1f1 	sdiv	r1, r2, r1
 801d868:	f002 0201 	and.w	r2, r2, #1
 801d86c:	fb07 1303 	mla	r3, r7, r3, r1
 801d870:	bfb8      	it	lt
 801d872:	4252      	neglt	r2, r2
 801d874:	441e      	add	r6, r3
 801d876:	e7cf      	b.n	801d818 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x198>
 801d878:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d87c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d880:	437b      	muls	r3, r7
 801d882:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 801d886:	441e      	add	r6, r3
 801d888:	2200      	movs	r2, #0
 801d88a:	e7c6      	b.n	801d81a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x19a>
 801d88c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d890:	2103      	movs	r1, #3
 801d892:	fb07 f203 	mul.w	r2, r7, r3
 801d896:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 801d89a:	fb13 2301 	smlabb	r3, r3, r1, r2
 801d89e:	e7f2      	b.n	801d886 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x206>
 801d8a0:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d8a4:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d8a8:	fb07 2303 	mla	r3, r7, r3, r2
 801d8ac:	e7eb      	b.n	801d886 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x206>
 801d8ae:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d8b2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d8b6:	437b      	muls	r3, r7
 801d8b8:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 801d8bc:	e7e3      	b.n	801d886 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x206>
 801d8be:	4b07      	ldr	r3, [pc, #28]	; (801d8dc <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x25c>)
 801d8c0:	2169      	movs	r1, #105	; 0x69
 801d8c2:	4a03      	ldr	r2, [pc, #12]	; (801d8d0 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x250>)
 801d8c4:	e70e      	b.n	801d6e4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x64>
 801d8c6:	bf00      	nop
 801d8c8:	08025ae4 	.word	0x08025ae4
 801d8cc:	08025a2d 	.word	0x08025a2d
 801d8d0:	08025aec 	.word	0x08025aec
 801d8d4:	08025a89 	.word	0x08025a89
 801d8d8:	2400e0b4 	.word	0x2400e0b4
 801d8dc:	08025abd 	.word	0x08025abd

0801d8e0 <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_>:
 801d8e0:	6812      	ldr	r2, [r2, #0]
 801d8e2:	2a00      	cmp	r2, #0
 801d8e4:	db0b      	blt.n	801d8fe <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_+0x1e>
 801d8e6:	9800      	ldr	r0, [sp, #0]
 801d8e8:	6800      	ldr	r0, [r0, #0]
 801d8ea:	4290      	cmp	r0, r2
 801d8ec:	bfd4      	ite	le
 801d8ee:	2002      	movle	r0, #2
 801d8f0:	2000      	movgt	r0, #0
 801d8f2:	680a      	ldr	r2, [r1, #0]
 801d8f4:	2a00      	cmp	r2, #0
 801d8f6:	da04      	bge.n	801d902 <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_+0x22>
 801d8f8:	f040 0004 	orr.w	r0, r0, #4
 801d8fc:	4770      	bx	lr
 801d8fe:	2001      	movs	r0, #1
 801d900:	e7f7      	b.n	801d8f2 <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_+0x12>
 801d902:	681b      	ldr	r3, [r3, #0]
 801d904:	4293      	cmp	r3, r2
 801d906:	bfd8      	it	le
 801d908:	f040 0008 	orrle.w	r0, r0, #8
 801d90c:	4770      	bx	lr
	...

0801d910 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 801d910:	4b07      	ldr	r3, [pc, #28]	; (801d930 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 801d912:	b510      	push	{r4, lr}
 801d914:	781b      	ldrb	r3, [r3, #0]
 801d916:	2b01      	cmp	r3, #1
 801d918:	d108      	bne.n	801d92c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 801d91a:	6843      	ldr	r3, [r0, #4]
 801d91c:	6814      	ldr	r4, [r2, #0]
 801d91e:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 801d922:	680b      	ldr	r3, [r1, #0]
 801d924:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 801d928:	6013      	str	r3, [r2, #0]
 801d92a:	600c      	str	r4, [r1, #0]
 801d92c:	bd10      	pop	{r4, pc}
 801d92e:	bf00      	nop
 801d930:	2400e0ac 	.word	0x2400e0ac

0801d934 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 801d934:	b5f0      	push	{r4, r5, r6, r7, lr}
 801d936:	b085      	sub	sp, #20
 801d938:	f890 30a4 	ldrb.w	r3, [r0, #164]	; 0xa4
 801d93c:	4604      	mov	r4, r0
 801d93e:	e9cd 2102 	strd	r2, r1, [sp, #8]
 801d942:	b33b      	cbz	r3, 801d994 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x60>
 801d944:	aa02      	add	r2, sp, #8
 801d946:	a903      	add	r1, sp, #12
 801d948:	f7ff ffe2 	bl	801d910 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 801d94c:	68a3      	ldr	r3, [r4, #8]
 801d94e:	9e03      	ldr	r6, [sp, #12]
 801d950:	aa02      	add	r2, sp, #8
 801d952:	9f02      	ldr	r7, [sp, #8]
 801d954:	a903      	add	r1, sp, #12
 801d956:	1af6      	subs	r6, r6, r3
 801d958:	68e3      	ldr	r3, [r4, #12]
 801d95a:	4620      	mov	r0, r4
 801d95c:	1aff      	subs	r7, r7, r3
 801d95e:	f104 0314 	add.w	r3, r4, #20
 801d962:	9603      	str	r6, [sp, #12]
 801d964:	9300      	str	r3, [sp, #0]
 801d966:	f104 0310 	add.w	r3, r4, #16
 801d96a:	9702      	str	r7, [sp, #8]
 801d96c:	f7ff ffb8 	bl	801d8e0 <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_>
 801d970:	f894 30b0 	ldrb.w	r3, [r4, #176]	; 0xb0
 801d974:	4605      	mov	r5, r0
 801d976:	b97b      	cbnz	r3, 801d998 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x64>
 801d978:	463a      	mov	r2, r7
 801d97a:	4631      	mov	r1, r6
 801d97c:	f104 0030 	add.w	r0, r4, #48	; 0x30
 801d980:	f7ff fe78 	bl	801d674 <_ZN8touchgfx10Rasterizer6lineToEii>
 801d984:	9b03      	ldr	r3, [sp, #12]
 801d986:	f884 50b0 	strb.w	r5, [r4, #176]	; 0xb0
 801d98a:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 801d98e:	9b02      	ldr	r3, [sp, #8]
 801d990:	f8c4 30ac 	str.w	r3, [r4, #172]	; 0xac
 801d994:	b005      	add	sp, #20
 801d996:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801d998:	b110      	cbz	r0, 801d9a0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6c>
 801d99a:	ea13 0200 	ands.w	r2, r3, r0
 801d99e:	d11c      	bne.n	801d9da <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa6>
 801d9a0:	f894 00a5 	ldrb.w	r0, [r4, #165]	; 0xa5
 801d9a4:	f104 0630 	add.w	r6, r4, #48	; 0x30
 801d9a8:	e9d4 122a 	ldrd	r1, r2, [r4, #168]	; 0xa8
 801d9ac:	b188      	cbz	r0, 801d9d2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9e>
 801d9ae:	f884 30b1 	strb.w	r3, [r4, #177]	; 0xb1
 801d9b2:	f894 3074 	ldrb.w	r3, [r4, #116]	; 0x74
 801d9b6:	b913      	cbnz	r3, 801d9be <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x8a>
 801d9b8:	4630      	mov	r0, r6
 801d9ba:	f001 fdb9 	bl	801f530 <_ZN8touchgfx7Outline6moveToEii>
 801d9be:	2300      	movs	r3, #0
 801d9c0:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 801d9c4:	2301      	movs	r3, #1
 801d9c6:	f884 30a6 	strb.w	r3, [r4, #166]	; 0xa6
 801d9ca:	4630      	mov	r0, r6
 801d9cc:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 801d9d0:	e7d6      	b.n	801d980 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4c>
 801d9d2:	4630      	mov	r0, r6
 801d9d4:	f7ff fe4e 	bl	801d674 <_ZN8touchgfx10Rasterizer6lineToEii>
 801d9d8:	e7f7      	b.n	801d9ca <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x96>
 801d9da:	4615      	mov	r5, r2
 801d9dc:	e7d2      	b.n	801d984 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x50>

0801d9de <_ZN8touchgfx6Canvas5closeEv>:
 801d9de:	b538      	push	{r3, r4, r5, lr}
 801d9e0:	f890 30a5 	ldrb.w	r3, [r0, #165]	; 0xa5
 801d9e4:	4604      	mov	r4, r0
 801d9e6:	b993      	cbnz	r3, 801da0e <_ZN8touchgfx6Canvas5closeEv+0x30>
 801d9e8:	f890 30b0 	ldrb.w	r3, [r0, #176]	; 0xb0
 801d9ec:	f890 20b1 	ldrb.w	r2, [r0, #177]	; 0xb1
 801d9f0:	4213      	tst	r3, r2
 801d9f2:	d10c      	bne.n	801da0e <_ZN8touchgfx6Canvas5closeEv+0x30>
 801d9f4:	f100 0530 	add.w	r5, r0, #48	; 0x30
 801d9f8:	b123      	cbz	r3, 801da04 <_ZN8touchgfx6Canvas5closeEv+0x26>
 801d9fa:	e9d0 122a 	ldrd	r1, r2, [r0, #168]	; 0xa8
 801d9fe:	4628      	mov	r0, r5
 801da00:	f7ff fe38 	bl	801d674 <_ZN8touchgfx10Rasterizer6lineToEii>
 801da04:	4628      	mov	r0, r5
 801da06:	e9d4 122d 	ldrd	r1, r2, [r4, #180]	; 0xb4
 801da0a:	f7ff fe33 	bl	801d674 <_ZN8touchgfx10Rasterizer6lineToEii>
 801da0e:	2300      	movs	r3, #0
 801da10:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 801da14:	bd38      	pop	{r3, r4, r5, pc}

0801da16 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 801da16:	b5f0      	push	{r4, r5, r6, r7, lr}
 801da18:	b085      	sub	sp, #20
 801da1a:	f890 30a4 	ldrb.w	r3, [r0, #164]	; 0xa4
 801da1e:	4604      	mov	r4, r0
 801da20:	e9cd 2102 	strd	r2, r1, [sp, #8]
 801da24:	b353      	cbz	r3, 801da7c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>
 801da26:	f890 30a5 	ldrb.w	r3, [r0, #165]	; 0xa5
 801da2a:	b90b      	cbnz	r3, 801da30 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x1a>
 801da2c:	f7ff ffd7 	bl	801d9de <_ZN8touchgfx6Canvas5closeEv>
 801da30:	aa02      	add	r2, sp, #8
 801da32:	a903      	add	r1, sp, #12
 801da34:	4620      	mov	r0, r4
 801da36:	f7ff ff6b 	bl	801d910 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 801da3a:	68a3      	ldr	r3, [r4, #8]
 801da3c:	9d03      	ldr	r5, [sp, #12]
 801da3e:	aa02      	add	r2, sp, #8
 801da40:	9e02      	ldr	r6, [sp, #8]
 801da42:	a903      	add	r1, sp, #12
 801da44:	1aed      	subs	r5, r5, r3
 801da46:	68e3      	ldr	r3, [r4, #12]
 801da48:	4620      	mov	r0, r4
 801da4a:	1af6      	subs	r6, r6, r3
 801da4c:	f104 0314 	add.w	r3, r4, #20
 801da50:	9503      	str	r5, [sp, #12]
 801da52:	9300      	str	r3, [sp, #0]
 801da54:	f104 0310 	add.w	r3, r4, #16
 801da58:	9602      	str	r6, [sp, #8]
 801da5a:	f7ff ff41 	bl	801d8e0 <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_>
 801da5e:	4607      	mov	r7, r0
 801da60:	b170      	cbz	r0, 801da80 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x6a>
 801da62:	2301      	movs	r3, #1
 801da64:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 801da68:	9a03      	ldr	r2, [sp, #12]
 801da6a:	9b02      	ldr	r3, [sp, #8]
 801da6c:	f8c4 20b4 	str.w	r2, [r4, #180]	; 0xb4
 801da70:	f8c4 30b8 	str.w	r3, [r4, #184]	; 0xb8
 801da74:	f884 70b0 	strb.w	r7, [r4, #176]	; 0xb0
 801da78:	e9c4 232a 	strd	r2, r3, [r4, #168]	; 0xa8
 801da7c:	b005      	add	sp, #20
 801da7e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801da80:	f894 3074 	ldrb.w	r3, [r4, #116]	; 0x74
 801da84:	f884 00b1 	strb.w	r0, [r4, #177]	; 0xb1
 801da88:	b92b      	cbnz	r3, 801da96 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x80>
 801da8a:	4632      	mov	r2, r6
 801da8c:	4629      	mov	r1, r5
 801da8e:	f104 0030 	add.w	r0, r4, #48	; 0x30
 801da92:	f001 fd4d 	bl	801f530 <_ZN8touchgfx7Outline6moveToEii>
 801da96:	2300      	movs	r3, #0
 801da98:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 801da9c:	2301      	movs	r3, #1
 801da9e:	f884 30a6 	strb.w	r3, [r4, #166]	; 0xa6
 801daa2:	e7e1      	b.n	801da68 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x52>

0801daa4 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_>:
 801daa4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801daa8:	4604      	mov	r4, r0
 801daaa:	b087      	sub	sp, #28
 801daac:	9105      	str	r1, [sp, #20]
 801daae:	f001 fe84 	bl	801f7ba <_ZN8touchgfx7Outline8getCellsEv>
 801dab2:	f8d4 9008 	ldr.w	r9, [r4, #8]
 801dab6:	4605      	mov	r5, r0
 801dab8:	f1b9 0f00 	cmp.w	r9, #0
 801dabc:	d103      	bne.n	801dac6 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x22>
 801dabe:	2001      	movs	r0, #1
 801dac0:	b007      	add	sp, #28
 801dac2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dac6:	f894 6044 	ldrb.w	r6, [r4, #68]	; 0x44
 801daca:	2e00      	cmp	r6, #0
 801dacc:	d139      	bne.n	801db42 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x9e>
 801dace:	f104 0848 	add.w	r8, r4, #72	; 0x48
 801dad2:	f105 0708 	add.w	r7, r5, #8
 801dad6:	4640      	mov	r0, r8
 801dad8:	f001 feb1 	bl	801f83e <_ZN8touchgfx8Scanline5resetEv>
 801dadc:	f109 33ff 	add.w	r3, r9, #4294967295
 801dae0:	9303      	str	r3, [sp, #12]
 801dae2:	f9b5 b000 	ldrsh.w	fp, [r5]
 801dae6:	f9b5 9002 	ldrsh.w	r9, [r5, #2]
 801daea:	46da      	mov	sl, fp
 801daec:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801daf0:	eb0b 4009 	add.w	r0, fp, r9, lsl #16
 801daf4:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 801daf8:	9b03      	ldr	r3, [sp, #12]
 801dafa:	4416      	add	r6, r2
 801dafc:	9504      	str	r5, [sp, #16]
 801dafe:	463d      	mov	r5, r7
 801db00:	3b01      	subs	r3, #1
 801db02:	9303      	str	r3, [sp, #12]
 801db04:	3301      	adds	r3, #1
 801db06:	d01e      	beq.n	801db46 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xa2>
 801db08:	3708      	adds	r7, #8
 801db0a:	f937 cc06 	ldrsh.w	ip, [r7, #-6]
 801db0e:	f937 2c08 	ldrsh.w	r2, [r7, #-8]
 801db12:	eb02 420c 	add.w	r2, r2, ip, lsl #16
 801db16:	4290      	cmp	r0, r2
 801db18:	d11e      	bne.n	801db58 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xb4>
 801db1a:	f937 2c02 	ldrsh.w	r2, [r7, #-2]
 801db1e:	4411      	add	r1, r2
 801db20:	f937 2c04 	ldrsh.w	r2, [r7, #-4]
 801db24:	e7e8      	b.n	801daf8 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x54>
 801db26:	1c91      	adds	r1, r2, #2
 801db28:	f04f 0301 	mov.w	r3, #1
 801db2c:	65e1      	str	r1, [r4, #92]	; 0x5c
 801db2e:	8053      	strh	r3, [r2, #2]
 801db30:	6da2      	ldr	r2, [r4, #88]	; 0x58
 801db32:	1c91      	adds	r1, r2, #2
 801db34:	65a1      	str	r1, [r4, #88]	; 0x58
 801db36:	f8a2 b002 	strh.w	fp, [r2, #2]
 801db3a:	6d62      	ldr	r2, [r4, #84]	; 0x54
 801db3c:	3201      	adds	r2, #1
 801db3e:	6562      	str	r2, [r4, #84]	; 0x54
 801db40:	e03a      	b.n	801dbb8 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x114>
 801db42:	2000      	movs	r0, #0
 801db44:	e7bc      	b.n	801dac0 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x1c>
 801db46:	b951      	cbnz	r1, 801db5e <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xba>
 801db48:	6d63      	ldr	r3, [r4, #84]	; 0x54
 801db4a:	2b00      	cmp	r3, #0
 801db4c:	d0b7      	beq.n	801dabe <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x1a>
 801db4e:	4641      	mov	r1, r8
 801db50:	9805      	ldr	r0, [sp, #20]
 801db52:	f7ff fd59 	bl	801d608 <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE>
 801db56:	e7b2      	b.n	801dabe <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x1a>
 801db58:	2900      	cmp	r1, #0
 801db5a:	d035      	beq.n	801dbc8 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x124>
 801db5c:	9504      	str	r5, [sp, #16]
 801db5e:	ebc1 1186 	rsb	r1, r1, r6, lsl #6
 801db62:	f894 006c 	ldrb.w	r0, [r4, #108]	; 0x6c
 801db66:	f7ff fd3b 	bl	801d5e0 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.14>
 801db6a:	4605      	mov	r5, r0
 801db6c:	b330      	cbz	r0, 801dbbc <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x118>
 801db6e:	6d62      	ldr	r2, [r4, #84]	; 0x54
 801db70:	b182      	cbz	r2, 801db94 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xf0>
 801db72:	6d22      	ldr	r2, [r4, #80]	; 0x50
 801db74:	4591      	cmp	r9, r2
 801db76:	d00d      	beq.n	801db94 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xf0>
 801db78:	4641      	mov	r1, r8
 801db7a:	9805      	ldr	r0, [sp, #20]
 801db7c:	f7ff fd44 	bl	801d608 <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE>
 801db80:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801db84:	6ea2      	ldr	r2, [r4, #104]	; 0x68
 801db86:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 801db8a:	65e2      	str	r2, [r4, #92]	; 0x5c
 801db8c:	2300      	movs	r3, #0
 801db8e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 801db90:	6563      	str	r3, [r4, #84]	; 0x54
 801db92:	65a2      	str	r2, [r4, #88]	; 0x58
 801db94:	f1bb 0f00 	cmp.w	fp, #0
 801db98:	db10      	blt.n	801dbbc <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x118>
 801db9a:	f7f2 fa31 	bl	8010000 <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv>
 801db9e:	4583      	cmp	fp, r0
 801dba0:	da0c      	bge.n	801dbbc <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x118>
 801dba2:	6e22      	ldr	r2, [r4, #96]	; 0x60
 801dba4:	f802 500b 	strb.w	r5, [r2, fp]
 801dba8:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
 801dbaa:	3201      	adds	r2, #1
 801dbac:	4593      	cmp	fp, r2
 801dbae:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 801dbb0:	d1b9      	bne.n	801db26 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x82>
 801dbb2:	8811      	ldrh	r1, [r2, #0]
 801dbb4:	3101      	adds	r1, #1
 801dbb6:	8011      	strh	r1, [r2, #0]
 801dbb8:	e9c4 b913 	strd	fp, r9, [r4, #76]	; 0x4c
 801dbbc:	9b03      	ldr	r3, [sp, #12]
 801dbbe:	3301      	adds	r3, #1
 801dbc0:	d0c2      	beq.n	801db48 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xa4>
 801dbc2:	f10b 0a01 	add.w	sl, fp, #1
 801dbc6:	9d04      	ldr	r5, [sp, #16]
 801dbc8:	f9b5 3000 	ldrsh.w	r3, [r5]
 801dbcc:	4553      	cmp	r3, sl
 801dbce:	dd88      	ble.n	801dae2 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x3e>
 801dbd0:	01b1      	lsls	r1, r6, #6
 801dbd2:	f894 006c 	ldrb.w	r0, [r4, #108]	; 0x6c
 801dbd6:	f7ff fd03 	bl	801d5e0 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.14>
 801dbda:	4683      	mov	fp, r0
 801dbdc:	2800      	cmp	r0, #0
 801dbde:	d080      	beq.n	801dae2 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x3e>
 801dbe0:	6d63      	ldr	r3, [r4, #84]	; 0x54
 801dbe2:	b183      	cbz	r3, 801dc06 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x162>
 801dbe4:	6d23      	ldr	r3, [r4, #80]	; 0x50
 801dbe6:	4599      	cmp	r9, r3
 801dbe8:	d00d      	beq.n	801dc06 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x162>
 801dbea:	4641      	mov	r1, r8
 801dbec:	9805      	ldr	r0, [sp, #20]
 801dbee:	f7ff fd0b 	bl	801d608 <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE>
 801dbf2:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801dbf6:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 801dbfa:	6ea3      	ldr	r3, [r4, #104]	; 0x68
 801dbfc:	65e3      	str	r3, [r4, #92]	; 0x5c
 801dbfe:	6e63      	ldr	r3, [r4, #100]	; 0x64
 801dc00:	65a3      	str	r3, [r4, #88]	; 0x58
 801dc02:	2300      	movs	r3, #0
 801dc04:	6563      	str	r3, [r4, #84]	; 0x54
 801dc06:	f9b5 3000 	ldrsh.w	r3, [r5]
 801dc0a:	464a      	mov	r2, r9
 801dc0c:	f8cd b000 	str.w	fp, [sp]
 801dc10:	4651      	mov	r1, sl
 801dc12:	eba3 030a 	sub.w	r3, r3, sl
 801dc16:	4640      	mov	r0, r8
 801dc18:	f001 fe3c 	bl	801f894 <_ZN8touchgfx8Scanline7addSpanEiijj>
 801dc1c:	e761      	b.n	801dae2 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x3e>

0801dc1e <_ZN8touchgfx6Canvas6renderEh>:
 801dc1e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801dc20:	f890 30a4 	ldrb.w	r3, [r0, #164]	; 0xa4
 801dc24:	4604      	mov	r4, r0
 801dc26:	460d      	mov	r5, r1
 801dc28:	b913      	cbnz	r3, 801dc30 <_ZN8touchgfx6Canvas6renderEh+0x12>
 801dc2a:	2001      	movs	r0, #1
 801dc2c:	b003      	add	sp, #12
 801dc2e:	bd30      	pop	{r4, r5, pc}
 801dc30:	f890 3074 	ldrb.w	r3, [r0, #116]	; 0x74
 801dc34:	2b00      	cmp	r3, #0
 801dc36:	d12f      	bne.n	801dc98 <_ZN8touchgfx6Canvas6renderEh+0x7a>
 801dc38:	f890 30a6 	ldrb.w	r3, [r0, #166]	; 0xa6
 801dc3c:	2b00      	cmp	r3, #0
 801dc3e:	d0f4      	beq.n	801dc2a <_ZN8touchgfx6Canvas6renderEh+0xc>
 801dc40:	6840      	ldr	r0, [r0, #4]
 801dc42:	6803      	ldr	r3, [r0, #0]
 801dc44:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 801dc46:	4798      	blx	r3
 801dc48:	fb10 f105 	smulbb	r1, r0, r5
 801dc4c:	b288      	uxth	r0, r1
 801dc4e:	1c41      	adds	r1, r0, #1
 801dc50:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801dc54:	120d      	asrs	r5, r1, #8
 801dc56:	d0e8      	beq.n	801dc2a <_ZN8touchgfx6Canvas6renderEh+0xc>
 801dc58:	4620      	mov	r0, r4
 801dc5a:	f7ff fec0 	bl	801d9de <_ZN8touchgfx6Canvas5closeEv>
 801dc5e:	6860      	ldr	r0, [r4, #4]
 801dc60:	6803      	ldr	r3, [r0, #0]
 801dc62:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 801dc64:	4798      	blx	r3
 801dc66:	f9b4 20a0 	ldrsh.w	r2, [r4, #160]	; 0xa0
 801dc6a:	f9b4 30a2 	ldrsh.w	r3, [r4, #162]	; 0xa2
 801dc6e:	8082      	strh	r2, [r0, #4]
 801dc70:	80c3      	strh	r3, [r0, #6]
 801dc72:	6860      	ldr	r0, [r4, #4]
 801dc74:	6803      	ldr	r3, [r0, #0]
 801dc76:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 801dc78:	4798      	blx	r3
 801dc7a:	7205      	strb	r5, [r0, #8]
 801dc7c:	6860      	ldr	r0, [r4, #4]
 801dc7e:	6803      	ldr	r3, [r0, #0]
 801dc80:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 801dc82:	4798      	blx	r3
 801dc84:	f104 0318 	add.w	r3, r4, #24
 801dc88:	4669      	mov	r1, sp
 801dc8a:	e9cd 3000 	strd	r3, r0, [sp]
 801dc8e:	f104 0030 	add.w	r0, r4, #48	; 0x30
 801dc92:	f7ff ff07 	bl	801daa4 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_>
 801dc96:	e7c9      	b.n	801dc2c <_ZN8touchgfx6Canvas6renderEh+0xe>
 801dc98:	2000      	movs	r0, #0
 801dc9a:	e7c7      	b.n	801dc2c <_ZN8touchgfx6Canvas6renderEh+0xe>

0801dc9c <_ZN8touchgfx6CanvasD1Ev>:
 801dc9c:	b538      	push	{r3, r4, r5, lr}
 801dc9e:	4605      	mov	r5, r0
 801dca0:	4b08      	ldr	r3, [pc, #32]	; (801dcc4 <_ZN8touchgfx6CanvasD1Ev+0x28>)
 801dca2:	4604      	mov	r4, r0
 801dca4:	f845 3b30 	str.w	r3, [r5], #48
 801dca8:	4b07      	ldr	r3, [pc, #28]	; (801dcc8 <_ZN8touchgfx6CanvasD1Ev+0x2c>)
 801dcaa:	6818      	ldr	r0, [r3, #0]
 801dcac:	6803      	ldr	r3, [r0, #0]
 801dcae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801dcb0:	4798      	blx	r3
 801dcb2:	4628      	mov	r0, r5
 801dcb4:	f000 fdac 	bl	801e810 <_ZN8touchgfx7OutlineD1Ev>
 801dcb8:	f104 0018 	add.w	r0, r4, #24
 801dcbc:	f001 fe23 	bl	801f906 <_ZN8touchgfx15RenderingBufferD1Ev>
 801dcc0:	4620      	mov	r0, r4
 801dcc2:	bd38      	pop	{r3, r4, r5, pc}
 801dcc4:	08025ae4 	.word	0x08025ae4
 801dcc8:	2400e0b4 	.word	0x2400e0b4

0801dccc <_ZN8touchgfx6CanvasD0Ev>:
 801dccc:	b510      	push	{r4, lr}
 801dcce:	4604      	mov	r4, r0
 801dcd0:	f7ff ffe4 	bl	801dc9c <_ZN8touchgfx6CanvasD1Ev>
 801dcd4:	21bc      	movs	r1, #188	; 0xbc
 801dcd6:	4620      	mov	r0, r4
 801dcd8:	f001 ff89 	bl	801fbee <_ZdlPvj>
 801dcdc:	4620      	mov	r0, r4
 801dcde:	bd10      	pop	{r4, pc}

0801dce0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 801dce0:	790b      	ldrb	r3, [r1, #4]
 801dce2:	2b00      	cmp	r3, #0
 801dce4:	bf0c      	ite	eq
 801dce6:	2301      	moveq	r3, #1
 801dce8:	2300      	movne	r3, #0
 801dcea:	b570      	push	{r4, r5, r6, lr}
 801dcec:	4604      	mov	r4, r0
 801dcee:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 801dcf2:	460e      	mov	r6, r1
 801dcf4:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 801dcf8:	d109      	bne.n	801dd0e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 801dcfa:	b14d      	cbz	r5, 801dd10 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 801dcfc:	7933      	ldrb	r3, [r6, #4]
 801dcfe:	2b01      	cmp	r3, #1
 801dd00:	d10c      	bne.n	801dd1c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801dd02:	6823      	ldr	r3, [r4, #0]
 801dd04:	4620      	mov	r0, r4
 801dd06:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 801dd08:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801dd0c:	4718      	bx	r3
 801dd0e:	b12d      	cbz	r5, 801dd1c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801dd10:	6823      	ldr	r3, [r4, #0]
 801dd12:	4620      	mov	r0, r4
 801dd14:	695b      	ldr	r3, [r3, #20]
 801dd16:	4798      	blx	r3
 801dd18:	2d00      	cmp	r5, #0
 801dd1a:	d1ef      	bne.n	801dcfc <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 801dd1c:	bd70      	pop	{r4, r5, r6, pc}

0801dd1e <_ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE>:
 801dd1e:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 801dd22:	4770      	bx	lr

0801dd24 <_ZNK8touchgfx13TextureMapper21getRenderingAlgorithmEv>:
 801dd24:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 801dd28:	4770      	bx	lr

0801dd2a <_ZN8touchgfx13TextureMapper9setXAngleEf>:
 801dd2a:	6802      	ldr	r2, [r0, #0]
 801dd2c:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 801dd30:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 801dd32:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 801dd36:	4710      	bx	r2

0801dd38 <_ZN8touchgfx13TextureMapper9setYAngleEf>:
 801dd38:	6802      	ldr	r2, [r0, #0]
 801dd3a:	eef0 0a40 	vmov.f32	s1, s0
 801dd3e:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 801dd42:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 801dd44:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 801dd48:	4710      	bx	r2

0801dd4a <_ZN8touchgfx13TextureMapper9setZAngleEf>:
 801dd4a:	6802      	ldr	r2, [r0, #0]
 801dd4c:	eeb0 1a40 	vmov.f32	s2, s0
 801dd50:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 801dd54:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 801dd56:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 801dd5a:	4710      	bx	r2

0801dd5c <_ZN8touchgfx13TextureMapper12updateXAngleEf>:
 801dd5c:	6802      	ldr	r2, [r0, #0]
 801dd5e:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 801dd62:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 801dd64:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 801dd68:	4710      	bx	r2

0801dd6a <_ZN8touchgfx13TextureMapper12updateYAngleEf>:
 801dd6a:	6802      	ldr	r2, [r0, #0]
 801dd6c:	eef0 0a40 	vmov.f32	s1, s0
 801dd70:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 801dd74:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 801dd76:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 801dd7a:	4710      	bx	r2

0801dd7c <_ZN8touchgfx13TextureMapper12updateZAngleEf>:
 801dd7c:	6802      	ldr	r2, [r0, #0]
 801dd7e:	eeb0 1a40 	vmov.f32	s2, s0
 801dd82:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 801dd86:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 801dd88:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 801dd8c:	4710      	bx	r2

0801dd8e <_ZNK8touchgfx13TextureMapper9getXAngleEv>:
 801dd8e:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 801dd92:	4770      	bx	lr

0801dd94 <_ZNK8touchgfx13TextureMapper9getYAngleEv>:
 801dd94:	ed90 0a0e 	vldr	s0, [r0, #56]	; 0x38
 801dd98:	4770      	bx	lr

0801dd9a <_ZNK8touchgfx13TextureMapper9getZAngleEv>:
 801dd9a:	ed90 0a0f 	vldr	s0, [r0, #60]	; 0x3c
 801dd9e:	4770      	bx	lr

0801dda0 <_ZNK8touchgfx13TextureMapper8getScaleEv>:
 801dda0:	ed90 0a10 	vldr	s0, [r0, #64]	; 0x40
 801dda4:	4770      	bx	lr

0801dda6 <_ZNK8touchgfx13TextureMapper9getOrigoXEv>:
 801dda6:	ed90 0a11 	vldr	s0, [r0, #68]	; 0x44
 801ddaa:	4770      	bx	lr

0801ddac <_ZNK8touchgfx13TextureMapper9getOrigoYEv>:
 801ddac:	ed90 0a12 	vldr	s0, [r0, #72]	; 0x48
 801ddb0:	4770      	bx	lr

0801ddb2 <_ZNK8touchgfx13TextureMapper9getOrigoZEv>:
 801ddb2:	ed90 0a13 	vldr	s0, [r0, #76]	; 0x4c
 801ddb6:	4770      	bx	lr

0801ddb8 <_ZNK8touchgfx13TextureMapper10getCameraXEv>:
 801ddb8:	ed90 0a14 	vldr	s0, [r0, #80]	; 0x50
 801ddbc:	4770      	bx	lr

0801ddbe <_ZNK8touchgfx13TextureMapper10getCameraYEv>:
 801ddbe:	ed90 0a15 	vldr	s0, [r0, #84]	; 0x54
 801ddc2:	4770      	bx	lr

0801ddc4 <_ZNK8touchgfx13TextureMapper17getCameraDistanceEv>:
 801ddc4:	ed90 0a16 	vldr	s0, [r0, #88]	; 0x58
 801ddc8:	4770      	bx	lr

0801ddca <_ZN8touchgfx13TextureMapper17setBitmapPositionEii>:
 801ddca:	ee07 2a90 	vmov	s15, r2
 801ddce:	6803      	ldr	r3, [r0, #0]
 801ddd0:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 801ddd4:	ee07 1a90 	vmov	s15, r1
 801ddd8:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 801dddc:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 801dde0:	4718      	bx	r3

0801dde2 <_ZNK8touchgfx13TextureMapper18getBitmapPositionXEv>:
 801dde2:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 801dde6:	4770      	bx	lr

0801dde8 <_ZNK8touchgfx13TextureMapper18getBitmapPositionYEv>:
 801dde8:	ed90 0a0c 	vldr	s0, [r0, #48]	; 0x30
 801ddec:	4770      	bx	lr

0801ddee <_ZNK8touchgfx13TextureMapper5getX0Ev>:
 801ddee:	ed90 0a17 	vldr	s0, [r0, #92]	; 0x5c
 801ddf2:	4770      	bx	lr

0801ddf4 <_ZNK8touchgfx13TextureMapper5getX1Ev>:
 801ddf4:	ed90 0a1a 	vldr	s0, [r0, #104]	; 0x68
 801ddf8:	4770      	bx	lr

0801ddfa <_ZNK8touchgfx13TextureMapper5getX2Ev>:
 801ddfa:	ed90 0a1d 	vldr	s0, [r0, #116]	; 0x74
 801ddfe:	4770      	bx	lr

0801de00 <_ZNK8touchgfx13TextureMapper5getX3Ev>:
 801de00:	ed90 0a20 	vldr	s0, [r0, #128]	; 0x80
 801de04:	4770      	bx	lr

0801de06 <_ZNK8touchgfx13TextureMapper5getY0Ev>:
 801de06:	ed90 0a18 	vldr	s0, [r0, #96]	; 0x60
 801de0a:	4770      	bx	lr

0801de0c <_ZNK8touchgfx13TextureMapper5getY1Ev>:
 801de0c:	ed90 0a1b 	vldr	s0, [r0, #108]	; 0x6c
 801de10:	4770      	bx	lr

0801de12 <_ZNK8touchgfx13TextureMapper5getY2Ev>:
 801de12:	ed90 0a1e 	vldr	s0, [r0, #120]	; 0x78
 801de16:	4770      	bx	lr

0801de18 <_ZNK8touchgfx13TextureMapper5getY3Ev>:
 801de18:	ed90 0a21 	vldr	s0, [r0, #132]	; 0x84
 801de1c:	4770      	bx	lr

0801de1e <_ZNK8touchgfx13TextureMapper5getZ0Ev>:
 801de1e:	ed90 0a19 	vldr	s0, [r0, #100]	; 0x64
 801de22:	4770      	bx	lr

0801de24 <_ZNK8touchgfx13TextureMapper5getZ1Ev>:
 801de24:	ed90 0a1c 	vldr	s0, [r0, #112]	; 0x70
 801de28:	4770      	bx	lr

0801de2a <_ZNK8touchgfx13TextureMapper5getZ2Ev>:
 801de2a:	ed90 0a1f 	vldr	s0, [r0, #124]	; 0x7c
 801de2e:	4770      	bx	lr

0801de30 <_ZNK8touchgfx13TextureMapper5getZ3Ev>:
 801de30:	ed90 0a22 	vldr	s0, [r0, #136]	; 0x88
 801de34:	4770      	bx	lr

0801de36 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>:
 801de36:	b510      	push	{r4, lr}
 801de38:	ed2d 8b04 	vpush	{d8-d9}
 801de3c:	6803      	ldr	r3, [r0, #0]
 801de3e:	4604      	mov	r4, r0
 801de40:	eeb0 8a40 	vmov.f32	s16, s0
 801de44:	eef0 8a60 	vmov.f32	s17, s1
 801de48:	699b      	ldr	r3, [r3, #24]
 801de4a:	eeb0 9a41 	vmov.f32	s18, s2
 801de4e:	4798      	blx	r3
 801de50:	6823      	ldr	r3, [r4, #0]
 801de52:	4620      	mov	r0, r4
 801de54:	eef0 0a68 	vmov.f32	s1, s17
 801de58:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 801de5a:	eeb0 1a49 	vmov.f32	s2, s18
 801de5e:	eeb0 0a48 	vmov.f32	s0, s16
 801de62:	4798      	blx	r3
 801de64:	6823      	ldr	r3, [r4, #0]
 801de66:	4620      	mov	r0, r4
 801de68:	699b      	ldr	r3, [r3, #24]
 801de6a:	ecbd 8b04 	vpop	{d8-d9}
 801de6e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801de72:	4718      	bx	r3

0801de74 <_ZN8touchgfx13TextureMapper11updateScaleEf>:
 801de74:	b510      	push	{r4, lr}
 801de76:	ed2d 8b02 	vpush	{d8}
 801de7a:	6803      	ldr	r3, [r0, #0]
 801de7c:	4604      	mov	r4, r0
 801de7e:	eeb0 8a40 	vmov.f32	s16, s0
 801de82:	699b      	ldr	r3, [r3, #24]
 801de84:	4798      	blx	r3
 801de86:	6823      	ldr	r3, [r4, #0]
 801de88:	4620      	mov	r0, r4
 801de8a:	eeb0 0a48 	vmov.f32	s0, s16
 801de8e:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 801de92:	4798      	blx	r3
 801de94:	6823      	ldr	r3, [r4, #0]
 801de96:	4620      	mov	r0, r4
 801de98:	699b      	ldr	r3, [r3, #24]
 801de9a:	ecbd 8b02 	vpop	{d8}
 801de9e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801dea2:	4718      	bx	r3

0801dea4 <_ZNK8touchgfx13TextureMapper12getSolidRectEv>:
 801dea4:	2200      	movs	r2, #0
 801dea6:	8002      	strh	r2, [r0, #0]
 801dea8:	8042      	strh	r2, [r0, #2]
 801deaa:	8082      	strh	r2, [r0, #4]
 801deac:	80c2      	strh	r2, [r0, #6]
 801deae:	4770      	bx	lr

0801deb0 <_ZN8touchgfx13TextureMapperD1Ev>:
 801deb0:	4770      	bx	lr

0801deb2 <_ZN8touchgfx13TextureMapperD0Ev>:
 801deb2:	b510      	push	{r4, lr}
 801deb4:	4604      	mov	r4, r0
 801deb6:	2190      	movs	r1, #144	; 0x90
 801deb8:	f001 fe99 	bl	801fbee <_ZdlPvj>
 801debc:	4620      	mov	r0, r4
 801debe:	bd10      	pop	{r4, pc}

0801dec0 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>:
 801dec0:	b538      	push	{r3, r4, r5, lr}
 801dec2:	2301      	movs	r3, #1
 801dec4:	2500      	movs	r5, #0
 801dec6:	4604      	mov	r4, r0
 801dec8:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 801decc:	4b1f      	ldr	r3, [pc, #124]	; (801df4c <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x8c>)
 801dece:	8085      	strh	r5, [r0, #4]
 801ded0:	80c5      	strh	r5, [r0, #6]
 801ded2:	8105      	strh	r5, [r0, #8]
 801ded4:	8145      	strh	r5, [r0, #10]
 801ded6:	8185      	strh	r5, [r0, #12]
 801ded8:	81c5      	strh	r5, [r0, #14]
 801deda:	8205      	strh	r5, [r0, #16]
 801dedc:	8245      	strh	r5, [r0, #18]
 801dede:	61c5      	str	r5, [r0, #28]
 801dee0:	8405      	strh	r5, [r0, #32]
 801dee2:	8445      	strh	r5, [r0, #34]	; 0x22
 801dee4:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 801dee8:	6003      	str	r3, [r0, #0]
 801deea:	e9c0 5505 	strd	r5, r5, [r0, #20]
 801deee:	880b      	ldrh	r3, [r1, #0]
 801def0:	84c3      	strh	r3, [r0, #38]	; 0x26
 801def2:	23ff      	movs	r3, #255	; 0xff
 801def4:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 801def8:	f7f1 ff7d 	bl	800fdf6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 801defc:	4b14      	ldr	r3, [pc, #80]	; (801df50 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x90>)
 801defe:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 801df02:	4914      	ldr	r1, [pc, #80]	; (801df54 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x94>)
 801df04:	6023      	str	r3, [r4, #0]
 801df06:	2300      	movs	r3, #0
 801df08:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 801df0c:	4620      	mov	r0, r4
 801df0e:	62e3      	str	r3, [r4, #44]	; 0x2c
 801df10:	6323      	str	r3, [r4, #48]	; 0x30
 801df12:	6363      	str	r3, [r4, #52]	; 0x34
 801df14:	63a3      	str	r3, [r4, #56]	; 0x38
 801df16:	63e3      	str	r3, [r4, #60]	; 0x3c
 801df18:	6463      	str	r3, [r4, #68]	; 0x44
 801df1a:	64a3      	str	r3, [r4, #72]	; 0x48
 801df1c:	6523      	str	r3, [r4, #80]	; 0x50
 801df1e:	6563      	str	r3, [r4, #84]	; 0x54
 801df20:	65e3      	str	r3, [r4, #92]	; 0x5c
 801df22:	6623      	str	r3, [r4, #96]	; 0x60
 801df24:	66a3      	str	r3, [r4, #104]	; 0x68
 801df26:	66e3      	str	r3, [r4, #108]	; 0x6c
 801df28:	6763      	str	r3, [r4, #116]	; 0x74
 801df2a:	67a3      	str	r3, [r4, #120]	; 0x78
 801df2c:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 801df30:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 801df34:	230c      	movs	r3, #12
 801df36:	6422      	str	r2, [r4, #64]	; 0x40
 801df38:	64e1      	str	r1, [r4, #76]	; 0x4c
 801df3a:	65a1      	str	r1, [r4, #88]	; 0x58
 801df3c:	6662      	str	r2, [r4, #100]	; 0x64
 801df3e:	6722      	str	r2, [r4, #112]	; 0x70
 801df40:	67e2      	str	r2, [r4, #124]	; 0x7c
 801df42:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
 801df46:	f8a4 308c 	strh.w	r3, [r4, #140]	; 0x8c
 801df4a:	bd38      	pop	{r3, r4, r5, pc}
 801df4c:	080241a4 	.word	0x080241a4
 801df50:	08025b44 	.word	0x08025b44
 801df54:	447a0000 	.word	0x447a0000

0801df58 <_ZN8touchgfx13TextureMapper19applyTransformationEv>:
 801df58:	b570      	push	{r4, r5, r6, lr}
 801df5a:	ed2d 8b04 	vpush	{d8-d9}
 801df5e:	f5ad 7d50 	sub.w	sp, sp, #832	; 0x340
 801df62:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 801df64:	4604      	mov	r4, r0
 801df66:	add0      	add	r5, sp, #832	; 0x340
 801df68:	f825 3d40 	strh.w	r3, [r5, #-64]!
 801df6c:	4628      	mov	r0, r5
 801df6e:	f7f6 ffaf 	bl	8014ed0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801df72:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 801df74:	4606      	mov	r6, r0
 801df76:	4628      	mov	r0, r5
 801df78:	f8ad 3300 	strh.w	r3, [sp, #768]	; 0x300
 801df7c:	f7f6 ffec 	bl	8014f58 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801df80:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801df84:	1c72      	adds	r2, r6, #1
 801df86:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 801df8a:	3001      	adds	r0, #1
 801df8c:	ee07 2a90 	vmov	s15, r2
 801df90:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
 801df94:	ee76 5ac7 	vsub.f32	s11, s13, s14
 801df98:	ee06 0a90 	vmov	s13, r0
 801df9c:	ee36 6a47 	vsub.f32	s12, s12, s14
 801dfa0:	6da3      	ldr	r3, [r4, #88]	; 0x58
 801dfa2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801dfa6:	ed94 9a11 	vldr	s18, [r4, #68]	; 0x44
 801dfaa:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801dfae:	9312      	str	r3, [sp, #72]	; 0x48
 801dfb0:	9316      	str	r3, [sp, #88]	; 0x58
 801dfb2:	a830      	add	r0, sp, #192	; 0xc0
 801dfb4:	ee77 7a86 	vadd.f32	s15, s15, s12
 801dfb8:	931a      	str	r3, [sp, #104]	; 0x68
 801dfba:	ee76 6aa5 	vadd.f32	s13, s13, s11
 801dfbe:	931e      	str	r3, [sp, #120]	; 0x78
 801dfc0:	2300      	movs	r3, #0
 801dfc2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801dfc6:	edcd 5a11 	vstr	s11, [sp, #68]	; 0x44
 801dfca:	ae70      	add	r6, sp, #448	; 0x1c0
 801dfcc:	9320      	str	r3, [sp, #128]	; 0x80
 801dfce:	9321      	str	r3, [sp, #132]	; 0x84
 801dfd0:	9322      	str	r3, [sp, #136]	; 0x88
 801dfd2:	9324      	str	r3, [sp, #144]	; 0x90
 801dfd4:	9325      	str	r3, [sp, #148]	; 0x94
 801dfd6:	9326      	str	r3, [sp, #152]	; 0x98
 801dfd8:	9328      	str	r3, [sp, #160]	; 0xa0
 801dfda:	9329      	str	r3, [sp, #164]	; 0xa4
 801dfdc:	932a      	str	r3, [sp, #168]	; 0xa8
 801dfde:	932c      	str	r3, [sp, #176]	; 0xb0
 801dfe0:	932d      	str	r3, [sp, #180]	; 0xb4
 801dfe2:	932e      	str	r3, [sp, #184]	; 0xb8
 801dfe4:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 801dfe8:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 801dfec:	edcd 5a15 	vstr	s11, [sp, #84]	; 0x54
 801dff0:	ed8d 7a17 	vstr	s14, [sp, #92]	; 0x5c
 801dff4:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
 801dff8:	edcd 6a19 	vstr	s13, [sp, #100]	; 0x64
 801dffc:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 801e000:	ed8d 6a1c 	vstr	s12, [sp, #112]	; 0x70
 801e004:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 801e008:	ed8d 7a1f 	vstr	s14, [sp, #124]	; 0x7c
 801e00c:	edd4 8a12 	vldr	s17, [r4, #72]	; 0x48
 801e010:	ed94 8a13 	vldr	s16, [r4, #76]	; 0x4c
 801e014:	f001 fcc4 	bl	801f9a0 <_ZN8touchgfx9Matrix4x4C1Ev>
 801e018:	eeb1 0a49 	vneg.f32	s0, s18
 801e01c:	a830      	add	r0, sp, #192	; 0xc0
 801e01e:	f001 fd8f 	bl	801fb40 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 801e022:	eeb1 0a68 	vneg.f32	s0, s17
 801e026:	f001 fd99 	bl	801fb5c <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 801e02a:	eeb1 0a48 	vneg.f32	s0, s16
 801e02e:	f001 fda4 	bl	801fb7a <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 801e032:	a840      	add	r0, sp, #256	; 0x100
 801e034:	f001 fcb4 	bl	801f9a0 <_ZN8touchgfx9Matrix4x4C1Ev>
 801e038:	ed94 0a0d 	vldr	s0, [r4, #52]	; 0x34
 801e03c:	a840      	add	r0, sp, #256	; 0x100
 801e03e:	f001 fd03 	bl	801fa48 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>
 801e042:	ed94 0a0e 	vldr	s0, [r4, #56]	; 0x38
 801e046:	f001 fd29 	bl	801fa9c <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>
 801e04a:	ed94 0a0f 	vldr	s0, [r4, #60]	; 0x3c
 801e04e:	f001 fd4e 	bl	801faee <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>
 801e052:	a850      	add	r0, sp, #320	; 0x140
 801e054:	f001 fca4 	bl	801f9a0 <_ZN8touchgfx9Matrix4x4C1Ev>
 801e058:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 801e05c:	a850      	add	r0, sp, #320	; 0x140
 801e05e:	f001 fd9b 	bl	801fb98 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>
 801e062:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 801e066:	f001 fda3 	bl	801fbb0 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>
 801e06a:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 801e06e:	f001 fdac 	bl	801fbca <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>
 801e072:	a860      	add	r0, sp, #384	; 0x180
 801e074:	f001 fc94 	bl	801f9a0 <_ZN8touchgfx9Matrix4x4C1Ev>
 801e078:	eeb0 0a49 	vmov.f32	s0, s18
 801e07c:	a860      	add	r0, sp, #384	; 0x180
 801e07e:	f001 fd5f 	bl	801fb40 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 801e082:	eeb0 0a68 	vmov.f32	s0, s17
 801e086:	f001 fd69 	bl	801fb5c <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 801e08a:	eeb0 0a48 	vmov.f32	s0, s16
 801e08e:	f001 fd74 	bl	801fb7a <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 801e092:	aa50      	add	r2, sp, #320	; 0x140
 801e094:	a960      	add	r1, sp, #384	; 0x180
 801e096:	a8b0      	add	r0, sp, #704	; 0x2c0
 801e098:	f001 fc9a 	bl	801f9d0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 801e09c:	4628      	mov	r0, r5
 801e09e:	aa40      	add	r2, sp, #256	; 0x100
 801e0a0:	a9b0      	add	r1, sp, #704	; 0x2c0
 801e0a2:	f001 fc95 	bl	801f9d0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 801e0a6:	4629      	mov	r1, r5
 801e0a8:	aa30      	add	r2, sp, #192	; 0xc0
 801e0aa:	a870      	add	r0, sp, #448	; 0x1c0
 801e0ac:	f001 fc90 	bl	801f9d0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 801e0b0:	a880      	add	r0, sp, #512	; 0x200
 801e0b2:	f001 fc75 	bl	801f9a0 <_ZN8touchgfx9Matrix4x4C1Ev>
 801e0b6:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 801e0ba:	a880      	add	r0, sp, #512	; 0x200
 801e0bc:	eeb1 0a40 	vneg.f32	s0, s0
 801e0c0:	f001 fd3e 	bl	801fb40 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 801e0c4:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 801e0c8:	a880      	add	r0, sp, #512	; 0x200
 801e0ca:	eeb1 0a40 	vneg.f32	s0, s0
 801e0ce:	f001 fd45 	bl	801fb5c <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 801e0d2:	a890      	add	r0, sp, #576	; 0x240
 801e0d4:	f001 fc64 	bl	801f9a0 <_ZN8touchgfx9Matrix4x4C1Ev>
 801e0d8:	ed94 0a16 	vldr	s0, [r4, #88]	; 0x58
 801e0dc:	a890      	add	r0, sp, #576	; 0x240
 801e0de:	f001 fca3 	bl	801fa28 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>
 801e0e2:	a8a0      	add	r0, sp, #640	; 0x280
 801e0e4:	f001 fc5c 	bl	801f9a0 <_ZN8touchgfx9Matrix4x4C1Ev>
 801e0e8:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 801e0ec:	a8a0      	add	r0, sp, #640	; 0x280
 801e0ee:	f001 fd27 	bl	801fb40 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 801e0f2:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 801e0f6:	f001 fd31 	bl	801fb5c <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 801e0fa:	aa90      	add	r2, sp, #576	; 0x240
 801e0fc:	a9a0      	add	r1, sp, #640	; 0x280
 801e0fe:	a8b0      	add	r0, sp, #704	; 0x2c0
 801e100:	f001 fc66 	bl	801f9d0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 801e104:	4628      	mov	r0, r5
 801e106:	aa80      	add	r2, sp, #512	; 0x200
 801e108:	a9b0      	add	r1, sp, #704	; 0x2c0
 801e10a:	f001 fc61 	bl	801f9d0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 801e10e:	4629      	mov	r1, r5
 801e110:	466d      	mov	r5, sp
 801e112:	aa70      	add	r2, sp, #448	; 0x1c0
 801e114:	4668      	mov	r0, sp
 801e116:	f001 fc5b 	bl	801f9d0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 801e11a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 801e11c:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 801e11e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 801e120:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 801e122:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 801e124:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 801e126:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 801e12a:	2500      	movs	r5, #0
 801e12c:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 801e130:	0129      	lsls	r1, r5, #4
 801e132:	ab20      	add	r3, sp, #128	; 0x80
 801e134:	3501      	adds	r5, #1
 801e136:	a870      	add	r0, sp, #448	; 0x1c0
 801e138:	185e      	adds	r6, r3, r1
 801e13a:	ab10      	add	r3, sp, #64	; 0x40
 801e13c:	4419      	add	r1, r3
 801e13e:	f001 fbff 	bl	801f940 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>
 801e142:	2d04      	cmp	r5, #4
 801e144:	ed86 0a00 	vstr	s0, [r6]
 801e148:	edc6 0a01 	vstr	s1, [r6, #4]
 801e14c:	ed86 1a02 	vstr	s2, [r6, #8]
 801e150:	edc6 1a03 	vstr	s3, [r6, #12]
 801e154:	d1ec      	bne.n	801e130 <_ZN8touchgfx13TextureMapper19applyTransformationEv+0x1d8>
 801e156:	edd4 7a16 	vldr	s15, [r4, #88]	; 0x58
 801e15a:	eddd 6a20 	vldr	s13, [sp, #128]	; 0x80
 801e15e:	ed9d 7a22 	vldr	s14, [sp, #136]	; 0x88
 801e162:	ee67 6aa6 	vmul.f32	s13, s15, s13
 801e166:	ed84 7a19 	vstr	s14, [r4, #100]	; 0x64
 801e16a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 801e16e:	eddd 6a21 	vldr	s13, [sp, #132]	; 0x84
 801e172:	ee67 6aa6 	vmul.f32	s13, s15, s13
 801e176:	ed84 6a17 	vstr	s12, [r4, #92]	; 0x5c
 801e17a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 801e17e:	eddd 6a24 	vldr	s13, [sp, #144]	; 0x90
 801e182:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 801e186:	ed84 7a1c 	vstr	s14, [r4, #112]	; 0x70
 801e18a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 801e18e:	ed84 6a18 	vstr	s12, [r4, #96]	; 0x60
 801e192:	ee86 6a87 	vdiv.f32	s12, s13, s14
 801e196:	eddd 6a25 	vldr	s13, [sp, #148]	; 0x94
 801e19a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 801e19e:	ed84 6a1a 	vstr	s12, [r4, #104]	; 0x68
 801e1a2:	ee86 6a87 	vdiv.f32	s12, s13, s14
 801e1a6:	eddd 6a28 	vldr	s13, [sp, #160]	; 0xa0
 801e1aa:	ed9d 7a2a 	vldr	s14, [sp, #168]	; 0xa8
 801e1ae:	ed84 7a1f 	vstr	s14, [r4, #124]	; 0x7c
 801e1b2:	ee67 6aa6 	vmul.f32	s13, s15, s13
 801e1b6:	ed84 6a1b 	vstr	s12, [r4, #108]	; 0x6c
 801e1ba:	ee86 6a87 	vdiv.f32	s12, s13, s14
 801e1be:	eddd 6a29 	vldr	s13, [sp, #164]	; 0xa4
 801e1c2:	ee67 6aa6 	vmul.f32	s13, s15, s13
 801e1c6:	ed84 6a1d 	vstr	s12, [r4, #116]	; 0x74
 801e1ca:	ee86 6a87 	vdiv.f32	s12, s13, s14
 801e1ce:	eddd 6a2c 	vldr	s13, [sp, #176]	; 0xb0
 801e1d2:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 801e1d6:	ed84 7a22 	vstr	s14, [r4, #136]	; 0x88
 801e1da:	ee67 6aa6 	vmul.f32	s13, s15, s13
 801e1de:	ed84 6a1e 	vstr	s12, [r4, #120]	; 0x78
 801e1e2:	ee86 6a87 	vdiv.f32	s12, s13, s14
 801e1e6:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 801e1ea:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801e1ee:	eec7 6a87 	vdiv.f32	s13, s15, s14
 801e1f2:	ed84 6a20 	vstr	s12, [r4, #128]	; 0x80
 801e1f6:	edc4 6a21 	vstr	s13, [r4, #132]	; 0x84
 801e1fa:	f50d 7d50 	add.w	sp, sp, #832	; 0x340
 801e1fe:	ecbd 8b04 	vpop	{d8-d9}
 801e202:	bd70      	pop	{r4, r5, r6, pc}

0801e204 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>:
 801e204:	b510      	push	{r4, lr}
 801e206:	4604      	mov	r4, r0
 801e208:	f7f1 fdf5 	bl	800fdf6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 801e20c:	4620      	mov	r0, r4
 801e20e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e212:	f7ff bea1 	b.w	801df58 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0801e216 <_ZN8touchgfx13TextureMapper9setAnglesEfff>:
 801e216:	ed80 0a0d 	vstr	s0, [r0, #52]	; 0x34
 801e21a:	edc0 0a0e 	vstr	s1, [r0, #56]	; 0x38
 801e21e:	ed80 1a0f 	vstr	s2, [r0, #60]	; 0x3c
 801e222:	f7ff be99 	b.w	801df58 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0801e226 <_ZN8touchgfx13TextureMapper8setScaleEf>:
 801e226:	ed80 0a10 	vstr	s0, [r0, #64]	; 0x40
 801e22a:	f7ff be95 	b.w	801df58 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0801e22e <_ZN8touchgfx13TextureMapper17setBitmapPositionEff>:
 801e22e:	ed80 0a0b 	vstr	s0, [r0, #44]	; 0x2c
 801e232:	edc0 0a0c 	vstr	s1, [r0, #48]	; 0x30
 801e236:	f7ff be8f 	b.w	801df58 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0801e23a <_ZN8touchgfx13TextureMapper17setCameraDistanceEf>:
 801e23a:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 801e23e:	eeb4 0ae7 	vcmpe.f32	s0, s15
 801e242:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e246:	fe30 0a27 	vselgt.f32	s0, s0, s15
 801e24a:	ed80 0a16 	vstr	s0, [r0, #88]	; 0x58
 801e24e:	f7ff be83 	b.w	801df58 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0801e252 <_ZN8touchgfx13TextureMapper9setCameraEff>:
 801e252:	ed80 0a14 	vstr	s0, [r0, #80]	; 0x50
 801e256:	edc0 0a15 	vstr	s1, [r0, #84]	; 0x54
 801e25a:	f7ff be7d 	b.w	801df58 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0801e25e <_ZN8touchgfx13TextureMapper8setOrigoEff>:
 801e25e:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 801e262:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 801e266:	f7ff be77 	b.w	801df58 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0801e26a <_ZN8touchgfx13TextureMapper8setOrigoEfff>:
 801e26a:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 801e26e:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 801e272:	ed80 1a13 	vstr	s2, [r0, #76]	; 0x4c
 801e276:	f7ff be6f 	b.w	801df58 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0801e27a <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>:
 801e27a:	b510      	push	{r4, lr}
 801e27c:	edd1 5a1a 	vldr	s11, [r1, #104]	; 0x68
 801e280:	edd1 7a17 	vldr	s15, [r1, #92]	; 0x5c
 801e284:	ed91 6a1d 	vldr	s12, [r1, #116]	; 0x74
 801e288:	eef4 7ae5 	vcmpe.f32	s15, s11
 801e28c:	edd1 6a20 	vldr	s13, [r1, #128]	; 0x80
 801e290:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 801e294:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e298:	bf54      	ite	pl
 801e29a:	eeb0 7a65 	vmovpl.f32	s14, s11
 801e29e:	eeb0 7a67 	vmovmi.f32	s14, s15
 801e2a2:	eeb4 6ac7 	vcmpe.f32	s12, s14
 801e2a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e2aa:	fe37 7a06 	vselgt.f32	s14, s14, s12
 801e2ae:	eef4 6ac7 	vcmpe.f32	s13, s14
 801e2b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e2b6:	fe37 7a26 	vselgt.f32	s14, s14, s13
 801e2ba:	febb 7a47 	vrintm.f32	s14, s14
 801e2be:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801e2c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e2c6:	eef4 7ae5 	vcmpe.f32	s15, s11
 801e2ca:	bf56      	itet	pl
 801e2cc:	eebd 7ac7 	vcvtpl.s32.f32	s14, s14
 801e2d0:	2200      	movmi	r2, #0
 801e2d2:	ee17 3a10 	vmovpl	r3, s14
 801e2d6:	ee07 4a10 	vmov	s14, r4
 801e2da:	bf58      	it	pl
 801e2dc:	b21a      	sxthpl	r2, r3
 801e2de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e2e2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801e2e6:	8002      	strh	r2, [r0, #0]
 801e2e8:	fe77 7aa5 	vselgt.f32	s15, s15, s11
 801e2ec:	eeb4 6ae7 	vcmpe.f32	s12, s15
 801e2f0:	edd1 5a1b 	vldr	s11, [r1, #108]	; 0x6c
 801e2f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e2f8:	bf58      	it	pl
 801e2fa:	eef0 7a46 	vmovpl.f32	s15, s12
 801e2fe:	ed91 6a1e 	vldr	s12, [r1, #120]	; 0x78
 801e302:	eef4 6ae7 	vcmpe.f32	s13, s15
 801e306:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e30a:	bf58      	it	pl
 801e30c:	eef0 7a66 	vmovpl.f32	s15, s13
 801e310:	edd1 6a21 	vldr	s13, [r1, #132]	; 0x84
 801e314:	fefa 7a67 	vrintp.f32	s15, s15
 801e318:	eef4 7ac7 	vcmpe.f32	s15, s14
 801e31c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e320:	bfdc      	itt	le
 801e322:	eefd 7ae7 	vcvtle.s32.f32	s15, s15
 801e326:	ee17 3a90 	vmovle	r3, s15
 801e32a:	edd1 7a18 	vldr	s15, [r1, #96]	; 0x60
 801e32e:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 801e332:	eef4 7ae5 	vcmpe.f32	s15, s11
 801e336:	bfd8      	it	le
 801e338:	b21c      	sxthle	r4, r3
 801e33a:	1aa2      	subs	r2, r4, r2
 801e33c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e340:	8082      	strh	r2, [r0, #4]
 801e342:	bf54      	ite	pl
 801e344:	eeb0 7a65 	vmovpl.f32	s14, s11
 801e348:	eeb0 7a67 	vmovmi.f32	s14, s15
 801e34c:	eeb4 6ac7 	vcmpe.f32	s12, s14
 801e350:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e354:	fe37 7a06 	vselgt.f32	s14, s14, s12
 801e358:	eef4 6ac7 	vcmpe.f32	s13, s14
 801e35c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e360:	fe37 7a26 	vselgt.f32	s14, s14, s13
 801e364:	febb 7a47 	vrintm.f32	s14, s14
 801e368:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801e36c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e370:	eef4 7ae5 	vcmpe.f32	s15, s11
 801e374:	bf56      	itet	pl
 801e376:	eebd 7ac7 	vcvtpl.s32.f32	s14, s14
 801e37a:	2300      	movmi	r3, #0
 801e37c:	ee17 3a10 	vmovpl	r3, s14
 801e380:	ee07 1a10 	vmov	s14, r1
 801e384:	bf58      	it	pl
 801e386:	b21b      	sxthpl	r3, r3
 801e388:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e38c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801e390:	8043      	strh	r3, [r0, #2]
 801e392:	fe77 7aa5 	vselgt.f32	s15, s15, s11
 801e396:	eeb4 6ae7 	vcmpe.f32	s12, s15
 801e39a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e39e:	bf58      	it	pl
 801e3a0:	eef0 7a46 	vmovpl.f32	s15, s12
 801e3a4:	eef4 6ae7 	vcmpe.f32	s13, s15
 801e3a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e3ac:	bf58      	it	pl
 801e3ae:	eef0 7a66 	vmovpl.f32	s15, s13
 801e3b2:	fefa 7a67 	vrintp.f32	s15, s15
 801e3b6:	eef4 7ac7 	vcmpe.f32	s15, s14
 801e3ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e3be:	bfde      	ittt	le
 801e3c0:	eefd 7ae7 	vcvtle.s32.f32	s15, s15
 801e3c4:	ee17 1a90 	vmovle	r1, s15
 801e3c8:	b209      	sxthle	r1, r1
 801e3ca:	1acb      	subs	r3, r1, r3
 801e3cc:	80c3      	strh	r3, [r0, #6]
 801e3ce:	bd10      	pop	{r4, pc}

0801e3d0 <_ZNK8touchgfx13TextureMapper17invalidateContentEv>:
 801e3d0:	b513      	push	{r0, r1, r4, lr}
 801e3d2:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 801e3d6:	4604      	mov	r4, r0
 801e3d8:	b143      	cbz	r3, 801e3ec <_ZNK8touchgfx13TextureMapper17invalidateContentEv+0x1c>
 801e3da:	4601      	mov	r1, r0
 801e3dc:	4668      	mov	r0, sp
 801e3de:	f7ff ff4c 	bl	801e27a <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
 801e3e2:	6823      	ldr	r3, [r4, #0]
 801e3e4:	4669      	mov	r1, sp
 801e3e6:	4620      	mov	r0, r4
 801e3e8:	691b      	ldr	r3, [r3, #16]
 801e3ea:	4798      	blx	r3
 801e3ec:	b002      	add	sp, #8
 801e3ee:	bd10      	pop	{r4, pc}

0801e3f0 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>:
 801e3f0:	4603      	mov	r3, r0
 801e3f2:	3026      	adds	r0, #38	; 0x26
 801e3f4:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 801e3f8:	b90b      	cbnz	r3, 801e3fe <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv+0xe>
 801e3fa:	f7f4 bc60 	b.w	8012cbe <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 801e3fe:	f7f4 bc6e 	b.w	8012cde <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>
	...

0801e404 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 801e404:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e408:	4604      	mov	r4, r0
 801e40a:	469b      	mov	fp, r3
 801e40c:	ed2d 8b04 	vpush	{d8-d9}
 801e410:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 801e414:	b0b3      	sub	sp, #204	; 0xcc
 801e416:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 801e41a:	f9b1 6000 	ldrsh.w	r6, [r1]
 801e41e:	8888      	ldrh	r0, [r1, #4]
 801e420:	9206      	str	r2, [sp, #24]
 801e422:	2200      	movs	r2, #0
 801e424:	4430      	add	r0, r6
 801e426:	f8dd a100 	ldr.w	sl, [sp, #256]	; 0x100
 801e42a:	f8dd 9104 	ldr.w	r9, [sp, #260]	; 0x104
 801e42e:	b280      	uxth	r0, r0
 801e430:	f8dd 8108 	ldr.w	r8, [sp, #264]	; 0x108
 801e434:	9f43      	ldr	r7, [sp, #268]	; 0x10c
 801e436:	fa0f fe80 	sxth.w	lr, r0
 801e43a:	9211      	str	r2, [sp, #68]	; 0x44
 801e43c:	4596      	cmp	lr, r2
 801e43e:	f340 8129 	ble.w	801e694 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 801e442:	45b4      	cmp	ip, r6
 801e444:	f340 8126 	ble.w	801e694 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 801e448:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 801e44c:	88ca      	ldrh	r2, [r1, #6]
 801e44e:	442a      	add	r2, r5
 801e450:	b292      	uxth	r2, r2
 801e452:	b211      	sxth	r1, r2
 801e454:	2900      	cmp	r1, #0
 801e456:	f340 811d 	ble.w	801e694 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 801e45a:	42ab      	cmp	r3, r5
 801e45c:	f340 811a 	ble.w	801e694 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 801e460:	45f4      	cmp	ip, lr
 801e462:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 801e466:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801e46a:	bfb8      	it	lt
 801e46c:	fa1f f08c 	uxthlt.w	r0, ip
 801e470:	428b      	cmp	r3, r1
 801e472:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 801e476:	bfb8      	it	lt
 801e478:	b29a      	uxthlt	r2, r3
 801e47a:	1b80      	subs	r0, r0, r6
 801e47c:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 801e480:	1b52      	subs	r2, r2, r5
 801e482:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 801e486:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 801e48a:	ab11      	add	r3, sp, #68	; 0x44
 801e48c:	ad13      	add	r5, sp, #76	; 0x4c
 801e48e:	6822      	ldr	r2, [r4, #0]
 801e490:	1d26      	adds	r6, r4, #4
 801e492:	9307      	str	r3, [sp, #28]
 801e494:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 801e496:	e893 0003 	ldmia.w	r3, {r0, r1}
 801e49a:	e885 0003 	stmia.w	r5, {r0, r1}
 801e49e:	4629      	mov	r1, r5
 801e4a0:	4620      	mov	r0, r4
 801e4a2:	4790      	blx	r2
 801e4a4:	4621      	mov	r1, r4
 801e4a6:	a815      	add	r0, sp, #84	; 0x54
 801e4a8:	f7f4 fb64 	bl	8012b74 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801e4ac:	a815      	add	r0, sp, #84	; 0x54
 801e4ae:	f7f3 f8a9 	bl	8011604 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e4b2:	9b07      	ldr	r3, [sp, #28]
 801e4b4:	4631      	mov	r1, r6
 801e4b6:	4618      	mov	r0, r3
 801e4b8:	f7f3 f8e8 	bl	801168c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e4bc:	4628      	mov	r0, r5
 801e4be:	f104 0526 	add.w	r5, r4, #38	; 0x26
 801e4c2:	f7f3 f89f 	bl	8011604 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e4c6:	4628      	mov	r0, r5
 801e4c8:	f7f6 fe1e 	bl	8015108 <_ZNK8touchgfx6Bitmap7getDataEv>
 801e4cc:	9007      	str	r0, [sp, #28]
 801e4ce:	2800      	cmp	r0, #0
 801e4d0:	f000 80db 	beq.w	801e68a <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x286>
 801e4d4:	f8db 2000 	ldr.w	r2, [fp]
 801e4d8:	a90d      	add	r1, sp, #52	; 0x34
 801e4da:	a809      	add	r0, sp, #36	; 0x24
 801e4dc:	9209      	str	r2, [sp, #36]	; 0x24
 801e4de:	f8db 2004 	ldr.w	r2, [fp, #4]
 801e4e2:	920a      	str	r2, [sp, #40]	; 0x28
 801e4e4:	f8db 2008 	ldr.w	r2, [fp, #8]
 801e4e8:	920b      	str	r2, [sp, #44]	; 0x2c
 801e4ea:	f8db 200c 	ldr.w	r2, [fp, #12]
 801e4ee:	920c      	str	r2, [sp, #48]	; 0x30
 801e4f0:	f8da 2000 	ldr.w	r2, [sl]
 801e4f4:	920d      	str	r2, [sp, #52]	; 0x34
 801e4f6:	f8da 2004 	ldr.w	r2, [sl, #4]
 801e4fa:	920e      	str	r2, [sp, #56]	; 0x38
 801e4fc:	f8da 2008 	ldr.w	r2, [sl, #8]
 801e500:	920f      	str	r2, [sp, #60]	; 0x3c
 801e502:	f8da 200c 	ldr.w	r2, [sl, #12]
 801e506:	9210      	str	r2, [sp, #64]	; 0x40
 801e508:	4632      	mov	r2, r6
 801e50a:	f7f3 f8a3 	bl	8011654 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 801e50e:	4632      	mov	r2, r6
 801e510:	a90e      	add	r1, sp, #56	; 0x38
 801e512:	a80a      	add	r0, sp, #40	; 0x28
 801e514:	f7f3 f89e 	bl	8011654 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 801e518:	4632      	mov	r2, r6
 801e51a:	a90f      	add	r1, sp, #60	; 0x3c
 801e51c:	a80b      	add	r0, sp, #44	; 0x2c
 801e51e:	f7f3 f899 	bl	8011654 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 801e522:	4632      	mov	r2, r6
 801e524:	a910      	add	r1, sp, #64	; 0x40
 801e526:	a80c      	add	r0, sp, #48	; 0x30
 801e528:	f7f3 f894 	bl	8011654 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 801e52c:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 801e530:	edd7 4a00 	vldr	s9, [r7]
 801e534:	eef0 6a67 	vmov.f32	s13, s15
 801e538:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 801e53c:	edd7 5a01 	vldr	s11, [r7, #4]
 801e540:	eeb0 7a67 	vmov.f32	s14, s15
 801e544:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 801e548:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 801e54c:	ed98 4a00 	vldr	s8, [r8]
 801e550:	eeb0 6a67 	vmov.f32	s12, s15
 801e554:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 801e558:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 801e55c:	ed98 5a01 	vldr	s10, [r8, #4]
 801e560:	ed99 9a00 	vldr	s18, [r9]
 801e564:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 801e568:	ed99 8a01 	vldr	s16, [r9, #4]
 801e56c:	edd9 8a02 	vldr	s17, [r9, #8]
 801e570:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 801e574:	ee16 6a10 	vmov	r6, s12
 801e578:	eeb0 6a67 	vmov.f32	s12, s15
 801e57c:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 801e580:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 801e584:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 801e588:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 801e58c:	ed8d 4a21 	vstr	s8, [sp, #132]	; 0x84
 801e590:	edcd 4a22 	vstr	s9, [sp, #136]	; 0x88
 801e594:	ee16 0a10 	vmov	r0, s12
 801e598:	eeb0 6a67 	vmov.f32	s12, s15
 801e59c:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 801e5a0:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 801e5a4:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 801e5a8:	ed8d 5a26 	vstr	s10, [sp, #152]	; 0x98
 801e5ac:	edcd 5a27 	vstr	s11, [sp, #156]	; 0x9c
 801e5b0:	f8d7 a008 	ldr.w	sl, [r7, #8]
 801e5b4:	ee16 1a10 	vmov	r1, s12
 801e5b8:	eeb0 6a67 	vmov.f32	s12, s15
 801e5bc:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 801e5c0:	f8d8 b008 	ldr.w	fp, [r8, #8]
 801e5c4:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 801e5c8:	68ff      	ldr	r7, [r7, #12]
 801e5ca:	9624      	str	r6, [sp, #144]	; 0x90
 801e5cc:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 801e5d0:	ed8d 9a20 	vstr	s18, [sp, #128]	; 0x80
 801e5d4:	ee16 2a10 	vmov	r2, s12
 801e5d8:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 801e5dc:	ed8d 8a25 	vstr	s16, [sp, #148]	; 0x94
 801e5e0:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 801e5e4:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 801e5e8:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 801e5ec:	4628      	mov	r0, r5
 801e5ee:	edcd 8a2a 	vstr	s17, [sp, #168]	; 0xa8
 801e5f2:	9b06      	ldr	r3, [sp, #24]
 801e5f4:	922d      	str	r2, [sp, #180]	; 0xb4
 801e5f6:	4a29      	ldr	r2, [pc, #164]	; (801e69c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x298>)
 801e5f8:	9317      	str	r3, [sp, #92]	; 0x5c
 801e5fa:	8812      	ldrh	r2, [r2, #0]
 801e5fc:	9b07      	ldr	r3, [sp, #28]
 801e5fe:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 801e602:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 801e606:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 801e60a:	9218      	str	r2, [sp, #96]	; 0x60
 801e60c:	9319      	str	r3, [sp, #100]	; 0x64
 801e60e:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 801e612:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 801e616:	9731      	str	r7, [sp, #196]	; 0xc4
 801e618:	f7f6 fda8 	bl	801516c <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801e61c:	901a      	str	r0, [sp, #104]	; 0x68
 801e61e:	4628      	mov	r0, r5
 801e620:	f7f6 fc56 	bl	8014ed0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801e624:	901b      	str	r0, [sp, #108]	; 0x6c
 801e626:	4628      	mov	r0, r5
 801e628:	f7f6 fc96 	bl	8014f58 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801e62c:	901c      	str	r0, [sp, #112]	; 0x70
 801e62e:	4628      	mov	r0, r5
 801e630:	f7f6 fc4e 	bl	8014ed0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801e634:	eeb4 9a48 	vcmp.f32	s18, s16
 801e638:	901d      	str	r0, [sp, #116]	; 0x74
 801e63a:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 801e63e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e642:	d107      	bne.n	801e654 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x250>
 801e644:	eeb4 8a68 	vcmp.f32	s16, s17
 801e648:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801e64c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e650:	bf08      	it	eq
 801e652:	461e      	moveq	r6, r3
 801e654:	4b12      	ldr	r3, [pc, #72]	; (801e6a0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x29c>)
 801e656:	681b      	ldr	r3, [r3, #0]
 801e658:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 801e65c:	b10a      	cbz	r2, 801e662 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x25e>
 801e65e:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 801e660:	b905      	cbnz	r5, 801e664 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x260>
 801e662:	689d      	ldr	r5, [r3, #8]
 801e664:	682b      	ldr	r3, [r5, #0]
 801e666:	4620      	mov	r0, r4
 801e668:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 801e66a:	f7ff fec1 	bl	801e3f0 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>
 801e66e:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 801e672:	aa1e      	add	r2, sp, #120	; 0x78
 801e674:	9604      	str	r6, [sp, #16]
 801e676:	a917      	add	r1, sp, #92	; 0x5c
 801e678:	e9cd 0302 	strd	r0, r3, [sp, #8]
 801e67c:	ab13      	add	r3, sp, #76	; 0x4c
 801e67e:	4628      	mov	r0, r5
 801e680:	9301      	str	r3, [sp, #4]
 801e682:	ab15      	add	r3, sp, #84	; 0x54
 801e684:	9300      	str	r3, [sp, #0]
 801e686:	ab19      	add	r3, sp, #100	; 0x64
 801e688:	47b8      	blx	r7
 801e68a:	b033      	add	sp, #204	; 0xcc
 801e68c:	ecbd 8b04 	vpop	{d8-d9}
 801e690:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e694:	2300      	movs	r3, #0
 801e696:	9312      	str	r3, [sp, #72]	; 0x48
 801e698:	e6f7      	b.n	801e48a <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x86>
 801e69a:	bf00      	nop
 801e69c:	2400e0ae 	.word	0x2400e0ae
 801e6a0:	2400e0b4 	.word	0x2400e0b4

0801e6a4 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE>:
 801e6a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801e6a8:	ed2d 8b02 	vpush	{d8}
 801e6ac:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 801e6b0:	b098      	sub	sp, #96	; 0x60
 801e6b2:	4604      	mov	r4, r0
 801e6b4:	4688      	mov	r8, r1
 801e6b6:	2b00      	cmp	r3, #0
 801e6b8:	d077      	beq.n	801e7aa <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x106>
 801e6ba:	f100 0526 	add.w	r5, r0, #38	; 0x26
 801e6be:	4628      	mov	r0, r5
 801e6c0:	f7f6 fc06 	bl	8014ed0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801e6c4:	ee07 0a90 	vmov	s15, r0
 801e6c8:	4628      	mov	r0, r5
 801e6ca:	eeb8 8a67 	vcvt.f32.u32	s16, s15
 801e6ce:	f7f6 fc43 	bl	8014f58 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801e6d2:	4b4e      	ldr	r3, [pc, #312]	; (801e80c <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x168>)
 801e6d4:	ee07 0a90 	vmov	s15, r0
 801e6d8:	781b      	ldrb	r3, [r3, #0]
 801e6da:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 801e6de:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 801e6e2:	2b01      	cmp	r3, #1
 801e6e4:	d066      	beq.n	801e7b4 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x110>
 801e6e6:	eeb0 6a47 	vmov.f32	s12, s14
 801e6ea:	ee17 3a10 	vmov	r3, s14
 801e6ee:	eeb0 4a48 	vmov.f32	s8, s16
 801e6f2:	eeb0 7a48 	vmov.f32	s14, s16
 801e6f6:	eef0 4a67 	vmov.f32	s9, s15
 801e6fa:	eeb0 8a67 	vmov.f32	s16, s15
 801e6fe:	ed94 5a17 	vldr	s10, [r4, #92]	; 0x5c
 801e702:	edd4 5a18 	vldr	s11, [r4, #96]	; 0x60
 801e706:	ed94 3a1b 	vldr	s6, [r4, #108]	; 0x6c
 801e70a:	edd4 2a1d 	vldr	s5, [r4, #116]	; 0x74
 801e70e:	ee73 1a65 	vsub.f32	s3, s6, s11
 801e712:	ed94 2a1a 	vldr	s4, [r4, #104]	; 0x68
 801e716:	ee72 6ac5 	vsub.f32	s13, s5, s10
 801e71a:	edd4 3a1e 	vldr	s7, [r4, #120]	; 0x78
 801e71e:	ee32 1a45 	vsub.f32	s2, s4, s10
 801e722:	6f25      	ldr	r5, [r4, #112]	; 0x70
 801e724:	6e66      	ldr	r6, [r4, #100]	; 0x64
 801e726:	ee66 6ae1 	vnmul.f32	s13, s13, s3
 801e72a:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 801e72c:	ee73 1ae5 	vsub.f32	s3, s7, s11
 801e730:	f8d4 c080 	ldr.w	ip, [r4, #128]	; 0x80
 801e734:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
 801e738:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 801e73c:	eee1 6a21 	vfma.f32	s13, s2, s3
 801e740:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801e744:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e748:	dd3d      	ble.n	801e7c6 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x122>
 801e74a:	ed8d 5a04 	vstr	s10, [sp, #16]
 801e74e:	ed8d 2a05 	vstr	s4, [sp, #20]
 801e752:	edcd 2a06 	vstr	s5, [sp, #24]
 801e756:	f8cd c01c 	str.w	ip, [sp, #28]
 801e75a:	edcd 5a08 	vstr	s11, [sp, #32]
 801e75e:	ed8d 3a09 	vstr	s6, [sp, #36]	; 0x24
 801e762:	edcd 3a0a 	vstr	s7, [sp, #40]	; 0x28
 801e766:	970b      	str	r7, [sp, #44]	; 0x2c
 801e768:	960c      	str	r6, [sp, #48]	; 0x30
 801e76a:	950d      	str	r5, [sp, #52]	; 0x34
 801e76c:	920e      	str	r2, [sp, #56]	; 0x38
 801e76e:	900f      	str	r0, [sp, #60]	; 0x3c
 801e770:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 801e774:	ed8d 4a11 	vstr	s8, [sp, #68]	; 0x44
 801e778:	ed8d 7a12 	vstr	s14, [sp, #72]	; 0x48
 801e77c:	edcd 4a13 	vstr	s9, [sp, #76]	; 0x4c
 801e780:	ed8d 8a14 	vstr	s16, [sp, #80]	; 0x50
 801e784:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 801e788:	9316      	str	r3, [sp, #88]	; 0x58
 801e78a:	ed8d 6a17 	vstr	s12, [sp, #92]	; 0x5c
 801e78e:	ab14      	add	r3, sp, #80	; 0x50
 801e790:	2200      	movs	r2, #0
 801e792:	4641      	mov	r1, r8
 801e794:	4620      	mov	r0, r4
 801e796:	9303      	str	r3, [sp, #12]
 801e798:	ab10      	add	r3, sp, #64	; 0x40
 801e79a:	9302      	str	r3, [sp, #8]
 801e79c:	ab0c      	add	r3, sp, #48	; 0x30
 801e79e:	9301      	str	r3, [sp, #4]
 801e7a0:	ab08      	add	r3, sp, #32
 801e7a2:	9300      	str	r3, [sp, #0]
 801e7a4:	ab04      	add	r3, sp, #16
 801e7a6:	f7ff fe2d 	bl	801e404 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 801e7aa:	b018      	add	sp, #96	; 0x60
 801e7ac:	ecbd 8b02 	vpop	{d8}
 801e7b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801e7b4:	eeb0 6a48 	vmov.f32	s12, s16
 801e7b8:	ee17 3a90 	vmov	r3, s15
 801e7bc:	eef0 4a47 	vmov.f32	s9, s14
 801e7c0:	eeb0 4a67 	vmov.f32	s8, s15
 801e7c4:	e79b      	b.n	801e6fe <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x5a>
 801e7c6:	ed8d 5a05 	vstr	s10, [sp, #20]
 801e7ca:	ed8d 2a04 	vstr	s4, [sp, #16]
 801e7ce:	f8cd c018 	str.w	ip, [sp, #24]
 801e7d2:	edcd 2a07 	vstr	s5, [sp, #28]
 801e7d6:	edcd 5a09 	vstr	s11, [sp, #36]	; 0x24
 801e7da:	ed8d 3a08 	vstr	s6, [sp, #32]
 801e7de:	970a      	str	r7, [sp, #40]	; 0x28
 801e7e0:	edcd 3a0b 	vstr	s7, [sp, #44]	; 0x2c
 801e7e4:	960d      	str	r6, [sp, #52]	; 0x34
 801e7e6:	950c      	str	r5, [sp, #48]	; 0x30
 801e7e8:	900e      	str	r0, [sp, #56]	; 0x38
 801e7ea:	920f      	str	r2, [sp, #60]	; 0x3c
 801e7ec:	edcd 7a11 	vstr	s15, [sp, #68]	; 0x44
 801e7f0:	ed8d 4a10 	vstr	s8, [sp, #64]	; 0x40
 801e7f4:	edcd 4a12 	vstr	s9, [sp, #72]	; 0x48
 801e7f8:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 801e7fc:	ed8d 8a15 	vstr	s16, [sp, #84]	; 0x54
 801e800:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 801e804:	ed8d 6a16 	vstr	s12, [sp, #88]	; 0x58
 801e808:	9317      	str	r3, [sp, #92]	; 0x5c
 801e80a:	e7c0      	b.n	801e78e <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0xea>
 801e80c:	2400e0ac 	.word	0x2400e0ac

0801e810 <_ZN8touchgfx7OutlineD1Ev>:
 801e810:	4770      	bx	lr

0801e812 <_ZN8touchgfx7OutlineD0Ev>:
 801e812:	b510      	push	{r4, lr}
 801e814:	4604      	mov	r4, r0
 801e816:	2148      	movs	r1, #72	; 0x48
 801e818:	f001 f9e9 	bl	801fbee <_ZdlPvj>
 801e81c:	4620      	mov	r0, r4
 801e81e:	bd10      	pop	{r4, pc}

0801e820 <_ZN8touchgfx7Outline5resetEv>:
 801e820:	b510      	push	{r4, lr}
 801e822:	4604      	mov	r4, r0
 801e824:	f7f1 fc04 	bl	8010030 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 801e828:	60e0      	str	r0, [r4, #12]
 801e82a:	f7f1 fc07 	bl	801003c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 801e82e:	68e3      	ldr	r3, [r4, #12]
 801e830:	2200      	movs	r2, #0
 801e832:	08c0      	lsrs	r0, r0, #3
 801e834:	6123      	str	r3, [r4, #16]
 801e836:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801e83a:	6060      	str	r0, [r4, #4]
 801e83c:	82a3      	strh	r3, [r4, #20]
 801e83e:	82e3      	strh	r3, [r4, #22]
 801e840:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801e842:	60a2      	str	r2, [r4, #8]
 801e844:	f023 0301 	bic.w	r3, r3, #1
 801e848:	8322      	strh	r2, [r4, #24]
 801e84a:	8362      	strh	r2, [r4, #26]
 801e84c:	f043 0302 	orr.w	r3, r3, #2
 801e850:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 801e854:	63e3      	str	r3, [r4, #60]	; 0x3c
 801e856:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 801e85a:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 801e85e:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 801e862:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 801e866:	bd10      	pop	{r4, pc}

0801e868 <_ZN8touchgfx7OutlineC1Ev>:
 801e868:	4b0f      	ldr	r3, [pc, #60]	; (801e8a8 <_ZN8touchgfx7OutlineC1Ev+0x40>)
 801e86a:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
 801e86e:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
 801e872:	b510      	push	{r4, lr}
 801e874:	6003      	str	r3, [r0, #0]
 801e876:	2300      	movs	r3, #0
 801e878:	4604      	mov	r4, r0
 801e87a:	f880 3044 	strb.w	r3, [r0, #68]	; 0x44
 801e87e:	e9c0 3301 	strd	r3, r3, [r0, #4]
 801e882:	e9c0 3303 	strd	r3, r3, [r0, #12]
 801e886:	e9c0 3305 	strd	r3, r3, [r0, #20]
 801e88a:	e9c0 3307 	strd	r3, r3, [r0, #28]
 801e88e:	e9c0 3309 	strd	r3, r3, [r0, #36]	; 0x24
 801e892:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
 801e896:	e9c0 110d 	strd	r1, r1, [r0, #52]	; 0x34
 801e89a:	e9c0 320f 	strd	r3, r2, [r0, #60]	; 0x3c
 801e89e:	f7ff ffbf 	bl	801e820 <_ZN8touchgfx7Outline5resetEv>
 801e8a2:	4620      	mov	r0, r4
 801e8a4:	bd10      	pop	{r4, pc}
 801e8a6:	bf00      	nop
 801e8a8:	08025cc8 	.word	0x08025cc8

0801e8ac <_ZN8touchgfx7Outline10renderLineEiiii>:
 801e8ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e8b0:	b095      	sub	sp, #84	; 0x54
 801e8b2:	4604      	mov	r4, r0
 801e8b4:	1155      	asrs	r5, r2, #5
 801e8b6:	f002 061f 	and.w	r6, r2, #31
 801e8ba:	981e      	ldr	r0, [sp, #120]	; 0x78
 801e8bc:	1157      	asrs	r7, r2, #5
 801e8be:	9304      	str	r3, [sp, #16]
 801e8c0:	1153      	asrs	r3, r2, #5
 801e8c2:	9300      	str	r3, [sp, #0]
 801e8c4:	1143      	asrs	r3, r0, #5
 801e8c6:	930c      	str	r3, [sp, #48]	; 0x30
 801e8c8:	f000 031f 	and.w	r3, r0, #31
 801e8cc:	9303      	str	r3, [sp, #12]
 801e8ce:	6b23      	ldr	r3, [r4, #48]	; 0x30
 801e8d0:	42ab      	cmp	r3, r5
 801e8d2:	bfc8      	it	gt
 801e8d4:	462b      	movgt	r3, r5
 801e8d6:	ea4f 1562 	mov.w	r5, r2, asr #5
 801e8da:	bfc8      	it	gt
 801e8dc:	6323      	strgt	r3, [r4, #48]	; 0x30
 801e8de:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 801e8e0:	42ab      	cmp	r3, r5
 801e8e2:	bfd8      	it	le
 801e8e4:	462b      	movle	r3, r5
 801e8e6:	ea4f 1560 	mov.w	r5, r0, asr #5
 801e8ea:	bfdc      	itt	le
 801e8ec:	3301      	addle	r3, #1
 801e8ee:	63a3      	strle	r3, [r4, #56]	; 0x38
 801e8f0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 801e8f2:	42ab      	cmp	r3, r5
 801e8f4:	bfc8      	it	gt
 801e8f6:	462b      	movgt	r3, r5
 801e8f8:	ea4f 1560 	mov.w	r5, r0, asr #5
 801e8fc:	bfc8      	it	gt
 801e8fe:	6323      	strgt	r3, [r4, #48]	; 0x30
 801e900:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 801e902:	42ab      	cmp	r3, r5
 801e904:	bfd8      	it	le
 801e906:	462b      	movle	r3, r5
 801e908:	ea4f 1561 	mov.w	r5, r1, asr #5
 801e90c:	bfdc      	itt	le
 801e90e:	3301      	addle	r3, #1
 801e910:	63a3      	strle	r3, [r4, #56]	; 0x38
 801e912:	9b04      	ldr	r3, [sp, #16]
 801e914:	eba3 0a01 	sub.w	sl, r3, r1
 801e918:	1143      	asrs	r3, r0, #5
 801e91a:	429f      	cmp	r7, r3
 801e91c:	f040 811d 	bne.w	801eb5a <_ZN8touchgfx7Outline10renderLineEiiii+0x2ae>
 801e920:	9b04      	ldr	r3, [sp, #16]
 801e922:	ea4f 1b63 	mov.w	fp, r3, asr #5
 801e926:	9b03      	ldr	r3, [sp, #12]
 801e928:	429e      	cmp	r6, r3
 801e92a:	d131      	bne.n	801e990 <_ZN8touchgfx7Outline10renderLineEiiii+0xe4>
 801e92c:	f9b4 3016 	ldrsh.w	r3, [r4, #22]
 801e930:	fa0f fb8b 	sxth.w	fp, fp
 801e934:	f9bd 2000 	ldrsh.w	r2, [sp]
 801e938:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
 801e93c:	eb0b 4002 	add.w	r0, fp, r2, lsl #16
 801e940:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 801e944:	4281      	cmp	r1, r0
 801e946:	f000 80e6 	beq.w	801eb16 <_ZN8touchgfx7Outline10renderLineEiiii+0x26a>
 801e94a:	8b60      	ldrh	r0, [r4, #26]
 801e94c:	8b21      	ldrh	r1, [r4, #24]
 801e94e:	4301      	orrs	r1, r0
 801e950:	d00b      	beq.n	801e96a <_ZN8touchgfx7Outline10renderLineEiiii+0xbe>
 801e952:	2b00      	cmp	r3, #0
 801e954:	db09      	blt.n	801e96a <_ZN8touchgfx7Outline10renderLineEiiii+0xbe>
 801e956:	6c21      	ldr	r1, [r4, #64]	; 0x40
 801e958:	428b      	cmp	r3, r1
 801e95a:	da06      	bge.n	801e96a <_ZN8touchgfx7Outline10renderLineEiiii+0xbe>
 801e95c:	e9d4 3101 	ldrd	r3, r1, [r4, #4]
 801e960:	4299      	cmp	r1, r3
 801e962:	d308      	bcc.n	801e976 <_ZN8touchgfx7Outline10renderLineEiiii+0xca>
 801e964:	2301      	movs	r3, #1
 801e966:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 801e96a:	f8a4 b014 	strh.w	fp, [r4, #20]
 801e96e:	2300      	movs	r3, #0
 801e970:	82e2      	strh	r2, [r4, #22]
 801e972:	8323      	strh	r3, [r4, #24]
 801e974:	e01f      	b.n	801e9b6 <_ZN8touchgfx7Outline10renderLineEiiii+0x10a>
 801e976:	f104 0314 	add.w	r3, r4, #20
 801e97a:	6925      	ldr	r5, [r4, #16]
 801e97c:	cb03      	ldmia	r3!, {r0, r1}
 801e97e:	6028      	str	r0, [r5, #0]
 801e980:	6069      	str	r1, [r5, #4]
 801e982:	6923      	ldr	r3, [r4, #16]
 801e984:	3308      	adds	r3, #8
 801e986:	6123      	str	r3, [r4, #16]
 801e988:	68a3      	ldr	r3, [r4, #8]
 801e98a:	3301      	adds	r3, #1
 801e98c:	60a3      	str	r3, [r4, #8]
 801e98e:	e7ec      	b.n	801e96a <_ZN8touchgfx7Outline10renderLineEiiii+0xbe>
 801e990:	9b04      	ldr	r3, [sp, #16]
 801e992:	45ab      	cmp	fp, r5
 801e994:	f001 011f 	and.w	r1, r1, #31
 801e998:	8b20      	ldrh	r0, [r4, #24]
 801e99a:	f003 031f 	and.w	r3, r3, #31
 801e99e:	8b62      	ldrh	r2, [r4, #26]
 801e9a0:	9305      	str	r3, [sp, #20]
 801e9a2:	9b03      	ldr	r3, [sp, #12]
 801e9a4:	eba3 0306 	sub.w	r3, r3, r6
 801e9a8:	d107      	bne.n	801e9ba <_ZN8touchgfx7Outline10renderLineEiiii+0x10e>
 801e9aa:	4418      	add	r0, r3
 801e9ac:	8320      	strh	r0, [r4, #24]
 801e9ae:	9805      	ldr	r0, [sp, #20]
 801e9b0:	4401      	add	r1, r0
 801e9b2:	fb03 2301 	mla	r3, r3, r1, r2
 801e9b6:	8363      	strh	r3, [r4, #26]
 801e9b8:	e0ad      	b.n	801eb16 <_ZN8touchgfx7Outline10renderLineEiiii+0x26a>
 801e9ba:	f1ba 0f00 	cmp.w	sl, #0
 801e9be:	db33      	blt.n	801ea28 <_ZN8touchgfx7Outline10renderLineEiiii+0x17c>
 801e9c0:	2701      	movs	r7, #1
 801e9c2:	f1c1 0c20 	rsb	ip, r1, #32
 801e9c6:	9702      	str	r7, [sp, #8]
 801e9c8:	2720      	movs	r7, #32
 801e9ca:	fb03 f30c 	mul.w	r3, r3, ip
 801e9ce:	9701      	str	r7, [sp, #4]
 801e9d0:	9f01      	ldr	r7, [sp, #4]
 801e9d2:	f9b4 8016 	ldrsh.w	r8, [r4, #22]
 801e9d6:	4439      	add	r1, r7
 801e9d8:	fb93 fcfa 	sdiv	ip, r3, sl
 801e9dc:	fb0a 331c 	mls	r3, sl, ip, r3
 801e9e0:	2b00      	cmp	r3, #0
 801e9e2:	bfbc      	itt	lt
 801e9e4:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 801e9e8:	4453      	addlt	r3, sl
 801e9ea:	fb0c 2101 	mla	r1, ip, r1, r2
 801e9ee:	9a02      	ldr	r2, [sp, #8]
 801e9f0:	4460      	add	r0, ip
 801e9f2:	4415      	add	r5, r2
 801e9f4:	f9bd 2000 	ldrsh.w	r2, [sp]
 801e9f8:	b200      	sxth	r0, r0
 801e9fa:	0417      	lsls	r7, r2, #16
 801e9fc:	9200      	str	r2, [sp, #0]
 801e9fe:	fa0f fe85 	sxth.w	lr, r5
 801ea02:	8320      	strh	r0, [r4, #24]
 801ea04:	9704      	str	r7, [sp, #16]
 801ea06:	b209      	sxth	r1, r1
 801ea08:	f9b4 7014 	ldrsh.w	r7, [r4, #20]
 801ea0c:	9a04      	ldr	r2, [sp, #16]
 801ea0e:	eb07 4708 	add.w	r7, r7, r8, lsl #16
 801ea12:	8361      	strh	r1, [r4, #26]
 801ea14:	eb0e 0902 	add.w	r9, lr, r2
 801ea18:	454f      	cmp	r7, r9
 801ea1a:	d10d      	bne.n	801ea38 <_ZN8touchgfx7Outline10renderLineEiiii+0x18c>
 801ea1c:	4ba0      	ldr	r3, [pc, #640]	; (801eca0 <_ZN8touchgfx7Outline10renderLineEiiii+0x3f4>)
 801ea1e:	2176      	movs	r1, #118	; 0x76
 801ea20:	4aa0      	ldr	r2, [pc, #640]	; (801eca4 <_ZN8touchgfx7Outline10renderLineEiiii+0x3f8>)
 801ea22:	48a1      	ldr	r0, [pc, #644]	; (801eca8 <_ZN8touchgfx7Outline10renderLineEiiii+0x3fc>)
 801ea24:	f001 fadc 	bl	801ffe0 <__assert_func>
 801ea28:	f04f 37ff 	mov.w	r7, #4294967295
 801ea2c:	434b      	muls	r3, r1
 801ea2e:	f1ca 0a00 	rsb	sl, sl, #0
 801ea32:	9702      	str	r7, [sp, #8]
 801ea34:	2700      	movs	r7, #0
 801ea36:	e7ca      	b.n	801e9ce <_ZN8touchgfx7Outline10renderLineEiiii+0x122>
 801ea38:	ea50 0201 	orrs.w	r2, r0, r1
 801ea3c:	d00c      	beq.n	801ea58 <_ZN8touchgfx7Outline10renderLineEiiii+0x1ac>
 801ea3e:	f1b8 0f00 	cmp.w	r8, #0
 801ea42:	db09      	blt.n	801ea58 <_ZN8touchgfx7Outline10renderLineEiiii+0x1ac>
 801ea44:	6c21      	ldr	r1, [r4, #64]	; 0x40
 801ea46:	4588      	cmp	r8, r1
 801ea48:	da06      	bge.n	801ea58 <_ZN8touchgfx7Outline10renderLineEiiii+0x1ac>
 801ea4a:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 801ea4e:	4288      	cmp	r0, r1
 801ea50:	d364      	bcc.n	801eb1c <_ZN8touchgfx7Outline10renderLineEiiii+0x270>
 801ea52:	2101      	movs	r1, #1
 801ea54:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
 801ea58:	2100      	movs	r1, #0
 801ea5a:	9a00      	ldr	r2, [sp, #0]
 801ea5c:	45ab      	cmp	fp, r5
 801ea5e:	f8a4 e014 	strh.w	lr, [r4, #20]
 801ea62:	82e2      	strh	r2, [r4, #22]
 801ea64:	4466      	add	r6, ip
 801ea66:	8321      	strh	r1, [r4, #24]
 801ea68:	8361      	strh	r1, [r4, #26]
 801ea6a:	d04b      	beq.n	801eb04 <_ZN8touchgfx7Outline10renderLineEiiii+0x258>
 801ea6c:	9a03      	ldr	r2, [sp, #12]
 801ea6e:	eba3 030a 	sub.w	r3, r3, sl
 801ea72:	f04f 0800 	mov.w	r8, #0
 801ea76:	1b91      	subs	r1, r2, r6
 801ea78:	448c      	add	ip, r1
 801ea7a:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
 801ea7e:	fb9c f7fa 	sdiv	r7, ip, sl
 801ea82:	fb0a cc17 	mls	ip, sl, r7, ip
 801ea86:	f1bc 0f00 	cmp.w	ip, #0
 801ea8a:	bfbc      	itt	lt
 801ea8c:	f107 37ff 	addlt.w	r7, r7, #4294967295
 801ea90:	44d4      	addlt	ip, sl
 801ea92:	1c7a      	adds	r2, r7, #1
 801ea94:	9207      	str	r2, [sp, #28]
 801ea96:	eb13 030c 	adds.w	r3, r3, ip
 801ea9a:	9a02      	ldr	r2, [sp, #8]
 801ea9c:	bf54      	ite	pl
 801ea9e:	9807      	ldrpl	r0, [sp, #28]
 801eaa0:	4638      	movmi	r0, r7
 801eaa2:	4415      	add	r5, r2
 801eaa4:	9a04      	ldr	r2, [sp, #16]
 801eaa6:	fa0f fe80 	sxth.w	lr, r0
 801eaaa:	4406      	add	r6, r0
 801eaac:	ea4f 1140 	mov.w	r1, r0, lsl #5
 801eab0:	f9b4 0014 	ldrsh.w	r0, [r4, #20]
 801eab4:	fa0f f985 	sxth.w	r9, r5
 801eab8:	bf58      	it	pl
 801eaba:	eba3 030a 	subpl.w	r3, r3, sl
 801eabe:	4410      	add	r0, r2
 801eac0:	b209      	sxth	r1, r1
 801eac2:	444a      	add	r2, r9
 801eac4:	f8a4 e018 	strh.w	lr, [r4, #24]
 801eac8:	8361      	strh	r1, [r4, #26]
 801eaca:	4290      	cmp	r0, r2
 801eacc:	d0a6      	beq.n	801ea1c <_ZN8touchgfx7Outline10renderLineEiiii+0x170>
 801eace:	ea5e 0201 	orrs.w	r2, lr, r1
 801ead2:	d00d      	beq.n	801eaf0 <_ZN8touchgfx7Outline10renderLineEiiii+0x244>
 801ead4:	9a00      	ldr	r2, [sp, #0]
 801ead6:	2a00      	cmp	r2, #0
 801ead8:	db0a      	blt.n	801eaf0 <_ZN8touchgfx7Outline10renderLineEiiii+0x244>
 801eada:	6c21      	ldr	r1, [r4, #64]	; 0x40
 801eadc:	428a      	cmp	r2, r1
 801eade:	da07      	bge.n	801eaf0 <_ZN8touchgfx7Outline10renderLineEiiii+0x244>
 801eae0:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 801eae4:	4288      	cmp	r0, r1
 801eae6:	d329      	bcc.n	801eb3c <_ZN8touchgfx7Outline10renderLineEiiii+0x290>
 801eae8:	f04f 0201 	mov.w	r2, #1
 801eaec:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 801eaf0:	9a00      	ldr	r2, [sp, #0]
 801eaf2:	45ab      	cmp	fp, r5
 801eaf4:	f8a4 9014 	strh.w	r9, [r4, #20]
 801eaf8:	82e2      	strh	r2, [r4, #22]
 801eafa:	f8a4 8018 	strh.w	r8, [r4, #24]
 801eafe:	f8a4 801a 	strh.w	r8, [r4, #26]
 801eb02:	d1c8      	bne.n	801ea96 <_ZN8touchgfx7Outline10renderLineEiiii+0x1ea>
 801eb04:	9b03      	ldr	r3, [sp, #12]
 801eb06:	9a01      	ldr	r2, [sp, #4]
 801eb08:	1b9e      	subs	r6, r3, r6
 801eb0a:	9b05      	ldr	r3, [sp, #20]
 801eb0c:	3320      	adds	r3, #32
 801eb0e:	8326      	strh	r6, [r4, #24]
 801eb10:	1a9b      	subs	r3, r3, r2
 801eb12:	435e      	muls	r6, r3
 801eb14:	8366      	strh	r6, [r4, #26]
 801eb16:	b015      	add	sp, #84	; 0x54
 801eb18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801eb1c:	f104 0714 	add.w	r7, r4, #20
 801eb20:	f8d4 8010 	ldr.w	r8, [r4, #16]
 801eb24:	cf03      	ldmia	r7!, {r0, r1}
 801eb26:	f8c8 0000 	str.w	r0, [r8]
 801eb2a:	f8c8 1004 	str.w	r1, [r8, #4]
 801eb2e:	6921      	ldr	r1, [r4, #16]
 801eb30:	3108      	adds	r1, #8
 801eb32:	6121      	str	r1, [r4, #16]
 801eb34:	68a1      	ldr	r1, [r4, #8]
 801eb36:	3101      	adds	r1, #1
 801eb38:	60a1      	str	r1, [r4, #8]
 801eb3a:	e78d      	b.n	801ea58 <_ZN8touchgfx7Outline10renderLineEiiii+0x1ac>
 801eb3c:	f104 0e14 	add.w	lr, r4, #20
 801eb40:	6922      	ldr	r2, [r4, #16]
 801eb42:	e8be 0003 	ldmia.w	lr!, {r0, r1}
 801eb46:	9206      	str	r2, [sp, #24]
 801eb48:	6010      	str	r0, [r2, #0]
 801eb4a:	6051      	str	r1, [r2, #4]
 801eb4c:	6921      	ldr	r1, [r4, #16]
 801eb4e:	3108      	adds	r1, #8
 801eb50:	6121      	str	r1, [r4, #16]
 801eb52:	68a1      	ldr	r1, [r4, #8]
 801eb54:	3101      	adds	r1, #1
 801eb56:	60a1      	str	r1, [r4, #8]
 801eb58:	e7ca      	b.n	801eaf0 <_ZN8touchgfx7Outline10renderLineEiiii+0x244>
 801eb5a:	eba0 0b02 	sub.w	fp, r0, r2
 801eb5e:	f1ba 0f00 	cmp.w	sl, #0
 801eb62:	f040 80a3 	bne.w	801ecac <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
 801eb66:	f1bb 0f00 	cmp.w	fp, #0
 801eb6a:	ea4f 0141 	mov.w	r1, r1, lsl #1
 801eb6e:	8b62      	ldrh	r2, [r4, #26]
 801eb70:	b22d      	sxth	r5, r5
 801eb72:	bfa8      	it	ge
 801eb74:	f04f 0a20 	movge.w	sl, #32
 801eb78:	f001 033e 	and.w	r3, r1, #62	; 0x3e
 801eb7c:	8b21      	ldrh	r1, [r4, #24]
 801eb7e:	bfb8      	it	lt
 801eb80:	f04f 39ff 	movlt.w	r9, #4294967295
 801eb84:	ebaa 0606 	sub.w	r6, sl, r6
 801eb88:	bfa8      	it	ge
 801eb8a:	f04f 0901 	movge.w	r9, #1
 801eb8e:	f9b4 0016 	ldrsh.w	r0, [r4, #22]
 801eb92:	4431      	add	r1, r6
 801eb94:	fb06 2603 	mla	r6, r6, r3, r2
 801eb98:	9a00      	ldr	r2, [sp, #0]
 801eb9a:	f9b4 c014 	ldrsh.w	ip, [r4, #20]
 801eb9e:	b209      	sxth	r1, r1
 801eba0:	444a      	add	r2, r9
 801eba2:	b236      	sxth	r6, r6
 801eba4:	eb0c 4c00 	add.w	ip, ip, r0, lsl #16
 801eba8:	8321      	strh	r1, [r4, #24]
 801ebaa:	b217      	sxth	r7, r2
 801ebac:	8366      	strh	r6, [r4, #26]
 801ebae:	eb05 4e07 	add.w	lr, r5, r7, lsl #16
 801ebb2:	45f4      	cmp	ip, lr
 801ebb4:	f43f af32 	beq.w	801ea1c <_ZN8touchgfx7Outline10renderLineEiiii+0x170>
 801ebb8:	4331      	orrs	r1, r6
 801ebba:	d00b      	beq.n	801ebd4 <_ZN8touchgfx7Outline10renderLineEiiii+0x328>
 801ebbc:	2800      	cmp	r0, #0
 801ebbe:	db09      	blt.n	801ebd4 <_ZN8touchgfx7Outline10renderLineEiiii+0x328>
 801ebc0:	6c21      	ldr	r1, [r4, #64]	; 0x40
 801ebc2:	4288      	cmp	r0, r1
 801ebc4:	da06      	bge.n	801ebd4 <_ZN8touchgfx7Outline10renderLineEiiii+0x328>
 801ebc6:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 801ebca:	4288      	cmp	r0, r1
 801ebcc:	d33b      	bcc.n	801ec46 <_ZN8touchgfx7Outline10renderLineEiiii+0x39a>
 801ebce:	2101      	movs	r1, #1
 801ebd0:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
 801ebd4:	f1aa 0610 	sub.w	r6, sl, #16
 801ebd8:	82e7      	strh	r7, [r4, #22]
 801ebda:	2700      	movs	r7, #0
 801ebdc:	82a5      	strh	r5, [r4, #20]
 801ebde:	0076      	lsls	r6, r6, #1
 801ebe0:	8327      	strh	r7, [r4, #24]
 801ebe2:	fb06 fc03 	mul.w	ip, r6, r3
 801ebe6:	b236      	sxth	r6, r6
 801ebe8:	8367      	strh	r7, [r4, #26]
 801ebea:	fa0f fc8c 	sxth.w	ip, ip
 801ebee:	ea46 010c 	orr.w	r1, r6, ip
 801ebf2:	9100      	str	r1, [sp, #0]
 801ebf4:	990c      	ldr	r1, [sp, #48]	; 0x30
 801ebf6:	428a      	cmp	r2, r1
 801ebf8:	d046      	beq.n	801ec88 <_ZN8touchgfx7Outline10renderLineEiiii+0x3dc>
 801ebfa:	444a      	add	r2, r9
 801ebfc:	f9b4 1016 	ldrsh.w	r1, [r4, #22]
 801ec00:	f9b4 0014 	ldrsh.w	r0, [r4, #20]
 801ec04:	fa0f f882 	sxth.w	r8, r2
 801ec08:	8326      	strh	r6, [r4, #24]
 801ec0a:	eb00 4001 	add.w	r0, r0, r1, lsl #16
 801ec0e:	f8a4 c01a 	strh.w	ip, [r4, #26]
 801ec12:	eb05 4e08 	add.w	lr, r5, r8, lsl #16
 801ec16:	4570      	cmp	r0, lr
 801ec18:	f43f af00 	beq.w	801ea1c <_ZN8touchgfx7Outline10renderLineEiiii+0x170>
 801ec1c:	9800      	ldr	r0, [sp, #0]
 801ec1e:	b160      	cbz	r0, 801ec3a <_ZN8touchgfx7Outline10renderLineEiiii+0x38e>
 801ec20:	2900      	cmp	r1, #0
 801ec22:	db0a      	blt.n	801ec3a <_ZN8touchgfx7Outline10renderLineEiiii+0x38e>
 801ec24:	6c20      	ldr	r0, [r4, #64]	; 0x40
 801ec26:	4281      	cmp	r1, r0
 801ec28:	da07      	bge.n	801ec3a <_ZN8touchgfx7Outline10renderLineEiiii+0x38e>
 801ec2a:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 801ec2e:	4288      	cmp	r0, r1
 801ec30:	d319      	bcc.n	801ec66 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ba>
 801ec32:	f04f 0101 	mov.w	r1, #1
 801ec36:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
 801ec3a:	82a5      	strh	r5, [r4, #20]
 801ec3c:	f8a4 8016 	strh.w	r8, [r4, #22]
 801ec40:	8327      	strh	r7, [r4, #24]
 801ec42:	8367      	strh	r7, [r4, #26]
 801ec44:	e7d6      	b.n	801ebf4 <_ZN8touchgfx7Outline10renderLineEiiii+0x348>
 801ec46:	f104 0614 	add.w	r6, r4, #20
 801ec4a:	f8d4 c010 	ldr.w	ip, [r4, #16]
 801ec4e:	ce03      	ldmia	r6!, {r0, r1}
 801ec50:	f8cc 0000 	str.w	r0, [ip]
 801ec54:	f8cc 1004 	str.w	r1, [ip, #4]
 801ec58:	6921      	ldr	r1, [r4, #16]
 801ec5a:	3108      	adds	r1, #8
 801ec5c:	6121      	str	r1, [r4, #16]
 801ec5e:	68a1      	ldr	r1, [r4, #8]
 801ec60:	3101      	adds	r1, #1
 801ec62:	60a1      	str	r1, [r4, #8]
 801ec64:	e7b6      	b.n	801ebd4 <_ZN8touchgfx7Outline10renderLineEiiii+0x328>
 801ec66:	f104 0e14 	add.w	lr, r4, #20
 801ec6a:	f8d4 b010 	ldr.w	fp, [r4, #16]
 801ec6e:	e8be 0003 	ldmia.w	lr!, {r0, r1}
 801ec72:	f8cb 0000 	str.w	r0, [fp]
 801ec76:	f8cb 1004 	str.w	r1, [fp, #4]
 801ec7a:	6921      	ldr	r1, [r4, #16]
 801ec7c:	3108      	adds	r1, #8
 801ec7e:	6121      	str	r1, [r4, #16]
 801ec80:	68a1      	ldr	r1, [r4, #8]
 801ec82:	3101      	adds	r1, #1
 801ec84:	60a1      	str	r1, [r4, #8]
 801ec86:	e7d8      	b.n	801ec3a <_ZN8touchgfx7Outline10renderLineEiiii+0x38e>
 801ec88:	9a03      	ldr	r2, [sp, #12]
 801ec8a:	8b61      	ldrh	r1, [r4, #26]
 801ec8c:	f1a2 0e20 	sub.w	lr, r2, #32
 801ec90:	8b22      	ldrh	r2, [r4, #24]
 801ec92:	44d6      	add	lr, sl
 801ec94:	4472      	add	r2, lr
 801ec96:	fb0e 1303 	mla	r3, lr, r3, r1
 801ec9a:	8322      	strh	r2, [r4, #24]
 801ec9c:	e68b      	b.n	801e9b6 <_ZN8touchgfx7Outline10renderLineEiiii+0x10a>
 801ec9e:	bf00      	nop
 801eca0:	08025c50 	.word	0x08025c50
 801eca4:	08025cd0 	.word	0x08025cd0
 801eca8:	08025c81 	.word	0x08025c81
 801ecac:	f1bb 0f00 	cmp.w	fp, #0
 801ecb0:	f2c0 8124 	blt.w	801eefc <_ZN8touchgfx7Outline10renderLineEiiii+0x650>
 801ecb4:	2201      	movs	r2, #1
 801ecb6:	f1c6 0320 	rsb	r3, r6, #32
 801ecba:	920b      	str	r2, [sp, #44]	; 0x2c
 801ecbc:	2220      	movs	r2, #32
 801ecbe:	fb0a f303 	mul.w	r3, sl, r3
 801ecc2:	f9b4 8016 	ldrsh.w	r8, [r4, #22]
 801ecc6:	9202      	str	r2, [sp, #8]
 801ecc8:	fb93 fcfb 	sdiv	ip, r3, fp
 801eccc:	fb0b 331c 	mls	r3, fp, ip, r3
 801ecd0:	2b00      	cmp	r3, #0
 801ecd2:	9308      	str	r3, [sp, #32]
 801ecd4:	bfbe      	ittt	lt
 801ecd6:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 801ecda:	445b      	addlt	r3, fp
 801ecdc:	9308      	strlt	r3, [sp, #32]
 801ecde:	eb0c 0301 	add.w	r3, ip, r1
 801ece2:	9301      	str	r3, [sp, #4]
 801ece4:	115b      	asrs	r3, r3, #5
 801ece6:	9305      	str	r3, [sp, #20]
 801ece8:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 801ecec:	eb03 4308 	add.w	r3, r3, r8, lsl #16
 801ecf0:	461f      	mov	r7, r3
 801ecf2:	9b02      	ldr	r3, [sp, #8]
 801ecf4:	42b3      	cmp	r3, r6
 801ecf6:	f040 8117 	bne.w	801ef28 <_ZN8touchgfx7Outline10renderLineEiiii+0x67c>
 801ecfa:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 801ecfe:	f9bd 3000 	ldrsh.w	r3, [sp]
 801ed02:	eb02 4103 	add.w	r1, r2, r3, lsl #16
 801ed06:	42b9      	cmp	r1, r7
 801ed08:	d016      	beq.n	801ed38 <_ZN8touchgfx7Outline10renderLineEiiii+0x48c>
 801ed0a:	8b60      	ldrh	r0, [r4, #26]
 801ed0c:	8b21      	ldrh	r1, [r4, #24]
 801ed0e:	4301      	orrs	r1, r0
 801ed10:	d00d      	beq.n	801ed2e <_ZN8touchgfx7Outline10renderLineEiiii+0x482>
 801ed12:	f1b8 0f00 	cmp.w	r8, #0
 801ed16:	db0a      	blt.n	801ed2e <_ZN8touchgfx7Outline10renderLineEiiii+0x482>
 801ed18:	6c21      	ldr	r1, [r4, #64]	; 0x40
 801ed1a:	4541      	cmp	r1, r8
 801ed1c:	dd07      	ble.n	801ed2e <_ZN8touchgfx7Outline10renderLineEiiii+0x482>
 801ed1e:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 801ed22:	4288      	cmp	r0, r1
 801ed24:	f0c0 80f3 	bcc.w	801ef0e <_ZN8touchgfx7Outline10renderLineEiiii+0x662>
 801ed28:	2101      	movs	r1, #1
 801ed2a:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
 801ed2e:	82e3      	strh	r3, [r4, #22]
 801ed30:	2300      	movs	r3, #0
 801ed32:	82a2      	strh	r2, [r4, #20]
 801ed34:	8323      	strh	r3, [r4, #24]
 801ed36:	8363      	strh	r3, [r4, #26]
 801ed38:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ed3a:	9a00      	ldr	r2, [sp, #0]
 801ed3c:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
 801ed40:	441a      	add	r2, r3
 801ed42:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 801ed46:	4691      	mov	r9, r2
 801ed48:	f9b4 2016 	ldrsh.w	r2, [r4, #22]
 801ed4c:	fa0f f589 	sxth.w	r5, r9
 801ed50:	eb01 4102 	add.w	r1, r1, r2, lsl #16
 801ed54:	eb03 4005 	add.w	r0, r3, r5, lsl #16
 801ed58:	4281      	cmp	r1, r0
 801ed5a:	d015      	beq.n	801ed88 <_ZN8touchgfx7Outline10renderLineEiiii+0x4dc>
 801ed5c:	8b60      	ldrh	r0, [r4, #26]
 801ed5e:	8b21      	ldrh	r1, [r4, #24]
 801ed60:	4301      	orrs	r1, r0
 801ed62:	d00c      	beq.n	801ed7e <_ZN8touchgfx7Outline10renderLineEiiii+0x4d2>
 801ed64:	2a00      	cmp	r2, #0
 801ed66:	db0a      	blt.n	801ed7e <_ZN8touchgfx7Outline10renderLineEiiii+0x4d2>
 801ed68:	6c21      	ldr	r1, [r4, #64]	; 0x40
 801ed6a:	428a      	cmp	r2, r1
 801ed6c:	da07      	bge.n	801ed7e <_ZN8touchgfx7Outline10renderLineEiiii+0x4d2>
 801ed6e:	e9d4 2101 	ldrd	r2, r1, [r4, #4]
 801ed72:	4291      	cmp	r1, r2
 801ed74:	f0c0 81ae 	bcc.w	801f0d4 <_ZN8touchgfx7Outline10renderLineEiiii+0x828>
 801ed78:	2201      	movs	r2, #1
 801ed7a:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 801ed7e:	82a3      	strh	r3, [r4, #20]
 801ed80:	2300      	movs	r3, #0
 801ed82:	82e5      	strh	r5, [r4, #22]
 801ed84:	8323      	strh	r3, [r4, #24]
 801ed86:	8363      	strh	r3, [r4, #26]
 801ed88:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ed8a:	454b      	cmp	r3, r9
 801ed8c:	f000 808a 	beq.w	801eea4 <_ZN8touchgfx7Outline10renderLineEiiii+0x5f8>
 801ed90:	ea4f 134a 	mov.w	r3, sl, lsl #5
 801ed94:	fb93 f2fb 	sdiv	r2, r3, fp
 801ed98:	fb0b 3312 	mls	r3, fp, r2, r3
 801ed9c:	9205      	str	r2, [sp, #20]
 801ed9e:	2b00      	cmp	r3, #0
 801eda0:	9307      	str	r3, [sp, #28]
 801eda2:	da04      	bge.n	801edae <_ZN8touchgfx7Outline10renderLineEiiii+0x502>
 801eda4:	1e53      	subs	r3, r2, #1
 801eda6:	9305      	str	r3, [sp, #20]
 801eda8:	9b07      	ldr	r3, [sp, #28]
 801edaa:	445b      	add	r3, fp
 801edac:	9307      	str	r3, [sp, #28]
 801edae:	9b08      	ldr	r3, [sp, #32]
 801edb0:	f04f 0a00 	mov.w	sl, #0
 801edb4:	eba3 030b 	sub.w	r3, r3, fp
 801edb8:	9308      	str	r3, [sp, #32]
 801edba:	e9dd c301 	ldrd	ip, r3, [sp, #4]
 801edbe:	f1c3 0320 	rsb	r3, r3, #32
 801edc2:	930a      	str	r3, [sp, #40]	; 0x28
 801edc4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801edc6:	9b02      	ldr	r3, [sp, #8]
 801edc8:	1a9b      	subs	r3, r3, r2
 801edca:	9309      	str	r3, [sp, #36]	; 0x24
 801edcc:	9902      	ldr	r1, [sp, #8]
 801edce:	f9b4 6016 	ldrsh.w	r6, [r4, #22]
 801edd2:	f9b4 8014 	ldrsh.w	r8, [r4, #20]
 801edd6:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 801edda:	eb08 4806 	add.w	r8, r8, r6, lsl #16
 801edde:	189b      	adds	r3, r3, r2
 801ede0:	9308      	str	r3, [sp, #32]
 801ede2:	bf57      	itett	pl
 801ede4:	eba3 030b 	subpl.w	r3, r3, fp
 801ede8:	9b05      	ldrmi	r3, [sp, #20]
 801edea:	9308      	strpl	r3, [sp, #32]
 801edec:	9b05      	ldrpl	r3, [sp, #20]
 801edee:	bf58      	it	pl
 801edf0:	3301      	addpl	r3, #1
 801edf2:	9300      	str	r3, [sp, #0]
 801edf4:	e9dd 2300 	ldrd	r2, r3, [sp]
 801edf8:	4413      	add	r3, r2
 801edfa:	9301      	str	r3, [sp, #4]
 801edfc:	115b      	asrs	r3, r3, #5
 801edfe:	9306      	str	r3, [sp, #24]
 801ee00:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ee02:	428b      	cmp	r3, r1
 801ee04:	f040 8180 	bne.w	801f108 <_ZN8touchgfx7Outline10renderLineEiiii+0x85c>
 801ee08:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 801ee0c:	fa0f f389 	sxth.w	r3, r9
 801ee10:	eb02 4103 	add.w	r1, r2, r3, lsl #16
 801ee14:	4541      	cmp	r1, r8
 801ee16:	d017      	beq.n	801ee48 <_ZN8touchgfx7Outline10renderLineEiiii+0x59c>
 801ee18:	8b60      	ldrh	r0, [r4, #26]
 801ee1a:	8b21      	ldrh	r1, [r4, #24]
 801ee1c:	4301      	orrs	r1, r0
 801ee1e:	d00d      	beq.n	801ee3c <_ZN8touchgfx7Outline10renderLineEiiii+0x590>
 801ee20:	2e00      	cmp	r6, #0
 801ee22:	db0b      	blt.n	801ee3c <_ZN8touchgfx7Outline10renderLineEiiii+0x590>
 801ee24:	6c21      	ldr	r1, [r4, #64]	; 0x40
 801ee26:	42b1      	cmp	r1, r6
 801ee28:	dd08      	ble.n	801ee3c <_ZN8touchgfx7Outline10renderLineEiiii+0x590>
 801ee2a:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 801ee2e:	4288      	cmp	r0, r1
 801ee30:	f0c0 815d 	bcc.w	801f0ee <_ZN8touchgfx7Outline10renderLineEiiii+0x842>
 801ee34:	f04f 0101 	mov.w	r1, #1
 801ee38:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
 801ee3c:	82a2      	strh	r2, [r4, #20]
 801ee3e:	82e3      	strh	r3, [r4, #22]
 801ee40:	f8a4 a018 	strh.w	sl, [r4, #24]
 801ee44:	f8a4 a01a 	strh.w	sl, [r4, #26]
 801ee48:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ee4a:	f9b4 2016 	ldrsh.w	r2, [r4, #22]
 801ee4e:	4499      	add	r9, r3
 801ee50:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
 801ee54:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801ee58:	fa0f f589 	sxth.w	r5, r9
 801ee5c:	eb01 4102 	add.w	r1, r1, r2, lsl #16
 801ee60:	eb03 4005 	add.w	r0, r3, r5, lsl #16
 801ee64:	4281      	cmp	r1, r0
 801ee66:	f43f add9 	beq.w	801ea1c <_ZN8touchgfx7Outline10renderLineEiiii+0x170>
 801ee6a:	8b60      	ldrh	r0, [r4, #26]
 801ee6c:	8b21      	ldrh	r1, [r4, #24]
 801ee6e:	4301      	orrs	r1, r0
 801ee70:	d00d      	beq.n	801ee8e <_ZN8touchgfx7Outline10renderLineEiiii+0x5e2>
 801ee72:	2a00      	cmp	r2, #0
 801ee74:	db0b      	blt.n	801ee8e <_ZN8touchgfx7Outline10renderLineEiiii+0x5e2>
 801ee76:	6c21      	ldr	r1, [r4, #64]	; 0x40
 801ee78:	428a      	cmp	r2, r1
 801ee7a:	da08      	bge.n	801ee8e <_ZN8touchgfx7Outline10renderLineEiiii+0x5e2>
 801ee7c:	e9d4 2101 	ldrd	r2, r1, [r4, #4]
 801ee80:	4291      	cmp	r1, r2
 801ee82:	f0c0 8228 	bcc.w	801f2d6 <_ZN8touchgfx7Outline10renderLineEiiii+0xa2a>
 801ee86:	f04f 0201 	mov.w	r2, #1
 801ee8a:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 801ee8e:	82a3      	strh	r3, [r4, #20]
 801ee90:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ee92:	82e5      	strh	r5, [r4, #22]
 801ee94:	454b      	cmp	r3, r9
 801ee96:	f8a4 a018 	strh.w	sl, [r4, #24]
 801ee9a:	f8a4 a01a 	strh.w	sl, [r4, #26]
 801ee9e:	f8dd c004 	ldr.w	ip, [sp, #4]
 801eea2:	d193      	bne.n	801edcc <_ZN8touchgfx7Outline10renderLineEiiii+0x520>
 801eea4:	9b02      	ldr	r3, [sp, #8]
 801eea6:	f1c3 0e20 	rsb	lr, r3, #32
 801eeaa:	9b04      	ldr	r3, [sp, #16]
 801eeac:	ea4f 1b63 	mov.w	fp, r3, asr #5
 801eeb0:	9b03      	ldr	r3, [sp, #12]
 801eeb2:	459e      	cmp	lr, r3
 801eeb4:	f040 8229 	bne.w	801f30a <_ZN8touchgfx7Outline10renderLineEiiii+0xa5e>
 801eeb8:	f9b4 3016 	ldrsh.w	r3, [r4, #22]
 801eebc:	fa0f f58b 	sxth.w	r5, fp
 801eec0:	fa0f f289 	sxth.w	r2, r9
 801eec4:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
 801eec8:	eb05 4002 	add.w	r0, r5, r2, lsl #16
 801eecc:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 801eed0:	4281      	cmp	r1, r0
 801eed2:	f43f ae20 	beq.w	801eb16 <_ZN8touchgfx7Outline10renderLineEiiii+0x26a>
 801eed6:	8b60      	ldrh	r0, [r4, #26]
 801eed8:	8b21      	ldrh	r1, [r4, #24]
 801eeda:	4301      	orrs	r1, r0
 801eedc:	d00c      	beq.n	801eef8 <_ZN8touchgfx7Outline10renderLineEiiii+0x64c>
 801eede:	2b00      	cmp	r3, #0
 801eee0:	db0a      	blt.n	801eef8 <_ZN8touchgfx7Outline10renderLineEiiii+0x64c>
 801eee2:	6c21      	ldr	r1, [r4, #64]	; 0x40
 801eee4:	428b      	cmp	r3, r1
 801eee6:	da07      	bge.n	801eef8 <_ZN8touchgfx7Outline10renderLineEiiii+0x64c>
 801eee8:	e9d4 3101 	ldrd	r3, r1, [r4, #4]
 801eeec:	4299      	cmp	r1, r3
 801eeee:	f0c0 81ff 	bcc.w	801f2f0 <_ZN8touchgfx7Outline10renderLineEiiii+0xa44>
 801eef2:	2301      	movs	r3, #1
 801eef4:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 801eef8:	82a5      	strh	r5, [r4, #20]
 801eefa:	e538      	b.n	801e96e <_ZN8touchgfx7Outline10renderLineEiiii+0xc2>
 801eefc:	f04f 32ff 	mov.w	r2, #4294967295
 801ef00:	fb0a f306 	mul.w	r3, sl, r6
 801ef04:	f1cb 0b00 	rsb	fp, fp, #0
 801ef08:	920b      	str	r2, [sp, #44]	; 0x2c
 801ef0a:	2200      	movs	r2, #0
 801ef0c:	e6d9      	b.n	801ecc2 <_ZN8touchgfx7Outline10renderLineEiiii+0x416>
 801ef0e:	f104 0514 	add.w	r5, r4, #20
 801ef12:	6926      	ldr	r6, [r4, #16]
 801ef14:	cd03      	ldmia	r5!, {r0, r1}
 801ef16:	6030      	str	r0, [r6, #0]
 801ef18:	6071      	str	r1, [r6, #4]
 801ef1a:	6921      	ldr	r1, [r4, #16]
 801ef1c:	3108      	adds	r1, #8
 801ef1e:	6121      	str	r1, [r4, #16]
 801ef20:	68a1      	ldr	r1, [r4, #8]
 801ef22:	3101      	adds	r1, #1
 801ef24:	60a1      	str	r1, [r4, #8]
 801ef26:	e702      	b.n	801ed2e <_ZN8touchgfx7Outline10renderLineEiiii+0x482>
 801ef28:	9b01      	ldr	r3, [sp, #4]
 801ef2a:	f001 011f 	and.w	r1, r1, #31
 801ef2e:	8b20      	ldrh	r0, [r4, #24]
 801ef30:	f003 031f 	and.w	r3, r3, #31
 801ef34:	f8b4 901a 	ldrh.w	r9, [r4, #26]
 801ef38:	930d      	str	r3, [sp, #52]	; 0x34
 801ef3a:	9b02      	ldr	r3, [sp, #8]
 801ef3c:	1b9a      	subs	r2, r3, r6
 801ef3e:	9b05      	ldr	r3, [sp, #20]
 801ef40:	42ab      	cmp	r3, r5
 801ef42:	d107      	bne.n	801ef54 <_ZN8touchgfx7Outline10renderLineEiiii+0x6a8>
 801ef44:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ef46:	4410      	add	r0, r2
 801ef48:	4419      	add	r1, r3
 801ef4a:	8320      	strh	r0, [r4, #24]
 801ef4c:	fb02 9201 	mla	r2, r2, r1, r9
 801ef50:	8362      	strh	r2, [r4, #26]
 801ef52:	e6f1      	b.n	801ed38 <_ZN8touchgfx7Outline10renderLineEiiii+0x48c>
 801ef54:	f1bc 0f00 	cmp.w	ip, #0
 801ef58:	f2c0 8093 	blt.w	801f082 <_ZN8touchgfx7Outline10renderLineEiiii+0x7d6>
 801ef5c:	f1c1 0320 	rsb	r3, r1, #32
 801ef60:	435a      	muls	r2, r3
 801ef62:	2301      	movs	r3, #1
 801ef64:	9309      	str	r3, [sp, #36]	; 0x24
 801ef66:	2320      	movs	r3, #32
 801ef68:	9307      	str	r3, [sp, #28]
 801ef6a:	9b07      	ldr	r3, [sp, #28]
 801ef6c:	fb92 fefc 	sdiv	lr, r2, ip
 801ef70:	fb0c 221e 	mls	r2, ip, lr, r2
 801ef74:	4419      	add	r1, r3
 801ef76:	2a00      	cmp	r2, #0
 801ef78:	bfbc      	itt	lt
 801ef7a:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 801ef7e:	4462      	addlt	r2, ip
 801ef80:	fb0e 9101 	mla	r1, lr, r1, r9
 801ef84:	4470      	add	r0, lr
 801ef86:	b20b      	sxth	r3, r1
 801ef88:	9909      	ldr	r1, [sp, #36]	; 0x24
 801ef8a:	b200      	sxth	r0, r0
 801ef8c:	440d      	add	r5, r1
 801ef8e:	f9bd 1000 	ldrsh.w	r1, [sp]
 801ef92:	8320      	strh	r0, [r4, #24]
 801ef94:	fa0f f985 	sxth.w	r9, r5
 801ef98:	9106      	str	r1, [sp, #24]
 801ef9a:	0409      	lsls	r1, r1, #16
 801ef9c:	8363      	strh	r3, [r4, #26]
 801ef9e:	910a      	str	r1, [sp, #40]	; 0x28
 801efa0:	4449      	add	r1, r9
 801efa2:	42b9      	cmp	r1, r7
 801efa4:	f43f ad3a 	beq.w	801ea1c <_ZN8touchgfx7Outline10renderLineEiiii+0x170>
 801efa8:	4303      	orrs	r3, r0
 801efaa:	d00c      	beq.n	801efc6 <_ZN8touchgfx7Outline10renderLineEiiii+0x71a>
 801efac:	f1b8 0f00 	cmp.w	r8, #0
 801efb0:	db09      	blt.n	801efc6 <_ZN8touchgfx7Outline10renderLineEiiii+0x71a>
 801efb2:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801efb4:	4543      	cmp	r3, r8
 801efb6:	dd06      	ble.n	801efc6 <_ZN8touchgfx7Outline10renderLineEiiii+0x71a>
 801efb8:	e9d4 3101 	ldrd	r3, r1, [r4, #4]
 801efbc:	4299      	cmp	r1, r3
 801efbe:	d368      	bcc.n	801f092 <_ZN8touchgfx7Outline10renderLineEiiii+0x7e6>
 801efc0:	2301      	movs	r3, #1
 801efc2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 801efc6:	9b06      	ldr	r3, [sp, #24]
 801efc8:	4476      	add	r6, lr
 801efca:	f8a4 9014 	strh.w	r9, [r4, #20]
 801efce:	82e3      	strh	r3, [r4, #22]
 801efd0:	2300      	movs	r3, #0
 801efd2:	8323      	strh	r3, [r4, #24]
 801efd4:	8363      	strh	r3, [r4, #26]
 801efd6:	9b05      	ldr	r3, [sp, #20]
 801efd8:	42ab      	cmp	r3, r5
 801efda:	d048      	beq.n	801f06e <_ZN8touchgfx7Outline10renderLineEiiii+0x7c2>
 801efdc:	9b02      	ldr	r3, [sp, #8]
 801efde:	eba2 020c 	sub.w	r2, r2, ip
 801efe2:	1b9b      	subs	r3, r3, r6
 801efe4:	4473      	add	r3, lr
 801efe6:	015b      	lsls	r3, r3, #5
 801efe8:	fb93 f8fc 	sdiv	r8, r3, ip
 801efec:	fb0c 3318 	mls	r3, ip, r8, r3
 801eff0:	2b00      	cmp	r3, #0
 801eff2:	bfbc      	itt	lt
 801eff4:	f108 38ff 	addlt.w	r8, r8, #4294967295
 801eff8:	4463      	addlt	r3, ip
 801effa:	f108 0101 	add.w	r1, r8, #1
 801effe:	910f      	str	r1, [sp, #60]	; 0x3c
 801f000:	18d2      	adds	r2, r2, r3
 801f002:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801f004:	bf56      	itet	pl
 801f006:	980f      	ldrpl	r0, [sp, #60]	; 0x3c
 801f008:	4640      	movmi	r0, r8
 801f00a:	eba2 020c 	subpl.w	r2, r2, ip
 801f00e:	fa0f fe80 	sxth.w	lr, r0
 801f012:	4406      	add	r6, r0
 801f014:	0141      	lsls	r1, r0, #5
 801f016:	9809      	ldr	r0, [sp, #36]	; 0x24
 801f018:	f8a4 e018 	strh.w	lr, [r4, #24]
 801f01c:	4405      	add	r5, r0
 801f01e:	f9b4 0014 	ldrsh.w	r0, [r4, #20]
 801f022:	b209      	sxth	r1, r1
 801f024:	fa0f f985 	sxth.w	r9, r5
 801f028:	4438      	add	r0, r7
 801f02a:	8361      	strh	r1, [r4, #26]
 801f02c:	444f      	add	r7, r9
 801f02e:	42b8      	cmp	r0, r7
 801f030:	f43f acf4 	beq.w	801ea1c <_ZN8touchgfx7Outline10renderLineEiiii+0x170>
 801f034:	ea5e 0101 	orrs.w	r1, lr, r1
 801f038:	d00e      	beq.n	801f058 <_ZN8touchgfx7Outline10renderLineEiiii+0x7ac>
 801f03a:	9906      	ldr	r1, [sp, #24]
 801f03c:	2900      	cmp	r1, #0
 801f03e:	db0b      	blt.n	801f058 <_ZN8touchgfx7Outline10renderLineEiiii+0x7ac>
 801f040:	6c21      	ldr	r1, [r4, #64]	; 0x40
 801f042:	9806      	ldr	r0, [sp, #24]
 801f044:	4288      	cmp	r0, r1
 801f046:	da07      	bge.n	801f058 <_ZN8touchgfx7Outline10renderLineEiiii+0x7ac>
 801f048:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 801f04c:	4288      	cmp	r0, r1
 801f04e:	d330      	bcc.n	801f0b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x806>
 801f050:	f04f 0101 	mov.w	r1, #1
 801f054:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
 801f058:	9906      	ldr	r1, [sp, #24]
 801f05a:	f8a4 9014 	strh.w	r9, [r4, #20]
 801f05e:	82e1      	strh	r1, [r4, #22]
 801f060:	f04f 0100 	mov.w	r1, #0
 801f064:	8321      	strh	r1, [r4, #24]
 801f066:	8361      	strh	r1, [r4, #26]
 801f068:	9905      	ldr	r1, [sp, #20]
 801f06a:	42a9      	cmp	r1, r5
 801f06c:	d1c8      	bne.n	801f000 <_ZN8touchgfx7Outline10renderLineEiiii+0x754>
 801f06e:	9b02      	ldr	r3, [sp, #8]
 801f070:	990d      	ldr	r1, [sp, #52]	; 0x34
 801f072:	1b9e      	subs	r6, r3, r6
 801f074:	9b07      	ldr	r3, [sp, #28]
 801f076:	3120      	adds	r1, #32
 801f078:	8326      	strh	r6, [r4, #24]
 801f07a:	1ac9      	subs	r1, r1, r3
 801f07c:	434e      	muls	r6, r1
 801f07e:	8366      	strh	r6, [r4, #26]
 801f080:	e65a      	b.n	801ed38 <_ZN8touchgfx7Outline10renderLineEiiii+0x48c>
 801f082:	f04f 33ff 	mov.w	r3, #4294967295
 801f086:	434a      	muls	r2, r1
 801f088:	f1cc 0c00 	rsb	ip, ip, #0
 801f08c:	9309      	str	r3, [sp, #36]	; 0x24
 801f08e:	2300      	movs	r3, #0
 801f090:	e76a      	b.n	801ef68 <_ZN8touchgfx7Outline10renderLineEiiii+0x6bc>
 801f092:	f104 0314 	add.w	r3, r4, #20
 801f096:	f8d4 8010 	ldr.w	r8, [r4, #16]
 801f09a:	cb03      	ldmia	r3!, {r0, r1}
 801f09c:	f8c8 0000 	str.w	r0, [r8]
 801f0a0:	f8c8 1004 	str.w	r1, [r8, #4]
 801f0a4:	6923      	ldr	r3, [r4, #16]
 801f0a6:	3308      	adds	r3, #8
 801f0a8:	6123      	str	r3, [r4, #16]
 801f0aa:	68a3      	ldr	r3, [r4, #8]
 801f0ac:	3301      	adds	r3, #1
 801f0ae:	60a3      	str	r3, [r4, #8]
 801f0b0:	e789      	b.n	801efc6 <_ZN8touchgfx7Outline10renderLineEiiii+0x71a>
 801f0b2:	6921      	ldr	r1, [r4, #16]
 801f0b4:	f104 0e14 	add.w	lr, r4, #20
 801f0b8:	910e      	str	r1, [sp, #56]	; 0x38
 801f0ba:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801f0bc:	e8be 0003 	ldmia.w	lr!, {r0, r1}
 801f0c0:	6038      	str	r0, [r7, #0]
 801f0c2:	4638      	mov	r0, r7
 801f0c4:	6079      	str	r1, [r7, #4]
 801f0c6:	6921      	ldr	r1, [r4, #16]
 801f0c8:	3108      	adds	r1, #8
 801f0ca:	6121      	str	r1, [r4, #16]
 801f0cc:	68a1      	ldr	r1, [r4, #8]
 801f0ce:	3101      	adds	r1, #1
 801f0d0:	60a1      	str	r1, [r4, #8]
 801f0d2:	e7c1      	b.n	801f058 <_ZN8touchgfx7Outline10renderLineEiiii+0x7ac>
 801f0d4:	f104 0214 	add.w	r2, r4, #20
 801f0d8:	6926      	ldr	r6, [r4, #16]
 801f0da:	ca03      	ldmia	r2!, {r0, r1}
 801f0dc:	6030      	str	r0, [r6, #0]
 801f0de:	6071      	str	r1, [r6, #4]
 801f0e0:	6922      	ldr	r2, [r4, #16]
 801f0e2:	3208      	adds	r2, #8
 801f0e4:	6122      	str	r2, [r4, #16]
 801f0e6:	68a2      	ldr	r2, [r4, #8]
 801f0e8:	3201      	adds	r2, #1
 801f0ea:	60a2      	str	r2, [r4, #8]
 801f0ec:	e647      	b.n	801ed7e <_ZN8touchgfx7Outline10renderLineEiiii+0x4d2>
 801f0ee:	f104 0514 	add.w	r5, r4, #20
 801f0f2:	6926      	ldr	r6, [r4, #16]
 801f0f4:	cd03      	ldmia	r5!, {r0, r1}
 801f0f6:	6030      	str	r0, [r6, #0]
 801f0f8:	6071      	str	r1, [r6, #4]
 801f0fa:	6921      	ldr	r1, [r4, #16]
 801f0fc:	3108      	adds	r1, #8
 801f0fe:	6121      	str	r1, [r4, #16]
 801f100:	68a1      	ldr	r1, [r4, #8]
 801f102:	3101      	adds	r1, #1
 801f104:	60a1      	str	r1, [r4, #8]
 801f106:	e699      	b.n	801ee3c <_ZN8touchgfx7Outline10renderLineEiiii+0x590>
 801f108:	9b01      	ldr	r3, [sp, #4]
 801f10a:	ea4f 176c 	mov.w	r7, ip, asr #5
 801f10e:	8b20      	ldrh	r0, [r4, #24]
 801f110:	f00c 0c1f 	and.w	ip, ip, #31
 801f114:	f003 031f 	and.w	r3, r3, #31
 801f118:	f8b4 e01a 	ldrh.w	lr, [r4, #26]
 801f11c:	9310      	str	r3, [sp, #64]	; 0x40
 801f11e:	9b06      	ldr	r3, [sp, #24]
 801f120:	429f      	cmp	r7, r3
 801f122:	d10a      	bne.n	801f13a <_ZN8touchgfx7Outline10renderLineEiiii+0x88e>
 801f124:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f126:	4418      	add	r0, r3
 801f128:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f12a:	449c      	add	ip, r3
 801f12c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f12e:	8320      	strh	r0, [r4, #24]
 801f130:	fb03 ee0c 	mla	lr, r3, ip, lr
 801f134:	f8a4 e01a 	strh.w	lr, [r4, #26]
 801f138:	e686      	b.n	801ee48 <_ZN8touchgfx7Outline10renderLineEiiii+0x59c>
 801f13a:	9b00      	ldr	r3, [sp, #0]
 801f13c:	2b00      	cmp	r3, #0
 801f13e:	f2c0 80a0 	blt.w	801f282 <_ZN8touchgfx7Outline10renderLineEiiii+0x9d6>
 801f142:	9909      	ldr	r1, [sp, #36]	; 0x24
 801f144:	f1cc 0320 	rsb	r3, ip, #32
 801f148:	434b      	muls	r3, r1
 801f14a:	2101      	movs	r1, #1
 801f14c:	910e      	str	r1, [sp, #56]	; 0x38
 801f14e:	2120      	movs	r1, #32
 801f150:	9a00      	ldr	r2, [sp, #0]
 801f152:	910d      	str	r1, [sp, #52]	; 0x34
 801f154:	990d      	ldr	r1, [sp, #52]	; 0x34
 801f156:	fb93 f5f2 	sdiv	r5, r3, r2
 801f15a:	fb02 3315 	mls	r3, r2, r5, r3
 801f15e:	448c      	add	ip, r1
 801f160:	2b00      	cmp	r3, #0
 801f162:	bfbc      	itt	lt
 801f164:	f105 35ff 	addlt.w	r5, r5, #4294967295
 801f168:	189b      	addlt	r3, r3, r2
 801f16a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801f16c:	fb05 ec0c 	mla	ip, r5, ip, lr
 801f170:	4428      	add	r0, r5
 801f172:	4417      	add	r7, r2
 801f174:	fa0f f18c 	sxth.w	r1, ip
 801f178:	fa0f fc89 	sxth.w	ip, r9
 801f17c:	fa0f fe87 	sxth.w	lr, r7
 801f180:	8361      	strh	r1, [r4, #26]
 801f182:	ea4f 420c 	mov.w	r2, ip, lsl #16
 801f186:	b200      	sxth	r0, r0
 801f188:	920f      	str	r2, [sp, #60]	; 0x3c
 801f18a:	4472      	add	r2, lr
 801f18c:	8320      	strh	r0, [r4, #24]
 801f18e:	4542      	cmp	r2, r8
 801f190:	f43f ac44 	beq.w	801ea1c <_ZN8touchgfx7Outline10renderLineEiiii+0x170>
 801f194:	ea50 0201 	orrs.w	r2, r0, r1
 801f198:	d00c      	beq.n	801f1b4 <_ZN8touchgfx7Outline10renderLineEiiii+0x908>
 801f19a:	2e00      	cmp	r6, #0
 801f19c:	db0a      	blt.n	801f1b4 <_ZN8touchgfx7Outline10renderLineEiiii+0x908>
 801f19e:	6c21      	ldr	r1, [r4, #64]	; 0x40
 801f1a0:	42b1      	cmp	r1, r6
 801f1a2:	dd07      	ble.n	801f1b4 <_ZN8touchgfx7Outline10renderLineEiiii+0x908>
 801f1a4:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 801f1a8:	4288      	cmp	r0, r1
 801f1aa:	d375      	bcc.n	801f298 <_ZN8touchgfx7Outline10renderLineEiiii+0x9ec>
 801f1ac:	f04f 0201 	mov.w	r2, #1
 801f1b0:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 801f1b4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801f1b6:	f8a4 e014 	strh.w	lr, [r4, #20]
 801f1ba:	1956      	adds	r6, r2, r5
 801f1bc:	9a06      	ldr	r2, [sp, #24]
 801f1be:	f8a4 c016 	strh.w	ip, [r4, #22]
 801f1c2:	42ba      	cmp	r2, r7
 801f1c4:	f8a4 a018 	strh.w	sl, [r4, #24]
 801f1c8:	f8a4 a01a 	strh.w	sl, [r4, #26]
 801f1cc:	d04c      	beq.n	801f268 <_ZN8touchgfx7Outline10renderLineEiiii+0x9bc>
 801f1ce:	9a02      	ldr	r2, [sp, #8]
 801f1d0:	1b91      	subs	r1, r2, r6
 801f1d2:	9a00      	ldr	r2, [sp, #0]
 801f1d4:	440d      	add	r5, r1
 801f1d6:	016d      	lsls	r5, r5, #5
 801f1d8:	fb95 fef2 	sdiv	lr, r5, r2
 801f1dc:	fb02 551e 	mls	r5, r2, lr, r5
 801f1e0:	2d00      	cmp	r5, #0
 801f1e2:	bfbc      	itt	lt
 801f1e4:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 801f1e8:	18ad      	addlt	r5, r5, r2
 801f1ea:	9a00      	ldr	r2, [sp, #0]
 801f1ec:	1a9b      	subs	r3, r3, r2
 801f1ee:	f10e 0201 	add.w	r2, lr, #1
 801f1f2:	9213      	str	r2, [sp, #76]	; 0x4c
 801f1f4:	195b      	adds	r3, r3, r5
 801f1f6:	bf57      	itett	pl
 801f1f8:	9a00      	ldrpl	r2, [sp, #0]
 801f1fa:	4670      	movmi	r0, lr
 801f1fc:	9813      	ldrpl	r0, [sp, #76]	; 0x4c
 801f1fe:	1a9b      	subpl	r3, r3, r2
 801f200:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801f202:	fa0f f880 	sxth.w	r8, r0
 801f206:	4406      	add	r6, r0
 801f208:	4417      	add	r7, r2
 801f20a:	0141      	lsls	r1, r0, #5
 801f20c:	f9b4 0014 	ldrsh.w	r0, [r4, #20]
 801f210:	b23a      	sxth	r2, r7
 801f212:	f8a4 8018 	strh.w	r8, [r4, #24]
 801f216:	b209      	sxth	r1, r1
 801f218:	9211      	str	r2, [sp, #68]	; 0x44
 801f21a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f21c:	8361      	strh	r1, [r4, #26]
 801f21e:	1882      	adds	r2, r0, r2
 801f220:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801f222:	9212      	str	r2, [sp, #72]	; 0x48
 801f224:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801f226:	4402      	add	r2, r0
 801f228:	9812      	ldr	r0, [sp, #72]	; 0x48
 801f22a:	4290      	cmp	r0, r2
 801f22c:	f43f abf6 	beq.w	801ea1c <_ZN8touchgfx7Outline10renderLineEiiii+0x170>
 801f230:	ea58 0201 	orrs.w	r2, r8, r1
 801f234:	d00d      	beq.n	801f252 <_ZN8touchgfx7Outline10renderLineEiiii+0x9a6>
 801f236:	f1bc 0f00 	cmp.w	ip, #0
 801f23a:	db0a      	blt.n	801f252 <_ZN8touchgfx7Outline10renderLineEiiii+0x9a6>
 801f23c:	6c21      	ldr	r1, [r4, #64]	; 0x40
 801f23e:	458c      	cmp	ip, r1
 801f240:	da07      	bge.n	801f252 <_ZN8touchgfx7Outline10renderLineEiiii+0x9a6>
 801f242:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 801f246:	4288      	cmp	r0, r1
 801f248:	d336      	bcc.n	801f2b8 <_ZN8touchgfx7Outline10renderLineEiiii+0xa0c>
 801f24a:	f04f 0201 	mov.w	r2, #1
 801f24e:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 801f252:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801f254:	f8a4 c016 	strh.w	ip, [r4, #22]
 801f258:	82a2      	strh	r2, [r4, #20]
 801f25a:	9a06      	ldr	r2, [sp, #24]
 801f25c:	f8a4 a018 	strh.w	sl, [r4, #24]
 801f260:	42ba      	cmp	r2, r7
 801f262:	f8a4 a01a 	strh.w	sl, [r4, #26]
 801f266:	d1c5      	bne.n	801f1f4 <_ZN8touchgfx7Outline10renderLineEiiii+0x948>
 801f268:	9b02      	ldr	r3, [sp, #8]
 801f26a:	1b9e      	subs	r6, r3, r6
 801f26c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f26e:	f103 0c20 	add.w	ip, r3, #32
 801f272:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f274:	8326      	strh	r6, [r4, #24]
 801f276:	ebac 0c03 	sub.w	ip, ip, r3
 801f27a:	fb06 f60c 	mul.w	r6, r6, ip
 801f27e:	8366      	strh	r6, [r4, #26]
 801f280:	e5e2      	b.n	801ee48 <_ZN8touchgfx7Outline10renderLineEiiii+0x59c>
 801f282:	9a00      	ldr	r2, [sp, #0]
 801f284:	f04f 31ff 	mov.w	r1, #4294967295
 801f288:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f28a:	4252      	negs	r2, r2
 801f28c:	910e      	str	r1, [sp, #56]	; 0x38
 801f28e:	fb03 f30c 	mul.w	r3, r3, ip
 801f292:	2100      	movs	r1, #0
 801f294:	9200      	str	r2, [sp, #0]
 801f296:	e75b      	b.n	801f150 <_ZN8touchgfx7Outline10renderLineEiiii+0x8a4>
 801f298:	f104 0614 	add.w	r6, r4, #20
 801f29c:	f8d4 8010 	ldr.w	r8, [r4, #16]
 801f2a0:	ce03      	ldmia	r6!, {r0, r1}
 801f2a2:	f8c8 0000 	str.w	r0, [r8]
 801f2a6:	f8c8 1004 	str.w	r1, [r8, #4]
 801f2aa:	6921      	ldr	r1, [r4, #16]
 801f2ac:	3108      	adds	r1, #8
 801f2ae:	6121      	str	r1, [r4, #16]
 801f2b0:	68a1      	ldr	r1, [r4, #8]
 801f2b2:	3101      	adds	r1, #1
 801f2b4:	60a1      	str	r1, [r4, #8]
 801f2b6:	e77d      	b.n	801f1b4 <_ZN8touchgfx7Outline10renderLineEiiii+0x908>
 801f2b8:	f104 0814 	add.w	r8, r4, #20
 801f2bc:	6922      	ldr	r2, [r4, #16]
 801f2be:	e8b8 0003 	ldmia.w	r8!, {r0, r1}
 801f2c2:	9212      	str	r2, [sp, #72]	; 0x48
 801f2c4:	6010      	str	r0, [r2, #0]
 801f2c6:	6051      	str	r1, [r2, #4]
 801f2c8:	6921      	ldr	r1, [r4, #16]
 801f2ca:	3108      	adds	r1, #8
 801f2cc:	6121      	str	r1, [r4, #16]
 801f2ce:	68a1      	ldr	r1, [r4, #8]
 801f2d0:	3101      	adds	r1, #1
 801f2d2:	60a1      	str	r1, [r4, #8]
 801f2d4:	e7bd      	b.n	801f252 <_ZN8touchgfx7Outline10renderLineEiiii+0x9a6>
 801f2d6:	f104 0214 	add.w	r2, r4, #20
 801f2da:	6926      	ldr	r6, [r4, #16]
 801f2dc:	ca03      	ldmia	r2!, {r0, r1}
 801f2de:	6030      	str	r0, [r6, #0]
 801f2e0:	6071      	str	r1, [r6, #4]
 801f2e2:	6922      	ldr	r2, [r4, #16]
 801f2e4:	3208      	adds	r2, #8
 801f2e6:	6122      	str	r2, [r4, #16]
 801f2e8:	68a2      	ldr	r2, [r4, #8]
 801f2ea:	3201      	adds	r2, #1
 801f2ec:	60a2      	str	r2, [r4, #8]
 801f2ee:	e5ce      	b.n	801ee8e <_ZN8touchgfx7Outline10renderLineEiiii+0x5e2>
 801f2f0:	f104 0314 	add.w	r3, r4, #20
 801f2f4:	6926      	ldr	r6, [r4, #16]
 801f2f6:	cb03      	ldmia	r3!, {r0, r1}
 801f2f8:	6030      	str	r0, [r6, #0]
 801f2fa:	6071      	str	r1, [r6, #4]
 801f2fc:	6923      	ldr	r3, [r4, #16]
 801f2fe:	3308      	adds	r3, #8
 801f300:	6123      	str	r3, [r4, #16]
 801f302:	68a3      	ldr	r3, [r4, #8]
 801f304:	3301      	adds	r3, #1
 801f306:	60a3      	str	r3, [r4, #8]
 801f308:	e5f6      	b.n	801eef8 <_ZN8touchgfx7Outline10renderLineEiiii+0x64c>
 801f30a:	9b01      	ldr	r3, [sp, #4]
 801f30c:	8b20      	ldrh	r0, [r4, #24]
 801f30e:	ea4f 1c63 	mov.w	ip, r3, asr #5
 801f312:	f003 021f 	and.w	r2, r3, #31
 801f316:	9b04      	ldr	r3, [sp, #16]
 801f318:	45dc      	cmp	ip, fp
 801f31a:	8b66      	ldrh	r6, [r4, #26]
 801f31c:	f003 031f 	and.w	r3, r3, #31
 801f320:	9305      	str	r3, [sp, #20]
 801f322:	9b03      	ldr	r3, [sp, #12]
 801f324:	eba3 050e 	sub.w	r5, r3, lr
 801f328:	d108      	bne.n	801f33c <_ZN8touchgfx7Outline10renderLineEiiii+0xa90>
 801f32a:	9b05      	ldr	r3, [sp, #20]
 801f32c:	4428      	add	r0, r5
 801f32e:	441a      	add	r2, r3
 801f330:	8320      	strh	r0, [r4, #24]
 801f332:	fb05 6502 	mla	r5, r5, r2, r6
 801f336:	8365      	strh	r5, [r4, #26]
 801f338:	f7ff bbed 	b.w	801eb16 <_ZN8touchgfx7Outline10renderLineEiiii+0x26a>
 801f33c:	9b04      	ldr	r3, [sp, #16]
 801f33e:	9901      	ldr	r1, [sp, #4]
 801f340:	1a5b      	subs	r3, r3, r1
 801f342:	9300      	str	r3, [sp, #0]
 801f344:	f100 809c 	bmi.w	801f480 <_ZN8touchgfx7Outline10renderLineEiiii+0xbd4>
 801f348:	f1c2 0120 	rsb	r1, r2, #32
 801f34c:	434d      	muls	r5, r1
 801f34e:	2101      	movs	r1, #1
 801f350:	9102      	str	r1, [sp, #8]
 801f352:	2120      	movs	r1, #32
 801f354:	9b00      	ldr	r3, [sp, #0]
 801f356:	9101      	str	r1, [sp, #4]
 801f358:	9901      	ldr	r1, [sp, #4]
 801f35a:	fb95 f7f3 	sdiv	r7, r5, r3
 801f35e:	fb03 5517 	mls	r5, r3, r7, r5
 801f362:	440a      	add	r2, r1
 801f364:	2d00      	cmp	r5, #0
 801f366:	bfbc      	itt	lt
 801f368:	f107 37ff 	addlt.w	r7, r7, #4294967295
 801f36c:	18ed      	addlt	r5, r5, r3
 801f36e:	fb07 6202 	mla	r2, r7, r2, r6
 801f372:	f9b4 6016 	ldrsh.w	r6, [r4, #22]
 801f376:	4438      	add	r0, r7
 801f378:	b211      	sxth	r1, r2
 801f37a:	9a02      	ldr	r2, [sp, #8]
 801f37c:	b200      	sxth	r0, r0
 801f37e:	4494      	add	ip, r2
 801f380:	fa0f f289 	sxth.w	r2, r9
 801f384:	f9b4 9014 	ldrsh.w	r9, [r4, #20]
 801f388:	0413      	lsls	r3, r2, #16
 801f38a:	8320      	strh	r0, [r4, #24]
 801f38c:	fa0f f88c 	sxth.w	r8, ip
 801f390:	8361      	strh	r1, [r4, #26]
 801f392:	eb09 4906 	add.w	r9, r9, r6, lsl #16
 801f396:	9304      	str	r3, [sp, #16]
 801f398:	eb08 0a03 	add.w	sl, r8, r3
 801f39c:	45d1      	cmp	r9, sl
 801f39e:	f43f ab3d 	beq.w	801ea1c <_ZN8touchgfx7Outline10renderLineEiiii+0x170>
 801f3a2:	ea50 0301 	orrs.w	r3, r0, r1
 801f3a6:	d00b      	beq.n	801f3c0 <_ZN8touchgfx7Outline10renderLineEiiii+0xb14>
 801f3a8:	2e00      	cmp	r6, #0
 801f3aa:	db09      	blt.n	801f3c0 <_ZN8touchgfx7Outline10renderLineEiiii+0xb14>
 801f3ac:	6c21      	ldr	r1, [r4, #64]	; 0x40
 801f3ae:	428e      	cmp	r6, r1
 801f3b0:	da06      	bge.n	801f3c0 <_ZN8touchgfx7Outline10renderLineEiiii+0xb14>
 801f3b2:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 801f3b6:	4288      	cmp	r0, r1
 801f3b8:	d36b      	bcc.n	801f492 <_ZN8touchgfx7Outline10renderLineEiiii+0xbe6>
 801f3ba:	2101      	movs	r1, #1
 801f3bc:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
 801f3c0:	2100      	movs	r1, #0
 801f3c2:	45e3      	cmp	fp, ip
 801f3c4:	f8a4 8014 	strh.w	r8, [r4, #20]
 801f3c8:	44be      	add	lr, r7
 801f3ca:	82e2      	strh	r2, [r4, #22]
 801f3cc:	8321      	strh	r1, [r4, #24]
 801f3ce:	8361      	strh	r1, [r4, #26]
 801f3d0:	d047      	beq.n	801f462 <_ZN8touchgfx7Outline10renderLineEiiii+0xbb6>
 801f3d2:	9b03      	ldr	r3, [sp, #12]
 801f3d4:	f04f 0900 	mov.w	r9, #0
 801f3d8:	eba3 060e 	sub.w	r6, r3, lr
 801f3dc:	9b00      	ldr	r3, [sp, #0]
 801f3de:	443e      	add	r6, r7
 801f3e0:	0176      	lsls	r6, r6, #5
 801f3e2:	fb96 f7f3 	sdiv	r7, r6, r3
 801f3e6:	fb03 6617 	mls	r6, r3, r7, r6
 801f3ea:	428e      	cmp	r6, r1
 801f3ec:	bfbc      	itt	lt
 801f3ee:	f107 37ff 	addlt.w	r7, r7, #4294967295
 801f3f2:	18f6      	addlt	r6, r6, r3
 801f3f4:	9b00      	ldr	r3, [sp, #0]
 801f3f6:	1aed      	subs	r5, r5, r3
 801f3f8:	1c7b      	adds	r3, r7, #1
 801f3fa:	9307      	str	r3, [sp, #28]
 801f3fc:	19ad      	adds	r5, r5, r6
 801f3fe:	bf57      	itett	pl
 801f400:	9b00      	ldrpl	r3, [sp, #0]
 801f402:	4638      	movmi	r0, r7
 801f404:	9807      	ldrpl	r0, [sp, #28]
 801f406:	1aed      	subpl	r5, r5, r3
 801f408:	9b02      	ldr	r3, [sp, #8]
 801f40a:	fa0f f880 	sxth.w	r8, r0
 801f40e:	4486      	add	lr, r0
 801f410:	449c      	add	ip, r3
 801f412:	0141      	lsls	r1, r0, #5
 801f414:	9b04      	ldr	r3, [sp, #16]
 801f416:	fa0f fa8c 	sxth.w	sl, ip
 801f41a:	f9b4 0014 	ldrsh.w	r0, [r4, #20]
 801f41e:	b209      	sxth	r1, r1
 801f420:	f8a4 8018 	strh.w	r8, [r4, #24]
 801f424:	4418      	add	r0, r3
 801f426:	4453      	add	r3, sl
 801f428:	8361      	strh	r1, [r4, #26]
 801f42a:	4298      	cmp	r0, r3
 801f42c:	f43f aaf6 	beq.w	801ea1c <_ZN8touchgfx7Outline10renderLineEiiii+0x170>
 801f430:	ea58 0301 	orrs.w	r3, r8, r1
 801f434:	d00c      	beq.n	801f450 <_ZN8touchgfx7Outline10renderLineEiiii+0xba4>
 801f436:	2a00      	cmp	r2, #0
 801f438:	db0a      	blt.n	801f450 <_ZN8touchgfx7Outline10renderLineEiiii+0xba4>
 801f43a:	6c21      	ldr	r1, [r4, #64]	; 0x40
 801f43c:	428a      	cmp	r2, r1
 801f43e:	da07      	bge.n	801f450 <_ZN8touchgfx7Outline10renderLineEiiii+0xba4>
 801f440:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 801f444:	4288      	cmp	r0, r1
 801f446:	d334      	bcc.n	801f4b2 <_ZN8touchgfx7Outline10renderLineEiiii+0xc06>
 801f448:	f04f 0301 	mov.w	r3, #1
 801f44c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 801f450:	45e3      	cmp	fp, ip
 801f452:	f8a4 a014 	strh.w	sl, [r4, #20]
 801f456:	82e2      	strh	r2, [r4, #22]
 801f458:	f8a4 9018 	strh.w	r9, [r4, #24]
 801f45c:	f8a4 901a 	strh.w	r9, [r4, #26]
 801f460:	d1cc      	bne.n	801f3fc <_ZN8touchgfx7Outline10renderLineEiiii+0xb50>
 801f462:	9b03      	ldr	r3, [sp, #12]
 801f464:	9e05      	ldr	r6, [sp, #20]
 801f466:	eba3 0e0e 	sub.w	lr, r3, lr
 801f46a:	9b01      	ldr	r3, [sp, #4]
 801f46c:	3620      	adds	r6, #32
 801f46e:	f8a4 e018 	strh.w	lr, [r4, #24]
 801f472:	1af6      	subs	r6, r6, r3
 801f474:	fb0e fe06 	mul.w	lr, lr, r6
 801f478:	f8a4 e01a 	strh.w	lr, [r4, #26]
 801f47c:	f7ff bb4b 	b.w	801eb16 <_ZN8touchgfx7Outline10renderLineEiiii+0x26a>
 801f480:	9b00      	ldr	r3, [sp, #0]
 801f482:	f04f 31ff 	mov.w	r1, #4294967295
 801f486:	4355      	muls	r5, r2
 801f488:	425b      	negs	r3, r3
 801f48a:	9102      	str	r1, [sp, #8]
 801f48c:	2100      	movs	r1, #0
 801f48e:	9300      	str	r3, [sp, #0]
 801f490:	e760      	b.n	801f354 <_ZN8touchgfx7Outline10renderLineEiiii+0xaa8>
 801f492:	f104 0614 	add.w	r6, r4, #20
 801f496:	f8d4 9010 	ldr.w	r9, [r4, #16]
 801f49a:	ce03      	ldmia	r6!, {r0, r1}
 801f49c:	f8c9 0000 	str.w	r0, [r9]
 801f4a0:	f8c9 1004 	str.w	r1, [r9, #4]
 801f4a4:	6921      	ldr	r1, [r4, #16]
 801f4a6:	3108      	adds	r1, #8
 801f4a8:	6121      	str	r1, [r4, #16]
 801f4aa:	68a1      	ldr	r1, [r4, #8]
 801f4ac:	3101      	adds	r1, #1
 801f4ae:	60a1      	str	r1, [r4, #8]
 801f4b0:	e786      	b.n	801f3c0 <_ZN8touchgfx7Outline10renderLineEiiii+0xb14>
 801f4b2:	f104 0814 	add.w	r8, r4, #20
 801f4b6:	6923      	ldr	r3, [r4, #16]
 801f4b8:	e8b8 0003 	ldmia.w	r8!, {r0, r1}
 801f4bc:	9306      	str	r3, [sp, #24]
 801f4be:	6018      	str	r0, [r3, #0]
 801f4c0:	6059      	str	r1, [r3, #4]
 801f4c2:	6921      	ldr	r1, [r4, #16]
 801f4c4:	3108      	adds	r1, #8
 801f4c6:	6121      	str	r1, [r4, #16]
 801f4c8:	68a1      	ldr	r1, [r4, #8]
 801f4ca:	3101      	adds	r1, #1
 801f4cc:	60a1      	str	r1, [r4, #8]
 801f4ce:	e7bf      	b.n	801f450 <_ZN8touchgfx7Outline10renderLineEiiii+0xba4>

0801f4d0 <_ZN8touchgfx7Outline6lineToEii>:
 801f4d0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801f4d2:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 801f4d4:	4604      	mov	r4, r0
 801f4d6:	460d      	mov	r5, r1
 801f4d8:	4616      	mov	r6, r2
 801f4da:	079b      	lsls	r3, r3, #30
 801f4dc:	d526      	bpl.n	801f52c <_ZN8touchgfx7Outline6lineToEii+0x5c>
 801f4de:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 801f4e2:	ea85 0001 	eor.w	r0, r5, r1
 801f4e6:	ea86 0302 	eor.w	r3, r6, r2
 801f4ea:	4303      	orrs	r3, r0
 801f4ec:	d01e      	beq.n	801f52c <_ZN8touchgfx7Outline6lineToEii+0x5c>
 801f4ee:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 801f4f0:	114b      	asrs	r3, r1, #5
 801f4f2:	9600      	str	r6, [sp, #0]
 801f4f4:	4283      	cmp	r3, r0
 801f4f6:	6b60      	ldr	r0, [r4, #52]	; 0x34
 801f4f8:	bfb8      	it	lt
 801f4fa:	62e3      	strlt	r3, [r4, #44]	; 0x2c
 801f4fc:	3301      	adds	r3, #1
 801f4fe:	4283      	cmp	r3, r0
 801f500:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 801f502:	bfc8      	it	gt
 801f504:	6363      	strgt	r3, [r4, #52]	; 0x34
 801f506:	116b      	asrs	r3, r5, #5
 801f508:	4283      	cmp	r3, r0
 801f50a:	6b60      	ldr	r0, [r4, #52]	; 0x34
 801f50c:	bfb8      	it	lt
 801f50e:	62e3      	strlt	r3, [r4, #44]	; 0x2c
 801f510:	3301      	adds	r3, #1
 801f512:	4283      	cmp	r3, r0
 801f514:	4620      	mov	r0, r4
 801f516:	bfc8      	it	gt
 801f518:	6363      	strgt	r3, [r4, #52]	; 0x34
 801f51a:	462b      	mov	r3, r5
 801f51c:	f7ff f9c6 	bl	801e8ac <_ZN8touchgfx7Outline10renderLineEiiii>
 801f520:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801f522:	f043 0301 	orr.w	r3, r3, #1
 801f526:	e9c4 5607 	strd	r5, r6, [r4, #28]
 801f52a:	63e3      	str	r3, [r4, #60]	; 0x3c
 801f52c:	b002      	add	sp, #8
 801f52e:	bd70      	pop	{r4, r5, r6, pc}

0801f530 <_ZN8touchgfx7Outline6moveToEii>:
 801f530:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801f532:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 801f534:	4615      	mov	r5, r2
 801f536:	4604      	mov	r4, r0
 801f538:	460e      	mov	r6, r1
 801f53a:	079a      	lsls	r2, r3, #30
 801f53c:	d401      	bmi.n	801f542 <_ZN8touchgfx7Outline6moveToEii+0x12>
 801f53e:	f7ff f96f 	bl	801e820 <_ZN8touchgfx7Outline5resetEv>
 801f542:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801f544:	07db      	lsls	r3, r3, #31
 801f546:	d504      	bpl.n	801f552 <_ZN8touchgfx7Outline6moveToEii+0x22>
 801f548:	4620      	mov	r0, r4
 801f54a:	e9d4 1209 	ldrd	r1, r2, [r4, #36]	; 0x24
 801f54e:	f7ff ffbf 	bl	801f4d0 <_ZN8touchgfx7Outline6lineToEii>
 801f552:	f9b4 3016 	ldrsh.w	r3, [r4, #22]
 801f556:	f346 1c4f 	sbfx	ip, r6, #5, #16
 801f55a:	f345 174f 	sbfx	r7, r5, #5, #16
 801f55e:	f9b4 2014 	ldrsh.w	r2, [r4, #20]
 801f562:	eb0c 4107 	add.w	r1, ip, r7, lsl #16
 801f566:	eb02 4203 	add.w	r2, r2, r3, lsl #16
 801f56a:	428a      	cmp	r2, r1
 801f56c:	d015      	beq.n	801f59a <_ZN8touchgfx7Outline6moveToEii+0x6a>
 801f56e:	8b61      	ldrh	r1, [r4, #26]
 801f570:	8b22      	ldrh	r2, [r4, #24]
 801f572:	430a      	orrs	r2, r1
 801f574:	d00b      	beq.n	801f58e <_ZN8touchgfx7Outline6moveToEii+0x5e>
 801f576:	2b00      	cmp	r3, #0
 801f578:	db09      	blt.n	801f58e <_ZN8touchgfx7Outline6moveToEii+0x5e>
 801f57a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 801f57c:	4293      	cmp	r3, r2
 801f57e:	da06      	bge.n	801f58e <_ZN8touchgfx7Outline6moveToEii+0x5e>
 801f580:	e9d4 3201 	ldrd	r3, r2, [r4, #4]
 801f584:	429a      	cmp	r2, r3
 801f586:	d30d      	bcc.n	801f5a4 <_ZN8touchgfx7Outline6moveToEii+0x74>
 801f588:	2301      	movs	r3, #1
 801f58a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 801f58e:	2300      	movs	r3, #0
 801f590:	f8a4 c014 	strh.w	ip, [r4, #20]
 801f594:	82e7      	strh	r7, [r4, #22]
 801f596:	8323      	strh	r3, [r4, #24]
 801f598:	8363      	strh	r3, [r4, #26]
 801f59a:	61e6      	str	r6, [r4, #28]
 801f59c:	62a5      	str	r5, [r4, #40]	; 0x28
 801f59e:	e9c4 5608 	strd	r5, r6, [r4, #32]
 801f5a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801f5a4:	f104 0314 	add.w	r3, r4, #20
 801f5a8:	6922      	ldr	r2, [r4, #16]
 801f5aa:	cb03      	ldmia	r3!, {r0, r1}
 801f5ac:	6010      	str	r0, [r2, #0]
 801f5ae:	6051      	str	r1, [r2, #4]
 801f5b0:	6923      	ldr	r3, [r4, #16]
 801f5b2:	3308      	adds	r3, #8
 801f5b4:	6123      	str	r3, [r4, #16]
 801f5b6:	68a3      	ldr	r3, [r4, #8]
 801f5b8:	3301      	adds	r3, #1
 801f5ba:	60a3      	str	r3, [r4, #8]
 801f5bc:	e7e7      	b.n	801f58e <_ZN8touchgfx7Outline6moveToEii+0x5e>

0801f5be <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 801f5be:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f5c2:	b0d1      	sub	sp, #324	; 0x144
 801f5c4:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 801f5c8:	466c      	mov	r4, sp
 801f5ca:	1a0d      	subs	r5, r1, r0
 801f5cc:	f100 0208 	add.w	r2, r0, #8
 801f5d0:	2d48      	cmp	r5, #72	; 0x48
 801f5d2:	f340 80ba 	ble.w	801f74a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x18c>
 801f5d6:	112d      	asrs	r5, r5, #4
 801f5d8:	f9b0 c004 	ldrsh.w	ip, [r0, #4]
 801f5dc:	f9b0 7006 	ldrsh.w	r7, [r0, #6]
 801f5e0:	eb00 03c5 	add.w	r3, r0, r5, lsl #3
 801f5e4:	f9b0 8000 	ldrsh.w	r8, [r0]
 801f5e8:	f9b0 e002 	ldrsh.w	lr, [r0, #2]
 801f5ec:	681e      	ldr	r6, [r3, #0]
 801f5ee:	6006      	str	r6, [r0, #0]
 801f5f0:	685e      	ldr	r6, [r3, #4]
 801f5f2:	6046      	str	r6, [r0, #4]
 801f5f4:	f820 8035 	strh.w	r8, [r0, r5, lsl #3]
 801f5f8:	f8a3 e002 	strh.w	lr, [r3, #2]
 801f5fc:	f8a3 c004 	strh.w	ip, [r3, #4]
 801f600:	80df      	strh	r7, [r3, #6]
 801f602:	f1a1 0308 	sub.w	r3, r1, #8
 801f606:	f931 cc06 	ldrsh.w	ip, [r1, #-6]
 801f60a:	f9b0 7008 	ldrsh.w	r7, [r0, #8]
 801f60e:	f9b0 600a 	ldrsh.w	r6, [r0, #10]
 801f612:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 801f616:	eb05 450c 	add.w	r5, r5, ip, lsl #16
 801f61a:	eb07 4c06 	add.w	ip, r7, r6, lsl #16
 801f61e:	4565      	cmp	r5, ip
 801f620:	da0f      	bge.n	801f642 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x84>
 801f622:	681d      	ldr	r5, [r3, #0]
 801f624:	f9b0 e00c 	ldrsh.w	lr, [r0, #12]
 801f628:	f9b0 c00e 	ldrsh.w	ip, [r0, #14]
 801f62c:	6015      	str	r5, [r2, #0]
 801f62e:	685d      	ldr	r5, [r3, #4]
 801f630:	6055      	str	r5, [r2, #4]
 801f632:	f821 7c08 	strh.w	r7, [r1, #-8]
 801f636:	f821 6c06 	strh.w	r6, [r1, #-6]
 801f63a:	f821 ec04 	strh.w	lr, [r1, #-4]
 801f63e:	f821 cc02 	strh.w	ip, [r1, #-2]
 801f642:	f9b0 7000 	ldrsh.w	r7, [r0]
 801f646:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 801f64a:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 801f64e:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 801f652:	eb07 4c06 	add.w	ip, r7, r6, lsl #16
 801f656:	eb05 450e 	add.w	r5, r5, lr, lsl #16
 801f65a:	45ac      	cmp	ip, r5
 801f65c:	da0d      	bge.n	801f67a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xbc>
 801f65e:	6815      	ldr	r5, [r2, #0]
 801f660:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 801f664:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 801f668:	6005      	str	r5, [r0, #0]
 801f66a:	6855      	ldr	r5, [r2, #4]
 801f66c:	8107      	strh	r7, [r0, #8]
 801f66e:	6045      	str	r5, [r0, #4]
 801f670:	8146      	strh	r6, [r0, #10]
 801f672:	f8a0 e00c 	strh.w	lr, [r0, #12]
 801f676:	f8a0 c00e 	strh.w	ip, [r0, #14]
 801f67a:	f931 cc06 	ldrsh.w	ip, [r1, #-6]
 801f67e:	f9b0 7000 	ldrsh.w	r7, [r0]
 801f682:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 801f686:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 801f68a:	eb05 450c 	add.w	r5, r5, ip, lsl #16
 801f68e:	eb07 4c06 	add.w	ip, r7, r6, lsl #16
 801f692:	4565      	cmp	r5, ip
 801f694:	da0f      	bge.n	801f6b6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xf8>
 801f696:	681d      	ldr	r5, [r3, #0]
 801f698:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 801f69c:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 801f6a0:	6005      	str	r5, [r0, #0]
 801f6a2:	685d      	ldr	r5, [r3, #4]
 801f6a4:	6045      	str	r5, [r0, #4]
 801f6a6:	f821 7c08 	strh.w	r7, [r1, #-8]
 801f6aa:	f821 6c06 	strh.w	r6, [r1, #-6]
 801f6ae:	f821 ec04 	strh.w	lr, [r1, #-4]
 801f6b2:	f821 cc02 	strh.w	ip, [r1, #-2]
 801f6b6:	f9b2 9008 	ldrsh.w	r9, [r2, #8]
 801f6ba:	f102 0508 	add.w	r5, r2, #8
 801f6be:	f9b2 800a 	ldrsh.w	r8, [r2, #10]
 801f6c2:	f9b0 e000 	ldrsh.w	lr, [r0]
 801f6c6:	462f      	mov	r7, r5
 801f6c8:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 801f6cc:	eb09 4608 	add.w	r6, r9, r8, lsl #16
 801f6d0:	eb0e 4a0c 	add.w	sl, lr, ip, lsl #16
 801f6d4:	4556      	cmp	r6, sl
 801f6d6:	db18      	blt.n	801f70a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x14c>
 801f6d8:	3b08      	subs	r3, #8
 801f6da:	f9b3 b002 	ldrsh.w	fp, [r3, #2]
 801f6de:	f9b3 6000 	ldrsh.w	r6, [r3]
 801f6e2:	eb06 460b 	add.w	r6, r6, fp, lsl #16
 801f6e6:	45b2      	cmp	sl, r6
 801f6e8:	dbf6      	blt.n	801f6d8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x11a>
 801f6ea:	42ab      	cmp	r3, r5
 801f6ec:	681e      	ldr	r6, [r3, #0]
 801f6ee:	d30e      	bcc.n	801f70e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x150>
 801f6f0:	f9b2 700c 	ldrsh.w	r7, [r2, #12]
 801f6f4:	f9b2 200e 	ldrsh.w	r2, [r2, #14]
 801f6f8:	602e      	str	r6, [r5, #0]
 801f6fa:	685e      	ldr	r6, [r3, #4]
 801f6fc:	606e      	str	r6, [r5, #4]
 801f6fe:	f8a3 9000 	strh.w	r9, [r3]
 801f702:	f8a3 8002 	strh.w	r8, [r3, #2]
 801f706:	809f      	strh	r7, [r3, #4]
 801f708:	80da      	strh	r2, [r3, #6]
 801f70a:	462a      	mov	r2, r5
 801f70c:	e7d3      	b.n	801f6b6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xf8>
 801f70e:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 801f712:	6006      	str	r6, [r0, #0]
 801f714:	685e      	ldr	r6, [r3, #4]
 801f716:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 801f71a:	6046      	str	r6, [r0, #4]
 801f71c:	1a1e      	subs	r6, r3, r0
 801f71e:	80da      	strh	r2, [r3, #6]
 801f720:	1b4a      	subs	r2, r1, r5
 801f722:	f8a3 e000 	strh.w	lr, [r3]
 801f726:	10d2      	asrs	r2, r2, #3
 801f728:	f8a3 c002 	strh.w	ip, [r3, #2]
 801f72c:	f8a3 8004 	strh.w	r8, [r3, #4]
 801f730:	ebb2 0fe6 	cmp.w	r2, r6, asr #3
 801f734:	bfb5      	itete	lt
 801f736:	e9c4 0300 	strdlt	r0, r3, [r4]
 801f73a:	4607      	movge	r7, r0
 801f73c:	460b      	movlt	r3, r1
 801f73e:	e9c4 5100 	strdge	r5, r1, [r4]
 801f742:	4638      	mov	r0, r7
 801f744:	3408      	adds	r4, #8
 801f746:	4619      	mov	r1, r3
 801f748:	e73f      	b.n	801f5ca <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xc>
 801f74a:	4291      	cmp	r1, r2
 801f74c:	d925      	bls.n	801f79a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1dc>
 801f74e:	f1a2 0310 	sub.w	r3, r2, #16
 801f752:	f9b3 c010 	ldrsh.w	ip, [r3, #16]
 801f756:	f9b3 7012 	ldrsh.w	r7, [r3, #18]
 801f75a:	f9b3 e00a 	ldrsh.w	lr, [r3, #10]
 801f75e:	f9b3 5008 	ldrsh.w	r5, [r3, #8]
 801f762:	eb0c 4607 	add.w	r6, ip, r7, lsl #16
 801f766:	eb05 450e 	add.w	r5, r5, lr, lsl #16
 801f76a:	42ae      	cmp	r6, r5
 801f76c:	da13      	bge.n	801f796 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1d8>
 801f76e:	461d      	mov	r5, r3
 801f770:	f9b3 8014 	ldrsh.w	r8, [r3, #20]
 801f774:	f9b3 e016 	ldrsh.w	lr, [r3, #22]
 801f778:	3b08      	subs	r3, #8
 801f77a:	f855 6f08 	ldr.w	r6, [r5, #8]!
 801f77e:	619e      	str	r6, [r3, #24]
 801f780:	42a8      	cmp	r0, r5
 801f782:	686e      	ldr	r6, [r5, #4]
 801f784:	f8a3 c010 	strh.w	ip, [r3, #16]
 801f788:	61de      	str	r6, [r3, #28]
 801f78a:	825f      	strh	r7, [r3, #18]
 801f78c:	f8a3 8014 	strh.w	r8, [r3, #20]
 801f790:	f8a3 e016 	strh.w	lr, [r3, #22]
 801f794:	d1dd      	bne.n	801f752 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x194>
 801f796:	3208      	adds	r2, #8
 801f798:	e7d7      	b.n	801f74a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x18c>
 801f79a:	466b      	mov	r3, sp
 801f79c:	429c      	cmp	r4, r3
 801f79e:	d903      	bls.n	801f7a8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1ea>
 801f7a0:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 801f7a4:	3c08      	subs	r4, #8
 801f7a6:	e710      	b.n	801f5ca <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xc>
 801f7a8:	b051      	add	sp, #324	; 0x144
 801f7aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f7ae <_ZN8touchgfx7Outline9sortCellsEv>:
 801f7ae:	6881      	ldr	r1, [r0, #8]
 801f7b0:	b111      	cbz	r1, 801f7b8 <_ZN8touchgfx7Outline9sortCellsEv+0xa>
 801f7b2:	68c0      	ldr	r0, [r0, #12]
 801f7b4:	f7ff bf03 	b.w	801f5be <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 801f7b8:	4770      	bx	lr

0801f7ba <_ZN8touchgfx7Outline8getCellsEv>:
 801f7ba:	b510      	push	{r4, lr}
 801f7bc:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 801f7be:	4604      	mov	r4, r0
 801f7c0:	07da      	lsls	r2, r3, #31
 801f7c2:	d507      	bpl.n	801f7d4 <_ZN8touchgfx7Outline8getCellsEv+0x1a>
 801f7c4:	e9d0 1209 	ldrd	r1, r2, [r0, #36]	; 0x24
 801f7c8:	f7ff fe82 	bl	801f4d0 <_ZN8touchgfx7Outline6lineToEii>
 801f7cc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801f7ce:	f023 0301 	bic.w	r3, r3, #1
 801f7d2:	63e3      	str	r3, [r4, #60]	; 0x3c
 801f7d4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801f7d6:	079b      	lsls	r3, r3, #30
 801f7d8:	d51a      	bpl.n	801f810 <_ZN8touchgfx7Outline8getCellsEv+0x56>
 801f7da:	8b62      	ldrh	r2, [r4, #26]
 801f7dc:	8b23      	ldrh	r3, [r4, #24]
 801f7de:	4313      	orrs	r3, r2
 801f7e0:	d00d      	beq.n	801f7fe <_ZN8touchgfx7Outline8getCellsEv+0x44>
 801f7e2:	f9b4 3016 	ldrsh.w	r3, [r4, #22]
 801f7e6:	2b00      	cmp	r3, #0
 801f7e8:	db09      	blt.n	801f7fe <_ZN8touchgfx7Outline8getCellsEv+0x44>
 801f7ea:	6c22      	ldr	r2, [r4, #64]	; 0x40
 801f7ec:	4293      	cmp	r3, r2
 801f7ee:	da06      	bge.n	801f7fe <_ZN8touchgfx7Outline8getCellsEv+0x44>
 801f7f0:	e9d4 2301 	ldrd	r2, r3, [r4, #4]
 801f7f4:	429a      	cmp	r2, r3
 801f7f6:	d80d      	bhi.n	801f814 <_ZN8touchgfx7Outline8getCellsEv+0x5a>
 801f7f8:	2301      	movs	r3, #1
 801f7fa:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 801f7fe:	68a0      	ldr	r0, [r4, #8]
 801f800:	b138      	cbz	r0, 801f812 <_ZN8touchgfx7Outline8getCellsEv+0x58>
 801f802:	4620      	mov	r0, r4
 801f804:	f7ff ffd3 	bl	801f7ae <_ZN8touchgfx7Outline9sortCellsEv>
 801f808:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801f80a:	f023 0302 	bic.w	r3, r3, #2
 801f80e:	63e3      	str	r3, [r4, #60]	; 0x3c
 801f810:	68e0      	ldr	r0, [r4, #12]
 801f812:	bd10      	pop	{r4, pc}
 801f814:	f104 0314 	add.w	r3, r4, #20
 801f818:	6922      	ldr	r2, [r4, #16]
 801f81a:	cb03      	ldmia	r3!, {r0, r1}
 801f81c:	6010      	str	r0, [r2, #0]
 801f81e:	6051      	str	r1, [r2, #4]
 801f820:	6923      	ldr	r3, [r4, #16]
 801f822:	3308      	adds	r3, #8
 801f824:	6123      	str	r3, [r4, #16]
 801f826:	68a3      	ldr	r3, [r4, #8]
 801f828:	3301      	adds	r3, #1
 801f82a:	60a3      	str	r3, [r4, #8]
 801f82c:	e7e7      	b.n	801f7fe <_ZN8touchgfx7Outline8getCellsEv+0x44>

0801f82e <_ZN8touchgfx8ScanlineD1Ev>:
 801f82e:	4770      	bx	lr

0801f830 <_ZN8touchgfx8ScanlineD0Ev>:
 801f830:	b510      	push	{r4, lr}
 801f832:	4604      	mov	r4, r0
 801f834:	2124      	movs	r1, #36	; 0x24
 801f836:	f000 f9da 	bl	801fbee <_ZdlPvj>
 801f83a:	4620      	mov	r0, r4
 801f83c:	bd10      	pop	{r4, pc}

0801f83e <_ZN8touchgfx8Scanline5resetEv>:
 801f83e:	b510      	push	{r4, lr}
 801f840:	4604      	mov	r4, r0
 801f842:	f7f0 fbe3 	bl	801000c <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCoversEv>
 801f846:	61a0      	str	r0, [r4, #24]
 801f848:	f7f0 fbe6 	bl	8010018 <_ZN8touchgfx20CanvasWidgetRenderer23getScanlineStartIndicesEv>
 801f84c:	61e0      	str	r0, [r4, #28]
 801f84e:	f7f0 fbe9 	bl	8010024 <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCountsEv>
 801f852:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801f856:	6220      	str	r0, [r4, #32]
 801f858:	6160      	str	r0, [r4, #20]
 801f85a:	e9c4 3301 	strd	r3, r3, [r4, #4]
 801f85e:	69e3      	ldr	r3, [r4, #28]
 801f860:	6123      	str	r3, [r4, #16]
 801f862:	2300      	movs	r3, #0
 801f864:	60e3      	str	r3, [r4, #12]
 801f866:	bd10      	pop	{r4, pc}

0801f868 <_ZN8touchgfx8ScanlineC1Ev>:
 801f868:	4b09      	ldr	r3, [pc, #36]	; (801f890 <_ZN8touchgfx8ScanlineC1Ev+0x28>)
 801f86a:	b510      	push	{r4, lr}
 801f86c:	6003      	str	r3, [r0, #0]
 801f86e:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801f872:	4604      	mov	r4, r0
 801f874:	e9c0 3301 	strd	r3, r3, [r0, #4]
 801f878:	2300      	movs	r3, #0
 801f87a:	e9c0 3303 	strd	r3, r3, [r0, #12]
 801f87e:	e9c0 3305 	strd	r3, r3, [r0, #20]
 801f882:	e9c0 3307 	strd	r3, r3, [r0, #28]
 801f886:	f7ff ffda 	bl	801f83e <_ZN8touchgfx8Scanline5resetEv>
 801f88a:	4620      	mov	r0, r4
 801f88c:	bd10      	pop	{r4, pc}
 801f88e:	bf00      	nop
 801f890:	08025d08 	.word	0x08025d08

0801f894 <_ZN8touchgfx8Scanline7addSpanEiijj>:
 801f894:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801f898:	1e0c      	subs	r4, r1, #0
 801f89a:	4605      	mov	r5, r0
 801f89c:	4617      	mov	r7, r2
 801f89e:	461e      	mov	r6, r3
 801f8a0:	da03      	bge.n	801f8aa <_ZN8touchgfx8Scanline7addSpanEiijj+0x16>
 801f8a2:	4426      	add	r6, r4
 801f8a4:	2e01      	cmp	r6, #1
 801f8a6:	d421      	bmi.n	801f8ec <_ZN8touchgfx8Scanline7addSpanEiijj+0x58>
 801f8a8:	2400      	movs	r4, #0
 801f8aa:	f7f0 fba9 	bl	8010000 <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv>
 801f8ae:	42a0      	cmp	r0, r4
 801f8b0:	dd1c      	ble.n	801f8ec <_ZN8touchgfx8Scanline7addSpanEiijj+0x58>
 801f8b2:	eb04 0806 	add.w	r8, r4, r6
 801f8b6:	f7f0 fba3 	bl	8010000 <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv>
 801f8ba:	4580      	cmp	r8, r0
 801f8bc:	d902      	bls.n	801f8c4 <_ZN8touchgfx8Scanline7addSpanEiijj+0x30>
 801f8be:	f7f0 fb9f 	bl	8010000 <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv>
 801f8c2:	1b06      	subs	r6, r0, r4
 801f8c4:	69a8      	ldr	r0, [r5, #24]
 801f8c6:	4632      	mov	r2, r6
 801f8c8:	f89d 1018 	ldrb.w	r1, [sp, #24]
 801f8cc:	4420      	add	r0, r4
 801f8ce:	f7f3 f9ef 	bl	8012cb0 <_ZN8touchgfx6memsetEPvhm>
 801f8d2:	686b      	ldr	r3, [r5, #4]
 801f8d4:	b2b2      	uxth	r2, r6
 801f8d6:	3301      	adds	r3, #1
 801f8d8:	42a3      	cmp	r3, r4
 801f8da:	696b      	ldr	r3, [r5, #20]
 801f8dc:	d108      	bne.n	801f8f0 <_ZN8touchgfx8Scanline7addSpanEiijj+0x5c>
 801f8de:	8819      	ldrh	r1, [r3, #0]
 801f8e0:	440a      	add	r2, r1
 801f8e2:	801a      	strh	r2, [r3, #0]
 801f8e4:	3c01      	subs	r4, #1
 801f8e6:	4434      	add	r4, r6
 801f8e8:	e9c5 4701 	strd	r4, r7, [r5, #4]
 801f8ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801f8f0:	1c99      	adds	r1, r3, #2
 801f8f2:	6169      	str	r1, [r5, #20]
 801f8f4:	805a      	strh	r2, [r3, #2]
 801f8f6:	692b      	ldr	r3, [r5, #16]
 801f8f8:	1c9a      	adds	r2, r3, #2
 801f8fa:	612a      	str	r2, [r5, #16]
 801f8fc:	805c      	strh	r4, [r3, #2]
 801f8fe:	68eb      	ldr	r3, [r5, #12]
 801f900:	3301      	adds	r3, #1
 801f902:	60eb      	str	r3, [r5, #12]
 801f904:	e7ee      	b.n	801f8e4 <_ZN8touchgfx8Scanline7addSpanEiijj+0x50>

0801f906 <_ZN8touchgfx15RenderingBufferD1Ev>:
 801f906:	4770      	bx	lr

0801f908 <_ZN8touchgfx15RenderingBufferD0Ev>:
 801f908:	b510      	push	{r4, lr}
 801f90a:	4604      	mov	r4, r0
 801f90c:	2118      	movs	r1, #24
 801f90e:	f000 f96e 	bl	801fbee <_ZdlPvj>
 801f912:	4620      	mov	r0, r4
 801f914:	bd10      	pop	{r4, pc}
	...

0801f918 <_ZN8touchgfx15RenderingBufferC1Ev>:
 801f918:	4a04      	ldr	r2, [pc, #16]	; (801f92c <_ZN8touchgfx15RenderingBufferC1Ev+0x14>)
 801f91a:	6002      	str	r2, [r0, #0]
 801f91c:	2200      	movs	r2, #0
 801f91e:	6042      	str	r2, [r0, #4]
 801f920:	7202      	strb	r2, [r0, #8]
 801f922:	6142      	str	r2, [r0, #20]
 801f924:	e9c0 2203 	strd	r2, r2, [r0, #12]
 801f928:	4770      	bx	lr
 801f92a:	bf00      	nop
 801f92c:	08025d18 	.word	0x08025d18

0801f930 <_ZN8touchgfx15RenderingBuffer6attachEPhhjji>:
 801f930:	60c3      	str	r3, [r0, #12]
 801f932:	9b00      	ldr	r3, [sp, #0]
 801f934:	6041      	str	r1, [r0, #4]
 801f936:	6103      	str	r3, [r0, #16]
 801f938:	9b01      	ldr	r3, [sp, #4]
 801f93a:	7202      	strb	r2, [r0, #8]
 801f93c:	6143      	str	r3, [r0, #20]
 801f93e:	4770      	bx	lr

0801f940 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>:
 801f940:	b5f0      	push	{r4, r5, r6, r7, lr}
 801f942:	2300      	movs	r3, #0
 801f944:	b08d      	sub	sp, #52	; 0x34
 801f946:	f100 0640 	add.w	r6, r0, #64	; 0x40
 801f94a:	f101 0710 	add.w	r7, r1, #16
 801f94e:	9304      	str	r3, [sp, #16]
 801f950:	aa04      	add	r2, sp, #16
 801f952:	9305      	str	r3, [sp, #20]
 801f954:	9306      	str	r3, [sp, #24]
 801f956:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 801f95a:	9307      	str	r3, [sp, #28]
 801f95c:	4613      	mov	r3, r2
 801f95e:	460c      	mov	r4, r1
 801f960:	4605      	mov	r5, r0
 801f962:	eddf 7a0e 	vldr	s15, [pc, #56]	; 801f99c <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x5c>
 801f966:	ecb4 7a01 	vldmia	r4!, {s14}
 801f96a:	ecf5 6a01 	vldmia	r5!, {s13}
 801f96e:	42bc      	cmp	r4, r7
 801f970:	eee6 7a87 	vfma.f32	s15, s13, s14
 801f974:	d1f7      	bne.n	801f966 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x26>
 801f976:	3010      	adds	r0, #16
 801f978:	ece2 7a01 	vstmia	r2!, {s15}
 801f97c:	42b0      	cmp	r0, r6
 801f97e:	d1ee      	bne.n	801f95e <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x1e>
 801f980:	ac0c      	add	r4, sp, #48	; 0x30
 801f982:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 801f984:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 801f988:	ed9d 0a08 	vldr	s0, [sp, #32]
 801f98c:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 801f990:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 801f994:	eddd 1a0b 	vldr	s3, [sp, #44]	; 0x2c
 801f998:	b00d      	add	sp, #52	; 0x34
 801f99a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801f99c:	00000000 	.word	0x00000000

0801f9a0 <_ZN8touchgfx9Matrix4x4C1Ev>:
 801f9a0:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 801f9a4:	2300      	movs	r3, #0
 801f9a6:	ed9f 7a09 	vldr	s14, [pc, #36]	; 801f9cc <_ZN8touchgfx9Matrix4x4C1Ev+0x2c>
 801f9aa:	eb00 1103 	add.w	r1, r0, r3, lsl #4
 801f9ae:	2200      	movs	r2, #0
 801f9b0:	4293      	cmp	r3, r2
 801f9b2:	f102 0201 	add.w	r2, r2, #1
 801f9b6:	fe47 6a87 	vseleq.f32	s13, s15, s14
 801f9ba:	2a04      	cmp	r2, #4
 801f9bc:	ece1 6a01 	vstmia	r1!, {s13}
 801f9c0:	d1f6      	bne.n	801f9b0 <_ZN8touchgfx9Matrix4x4C1Ev+0x10>
 801f9c2:	3301      	adds	r3, #1
 801f9c4:	2b04      	cmp	r3, #4
 801f9c6:	d1f0      	bne.n	801f9aa <_ZN8touchgfx9Matrix4x4C1Ev+0xa>
 801f9c8:	4770      	bx	lr
 801f9ca:	bf00      	nop
 801f9cc:	00000000 	.word	0x00000000

0801f9d0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>:
 801f9d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801f9d4:	460c      	mov	r4, r1
 801f9d6:	4605      	mov	r5, r0
 801f9d8:	4690      	mov	r8, r2
 801f9da:	f7ff ffe1 	bl	801f9a0 <_ZN8touchgfx9Matrix4x4C1Ev>
 801f9de:	4628      	mov	r0, r5
 801f9e0:	4621      	mov	r1, r4
 801f9e2:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 801f9e6:	2300      	movs	r3, #0
 801f9e8:	eb08 0603 	add.w	r6, r8, r3
 801f9ec:	460f      	mov	r7, r1
 801f9ee:	2400      	movs	r4, #0
 801f9f0:	eddf 7a0c 	vldr	s15, [pc, #48]	; 801fa24 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x54>
 801f9f4:	4632      	mov	r2, r6
 801f9f6:	3401      	adds	r4, #1
 801f9f8:	ecf7 6a01 	vldmia	r7!, {s13}
 801f9fc:	3610      	adds	r6, #16
 801f9fe:	ed92 7a00 	vldr	s14, [r2]
 801fa02:	2c04      	cmp	r4, #4
 801fa04:	eee6 7a87 	vfma.f32	s15, s13, s14
 801fa08:	d1f4      	bne.n	801f9f4 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x24>
 801fa0a:	18c2      	adds	r2, r0, r3
 801fa0c:	3304      	adds	r3, #4
 801fa0e:	2b10      	cmp	r3, #16
 801fa10:	edc2 7a00 	vstr	s15, [r2]
 801fa14:	d1e8      	bne.n	801f9e8 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x18>
 801fa16:	3110      	adds	r1, #16
 801fa18:	3010      	adds	r0, #16
 801fa1a:	4561      	cmp	r1, ip
 801fa1c:	d1e3      	bne.n	801f9e6 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x16>
 801fa1e:	4628      	mov	r0, r5
 801fa20:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801fa24:	00000000 	.word	0x00000000

0801fa28 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>:
 801fa28:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 801fa2c:	f100 0320 	add.w	r3, r0, #32
 801fa30:	3030      	adds	r0, #48	; 0x30
 801fa32:	ee87 0a80 	vdiv.f32	s0, s15, s0
 801fa36:	ecf3 7a01 	vldmia	r3!, {s15}
 801fa3a:	4283      	cmp	r3, r0
 801fa3c:	ee60 7a27 	vmul.f32	s15, s0, s15
 801fa40:	edc3 7a03 	vstr	s15, [r3, #12]
 801fa44:	d1f7      	bne.n	801fa36 <_ZN8touchgfx9Matrix4x415setViewDistanceEf+0xe>
 801fa46:	4770      	bx	lr

0801fa48 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>:
 801fa48:	b510      	push	{r4, lr}
 801fa4a:	ed2d 8b02 	vpush	{d8}
 801fa4e:	eef0 8a40 	vmov.f32	s17, s0
 801fa52:	4604      	mov	r4, r0
 801fa54:	f000 fa24 	bl	801fea0 <sinf>
 801fa58:	eeb0 8a40 	vmov.f32	s16, s0
 801fa5c:	eeb0 0a68 	vmov.f32	s0, s17
 801fa60:	f000 f936 	bl	801fcd0 <cosf>
 801fa64:	eeb1 6a48 	vneg.f32	s12, s16
 801fa68:	f104 0310 	add.w	r3, r4, #16
 801fa6c:	f104 0220 	add.w	r2, r4, #32
 801fa70:	edd3 7a04 	vldr	s15, [r3, #16]
 801fa74:	edd3 6a00 	vldr	s13, [r3]
 801fa78:	ee26 7a27 	vmul.f32	s14, s12, s15
 801fa7c:	ee67 7a80 	vmul.f32	s15, s15, s0
 801fa80:	eea6 7a80 	vfma.f32	s14, s13, s0
 801fa84:	eee6 7a88 	vfma.f32	s15, s13, s16
 801fa88:	eca3 7a01 	vstmia	r3!, {s14}
 801fa8c:	429a      	cmp	r2, r3
 801fa8e:	edc3 7a03 	vstr	s15, [r3, #12]
 801fa92:	d1ed      	bne.n	801fa70 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf+0x28>
 801fa94:	4620      	mov	r0, r4
 801fa96:	ecbd 8b02 	vpop	{d8}
 801fa9a:	bd10      	pop	{r4, pc}

0801fa9c <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>:
 801fa9c:	b510      	push	{r4, lr}
 801fa9e:	ed2d 8b02 	vpush	{d8}
 801faa2:	eef0 8a40 	vmov.f32	s17, s0
 801faa6:	4604      	mov	r4, r0
 801faa8:	f000 f9fa 	bl	801fea0 <sinf>
 801faac:	eeb0 8a40 	vmov.f32	s16, s0
 801fab0:	eeb0 0a68 	vmov.f32	s0, s17
 801fab4:	f000 f90c 	bl	801fcd0 <cosf>
 801fab8:	eeb1 6a48 	vneg.f32	s12, s16
 801fabc:	4623      	mov	r3, r4
 801fabe:	f104 0210 	add.w	r2, r4, #16
 801fac2:	edd3 7a08 	vldr	s15, [r3, #32]
 801fac6:	edd3 6a00 	vldr	s13, [r3]
 801faca:	ee27 7a88 	vmul.f32	s14, s15, s16
 801face:	ee67 7a80 	vmul.f32	s15, s15, s0
 801fad2:	eea6 7a80 	vfma.f32	s14, s13, s0
 801fad6:	eee6 7a26 	vfma.f32	s15, s12, s13
 801fada:	eca3 7a01 	vstmia	r3!, {s14}
 801fade:	429a      	cmp	r2, r3
 801fae0:	edc3 7a07 	vstr	s15, [r3, #28]
 801fae4:	d1ed      	bne.n	801fac2 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf+0x26>
 801fae6:	4620      	mov	r0, r4
 801fae8:	ecbd 8b02 	vpop	{d8}
 801faec:	bd10      	pop	{r4, pc}

0801faee <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>:
 801faee:	b510      	push	{r4, lr}
 801faf0:	ed2d 8b02 	vpush	{d8}
 801faf4:	eef0 8a40 	vmov.f32	s17, s0
 801faf8:	4604      	mov	r4, r0
 801fafa:	f000 f9d1 	bl	801fea0 <sinf>
 801fafe:	eeb0 8a40 	vmov.f32	s16, s0
 801fb02:	eeb0 0a68 	vmov.f32	s0, s17
 801fb06:	f000 f8e3 	bl	801fcd0 <cosf>
 801fb0a:	eeb1 6a48 	vneg.f32	s12, s16
 801fb0e:	4623      	mov	r3, r4
 801fb10:	f104 0210 	add.w	r2, r4, #16
 801fb14:	edd3 7a04 	vldr	s15, [r3, #16]
 801fb18:	edd3 6a00 	vldr	s13, [r3]
 801fb1c:	ee26 7a27 	vmul.f32	s14, s12, s15
 801fb20:	ee67 7a80 	vmul.f32	s15, s15, s0
 801fb24:	eea6 7a80 	vfma.f32	s14, s13, s0
 801fb28:	eee6 7a88 	vfma.f32	s15, s13, s16
 801fb2c:	eca3 7a01 	vstmia	r3!, {s14}
 801fb30:	429a      	cmp	r2, r3
 801fb32:	edc3 7a03 	vstr	s15, [r3, #12]
 801fb36:	d1ed      	bne.n	801fb14 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf+0x26>
 801fb38:	4620      	mov	r0, r4
 801fb3a:	ecbd 8b02 	vpop	{d8}
 801fb3e:	bd10      	pop	{r4, pc}

0801fb40 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>:
 801fb40:	4603      	mov	r3, r0
 801fb42:	f100 0210 	add.w	r2, r0, #16
 801fb46:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 801fb4a:	edd3 7a00 	vldr	s15, [r3]
 801fb4e:	eee7 7a00 	vfma.f32	s15, s14, s0
 801fb52:	ece3 7a01 	vstmia	r3!, {s15}
 801fb56:	4293      	cmp	r3, r2
 801fb58:	d1f5      	bne.n	801fb46 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf+0x6>
 801fb5a:	4770      	bx	lr

0801fb5c <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>:
 801fb5c:	f100 0310 	add.w	r3, r0, #16
 801fb60:	f100 0220 	add.w	r2, r0, #32
 801fb64:	ed93 7a08 	vldr	s14, [r3, #32]
 801fb68:	edd3 7a00 	vldr	s15, [r3]
 801fb6c:	eee7 7a00 	vfma.f32	s15, s14, s0
 801fb70:	ece3 7a01 	vstmia	r3!, {s15}
 801fb74:	4293      	cmp	r3, r2
 801fb76:	d1f5      	bne.n	801fb64 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf+0x8>
 801fb78:	4770      	bx	lr

0801fb7a <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>:
 801fb7a:	f100 0320 	add.w	r3, r0, #32
 801fb7e:	f100 0230 	add.w	r2, r0, #48	; 0x30
 801fb82:	ed93 7a04 	vldr	s14, [r3, #16]
 801fb86:	edd3 7a00 	vldr	s15, [r3]
 801fb8a:	eee7 7a00 	vfma.f32	s15, s14, s0
 801fb8e:	ece3 7a01 	vstmia	r3!, {s15}
 801fb92:	4293      	cmp	r3, r2
 801fb94:	d1f5      	bne.n	801fb82 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf+0x8>
 801fb96:	4770      	bx	lr

0801fb98 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>:
 801fb98:	4603      	mov	r3, r0
 801fb9a:	f100 0210 	add.w	r2, r0, #16
 801fb9e:	edd3 7a00 	vldr	s15, [r3]
 801fba2:	ee67 7a80 	vmul.f32	s15, s15, s0
 801fba6:	ece3 7a01 	vstmia	r3!, {s15}
 801fbaa:	4293      	cmp	r3, r2
 801fbac:	d1f7      	bne.n	801fb9e <_ZN8touchgfx9Matrix4x417concatenateXScaleEf+0x6>
 801fbae:	4770      	bx	lr

0801fbb0 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>:
 801fbb0:	f100 0310 	add.w	r3, r0, #16
 801fbb4:	f100 0220 	add.w	r2, r0, #32
 801fbb8:	edd3 7a00 	vldr	s15, [r3]
 801fbbc:	ee67 7a80 	vmul.f32	s15, s15, s0
 801fbc0:	ece3 7a01 	vstmia	r3!, {s15}
 801fbc4:	4293      	cmp	r3, r2
 801fbc6:	d1f7      	bne.n	801fbb8 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf+0x8>
 801fbc8:	4770      	bx	lr

0801fbca <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>:
 801fbca:	f100 0320 	add.w	r3, r0, #32
 801fbce:	f100 0230 	add.w	r2, r0, #48	; 0x30
 801fbd2:	edd3 7a00 	vldr	s15, [r3]
 801fbd6:	ee67 7a80 	vmul.f32	s15, s15, s0
 801fbda:	ece3 7a01 	vstmia	r3!, {s15}
 801fbde:	4293      	cmp	r3, r2
 801fbe0:	d1f7      	bne.n	801fbd2 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf+0x8>
 801fbe2:	4770      	bx	lr

0801fbe4 <__aeabi_atexit>:
 801fbe4:	460b      	mov	r3, r1
 801fbe6:	4601      	mov	r1, r0
 801fbe8:	4618      	mov	r0, r3
 801fbea:	f000 ba1d 	b.w	8020028 <__cxa_atexit>

0801fbee <_ZdlPvj>:
 801fbee:	f000 b829 	b.w	801fc44 <_ZdlPv>

0801fbf2 <__cxa_guard_acquire>:
 801fbf2:	6803      	ldr	r3, [r0, #0]
 801fbf4:	07db      	lsls	r3, r3, #31
 801fbf6:	d406      	bmi.n	801fc06 <__cxa_guard_acquire+0x14>
 801fbf8:	7843      	ldrb	r3, [r0, #1]
 801fbfa:	b103      	cbz	r3, 801fbfe <__cxa_guard_acquire+0xc>
 801fbfc:	deff      	udf	#255	; 0xff
 801fbfe:	2301      	movs	r3, #1
 801fc00:	7043      	strb	r3, [r0, #1]
 801fc02:	4618      	mov	r0, r3
 801fc04:	4770      	bx	lr
 801fc06:	2000      	movs	r0, #0
 801fc08:	4770      	bx	lr

0801fc0a <__cxa_guard_release>:
 801fc0a:	2301      	movs	r3, #1
 801fc0c:	6003      	str	r3, [r0, #0]
 801fc0e:	4770      	bx	lr

0801fc10 <_Znwj>:
 801fc10:	2801      	cmp	r0, #1
 801fc12:	bf38      	it	cc
 801fc14:	2001      	movcc	r0, #1
 801fc16:	b510      	push	{r4, lr}
 801fc18:	4604      	mov	r4, r0
 801fc1a:	4620      	mov	r0, r4
 801fc1c:	f000 fa4e 	bl	80200bc <malloc>
 801fc20:	b930      	cbnz	r0, 801fc30 <_Znwj+0x20>
 801fc22:	f000 f823 	bl	801fc6c <_ZSt15get_new_handlerv>
 801fc26:	b908      	cbnz	r0, 801fc2c <_Znwj+0x1c>
 801fc28:	f000 f9d2 	bl	801ffd0 <abort>
 801fc2c:	4780      	blx	r0
 801fc2e:	e7f4      	b.n	801fc1a <_Znwj+0xa>
 801fc30:	bd10      	pop	{r4, pc}

0801fc32 <__cxa_pure_virtual>:
 801fc32:	b508      	push	{r3, lr}
 801fc34:	f000 f814 	bl	801fc60 <_ZSt9terminatev>

0801fc38 <_ZSt17__throw_bad_allocv>:
 801fc38:	b508      	push	{r3, lr}
 801fc3a:	f000 f9c9 	bl	801ffd0 <abort>

0801fc3e <_ZSt20__throw_length_errorPKc>:
 801fc3e:	b508      	push	{r3, lr}
 801fc40:	f000 f9c6 	bl	801ffd0 <abort>

0801fc44 <_ZdlPv>:
 801fc44:	f000 ba42 	b.w	80200cc <free>

0801fc48 <_ZN10__cxxabiv111__terminateEPFvvE>:
 801fc48:	b508      	push	{r3, lr}
 801fc4a:	4780      	blx	r0
 801fc4c:	f000 f9c0 	bl	801ffd0 <abort>

0801fc50 <_ZSt13get_terminatev>:
 801fc50:	4b02      	ldr	r3, [pc, #8]	; (801fc5c <_ZSt13get_terminatev+0xc>)
 801fc52:	6818      	ldr	r0, [r3, #0]
 801fc54:	f3bf 8f5b 	dmb	ish
 801fc58:	4770      	bx	lr
 801fc5a:	bf00      	nop
 801fc5c:	240000b0 	.word	0x240000b0

0801fc60 <_ZSt9terminatev>:
 801fc60:	b508      	push	{r3, lr}
 801fc62:	f7ff fff5 	bl	801fc50 <_ZSt13get_terminatev>
 801fc66:	f7ff ffef 	bl	801fc48 <_ZN10__cxxabiv111__terminateEPFvvE>
	...

0801fc6c <_ZSt15get_new_handlerv>:
 801fc6c:	4b02      	ldr	r3, [pc, #8]	; (801fc78 <_ZSt15get_new_handlerv+0xc>)
 801fc6e:	6818      	ldr	r0, [r3, #0]
 801fc70:	f3bf 8f5b 	dmb	ish
 801fc74:	4770      	bx	lr
 801fc76:	bf00      	nop
 801fc78:	2400e1b0 	.word	0x2400e1b0

0801fc7c <sinf_poly>:
 801fc7c:	07cb      	lsls	r3, r1, #31
 801fc7e:	d412      	bmi.n	801fca6 <sinf_poly+0x2a>
 801fc80:	ee21 5b00 	vmul.f64	d5, d1, d0
 801fc84:	ed90 6b1a 	vldr	d6, [r0, #104]	; 0x68
 801fc88:	ed90 7b18 	vldr	d7, [r0, #96]	; 0x60
 801fc8c:	eea6 7b01 	vfma.f64	d7, d6, d1
 801fc90:	ed90 6b16 	vldr	d6, [r0, #88]	; 0x58
 801fc94:	ee21 1b05 	vmul.f64	d1, d1, d5
 801fc98:	eea6 0b05 	vfma.f64	d0, d6, d5
 801fc9c:	eea7 0b01 	vfma.f64	d0, d7, d1
 801fca0:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
 801fca4:	4770      	bx	lr
 801fca6:	ed90 6b14 	vldr	d6, [r0, #80]	; 0x50
 801fcaa:	ee21 5b01 	vmul.f64	d5, d1, d1
 801fcae:	ed90 7b12 	vldr	d7, [r0, #72]	; 0x48
 801fcb2:	ed90 0b0c 	vldr	d0, [r0, #48]	; 0x30
 801fcb6:	eea1 7b06 	vfma.f64	d7, d1, d6
 801fcba:	ed90 6b0e 	vldr	d6, [r0, #56]	; 0x38
 801fcbe:	eea1 0b06 	vfma.f64	d0, d1, d6
 801fcc2:	ed90 6b10 	vldr	d6, [r0, #64]	; 0x40
 801fcc6:	ee21 1b05 	vmul.f64	d1, d1, d5
 801fcca:	eea5 0b06 	vfma.f64	d0, d5, d6
 801fcce:	e7e5      	b.n	801fc9c <sinf_poly+0x20>

0801fcd0 <cosf>:
 801fcd0:	b538      	push	{r3, r4, r5, lr}
 801fcd2:	ee10 4a10 	vmov	r4, s0
 801fcd6:	f3c4 530a 	ubfx	r3, r4, #20, #11
 801fcda:	f5b3 7f7d 	cmp.w	r3, #1012	; 0x3f4
 801fcde:	eeb7 7ac0 	vcvt.f64.f32	d7, s0
 801fce2:	d21f      	bcs.n	801fd24 <cosf+0x54>
 801fce4:	ee27 0b07 	vmul.f64	d0, d7, d7
 801fce8:	f5b3 7f66 	cmp.w	r3, #920	; 0x398
 801fcec:	f0c0 8088 	bcc.w	801fe00 <cosf+0x130>
 801fcf0:	ee20 4b00 	vmul.f64	d4, d0, d0
 801fcf4:	4b46      	ldr	r3, [pc, #280]	; (801fe10 <cosf+0x140>)
 801fcf6:	ed93 5b14 	vldr	d5, [r3, #80]	; 0x50
 801fcfa:	ed93 6b12 	vldr	d6, [r3, #72]	; 0x48
 801fcfe:	ed93 7b0c 	vldr	d7, [r3, #48]	; 0x30
 801fd02:	eea0 6b05 	vfma.f64	d6, d0, d5
 801fd06:	ed93 5b0e 	vldr	d5, [r3, #56]	; 0x38
 801fd0a:	eea0 7b05 	vfma.f64	d7, d0, d5
 801fd0e:	ed93 5b10 	vldr	d5, [r3, #64]	; 0x40
 801fd12:	ee20 0b04 	vmul.f64	d0, d0, d4
 801fd16:	eea4 7b05 	vfma.f64	d7, d4, d5
 801fd1a:	eea6 7b00 	vfma.f64	d7, d6, d0
 801fd1e:	eeb7 0bc7 	vcvt.f32.f64	s0, d7
 801fd22:	bd38      	pop	{r3, r4, r5, pc}
 801fd24:	f240 422e 	movw	r2, #1070	; 0x42e
 801fd28:	4293      	cmp	r3, r2
 801fd2a:	d82b      	bhi.n	801fd84 <cosf+0xb4>
 801fd2c:	4b38      	ldr	r3, [pc, #224]	; (801fe10 <cosf+0x140>)
 801fd2e:	ed93 6b08 	vldr	d6, [r3, #32]
 801fd32:	ee27 6b06 	vmul.f64	d6, d7, d6
 801fd36:	eefd 6bc6 	vcvt.s32.f64	s13, d6
 801fd3a:	f103 0070 	add.w	r0, r3, #112	; 0x70
 801fd3e:	ee16 1a90 	vmov	r1, s13
 801fd42:	f501 0100 	add.w	r1, r1, #8388608	; 0x800000
 801fd46:	1609      	asrs	r1, r1, #24
 801fd48:	ee06 1a90 	vmov	s13, r1
 801fd4c:	eeb8 5be6 	vcvt.f64.s32	d5, s13
 801fd50:	ed93 6b0a 	vldr	d6, [r3, #40]	; 0x28
 801fd54:	f001 0203 	and.w	r2, r1, #3
 801fd58:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
 801fd5c:	eea5 7b46 	vfms.f64	d7, d5, d6
 801fd60:	eeb0 0b47 	vmov.f64	d0, d7
 801fd64:	ed92 7b00 	vldr	d7, [r2]
 801fd68:	ee20 1b00 	vmul.f64	d1, d0, d0
 801fd6c:	f011 0f02 	tst.w	r1, #2
 801fd70:	bf08      	it	eq
 801fd72:	4618      	moveq	r0, r3
 801fd74:	f081 0101 	eor.w	r1, r1, #1
 801fd78:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801fd7c:	ee20 0b07 	vmul.f64	d0, d0, d7
 801fd80:	f7ff bf7c 	b.w	801fc7c <sinf_poly>
 801fd84:	f5b3 6fff 	cmp.w	r3, #2040	; 0x7f8
 801fd88:	d236      	bcs.n	801fdf8 <cosf+0x128>
 801fd8a:	4a22      	ldr	r2, [pc, #136]	; (801fe14 <cosf+0x144>)
 801fd8c:	f3c4 6183 	ubfx	r1, r4, #26, #4
 801fd90:	eb02 0581 	add.w	r5, r2, r1, lsl #2
 801fd94:	f3c4 0316 	ubfx	r3, r4, #0, #23
 801fd98:	f3c4 50c2 	ubfx	r0, r4, #23, #3
 801fd9c:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 801fda0:	4083      	lsls	r3, r0
 801fda2:	6a28      	ldr	r0, [r5, #32]
 801fda4:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 801fda8:	fba3 1000 	umull	r1, r0, r3, r0
 801fdac:	6929      	ldr	r1, [r5, #16]
 801fdae:	435a      	muls	r2, r3
 801fdb0:	fbe3 0201 	umlal	r0, r2, r3, r1
 801fdb4:	f102 5100 	add.w	r1, r2, #536870912	; 0x20000000
 801fdb8:	0f8d      	lsrs	r5, r1, #30
 801fdba:	f001 4140 	and.w	r1, r1, #3221225472	; 0xc0000000
 801fdbe:	1a51      	subs	r1, r2, r1
 801fdc0:	f7e0 fc6c 	bl	800069c <__aeabi_l2d>
 801fdc4:	eb05 74d4 	add.w	r4, r5, r4, lsr #31
 801fdc8:	4b11      	ldr	r3, [pc, #68]	; (801fe10 <cosf+0x140>)
 801fdca:	ed9f 7b0f 	vldr	d7, [pc, #60]	; 801fe08 <cosf+0x138>
 801fdce:	ec41 0b16 	vmov	d6, r0, r1
 801fdd2:	f004 0203 	and.w	r2, r4, #3
 801fdd6:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
 801fdda:	f014 0f02 	tst.w	r4, #2
 801fdde:	f103 0070 	add.w	r0, r3, #112	; 0x70
 801fde2:	ee26 7b07 	vmul.f64	d7, d6, d7
 801fde6:	ed92 0b00 	vldr	d0, [r2]
 801fdea:	ee27 1b07 	vmul.f64	d1, d7, d7
 801fdee:	f085 0101 	eor.w	r1, r5, #1
 801fdf2:	bf08      	it	eq
 801fdf4:	4618      	moveq	r0, r3
 801fdf6:	e7bf      	b.n	801fd78 <cosf+0xa8>
 801fdf8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801fdfc:	f000 b817 	b.w	801fe2e <__math_invalidf>
 801fe00:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 801fe04:	e78d      	b.n	801fd22 <cosf+0x52>
 801fe06:	bf00      	nop
 801fe08:	54442d18 	.word	0x54442d18
 801fe0c:	3c1921fb 	.word	0x3c1921fb
 801fe10:	08025d80 	.word	0x08025d80
 801fe14:	08025d20 	.word	0x08025d20

0801fe18 <with_errnof>:
 801fe18:	b513      	push	{r0, r1, r4, lr}
 801fe1a:	4604      	mov	r4, r0
 801fe1c:	ed8d 0a01 	vstr	s0, [sp, #4]
 801fe20:	f000 f910 	bl	8020044 <__errno>
 801fe24:	ed9d 0a01 	vldr	s0, [sp, #4]
 801fe28:	6004      	str	r4, [r0, #0]
 801fe2a:	b002      	add	sp, #8
 801fe2c:	bd10      	pop	{r4, pc}

0801fe2e <__math_invalidf>:
 801fe2e:	eef0 7a40 	vmov.f32	s15, s0
 801fe32:	ee30 7a40 	vsub.f32	s14, s0, s0
 801fe36:	eef4 7a67 	vcmp.f32	s15, s15
 801fe3a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fe3e:	ee87 0a07 	vdiv.f32	s0, s14, s14
 801fe42:	d602      	bvs.n	801fe4a <__math_invalidf+0x1c>
 801fe44:	2021      	movs	r0, #33	; 0x21
 801fe46:	f7ff bfe7 	b.w	801fe18 <with_errnof>
 801fe4a:	4770      	bx	lr

0801fe4c <sinf_poly>:
 801fe4c:	07cb      	lsls	r3, r1, #31
 801fe4e:	d412      	bmi.n	801fe76 <sinf_poly+0x2a>
 801fe50:	ee21 5b00 	vmul.f64	d5, d1, d0
 801fe54:	ed90 6b1a 	vldr	d6, [r0, #104]	; 0x68
 801fe58:	ed90 7b18 	vldr	d7, [r0, #96]	; 0x60
 801fe5c:	eea6 7b01 	vfma.f64	d7, d6, d1
 801fe60:	ed90 6b16 	vldr	d6, [r0, #88]	; 0x58
 801fe64:	ee21 1b05 	vmul.f64	d1, d1, d5
 801fe68:	eea6 0b05 	vfma.f64	d0, d6, d5
 801fe6c:	eea7 0b01 	vfma.f64	d0, d7, d1
 801fe70:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
 801fe74:	4770      	bx	lr
 801fe76:	ed90 6b14 	vldr	d6, [r0, #80]	; 0x50
 801fe7a:	ee21 5b01 	vmul.f64	d5, d1, d1
 801fe7e:	ed90 7b12 	vldr	d7, [r0, #72]	; 0x48
 801fe82:	ed90 0b0c 	vldr	d0, [r0, #48]	; 0x30
 801fe86:	eea1 7b06 	vfma.f64	d7, d1, d6
 801fe8a:	ed90 6b0e 	vldr	d6, [r0, #56]	; 0x38
 801fe8e:	eea1 0b06 	vfma.f64	d0, d1, d6
 801fe92:	ed90 6b10 	vldr	d6, [r0, #64]	; 0x40
 801fe96:	ee21 1b05 	vmul.f64	d1, d1, d5
 801fe9a:	eea5 0b06 	vfma.f64	d0, d5, d6
 801fe9e:	e7e5      	b.n	801fe6c <sinf_poly+0x20>

0801fea0 <sinf>:
 801fea0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801fea2:	ee10 4a10 	vmov	r4, s0
 801fea6:	f3c4 530a 	ubfx	r3, r4, #20, #11
 801feaa:	f5b3 7f7d 	cmp.w	r3, #1012	; 0x3f4
 801feae:	eeb7 6ac0 	vcvt.f64.f32	d6, s0
 801feb2:	eef0 7a40 	vmov.f32	s15, s0
 801feb6:	ea4f 5214 	mov.w	r2, r4, lsr #20
 801feba:	d218      	bcs.n	801feee <sinf+0x4e>
 801febc:	ee26 1b06 	vmul.f64	d1, d6, d6
 801fec0:	f5b3 7f66 	cmp.w	r3, #920	; 0x398
 801fec4:	d20a      	bcs.n	801fedc <sinf+0x3c>
 801fec6:	f412 6fff 	tst.w	r2, #2040	; 0x7f8
 801feca:	d103      	bne.n	801fed4 <sinf+0x34>
 801fecc:	eeb7 1bc1 	vcvt.f32.f64	s2, d1
 801fed0:	ed8d 1a01 	vstr	s2, [sp, #4]
 801fed4:	eeb0 0a67 	vmov.f32	s0, s15
 801fed8:	b003      	add	sp, #12
 801feda:	bd30      	pop	{r4, r5, pc}
 801fedc:	483a      	ldr	r0, [pc, #232]	; (801ffc8 <sinf+0x128>)
 801fede:	eeb0 0b46 	vmov.f64	d0, d6
 801fee2:	2100      	movs	r1, #0
 801fee4:	b003      	add	sp, #12
 801fee6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801feea:	f7ff bfaf 	b.w	801fe4c <sinf_poly>
 801feee:	f240 422e 	movw	r2, #1070	; 0x42e
 801fef2:	4293      	cmp	r3, r2
 801fef4:	d824      	bhi.n	801ff40 <sinf+0xa0>
 801fef6:	4b34      	ldr	r3, [pc, #208]	; (801ffc8 <sinf+0x128>)
 801fef8:	ed93 7b08 	vldr	d7, [r3, #32]
 801fefc:	ee26 7b07 	vmul.f64	d7, d6, d7
 801ff00:	eefd 7bc7 	vcvt.s32.f64	s15, d7
 801ff04:	f103 0070 	add.w	r0, r3, #112	; 0x70
 801ff08:	ee17 1a90 	vmov	r1, s15
 801ff0c:	f501 0100 	add.w	r1, r1, #8388608	; 0x800000
 801ff10:	1609      	asrs	r1, r1, #24
 801ff12:	ee07 1a90 	vmov	s15, r1
 801ff16:	f001 0203 	and.w	r2, r1, #3
 801ff1a:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
 801ff1e:	eeb8 5be7 	vcvt.f64.s32	d5, s15
 801ff22:	ed92 0b00 	vldr	d0, [r2]
 801ff26:	ed93 7b0a 	vldr	d7, [r3, #40]	; 0x28
 801ff2a:	f011 0f02 	tst.w	r1, #2
 801ff2e:	eea5 6b47 	vfms.f64	d6, d5, d7
 801ff32:	bf08      	it	eq
 801ff34:	4618      	moveq	r0, r3
 801ff36:	ee26 1b06 	vmul.f64	d1, d6, d6
 801ff3a:	ee20 0b06 	vmul.f64	d0, d0, d6
 801ff3e:	e7d1      	b.n	801fee4 <sinf+0x44>
 801ff40:	f5b3 6fff 	cmp.w	r3, #2040	; 0x7f8
 801ff44:	d237      	bcs.n	801ffb6 <sinf+0x116>
 801ff46:	4a21      	ldr	r2, [pc, #132]	; (801ffcc <sinf+0x12c>)
 801ff48:	f3c4 6183 	ubfx	r1, r4, #26, #4
 801ff4c:	eb02 0581 	add.w	r5, r2, r1, lsl #2
 801ff50:	f3c4 0316 	ubfx	r3, r4, #0, #23
 801ff54:	f3c4 50c2 	ubfx	r0, r4, #23, #3
 801ff58:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 801ff5c:	4083      	lsls	r3, r0
 801ff5e:	6a28      	ldr	r0, [r5, #32]
 801ff60:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 801ff64:	fba3 1000 	umull	r1, r0, r3, r0
 801ff68:	6929      	ldr	r1, [r5, #16]
 801ff6a:	435a      	muls	r2, r3
 801ff6c:	fbe3 0201 	umlal	r0, r2, r3, r1
 801ff70:	f102 5100 	add.w	r1, r2, #536870912	; 0x20000000
 801ff74:	0f8d      	lsrs	r5, r1, #30
 801ff76:	f001 4140 	and.w	r1, r1, #3221225472	; 0xc0000000
 801ff7a:	1a51      	subs	r1, r2, r1
 801ff7c:	f7e0 fb8e 	bl	800069c <__aeabi_l2d>
 801ff80:	eb05 74d4 	add.w	r4, r5, r4, lsr #31
 801ff84:	4b10      	ldr	r3, [pc, #64]	; (801ffc8 <sinf+0x128>)
 801ff86:	f004 0203 	and.w	r2, r4, #3
 801ff8a:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
 801ff8e:	ed9f 7b0c 	vldr	d7, [pc, #48]	; 801ffc0 <sinf+0x120>
 801ff92:	ed92 0b00 	vldr	d0, [r2]
 801ff96:	ec41 0b16 	vmov	d6, r0, r1
 801ff9a:	f014 0f02 	tst.w	r4, #2
 801ff9e:	ee26 7b07 	vmul.f64	d7, d6, d7
 801ffa2:	f103 0070 	add.w	r0, r3, #112	; 0x70
 801ffa6:	4629      	mov	r1, r5
 801ffa8:	bf08      	it	eq
 801ffaa:	4618      	moveq	r0, r3
 801ffac:	ee27 1b07 	vmul.f64	d1, d7, d7
 801ffb0:	ee20 0b07 	vmul.f64	d0, d0, d7
 801ffb4:	e796      	b.n	801fee4 <sinf+0x44>
 801ffb6:	b003      	add	sp, #12
 801ffb8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801ffbc:	f7ff bf37 	b.w	801fe2e <__math_invalidf>
 801ffc0:	54442d18 	.word	0x54442d18
 801ffc4:	3c1921fb 	.word	0x3c1921fb
 801ffc8:	08025d80 	.word	0x08025d80
 801ffcc:	08025d20 	.word	0x08025d20

0801ffd0 <abort>:
 801ffd0:	b508      	push	{r3, lr}
 801ffd2:	2006      	movs	r0, #6
 801ffd4:	f000 fcb8 	bl	8020948 <raise>
 801ffd8:	2001      	movs	r0, #1
 801ffda:	f7e1 faa9 	bl	8001530 <_exit>
	...

0801ffe0 <__assert_func>:
 801ffe0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801ffe2:	4614      	mov	r4, r2
 801ffe4:	461a      	mov	r2, r3
 801ffe6:	4b09      	ldr	r3, [pc, #36]	; (802000c <__assert_func+0x2c>)
 801ffe8:	681b      	ldr	r3, [r3, #0]
 801ffea:	4605      	mov	r5, r0
 801ffec:	68d8      	ldr	r0, [r3, #12]
 801ffee:	b14c      	cbz	r4, 8020004 <__assert_func+0x24>
 801fff0:	4b07      	ldr	r3, [pc, #28]	; (8020010 <__assert_func+0x30>)
 801fff2:	9100      	str	r1, [sp, #0]
 801fff4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801fff8:	4906      	ldr	r1, [pc, #24]	; (8020014 <__assert_func+0x34>)
 801fffa:	462b      	mov	r3, r5
 801fffc:	f000 f828 	bl	8020050 <fiprintf>
 8020000:	f7ff ffe6 	bl	801ffd0 <abort>
 8020004:	4b04      	ldr	r3, [pc, #16]	; (8020018 <__assert_func+0x38>)
 8020006:	461c      	mov	r4, r3
 8020008:	e7f3      	b.n	801fff2 <__assert_func+0x12>
 802000a:	bf00      	nop
 802000c:	240000b4 	.word	0x240000b4
 8020010:	08025e60 	.word	0x08025e60
 8020014:	08025e6d 	.word	0x08025e6d
 8020018:	08025e9b 	.word	0x08025e9b

0802001c <atexit>:
 802001c:	2300      	movs	r3, #0
 802001e:	4601      	mov	r1, r0
 8020020:	461a      	mov	r2, r3
 8020022:	4618      	mov	r0, r3
 8020024:	f000 bd6c 	b.w	8020b00 <__register_exitproc>

08020028 <__cxa_atexit>:
 8020028:	b510      	push	{r4, lr}
 802002a:	4c05      	ldr	r4, [pc, #20]	; (8020040 <__cxa_atexit+0x18>)
 802002c:	4613      	mov	r3, r2
 802002e:	b12c      	cbz	r4, 802003c <__cxa_atexit+0x14>
 8020030:	460a      	mov	r2, r1
 8020032:	4601      	mov	r1, r0
 8020034:	2002      	movs	r0, #2
 8020036:	f000 fd63 	bl	8020b00 <__register_exitproc>
 802003a:	bd10      	pop	{r4, pc}
 802003c:	4620      	mov	r0, r4
 802003e:	e7fc      	b.n	802003a <__cxa_atexit+0x12>
 8020040:	08020b01 	.word	0x08020b01

08020044 <__errno>:
 8020044:	4b01      	ldr	r3, [pc, #4]	; (802004c <__errno+0x8>)
 8020046:	6818      	ldr	r0, [r3, #0]
 8020048:	4770      	bx	lr
 802004a:	bf00      	nop
 802004c:	240000b4 	.word	0x240000b4

08020050 <fiprintf>:
 8020050:	b40e      	push	{r1, r2, r3}
 8020052:	b503      	push	{r0, r1, lr}
 8020054:	4601      	mov	r1, r0
 8020056:	ab03      	add	r3, sp, #12
 8020058:	4805      	ldr	r0, [pc, #20]	; (8020070 <fiprintf+0x20>)
 802005a:	f853 2b04 	ldr.w	r2, [r3], #4
 802005e:	6800      	ldr	r0, [r0, #0]
 8020060:	9301      	str	r3, [sp, #4]
 8020062:	f000 f975 	bl	8020350 <_vfiprintf_r>
 8020066:	b002      	add	sp, #8
 8020068:	f85d eb04 	ldr.w	lr, [sp], #4
 802006c:	b003      	add	sp, #12
 802006e:	4770      	bx	lr
 8020070:	240000b4 	.word	0x240000b4

08020074 <__libc_init_array>:
 8020074:	b570      	push	{r4, r5, r6, lr}
 8020076:	4d0d      	ldr	r5, [pc, #52]	; (80200ac <__libc_init_array+0x38>)
 8020078:	4c0d      	ldr	r4, [pc, #52]	; (80200b0 <__libc_init_array+0x3c>)
 802007a:	1b64      	subs	r4, r4, r5
 802007c:	10a4      	asrs	r4, r4, #2
 802007e:	2600      	movs	r6, #0
 8020080:	42a6      	cmp	r6, r4
 8020082:	d109      	bne.n	8020098 <__libc_init_array+0x24>
 8020084:	4d0b      	ldr	r5, [pc, #44]	; (80200b4 <__libc_init_array+0x40>)
 8020086:	4c0c      	ldr	r4, [pc, #48]	; (80200b8 <__libc_init_array+0x44>)
 8020088:	f001 f874 	bl	8021174 <_init>
 802008c:	1b64      	subs	r4, r4, r5
 802008e:	10a4      	asrs	r4, r4, #2
 8020090:	2600      	movs	r6, #0
 8020092:	42a6      	cmp	r6, r4
 8020094:	d105      	bne.n	80200a2 <__libc_init_array+0x2e>
 8020096:	bd70      	pop	{r4, r5, r6, pc}
 8020098:	f855 3b04 	ldr.w	r3, [r5], #4
 802009c:	4798      	blx	r3
 802009e:	3601      	adds	r6, #1
 80200a0:	e7ee      	b.n	8020080 <__libc_init_array+0xc>
 80200a2:	f855 3b04 	ldr.w	r3, [r5], #4
 80200a6:	4798      	blx	r3
 80200a8:	3601      	adds	r6, #1
 80200aa:	e7f2      	b.n	8020092 <__libc_init_array+0x1e>
 80200ac:	08033c10 	.word	0x08033c10
 80200b0:	08033c10 	.word	0x08033c10
 80200b4:	08033c10 	.word	0x08033c10
 80200b8:	08033c28 	.word	0x08033c28

080200bc <malloc>:
 80200bc:	4b02      	ldr	r3, [pc, #8]	; (80200c8 <malloc+0xc>)
 80200be:	4601      	mov	r1, r0
 80200c0:	6818      	ldr	r0, [r3, #0]
 80200c2:	f000 b8a7 	b.w	8020214 <_malloc_r>
 80200c6:	bf00      	nop
 80200c8:	240000b4 	.word	0x240000b4

080200cc <free>:
 80200cc:	4b02      	ldr	r3, [pc, #8]	; (80200d8 <free+0xc>)
 80200ce:	4601      	mov	r1, r0
 80200d0:	6818      	ldr	r0, [r3, #0]
 80200d2:	f000 b833 	b.w	802013c <_free_r>
 80200d6:	bf00      	nop
 80200d8:	240000b4 	.word	0x240000b4

080200dc <memcpy>:
 80200dc:	440a      	add	r2, r1
 80200de:	4291      	cmp	r1, r2
 80200e0:	f100 33ff 	add.w	r3, r0, #4294967295
 80200e4:	d100      	bne.n	80200e8 <memcpy+0xc>
 80200e6:	4770      	bx	lr
 80200e8:	b510      	push	{r4, lr}
 80200ea:	f811 4b01 	ldrb.w	r4, [r1], #1
 80200ee:	f803 4f01 	strb.w	r4, [r3, #1]!
 80200f2:	4291      	cmp	r1, r2
 80200f4:	d1f9      	bne.n	80200ea <memcpy+0xe>
 80200f6:	bd10      	pop	{r4, pc}

080200f8 <memmove>:
 80200f8:	4288      	cmp	r0, r1
 80200fa:	b510      	push	{r4, lr}
 80200fc:	eb01 0402 	add.w	r4, r1, r2
 8020100:	d902      	bls.n	8020108 <memmove+0x10>
 8020102:	4284      	cmp	r4, r0
 8020104:	4623      	mov	r3, r4
 8020106:	d807      	bhi.n	8020118 <memmove+0x20>
 8020108:	1e43      	subs	r3, r0, #1
 802010a:	42a1      	cmp	r1, r4
 802010c:	d008      	beq.n	8020120 <memmove+0x28>
 802010e:	f811 2b01 	ldrb.w	r2, [r1], #1
 8020112:	f803 2f01 	strb.w	r2, [r3, #1]!
 8020116:	e7f8      	b.n	802010a <memmove+0x12>
 8020118:	4402      	add	r2, r0
 802011a:	4601      	mov	r1, r0
 802011c:	428a      	cmp	r2, r1
 802011e:	d100      	bne.n	8020122 <memmove+0x2a>
 8020120:	bd10      	pop	{r4, pc}
 8020122:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8020126:	f802 4d01 	strb.w	r4, [r2, #-1]!
 802012a:	e7f7      	b.n	802011c <memmove+0x24>

0802012c <memset>:
 802012c:	4402      	add	r2, r0
 802012e:	4603      	mov	r3, r0
 8020130:	4293      	cmp	r3, r2
 8020132:	d100      	bne.n	8020136 <memset+0xa>
 8020134:	4770      	bx	lr
 8020136:	f803 1b01 	strb.w	r1, [r3], #1
 802013a:	e7f9      	b.n	8020130 <memset+0x4>

0802013c <_free_r>:
 802013c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802013e:	2900      	cmp	r1, #0
 8020140:	d044      	beq.n	80201cc <_free_r+0x90>
 8020142:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8020146:	9001      	str	r0, [sp, #4]
 8020148:	2b00      	cmp	r3, #0
 802014a:	f1a1 0404 	sub.w	r4, r1, #4
 802014e:	bfb8      	it	lt
 8020150:	18e4      	addlt	r4, r4, r3
 8020152:	f000 ff57 	bl	8021004 <__malloc_lock>
 8020156:	4a1e      	ldr	r2, [pc, #120]	; (80201d0 <_free_r+0x94>)
 8020158:	9801      	ldr	r0, [sp, #4]
 802015a:	6813      	ldr	r3, [r2, #0]
 802015c:	b933      	cbnz	r3, 802016c <_free_r+0x30>
 802015e:	6063      	str	r3, [r4, #4]
 8020160:	6014      	str	r4, [r2, #0]
 8020162:	b003      	add	sp, #12
 8020164:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8020168:	f000 bf52 	b.w	8021010 <__malloc_unlock>
 802016c:	42a3      	cmp	r3, r4
 802016e:	d908      	bls.n	8020182 <_free_r+0x46>
 8020170:	6825      	ldr	r5, [r4, #0]
 8020172:	1961      	adds	r1, r4, r5
 8020174:	428b      	cmp	r3, r1
 8020176:	bf01      	itttt	eq
 8020178:	6819      	ldreq	r1, [r3, #0]
 802017a:	685b      	ldreq	r3, [r3, #4]
 802017c:	1949      	addeq	r1, r1, r5
 802017e:	6021      	streq	r1, [r4, #0]
 8020180:	e7ed      	b.n	802015e <_free_r+0x22>
 8020182:	461a      	mov	r2, r3
 8020184:	685b      	ldr	r3, [r3, #4]
 8020186:	b10b      	cbz	r3, 802018c <_free_r+0x50>
 8020188:	42a3      	cmp	r3, r4
 802018a:	d9fa      	bls.n	8020182 <_free_r+0x46>
 802018c:	6811      	ldr	r1, [r2, #0]
 802018e:	1855      	adds	r5, r2, r1
 8020190:	42a5      	cmp	r5, r4
 8020192:	d10b      	bne.n	80201ac <_free_r+0x70>
 8020194:	6824      	ldr	r4, [r4, #0]
 8020196:	4421      	add	r1, r4
 8020198:	1854      	adds	r4, r2, r1
 802019a:	42a3      	cmp	r3, r4
 802019c:	6011      	str	r1, [r2, #0]
 802019e:	d1e0      	bne.n	8020162 <_free_r+0x26>
 80201a0:	681c      	ldr	r4, [r3, #0]
 80201a2:	685b      	ldr	r3, [r3, #4]
 80201a4:	6053      	str	r3, [r2, #4]
 80201a6:	4421      	add	r1, r4
 80201a8:	6011      	str	r1, [r2, #0]
 80201aa:	e7da      	b.n	8020162 <_free_r+0x26>
 80201ac:	d902      	bls.n	80201b4 <_free_r+0x78>
 80201ae:	230c      	movs	r3, #12
 80201b0:	6003      	str	r3, [r0, #0]
 80201b2:	e7d6      	b.n	8020162 <_free_r+0x26>
 80201b4:	6825      	ldr	r5, [r4, #0]
 80201b6:	1961      	adds	r1, r4, r5
 80201b8:	428b      	cmp	r3, r1
 80201ba:	bf04      	itt	eq
 80201bc:	6819      	ldreq	r1, [r3, #0]
 80201be:	685b      	ldreq	r3, [r3, #4]
 80201c0:	6063      	str	r3, [r4, #4]
 80201c2:	bf04      	itt	eq
 80201c4:	1949      	addeq	r1, r1, r5
 80201c6:	6021      	streq	r1, [r4, #0]
 80201c8:	6054      	str	r4, [r2, #4]
 80201ca:	e7ca      	b.n	8020162 <_free_r+0x26>
 80201cc:	b003      	add	sp, #12
 80201ce:	bd30      	pop	{r4, r5, pc}
 80201d0:	2400e1b4 	.word	0x2400e1b4

080201d4 <sbrk_aligned>:
 80201d4:	b570      	push	{r4, r5, r6, lr}
 80201d6:	4e0e      	ldr	r6, [pc, #56]	; (8020210 <sbrk_aligned+0x3c>)
 80201d8:	460c      	mov	r4, r1
 80201da:	6831      	ldr	r1, [r6, #0]
 80201dc:	4605      	mov	r5, r0
 80201de:	b911      	cbnz	r1, 80201e6 <sbrk_aligned+0x12>
 80201e0:	f000 fb7a 	bl	80208d8 <_sbrk_r>
 80201e4:	6030      	str	r0, [r6, #0]
 80201e6:	4621      	mov	r1, r4
 80201e8:	4628      	mov	r0, r5
 80201ea:	f000 fb75 	bl	80208d8 <_sbrk_r>
 80201ee:	1c43      	adds	r3, r0, #1
 80201f0:	d00a      	beq.n	8020208 <sbrk_aligned+0x34>
 80201f2:	1cc4      	adds	r4, r0, #3
 80201f4:	f024 0403 	bic.w	r4, r4, #3
 80201f8:	42a0      	cmp	r0, r4
 80201fa:	d007      	beq.n	802020c <sbrk_aligned+0x38>
 80201fc:	1a21      	subs	r1, r4, r0
 80201fe:	4628      	mov	r0, r5
 8020200:	f000 fb6a 	bl	80208d8 <_sbrk_r>
 8020204:	3001      	adds	r0, #1
 8020206:	d101      	bne.n	802020c <sbrk_aligned+0x38>
 8020208:	f04f 34ff 	mov.w	r4, #4294967295
 802020c:	4620      	mov	r0, r4
 802020e:	bd70      	pop	{r4, r5, r6, pc}
 8020210:	2400e1b8 	.word	0x2400e1b8

08020214 <_malloc_r>:
 8020214:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8020218:	1ccd      	adds	r5, r1, #3
 802021a:	f025 0503 	bic.w	r5, r5, #3
 802021e:	3508      	adds	r5, #8
 8020220:	2d0c      	cmp	r5, #12
 8020222:	bf38      	it	cc
 8020224:	250c      	movcc	r5, #12
 8020226:	2d00      	cmp	r5, #0
 8020228:	4607      	mov	r7, r0
 802022a:	db01      	blt.n	8020230 <_malloc_r+0x1c>
 802022c:	42a9      	cmp	r1, r5
 802022e:	d905      	bls.n	802023c <_malloc_r+0x28>
 8020230:	230c      	movs	r3, #12
 8020232:	603b      	str	r3, [r7, #0]
 8020234:	2600      	movs	r6, #0
 8020236:	4630      	mov	r0, r6
 8020238:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802023c:	4e2e      	ldr	r6, [pc, #184]	; (80202f8 <_malloc_r+0xe4>)
 802023e:	f000 fee1 	bl	8021004 <__malloc_lock>
 8020242:	6833      	ldr	r3, [r6, #0]
 8020244:	461c      	mov	r4, r3
 8020246:	bb34      	cbnz	r4, 8020296 <_malloc_r+0x82>
 8020248:	4629      	mov	r1, r5
 802024a:	4638      	mov	r0, r7
 802024c:	f7ff ffc2 	bl	80201d4 <sbrk_aligned>
 8020250:	1c43      	adds	r3, r0, #1
 8020252:	4604      	mov	r4, r0
 8020254:	d14d      	bne.n	80202f2 <_malloc_r+0xde>
 8020256:	6834      	ldr	r4, [r6, #0]
 8020258:	4626      	mov	r6, r4
 802025a:	2e00      	cmp	r6, #0
 802025c:	d140      	bne.n	80202e0 <_malloc_r+0xcc>
 802025e:	6823      	ldr	r3, [r4, #0]
 8020260:	4631      	mov	r1, r6
 8020262:	4638      	mov	r0, r7
 8020264:	eb04 0803 	add.w	r8, r4, r3
 8020268:	f000 fb36 	bl	80208d8 <_sbrk_r>
 802026c:	4580      	cmp	r8, r0
 802026e:	d13a      	bne.n	80202e6 <_malloc_r+0xd2>
 8020270:	6821      	ldr	r1, [r4, #0]
 8020272:	3503      	adds	r5, #3
 8020274:	1a6d      	subs	r5, r5, r1
 8020276:	f025 0503 	bic.w	r5, r5, #3
 802027a:	3508      	adds	r5, #8
 802027c:	2d0c      	cmp	r5, #12
 802027e:	bf38      	it	cc
 8020280:	250c      	movcc	r5, #12
 8020282:	4629      	mov	r1, r5
 8020284:	4638      	mov	r0, r7
 8020286:	f7ff ffa5 	bl	80201d4 <sbrk_aligned>
 802028a:	3001      	adds	r0, #1
 802028c:	d02b      	beq.n	80202e6 <_malloc_r+0xd2>
 802028e:	6823      	ldr	r3, [r4, #0]
 8020290:	442b      	add	r3, r5
 8020292:	6023      	str	r3, [r4, #0]
 8020294:	e00e      	b.n	80202b4 <_malloc_r+0xa0>
 8020296:	6822      	ldr	r2, [r4, #0]
 8020298:	1b52      	subs	r2, r2, r5
 802029a:	d41e      	bmi.n	80202da <_malloc_r+0xc6>
 802029c:	2a0b      	cmp	r2, #11
 802029e:	d916      	bls.n	80202ce <_malloc_r+0xba>
 80202a0:	1961      	adds	r1, r4, r5
 80202a2:	42a3      	cmp	r3, r4
 80202a4:	6025      	str	r5, [r4, #0]
 80202a6:	bf18      	it	ne
 80202a8:	6059      	strne	r1, [r3, #4]
 80202aa:	6863      	ldr	r3, [r4, #4]
 80202ac:	bf08      	it	eq
 80202ae:	6031      	streq	r1, [r6, #0]
 80202b0:	5162      	str	r2, [r4, r5]
 80202b2:	604b      	str	r3, [r1, #4]
 80202b4:	4638      	mov	r0, r7
 80202b6:	f104 060b 	add.w	r6, r4, #11
 80202ba:	f000 fea9 	bl	8021010 <__malloc_unlock>
 80202be:	f026 0607 	bic.w	r6, r6, #7
 80202c2:	1d23      	adds	r3, r4, #4
 80202c4:	1af2      	subs	r2, r6, r3
 80202c6:	d0b6      	beq.n	8020236 <_malloc_r+0x22>
 80202c8:	1b9b      	subs	r3, r3, r6
 80202ca:	50a3      	str	r3, [r4, r2]
 80202cc:	e7b3      	b.n	8020236 <_malloc_r+0x22>
 80202ce:	6862      	ldr	r2, [r4, #4]
 80202d0:	42a3      	cmp	r3, r4
 80202d2:	bf0c      	ite	eq
 80202d4:	6032      	streq	r2, [r6, #0]
 80202d6:	605a      	strne	r2, [r3, #4]
 80202d8:	e7ec      	b.n	80202b4 <_malloc_r+0xa0>
 80202da:	4623      	mov	r3, r4
 80202dc:	6864      	ldr	r4, [r4, #4]
 80202de:	e7b2      	b.n	8020246 <_malloc_r+0x32>
 80202e0:	4634      	mov	r4, r6
 80202e2:	6876      	ldr	r6, [r6, #4]
 80202e4:	e7b9      	b.n	802025a <_malloc_r+0x46>
 80202e6:	230c      	movs	r3, #12
 80202e8:	603b      	str	r3, [r7, #0]
 80202ea:	4638      	mov	r0, r7
 80202ec:	f000 fe90 	bl	8021010 <__malloc_unlock>
 80202f0:	e7a1      	b.n	8020236 <_malloc_r+0x22>
 80202f2:	6025      	str	r5, [r4, #0]
 80202f4:	e7de      	b.n	80202b4 <_malloc_r+0xa0>
 80202f6:	bf00      	nop
 80202f8:	2400e1b4 	.word	0x2400e1b4

080202fc <__sfputc_r>:
 80202fc:	6893      	ldr	r3, [r2, #8]
 80202fe:	3b01      	subs	r3, #1
 8020300:	2b00      	cmp	r3, #0
 8020302:	b410      	push	{r4}
 8020304:	6093      	str	r3, [r2, #8]
 8020306:	da08      	bge.n	802031a <__sfputc_r+0x1e>
 8020308:	6994      	ldr	r4, [r2, #24]
 802030a:	42a3      	cmp	r3, r4
 802030c:	db01      	blt.n	8020312 <__sfputc_r+0x16>
 802030e:	290a      	cmp	r1, #10
 8020310:	d103      	bne.n	802031a <__sfputc_r+0x1e>
 8020312:	f85d 4b04 	ldr.w	r4, [sp], #4
 8020316:	f000 bb33 	b.w	8020980 <__swbuf_r>
 802031a:	6813      	ldr	r3, [r2, #0]
 802031c:	1c58      	adds	r0, r3, #1
 802031e:	6010      	str	r0, [r2, #0]
 8020320:	7019      	strb	r1, [r3, #0]
 8020322:	4608      	mov	r0, r1
 8020324:	f85d 4b04 	ldr.w	r4, [sp], #4
 8020328:	4770      	bx	lr

0802032a <__sfputs_r>:
 802032a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802032c:	4606      	mov	r6, r0
 802032e:	460f      	mov	r7, r1
 8020330:	4614      	mov	r4, r2
 8020332:	18d5      	adds	r5, r2, r3
 8020334:	42ac      	cmp	r4, r5
 8020336:	d101      	bne.n	802033c <__sfputs_r+0x12>
 8020338:	2000      	movs	r0, #0
 802033a:	e007      	b.n	802034c <__sfputs_r+0x22>
 802033c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8020340:	463a      	mov	r2, r7
 8020342:	4630      	mov	r0, r6
 8020344:	f7ff ffda 	bl	80202fc <__sfputc_r>
 8020348:	1c43      	adds	r3, r0, #1
 802034a:	d1f3      	bne.n	8020334 <__sfputs_r+0xa>
 802034c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08020350 <_vfiprintf_r>:
 8020350:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020354:	460d      	mov	r5, r1
 8020356:	b09d      	sub	sp, #116	; 0x74
 8020358:	4614      	mov	r4, r2
 802035a:	4698      	mov	r8, r3
 802035c:	4606      	mov	r6, r0
 802035e:	b118      	cbz	r0, 8020368 <_vfiprintf_r+0x18>
 8020360:	6983      	ldr	r3, [r0, #24]
 8020362:	b90b      	cbnz	r3, 8020368 <_vfiprintf_r+0x18>
 8020364:	f000 fd48 	bl	8020df8 <__sinit>
 8020368:	4b89      	ldr	r3, [pc, #548]	; (8020590 <_vfiprintf_r+0x240>)
 802036a:	429d      	cmp	r5, r3
 802036c:	d11b      	bne.n	80203a6 <_vfiprintf_r+0x56>
 802036e:	6875      	ldr	r5, [r6, #4]
 8020370:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8020372:	07d9      	lsls	r1, r3, #31
 8020374:	d405      	bmi.n	8020382 <_vfiprintf_r+0x32>
 8020376:	89ab      	ldrh	r3, [r5, #12]
 8020378:	059a      	lsls	r2, r3, #22
 802037a:	d402      	bmi.n	8020382 <_vfiprintf_r+0x32>
 802037c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802037e:	f000 fdd9 	bl	8020f34 <__retarget_lock_acquire_recursive>
 8020382:	89ab      	ldrh	r3, [r5, #12]
 8020384:	071b      	lsls	r3, r3, #28
 8020386:	d501      	bpl.n	802038c <_vfiprintf_r+0x3c>
 8020388:	692b      	ldr	r3, [r5, #16]
 802038a:	b9eb      	cbnz	r3, 80203c8 <_vfiprintf_r+0x78>
 802038c:	4629      	mov	r1, r5
 802038e:	4630      	mov	r0, r6
 8020390:	f000 fb48 	bl	8020a24 <__swsetup_r>
 8020394:	b1c0      	cbz	r0, 80203c8 <_vfiprintf_r+0x78>
 8020396:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8020398:	07dc      	lsls	r4, r3, #31
 802039a:	d50e      	bpl.n	80203ba <_vfiprintf_r+0x6a>
 802039c:	f04f 30ff 	mov.w	r0, #4294967295
 80203a0:	b01d      	add	sp, #116	; 0x74
 80203a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80203a6:	4b7b      	ldr	r3, [pc, #492]	; (8020594 <_vfiprintf_r+0x244>)
 80203a8:	429d      	cmp	r5, r3
 80203aa:	d101      	bne.n	80203b0 <_vfiprintf_r+0x60>
 80203ac:	68b5      	ldr	r5, [r6, #8]
 80203ae:	e7df      	b.n	8020370 <_vfiprintf_r+0x20>
 80203b0:	4b79      	ldr	r3, [pc, #484]	; (8020598 <_vfiprintf_r+0x248>)
 80203b2:	429d      	cmp	r5, r3
 80203b4:	bf08      	it	eq
 80203b6:	68f5      	ldreq	r5, [r6, #12]
 80203b8:	e7da      	b.n	8020370 <_vfiprintf_r+0x20>
 80203ba:	89ab      	ldrh	r3, [r5, #12]
 80203bc:	0598      	lsls	r0, r3, #22
 80203be:	d4ed      	bmi.n	802039c <_vfiprintf_r+0x4c>
 80203c0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80203c2:	f000 fdb9 	bl	8020f38 <__retarget_lock_release_recursive>
 80203c6:	e7e9      	b.n	802039c <_vfiprintf_r+0x4c>
 80203c8:	2300      	movs	r3, #0
 80203ca:	9309      	str	r3, [sp, #36]	; 0x24
 80203cc:	2320      	movs	r3, #32
 80203ce:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80203d2:	f8cd 800c 	str.w	r8, [sp, #12]
 80203d6:	2330      	movs	r3, #48	; 0x30
 80203d8:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 802059c <_vfiprintf_r+0x24c>
 80203dc:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80203e0:	f04f 0901 	mov.w	r9, #1
 80203e4:	4623      	mov	r3, r4
 80203e6:	469a      	mov	sl, r3
 80203e8:	f813 2b01 	ldrb.w	r2, [r3], #1
 80203ec:	b10a      	cbz	r2, 80203f2 <_vfiprintf_r+0xa2>
 80203ee:	2a25      	cmp	r2, #37	; 0x25
 80203f0:	d1f9      	bne.n	80203e6 <_vfiprintf_r+0x96>
 80203f2:	ebba 0b04 	subs.w	fp, sl, r4
 80203f6:	d00b      	beq.n	8020410 <_vfiprintf_r+0xc0>
 80203f8:	465b      	mov	r3, fp
 80203fa:	4622      	mov	r2, r4
 80203fc:	4629      	mov	r1, r5
 80203fe:	4630      	mov	r0, r6
 8020400:	f7ff ff93 	bl	802032a <__sfputs_r>
 8020404:	3001      	adds	r0, #1
 8020406:	f000 80aa 	beq.w	802055e <_vfiprintf_r+0x20e>
 802040a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802040c:	445a      	add	r2, fp
 802040e:	9209      	str	r2, [sp, #36]	; 0x24
 8020410:	f89a 3000 	ldrb.w	r3, [sl]
 8020414:	2b00      	cmp	r3, #0
 8020416:	f000 80a2 	beq.w	802055e <_vfiprintf_r+0x20e>
 802041a:	2300      	movs	r3, #0
 802041c:	f04f 32ff 	mov.w	r2, #4294967295
 8020420:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8020424:	f10a 0a01 	add.w	sl, sl, #1
 8020428:	9304      	str	r3, [sp, #16]
 802042a:	9307      	str	r3, [sp, #28]
 802042c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8020430:	931a      	str	r3, [sp, #104]	; 0x68
 8020432:	4654      	mov	r4, sl
 8020434:	2205      	movs	r2, #5
 8020436:	f814 1b01 	ldrb.w	r1, [r4], #1
 802043a:	4858      	ldr	r0, [pc, #352]	; (802059c <_vfiprintf_r+0x24c>)
 802043c:	f7df ff50 	bl	80002e0 <memchr>
 8020440:	9a04      	ldr	r2, [sp, #16]
 8020442:	b9d8      	cbnz	r0, 802047c <_vfiprintf_r+0x12c>
 8020444:	06d1      	lsls	r1, r2, #27
 8020446:	bf44      	itt	mi
 8020448:	2320      	movmi	r3, #32
 802044a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802044e:	0713      	lsls	r3, r2, #28
 8020450:	bf44      	itt	mi
 8020452:	232b      	movmi	r3, #43	; 0x2b
 8020454:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8020458:	f89a 3000 	ldrb.w	r3, [sl]
 802045c:	2b2a      	cmp	r3, #42	; 0x2a
 802045e:	d015      	beq.n	802048c <_vfiprintf_r+0x13c>
 8020460:	9a07      	ldr	r2, [sp, #28]
 8020462:	4654      	mov	r4, sl
 8020464:	2000      	movs	r0, #0
 8020466:	f04f 0c0a 	mov.w	ip, #10
 802046a:	4621      	mov	r1, r4
 802046c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8020470:	3b30      	subs	r3, #48	; 0x30
 8020472:	2b09      	cmp	r3, #9
 8020474:	d94e      	bls.n	8020514 <_vfiprintf_r+0x1c4>
 8020476:	b1b0      	cbz	r0, 80204a6 <_vfiprintf_r+0x156>
 8020478:	9207      	str	r2, [sp, #28]
 802047a:	e014      	b.n	80204a6 <_vfiprintf_r+0x156>
 802047c:	eba0 0308 	sub.w	r3, r0, r8
 8020480:	fa09 f303 	lsl.w	r3, r9, r3
 8020484:	4313      	orrs	r3, r2
 8020486:	9304      	str	r3, [sp, #16]
 8020488:	46a2      	mov	sl, r4
 802048a:	e7d2      	b.n	8020432 <_vfiprintf_r+0xe2>
 802048c:	9b03      	ldr	r3, [sp, #12]
 802048e:	1d19      	adds	r1, r3, #4
 8020490:	681b      	ldr	r3, [r3, #0]
 8020492:	9103      	str	r1, [sp, #12]
 8020494:	2b00      	cmp	r3, #0
 8020496:	bfbb      	ittet	lt
 8020498:	425b      	neglt	r3, r3
 802049a:	f042 0202 	orrlt.w	r2, r2, #2
 802049e:	9307      	strge	r3, [sp, #28]
 80204a0:	9307      	strlt	r3, [sp, #28]
 80204a2:	bfb8      	it	lt
 80204a4:	9204      	strlt	r2, [sp, #16]
 80204a6:	7823      	ldrb	r3, [r4, #0]
 80204a8:	2b2e      	cmp	r3, #46	; 0x2e
 80204aa:	d10c      	bne.n	80204c6 <_vfiprintf_r+0x176>
 80204ac:	7863      	ldrb	r3, [r4, #1]
 80204ae:	2b2a      	cmp	r3, #42	; 0x2a
 80204b0:	d135      	bne.n	802051e <_vfiprintf_r+0x1ce>
 80204b2:	9b03      	ldr	r3, [sp, #12]
 80204b4:	1d1a      	adds	r2, r3, #4
 80204b6:	681b      	ldr	r3, [r3, #0]
 80204b8:	9203      	str	r2, [sp, #12]
 80204ba:	2b00      	cmp	r3, #0
 80204bc:	bfb8      	it	lt
 80204be:	f04f 33ff 	movlt.w	r3, #4294967295
 80204c2:	3402      	adds	r4, #2
 80204c4:	9305      	str	r3, [sp, #20]
 80204c6:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 80205ac <_vfiprintf_r+0x25c>
 80204ca:	7821      	ldrb	r1, [r4, #0]
 80204cc:	2203      	movs	r2, #3
 80204ce:	4650      	mov	r0, sl
 80204d0:	f7df ff06 	bl	80002e0 <memchr>
 80204d4:	b140      	cbz	r0, 80204e8 <_vfiprintf_r+0x198>
 80204d6:	2340      	movs	r3, #64	; 0x40
 80204d8:	eba0 000a 	sub.w	r0, r0, sl
 80204dc:	fa03 f000 	lsl.w	r0, r3, r0
 80204e0:	9b04      	ldr	r3, [sp, #16]
 80204e2:	4303      	orrs	r3, r0
 80204e4:	3401      	adds	r4, #1
 80204e6:	9304      	str	r3, [sp, #16]
 80204e8:	f814 1b01 	ldrb.w	r1, [r4], #1
 80204ec:	482c      	ldr	r0, [pc, #176]	; (80205a0 <_vfiprintf_r+0x250>)
 80204ee:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80204f2:	2206      	movs	r2, #6
 80204f4:	f7df fef4 	bl	80002e0 <memchr>
 80204f8:	2800      	cmp	r0, #0
 80204fa:	d03f      	beq.n	802057c <_vfiprintf_r+0x22c>
 80204fc:	4b29      	ldr	r3, [pc, #164]	; (80205a4 <_vfiprintf_r+0x254>)
 80204fe:	bb1b      	cbnz	r3, 8020548 <_vfiprintf_r+0x1f8>
 8020500:	9b03      	ldr	r3, [sp, #12]
 8020502:	3307      	adds	r3, #7
 8020504:	f023 0307 	bic.w	r3, r3, #7
 8020508:	3308      	adds	r3, #8
 802050a:	9303      	str	r3, [sp, #12]
 802050c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802050e:	443b      	add	r3, r7
 8020510:	9309      	str	r3, [sp, #36]	; 0x24
 8020512:	e767      	b.n	80203e4 <_vfiprintf_r+0x94>
 8020514:	fb0c 3202 	mla	r2, ip, r2, r3
 8020518:	460c      	mov	r4, r1
 802051a:	2001      	movs	r0, #1
 802051c:	e7a5      	b.n	802046a <_vfiprintf_r+0x11a>
 802051e:	2300      	movs	r3, #0
 8020520:	3401      	adds	r4, #1
 8020522:	9305      	str	r3, [sp, #20]
 8020524:	4619      	mov	r1, r3
 8020526:	f04f 0c0a 	mov.w	ip, #10
 802052a:	4620      	mov	r0, r4
 802052c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8020530:	3a30      	subs	r2, #48	; 0x30
 8020532:	2a09      	cmp	r2, #9
 8020534:	d903      	bls.n	802053e <_vfiprintf_r+0x1ee>
 8020536:	2b00      	cmp	r3, #0
 8020538:	d0c5      	beq.n	80204c6 <_vfiprintf_r+0x176>
 802053a:	9105      	str	r1, [sp, #20]
 802053c:	e7c3      	b.n	80204c6 <_vfiprintf_r+0x176>
 802053e:	fb0c 2101 	mla	r1, ip, r1, r2
 8020542:	4604      	mov	r4, r0
 8020544:	2301      	movs	r3, #1
 8020546:	e7f0      	b.n	802052a <_vfiprintf_r+0x1da>
 8020548:	ab03      	add	r3, sp, #12
 802054a:	9300      	str	r3, [sp, #0]
 802054c:	462a      	mov	r2, r5
 802054e:	4b16      	ldr	r3, [pc, #88]	; (80205a8 <_vfiprintf_r+0x258>)
 8020550:	a904      	add	r1, sp, #16
 8020552:	4630      	mov	r0, r6
 8020554:	f3af 8000 	nop.w
 8020558:	4607      	mov	r7, r0
 802055a:	1c78      	adds	r0, r7, #1
 802055c:	d1d6      	bne.n	802050c <_vfiprintf_r+0x1bc>
 802055e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8020560:	07d9      	lsls	r1, r3, #31
 8020562:	d405      	bmi.n	8020570 <_vfiprintf_r+0x220>
 8020564:	89ab      	ldrh	r3, [r5, #12]
 8020566:	059a      	lsls	r2, r3, #22
 8020568:	d402      	bmi.n	8020570 <_vfiprintf_r+0x220>
 802056a:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802056c:	f000 fce4 	bl	8020f38 <__retarget_lock_release_recursive>
 8020570:	89ab      	ldrh	r3, [r5, #12]
 8020572:	065b      	lsls	r3, r3, #25
 8020574:	f53f af12 	bmi.w	802039c <_vfiprintf_r+0x4c>
 8020578:	9809      	ldr	r0, [sp, #36]	; 0x24
 802057a:	e711      	b.n	80203a0 <_vfiprintf_r+0x50>
 802057c:	ab03      	add	r3, sp, #12
 802057e:	9300      	str	r3, [sp, #0]
 8020580:	462a      	mov	r2, r5
 8020582:	4b09      	ldr	r3, [pc, #36]	; (80205a8 <_vfiprintf_r+0x258>)
 8020584:	a904      	add	r1, sp, #16
 8020586:	4630      	mov	r0, r6
 8020588:	f000 f880 	bl	802068c <_printf_i>
 802058c:	e7e4      	b.n	8020558 <_vfiprintf_r+0x208>
 802058e:	bf00      	nop
 8020590:	08025ef8 	.word	0x08025ef8
 8020594:	08025f18 	.word	0x08025f18
 8020598:	08025ed8 	.word	0x08025ed8
 802059c:	08025ea0 	.word	0x08025ea0
 80205a0:	08025eaa 	.word	0x08025eaa
 80205a4:	00000000 	.word	0x00000000
 80205a8:	0802032b 	.word	0x0802032b
 80205ac:	08025ea6 	.word	0x08025ea6

080205b0 <_printf_common>:
 80205b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80205b4:	4616      	mov	r6, r2
 80205b6:	4699      	mov	r9, r3
 80205b8:	688a      	ldr	r2, [r1, #8]
 80205ba:	690b      	ldr	r3, [r1, #16]
 80205bc:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80205c0:	4293      	cmp	r3, r2
 80205c2:	bfb8      	it	lt
 80205c4:	4613      	movlt	r3, r2
 80205c6:	6033      	str	r3, [r6, #0]
 80205c8:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80205cc:	4607      	mov	r7, r0
 80205ce:	460c      	mov	r4, r1
 80205d0:	b10a      	cbz	r2, 80205d6 <_printf_common+0x26>
 80205d2:	3301      	adds	r3, #1
 80205d4:	6033      	str	r3, [r6, #0]
 80205d6:	6823      	ldr	r3, [r4, #0]
 80205d8:	0699      	lsls	r1, r3, #26
 80205da:	bf42      	ittt	mi
 80205dc:	6833      	ldrmi	r3, [r6, #0]
 80205de:	3302      	addmi	r3, #2
 80205e0:	6033      	strmi	r3, [r6, #0]
 80205e2:	6825      	ldr	r5, [r4, #0]
 80205e4:	f015 0506 	ands.w	r5, r5, #6
 80205e8:	d106      	bne.n	80205f8 <_printf_common+0x48>
 80205ea:	f104 0a19 	add.w	sl, r4, #25
 80205ee:	68e3      	ldr	r3, [r4, #12]
 80205f0:	6832      	ldr	r2, [r6, #0]
 80205f2:	1a9b      	subs	r3, r3, r2
 80205f4:	42ab      	cmp	r3, r5
 80205f6:	dc26      	bgt.n	8020646 <_printf_common+0x96>
 80205f8:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 80205fc:	1e13      	subs	r3, r2, #0
 80205fe:	6822      	ldr	r2, [r4, #0]
 8020600:	bf18      	it	ne
 8020602:	2301      	movne	r3, #1
 8020604:	0692      	lsls	r2, r2, #26
 8020606:	d42b      	bmi.n	8020660 <_printf_common+0xb0>
 8020608:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802060c:	4649      	mov	r1, r9
 802060e:	4638      	mov	r0, r7
 8020610:	47c0      	blx	r8
 8020612:	3001      	adds	r0, #1
 8020614:	d01e      	beq.n	8020654 <_printf_common+0xa4>
 8020616:	6823      	ldr	r3, [r4, #0]
 8020618:	68e5      	ldr	r5, [r4, #12]
 802061a:	6832      	ldr	r2, [r6, #0]
 802061c:	f003 0306 	and.w	r3, r3, #6
 8020620:	2b04      	cmp	r3, #4
 8020622:	bf08      	it	eq
 8020624:	1aad      	subeq	r5, r5, r2
 8020626:	68a3      	ldr	r3, [r4, #8]
 8020628:	6922      	ldr	r2, [r4, #16]
 802062a:	bf0c      	ite	eq
 802062c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8020630:	2500      	movne	r5, #0
 8020632:	4293      	cmp	r3, r2
 8020634:	bfc4      	itt	gt
 8020636:	1a9b      	subgt	r3, r3, r2
 8020638:	18ed      	addgt	r5, r5, r3
 802063a:	2600      	movs	r6, #0
 802063c:	341a      	adds	r4, #26
 802063e:	42b5      	cmp	r5, r6
 8020640:	d11a      	bne.n	8020678 <_printf_common+0xc8>
 8020642:	2000      	movs	r0, #0
 8020644:	e008      	b.n	8020658 <_printf_common+0xa8>
 8020646:	2301      	movs	r3, #1
 8020648:	4652      	mov	r2, sl
 802064a:	4649      	mov	r1, r9
 802064c:	4638      	mov	r0, r7
 802064e:	47c0      	blx	r8
 8020650:	3001      	adds	r0, #1
 8020652:	d103      	bne.n	802065c <_printf_common+0xac>
 8020654:	f04f 30ff 	mov.w	r0, #4294967295
 8020658:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802065c:	3501      	adds	r5, #1
 802065e:	e7c6      	b.n	80205ee <_printf_common+0x3e>
 8020660:	18e1      	adds	r1, r4, r3
 8020662:	1c5a      	adds	r2, r3, #1
 8020664:	2030      	movs	r0, #48	; 0x30
 8020666:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802066a:	4422      	add	r2, r4
 802066c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8020670:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8020674:	3302      	adds	r3, #2
 8020676:	e7c7      	b.n	8020608 <_printf_common+0x58>
 8020678:	2301      	movs	r3, #1
 802067a:	4622      	mov	r2, r4
 802067c:	4649      	mov	r1, r9
 802067e:	4638      	mov	r0, r7
 8020680:	47c0      	blx	r8
 8020682:	3001      	adds	r0, #1
 8020684:	d0e6      	beq.n	8020654 <_printf_common+0xa4>
 8020686:	3601      	adds	r6, #1
 8020688:	e7d9      	b.n	802063e <_printf_common+0x8e>
	...

0802068c <_printf_i>:
 802068c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8020690:	7e0f      	ldrb	r7, [r1, #24]
 8020692:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8020694:	2f78      	cmp	r7, #120	; 0x78
 8020696:	4691      	mov	r9, r2
 8020698:	4680      	mov	r8, r0
 802069a:	460c      	mov	r4, r1
 802069c:	469a      	mov	sl, r3
 802069e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 80206a2:	d807      	bhi.n	80206b4 <_printf_i+0x28>
 80206a4:	2f62      	cmp	r7, #98	; 0x62
 80206a6:	d80a      	bhi.n	80206be <_printf_i+0x32>
 80206a8:	2f00      	cmp	r7, #0
 80206aa:	f000 80d8 	beq.w	802085e <_printf_i+0x1d2>
 80206ae:	2f58      	cmp	r7, #88	; 0x58
 80206b0:	f000 80a3 	beq.w	80207fa <_printf_i+0x16e>
 80206b4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80206b8:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 80206bc:	e03a      	b.n	8020734 <_printf_i+0xa8>
 80206be:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 80206c2:	2b15      	cmp	r3, #21
 80206c4:	d8f6      	bhi.n	80206b4 <_printf_i+0x28>
 80206c6:	a101      	add	r1, pc, #4	; (adr r1, 80206cc <_printf_i+0x40>)
 80206c8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80206cc:	08020725 	.word	0x08020725
 80206d0:	08020739 	.word	0x08020739
 80206d4:	080206b5 	.word	0x080206b5
 80206d8:	080206b5 	.word	0x080206b5
 80206dc:	080206b5 	.word	0x080206b5
 80206e0:	080206b5 	.word	0x080206b5
 80206e4:	08020739 	.word	0x08020739
 80206e8:	080206b5 	.word	0x080206b5
 80206ec:	080206b5 	.word	0x080206b5
 80206f0:	080206b5 	.word	0x080206b5
 80206f4:	080206b5 	.word	0x080206b5
 80206f8:	08020845 	.word	0x08020845
 80206fc:	08020769 	.word	0x08020769
 8020700:	08020827 	.word	0x08020827
 8020704:	080206b5 	.word	0x080206b5
 8020708:	080206b5 	.word	0x080206b5
 802070c:	08020867 	.word	0x08020867
 8020710:	080206b5 	.word	0x080206b5
 8020714:	08020769 	.word	0x08020769
 8020718:	080206b5 	.word	0x080206b5
 802071c:	080206b5 	.word	0x080206b5
 8020720:	0802082f 	.word	0x0802082f
 8020724:	682b      	ldr	r3, [r5, #0]
 8020726:	1d1a      	adds	r2, r3, #4
 8020728:	681b      	ldr	r3, [r3, #0]
 802072a:	602a      	str	r2, [r5, #0]
 802072c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8020730:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8020734:	2301      	movs	r3, #1
 8020736:	e0a3      	b.n	8020880 <_printf_i+0x1f4>
 8020738:	6820      	ldr	r0, [r4, #0]
 802073a:	6829      	ldr	r1, [r5, #0]
 802073c:	0606      	lsls	r6, r0, #24
 802073e:	f101 0304 	add.w	r3, r1, #4
 8020742:	d50a      	bpl.n	802075a <_printf_i+0xce>
 8020744:	680e      	ldr	r6, [r1, #0]
 8020746:	602b      	str	r3, [r5, #0]
 8020748:	2e00      	cmp	r6, #0
 802074a:	da03      	bge.n	8020754 <_printf_i+0xc8>
 802074c:	232d      	movs	r3, #45	; 0x2d
 802074e:	4276      	negs	r6, r6
 8020750:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8020754:	485e      	ldr	r0, [pc, #376]	; (80208d0 <_printf_i+0x244>)
 8020756:	230a      	movs	r3, #10
 8020758:	e019      	b.n	802078e <_printf_i+0x102>
 802075a:	680e      	ldr	r6, [r1, #0]
 802075c:	602b      	str	r3, [r5, #0]
 802075e:	f010 0f40 	tst.w	r0, #64	; 0x40
 8020762:	bf18      	it	ne
 8020764:	b236      	sxthne	r6, r6
 8020766:	e7ef      	b.n	8020748 <_printf_i+0xbc>
 8020768:	682b      	ldr	r3, [r5, #0]
 802076a:	6820      	ldr	r0, [r4, #0]
 802076c:	1d19      	adds	r1, r3, #4
 802076e:	6029      	str	r1, [r5, #0]
 8020770:	0601      	lsls	r1, r0, #24
 8020772:	d501      	bpl.n	8020778 <_printf_i+0xec>
 8020774:	681e      	ldr	r6, [r3, #0]
 8020776:	e002      	b.n	802077e <_printf_i+0xf2>
 8020778:	0646      	lsls	r6, r0, #25
 802077a:	d5fb      	bpl.n	8020774 <_printf_i+0xe8>
 802077c:	881e      	ldrh	r6, [r3, #0]
 802077e:	4854      	ldr	r0, [pc, #336]	; (80208d0 <_printf_i+0x244>)
 8020780:	2f6f      	cmp	r7, #111	; 0x6f
 8020782:	bf0c      	ite	eq
 8020784:	2308      	moveq	r3, #8
 8020786:	230a      	movne	r3, #10
 8020788:	2100      	movs	r1, #0
 802078a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802078e:	6865      	ldr	r5, [r4, #4]
 8020790:	60a5      	str	r5, [r4, #8]
 8020792:	2d00      	cmp	r5, #0
 8020794:	bfa2      	ittt	ge
 8020796:	6821      	ldrge	r1, [r4, #0]
 8020798:	f021 0104 	bicge.w	r1, r1, #4
 802079c:	6021      	strge	r1, [r4, #0]
 802079e:	b90e      	cbnz	r6, 80207a4 <_printf_i+0x118>
 80207a0:	2d00      	cmp	r5, #0
 80207a2:	d04d      	beq.n	8020840 <_printf_i+0x1b4>
 80207a4:	4615      	mov	r5, r2
 80207a6:	fbb6 f1f3 	udiv	r1, r6, r3
 80207aa:	fb03 6711 	mls	r7, r3, r1, r6
 80207ae:	5dc7      	ldrb	r7, [r0, r7]
 80207b0:	f805 7d01 	strb.w	r7, [r5, #-1]!
 80207b4:	4637      	mov	r7, r6
 80207b6:	42bb      	cmp	r3, r7
 80207b8:	460e      	mov	r6, r1
 80207ba:	d9f4      	bls.n	80207a6 <_printf_i+0x11a>
 80207bc:	2b08      	cmp	r3, #8
 80207be:	d10b      	bne.n	80207d8 <_printf_i+0x14c>
 80207c0:	6823      	ldr	r3, [r4, #0]
 80207c2:	07de      	lsls	r6, r3, #31
 80207c4:	d508      	bpl.n	80207d8 <_printf_i+0x14c>
 80207c6:	6923      	ldr	r3, [r4, #16]
 80207c8:	6861      	ldr	r1, [r4, #4]
 80207ca:	4299      	cmp	r1, r3
 80207cc:	bfde      	ittt	le
 80207ce:	2330      	movle	r3, #48	; 0x30
 80207d0:	f805 3c01 	strble.w	r3, [r5, #-1]
 80207d4:	f105 35ff 	addle.w	r5, r5, #4294967295
 80207d8:	1b52      	subs	r2, r2, r5
 80207da:	6122      	str	r2, [r4, #16]
 80207dc:	f8cd a000 	str.w	sl, [sp]
 80207e0:	464b      	mov	r3, r9
 80207e2:	aa03      	add	r2, sp, #12
 80207e4:	4621      	mov	r1, r4
 80207e6:	4640      	mov	r0, r8
 80207e8:	f7ff fee2 	bl	80205b0 <_printf_common>
 80207ec:	3001      	adds	r0, #1
 80207ee:	d14c      	bne.n	802088a <_printf_i+0x1fe>
 80207f0:	f04f 30ff 	mov.w	r0, #4294967295
 80207f4:	b004      	add	sp, #16
 80207f6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80207fa:	4835      	ldr	r0, [pc, #212]	; (80208d0 <_printf_i+0x244>)
 80207fc:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8020800:	6829      	ldr	r1, [r5, #0]
 8020802:	6823      	ldr	r3, [r4, #0]
 8020804:	f851 6b04 	ldr.w	r6, [r1], #4
 8020808:	6029      	str	r1, [r5, #0]
 802080a:	061d      	lsls	r5, r3, #24
 802080c:	d514      	bpl.n	8020838 <_printf_i+0x1ac>
 802080e:	07df      	lsls	r7, r3, #31
 8020810:	bf44      	itt	mi
 8020812:	f043 0320 	orrmi.w	r3, r3, #32
 8020816:	6023      	strmi	r3, [r4, #0]
 8020818:	b91e      	cbnz	r6, 8020822 <_printf_i+0x196>
 802081a:	6823      	ldr	r3, [r4, #0]
 802081c:	f023 0320 	bic.w	r3, r3, #32
 8020820:	6023      	str	r3, [r4, #0]
 8020822:	2310      	movs	r3, #16
 8020824:	e7b0      	b.n	8020788 <_printf_i+0xfc>
 8020826:	6823      	ldr	r3, [r4, #0]
 8020828:	f043 0320 	orr.w	r3, r3, #32
 802082c:	6023      	str	r3, [r4, #0]
 802082e:	2378      	movs	r3, #120	; 0x78
 8020830:	4828      	ldr	r0, [pc, #160]	; (80208d4 <_printf_i+0x248>)
 8020832:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8020836:	e7e3      	b.n	8020800 <_printf_i+0x174>
 8020838:	0659      	lsls	r1, r3, #25
 802083a:	bf48      	it	mi
 802083c:	b2b6      	uxthmi	r6, r6
 802083e:	e7e6      	b.n	802080e <_printf_i+0x182>
 8020840:	4615      	mov	r5, r2
 8020842:	e7bb      	b.n	80207bc <_printf_i+0x130>
 8020844:	682b      	ldr	r3, [r5, #0]
 8020846:	6826      	ldr	r6, [r4, #0]
 8020848:	6961      	ldr	r1, [r4, #20]
 802084a:	1d18      	adds	r0, r3, #4
 802084c:	6028      	str	r0, [r5, #0]
 802084e:	0635      	lsls	r5, r6, #24
 8020850:	681b      	ldr	r3, [r3, #0]
 8020852:	d501      	bpl.n	8020858 <_printf_i+0x1cc>
 8020854:	6019      	str	r1, [r3, #0]
 8020856:	e002      	b.n	802085e <_printf_i+0x1d2>
 8020858:	0670      	lsls	r0, r6, #25
 802085a:	d5fb      	bpl.n	8020854 <_printf_i+0x1c8>
 802085c:	8019      	strh	r1, [r3, #0]
 802085e:	2300      	movs	r3, #0
 8020860:	6123      	str	r3, [r4, #16]
 8020862:	4615      	mov	r5, r2
 8020864:	e7ba      	b.n	80207dc <_printf_i+0x150>
 8020866:	682b      	ldr	r3, [r5, #0]
 8020868:	1d1a      	adds	r2, r3, #4
 802086a:	602a      	str	r2, [r5, #0]
 802086c:	681d      	ldr	r5, [r3, #0]
 802086e:	6862      	ldr	r2, [r4, #4]
 8020870:	2100      	movs	r1, #0
 8020872:	4628      	mov	r0, r5
 8020874:	f7df fd34 	bl	80002e0 <memchr>
 8020878:	b108      	cbz	r0, 802087e <_printf_i+0x1f2>
 802087a:	1b40      	subs	r0, r0, r5
 802087c:	6060      	str	r0, [r4, #4]
 802087e:	6863      	ldr	r3, [r4, #4]
 8020880:	6123      	str	r3, [r4, #16]
 8020882:	2300      	movs	r3, #0
 8020884:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8020888:	e7a8      	b.n	80207dc <_printf_i+0x150>
 802088a:	6923      	ldr	r3, [r4, #16]
 802088c:	462a      	mov	r2, r5
 802088e:	4649      	mov	r1, r9
 8020890:	4640      	mov	r0, r8
 8020892:	47d0      	blx	sl
 8020894:	3001      	adds	r0, #1
 8020896:	d0ab      	beq.n	80207f0 <_printf_i+0x164>
 8020898:	6823      	ldr	r3, [r4, #0]
 802089a:	079b      	lsls	r3, r3, #30
 802089c:	d413      	bmi.n	80208c6 <_printf_i+0x23a>
 802089e:	68e0      	ldr	r0, [r4, #12]
 80208a0:	9b03      	ldr	r3, [sp, #12]
 80208a2:	4298      	cmp	r0, r3
 80208a4:	bfb8      	it	lt
 80208a6:	4618      	movlt	r0, r3
 80208a8:	e7a4      	b.n	80207f4 <_printf_i+0x168>
 80208aa:	2301      	movs	r3, #1
 80208ac:	4632      	mov	r2, r6
 80208ae:	4649      	mov	r1, r9
 80208b0:	4640      	mov	r0, r8
 80208b2:	47d0      	blx	sl
 80208b4:	3001      	adds	r0, #1
 80208b6:	d09b      	beq.n	80207f0 <_printf_i+0x164>
 80208b8:	3501      	adds	r5, #1
 80208ba:	68e3      	ldr	r3, [r4, #12]
 80208bc:	9903      	ldr	r1, [sp, #12]
 80208be:	1a5b      	subs	r3, r3, r1
 80208c0:	42ab      	cmp	r3, r5
 80208c2:	dcf2      	bgt.n	80208aa <_printf_i+0x21e>
 80208c4:	e7eb      	b.n	802089e <_printf_i+0x212>
 80208c6:	2500      	movs	r5, #0
 80208c8:	f104 0619 	add.w	r6, r4, #25
 80208cc:	e7f5      	b.n	80208ba <_printf_i+0x22e>
 80208ce:	bf00      	nop
 80208d0:	08025eb1 	.word	0x08025eb1
 80208d4:	08025ec2 	.word	0x08025ec2

080208d8 <_sbrk_r>:
 80208d8:	b538      	push	{r3, r4, r5, lr}
 80208da:	4d06      	ldr	r5, [pc, #24]	; (80208f4 <_sbrk_r+0x1c>)
 80208dc:	2300      	movs	r3, #0
 80208de:	4604      	mov	r4, r0
 80208e0:	4608      	mov	r0, r1
 80208e2:	602b      	str	r3, [r5, #0]
 80208e4:	f7e0 fe52 	bl	800158c <_sbrk>
 80208e8:	1c43      	adds	r3, r0, #1
 80208ea:	d102      	bne.n	80208f2 <_sbrk_r+0x1a>
 80208ec:	682b      	ldr	r3, [r5, #0]
 80208ee:	b103      	cbz	r3, 80208f2 <_sbrk_r+0x1a>
 80208f0:	6023      	str	r3, [r4, #0]
 80208f2:	bd38      	pop	{r3, r4, r5, pc}
 80208f4:	2400e358 	.word	0x2400e358

080208f8 <_raise_r>:
 80208f8:	291f      	cmp	r1, #31
 80208fa:	b538      	push	{r3, r4, r5, lr}
 80208fc:	4604      	mov	r4, r0
 80208fe:	460d      	mov	r5, r1
 8020900:	d904      	bls.n	802090c <_raise_r+0x14>
 8020902:	2316      	movs	r3, #22
 8020904:	6003      	str	r3, [r0, #0]
 8020906:	f04f 30ff 	mov.w	r0, #4294967295
 802090a:	bd38      	pop	{r3, r4, r5, pc}
 802090c:	6c42      	ldr	r2, [r0, #68]	; 0x44
 802090e:	b112      	cbz	r2, 8020916 <_raise_r+0x1e>
 8020910:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8020914:	b94b      	cbnz	r3, 802092a <_raise_r+0x32>
 8020916:	4620      	mov	r0, r4
 8020918:	f000 f830 	bl	802097c <_getpid_r>
 802091c:	462a      	mov	r2, r5
 802091e:	4601      	mov	r1, r0
 8020920:	4620      	mov	r0, r4
 8020922:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8020926:	f000 b817 	b.w	8020958 <_kill_r>
 802092a:	2b01      	cmp	r3, #1
 802092c:	d00a      	beq.n	8020944 <_raise_r+0x4c>
 802092e:	1c59      	adds	r1, r3, #1
 8020930:	d103      	bne.n	802093a <_raise_r+0x42>
 8020932:	2316      	movs	r3, #22
 8020934:	6003      	str	r3, [r0, #0]
 8020936:	2001      	movs	r0, #1
 8020938:	e7e7      	b.n	802090a <_raise_r+0x12>
 802093a:	2400      	movs	r4, #0
 802093c:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8020940:	4628      	mov	r0, r5
 8020942:	4798      	blx	r3
 8020944:	2000      	movs	r0, #0
 8020946:	e7e0      	b.n	802090a <_raise_r+0x12>

08020948 <raise>:
 8020948:	4b02      	ldr	r3, [pc, #8]	; (8020954 <raise+0xc>)
 802094a:	4601      	mov	r1, r0
 802094c:	6818      	ldr	r0, [r3, #0]
 802094e:	f7ff bfd3 	b.w	80208f8 <_raise_r>
 8020952:	bf00      	nop
 8020954:	240000b4 	.word	0x240000b4

08020958 <_kill_r>:
 8020958:	b538      	push	{r3, r4, r5, lr}
 802095a:	4d07      	ldr	r5, [pc, #28]	; (8020978 <_kill_r+0x20>)
 802095c:	2300      	movs	r3, #0
 802095e:	4604      	mov	r4, r0
 8020960:	4608      	mov	r0, r1
 8020962:	4611      	mov	r1, r2
 8020964:	602b      	str	r3, [r5, #0]
 8020966:	f7e0 fddb 	bl	8001520 <_kill>
 802096a:	1c43      	adds	r3, r0, #1
 802096c:	d102      	bne.n	8020974 <_kill_r+0x1c>
 802096e:	682b      	ldr	r3, [r5, #0]
 8020970:	b103      	cbz	r3, 8020974 <_kill_r+0x1c>
 8020972:	6023      	str	r3, [r4, #0]
 8020974:	bd38      	pop	{r3, r4, r5, pc}
 8020976:	bf00      	nop
 8020978:	2400e358 	.word	0x2400e358

0802097c <_getpid_r>:
 802097c:	f7e0 bdce 	b.w	800151c <_getpid>

08020980 <__swbuf_r>:
 8020980:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8020982:	460e      	mov	r6, r1
 8020984:	4614      	mov	r4, r2
 8020986:	4605      	mov	r5, r0
 8020988:	b118      	cbz	r0, 8020992 <__swbuf_r+0x12>
 802098a:	6983      	ldr	r3, [r0, #24]
 802098c:	b90b      	cbnz	r3, 8020992 <__swbuf_r+0x12>
 802098e:	f000 fa33 	bl	8020df8 <__sinit>
 8020992:	4b21      	ldr	r3, [pc, #132]	; (8020a18 <__swbuf_r+0x98>)
 8020994:	429c      	cmp	r4, r3
 8020996:	d12b      	bne.n	80209f0 <__swbuf_r+0x70>
 8020998:	686c      	ldr	r4, [r5, #4]
 802099a:	69a3      	ldr	r3, [r4, #24]
 802099c:	60a3      	str	r3, [r4, #8]
 802099e:	89a3      	ldrh	r3, [r4, #12]
 80209a0:	071a      	lsls	r2, r3, #28
 80209a2:	d52f      	bpl.n	8020a04 <__swbuf_r+0x84>
 80209a4:	6923      	ldr	r3, [r4, #16]
 80209a6:	b36b      	cbz	r3, 8020a04 <__swbuf_r+0x84>
 80209a8:	6923      	ldr	r3, [r4, #16]
 80209aa:	6820      	ldr	r0, [r4, #0]
 80209ac:	1ac0      	subs	r0, r0, r3
 80209ae:	6963      	ldr	r3, [r4, #20]
 80209b0:	b2f6      	uxtb	r6, r6
 80209b2:	4283      	cmp	r3, r0
 80209b4:	4637      	mov	r7, r6
 80209b6:	dc04      	bgt.n	80209c2 <__swbuf_r+0x42>
 80209b8:	4621      	mov	r1, r4
 80209ba:	4628      	mov	r0, r5
 80209bc:	f000 f988 	bl	8020cd0 <_fflush_r>
 80209c0:	bb30      	cbnz	r0, 8020a10 <__swbuf_r+0x90>
 80209c2:	68a3      	ldr	r3, [r4, #8]
 80209c4:	3b01      	subs	r3, #1
 80209c6:	60a3      	str	r3, [r4, #8]
 80209c8:	6823      	ldr	r3, [r4, #0]
 80209ca:	1c5a      	adds	r2, r3, #1
 80209cc:	6022      	str	r2, [r4, #0]
 80209ce:	701e      	strb	r6, [r3, #0]
 80209d0:	6963      	ldr	r3, [r4, #20]
 80209d2:	3001      	adds	r0, #1
 80209d4:	4283      	cmp	r3, r0
 80209d6:	d004      	beq.n	80209e2 <__swbuf_r+0x62>
 80209d8:	89a3      	ldrh	r3, [r4, #12]
 80209da:	07db      	lsls	r3, r3, #31
 80209dc:	d506      	bpl.n	80209ec <__swbuf_r+0x6c>
 80209de:	2e0a      	cmp	r6, #10
 80209e0:	d104      	bne.n	80209ec <__swbuf_r+0x6c>
 80209e2:	4621      	mov	r1, r4
 80209e4:	4628      	mov	r0, r5
 80209e6:	f000 f973 	bl	8020cd0 <_fflush_r>
 80209ea:	b988      	cbnz	r0, 8020a10 <__swbuf_r+0x90>
 80209ec:	4638      	mov	r0, r7
 80209ee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80209f0:	4b0a      	ldr	r3, [pc, #40]	; (8020a1c <__swbuf_r+0x9c>)
 80209f2:	429c      	cmp	r4, r3
 80209f4:	d101      	bne.n	80209fa <__swbuf_r+0x7a>
 80209f6:	68ac      	ldr	r4, [r5, #8]
 80209f8:	e7cf      	b.n	802099a <__swbuf_r+0x1a>
 80209fa:	4b09      	ldr	r3, [pc, #36]	; (8020a20 <__swbuf_r+0xa0>)
 80209fc:	429c      	cmp	r4, r3
 80209fe:	bf08      	it	eq
 8020a00:	68ec      	ldreq	r4, [r5, #12]
 8020a02:	e7ca      	b.n	802099a <__swbuf_r+0x1a>
 8020a04:	4621      	mov	r1, r4
 8020a06:	4628      	mov	r0, r5
 8020a08:	f000 f80c 	bl	8020a24 <__swsetup_r>
 8020a0c:	2800      	cmp	r0, #0
 8020a0e:	d0cb      	beq.n	80209a8 <__swbuf_r+0x28>
 8020a10:	f04f 37ff 	mov.w	r7, #4294967295
 8020a14:	e7ea      	b.n	80209ec <__swbuf_r+0x6c>
 8020a16:	bf00      	nop
 8020a18:	08025ef8 	.word	0x08025ef8
 8020a1c:	08025f18 	.word	0x08025f18
 8020a20:	08025ed8 	.word	0x08025ed8

08020a24 <__swsetup_r>:
 8020a24:	4b32      	ldr	r3, [pc, #200]	; (8020af0 <__swsetup_r+0xcc>)
 8020a26:	b570      	push	{r4, r5, r6, lr}
 8020a28:	681d      	ldr	r5, [r3, #0]
 8020a2a:	4606      	mov	r6, r0
 8020a2c:	460c      	mov	r4, r1
 8020a2e:	b125      	cbz	r5, 8020a3a <__swsetup_r+0x16>
 8020a30:	69ab      	ldr	r3, [r5, #24]
 8020a32:	b913      	cbnz	r3, 8020a3a <__swsetup_r+0x16>
 8020a34:	4628      	mov	r0, r5
 8020a36:	f000 f9df 	bl	8020df8 <__sinit>
 8020a3a:	4b2e      	ldr	r3, [pc, #184]	; (8020af4 <__swsetup_r+0xd0>)
 8020a3c:	429c      	cmp	r4, r3
 8020a3e:	d10f      	bne.n	8020a60 <__swsetup_r+0x3c>
 8020a40:	686c      	ldr	r4, [r5, #4]
 8020a42:	89a3      	ldrh	r3, [r4, #12]
 8020a44:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8020a48:	0719      	lsls	r1, r3, #28
 8020a4a:	d42c      	bmi.n	8020aa6 <__swsetup_r+0x82>
 8020a4c:	06dd      	lsls	r5, r3, #27
 8020a4e:	d411      	bmi.n	8020a74 <__swsetup_r+0x50>
 8020a50:	2309      	movs	r3, #9
 8020a52:	6033      	str	r3, [r6, #0]
 8020a54:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8020a58:	81a3      	strh	r3, [r4, #12]
 8020a5a:	f04f 30ff 	mov.w	r0, #4294967295
 8020a5e:	e03e      	b.n	8020ade <__swsetup_r+0xba>
 8020a60:	4b25      	ldr	r3, [pc, #148]	; (8020af8 <__swsetup_r+0xd4>)
 8020a62:	429c      	cmp	r4, r3
 8020a64:	d101      	bne.n	8020a6a <__swsetup_r+0x46>
 8020a66:	68ac      	ldr	r4, [r5, #8]
 8020a68:	e7eb      	b.n	8020a42 <__swsetup_r+0x1e>
 8020a6a:	4b24      	ldr	r3, [pc, #144]	; (8020afc <__swsetup_r+0xd8>)
 8020a6c:	429c      	cmp	r4, r3
 8020a6e:	bf08      	it	eq
 8020a70:	68ec      	ldreq	r4, [r5, #12]
 8020a72:	e7e6      	b.n	8020a42 <__swsetup_r+0x1e>
 8020a74:	0758      	lsls	r0, r3, #29
 8020a76:	d512      	bpl.n	8020a9e <__swsetup_r+0x7a>
 8020a78:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8020a7a:	b141      	cbz	r1, 8020a8e <__swsetup_r+0x6a>
 8020a7c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8020a80:	4299      	cmp	r1, r3
 8020a82:	d002      	beq.n	8020a8a <__swsetup_r+0x66>
 8020a84:	4630      	mov	r0, r6
 8020a86:	f7ff fb59 	bl	802013c <_free_r>
 8020a8a:	2300      	movs	r3, #0
 8020a8c:	6363      	str	r3, [r4, #52]	; 0x34
 8020a8e:	89a3      	ldrh	r3, [r4, #12]
 8020a90:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8020a94:	81a3      	strh	r3, [r4, #12]
 8020a96:	2300      	movs	r3, #0
 8020a98:	6063      	str	r3, [r4, #4]
 8020a9a:	6923      	ldr	r3, [r4, #16]
 8020a9c:	6023      	str	r3, [r4, #0]
 8020a9e:	89a3      	ldrh	r3, [r4, #12]
 8020aa0:	f043 0308 	orr.w	r3, r3, #8
 8020aa4:	81a3      	strh	r3, [r4, #12]
 8020aa6:	6923      	ldr	r3, [r4, #16]
 8020aa8:	b94b      	cbnz	r3, 8020abe <__swsetup_r+0x9a>
 8020aaa:	89a3      	ldrh	r3, [r4, #12]
 8020aac:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8020ab0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8020ab4:	d003      	beq.n	8020abe <__swsetup_r+0x9a>
 8020ab6:	4621      	mov	r1, r4
 8020ab8:	4630      	mov	r0, r6
 8020aba:	f000 fa63 	bl	8020f84 <__smakebuf_r>
 8020abe:	89a0      	ldrh	r0, [r4, #12]
 8020ac0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8020ac4:	f010 0301 	ands.w	r3, r0, #1
 8020ac8:	d00a      	beq.n	8020ae0 <__swsetup_r+0xbc>
 8020aca:	2300      	movs	r3, #0
 8020acc:	60a3      	str	r3, [r4, #8]
 8020ace:	6963      	ldr	r3, [r4, #20]
 8020ad0:	425b      	negs	r3, r3
 8020ad2:	61a3      	str	r3, [r4, #24]
 8020ad4:	6923      	ldr	r3, [r4, #16]
 8020ad6:	b943      	cbnz	r3, 8020aea <__swsetup_r+0xc6>
 8020ad8:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8020adc:	d1ba      	bne.n	8020a54 <__swsetup_r+0x30>
 8020ade:	bd70      	pop	{r4, r5, r6, pc}
 8020ae0:	0781      	lsls	r1, r0, #30
 8020ae2:	bf58      	it	pl
 8020ae4:	6963      	ldrpl	r3, [r4, #20]
 8020ae6:	60a3      	str	r3, [r4, #8]
 8020ae8:	e7f4      	b.n	8020ad4 <__swsetup_r+0xb0>
 8020aea:	2000      	movs	r0, #0
 8020aec:	e7f7      	b.n	8020ade <__swsetup_r+0xba>
 8020aee:	bf00      	nop
 8020af0:	240000b4 	.word	0x240000b4
 8020af4:	08025ef8 	.word	0x08025ef8
 8020af8:	08025f18 	.word	0x08025f18
 8020afc:	08025ed8 	.word	0x08025ed8

08020b00 <__register_exitproc>:
 8020b00:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8020b04:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 8020bc0 <__register_exitproc+0xc0>
 8020b08:	4606      	mov	r6, r0
 8020b0a:	f8d8 0000 	ldr.w	r0, [r8]
 8020b0e:	461f      	mov	r7, r3
 8020b10:	460d      	mov	r5, r1
 8020b12:	4691      	mov	r9, r2
 8020b14:	f000 fa0e 	bl	8020f34 <__retarget_lock_acquire_recursive>
 8020b18:	4b25      	ldr	r3, [pc, #148]	; (8020bb0 <__register_exitproc+0xb0>)
 8020b1a:	681c      	ldr	r4, [r3, #0]
 8020b1c:	b934      	cbnz	r4, 8020b2c <__register_exitproc+0x2c>
 8020b1e:	4c25      	ldr	r4, [pc, #148]	; (8020bb4 <__register_exitproc+0xb4>)
 8020b20:	601c      	str	r4, [r3, #0]
 8020b22:	4b25      	ldr	r3, [pc, #148]	; (8020bb8 <__register_exitproc+0xb8>)
 8020b24:	b113      	cbz	r3, 8020b2c <__register_exitproc+0x2c>
 8020b26:	681b      	ldr	r3, [r3, #0]
 8020b28:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 8020b2c:	6863      	ldr	r3, [r4, #4]
 8020b2e:	2b1f      	cmp	r3, #31
 8020b30:	dd07      	ble.n	8020b42 <__register_exitproc+0x42>
 8020b32:	f8d8 0000 	ldr.w	r0, [r8]
 8020b36:	f000 f9ff 	bl	8020f38 <__retarget_lock_release_recursive>
 8020b3a:	f04f 30ff 	mov.w	r0, #4294967295
 8020b3e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8020b42:	b34e      	cbz	r6, 8020b98 <__register_exitproc+0x98>
 8020b44:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8020b48:	b988      	cbnz	r0, 8020b6e <__register_exitproc+0x6e>
 8020b4a:	4b1c      	ldr	r3, [pc, #112]	; (8020bbc <__register_exitproc+0xbc>)
 8020b4c:	b923      	cbnz	r3, 8020b58 <__register_exitproc+0x58>
 8020b4e:	f8d8 0000 	ldr.w	r0, [r8]
 8020b52:	f000 f9f0 	bl	8020f36 <__retarget_lock_release>
 8020b56:	e7f0      	b.n	8020b3a <__register_exitproc+0x3a>
 8020b58:	f44f 7084 	mov.w	r0, #264	; 0x108
 8020b5c:	f7ff faae 	bl	80200bc <malloc>
 8020b60:	2800      	cmp	r0, #0
 8020b62:	d0f4      	beq.n	8020b4e <__register_exitproc+0x4e>
 8020b64:	2300      	movs	r3, #0
 8020b66:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 8020b6a:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 8020b6e:	6863      	ldr	r3, [r4, #4]
 8020b70:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8020b74:	2201      	movs	r2, #1
 8020b76:	409a      	lsls	r2, r3
 8020b78:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8020b7c:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8020b80:	4313      	orrs	r3, r2
 8020b82:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 8020b86:	2e02      	cmp	r6, #2
 8020b88:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 8020b8c:	bf02      	ittt	eq
 8020b8e:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 8020b92:	4313      	orreq	r3, r2
 8020b94:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 8020b98:	6863      	ldr	r3, [r4, #4]
 8020b9a:	f8d8 0000 	ldr.w	r0, [r8]
 8020b9e:	1c5a      	adds	r2, r3, #1
 8020ba0:	3302      	adds	r3, #2
 8020ba2:	6062      	str	r2, [r4, #4]
 8020ba4:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8020ba8:	f000 f9c6 	bl	8020f38 <__retarget_lock_release_recursive>
 8020bac:	2000      	movs	r0, #0
 8020bae:	e7c6      	b.n	8020b3e <__register_exitproc+0x3e>
 8020bb0:	2400e350 	.word	0x2400e350
 8020bb4:	2400e2c4 	.word	0x2400e2c4
 8020bb8:	08025ed4 	.word	0x08025ed4
 8020bbc:	080200bd 	.word	0x080200bd
 8020bc0:	24000118 	.word	0x24000118

08020bc4 <__sflush_r>:
 8020bc4:	898a      	ldrh	r2, [r1, #12]
 8020bc6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8020bca:	4605      	mov	r5, r0
 8020bcc:	0710      	lsls	r0, r2, #28
 8020bce:	460c      	mov	r4, r1
 8020bd0:	d458      	bmi.n	8020c84 <__sflush_r+0xc0>
 8020bd2:	684b      	ldr	r3, [r1, #4]
 8020bd4:	2b00      	cmp	r3, #0
 8020bd6:	dc05      	bgt.n	8020be4 <__sflush_r+0x20>
 8020bd8:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8020bda:	2b00      	cmp	r3, #0
 8020bdc:	dc02      	bgt.n	8020be4 <__sflush_r+0x20>
 8020bde:	2000      	movs	r0, #0
 8020be0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8020be4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8020be6:	2e00      	cmp	r6, #0
 8020be8:	d0f9      	beq.n	8020bde <__sflush_r+0x1a>
 8020bea:	2300      	movs	r3, #0
 8020bec:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8020bf0:	682f      	ldr	r7, [r5, #0]
 8020bf2:	602b      	str	r3, [r5, #0]
 8020bf4:	d032      	beq.n	8020c5c <__sflush_r+0x98>
 8020bf6:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8020bf8:	89a3      	ldrh	r3, [r4, #12]
 8020bfa:	075a      	lsls	r2, r3, #29
 8020bfc:	d505      	bpl.n	8020c0a <__sflush_r+0x46>
 8020bfe:	6863      	ldr	r3, [r4, #4]
 8020c00:	1ac0      	subs	r0, r0, r3
 8020c02:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8020c04:	b10b      	cbz	r3, 8020c0a <__sflush_r+0x46>
 8020c06:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8020c08:	1ac0      	subs	r0, r0, r3
 8020c0a:	2300      	movs	r3, #0
 8020c0c:	4602      	mov	r2, r0
 8020c0e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8020c10:	6a21      	ldr	r1, [r4, #32]
 8020c12:	4628      	mov	r0, r5
 8020c14:	47b0      	blx	r6
 8020c16:	1c43      	adds	r3, r0, #1
 8020c18:	89a3      	ldrh	r3, [r4, #12]
 8020c1a:	d106      	bne.n	8020c2a <__sflush_r+0x66>
 8020c1c:	6829      	ldr	r1, [r5, #0]
 8020c1e:	291d      	cmp	r1, #29
 8020c20:	d82c      	bhi.n	8020c7c <__sflush_r+0xb8>
 8020c22:	4a2a      	ldr	r2, [pc, #168]	; (8020ccc <__sflush_r+0x108>)
 8020c24:	40ca      	lsrs	r2, r1
 8020c26:	07d6      	lsls	r6, r2, #31
 8020c28:	d528      	bpl.n	8020c7c <__sflush_r+0xb8>
 8020c2a:	2200      	movs	r2, #0
 8020c2c:	6062      	str	r2, [r4, #4]
 8020c2e:	04d9      	lsls	r1, r3, #19
 8020c30:	6922      	ldr	r2, [r4, #16]
 8020c32:	6022      	str	r2, [r4, #0]
 8020c34:	d504      	bpl.n	8020c40 <__sflush_r+0x7c>
 8020c36:	1c42      	adds	r2, r0, #1
 8020c38:	d101      	bne.n	8020c3e <__sflush_r+0x7a>
 8020c3a:	682b      	ldr	r3, [r5, #0]
 8020c3c:	b903      	cbnz	r3, 8020c40 <__sflush_r+0x7c>
 8020c3e:	6560      	str	r0, [r4, #84]	; 0x54
 8020c40:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8020c42:	602f      	str	r7, [r5, #0]
 8020c44:	2900      	cmp	r1, #0
 8020c46:	d0ca      	beq.n	8020bde <__sflush_r+0x1a>
 8020c48:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8020c4c:	4299      	cmp	r1, r3
 8020c4e:	d002      	beq.n	8020c56 <__sflush_r+0x92>
 8020c50:	4628      	mov	r0, r5
 8020c52:	f7ff fa73 	bl	802013c <_free_r>
 8020c56:	2000      	movs	r0, #0
 8020c58:	6360      	str	r0, [r4, #52]	; 0x34
 8020c5a:	e7c1      	b.n	8020be0 <__sflush_r+0x1c>
 8020c5c:	6a21      	ldr	r1, [r4, #32]
 8020c5e:	2301      	movs	r3, #1
 8020c60:	4628      	mov	r0, r5
 8020c62:	47b0      	blx	r6
 8020c64:	1c41      	adds	r1, r0, #1
 8020c66:	d1c7      	bne.n	8020bf8 <__sflush_r+0x34>
 8020c68:	682b      	ldr	r3, [r5, #0]
 8020c6a:	2b00      	cmp	r3, #0
 8020c6c:	d0c4      	beq.n	8020bf8 <__sflush_r+0x34>
 8020c6e:	2b1d      	cmp	r3, #29
 8020c70:	d001      	beq.n	8020c76 <__sflush_r+0xb2>
 8020c72:	2b16      	cmp	r3, #22
 8020c74:	d101      	bne.n	8020c7a <__sflush_r+0xb6>
 8020c76:	602f      	str	r7, [r5, #0]
 8020c78:	e7b1      	b.n	8020bde <__sflush_r+0x1a>
 8020c7a:	89a3      	ldrh	r3, [r4, #12]
 8020c7c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8020c80:	81a3      	strh	r3, [r4, #12]
 8020c82:	e7ad      	b.n	8020be0 <__sflush_r+0x1c>
 8020c84:	690f      	ldr	r7, [r1, #16]
 8020c86:	2f00      	cmp	r7, #0
 8020c88:	d0a9      	beq.n	8020bde <__sflush_r+0x1a>
 8020c8a:	0793      	lsls	r3, r2, #30
 8020c8c:	680e      	ldr	r6, [r1, #0]
 8020c8e:	bf08      	it	eq
 8020c90:	694b      	ldreq	r3, [r1, #20]
 8020c92:	600f      	str	r7, [r1, #0]
 8020c94:	bf18      	it	ne
 8020c96:	2300      	movne	r3, #0
 8020c98:	eba6 0807 	sub.w	r8, r6, r7
 8020c9c:	608b      	str	r3, [r1, #8]
 8020c9e:	f1b8 0f00 	cmp.w	r8, #0
 8020ca2:	dd9c      	ble.n	8020bde <__sflush_r+0x1a>
 8020ca4:	6a21      	ldr	r1, [r4, #32]
 8020ca6:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8020ca8:	4643      	mov	r3, r8
 8020caa:	463a      	mov	r2, r7
 8020cac:	4628      	mov	r0, r5
 8020cae:	47b0      	blx	r6
 8020cb0:	2800      	cmp	r0, #0
 8020cb2:	dc06      	bgt.n	8020cc2 <__sflush_r+0xfe>
 8020cb4:	89a3      	ldrh	r3, [r4, #12]
 8020cb6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8020cba:	81a3      	strh	r3, [r4, #12]
 8020cbc:	f04f 30ff 	mov.w	r0, #4294967295
 8020cc0:	e78e      	b.n	8020be0 <__sflush_r+0x1c>
 8020cc2:	4407      	add	r7, r0
 8020cc4:	eba8 0800 	sub.w	r8, r8, r0
 8020cc8:	e7e9      	b.n	8020c9e <__sflush_r+0xda>
 8020cca:	bf00      	nop
 8020ccc:	20400001 	.word	0x20400001

08020cd0 <_fflush_r>:
 8020cd0:	b538      	push	{r3, r4, r5, lr}
 8020cd2:	690b      	ldr	r3, [r1, #16]
 8020cd4:	4605      	mov	r5, r0
 8020cd6:	460c      	mov	r4, r1
 8020cd8:	b913      	cbnz	r3, 8020ce0 <_fflush_r+0x10>
 8020cda:	2500      	movs	r5, #0
 8020cdc:	4628      	mov	r0, r5
 8020cde:	bd38      	pop	{r3, r4, r5, pc}
 8020ce0:	b118      	cbz	r0, 8020cea <_fflush_r+0x1a>
 8020ce2:	6983      	ldr	r3, [r0, #24]
 8020ce4:	b90b      	cbnz	r3, 8020cea <_fflush_r+0x1a>
 8020ce6:	f000 f887 	bl	8020df8 <__sinit>
 8020cea:	4b14      	ldr	r3, [pc, #80]	; (8020d3c <_fflush_r+0x6c>)
 8020cec:	429c      	cmp	r4, r3
 8020cee:	d11b      	bne.n	8020d28 <_fflush_r+0x58>
 8020cf0:	686c      	ldr	r4, [r5, #4]
 8020cf2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8020cf6:	2b00      	cmp	r3, #0
 8020cf8:	d0ef      	beq.n	8020cda <_fflush_r+0xa>
 8020cfa:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8020cfc:	07d0      	lsls	r0, r2, #31
 8020cfe:	d404      	bmi.n	8020d0a <_fflush_r+0x3a>
 8020d00:	0599      	lsls	r1, r3, #22
 8020d02:	d402      	bmi.n	8020d0a <_fflush_r+0x3a>
 8020d04:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8020d06:	f000 f915 	bl	8020f34 <__retarget_lock_acquire_recursive>
 8020d0a:	4628      	mov	r0, r5
 8020d0c:	4621      	mov	r1, r4
 8020d0e:	f7ff ff59 	bl	8020bc4 <__sflush_r>
 8020d12:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8020d14:	07da      	lsls	r2, r3, #31
 8020d16:	4605      	mov	r5, r0
 8020d18:	d4e0      	bmi.n	8020cdc <_fflush_r+0xc>
 8020d1a:	89a3      	ldrh	r3, [r4, #12]
 8020d1c:	059b      	lsls	r3, r3, #22
 8020d1e:	d4dd      	bmi.n	8020cdc <_fflush_r+0xc>
 8020d20:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8020d22:	f000 f909 	bl	8020f38 <__retarget_lock_release_recursive>
 8020d26:	e7d9      	b.n	8020cdc <_fflush_r+0xc>
 8020d28:	4b05      	ldr	r3, [pc, #20]	; (8020d40 <_fflush_r+0x70>)
 8020d2a:	429c      	cmp	r4, r3
 8020d2c:	d101      	bne.n	8020d32 <_fflush_r+0x62>
 8020d2e:	68ac      	ldr	r4, [r5, #8]
 8020d30:	e7df      	b.n	8020cf2 <_fflush_r+0x22>
 8020d32:	4b04      	ldr	r3, [pc, #16]	; (8020d44 <_fflush_r+0x74>)
 8020d34:	429c      	cmp	r4, r3
 8020d36:	bf08      	it	eq
 8020d38:	68ec      	ldreq	r4, [r5, #12]
 8020d3a:	e7da      	b.n	8020cf2 <_fflush_r+0x22>
 8020d3c:	08025ef8 	.word	0x08025ef8
 8020d40:	08025f18 	.word	0x08025f18
 8020d44:	08025ed8 	.word	0x08025ed8

08020d48 <std>:
 8020d48:	2300      	movs	r3, #0
 8020d4a:	b510      	push	{r4, lr}
 8020d4c:	4604      	mov	r4, r0
 8020d4e:	e9c0 3300 	strd	r3, r3, [r0]
 8020d52:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8020d56:	6083      	str	r3, [r0, #8]
 8020d58:	8181      	strh	r1, [r0, #12]
 8020d5a:	6643      	str	r3, [r0, #100]	; 0x64
 8020d5c:	81c2      	strh	r2, [r0, #14]
 8020d5e:	6183      	str	r3, [r0, #24]
 8020d60:	4619      	mov	r1, r3
 8020d62:	2208      	movs	r2, #8
 8020d64:	305c      	adds	r0, #92	; 0x5c
 8020d66:	f7ff f9e1 	bl	802012c <memset>
 8020d6a:	4b05      	ldr	r3, [pc, #20]	; (8020d80 <std+0x38>)
 8020d6c:	6263      	str	r3, [r4, #36]	; 0x24
 8020d6e:	4b05      	ldr	r3, [pc, #20]	; (8020d84 <std+0x3c>)
 8020d70:	62a3      	str	r3, [r4, #40]	; 0x28
 8020d72:	4b05      	ldr	r3, [pc, #20]	; (8020d88 <std+0x40>)
 8020d74:	62e3      	str	r3, [r4, #44]	; 0x2c
 8020d76:	4b05      	ldr	r3, [pc, #20]	; (8020d8c <std+0x44>)
 8020d78:	6224      	str	r4, [r4, #32]
 8020d7a:	6323      	str	r3, [r4, #48]	; 0x30
 8020d7c:	bd10      	pop	{r4, pc}
 8020d7e:	bf00      	nop
 8020d80:	0802101d 	.word	0x0802101d
 8020d84:	0802103f 	.word	0x0802103f
 8020d88:	08021077 	.word	0x08021077
 8020d8c:	0802109b 	.word	0x0802109b

08020d90 <_cleanup_r>:
 8020d90:	4901      	ldr	r1, [pc, #4]	; (8020d98 <_cleanup_r+0x8>)
 8020d92:	f000 b8af 	b.w	8020ef4 <_fwalk_reent>
 8020d96:	bf00      	nop
 8020d98:	08020cd1 	.word	0x08020cd1

08020d9c <__sfmoreglue>:
 8020d9c:	b570      	push	{r4, r5, r6, lr}
 8020d9e:	2268      	movs	r2, #104	; 0x68
 8020da0:	1e4d      	subs	r5, r1, #1
 8020da2:	4355      	muls	r5, r2
 8020da4:	460e      	mov	r6, r1
 8020da6:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8020daa:	f7ff fa33 	bl	8020214 <_malloc_r>
 8020dae:	4604      	mov	r4, r0
 8020db0:	b140      	cbz	r0, 8020dc4 <__sfmoreglue+0x28>
 8020db2:	2100      	movs	r1, #0
 8020db4:	e9c0 1600 	strd	r1, r6, [r0]
 8020db8:	300c      	adds	r0, #12
 8020dba:	60a0      	str	r0, [r4, #8]
 8020dbc:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8020dc0:	f7ff f9b4 	bl	802012c <memset>
 8020dc4:	4620      	mov	r0, r4
 8020dc6:	bd70      	pop	{r4, r5, r6, pc}

08020dc8 <__sfp_lock_acquire>:
 8020dc8:	4801      	ldr	r0, [pc, #4]	; (8020dd0 <__sfp_lock_acquire+0x8>)
 8020dca:	f000 b8b3 	b.w	8020f34 <__retarget_lock_acquire_recursive>
 8020dce:	bf00      	nop
 8020dd0:	2400e356 	.word	0x2400e356

08020dd4 <__sfp_lock_release>:
 8020dd4:	4801      	ldr	r0, [pc, #4]	; (8020ddc <__sfp_lock_release+0x8>)
 8020dd6:	f000 b8af 	b.w	8020f38 <__retarget_lock_release_recursive>
 8020dda:	bf00      	nop
 8020ddc:	2400e356 	.word	0x2400e356

08020de0 <__sinit_lock_acquire>:
 8020de0:	4801      	ldr	r0, [pc, #4]	; (8020de8 <__sinit_lock_acquire+0x8>)
 8020de2:	f000 b8a7 	b.w	8020f34 <__retarget_lock_acquire_recursive>
 8020de6:	bf00      	nop
 8020de8:	2400e357 	.word	0x2400e357

08020dec <__sinit_lock_release>:
 8020dec:	4801      	ldr	r0, [pc, #4]	; (8020df4 <__sinit_lock_release+0x8>)
 8020dee:	f000 b8a3 	b.w	8020f38 <__retarget_lock_release_recursive>
 8020df2:	bf00      	nop
 8020df4:	2400e357 	.word	0x2400e357

08020df8 <__sinit>:
 8020df8:	b510      	push	{r4, lr}
 8020dfa:	4604      	mov	r4, r0
 8020dfc:	f7ff fff0 	bl	8020de0 <__sinit_lock_acquire>
 8020e00:	69a3      	ldr	r3, [r4, #24]
 8020e02:	b11b      	cbz	r3, 8020e0c <__sinit+0x14>
 8020e04:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020e08:	f7ff bff0 	b.w	8020dec <__sinit_lock_release>
 8020e0c:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8020e10:	6523      	str	r3, [r4, #80]	; 0x50
 8020e12:	4b13      	ldr	r3, [pc, #76]	; (8020e60 <__sinit+0x68>)
 8020e14:	4a13      	ldr	r2, [pc, #76]	; (8020e64 <__sinit+0x6c>)
 8020e16:	681b      	ldr	r3, [r3, #0]
 8020e18:	62a2      	str	r2, [r4, #40]	; 0x28
 8020e1a:	42a3      	cmp	r3, r4
 8020e1c:	bf04      	itt	eq
 8020e1e:	2301      	moveq	r3, #1
 8020e20:	61a3      	streq	r3, [r4, #24]
 8020e22:	4620      	mov	r0, r4
 8020e24:	f000 f820 	bl	8020e68 <__sfp>
 8020e28:	6060      	str	r0, [r4, #4]
 8020e2a:	4620      	mov	r0, r4
 8020e2c:	f000 f81c 	bl	8020e68 <__sfp>
 8020e30:	60a0      	str	r0, [r4, #8]
 8020e32:	4620      	mov	r0, r4
 8020e34:	f000 f818 	bl	8020e68 <__sfp>
 8020e38:	2200      	movs	r2, #0
 8020e3a:	60e0      	str	r0, [r4, #12]
 8020e3c:	2104      	movs	r1, #4
 8020e3e:	6860      	ldr	r0, [r4, #4]
 8020e40:	f7ff ff82 	bl	8020d48 <std>
 8020e44:	68a0      	ldr	r0, [r4, #8]
 8020e46:	2201      	movs	r2, #1
 8020e48:	2109      	movs	r1, #9
 8020e4a:	f7ff ff7d 	bl	8020d48 <std>
 8020e4e:	68e0      	ldr	r0, [r4, #12]
 8020e50:	2202      	movs	r2, #2
 8020e52:	2112      	movs	r1, #18
 8020e54:	f7ff ff78 	bl	8020d48 <std>
 8020e58:	2301      	movs	r3, #1
 8020e5a:	61a3      	str	r3, [r4, #24]
 8020e5c:	e7d2      	b.n	8020e04 <__sinit+0xc>
 8020e5e:	bf00      	nop
 8020e60:	08025e9c 	.word	0x08025e9c
 8020e64:	08020d91 	.word	0x08020d91

08020e68 <__sfp>:
 8020e68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8020e6a:	4607      	mov	r7, r0
 8020e6c:	f7ff ffac 	bl	8020dc8 <__sfp_lock_acquire>
 8020e70:	4b1e      	ldr	r3, [pc, #120]	; (8020eec <__sfp+0x84>)
 8020e72:	681e      	ldr	r6, [r3, #0]
 8020e74:	69b3      	ldr	r3, [r6, #24]
 8020e76:	b913      	cbnz	r3, 8020e7e <__sfp+0x16>
 8020e78:	4630      	mov	r0, r6
 8020e7a:	f7ff ffbd 	bl	8020df8 <__sinit>
 8020e7e:	3648      	adds	r6, #72	; 0x48
 8020e80:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8020e84:	3b01      	subs	r3, #1
 8020e86:	d503      	bpl.n	8020e90 <__sfp+0x28>
 8020e88:	6833      	ldr	r3, [r6, #0]
 8020e8a:	b30b      	cbz	r3, 8020ed0 <__sfp+0x68>
 8020e8c:	6836      	ldr	r6, [r6, #0]
 8020e8e:	e7f7      	b.n	8020e80 <__sfp+0x18>
 8020e90:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8020e94:	b9d5      	cbnz	r5, 8020ecc <__sfp+0x64>
 8020e96:	4b16      	ldr	r3, [pc, #88]	; (8020ef0 <__sfp+0x88>)
 8020e98:	60e3      	str	r3, [r4, #12]
 8020e9a:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8020e9e:	6665      	str	r5, [r4, #100]	; 0x64
 8020ea0:	f000 f847 	bl	8020f32 <__retarget_lock_init_recursive>
 8020ea4:	f7ff ff96 	bl	8020dd4 <__sfp_lock_release>
 8020ea8:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8020eac:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8020eb0:	6025      	str	r5, [r4, #0]
 8020eb2:	61a5      	str	r5, [r4, #24]
 8020eb4:	2208      	movs	r2, #8
 8020eb6:	4629      	mov	r1, r5
 8020eb8:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8020ebc:	f7ff f936 	bl	802012c <memset>
 8020ec0:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8020ec4:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8020ec8:	4620      	mov	r0, r4
 8020eca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8020ecc:	3468      	adds	r4, #104	; 0x68
 8020ece:	e7d9      	b.n	8020e84 <__sfp+0x1c>
 8020ed0:	2104      	movs	r1, #4
 8020ed2:	4638      	mov	r0, r7
 8020ed4:	f7ff ff62 	bl	8020d9c <__sfmoreglue>
 8020ed8:	4604      	mov	r4, r0
 8020eda:	6030      	str	r0, [r6, #0]
 8020edc:	2800      	cmp	r0, #0
 8020ede:	d1d5      	bne.n	8020e8c <__sfp+0x24>
 8020ee0:	f7ff ff78 	bl	8020dd4 <__sfp_lock_release>
 8020ee4:	230c      	movs	r3, #12
 8020ee6:	603b      	str	r3, [r7, #0]
 8020ee8:	e7ee      	b.n	8020ec8 <__sfp+0x60>
 8020eea:	bf00      	nop
 8020eec:	08025e9c 	.word	0x08025e9c
 8020ef0:	ffff0001 	.word	0xffff0001

08020ef4 <_fwalk_reent>:
 8020ef4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8020ef8:	4606      	mov	r6, r0
 8020efa:	4688      	mov	r8, r1
 8020efc:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8020f00:	2700      	movs	r7, #0
 8020f02:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8020f06:	f1b9 0901 	subs.w	r9, r9, #1
 8020f0a:	d505      	bpl.n	8020f18 <_fwalk_reent+0x24>
 8020f0c:	6824      	ldr	r4, [r4, #0]
 8020f0e:	2c00      	cmp	r4, #0
 8020f10:	d1f7      	bne.n	8020f02 <_fwalk_reent+0xe>
 8020f12:	4638      	mov	r0, r7
 8020f14:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8020f18:	89ab      	ldrh	r3, [r5, #12]
 8020f1a:	2b01      	cmp	r3, #1
 8020f1c:	d907      	bls.n	8020f2e <_fwalk_reent+0x3a>
 8020f1e:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8020f22:	3301      	adds	r3, #1
 8020f24:	d003      	beq.n	8020f2e <_fwalk_reent+0x3a>
 8020f26:	4629      	mov	r1, r5
 8020f28:	4630      	mov	r0, r6
 8020f2a:	47c0      	blx	r8
 8020f2c:	4307      	orrs	r7, r0
 8020f2e:	3568      	adds	r5, #104	; 0x68
 8020f30:	e7e9      	b.n	8020f06 <_fwalk_reent+0x12>

08020f32 <__retarget_lock_init_recursive>:
 8020f32:	4770      	bx	lr

08020f34 <__retarget_lock_acquire_recursive>:
 8020f34:	4770      	bx	lr

08020f36 <__retarget_lock_release>:
 8020f36:	4770      	bx	lr

08020f38 <__retarget_lock_release_recursive>:
 8020f38:	4770      	bx	lr

08020f3a <__swhatbuf_r>:
 8020f3a:	b570      	push	{r4, r5, r6, lr}
 8020f3c:	460e      	mov	r6, r1
 8020f3e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8020f42:	2900      	cmp	r1, #0
 8020f44:	b096      	sub	sp, #88	; 0x58
 8020f46:	4614      	mov	r4, r2
 8020f48:	461d      	mov	r5, r3
 8020f4a:	da08      	bge.n	8020f5e <__swhatbuf_r+0x24>
 8020f4c:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8020f50:	2200      	movs	r2, #0
 8020f52:	602a      	str	r2, [r5, #0]
 8020f54:	061a      	lsls	r2, r3, #24
 8020f56:	d410      	bmi.n	8020f7a <__swhatbuf_r+0x40>
 8020f58:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8020f5c:	e00e      	b.n	8020f7c <__swhatbuf_r+0x42>
 8020f5e:	466a      	mov	r2, sp
 8020f60:	f000 f8c2 	bl	80210e8 <_fstat_r>
 8020f64:	2800      	cmp	r0, #0
 8020f66:	dbf1      	blt.n	8020f4c <__swhatbuf_r+0x12>
 8020f68:	9a01      	ldr	r2, [sp, #4]
 8020f6a:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8020f6e:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8020f72:	425a      	negs	r2, r3
 8020f74:	415a      	adcs	r2, r3
 8020f76:	602a      	str	r2, [r5, #0]
 8020f78:	e7ee      	b.n	8020f58 <__swhatbuf_r+0x1e>
 8020f7a:	2340      	movs	r3, #64	; 0x40
 8020f7c:	2000      	movs	r0, #0
 8020f7e:	6023      	str	r3, [r4, #0]
 8020f80:	b016      	add	sp, #88	; 0x58
 8020f82:	bd70      	pop	{r4, r5, r6, pc}

08020f84 <__smakebuf_r>:
 8020f84:	898b      	ldrh	r3, [r1, #12]
 8020f86:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8020f88:	079d      	lsls	r5, r3, #30
 8020f8a:	4606      	mov	r6, r0
 8020f8c:	460c      	mov	r4, r1
 8020f8e:	d507      	bpl.n	8020fa0 <__smakebuf_r+0x1c>
 8020f90:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8020f94:	6023      	str	r3, [r4, #0]
 8020f96:	6123      	str	r3, [r4, #16]
 8020f98:	2301      	movs	r3, #1
 8020f9a:	6163      	str	r3, [r4, #20]
 8020f9c:	b002      	add	sp, #8
 8020f9e:	bd70      	pop	{r4, r5, r6, pc}
 8020fa0:	ab01      	add	r3, sp, #4
 8020fa2:	466a      	mov	r2, sp
 8020fa4:	f7ff ffc9 	bl	8020f3a <__swhatbuf_r>
 8020fa8:	9900      	ldr	r1, [sp, #0]
 8020faa:	4605      	mov	r5, r0
 8020fac:	4630      	mov	r0, r6
 8020fae:	f7ff f931 	bl	8020214 <_malloc_r>
 8020fb2:	b948      	cbnz	r0, 8020fc8 <__smakebuf_r+0x44>
 8020fb4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8020fb8:	059a      	lsls	r2, r3, #22
 8020fba:	d4ef      	bmi.n	8020f9c <__smakebuf_r+0x18>
 8020fbc:	f023 0303 	bic.w	r3, r3, #3
 8020fc0:	f043 0302 	orr.w	r3, r3, #2
 8020fc4:	81a3      	strh	r3, [r4, #12]
 8020fc6:	e7e3      	b.n	8020f90 <__smakebuf_r+0xc>
 8020fc8:	4b0d      	ldr	r3, [pc, #52]	; (8021000 <__smakebuf_r+0x7c>)
 8020fca:	62b3      	str	r3, [r6, #40]	; 0x28
 8020fcc:	89a3      	ldrh	r3, [r4, #12]
 8020fce:	6020      	str	r0, [r4, #0]
 8020fd0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8020fd4:	81a3      	strh	r3, [r4, #12]
 8020fd6:	9b00      	ldr	r3, [sp, #0]
 8020fd8:	6163      	str	r3, [r4, #20]
 8020fda:	9b01      	ldr	r3, [sp, #4]
 8020fdc:	6120      	str	r0, [r4, #16]
 8020fde:	b15b      	cbz	r3, 8020ff8 <__smakebuf_r+0x74>
 8020fe0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8020fe4:	4630      	mov	r0, r6
 8020fe6:	f000 f891 	bl	802110c <_isatty_r>
 8020fea:	b128      	cbz	r0, 8020ff8 <__smakebuf_r+0x74>
 8020fec:	89a3      	ldrh	r3, [r4, #12]
 8020fee:	f023 0303 	bic.w	r3, r3, #3
 8020ff2:	f043 0301 	orr.w	r3, r3, #1
 8020ff6:	81a3      	strh	r3, [r4, #12]
 8020ff8:	89a0      	ldrh	r0, [r4, #12]
 8020ffa:	4305      	orrs	r5, r0
 8020ffc:	81a5      	strh	r5, [r4, #12]
 8020ffe:	e7cd      	b.n	8020f9c <__smakebuf_r+0x18>
 8021000:	08020d91 	.word	0x08020d91

08021004 <__malloc_lock>:
 8021004:	4801      	ldr	r0, [pc, #4]	; (802100c <__malloc_lock+0x8>)
 8021006:	f7ff bf95 	b.w	8020f34 <__retarget_lock_acquire_recursive>
 802100a:	bf00      	nop
 802100c:	2400e355 	.word	0x2400e355

08021010 <__malloc_unlock>:
 8021010:	4801      	ldr	r0, [pc, #4]	; (8021018 <__malloc_unlock+0x8>)
 8021012:	f7ff bf91 	b.w	8020f38 <__retarget_lock_release_recursive>
 8021016:	bf00      	nop
 8021018:	2400e355 	.word	0x2400e355

0802101c <__sread>:
 802101c:	b510      	push	{r4, lr}
 802101e:	460c      	mov	r4, r1
 8021020:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021024:	f000 f894 	bl	8021150 <_read_r>
 8021028:	2800      	cmp	r0, #0
 802102a:	bfab      	itete	ge
 802102c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 802102e:	89a3      	ldrhlt	r3, [r4, #12]
 8021030:	181b      	addge	r3, r3, r0
 8021032:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8021036:	bfac      	ite	ge
 8021038:	6563      	strge	r3, [r4, #84]	; 0x54
 802103a:	81a3      	strhlt	r3, [r4, #12]
 802103c:	bd10      	pop	{r4, pc}

0802103e <__swrite>:
 802103e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8021042:	461f      	mov	r7, r3
 8021044:	898b      	ldrh	r3, [r1, #12]
 8021046:	05db      	lsls	r3, r3, #23
 8021048:	4605      	mov	r5, r0
 802104a:	460c      	mov	r4, r1
 802104c:	4616      	mov	r6, r2
 802104e:	d505      	bpl.n	802105c <__swrite+0x1e>
 8021050:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021054:	2302      	movs	r3, #2
 8021056:	2200      	movs	r2, #0
 8021058:	f000 f868 	bl	802112c <_lseek_r>
 802105c:	89a3      	ldrh	r3, [r4, #12]
 802105e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8021062:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8021066:	81a3      	strh	r3, [r4, #12]
 8021068:	4632      	mov	r2, r6
 802106a:	463b      	mov	r3, r7
 802106c:	4628      	mov	r0, r5
 802106e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8021072:	f000 b817 	b.w	80210a4 <_write_r>

08021076 <__sseek>:
 8021076:	b510      	push	{r4, lr}
 8021078:	460c      	mov	r4, r1
 802107a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802107e:	f000 f855 	bl	802112c <_lseek_r>
 8021082:	1c43      	adds	r3, r0, #1
 8021084:	89a3      	ldrh	r3, [r4, #12]
 8021086:	bf15      	itete	ne
 8021088:	6560      	strne	r0, [r4, #84]	; 0x54
 802108a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802108e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8021092:	81a3      	strheq	r3, [r4, #12]
 8021094:	bf18      	it	ne
 8021096:	81a3      	strhne	r3, [r4, #12]
 8021098:	bd10      	pop	{r4, pc}

0802109a <__sclose>:
 802109a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802109e:	f000 b813 	b.w	80210c8 <_close_r>
	...

080210a4 <_write_r>:
 80210a4:	b538      	push	{r3, r4, r5, lr}
 80210a6:	4d07      	ldr	r5, [pc, #28]	; (80210c4 <_write_r+0x20>)
 80210a8:	4604      	mov	r4, r0
 80210aa:	4608      	mov	r0, r1
 80210ac:	4611      	mov	r1, r2
 80210ae:	2200      	movs	r2, #0
 80210b0:	602a      	str	r2, [r5, #0]
 80210b2:	461a      	mov	r2, r3
 80210b4:	f7e0 fa50 	bl	8001558 <_write>
 80210b8:	1c43      	adds	r3, r0, #1
 80210ba:	d102      	bne.n	80210c2 <_write_r+0x1e>
 80210bc:	682b      	ldr	r3, [r5, #0]
 80210be:	b103      	cbz	r3, 80210c2 <_write_r+0x1e>
 80210c0:	6023      	str	r3, [r4, #0]
 80210c2:	bd38      	pop	{r3, r4, r5, pc}
 80210c4:	2400e358 	.word	0x2400e358

080210c8 <_close_r>:
 80210c8:	b538      	push	{r3, r4, r5, lr}
 80210ca:	4d06      	ldr	r5, [pc, #24]	; (80210e4 <_close_r+0x1c>)
 80210cc:	2300      	movs	r3, #0
 80210ce:	4604      	mov	r4, r0
 80210d0:	4608      	mov	r0, r1
 80210d2:	602b      	str	r3, [r5, #0]
 80210d4:	f7e0 fa4e 	bl	8001574 <_close>
 80210d8:	1c43      	adds	r3, r0, #1
 80210da:	d102      	bne.n	80210e2 <_close_r+0x1a>
 80210dc:	682b      	ldr	r3, [r5, #0]
 80210de:	b103      	cbz	r3, 80210e2 <_close_r+0x1a>
 80210e0:	6023      	str	r3, [r4, #0]
 80210e2:	bd38      	pop	{r3, r4, r5, pc}
 80210e4:	2400e358 	.word	0x2400e358

080210e8 <_fstat_r>:
 80210e8:	b538      	push	{r3, r4, r5, lr}
 80210ea:	4d07      	ldr	r5, [pc, #28]	; (8021108 <_fstat_r+0x20>)
 80210ec:	2300      	movs	r3, #0
 80210ee:	4604      	mov	r4, r0
 80210f0:	4608      	mov	r0, r1
 80210f2:	4611      	mov	r1, r2
 80210f4:	602b      	str	r3, [r5, #0]
 80210f6:	f7e0 fa40 	bl	800157a <_fstat>
 80210fa:	1c43      	adds	r3, r0, #1
 80210fc:	d102      	bne.n	8021104 <_fstat_r+0x1c>
 80210fe:	682b      	ldr	r3, [r5, #0]
 8021100:	b103      	cbz	r3, 8021104 <_fstat_r+0x1c>
 8021102:	6023      	str	r3, [r4, #0]
 8021104:	bd38      	pop	{r3, r4, r5, pc}
 8021106:	bf00      	nop
 8021108:	2400e358 	.word	0x2400e358

0802110c <_isatty_r>:
 802110c:	b538      	push	{r3, r4, r5, lr}
 802110e:	4d06      	ldr	r5, [pc, #24]	; (8021128 <_isatty_r+0x1c>)
 8021110:	2300      	movs	r3, #0
 8021112:	4604      	mov	r4, r0
 8021114:	4608      	mov	r0, r1
 8021116:	602b      	str	r3, [r5, #0]
 8021118:	f7e0 fa34 	bl	8001584 <_isatty>
 802111c:	1c43      	adds	r3, r0, #1
 802111e:	d102      	bne.n	8021126 <_isatty_r+0x1a>
 8021120:	682b      	ldr	r3, [r5, #0]
 8021122:	b103      	cbz	r3, 8021126 <_isatty_r+0x1a>
 8021124:	6023      	str	r3, [r4, #0]
 8021126:	bd38      	pop	{r3, r4, r5, pc}
 8021128:	2400e358 	.word	0x2400e358

0802112c <_lseek_r>:
 802112c:	b538      	push	{r3, r4, r5, lr}
 802112e:	4d07      	ldr	r5, [pc, #28]	; (802114c <_lseek_r+0x20>)
 8021130:	4604      	mov	r4, r0
 8021132:	4608      	mov	r0, r1
 8021134:	4611      	mov	r1, r2
 8021136:	2200      	movs	r2, #0
 8021138:	602a      	str	r2, [r5, #0]
 802113a:	461a      	mov	r2, r3
 802113c:	f7e0 fa24 	bl	8001588 <_lseek>
 8021140:	1c43      	adds	r3, r0, #1
 8021142:	d102      	bne.n	802114a <_lseek_r+0x1e>
 8021144:	682b      	ldr	r3, [r5, #0]
 8021146:	b103      	cbz	r3, 802114a <_lseek_r+0x1e>
 8021148:	6023      	str	r3, [r4, #0]
 802114a:	bd38      	pop	{r3, r4, r5, pc}
 802114c:	2400e358 	.word	0x2400e358

08021150 <_read_r>:
 8021150:	b538      	push	{r3, r4, r5, lr}
 8021152:	4d07      	ldr	r5, [pc, #28]	; (8021170 <_read_r+0x20>)
 8021154:	4604      	mov	r4, r0
 8021156:	4608      	mov	r0, r1
 8021158:	4611      	mov	r1, r2
 802115a:	2200      	movs	r2, #0
 802115c:	602a      	str	r2, [r5, #0]
 802115e:	461a      	mov	r2, r3
 8021160:	f7e0 f9ec 	bl	800153c <_read>
 8021164:	1c43      	adds	r3, r0, #1
 8021166:	d102      	bne.n	802116e <_read_r+0x1e>
 8021168:	682b      	ldr	r3, [r5, #0]
 802116a:	b103      	cbz	r3, 802116e <_read_r+0x1e>
 802116c:	6023      	str	r3, [r4, #0]
 802116e:	bd38      	pop	{r3, r4, r5, pc}
 8021170:	2400e358 	.word	0x2400e358

08021174 <_init>:
 8021174:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021176:	bf00      	nop
 8021178:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802117a:	bc08      	pop	{r3}
 802117c:	469e      	mov	lr, r3
 802117e:	4770      	bx	lr

08021180 <_fini>:
 8021180:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021182:	bf00      	nop
 8021184:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8021186:	bc08      	pop	{r3}
 8021188:	469e      	mov	lr, r3
 802118a:	4770      	bx	lr
