
STM32H747I-DISCO_CM7.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000298  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00020ab0  080002a0  080002a0  000102a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00004d58  08020d50  08020d50  00030d50  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 0000db26  08025aa8  08025aa8  00035aa8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000020  080335d0  080335d0  000435d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 ExtFlashSection 0017039c  90000000  90000000  00060000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 TextFlashSection 00000034  9017039c  9017039c  001d039c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  080335f0  080335f0  001d03d0  2**0
                  CONTENTS
  8 .ARM          00000000  080335f0  080335f0  001d03d0  2**0
                  CONTENTS
  9 .preinit_array 00000000  080335f0  080335f0  001d03d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000018  080335f0  080335f0  000435f0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  08033608  08033608  00043608  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         0000011c  24000000  08033610  00050000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          0000e204  2400011c  0803372c  0005011c  2**2
                  ALLOC
 14 ._user_heap_stack 00002000  2400e320  0803372c  0005e320  2**0
                  ALLOC
 15 .ARM.attributes 0000002e  00000000  00000000  001d03d0  2**0
                  CONTENTS, READONLY
 16 .debug_info   000fc64a  00000000  00000000  001d03fe  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_abbrev 0001aa95  00000000  00000000  002cca48  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_aranges 00003650  00000000  00000000  002e74e0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_ranges 00005ad8  00000000  00000000  002eab30  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_macro  00053352  00000000  00000000  002f0608  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line   000645be  00000000  00000000  0034395a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_str    001daf98  00000000  00000000  003a7f18  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .comment      000000cf  00000000  00000000  00582eb0  2**0
                  CONTENTS, READONLY
 24 .debug_frame  00009db8  00000000  00000000  00582f80  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loc    0002f4c5  00000000  00000000  0058cd38  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080002a0 <__do_global_dtors_aux>:
 80002a0:	b510      	push	{r4, lr}
 80002a2:	4c05      	ldr	r4, [pc, #20]	; (80002b8 <__do_global_dtors_aux+0x18>)
 80002a4:	7823      	ldrb	r3, [r4, #0]
 80002a6:	b933      	cbnz	r3, 80002b6 <__do_global_dtors_aux+0x16>
 80002a8:	4b04      	ldr	r3, [pc, #16]	; (80002bc <__do_global_dtors_aux+0x1c>)
 80002aa:	b113      	cbz	r3, 80002b2 <__do_global_dtors_aux+0x12>
 80002ac:	4804      	ldr	r0, [pc, #16]	; (80002c0 <__do_global_dtors_aux+0x20>)
 80002ae:	f3af 8000 	nop.w
 80002b2:	2301      	movs	r3, #1
 80002b4:	7023      	strb	r3, [r4, #0]
 80002b6:	bd10      	pop	{r4, pc}
 80002b8:	2400011c 	.word	0x2400011c
 80002bc:	00000000 	.word	0x00000000
 80002c0:	08020d38 	.word	0x08020d38

080002c4 <frame_dummy>:
 80002c4:	b508      	push	{r3, lr}
 80002c6:	4b03      	ldr	r3, [pc, #12]	; (80002d4 <frame_dummy+0x10>)
 80002c8:	b11b      	cbz	r3, 80002d2 <frame_dummy+0xe>
 80002ca:	4903      	ldr	r1, [pc, #12]	; (80002d8 <frame_dummy+0x14>)
 80002cc:	4803      	ldr	r0, [pc, #12]	; (80002dc <frame_dummy+0x18>)
 80002ce:	f3af 8000 	nop.w
 80002d2:	bd08      	pop	{r3, pc}
 80002d4:	00000000 	.word	0x00000000
 80002d8:	24000120 	.word	0x24000120
 80002dc:	08020d38 	.word	0x08020d38

080002e0 <memchr>:
 80002e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002e4:	2a10      	cmp	r2, #16
 80002e6:	db2b      	blt.n	8000340 <memchr+0x60>
 80002e8:	f010 0f07 	tst.w	r0, #7
 80002ec:	d008      	beq.n	8000300 <memchr+0x20>
 80002ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002f2:	3a01      	subs	r2, #1
 80002f4:	428b      	cmp	r3, r1
 80002f6:	d02d      	beq.n	8000354 <memchr+0x74>
 80002f8:	f010 0f07 	tst.w	r0, #7
 80002fc:	b342      	cbz	r2, 8000350 <memchr+0x70>
 80002fe:	d1f6      	bne.n	80002ee <memchr+0xe>
 8000300:	b4f0      	push	{r4, r5, r6, r7}
 8000302:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000306:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800030a:	f022 0407 	bic.w	r4, r2, #7
 800030e:	f07f 0700 	mvns.w	r7, #0
 8000312:	2300      	movs	r3, #0
 8000314:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000318:	3c08      	subs	r4, #8
 800031a:	ea85 0501 	eor.w	r5, r5, r1
 800031e:	ea86 0601 	eor.w	r6, r6, r1
 8000322:	fa85 f547 	uadd8	r5, r5, r7
 8000326:	faa3 f587 	sel	r5, r3, r7
 800032a:	fa86 f647 	uadd8	r6, r6, r7
 800032e:	faa5 f687 	sel	r6, r5, r7
 8000332:	b98e      	cbnz	r6, 8000358 <memchr+0x78>
 8000334:	d1ee      	bne.n	8000314 <memchr+0x34>
 8000336:	bcf0      	pop	{r4, r5, r6, r7}
 8000338:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800033c:	f002 0207 	and.w	r2, r2, #7
 8000340:	b132      	cbz	r2, 8000350 <memchr+0x70>
 8000342:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000346:	3a01      	subs	r2, #1
 8000348:	ea83 0301 	eor.w	r3, r3, r1
 800034c:	b113      	cbz	r3, 8000354 <memchr+0x74>
 800034e:	d1f8      	bne.n	8000342 <memchr+0x62>
 8000350:	2000      	movs	r0, #0
 8000352:	4770      	bx	lr
 8000354:	3801      	subs	r0, #1
 8000356:	4770      	bx	lr
 8000358:	2d00      	cmp	r5, #0
 800035a:	bf06      	itte	eq
 800035c:	4635      	moveq	r5, r6
 800035e:	3803      	subeq	r0, #3
 8000360:	3807      	subne	r0, #7
 8000362:	f015 0f01 	tst.w	r5, #1
 8000366:	d107      	bne.n	8000378 <memchr+0x98>
 8000368:	3001      	adds	r0, #1
 800036a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800036e:	bf02      	ittt	eq
 8000370:	3001      	addeq	r0, #1
 8000372:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000376:	3001      	addeq	r0, #1
 8000378:	bcf0      	pop	{r4, r5, r6, r7}
 800037a:	3801      	subs	r0, #1
 800037c:	4770      	bx	lr
 800037e:	bf00      	nop

08000380 <__aeabi_drsub>:
 8000380:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000384:	e002      	b.n	800038c <__adddf3>
 8000386:	bf00      	nop

08000388 <__aeabi_dsub>:
 8000388:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800038c <__adddf3>:
 800038c:	b530      	push	{r4, r5, lr}
 800038e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000392:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000396:	ea94 0f05 	teq	r4, r5
 800039a:	bf08      	it	eq
 800039c:	ea90 0f02 	teqeq	r0, r2
 80003a0:	bf1f      	itttt	ne
 80003a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80003a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80003aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80003ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80003b2:	f000 80e2 	beq.w	800057a <__adddf3+0x1ee>
 80003b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80003ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80003be:	bfb8      	it	lt
 80003c0:	426d      	neglt	r5, r5
 80003c2:	dd0c      	ble.n	80003de <__adddf3+0x52>
 80003c4:	442c      	add	r4, r5
 80003c6:	ea80 0202 	eor.w	r2, r0, r2
 80003ca:	ea81 0303 	eor.w	r3, r1, r3
 80003ce:	ea82 0000 	eor.w	r0, r2, r0
 80003d2:	ea83 0101 	eor.w	r1, r3, r1
 80003d6:	ea80 0202 	eor.w	r2, r0, r2
 80003da:	ea81 0303 	eor.w	r3, r1, r3
 80003de:	2d36      	cmp	r5, #54	; 0x36
 80003e0:	bf88      	it	hi
 80003e2:	bd30      	pophi	{r4, r5, pc}
 80003e4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80003e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80003ec:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80003f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80003f4:	d002      	beq.n	80003fc <__adddf3+0x70>
 80003f6:	4240      	negs	r0, r0
 80003f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80003fc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000400:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000404:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000408:	d002      	beq.n	8000410 <__adddf3+0x84>
 800040a:	4252      	negs	r2, r2
 800040c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000410:	ea94 0f05 	teq	r4, r5
 8000414:	f000 80a7 	beq.w	8000566 <__adddf3+0x1da>
 8000418:	f1a4 0401 	sub.w	r4, r4, #1
 800041c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000420:	db0d      	blt.n	800043e <__adddf3+0xb2>
 8000422:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000426:	fa22 f205 	lsr.w	r2, r2, r5
 800042a:	1880      	adds	r0, r0, r2
 800042c:	f141 0100 	adc.w	r1, r1, #0
 8000430:	fa03 f20e 	lsl.w	r2, r3, lr
 8000434:	1880      	adds	r0, r0, r2
 8000436:	fa43 f305 	asr.w	r3, r3, r5
 800043a:	4159      	adcs	r1, r3
 800043c:	e00e      	b.n	800045c <__adddf3+0xd0>
 800043e:	f1a5 0520 	sub.w	r5, r5, #32
 8000442:	f10e 0e20 	add.w	lr, lr, #32
 8000446:	2a01      	cmp	r2, #1
 8000448:	fa03 fc0e 	lsl.w	ip, r3, lr
 800044c:	bf28      	it	cs
 800044e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000452:	fa43 f305 	asr.w	r3, r3, r5
 8000456:	18c0      	adds	r0, r0, r3
 8000458:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800045c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000460:	d507      	bpl.n	8000472 <__adddf3+0xe6>
 8000462:	f04f 0e00 	mov.w	lr, #0
 8000466:	f1dc 0c00 	rsbs	ip, ip, #0
 800046a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800046e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000472:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000476:	d31b      	bcc.n	80004b0 <__adddf3+0x124>
 8000478:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800047c:	d30c      	bcc.n	8000498 <__adddf3+0x10c>
 800047e:	0849      	lsrs	r1, r1, #1
 8000480:	ea5f 0030 	movs.w	r0, r0, rrx
 8000484:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000488:	f104 0401 	add.w	r4, r4, #1
 800048c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000490:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000494:	f080 809a 	bcs.w	80005cc <__adddf3+0x240>
 8000498:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800049c:	bf08      	it	eq
 800049e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80004a2:	f150 0000 	adcs.w	r0, r0, #0
 80004a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80004aa:	ea41 0105 	orr.w	r1, r1, r5
 80004ae:	bd30      	pop	{r4, r5, pc}
 80004b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80004b4:	4140      	adcs	r0, r0
 80004b6:	eb41 0101 	adc.w	r1, r1, r1
 80004ba:	3c01      	subs	r4, #1
 80004bc:	bf28      	it	cs
 80004be:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80004c2:	d2e9      	bcs.n	8000498 <__adddf3+0x10c>
 80004c4:	f091 0f00 	teq	r1, #0
 80004c8:	bf04      	itt	eq
 80004ca:	4601      	moveq	r1, r0
 80004cc:	2000      	moveq	r0, #0
 80004ce:	fab1 f381 	clz	r3, r1
 80004d2:	bf08      	it	eq
 80004d4:	3320      	addeq	r3, #32
 80004d6:	f1a3 030b 	sub.w	r3, r3, #11
 80004da:	f1b3 0220 	subs.w	r2, r3, #32
 80004de:	da0c      	bge.n	80004fa <__adddf3+0x16e>
 80004e0:	320c      	adds	r2, #12
 80004e2:	dd08      	ble.n	80004f6 <__adddf3+0x16a>
 80004e4:	f102 0c14 	add.w	ip, r2, #20
 80004e8:	f1c2 020c 	rsb	r2, r2, #12
 80004ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80004f0:	fa21 f102 	lsr.w	r1, r1, r2
 80004f4:	e00c      	b.n	8000510 <__adddf3+0x184>
 80004f6:	f102 0214 	add.w	r2, r2, #20
 80004fa:	bfd8      	it	le
 80004fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000500:	fa01 f102 	lsl.w	r1, r1, r2
 8000504:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000508:	bfdc      	itt	le
 800050a:	ea41 010c 	orrle.w	r1, r1, ip
 800050e:	4090      	lslle	r0, r2
 8000510:	1ae4      	subs	r4, r4, r3
 8000512:	bfa2      	ittt	ge
 8000514:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000518:	4329      	orrge	r1, r5
 800051a:	bd30      	popge	{r4, r5, pc}
 800051c:	ea6f 0404 	mvn.w	r4, r4
 8000520:	3c1f      	subs	r4, #31
 8000522:	da1c      	bge.n	800055e <__adddf3+0x1d2>
 8000524:	340c      	adds	r4, #12
 8000526:	dc0e      	bgt.n	8000546 <__adddf3+0x1ba>
 8000528:	f104 0414 	add.w	r4, r4, #20
 800052c:	f1c4 0220 	rsb	r2, r4, #32
 8000530:	fa20 f004 	lsr.w	r0, r0, r4
 8000534:	fa01 f302 	lsl.w	r3, r1, r2
 8000538:	ea40 0003 	orr.w	r0, r0, r3
 800053c:	fa21 f304 	lsr.w	r3, r1, r4
 8000540:	ea45 0103 	orr.w	r1, r5, r3
 8000544:	bd30      	pop	{r4, r5, pc}
 8000546:	f1c4 040c 	rsb	r4, r4, #12
 800054a:	f1c4 0220 	rsb	r2, r4, #32
 800054e:	fa20 f002 	lsr.w	r0, r0, r2
 8000552:	fa01 f304 	lsl.w	r3, r1, r4
 8000556:	ea40 0003 	orr.w	r0, r0, r3
 800055a:	4629      	mov	r1, r5
 800055c:	bd30      	pop	{r4, r5, pc}
 800055e:	fa21 f004 	lsr.w	r0, r1, r4
 8000562:	4629      	mov	r1, r5
 8000564:	bd30      	pop	{r4, r5, pc}
 8000566:	f094 0f00 	teq	r4, #0
 800056a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800056e:	bf06      	itte	eq
 8000570:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000574:	3401      	addeq	r4, #1
 8000576:	3d01      	subne	r5, #1
 8000578:	e74e      	b.n	8000418 <__adddf3+0x8c>
 800057a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800057e:	bf18      	it	ne
 8000580:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000584:	d029      	beq.n	80005da <__adddf3+0x24e>
 8000586:	ea94 0f05 	teq	r4, r5
 800058a:	bf08      	it	eq
 800058c:	ea90 0f02 	teqeq	r0, r2
 8000590:	d005      	beq.n	800059e <__adddf3+0x212>
 8000592:	ea54 0c00 	orrs.w	ip, r4, r0
 8000596:	bf04      	itt	eq
 8000598:	4619      	moveq	r1, r3
 800059a:	4610      	moveq	r0, r2
 800059c:	bd30      	pop	{r4, r5, pc}
 800059e:	ea91 0f03 	teq	r1, r3
 80005a2:	bf1e      	ittt	ne
 80005a4:	2100      	movne	r1, #0
 80005a6:	2000      	movne	r0, #0
 80005a8:	bd30      	popne	{r4, r5, pc}
 80005aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80005ae:	d105      	bne.n	80005bc <__adddf3+0x230>
 80005b0:	0040      	lsls	r0, r0, #1
 80005b2:	4149      	adcs	r1, r1
 80005b4:	bf28      	it	cs
 80005b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80005ba:	bd30      	pop	{r4, r5, pc}
 80005bc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80005c0:	bf3c      	itt	cc
 80005c2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80005c6:	bd30      	popcc	{r4, r5, pc}
 80005c8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005cc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80005d0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80005d4:	f04f 0000 	mov.w	r0, #0
 80005d8:	bd30      	pop	{r4, r5, pc}
 80005da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80005de:	bf1a      	itte	ne
 80005e0:	4619      	movne	r1, r3
 80005e2:	4610      	movne	r0, r2
 80005e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80005e8:	bf1c      	itt	ne
 80005ea:	460b      	movne	r3, r1
 80005ec:	4602      	movne	r2, r0
 80005ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80005f2:	bf06      	itte	eq
 80005f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80005f8:	ea91 0f03 	teqeq	r1, r3
 80005fc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000600:	bd30      	pop	{r4, r5, pc}
 8000602:	bf00      	nop

08000604 <__aeabi_ui2d>:
 8000604:	f090 0f00 	teq	r0, #0
 8000608:	bf04      	itt	eq
 800060a:	2100      	moveq	r1, #0
 800060c:	4770      	bxeq	lr
 800060e:	b530      	push	{r4, r5, lr}
 8000610:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000614:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000618:	f04f 0500 	mov.w	r5, #0
 800061c:	f04f 0100 	mov.w	r1, #0
 8000620:	e750      	b.n	80004c4 <__adddf3+0x138>
 8000622:	bf00      	nop

08000624 <__aeabi_i2d>:
 8000624:	f090 0f00 	teq	r0, #0
 8000628:	bf04      	itt	eq
 800062a:	2100      	moveq	r1, #0
 800062c:	4770      	bxeq	lr
 800062e:	b530      	push	{r4, r5, lr}
 8000630:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000634:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000638:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800063c:	bf48      	it	mi
 800063e:	4240      	negmi	r0, r0
 8000640:	f04f 0100 	mov.w	r1, #0
 8000644:	e73e      	b.n	80004c4 <__adddf3+0x138>
 8000646:	bf00      	nop

08000648 <__aeabi_f2d>:
 8000648:	0042      	lsls	r2, r0, #1
 800064a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800064e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000652:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000656:	bf1f      	itttt	ne
 8000658:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800065c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000660:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000664:	4770      	bxne	lr
 8000666:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800066a:	bf08      	it	eq
 800066c:	4770      	bxeq	lr
 800066e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000672:	bf04      	itt	eq
 8000674:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000678:	4770      	bxeq	lr
 800067a:	b530      	push	{r4, r5, lr}
 800067c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000680:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000684:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000688:	e71c      	b.n	80004c4 <__adddf3+0x138>
 800068a:	bf00      	nop

0800068c <__aeabi_ul2d>:
 800068c:	ea50 0201 	orrs.w	r2, r0, r1
 8000690:	bf08      	it	eq
 8000692:	4770      	bxeq	lr
 8000694:	b530      	push	{r4, r5, lr}
 8000696:	f04f 0500 	mov.w	r5, #0
 800069a:	e00a      	b.n	80006b2 <__aeabi_l2d+0x16>

0800069c <__aeabi_l2d>:
 800069c:	ea50 0201 	orrs.w	r2, r0, r1
 80006a0:	bf08      	it	eq
 80006a2:	4770      	bxeq	lr
 80006a4:	b530      	push	{r4, r5, lr}
 80006a6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80006aa:	d502      	bpl.n	80006b2 <__aeabi_l2d+0x16>
 80006ac:	4240      	negs	r0, r0
 80006ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80006b2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80006b6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80006ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80006be:	f43f aed8 	beq.w	8000472 <__adddf3+0xe6>
 80006c2:	f04f 0203 	mov.w	r2, #3
 80006c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80006ca:	bf18      	it	ne
 80006cc:	3203      	addne	r2, #3
 80006ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80006d2:	bf18      	it	ne
 80006d4:	3203      	addne	r2, #3
 80006d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80006da:	f1c2 0320 	rsb	r3, r2, #32
 80006de:	fa00 fc03 	lsl.w	ip, r0, r3
 80006e2:	fa20 f002 	lsr.w	r0, r0, r2
 80006e6:	fa01 fe03 	lsl.w	lr, r1, r3
 80006ea:	ea40 000e 	orr.w	r0, r0, lr
 80006ee:	fa21 f102 	lsr.w	r1, r1, r2
 80006f2:	4414      	add	r4, r2
 80006f4:	e6bd      	b.n	8000472 <__adddf3+0xe6>
 80006f6:	bf00      	nop

080006f8 <vApplicationIdleHook>:
   specified, or call vTaskDelay()). If the application makes use of the
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */
vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
 80006f8:	4901      	ldr	r1, [pc, #4]	; (8000700 <vApplicationIdleHook+0x8>)
 80006fa:	2000      	movs	r0, #0
 80006fc:	f00a bcac 	b.w	800b058 <vTaskSetApplicationTaskTag>
 8000700:	08001cad 	.word	0x08001cad

08000704 <BRIDGE_GetTestPinState>:

#ifdef __cplusplus
extern "C" {
#endif

bool BRIDGE_GetTestPinState() { return HAL_GPIO_ReadPin(TEST_PIN_GPIO_Port, TEST_PIN_Pin) == GPIO_PIN_SET; }
 8000704:	b508      	push	{r3, lr}
 8000706:	2108      	movs	r1, #8
 8000708:	4803      	ldr	r0, [pc, #12]	; (8000718 <BRIDGE_GetTestPinState+0x14>)
 800070a:	f006 f949 	bl	80069a0 <HAL_GPIO_ReadPin>
 800070e:	1e43      	subs	r3, r0, #1
 8000710:	4258      	negs	r0, r3
 8000712:	4158      	adcs	r0, r3
 8000714:	bd08      	pop	{r3, pc}
 8000716:	bf00      	nop
 8000718:	58022400 	.word	0x58022400

0800071c <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 800071c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800071e:	b09d      	sub	sp, #116	; 0x74
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000720:	224c      	movs	r2, #76	; 0x4c
 8000722:	2100      	movs	r1, #0
 8000724:	a809      	add	r0, sp, #36	; 0x24
 8000726:	f01f fae3 	bl	801fcf0 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800072a:	2220      	movs	r2, #32
 800072c:	2100      	movs	r1, #0
 800072e:	a801      	add	r0, sp, #4
 8000730:	f01f fade 	bl	801fcf0 <memset>

  /** Supply configuration update enable
  */
  HAL_PWREx_ConfigSupply(PWR_DIRECT_SMPS_SUPPLY);
 8000734:	2004      	movs	r0, #4
 8000736:	f006 ff5f 	bl	80075f8 <HAL_PWREx_ConfigSupply>

  /** Configure the main internal regulator output voltage
  */
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
 800073a:	2300      	movs	r3, #0
 800073c:	9300      	str	r3, [sp, #0]
 800073e:	4b2a      	ldr	r3, [pc, #168]	; (80007e8 <SystemClock_Config+0xcc>)
 8000740:	699a      	ldr	r2, [r3, #24]
 8000742:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8000746:	619a      	str	r2, [r3, #24]
 8000748:	699a      	ldr	r2, [r3, #24]
 800074a:	f402 4240 	and.w	r2, r2, #49152	; 0xc000
 800074e:	9200      	str	r2, [sp, #0]
 8000750:	4a26      	ldr	r2, [pc, #152]	; (80007ec <SystemClock_Config+0xd0>)
 8000752:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 8000754:	f041 0101 	orr.w	r1, r1, #1
 8000758:	62d1      	str	r1, [r2, #44]	; 0x2c
 800075a:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800075c:	f002 0201 	and.w	r2, r2, #1
 8000760:	9200      	str	r2, [sp, #0]
 8000762:	9a00      	ldr	r2, [sp, #0]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
 8000764:	699a      	ldr	r2, [r3, #24]
 8000766:	0491      	lsls	r1, r2, #18
 8000768:	d5fc      	bpl.n	8000764 <SystemClock_Config+0x48>

  /** Macro to configure the PLL clock source
  */
  __HAL_RCC_PLL_PLLSOURCE_CONFIG(RCC_PLLSOURCE_HSE);
 800076a:	4a21      	ldr	r2, [pc, #132]	; (80007f0 <SystemClock_Config+0xd4>)

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_HSE;
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800076c:	2703      	movs	r7, #3
  RCC_OscInitStruct.HSIState = RCC_HSI_DIV1;
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 800076e:	2540      	movs	r5, #64	; 0x40
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000770:	2402      	movs	r4, #2
  __HAL_RCC_PLL_PLLSOURCE_CONFIG(RCC_PLLSOURCE_HSE);
 8000772:	6a93      	ldr	r3, [r2, #40]	; 0x28
  RCC_OscInitStruct.PLL.PLLN = 160;
  RCC_OscInitStruct.PLL.PLLP = 2;
  RCC_OscInitStruct.PLL.PLLQ = 2;
  RCC_OscInitStruct.PLL.PLLR = 2;
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 8000774:	2608      	movs	r6, #8
  RCC_OscInitStruct.PLL.PLLFRACN = 0;
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000776:	a809      	add	r0, sp, #36	; 0x24
  __HAL_RCC_PLL_PLLSOURCE_CONFIG(RCC_PLLSOURCE_HSE);
 8000778:	f023 0303 	bic.w	r3, r3, #3
 800077c:	f043 0302 	orr.w	r3, r3, #2
 8000780:	6293      	str	r3, [r2, #40]	; 0x28
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000782:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  RCC_OscInitStruct.PLL.PLLN = 160;
 8000786:	2205      	movs	r2, #5
  RCC_OscInitStruct.PLL.PLLR = 2;
 8000788:	9418      	str	r4, [sp, #96]	; 0x60
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800078a:	e9cd 7309 	strd	r7, r3, [sp, #36]	; 0x24
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 800078e:	2301      	movs	r3, #1
 8000790:	e9cd 350c 	strd	r3, r5, [sp, #48]	; 0x30
  RCC_OscInitStruct.PLL.PLLN = 160;
 8000794:	23a0      	movs	r3, #160	; 0xa0
 8000796:	e9cd 2314 	strd	r2, r3, [sp, #80]	; 0x50
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 800079a:	2300      	movs	r3, #0
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800079c:	e9cd 4412 	strd	r4, r4, [sp, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 2;
 80007a0:	e9cd 4416 	strd	r4, r4, [sp, #88]	; 0x58
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 80007a4:	e9cd 6319 	strd	r6, r3, [sp, #100]	; 0x64
  RCC_OscInitStruct.PLL.PLLFRACN = 0;
 80007a8:	931b      	str	r3, [sp, #108]	; 0x6c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80007aa:	f007 fa13 	bl	8007bd4 <HAL_RCC_OscConfig>
 80007ae:	b108      	cbz	r0, 80007b4 <SystemClock_Config+0x98>
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80007b0:	b672      	cpsid	i
void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80007b2:	e7fe      	b.n	80007b2 <SystemClock_Config+0x96>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80007b4:	233f      	movs	r3, #63	; 0x3f
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 80007b6:	4621      	mov	r1, r4
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80007b8:	e9cd 3701 	strd	r3, r7, [sp, #4]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 80007bc:	f44f 6380 	mov.w	r3, #1024	; 0x400
  RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 80007c0:	e9cd 0603 	strd	r0, r6, [sp, #12]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 80007c4:	a801      	add	r0, sp, #4
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 80007c6:	e9cd 5505 	strd	r5, r5, [sp, #20]
  RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 80007ca:	e9cd 3507 	strd	r3, r5, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 80007ce:	f007 fd81 	bl	80082d4 <HAL_RCC_ClockConfig>
 80007d2:	4601      	mov	r1, r0
 80007d4:	b108      	cbz	r0, 80007da <SystemClock_Config+0xbe>
 80007d6:	b672      	cpsid	i
  while (1)
 80007d8:	e7fe      	b.n	80007d8 <SystemClock_Config+0xbc>
  HAL_RCC_MCOConfig(RCC_MCO1, RCC_MCO1SOURCE_HSI, RCC_MCODIV_1);
 80007da:	f44f 2280 	mov.w	r2, #262144	; 0x40000
 80007de:	f007 fc8b 	bl	80080f8 <HAL_RCC_MCOConfig>
}
 80007e2:	b01d      	add	sp, #116	; 0x74
 80007e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80007e6:	bf00      	nop
 80007e8:	58024800 	.word	0x58024800
 80007ec:	58000400 	.word	0x58000400
 80007f0:	58024400 	.word	0x58024400

080007f4 <main>:
{
 80007f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80007f8:	b0ba      	sub	sp, #232	; 0xe8
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
 80007fa:	2210      	movs	r2, #16
 80007fc:	2100      	movs	r1, #0
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 80007fe:	2401      	movs	r4, #1
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
 8000800:	a82d      	add	r0, sp, #180	; 0xb4
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
 8000802:	2504      	movs	r5, #4
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
 8000804:	f01f fa74 	bl	801fcf0 <memset>
  HAL_MPU_Disable();
 8000808:	f005 f97c 	bl	8005b04 <HAL_MPU_Disable>
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
 800080c:	f04f 4110 	mov.w	r1, #2415919104	; 0x90000000
 8000810:	4bb7      	ldr	r3, [pc, #732]	; (8000af0 <main+0x2fc>)
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8000812:	a82d      	add	r0, sp, #180	; 0xb4
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 8000814:	f8ad 40b4 	strh.w	r4, [sp, #180]	; 0xb4
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
 8000818:	9430      	str	r4, [sp, #192]	; 0xc0
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
 800081a:	e9cd 132e 	strd	r1, r3, [sp, #184]	; 0xb8
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 800081e:	f005 f98f 	bl	8005b40 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
 8000822:	231a      	movs	r3, #26
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8000824:	a82d      	add	r0, sp, #180	; 0xb4
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
 8000826:	f88d 40b5 	strb.w	r4, [sp, #181]	; 0xb5
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
 800082a:	f88d 30bc 	strb.w	r3, [sp, #188]	; 0xbc
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 800082e:	f005 f987 	bl	8005b40 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
 8000832:	2302      	movs	r3, #2
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8000834:	a82d      	add	r0, sp, #180	; 0xb4
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
 8000836:	f88d 40c2 	strb.w	r4, [sp, #194]	; 0xc2
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
 800083a:	f88d 30b5 	strb.w	r3, [sp, #181]	; 0xb5
  MPU_InitStruct.BaseAddress = 0xD0000000;
 800083e:	f04f 4350 	mov.w	r3, #3489660928	; 0xd0000000
 8000842:	932e      	str	r3, [sp, #184]	; 0xb8
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
 8000844:	2318      	movs	r3, #24
 8000846:	f88d 30bc 	strb.w	r3, [sp, #188]	; 0xbc
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 800084a:	f005 f979 	bl	8005b40 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
 800084e:	2303      	movs	r3, #3
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8000850:	a82d      	add	r0, sp, #180	; 0xb4
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
 8000852:	f88d 30b5 	strb.w	r3, [sp, #181]	; 0xb5
  MPU_InitStruct.BaseAddress = 0x24000000;
 8000856:	f04f 5310 	mov.w	r3, #603979776	; 0x24000000
 800085a:	932e      	str	r3, [sp, #184]	; 0xb8
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
 800085c:	2312      	movs	r3, #18
 800085e:	f88d 30bc 	strb.w	r3, [sp, #188]	; 0xbc
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
 8000862:	2300      	movs	r3, #0
 8000864:	f88d 30c0 	strb.w	r3, [sp, #192]	; 0xc0
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8000868:	f005 f96a 	bl	8005b40 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.BaseAddress = 0x10000000;
 800086c:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8000870:	a82d      	add	r0, sp, #180	; 0xb4
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
 8000872:	f88d 50b5 	strb.w	r5, [sp, #181]	; 0xb5
  MPU_InitStruct.BaseAddress = 0x10000000;
 8000876:	932e      	str	r3, [sp, #184]	; 0xb8
  MPU_InitStruct.Size = MPU_REGION_SIZE_256KB;
 8000878:	2311      	movs	r3, #17
 800087a:	f88d 30bc 	strb.w	r3, [sp, #188]	; 0xbc
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 800087e:	f005 f95f 	bl	8005b40 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Number = MPU_REGION_NUMBER5;
 8000882:	2305      	movs	r3, #5
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8000884:	a82d      	add	r0, sp, #180	; 0xb4
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
 8000886:	f88d 40c0 	strb.w	r4, [sp, #192]	; 0xc0
  MPU_InitStruct.Number = MPU_REGION_NUMBER5;
 800088a:	f88d 30b5 	strb.w	r3, [sp, #181]	; 0xb5
  MPU_InitStruct.BaseAddress = 0x10040000;
 800088e:	4b99      	ldr	r3, [pc, #612]	; (8000af4 <main+0x300>)
 8000890:	932e      	str	r3, [sp, #184]	; 0xb8
  MPU_InitStruct.Size = MPU_REGION_SIZE_32KB;
 8000892:	230e      	movs	r3, #14
 8000894:	f88d 30bc 	strb.w	r3, [sp, #188]	; 0xbc
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8000898:	f005 f952 	bl	8005b40 <HAL_MPU_ConfigRegion>
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
 800089c:	4628      	mov	r0, r5
 800089e:	f005 f93f 	bl	8005b20 <HAL_MPU_Enable>
  \details Turns on I-Cache
  */
__STATIC_FORCEINLINE void SCB_EnableICache (void)
{
  #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
 80008a2:	4b95      	ldr	r3, [pc, #596]	; (8000af8 <main+0x304>)
 80008a4:	695a      	ldr	r2, [r3, #20]
 80008a6:	f412 3200 	ands.w	r2, r2, #131072	; 0x20000
 80008aa:	d111      	bne.n	80008d0 <main+0xdc>
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 80008ac:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80008b0:	f3bf 8f6f 	isb	sy

    __DSB();
    __ISB();
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 80008b4:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 80008b8:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80008bc:	f3bf 8f6f 	isb	sy
    __DSB();
    __ISB();
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
 80008c0:	695a      	ldr	r2, [r3, #20]
 80008c2:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 80008c6:	615a      	str	r2, [r3, #20]
  __ASM volatile ("dsb 0xF":::"memory");
 80008c8:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80008cc:	f3bf 8f6f 	isb	sy
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
 80008d0:	4a89      	ldr	r2, [pc, #548]	; (8000af8 <main+0x304>)
 80008d2:	6953      	ldr	r3, [r2, #20]
 80008d4:	f413 3380 	ands.w	r3, r3, #65536	; 0x10000
 80008d8:	d123      	bne.n	8000922 <main+0x12e>

    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 80008da:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 80008de:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
 80008e2:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
                                            /* invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 80008e6:	f643 74e0 	movw	r4, #16352	; 0x3fe0
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 80008ea:	f3c3 00c9 	ubfx	r0, r3, #3, #10
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 80008ee:	f3c3 334e 	ubfx	r3, r3, #13, #15
 80008f2:	015b      	lsls	r3, r3, #5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 80008f4:	ea03 0604 	and.w	r6, r3, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 80008f8:	4601      	mov	r1, r0
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 80008fa:	ea46 7581 	orr.w	r5, r6, r1, lsl #30
                      ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
 80008fe:	3901      	subs	r1, #1
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 8000900:	f8c2 5260 	str.w	r5, [r2, #608]	; 0x260
      } while (ways-- != 0U);
 8000904:	d2f9      	bcs.n	80008fa <main+0x106>
    } while(sets-- != 0U);
 8000906:	3b20      	subs	r3, #32
 8000908:	f113 0f20 	cmn.w	r3, #32
 800090c:	d1f2      	bne.n	80008f4 <main+0x100>
 800090e:	f3bf 8f4f 	dsb	sy
    __DSB();

    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
 8000912:	6953      	ldr	r3, [r2, #20]
 8000914:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8000918:	6153      	str	r3, [r2, #20]
 800091a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800091e:	f3bf 8f6f 	isb	sy
  while((__HAL_RCC_GET_FLAG(RCC_FLAG_D2CKRDY) != RESET) && (timeout-- > 0));
 8000922:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000926:	4d75      	ldr	r5, [pc, #468]	; (8000afc <main+0x308>)
 8000928:	682c      	ldr	r4, [r5, #0]
 800092a:	f414 4400 	ands.w	r4, r4, #32768	; 0x8000
 800092e:	f000 82b1 	beq.w	8000e94 <main+0x6a0>
 8000932:	3b01      	subs	r3, #1
 8000934:	d1f8      	bne.n	8000928 <main+0x134>
  __ASM volatile ("cpsid i" : : : "memory");
 8000936:	b672      	cpsid	i
  while (1)
 8000938:	e7fe      	b.n	8000938 <main+0x144>
 800093a:	b672      	cpsid	i
 800093c:	e7fe      	b.n	800093c <main+0x148>
  BSP_SDRAM_DeInit(0);
 800093e:	f004 fd71 	bl	8005424 <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init(0) != BSP_ERROR_NONE)
 8000942:	4640      	mov	r0, r8
 8000944:	f004 fdbc 	bl	80054c0 <BSP_SDRAM_Init>
 8000948:	4603      	mov	r3, r0
 800094a:	b108      	cbz	r0, 8000950 <main+0x15c>
 800094c:	b672      	cpsid	i
  while (1)
 800094e:	e7fe      	b.n	800094e <main+0x15a>
  hqspi.Instance = QUADSPI;
 8000950:	486b      	ldr	r0, [pc, #428]	; (8000b00 <main+0x30c>)
 8000952:	4a6c      	ldr	r2, [pc, #432]	; (8000b04 <main+0x310>)
  hqspi.Init.ClockMode = QSPI_CLOCK_MODE_0;
 8000954:	6183      	str	r3, [r0, #24]
  hqspi.Init.DualFlash = QSPI_DUALFLASH_ENABLE;
 8000956:	6205      	str	r5, [r0, #32]
  hqspi.Init.ClockPrescaler = 3;
 8000958:	e9c0 2700 	strd	r2, r7, [r0]
  hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_NONE;
 800095c:	e9c0 4302 	strd	r4, r3, [r0, #8]
  hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_1_CYCLE;
 8000960:	e9c0 4304 	strd	r4, r3, [r0, #16]
  if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 8000964:	f006 ff5c 	bl	8007820 <HAL_QSPI_Init>
 8000968:	b108      	cbz	r0, 800096e <main+0x17a>
 800096a:	b672      	cpsid	i
  while (1)
 800096c:	e7fe      	b.n	800096c <main+0x178>
  if (BSP_QSPI_Init(0,&init) != BSP_ERROR_NONE)
 800096e:	a92d      	add	r1, sp, #180	; 0xb4
  init.InterfaceMode=MT25TL01G_QPI_MODE;
 8000970:	f88d 70b4 	strb.w	r7, [sp, #180]	; 0xb4
  init.TransferRate= MT25TL01G_DTR_TRANSFER ;
 8000974:	f88d 40b5 	strb.w	r4, [sp, #181]	; 0xb5
  init.DualFlashMode= MT25TL01G_DUALFLASH_ENABLE;
 8000978:	f88d 50b6 	strb.w	r5, [sp, #182]	; 0xb6
  if (BSP_QSPI_Init(0,&init) != BSP_ERROR_NONE)
 800097c:	f004 fb98 	bl	80050b0 <BSP_QSPI_Init>
 8000980:	b108      	cbz	r0, 8000986 <main+0x192>
 8000982:	b672      	cpsid	i
  while (1)
 8000984:	e7fe      	b.n	8000984 <main+0x190>
  if (BSP_QSPI_EnableMemoryMappedMode(0) != BSP_ERROR_NONE)
 8000986:	f004 fb3f 	bl	8005008 <BSP_QSPI_EnableMemoryMappedMode>
 800098a:	4603      	mov	r3, r0
 800098c:	b108      	cbz	r0, 8000992 <main+0x19e>
 800098e:	b672      	cpsid	i
  while (1)
 8000990:	e7fe      	b.n	8000990 <main+0x19c>
  hdma2d.Instance = DMA2D;
 8000992:	485d      	ldr	r0, [pc, #372]	; (8000b08 <main+0x314>)
  hdma2d.Init.Mode = DMA2D_R2M;
 8000994:	f44f 3240 	mov.w	r2, #196608	; 0x30000
 8000998:	f8df e178 	ldr.w	lr, [pc, #376]	; 8000b14 <main+0x320>
  hdma2d.Init.OutputOffset = 0;
 800099c:	e9c0 4302 	strd	r4, r3, [r0, #8]
  hdma2d.Init.Mode = DMA2D_R2M;
 80009a0:	e9c0 e200 	strd	lr, r2, [r0]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 80009a4:	f005 f956 	bl	8005c54 <HAL_DMA2D_Init>
 80009a8:	4605      	mov	r5, r0
 80009aa:	b108      	cbz	r0, 80009b0 <main+0x1bc>
 80009ac:	b672      	cpsid	i
  while (1)
 80009ae:	e7fe      	b.n	80009ae <main+0x1ba>
  HAL_GPIO_WritePin(GPIOG , GPIO_PIN_3 , GPIO_PIN_RESET);
 80009b0:	4602      	mov	r2, r0
 80009b2:	4631      	mov	r1, r6
 80009b4:	4855      	ldr	r0, [pc, #340]	; (8000b0c <main+0x318>)
 80009b6:	f005 fff9 	bl	80069ac <HAL_GPIO_WritePin>
  HAL_Delay(20);/* wait 20 ms */
 80009ba:	2014      	movs	r0, #20
 80009bc:	f005 f824 	bl	8005a08 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOG , GPIO_PIN_3, GPIO_PIN_SET);/* Deactivate XRES */
 80009c0:	4631      	mov	r1, r6
 80009c2:	4622      	mov	r2, r4
 80009c4:	4851      	ldr	r0, [pc, #324]	; (8000b0c <main+0x318>)
 80009c6:	f005 fff1 	bl	80069ac <HAL_GPIO_WritePin>
  HAL_Delay(10);/* Wait for 10ms after releasing XRES before sending commands */
 80009ca:	200a      	movs	r0, #10
 80009cc:	f005 f81c 	bl	8005a08 <HAL_Delay>
  DSI_HOST_TimeoutTypeDef HostTimeouts = {0};
 80009d0:	2224      	movs	r2, #36	; 0x24
 80009d2:	4629      	mov	r1, r5
 80009d4:	a817      	add	r0, sp, #92	; 0x5c
  DSI_PLLInitTypeDef PLLInit = {0};
 80009d6:	9510      	str	r5, [sp, #64]	; 0x40
  DSI_HOST_TimeoutTypeDef HostTimeouts = {0};
 80009d8:	f01f f98a 	bl	801fcf0 <memset>
  DSI_PHY_TimerTypeDef PhyTimings = {0};
 80009dc:	2218      	movs	r2, #24
 80009de:	4629      	mov	r1, r5
 80009e0:	a811      	add	r0, sp, #68	; 0x44
  hdsi.Instance = DSI;
 80009e2:	4e4b      	ldr	r6, [pc, #300]	; (8000b10 <main+0x31c>)
  DSI_PHY_TimerTypeDef PhyTimings = {0};
 80009e4:	f01f f984 	bl	801fcf0 <memset>
  DSI_LPCmdTypeDef LPCmd = {0};
 80009e8:	2234      	movs	r2, #52	; 0x34
 80009ea:	4629      	mov	r1, r5
 80009ec:	a82d      	add	r0, sp, #180	; 0xb4
 80009ee:	f01f f97f 	bl	801fcf0 <memset>
  DSI_CmdCfgTypeDef CmdCfg = {0};
 80009f2:	4629      	mov	r1, r5
 80009f4:	222c      	movs	r2, #44	; 0x2c
 80009f6:	a820      	add	r0, sp, #128	; 0x80
 80009f8:	f01f f97a 	bl	801fcf0 <memset>
  hdsi.Instance = DSI;
 80009fc:	f04f 43a0 	mov.w	r3, #1342177280	; 0x50000000
  PLLInit.PLLIDF = DSI_PLL_IN_DIV5;
 8000a00:	f04f 0c63 	mov.w	ip, #99	; 0x63
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 8000a04:	a90e      	add	r1, sp, #56	; 0x38
 8000a06:	4630      	mov	r0, r6
  hdsi.Init.AutomaticClockLaneControl = DSI_AUTO_CLK_LANE_CTRL_DISABLE;
 8000a08:	e9c6 3500 	strd	r3, r5, [r6]
  hdsi.Init.TXEscapeCkdiv = 4;
 8000a0c:	2304      	movs	r3, #4
  hdsi.Init.NumberOfLanes = DSI_TWO_DATA_LANES;
 8000a0e:	e9c6 3402 	strd	r3, r4, [r6, #8]
  PLLInit.PLLIDF = DSI_PLL_IN_DIV5;
 8000a12:	2305      	movs	r3, #5
 8000a14:	e9cd c30e 	strd	ip, r3, [sp, #56]	; 0x38
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 8000a18:	f005 fa68 	bl	8005eec <HAL_DSI_Init>
 8000a1c:	b108      	cbz	r0, 8000a22 <main+0x22e>
 8000a1e:	b672      	cpsid	i
  while (1)
 8000a20:	e7fe      	b.n	8000a20 <main+0x22c>
  HostTimeouts.HighSpeedTransmissionTimeout = 0;
 8000a22:	e9cd 4017 	strd	r4, r0, [sp, #92]	; 0x5c
  HostTimeouts.HighSpeedReadTimeout = 0;
 8000a26:	e9cd 0019 	strd	r0, r0, [sp, #100]	; 0x64
  HostTimeouts.HighSpeedWriteTimeout = 0;
 8000a2a:	e9cd 001b 	strd	r0, r0, [sp, #108]	; 0x6c
  HostTimeouts.LowPowerWriteTimeout = 0;
 8000a2e:	e9cd 001d 	strd	r0, r0, [sp, #116]	; 0x74
  HostTimeouts.BTATimeout = 0;
 8000a32:	901f      	str	r0, [sp, #124]	; 0x7c
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 8000a34:	a917      	add	r1, sp, #92	; 0x5c
 8000a36:	4630      	mov	r0, r6
 8000a38:	f005 fc84 	bl	8006344 <HAL_DSI_ConfigHostTimeouts>
 8000a3c:	b108      	cbz	r0, 8000a42 <main+0x24e>
 8000a3e:	b672      	cpsid	i
  while (1)
 8000a40:	e7fe      	b.n	8000a40 <main+0x24c>
  PhyTimings.ClockLaneLP2HSTime = 33;
 8000a42:	2321      	movs	r3, #33	; 0x21
 8000a44:	261c      	movs	r6, #28
  PhyTimings.DataLaneLP2HSTime = 25;
 8000a46:	270f      	movs	r7, #15
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 8000a48:	a911      	add	r1, sp, #68	; 0x44
 8000a4a:	4831      	ldr	r0, [pc, #196]	; (8000b10 <main+0x31c>)
  PhyTimings.ClockLaneLP2HSTime = 33;
 8000a4c:	e9cd 6311 	strd	r6, r3, [sp, #68]	; 0x44
  PhyTimings.DataLaneLP2HSTime = 25;
 8000a50:	2319      	movs	r3, #25
 8000a52:	e9cd 7313 	strd	r7, r3, [sp, #76]	; 0x4c
  PhyTimings.DataLaneMaxReadTime = 0;
 8000a56:	2300      	movs	r3, #0
  PhyTimings.StopWaitTime = 0;
 8000a58:	e9cd 3315 	strd	r3, r3, [sp, #84]	; 0x54
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 8000a5c:	f005 fc35 	bl	80062ca <HAL_DSI_ConfigPhyTimer>
 8000a60:	b108      	cbz	r0, 8000a66 <main+0x272>
 8000a62:	b672      	cpsid	i
  while (1)
 8000a64:	e7fe      	b.n	8000a64 <main+0x270>
  if (HAL_DSI_ConfigFlowControl(&hdsi, DSI_FLOW_CONTROL_BTA) != HAL_OK)
 8000a66:	2104      	movs	r1, #4
 8000a68:	4829      	ldr	r0, [pc, #164]	; (8000b10 <main+0x31c>)
 8000a6a:	f005 fc1d 	bl	80062a8 <HAL_DSI_ConfigFlowControl>
 8000a6e:	b108      	cbz	r0, 8000a74 <main+0x280>
 8000a70:	b672      	cpsid	i
  while (1)
 8000a72:	e7fe      	b.n	8000a72 <main+0x27e>
  if (HAL_DSI_SetLowPowerRXFilter(&hdsi, 10000) != HAL_OK)
 8000a74:	f242 7110 	movw	r1, #10000	; 0x2710
 8000a78:	4825      	ldr	r0, [pc, #148]	; (8000b10 <main+0x31c>)
 8000a7a:	f005 fded 	bl	8006658 <HAL_DSI_SetLowPowerRXFilter>
 8000a7e:	4601      	mov	r1, r0
 8000a80:	b108      	cbz	r0, 8000a86 <main+0x292>
 8000a82:	b672      	cpsid	i
  while (1)
 8000a84:	e7fe      	b.n	8000a84 <main+0x290>
  if (HAL_DSI_ConfigErrorMonitor(&hdsi, HAL_DSI_ERROR_NONE) != HAL_OK)
 8000a86:	4822      	ldr	r0, [pc, #136]	; (8000b10 <main+0x31c>)
 8000a88:	f005 f9ce 	bl	8005e28 <HAL_DSI_ConfigErrorMonitor>
 8000a8c:	b108      	cbz	r0, 8000a92 <main+0x29e>
 8000a8e:	b672      	cpsid	i
  while (1)
 8000a90:	e7fe      	b.n	8000a90 <main+0x29c>
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_ENABLE;
 8000a92:	f44f 7880 	mov.w	r8, #256	; 0x100
 8000a96:	f44f 7300 	mov.w	r3, #512	; 0x200
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_ENABLE;
 8000a9a:	f44f 6280 	mov.w	r2, #1024	; 0x400
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_ENABLE;
 8000a9e:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_ENABLE;
 8000aa2:	f44f 4080 	mov.w	r0, #16384	; 0x4000
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 8000aa6:	f44f 3400 	mov.w	r4, #131072	; 0x20000
  LPCmd.LPMaxReadPacket = DSI_LP_MRDP_ENABLE;
 8000aaa:	f44f 2500 	mov.w	r5, #524288	; 0x80000
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_ENABLE;
 8000aae:	e9cd 832d 	strd	r8, r3, [sp, #180]	; 0xb4
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_ENABLE;
 8000ab2:	f44f 6300 	mov.w	r3, #2048	; 0x800
  LPCmd.AcknowledgeRequest = DSI_ACKNOWLEDGE_ENABLE;
 8000ab6:	f04f 0802 	mov.w	r8, #2
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_ENABLE;
 8000aba:	e9cd 232f 	strd	r2, r3, [sp, #188]	; 0xbc
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_ENABLE;
 8000abe:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  LPCmd.AcknowledgeRequest = DSI_ACKNOWLEDGE_ENABLE;
 8000ac2:	f8cd 80e4 	str.w	r8, [sp, #228]	; 0xe4
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_ENABLE;
 8000ac6:	e9cd 1331 	strd	r1, r3, [sp, #196]	; 0xc4
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_ENABLE;
 8000aca:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 8000ace:	a92d      	add	r1, sp, #180	; 0xb4
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_ENABLE;
 8000ad0:	e9cd 0333 	strd	r0, r3, [sp, #204]	; 0xcc
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 8000ad4:	f44f 2380 	mov.w	r3, #262144	; 0x40000
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 8000ad8:	480d      	ldr	r0, [pc, #52]	; (8000b10 <main+0x31c>)
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 8000ada:	e9cd 4335 	strd	r4, r3, [sp, #212]	; 0xd4
  LPCmd.LPMaxReadPacket = DSI_LP_MRDP_ENABLE;
 8000ade:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8000ae2:	e9cd 5337 	strd	r5, r3, [sp, #220]	; 0xdc
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 8000ae6:	f005 fbab 	bl	8006240 <HAL_DSI_ConfigCommand>
 8000aea:	b1a8      	cbz	r0, 8000b18 <main+0x324>
 8000aec:	b672      	cpsid	i
  while (1)
 8000aee:	e7fe      	b.n	8000aee <main+0x2fa>
 8000af0:	0300001b 	.word	0x0300001b
 8000af4:	10040000 	.word	0x10040000
 8000af8:	e000ed00 	.word	0xe000ed00
 8000afc:	58024400 	.word	0x58024400
 8000b00:	240002bc 	.word	0x240002bc
 8000b04:	52005000 	.word	0x52005000
 8000b08:	24000190 	.word	0x24000190
 8000b0c:	58021800 	.word	0x58021800
 8000b10:	240001f8 	.word	0x240001f8
 8000b14:	52001000 	.word	0x52001000
  CmdCfg.CommandSize = 400;
 8000b18:	2305      	movs	r3, #5
 8000b1a:	f44f 77c8 	mov.w	r7, #400	; 0x190
  CmdCfg.TEAcknowledgeRequest = DSI_TE_ACKNOWLEDGE_ENABLE;
 8000b1e:	2601      	movs	r6, #1
  CmdCfg.VirtualChannelID = 0;
 8000b20:	9020      	str	r0, [sp, #128]	; 0x80
  CmdCfg.DEPolarity = DSI_DATA_ENABLE_ACTIVE_HIGH;
 8000b22:	9027      	str	r0, [sp, #156]	; 0x9c
  CmdCfg.TEAcknowledgeRequest = DSI_TE_ACKNOWLEDGE_ENABLE;
 8000b24:	962a      	str	r6, [sp, #168]	; 0xa8
  CmdCfg.CommandSize = 400;
 8000b26:	e9cd 3721 	strd	r3, r7, [sp, #132]	; 0x84
  CmdCfg.TearingEffectSource = DSI_TE_EXTERNAL;
 8000b2a:	2310      	movs	r3, #16
  CmdCfg.TearingEffectPolarity = DSI_TE_RISING_EDGE;
 8000b2c:	e9cd 3023 	strd	r3, r0, [sp, #140]	; 0x8c
  CmdCfg.VSyncPol = DSI_VSYNC_RISING;
 8000b30:	2380      	movs	r3, #128	; 0x80
  CmdCfg.VSPolarity = DSI_VSYNC_ACTIVE_HIGH;
 8000b32:	e9cd 0025 	strd	r0, r0, [sp, #148]	; 0x94
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 8000b36:	eb0d 0103 	add.w	r1, sp, r3
  CmdCfg.AutomaticRefresh = DSI_AR_DISABLE;
 8000b3a:	e9cd 3028 	strd	r3, r0, [sp, #160]	; 0xa0
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 8000b3e:	48c2      	ldr	r0, [pc, #776]	; (8000e48 <main+0x654>)
 8000b40:	f005 fb0c 	bl	800615c <HAL_DSI_ConfigAdaptedCommandMode>
 8000b44:	4601      	mov	r1, r0
 8000b46:	b108      	cbz	r0, 8000b4c <main+0x358>
 8000b48:	b672      	cpsid	i
  while (1)
 8000b4a:	e7fe      	b.n	8000b4a <main+0x356>
  if (HAL_DSI_SetGenericVCID(&hdsi, 0) != HAL_OK)
 8000b4c:	48be      	ldr	r0, [pc, #760]	; (8000e48 <main+0x654>)
 8000b4e:	f005 faf4 	bl	800613a <HAL_DSI_SetGenericVCID>
 8000b52:	4604      	mov	r4, r0
 8000b54:	b108      	cbz	r0, 8000b5a <main+0x366>
 8000b56:	b672      	cpsid	i
  while (1)
 8000b58:	e7fe      	b.n	8000b58 <main+0x364>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8000b5a:	4601      	mov	r1, r0
 8000b5c:	2234      	movs	r2, #52	; 0x34
 8000b5e:	a820      	add	r0, sp, #128	; 0x80
  hltdc.Instance = LTDC;
 8000b60:	4dba      	ldr	r5, [pc, #744]	; (8000e4c <main+0x658>)
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8000b62:	f01f f8c5 	bl	801fcf0 <memset>
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AH;
 8000b66:	48ba      	ldr	r0, [pc, #744]	; (8000e50 <main+0x65c>)
 8000b68:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
  hltdc.Init.AccumulatedActiveH = 482;
 8000b6c:	f44f 7cc9 	mov.w	ip, #402	; 0x192
  hltdc.Init.TotalHeigh = 483;
 8000b70:	f240 1e93 	movw	lr, #403	; 0x193
  hltdc.Init.Backcolor.Blue = 0;
 8000b74:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.AccumulatedVBP = 2;
 8000b76:	f8c5 8020 	str.w	r8, [r5, #32]
  hltdc.Init.Backcolor.Red = 0;
 8000b7a:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AH;
 8000b7e:	e9c5 0300 	strd	r0, r3, [r5]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AH;
 8000b82:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000b86:	4628      	mov	r0, r5
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8000b88:	e9c5 3402 	strd	r3, r4, [r5, #8]
  hltdc.Init.AccumulatedActiveH = 482;
 8000b8c:	f44f 73f1 	mov.w	r3, #482	; 0x1e2
 8000b90:	e9c5 c309 	strd	ip, r3, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 483;
 8000b94:	f240 13e3 	movw	r3, #483	; 0x1e3
  hltdc.Init.HorizontalSync = 0;
 8000b98:	e9c5 4404 	strd	r4, r4, [r5, #16]
  hltdc.Init.AccumulatedHBP = 2;
 8000b9c:	e9c5 4806 	strd	r4, r8, [r5, #24]
  hltdc.Init.TotalHeigh = 483;
 8000ba0:	e9c5 e30b 	strd	lr, r3, [r5, #44]	; 0x2c
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000ba4:	f006 fb64 	bl	8007270 <HAL_LTDC_Init>
 8000ba8:	b108      	cbz	r0, 8000bae <main+0x3ba>
 8000baa:	b672      	cpsid	i
  while (1)
 8000bac:	e7fe      	b.n	8000bac <main+0x3b8>
  pLayerCfg.Alpha = 255;
 8000bae:	22ff      	movs	r2, #255	; 0xff
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_PAxCA;
 8000bb0:	f44f 61c0 	mov.w	r1, #1536	; 0x600
  pLayerCfg.WindowY1 = 480;
 8000bb4:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
  pLayerCfg.WindowY0 = 0;
 8000bb8:	9022      	str	r0, [sp, #136]	; 0x88
  pLayerCfg.Backcolor.Blue = 0;
 8000bba:	f8ad 00b0 	strh.w	r0, [sp, #176]	; 0xb0
  pLayerCfg.Backcolor.Red = 0;
 8000bbe:	f88d 00b2 	strb.w	r0, [sp, #178]	; 0xb2
  pLayerCfg.ImageHeight = 480;
 8000bc2:	932b      	str	r3, [sp, #172]	; 0xac
  pLayerCfg.Alpha0 = 0;
 8000bc4:	e9cd 2025 	strd	r2, r0, [sp, #148]	; 0x94
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_PAxCA;
 8000bc8:	2207      	movs	r2, #7
 8000bca:	e9cd 1227 	strd	r1, r2, [sp, #156]	; 0x9c
  pLayerCfg.FBStartAdress = 0xD0000000;
 8000bce:	f04f 4250 	mov.w	r2, #3489660928	; 0xd0000000
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000bd2:	a920      	add	r1, sp, #128	; 0x80
  pLayerCfg.WindowX1 = 400;
 8000bd4:	e9cd 0720 	strd	r0, r7, [sp, #128]	; 0x80
  pLayerCfg.ImageWidth = 400;
 8000bd8:	e9cd 2729 	strd	r2, r7, [sp, #164]	; 0xa4
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000bdc:	4602      	mov	r2, r0
 8000bde:	4628      	mov	r0, r5
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB888;
 8000be0:	e9cd 3623 	strd	r3, r6, [sp, #140]	; 0x8c
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000be4:	f006 fc10 	bl	8007408 <HAL_LTDC_ConfigLayer>
 8000be8:	4604      	mov	r4, r0
 8000bea:	b108      	cbz	r0, 8000bf0 <main+0x3fc>
 8000bec:	b672      	cpsid	i
  while (1)
 8000bee:	e7fe      	b.n	8000bee <main+0x3fa>
  __HAL_LTDC_DISABLE(&hltdc);
 8000bf0:	682a      	ldr	r2, [r5, #0]
  HAL_DSI_Start(&hdsi);
 8000bf2:	4895      	ldr	r0, [pc, #596]	; (8000e48 <main+0x654>)
  __HAL_LTDC_DISABLE(&hltdc);
 8000bf4:	6993      	ldr	r3, [r2, #24]
 8000bf6:	f023 0301 	bic.w	r3, r3, #1
 8000bfa:	6193      	str	r3, [r2, #24]
  HAL_DSI_Start(&hdsi);
 8000bfc:	f005 fc08 	bl	8006410 <HAL_DSI_Start>
  IOCtx.Address     = 0;
 8000c00:	4994      	ldr	r1, [pc, #592]	; (8000e54 <main+0x660>)
  IOCtx.GetTick     = BSP_GetTick;
 8000c02:	4b95      	ldr	r3, [pc, #596]	; (8000e58 <main+0x664>)
  OTM8009A_RegisterBusIO(&OTM8009AObj, &IOCtx);
 8000c04:	4895      	ldr	r0, [pc, #596]	; (8000e5c <main+0x668>)
  IOCtx.GetTick     = BSP_GetTick;
 8000c06:	60cb      	str	r3, [r1, #12]
  IOCtx.WriteReg    = DSI_IO_Write;
 8000c08:	4b95      	ldr	r3, [pc, #596]	; (8000e60 <main+0x66c>)
  IOCtx.Address     = 0;
 8000c0a:	800c      	strh	r4, [r1, #0]
  IOCtx.WriteReg    = DSI_IO_Write;
 8000c0c:	604b      	str	r3, [r1, #4]
  IOCtx.ReadReg     = DSI_IO_Read;
 8000c0e:	4b95      	ldr	r3, [pc, #596]	; (8000e64 <main+0x670>)
 8000c10:	608b      	str	r3, [r1, #8]
  OTM8009A_RegisterBusIO(&OTM8009AObj, &IOCtx);
 8000c12:	f003 ffed 	bl	8004bf0 <OTM8009A_RegisterBusIO>
  OTM8009A_Init(&OTM8009AObj ,OTM8009A_FORMAT_RGB888, OTM8009A_ORIENTATION_LANDSCAPE);
 8000c16:	4632      	mov	r2, r6
 8000c18:	4621      	mov	r1, r4
 8000c1a:	4890      	ldr	r0, [pc, #576]	; (8000e5c <main+0x668>)
 8000c1c:	f003 fc44 	bl	80044a8 <OTM8009A_Init>
  HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_DISPOFF, 0x00);
 8000c20:	2328      	movs	r3, #40	; 0x28
 8000c22:	2215      	movs	r2, #21
 8000c24:	4621      	mov	r1, r4
 8000c26:	4888      	ldr	r0, [pc, #544]	; (8000e48 <main+0x654>)
 8000c28:	9400      	str	r4, [sp, #0]
 8000c2a:	f005 fc24 	bl	8006476 <HAL_DSI_ShortWrite>
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 8000c2e:	a92d      	add	r1, sp, #180	; 0xb4
 8000c30:	4885      	ldr	r0, [pc, #532]	; (8000e48 <main+0x654>)
  LPCmd.LPDcsLongWrite = DSI_LP_DLW_DISABLE;
 8000c32:	9437      	str	r4, [sp, #220]	; 0xdc
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_DISABLE;
 8000c34:	e9cd 442d 	strd	r4, r4, [sp, #180]	; 0xb4
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_DISABLE;
 8000c38:	e9cd 442f 	strd	r4, r4, [sp, #188]	; 0xbc
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_DISABLE;
 8000c3c:	e9cd 4431 	strd	r4, r4, [sp, #196]	; 0xc4
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_DISABLE;
 8000c40:	e9cd 4433 	strd	r4, r4, [sp, #204]	; 0xcc
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_DISABLE;
 8000c44:	e9cd 4435 	strd	r4, r4, [sp, #212]	; 0xd4
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 8000c48:	f005 fafa 	bl	8006240 <HAL_DSI_ConfigCommand>
  HAL_LTDC_SetPitch(&hltdc, 800, 0);
 8000c4c:	f44f 7148 	mov.w	r1, #800	; 0x320
 8000c50:	4622      	mov	r2, r4
 8000c52:	4628      	mov	r0, r5
 8000c54:	f006 fc06 	bl	8007464 <HAL_LTDC_SetPitch>
  __HAL_LTDC_ENABLE(&hltdc);
 8000c58:	682a      	ldr	r2, [r5, #0]
 8000c5a:	6993      	ldr	r3, [r2, #24]
 8000c5c:	f043 0301 	orr.w	r3, r3, #1
 8000c60:	6193      	str	r3, [r2, #24]
  MX_TouchGFX_Init();
 8000c62:	f000 fca2 	bl	80015aa <MX_TouchGFX_Init>
  osKernelInitialize();
 8000c66:	f008 fd6d 	bl	8009744 <osKernelInitialize>
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 8000c6a:	4a7f      	ldr	r2, [pc, #508]	; (8000e68 <main+0x674>)
 8000c6c:	4621      	mov	r1, r4
 8000c6e:	487f      	ldr	r0, [pc, #508]	; (8000e6c <main+0x678>)
 8000c70:	f008 fd94 	bl	800979c <osThreadNew>
 8000c74:	4b7e      	ldr	r3, [pc, #504]	; (8000e70 <main+0x67c>)
 8000c76:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8000c78:	f008 fd76 	bl	8009768 <osKernelStart>
  while (1)
 8000c7c:	e7fe      	b.n	8000c7c <main+0x488>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000c7e:	2214      	movs	r2, #20
 8000c80:	2100      	movs	r1, #0
 8000c82:	a82d      	add	r0, sp, #180	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000c84:	2500      	movs	r5, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000c86:	f01f f833 	bl	801fcf0 <memset>
  __HAL_RCC_GPIOI_CLK_ENABLE();
 8000c8a:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
  HAL_GPIO_WritePin(LCD_BL_GPIO_Port, LCD_BL_Pin, GPIO_PIN_RESET);
 8000c8e:	2200      	movs	r2, #0
 8000c90:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  __HAL_RCC_GPIOI_CLK_ENABLE();
 8000c94:	f443 7380 	orr.w	r3, r3, #256	; 0x100
  HAL_GPIO_WritePin(LCD_BL_GPIO_Port, LCD_BL_Pin, GPIO_PIN_RESET);
 8000c98:	4876      	ldr	r0, [pc, #472]	; (8000e74 <main+0x680>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000c9a:	2703      	movs	r7, #3
  GPIO_InitStruct.Pin = LCD_RESET_Pin;
 8000c9c:	2608      	movs	r6, #8
  __HAL_RCC_GPIOI_CLK_ENABLE();
 8000c9e:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
 8000ca2:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
 8000ca6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8000caa:	9304      	str	r3, [sp, #16]
 8000cac:	9b04      	ldr	r3, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8000cae:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
 8000cb2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000cb6:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
 8000cba:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
 8000cbe:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8000cc2:	9305      	str	r3, [sp, #20]
 8000cc4:	9b05      	ldr	r3, [sp, #20]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000cc6:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
 8000cca:	f043 0310 	orr.w	r3, r3, #16
 8000cce:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
 8000cd2:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
 8000cd6:	f003 0310 	and.w	r3, r3, #16
 8000cda:	9306      	str	r3, [sp, #24]
 8000cdc:	9b06      	ldr	r3, [sp, #24]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000cde:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
 8000ce2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000ce6:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
 8000cea:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
 8000cee:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8000cf2:	9307      	str	r3, [sp, #28]
 8000cf4:	9b07      	ldr	r3, [sp, #28]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000cf6:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
 8000cfa:	f043 0304 	orr.w	r3, r3, #4
 8000cfe:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
 8000d02:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
 8000d06:	f003 0304 	and.w	r3, r3, #4
 8000d0a:	9308      	str	r3, [sp, #32]
 8000d0c:	9b08      	ldr	r3, [sp, #32]
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 8000d0e:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
 8000d12:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8000d16:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
 8000d1a:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
 8000d1e:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8000d22:	9309      	str	r3, [sp, #36]	; 0x24
 8000d24:	9b09      	ldr	r3, [sp, #36]	; 0x24
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000d26:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
 8000d2a:	f043 0308 	orr.w	r3, r3, #8
 8000d2e:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
 8000d32:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
 8000d36:	f003 0308 	and.w	r3, r3, #8
 8000d3a:	930a      	str	r3, [sp, #40]	; 0x28
 8000d3c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000d3e:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
 8000d42:	f043 0301 	orr.w	r3, r3, #1
 8000d46:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
 8000d4a:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
 8000d4e:	f003 0301 	and.w	r3, r3, #1
 8000d52:	930b      	str	r3, [sp, #44]	; 0x2c
 8000d54:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8000d56:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
 8000d5a:	f043 0320 	orr.w	r3, r3, #32
 8000d5e:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
 8000d62:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
 8000d66:	f003 0320 	and.w	r3, r3, #32
 8000d6a:	930c      	str	r3, [sp, #48]	; 0x30
 8000d6c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000d6e:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
 8000d72:	f043 0302 	orr.w	r3, r3, #2
 8000d76:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
 8000d7a:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000d7e:	2401      	movs	r4, #1
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000d80:	f003 0302 	and.w	r3, r3, #2
 8000d84:	930d      	str	r3, [sp, #52]	; 0x34
 8000d86:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  HAL_GPIO_WritePin(LCD_BL_GPIO_Port, LCD_BL_Pin, GPIO_PIN_RESET);
 8000d88:	f005 fe10 	bl	80069ac <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_RESET_GPIO_Port, LCD_RESET_Pin, GPIO_PIN_RESET);
 8000d8c:	2200      	movs	r2, #0
 8000d8e:	2108      	movs	r1, #8
 8000d90:	4839      	ldr	r0, [pc, #228]	; (8000e78 <main+0x684>)
 8000d92:	f005 fe0b 	bl	80069ac <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000d96:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  HAL_GPIO_Init(LCD_BL_GPIO_Port, &GPIO_InitStruct);
 8000d9a:	a92d      	add	r1, sp, #180	; 0xb4
 8000d9c:	4835      	ldr	r0, [pc, #212]	; (8000e74 <main+0x680>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000d9e:	e9cd 342d 	strd	r3, r4, [sp, #180]	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000da2:	e9cd 572f 	strd	r5, r7, [sp, #188]	; 0xbc
  HAL_GPIO_Init(LCD_BL_GPIO_Port, &GPIO_InitStruct);
 8000da6:	f005 fc6d 	bl	8006684 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000daa:	f44f 7280 	mov.w	r2, #256	; 0x100
 8000dae:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000db0:	a92d      	add	r1, sp, #180	; 0xb4
 8000db2:	4832      	ldr	r0, [pc, #200]	; (8000e7c <main+0x688>)
  GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 8000db4:	9531      	str	r5, [sp, #196]	; 0xc4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000db6:	e9cd 232d 	strd	r2, r3, [sp, #180]	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000dba:	e9cd 552f 	strd	r5, r5, [sp, #188]	; 0xbc
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000dbe:	f005 fc61 	bl	8006684 <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_RESET_GPIO_Port, &GPIO_InitStruct);
 8000dc2:	a92d      	add	r1, sp, #180	; 0xb4
 8000dc4:	482c      	ldr	r0, [pc, #176]	; (8000e78 <main+0x684>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000dc6:	e9cd 642d 	strd	r6, r4, [sp, #180]	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000dca:	e9cd 472f 	strd	r4, r7, [sp, #188]	; 0xbc
  HAL_GPIO_Init(LCD_RESET_GPIO_Port, &GPIO_InitStruct);
 8000dce:	f005 fc59 	bl	8006684 <HAL_GPIO_Init>
  HAL_GPIO_Init(TEST_PIN_GPIO_Port, &GPIO_InitStruct);
 8000dd2:	a92d      	add	r1, sp, #180	; 0xb4
 8000dd4:	4827      	ldr	r0, [pc, #156]	; (8000e74 <main+0x680>)
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000dd6:	942f      	str	r4, [sp, #188]	; 0xbc
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000dd8:	e9cd 652d 	strd	r6, r5, [sp, #180]	; 0xb4
  HAL_GPIO_Init(TEST_PIN_GPIO_Port, &GPIO_InitStruct);
 8000ddc:	f005 fc52 	bl	8006684 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8000de0:	4827      	ldr	r0, [pc, #156]	; (8000e80 <main+0x68c>)
 8000de2:	4b28      	ldr	r3, [pc, #160]	; (8000e84 <main+0x690>)
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 8000de4:	8085      	strh	r5, [r0, #4]
  hcrc.Instance = CRC;
 8000de6:	6003      	str	r3, [r0, #0]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 8000de8:	6204      	str	r4, [r0, #32]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 8000dea:	e9c0 5505 	strd	r5, r5, [r0, #20]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8000dee:	f004 fed3 	bl	8005b98 <HAL_CRC_Init>
 8000df2:	4603      	mov	r3, r0
 8000df4:	2800      	cmp	r0, #0
 8000df6:	f47f ada0 	bne.w	800093a <main+0x146>
  FMC_Bank1_R->BTCR[0] &= ~FMC_BCRx_MBKEN;
 8000dfa:	4923      	ldr	r1, [pc, #140]	; (8000e88 <main+0x694>)
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8000dfc:	2540      	movs	r5, #64	; 0x40
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8000dfe:	4823      	ldr	r0, [pc, #140]	; (8000e8c <main+0x698>)
  FMC_Bank1_R->BTCR[0] &= ~FMC_BCRx_MBKEN;
 8000e00:	680a      	ldr	r2, [r1, #0]
 8000e02:	f022 0201 	bic.w	r2, r2, #1
 8000e06:	600a      	str	r2, [r1, #0]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000e08:	a92d      	add	r1, sp, #180	; 0xb4
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8000e0a:	4a21      	ldr	r2, [pc, #132]	; (8000e90 <main+0x69c>)
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
 8000e0c:	6283      	str	r3, [r0, #40]	; 0x28
  hsdram1.Init.SDBank = FMC_SDRAM_BANK1;
 8000e0e:	e9c0 2300 	strd	r2, r3, [r0]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8000e12:	2220      	movs	r2, #32
 8000e14:	e9c0 2504 	strd	r2, r5, [r0, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_1;
 8000e18:	2280      	movs	r2, #128	; 0x80
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_11;
 8000e1a:	e9c0 3302 	strd	r3, r3, [r0, #8]
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8000e1e:	e9c0 2306 	strd	r2, r3, [r0, #24]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8000e22:	e9c0 3308 	strd	r3, r3, [r0, #32]
  SdramTiming.LoadToActiveDelay = 16;
 8000e26:	2310      	movs	r3, #16
  SdramTiming.ExitSelfRefreshDelay = 16;
 8000e28:	e9cd 332d 	strd	r3, r3, [sp, #180]	; 0xb4
  SdramTiming.RowCycleDelay = 16;
 8000e2c:	e9cd 332f 	strd	r3, r3, [sp, #188]	; 0xbc
  SdramTiming.RPDelay = 16;
 8000e30:	e9cd 3331 	strd	r3, r3, [sp, #196]	; 0xc4
  SdramTiming.RCDDelay = 16;
 8000e34:	9333      	str	r3, [sp, #204]	; 0xcc
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000e36:	f008 f9a9 	bl	800918c <HAL_SDRAM_Init>
 8000e3a:	4680      	mov	r8, r0
 8000e3c:	2800      	cmp	r0, #0
 8000e3e:	f43f ad7e 	beq.w	800093e <main+0x14a>
 8000e42:	b672      	cpsid	i
  while (1)
 8000e44:	e7fe      	b.n	8000e44 <main+0x650>
 8000e46:	bf00      	nop
 8000e48:	240001f8 	.word	0x240001f8
 8000e4c:	24000214 	.word	0x24000214
 8000e50:	50001000 	.word	0x50001000
 8000e54:	24000138 	.word	0x24000138
 8000e58:	08004fd9 	.word	0x08004fd9
 8000e5c:	24000148 	.word	0x24000148
 8000e60:	080019e1 	.word	0x080019e1
 8000e64:	08001a19 	.word	0x08001a19
 8000e68:	08020e60 	.word	0x08020e60
 8000e6c:	080015af 	.word	0x080015af
 8000e70:	24000168 	.word	0x24000168
 8000e74:	58022400 	.word	0x58022400
 8000e78:	58021800 	.word	0x58021800
 8000e7c:	58020000 	.word	0x58020000
 8000e80:	2400016c 	.word	0x2400016c
 8000e84:	58024c00 	.word	0x58024c00
 8000e88:	52004000 	.word	0x52004000
 8000e8c:	24000308 	.word	0x24000308
 8000e90:	52004140 	.word	0x52004140
  HAL_Init();
 8000e94:	f004 fd78 	bl	8005988 <HAL_Init>
  SystemClock_Config();
 8000e98:	f7ff fc40 	bl	800071c <SystemClock_Config>
__HAL_RCC_HSEM_CLK_ENABLE();
 8000e9c:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
HAL_HSEM_FastTake(HSEM_ID_0);
 8000ea0:	4620      	mov	r0, r4
__HAL_RCC_HSEM_CLK_ENABLE();
 8000ea2:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8000ea6:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
 8000eaa:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
 8000eae:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8000eb2:	9303      	str	r3, [sp, #12]
 8000eb4:	9b03      	ldr	r3, [sp, #12]
HAL_HSEM_FastTake(HSEM_ID_0);
 8000eb6:	f005 fd7f 	bl	80069b8 <HAL_HSEM_FastTake>
HAL_HSEM_Release(HSEM_ID_0,0);
 8000eba:	4621      	mov	r1, r4
 8000ebc:	4620      	mov	r0, r4
 8000ebe:	f005 fd89 	bl	80069d4 <HAL_HSEM_Release>
while((__HAL_RCC_GET_FLAG(RCC_FLAG_D2CKRDY) == RESET) && (timeout-- > 0));
 8000ec2:	4c05      	ldr	r4, [pc, #20]	; (8000ed8 <main+0x6e4>)
 8000ec4:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000ec8:	6822      	ldr	r2, [r4, #0]
 8000eca:	0412      	lsls	r2, r2, #16
 8000ecc:	f53f aed7 	bmi.w	8000c7e <main+0x48a>
 8000ed0:	3b01      	subs	r3, #1
 8000ed2:	d1f9      	bne.n	8000ec8 <main+0x6d4>
 8000ed4:	b672      	cpsid	i
  while (1)
 8000ed6:	e7fe      	b.n	8000ed6 <main+0x6e2>
 8000ed8:	58024400 	.word	0x58024400

08000edc <HAL_TIM_PeriodElapsedCallback>:
  if (htim->Instance == TIM6) {
 8000edc:	6802      	ldr	r2, [r0, #0]
 8000ede:	4b03      	ldr	r3, [pc, #12]	; (8000eec <HAL_TIM_PeriodElapsedCallback+0x10>)
 8000ee0:	429a      	cmp	r2, r3
 8000ee2:	d101      	bne.n	8000ee8 <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 8000ee4:	f004 bd7e 	b.w	80059e4 <HAL_IncTick>
}
 8000ee8:	4770      	bx	lr
 8000eea:	bf00      	nop
 8000eec:	40001000 	.word	0x40001000

08000ef0 <Error_Handler>:
 8000ef0:	b672      	cpsid	i
  while (1)
 8000ef2:	e7fe      	b.n	8000ef2 <Error_Handler+0x2>

08000ef4 <HAL_MspInit>:
{
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000ef4:	4b0a      	ldr	r3, [pc, #40]	; (8000f20 <HAL_MspInit+0x2c>)
{
 8000ef6:	b082      	sub	sp, #8

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8000ef8:	210f      	movs	r1, #15
 8000efa:	f06f 0001 	mvn.w	r0, #1
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000efe:	f8d3 20f4 	ldr.w	r2, [r3, #244]	; 0xf4
 8000f02:	f042 0202 	orr.w	r2, r2, #2
 8000f06:	f8c3 20f4 	str.w	r2, [r3, #244]	; 0xf4
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8000f0a:	2200      	movs	r2, #0
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000f0c:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 8000f10:	f003 0302 	and.w	r3, r3, #2
 8000f14:	9301      	str	r3, [sp, #4]
 8000f16:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000f18:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8000f1a:	f004 bd9f 	b.w	8005a5c <HAL_NVIC_SetPriority>
 8000f1e:	bf00      	nop
 8000f20:	58024400 	.word	0x58024400

08000f24 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8000f24:	6802      	ldr	r2, [r0, #0]
{
 8000f26:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8000f28:	4b09      	ldr	r3, [pc, #36]	; (8000f50 <HAL_CRC_MspInit+0x2c>)
 8000f2a:	429a      	cmp	r2, r3
 8000f2c:	d10d      	bne.n	8000f4a <HAL_CRC_MspInit+0x26>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8000f2e:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8000f32:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8000f36:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 8000f3a:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8000f3e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000f42:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8000f46:	9301      	str	r3, [sp, #4]
 8000f48:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8000f4a:	b002      	add	sp, #8
 8000f4c:	4770      	bx	lr
 8000f4e:	bf00      	nop
 8000f50:	58024c00 	.word	0x58024c00

08000f54 <HAL_DMA2D_MspInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
 8000f54:	4b0f      	ldr	r3, [pc, #60]	; (8000f94 <HAL_DMA2D_MspInit+0x40>)
{
 8000f56:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8000f58:	6802      	ldr	r2, [r0, #0]
 8000f5a:	429a      	cmp	r2, r3
 8000f5c:	d117      	bne.n	8000f8e <HAL_DMA2D_MspInit+0x3a>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000f5e:	4b0e      	ldr	r3, [pc, #56]	; (8000f98 <HAL_DMA2D_MspInit+0x44>)
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 7, 0);
 8000f60:	2107      	movs	r1, #7
 8000f62:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000f64:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 8000f68:	f042 0210 	orr.w	r2, r2, #16
 8000f6c:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
    HAL_NVIC_SetPriority(DMA2D_IRQn, 7, 0);
 8000f70:	2200      	movs	r2, #0
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000f72:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 8000f76:	f003 0310 	and.w	r3, r3, #16
 8000f7a:	9301      	str	r3, [sp, #4]
 8000f7c:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 7, 0);
 8000f7e:	f004 fd6d 	bl	8005a5c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8000f82:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8000f84:	b003      	add	sp, #12
 8000f86:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8000f8a:	f004 bd99 	b.w	8005ac0 <HAL_NVIC_EnableIRQ>
}
 8000f8e:	b003      	add	sp, #12
 8000f90:	f85d fb04 	ldr.w	pc, [sp], #4
 8000f94:	52001000 	.word	0x52001000
 8000f98:	58024400 	.word	0x58024400

08000f9c <HAL_DSI_MspInit>:
* This function configures the hardware resources used in this example
* @param hdsi: DSI handle pointer
* @retval None
*/
void HAL_DSI_MspInit(DSI_HandleTypeDef* hdsi)
{
 8000f9c:	b510      	push	{r4, lr}
 8000f9e:	b0b8      	sub	sp, #224	; 0xe0
 8000fa0:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000fa2:	2214      	movs	r2, #20
 8000fa4:	2100      	movs	r1, #0
 8000fa6:	a803      	add	r0, sp, #12
 8000fa8:	f01e fea2 	bl	801fcf0 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8000fac:	22c0      	movs	r2, #192	; 0xc0
 8000fae:	2100      	movs	r1, #0
 8000fb0:	a808      	add	r0, sp, #32
 8000fb2:	f01e fe9d 	bl	801fcf0 <memset>
  if(hdsi->Instance==DSI)
 8000fb6:	6823      	ldr	r3, [r4, #0]
 8000fb8:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 8000fbc:	d136      	bne.n	800102c <HAL_DSI_MspInit+0x90>

  /* USER CODE END DSI_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_DSI;
 8000fbe:	f04f 6380 	mov.w	r3, #67108864	; 0x4000000
    PeriphClkInitStruct.DsiClockSelection = RCC_DSICLKSOURCE_PHY;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000fc2:	a808      	add	r0, sp, #32
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_DSI;
 8000fc4:	9308      	str	r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000fc6:	f007 fc0b 	bl	80087e0 <HAL_RCCEx_PeriphCLKConfig>
 8000fca:	b108      	cbz	r0, 8000fd0 <HAL_DSI_MspInit+0x34>
    {
      Error_Handler();
 8000fcc:	f7ff ff90 	bl	8000ef0 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_DSI_CLK_ENABLE();
 8000fd0:	4b17      	ldr	r3, [pc, #92]	; (8001030 <HAL_DSI_MspInit+0x94>)
    DSI_D0N     ------> DSIHOST_D0N
    PJ2     ------> DSIHOST_TE
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000fd2:	2400      	movs	r4, #0
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8000fd4:	a903      	add	r1, sp, #12
 8000fd6:	4817      	ldr	r0, [pc, #92]	; (8001034 <HAL_DSI_MspInit+0x98>)
    __HAL_RCC_DSI_CLK_ENABLE();
 8000fd8:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
 8000fdc:	f042 0210 	orr.w	r2, r2, #16
 8000fe0:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
 8000fe4:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
 8000fe8:	f002 0210 	and.w	r2, r2, #16
 8000fec:	9201      	str	r2, [sp, #4]
 8000fee:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8000ff0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8000ff4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8000ff8:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000ffc:	2204      	movs	r2, #4
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8000ffe:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001002:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8001006:	9302      	str	r3, [sp, #8]
 8001008:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800100a:	2302      	movs	r3, #2
 800100c:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
 8001010:	230d      	movs	r3, #13
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001012:	e9cd 4405 	strd	r4, r4, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
 8001016:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001018:	f005 fb34 	bl	8006684 <HAL_GPIO_Init>

    /* DSI interrupt Init */
    HAL_NVIC_SetPriority(DSI_IRQn, 7, 0);
 800101c:	207b      	movs	r0, #123	; 0x7b
 800101e:	4622      	mov	r2, r4
 8001020:	2107      	movs	r1, #7
 8001022:	f004 fd1b 	bl	8005a5c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DSI_IRQn);
 8001026:	207b      	movs	r0, #123	; 0x7b
 8001028:	f004 fd4a 	bl	8005ac0 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN DSI_MspInit 1 */

  /* USER CODE END DSI_MspInit 1 */
  }

}
 800102c:	b038      	add	sp, #224	; 0xe0
 800102e:	bd10      	pop	{r4, pc}
 8001030:	58024400 	.word	0x58024400
 8001034:	58022400 	.word	0x58022400

08001038 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001038:	b510      	push	{r4, lr}
 800103a:	b0b2      	sub	sp, #200	; 0xc8
 800103c:	4604      	mov	r4, r0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 800103e:	22c0      	movs	r2, #192	; 0xc0
 8001040:	2100      	movs	r1, #0
 8001042:	a802      	add	r0, sp, #8
 8001044:	f01e fe54 	bl	801fcf0 <memset>
  if(hltdc->Instance==LTDC)
 8001048:	6822      	ldr	r2, [r4, #0]
 800104a:	4b17      	ldr	r3, [pc, #92]	; (80010a8 <HAL_LTDC_MspInit+0x70>)
 800104c:	429a      	cmp	r2, r3
 800104e:	d129      	bne.n	80010a4 <HAL_LTDC_MspInit+0x6c>

  /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001050:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
    PeriphClkInitStruct.PLL3.PLL3M = 5;
    PeriphClkInitStruct.PLL3.PLL3N = 161;
 8001054:	2105      	movs	r1, #5
    PeriphClkInitStruct.PLL3.PLL3P = 2;
    PeriphClkInitStruct.PLL3.PLL3Q = 2;
    PeriphClkInitStruct.PLL3.PLL3R = 21;
    PeriphClkInitStruct.PLL3.PLL3RGE = RCC_PLL3VCIRANGE_2;
 8001056:	2015      	movs	r0, #21
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001058:	9302      	str	r3, [sp, #8]
    PeriphClkInitStruct.PLL3.PLL3N = 161;
 800105a:	23a1      	movs	r3, #161	; 0xa1
 800105c:	e9cd 130b 	strd	r1, r3, [sp, #44]	; 0x2c
    PeriphClkInitStruct.PLL3.PLL3P = 2;
 8001060:	2302      	movs	r3, #2
    PeriphClkInitStruct.PLL3.PLL3Q = 2;
 8001062:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
    PeriphClkInitStruct.PLL3.PLL3RGE = RCC_PLL3VCIRANGE_2;
 8001066:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800106a:	e9cd 030f 	strd	r0, r3, [sp, #60]	; 0x3c
    PeriphClkInitStruct.PLL3.PLL3VCOSEL = RCC_PLL3VCOWIDE;
    PeriphClkInitStruct.PLL3.PLL3FRACN = 0;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800106e:	a802      	add	r0, sp, #8
 8001070:	f007 fbb6 	bl	80087e0 <HAL_RCCEx_PeriphCLKConfig>
 8001074:	b108      	cbz	r0, 800107a <HAL_LTDC_MspInit+0x42>
    {
      Error_Handler();
 8001076:	f7ff ff3b 	bl	8000ef0 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 800107a:	4b0c      	ldr	r3, [pc, #48]	; (80010ac <HAL_LTDC_MspInit+0x74>)
    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 7, 0);
 800107c:	2058      	movs	r0, #88	; 0x58
 800107e:	2107      	movs	r1, #7
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001080:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
 8001084:	f042 0208 	orr.w	r2, r2, #8
 8001088:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
    HAL_NVIC_SetPriority(LTDC_IRQn, 7, 0);
 800108c:	2200      	movs	r2, #0
    __HAL_RCC_LTDC_CLK_ENABLE();
 800108e:	f8d3 30e4 	ldr.w	r3, [r3, #228]	; 0xe4
 8001092:	f003 0308 	and.w	r3, r3, #8
 8001096:	9301      	str	r3, [sp, #4]
 8001098:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(LTDC_IRQn, 7, 0);
 800109a:	f004 fcdf 	bl	8005a5c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 800109e:	2058      	movs	r0, #88	; 0x58
 80010a0:	f004 fd0e 	bl	8005ac0 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 80010a4:	b032      	add	sp, #200	; 0xc8
 80010a6:	bd10      	pop	{r4, pc}
 80010a8:	50001000 	.word	0x50001000
 80010ac:	58024400 	.word	0x58024400

080010b0 <HAL_QSPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspInit(QSPI_HandleTypeDef* hqspi)
{
 80010b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80010b2:	b0bd      	sub	sp, #244	; 0xf4
 80010b4:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80010b6:	2214      	movs	r2, #20
 80010b8:	2100      	movs	r1, #0
 80010ba:	a807      	add	r0, sp, #28
 80010bc:	f01e fe18 	bl	801fcf0 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 80010c0:	22c0      	movs	r2, #192	; 0xc0
 80010c2:	2100      	movs	r1, #0
 80010c4:	a80c      	add	r0, sp, #48	; 0x30
 80010c6:	f01e fe13 	bl	801fcf0 <memset>
  if(hqspi->Instance==QUADSPI)
 80010ca:	6822      	ldr	r2, [r4, #0]
 80010cc:	4b52      	ldr	r3, [pc, #328]	; (8001218 <HAL_QSPI_MspInit+0x168>)
 80010ce:	429a      	cmp	r2, r3
 80010d0:	f040 809f 	bne.w	8001212 <HAL_QSPI_MspInit+0x162>

  /* USER CODE END QUADSPI_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_QSPI;
 80010d4:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
    PeriphClkInitStruct.QspiClockSelection = RCC_QSPICLKSOURCE_D1HCLK;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80010d8:	a80c      	add	r0, sp, #48	; 0x30
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_QSPI;
 80010da:	930c      	str	r3, [sp, #48]	; 0x30
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80010dc:	f007 fb80 	bl	80087e0 <HAL_RCCEx_PeriphCLKConfig>
 80010e0:	b108      	cbz	r0, 80010e6 <HAL_QSPI_MspInit+0x36>
    {
      Error_Handler();
 80010e2:	f7ff ff05 	bl	8000ef0 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_QSPI_CLK_ENABLE();
 80010e6:	4b4d      	ldr	r3, [pc, #308]	; (800121c <HAL_QSPI_MspInit+0x16c>)
    PH3     ------> QUADSPI_BK2_IO1
    PB2     ------> QUADSPI_CLK
    PD11     ------> QUADSPI_BK1_IO0
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_14;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80010e8:	2502      	movs	r5, #2
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80010ea:	2400      	movs	r4, #0
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 80010ec:	2609      	movs	r6, #9
    __HAL_RCC_QSPI_CLK_ENABLE();
 80010ee:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80010f2:	a907      	add	r1, sp, #28
 80010f4:	484a      	ldr	r0, [pc, #296]	; (8001220 <HAL_QSPI_MspInit+0x170>)

    GPIO_InitStruct.Pin = GPIO_PIN_6;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF10_QUADSPI;
 80010f6:	270a      	movs	r7, #10
    __HAL_RCC_QSPI_CLK_ENABLE();
 80010f8:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80010fc:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
 8001100:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 8001104:	f402 4280 	and.w	r2, r2, #16384	; 0x4000
 8001108:	9201      	str	r2, [sp, #4]
 800110a:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 800110c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001110:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001114:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8001118:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 800111c:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001120:	9202      	str	r2, [sp, #8]
 8001122:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001124:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001128:	f042 0220 	orr.w	r2, r2, #32
 800112c:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8001130:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001134:	f002 0220 	and.w	r2, r2, #32
 8001138:	9203      	str	r2, [sp, #12]
 800113a:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOH_CLK_ENABLE();
 800113c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001140:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8001144:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8001148:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 800114c:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8001150:	9204      	str	r2, [sp, #16]
 8001152:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001154:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001158:	f042 0202 	orr.w	r2, r2, #2
 800115c:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8001160:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001164:	f002 0202 	and.w	r2, r2, #2
 8001168:	9205      	str	r2, [sp, #20]
 800116a:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 800116c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8001170:	f042 0208 	orr.w	r2, r2, #8
 8001174:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8001178:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800117c:	f003 0308 	and.w	r3, r3, #8
 8001180:	9306      	str	r3, [sp, #24]
 8001182:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001184:	f44f 4384 	mov.w	r3, #16896	; 0x4200
 8001188:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800118c:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 8001190:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001192:	f005 fa77 	bl	8006684 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_6;
 8001196:	2340      	movs	r3, #64	; 0x40
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001198:	a907      	add	r1, sp, #28
 800119a:	4821      	ldr	r0, [pc, #132]	; (8001220 <HAL_QSPI_MspInit+0x170>)
    GPIO_InitStruct.Alternate = GPIO_AF10_QUADSPI;
 800119c:	970b      	str	r7, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800119e:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80011a2:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80011a6:	f005 fa6d 	bl	8006684 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80011aa:	23c0      	movs	r3, #192	; 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80011ac:	a907      	add	r1, sp, #28
 80011ae:	481d      	ldr	r0, [pc, #116]	; (8001224 <HAL_QSPI_MspInit+0x174>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 80011b0:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80011b2:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80011b6:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80011ba:	f005 fa63 	bl	8006684 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_9;
 80011be:	f44f 7300 	mov.w	r3, #512	; 0x200
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF10_QUADSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80011c2:	a907      	add	r1, sp, #28
 80011c4:	4817      	ldr	r0, [pc, #92]	; (8001224 <HAL_QSPI_MspInit+0x174>)
    GPIO_InitStruct.Alternate = GPIO_AF10_QUADSPI;
 80011c6:	970b      	str	r7, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80011c8:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80011cc:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80011d0:	f005 fa58 	bl	8006684 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 80011d4:	230c      	movs	r3, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 80011d6:	a907      	add	r1, sp, #28
 80011d8:	4813      	ldr	r0, [pc, #76]	; (8001228 <HAL_QSPI_MspInit+0x178>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 80011da:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80011dc:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80011e0:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 80011e4:	f005 fa4e 	bl	8006684 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_2;
 80011e8:	2304      	movs	r3, #4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80011ea:	a907      	add	r1, sp, #28
 80011ec:	480f      	ldr	r0, [pc, #60]	; (800122c <HAL_QSPI_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 80011ee:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80011f0:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80011f4:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80011f8:	f005 fa44 	bl	8006684 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_11;
 80011fc:	f44f 6300 	mov.w	r3, #2048	; 0x800
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001200:	a907      	add	r1, sp, #28
 8001202:	480b      	ldr	r0, [pc, #44]	; (8001230 <HAL_QSPI_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 8001204:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001206:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800120a:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800120e:	f005 fa39 	bl	8006684 <HAL_GPIO_Init>
  /* USER CODE BEGIN QUADSPI_MspInit 1 */

  /* USER CODE END QUADSPI_MspInit 1 */
  }

}
 8001212:	b03d      	add	sp, #244	; 0xf4
 8001214:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001216:	bf00      	nop
 8001218:	52005000 	.word	0x52005000
 800121c:	58024400 	.word	0x58024400
 8001220:	58021800 	.word	0x58021800
 8001224:	58021400 	.word	0x58021400
 8001228:	58021c00 	.word	0x58021c00
 800122c:	58020400 	.word	0x58020400
 8001230:	58020c00 	.word	0x58020c00

08001234 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001234:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001236:	b0b7      	sub	sp, #220	; 0xdc
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001238:	2100      	movs	r1, #0
 800123a:	2214      	movs	r2, #20
 800123c:	a801      	add	r0, sp, #4
 800123e:	f01e fd57 	bl	801fcf0 <memset>
  if (FMC_Initialized) {
 8001242:	4b39      	ldr	r3, [pc, #228]	; (8001328 <HAL_SDRAM_MspInit+0xf4>)
 8001244:	6819      	ldr	r1, [r3, #0]
 8001246:	2900      	cmp	r1, #0
 8001248:	d16b      	bne.n	8001322 <HAL_SDRAM_MspInit+0xee>
  FMC_Initialized = 1;
 800124a:	2201      	movs	r2, #1
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 800124c:	a807      	add	r0, sp, #28
  FMC_Initialized = 1;
 800124e:	601a      	str	r2, [r3, #0]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001250:	22bc      	movs	r2, #188	; 0xbc
 8001252:	f01e fd4d 	bl	801fcf0 <memset>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
 8001256:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800125a:	a806      	add	r0, sp, #24
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
 800125c:	9306      	str	r3, [sp, #24]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800125e:	f007 fabf 	bl	80087e0 <HAL_RCCEx_PeriphCLKConfig>
 8001262:	b108      	cbz	r0, 8001268 <HAL_SDRAM_MspInit+0x34>
      Error_Handler();
 8001264:	f7ff fe44 	bl	8000ef0 <Error_Handler>
  __HAL_RCC_FMC_CLK_ENABLE();
 8001268:	4b30      	ldr	r3, [pc, #192]	; (800132c <HAL_SDRAM_MspInit+0xf8>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800126a:	2702      	movs	r7, #2
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800126c:	2600      	movs	r6, #0
 800126e:	2503      	movs	r5, #3
  __HAL_RCC_FMC_CLK_ENABLE();
 8001270:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001274:	240c      	movs	r4, #12
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001276:	a901      	add	r1, sp, #4
 8001278:	482d      	ldr	r0, [pc, #180]	; (8001330 <HAL_SDRAM_MspInit+0xfc>)
  __HAL_RCC_FMC_CLK_ENABLE();
 800127a:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800127e:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
 8001282:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001286:	9405      	str	r4, [sp, #20]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001288:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 800128c:	9300      	str	r3, [sp, #0]
 800128e:	9b00      	ldr	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001290:	f240 63ff 	movw	r3, #1791	; 0x6ff
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001294:	e9cd 6503 	strd	r6, r5, [sp, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001298:	e9cd 3701 	strd	r3, r7, [sp, #4]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 800129c:	f005 f9f2 	bl	8006684 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
 80012a0:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80012a4:	a901      	add	r1, sp, #4
 80012a6:	4823      	ldr	r0, [pc, #140]	; (8001334 <HAL_SDRAM_MspInit+0x100>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80012a8:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80012aa:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80012ae:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80012b2:	f005 f9e7 	bl	8006684 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_13|GPIO_PIN_10
 80012b6:	f44f 437f 	mov.w	r3, #65280	; 0xff00
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 80012ba:	a901      	add	r1, sp, #4
 80012bc:	481e      	ldr	r0, [pc, #120]	; (8001338 <HAL_SDRAM_MspInit+0x104>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80012be:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80012c0:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80012c4:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 80012c8:	f005 f9dc 	bl	8006684 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
 80012cc:	f248 1331 	movw	r3, #33073	; 0x8131
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80012d0:	a901      	add	r1, sp, #4
 80012d2:	481a      	ldr	r0, [pc, #104]	; (800133c <HAL_SDRAM_MspInit+0x108>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80012d4:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80012d6:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80012da:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80012de:	f005 f9d1 	bl	8006684 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
 80012e2:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80012e6:	a901      	add	r1, sp, #4
 80012e8:	4815      	ldr	r0, [pc, #84]	; (8001340 <HAL_SDRAM_MspInit+0x10c>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80012ea:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80012ec:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80012f0:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80012f4:	f005 f9c6 	bl	8006684 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
 80012f8:	f64f 033f 	movw	r3, #63551	; 0xf83f
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80012fc:	a901      	add	r1, sp, #4
 80012fe:	4811      	ldr	r0, [pc, #68]	; (8001344 <HAL_SDRAM_MspInit+0x110>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001300:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001302:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001306:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800130a:	f005 f9bb 	bl	8006684 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_2|GPIO_PIN_3;
 800130e:	230d      	movs	r3, #13
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001310:	a901      	add	r1, sp, #4
 8001312:	480d      	ldr	r0, [pc, #52]	; (8001348 <HAL_SDRAM_MspInit+0x114>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001314:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001316:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800131a:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800131e:	f005 f9b1 	bl	8006684 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001322:	b037      	add	sp, #220	; 0xdc
 8001324:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001326:	bf00      	nop
 8001328:	24000340 	.word	0x24000340
 800132c:	58024400 	.word	0x58024400
 8001330:	58022000 	.word	0x58022000
 8001334:	58021000 	.word	0x58021000
 8001338:	58021c00 	.word	0x58021c00
 800133c:	58021800 	.word	0x58021800
 8001340:	58020c00 	.word	0x58020c00
 8001344:	58021400 	.word	0x58021400
 8001348:	58020800 	.word	0x58020800

0800134c <HAL_SDRAM_MspDeInit>:
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
 800134c:	b508      	push	{r3, lr}
  if (FMC_DeInitialized) {
 800134e:	4b18      	ldr	r3, [pc, #96]	; (80013b0 <HAL_SDRAM_MspDeInit+0x64>)
 8001350:	681a      	ldr	r2, [r3, #0]
 8001352:	bb62      	cbnz	r2, 80013ae <HAL_SDRAM_MspDeInit+0x62>
  FMC_DeInitialized = 1;
 8001354:	2201      	movs	r2, #1
  HAL_GPIO_DeInit(GPIOI, GPIO_PIN_6|GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_1
 8001356:	f240 61ff 	movw	r1, #1791	; 0x6ff
 800135a:	4816      	ldr	r0, [pc, #88]	; (80013b4 <HAL_SDRAM_MspDeInit+0x68>)
  FMC_DeInitialized = 1;
 800135c:	601a      	str	r2, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
 800135e:	4a16      	ldr	r2, [pc, #88]	; (80013b8 <HAL_SDRAM_MspDeInit+0x6c>)
 8001360:	f8d2 30d4 	ldr.w	r3, [r2, #212]	; 0xd4
 8001364:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8001368:	f8c2 30d4 	str.w	r3, [r2, #212]	; 0xd4
  HAL_GPIO_DeInit(GPIOI, GPIO_PIN_6|GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_1
 800136c:	f005 fa76 	bl	800685c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
 8001370:	f64f 7183 	movw	r1, #65411	; 0xff83
 8001374:	4811      	ldr	r0, [pc, #68]	; (80013bc <HAL_SDRAM_MspDeInit+0x70>)
 8001376:	f005 fa71 	bl	800685c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_13|GPIO_PIN_10
 800137a:	f44f 417f 	mov.w	r1, #65280	; 0xff00
 800137e:	4810      	ldr	r0, [pc, #64]	; (80013c0 <HAL_SDRAM_MspDeInit+0x74>)
 8001380:	f005 fa6c 	bl	800685c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
 8001384:	f248 1131 	movw	r1, #33073	; 0x8131
 8001388:	480e      	ldr	r0, [pc, #56]	; (80013c4 <HAL_SDRAM_MspDeInit+0x78>)
 800138a:	f005 fa67 	bl	800685c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
 800138e:	f24c 7103 	movw	r1, #50947	; 0xc703
 8001392:	480d      	ldr	r0, [pc, #52]	; (80013c8 <HAL_SDRAM_MspDeInit+0x7c>)
 8001394:	f005 fa62 	bl	800685c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
 8001398:	f64f 013f 	movw	r1, #63551	; 0xf83f
 800139c:	480b      	ldr	r0, [pc, #44]	; (80013cc <HAL_SDRAM_MspDeInit+0x80>)
 800139e:	f005 fa5d 	bl	800685c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOC, GPIO_PIN_0|GPIO_PIN_2|GPIO_PIN_3);
 80013a2:	210d      	movs	r1, #13
 80013a4:	480a      	ldr	r0, [pc, #40]	; (80013d0 <HAL_SDRAM_MspDeInit+0x84>)
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
 80013a6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_DeInit(GPIOC, GPIO_PIN_0|GPIO_PIN_2|GPIO_PIN_3);
 80013aa:	f005 ba57 	b.w	800685c <HAL_GPIO_DeInit>
}
 80013ae:	bd08      	pop	{r3, pc}
 80013b0:	2400033c 	.word	0x2400033c
 80013b4:	58022000 	.word	0x58022000
 80013b8:	58024400 	.word	0x58024400
 80013bc:	58021000 	.word	0x58021000
 80013c0:	58021c00 	.word	0x58021c00
 80013c4:	58021800 	.word	0x58021800
 80013c8:	58020c00 	.word	0x58020c00
 80013cc:	58021400 	.word	0x58021400
 80013d0:	58020800 	.word	0x58020800

080013d4 <HAL_InitTick>:
  uint32_t              uwTimclock, uwAPB1Prescaler;

  uint32_t              uwPrescalerValue;
  uint32_t              pFLatency;
/*Configure the TIM6 IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80013d4:	280f      	cmp	r0, #15
{
 80013d6:	b510      	push	{r4, lr}
 80013d8:	4604      	mov	r4, r0
 80013da:	b08a      	sub	sp, #40	; 0x28
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80013dc:	d902      	bls.n	80013e4 <HAL_InitTick+0x10>
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
    uwTickPrio = TickPriority;
    }
  else
  {
    return HAL_ERROR;
 80013de:	2001      	movs	r0, #1
    return HAL_TIM_Base_Start_IT(&htim6);
  }

  /* Return function status */
  return HAL_ERROR;
}
 80013e0:	b00a      	add	sp, #40	; 0x28
 80013e2:	bd10      	pop	{r4, pc}
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0U);
 80013e4:	4601      	mov	r1, r0
 80013e6:	2200      	movs	r2, #0
 80013e8:	2036      	movs	r0, #54	; 0x36
 80013ea:	f004 fb37 	bl	8005a5c <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 80013ee:	2036      	movs	r0, #54	; 0x36
 80013f0:	f004 fb66 	bl	8005ac0 <HAL_NVIC_EnableIRQ>
    uwTickPrio = TickPriority;
 80013f4:	4b18      	ldr	r3, [pc, #96]	; (8001458 <HAL_InitTick+0x84>)
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80013f6:	4669      	mov	r1, sp
 80013f8:	a802      	add	r0, sp, #8
    uwTickPrio = TickPriority;
 80013fa:	601c      	str	r4, [r3, #0]
  __HAL_RCC_TIM6_CLK_ENABLE();
 80013fc:	4b17      	ldr	r3, [pc, #92]	; (800145c <HAL_InitTick+0x88>)
 80013fe:	f8d3 20e8 	ldr.w	r2, [r3, #232]	; 0xe8
 8001402:	f042 0210 	orr.w	r2, r2, #16
 8001406:	f8c3 20e8 	str.w	r2, [r3, #232]	; 0xe8
 800140a:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 800140e:	f003 0310 	and.w	r3, r3, #16
 8001412:	9301      	str	r3, [sp, #4]
 8001414:	9b01      	ldr	r3, [sp, #4]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001416:	f007 f8c9 	bl	80085ac <HAL_RCC_GetClockConfig>
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 800141a:	9b07      	ldr	r3, [sp, #28]
 800141c:	b9c3      	cbnz	r3, 8001450 <HAL_InitTick+0x7c>
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 800141e:	f007 f8a1 	bl	8008564 <HAL_RCC_GetPCLK1Freq>
  htim6.Instance = TIM6;
 8001422:	4c0f      	ldr	r4, [pc, #60]	; (8001460 <HAL_InitTick+0x8c>)
 8001424:	4b0f      	ldr	r3, [pc, #60]	; (8001464 <HAL_InitTick+0x90>)
 8001426:	6023      	str	r3, [r4, #0]
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001428:	f240 33e7 	movw	r3, #999	; 0x3e7
 800142c:	60e3      	str	r3, [r4, #12]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 800142e:	4b0e      	ldr	r3, [pc, #56]	; (8001468 <HAL_InitTick+0x94>)
 8001430:	fbb0 f0f3 	udiv	r0, r0, r3
 8001434:	3801      	subs	r0, #1
  htim6.Init.ClockDivision = 0;
 8001436:	2300      	movs	r3, #0
  htim6.Init.Prescaler = uwPrescalerValue;
 8001438:	6060      	str	r0, [r4, #4]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 800143a:	4620      	mov	r0, r4
  htim6.Init.ClockDivision = 0;
 800143c:	6123      	str	r3, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 800143e:	60a3      	str	r3, [r4, #8]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001440:	f008 f8a4 	bl	800958c <HAL_TIM_Base_Init>
 8001444:	2800      	cmp	r0, #0
 8001446:	d1ca      	bne.n	80013de <HAL_InitTick+0xa>
    return HAL_TIM_Base_Start_IT(&htim6);
 8001448:	4620      	mov	r0, r4
 800144a:	f007 ff47 	bl	80092dc <HAL_TIM_Base_Start_IT>
 800144e:	e7c7      	b.n	80013e0 <HAL_InitTick+0xc>
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 8001450:	f007 f888 	bl	8008564 <HAL_RCC_GetPCLK1Freq>
 8001454:	0040      	lsls	r0, r0, #1
 8001456:	e7e4      	b.n	8001422 <HAL_InitTick+0x4e>
 8001458:	24000054 	.word	0x24000054
 800145c:	58024400 	.word	0x58024400
 8001460:	24000344 	.word	0x24000344
 8001464:	40001000 	.word	0x40001000
 8001468:	000f4240 	.word	0x000f4240

0800146c <NMI_Handler>:
{
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 800146c:	e7fe      	b.n	800146c <NMI_Handler>

0800146e <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800146e:	e7fe      	b.n	800146e <HardFault_Handler>

08001470 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001470:	e7fe      	b.n	8001470 <MemManage_Handler>

08001472 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001472:	e7fe      	b.n	8001472 <BusFault_Handler>

08001474 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001474:	e7fe      	b.n	8001474 <UsageFault_Handler>

08001476 <DebugMon_Handler>:

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001476:	4770      	bx	lr

08001478 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8001478:	4801      	ldr	r0, [pc, #4]	; (8001480 <TIM6_DAC_IRQHandler+0x8>)
 800147a:	f007 bf71 	b.w	8009360 <HAL_TIM_IRQHandler>
 800147e:	bf00      	nop
 8001480:	24000344 	.word	0x24000344

08001484 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001484:	4801      	ldr	r0, [pc, #4]	; (800148c <LTDC_IRQHandler+0x8>)
 8001486:	f005 bf62 	b.w	800734e <HAL_LTDC_IRQHandler>
 800148a:	bf00      	nop
 800148c:	24000214 	.word	0x24000214

08001490 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8001490:	4801      	ldr	r0, [pc, #4]	; (8001498 <DMA2D_IRQHandler+0x8>)
 8001492:	f004 bc1e 	b.w	8005cd2 <HAL_DMA2D_IRQHandler>
 8001496:	bf00      	nop
 8001498:	24000190 	.word	0x24000190

0800149c <DSI_IRQHandler>:
void DSI_IRQHandler(void)
{
  /* USER CODE BEGIN DSI_IRQn 0 */

  /* USER CODE END DSI_IRQn 0 */
  HAL_DSI_IRQHandler(&hdsi);
 800149c:	4801      	ldr	r0, [pc, #4]	; (80014a4 <DSI_IRQHandler+0x8>)
 800149e:	f004 bdda 	b.w	8006056 <HAL_DSI_IRQHandler>
 80014a2:	bf00      	nop
 80014a4:	240001f8 	.word	0x240001f8

080014a8 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 80014a8:	2001      	movs	r0, #1
 80014aa:	4770      	bx	lr

080014ac <_kill>:

int _kill(int pid, int sig)
{
 80014ac:	b508      	push	{r3, lr}
	errno = EINVAL;
 80014ae:	f01e fbc5 	bl	801fc3c <__errno>
 80014b2:	2316      	movs	r3, #22
 80014b4:	6003      	str	r3, [r0, #0]
	return -1;
}
 80014b6:	f04f 30ff 	mov.w	r0, #4294967295
 80014ba:	bd08      	pop	{r3, pc}

080014bc <_exit>:

void _exit (int status)
{
 80014bc:	b508      	push	{r3, lr}
	errno = EINVAL;
 80014be:	f01e fbbd 	bl	801fc3c <__errno>
 80014c2:	2316      	movs	r3, #22
 80014c4:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 80014c6:	e7fe      	b.n	80014c6 <_exit+0xa>

080014c8 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80014c8:	b570      	push	{r4, r5, r6, lr}
 80014ca:	460d      	mov	r5, r1
 80014cc:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80014ce:	460e      	mov	r6, r1
 80014d0:	1b73      	subs	r3, r6, r5
 80014d2:	429c      	cmp	r4, r3
 80014d4:	dc01      	bgt.n	80014da <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 80014d6:	4620      	mov	r0, r4
 80014d8:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 80014da:	f3af 8000 	nop.w
 80014de:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80014e2:	e7f5      	b.n	80014d0 <_read+0x8>

080014e4 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80014e4:	b570      	push	{r4, r5, r6, lr}
 80014e6:	460d      	mov	r5, r1
 80014e8:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80014ea:	460e      	mov	r6, r1
 80014ec:	1b73      	subs	r3, r6, r5
 80014ee:	429c      	cmp	r4, r3
 80014f0:	dc01      	bgt.n	80014f6 <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 80014f2:	4620      	mov	r0, r4
 80014f4:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 80014f6:	f816 0b01 	ldrb.w	r0, [r6], #1
 80014fa:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80014fe:	e7f5      	b.n	80014ec <_write+0x8>

08001500 <_close>:

int _close(int file)
{
	return -1;
}
 8001500:	f04f 30ff 	mov.w	r0, #4294967295
 8001504:	4770      	bx	lr

08001506 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8001506:	f44f 5300 	mov.w	r3, #8192	; 0x2000
	return 0;
}
 800150a:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
 800150c:	604b      	str	r3, [r1, #4]
}
 800150e:	4770      	bx	lr

08001510 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8001510:	2001      	movs	r0, #1
 8001512:	4770      	bx	lr

08001514 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8001514:	2000      	movs	r0, #0
 8001516:	4770      	bx	lr

08001518 <_sbrk>:
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
  const uint8_t *max_heap = (uint8_t *)stack_limit;
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001518:	4a0b      	ldr	r2, [pc, #44]	; (8001548 <_sbrk+0x30>)
{
 800151a:	4603      	mov	r3, r0
  if (NULL == __sbrk_heap_end)
 800151c:	6811      	ldr	r1, [r2, #0]
{
 800151e:	b510      	push	{r4, lr}
  if (NULL == __sbrk_heap_end)
 8001520:	b909      	cbnz	r1, 8001526 <_sbrk+0xe>
  {
    __sbrk_heap_end = &_end;
 8001522:	490a      	ldr	r1, [pc, #40]	; (800154c <_sbrk+0x34>)
 8001524:	6011      	str	r1, [r2, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8001526:	6810      	ldr	r0, [r2, #0]
 8001528:	4909      	ldr	r1, [pc, #36]	; (8001550 <_sbrk+0x38>)
 800152a:	4c0a      	ldr	r4, [pc, #40]	; (8001554 <_sbrk+0x3c>)
 800152c:	4403      	add	r3, r0
 800152e:	1b09      	subs	r1, r1, r4
 8001530:	428b      	cmp	r3, r1
 8001532:	d906      	bls.n	8001542 <_sbrk+0x2a>
  {
    errno = ENOMEM;
 8001534:	f01e fb82 	bl	801fc3c <__errno>
 8001538:	230c      	movs	r3, #12
 800153a:	6003      	str	r3, [r0, #0]
    return (void *)-1;
 800153c:	f04f 30ff 	mov.w	r0, #4294967295

  prev_heap_end = __sbrk_heap_end;
  __sbrk_heap_end += incr;

  return (void *)prev_heap_end;
}
 8001540:	bd10      	pop	{r4, pc}
  __sbrk_heap_end += incr;
 8001542:	6013      	str	r3, [r2, #0]
  return (void *)prev_heap_end;
 8001544:	e7fc      	b.n	8001540 <_sbrk+0x28>
 8001546:	bf00      	nop
 8001548:	24000390 	.word	0x24000390
 800154c:	2400e320 	.word	0x2400e320
 8001550:	24080000 	.word	0x24080000
 8001554:	00001000 	.word	0x00001000

08001558 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:
  ldr   sp, =_estack      /* set stack pointer */
 8001558:	f8df d034 	ldr.w	sp, [pc, #52]	; 8001590 <LoopFillZerobss+0xe>

/* Call the clock system initialization function.*/
  bl  SystemInit
 800155c:	f004 f9a4 	bl	80058a8 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8001560:	480c      	ldr	r0, [pc, #48]	; (8001594 <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 8001562:	490d      	ldr	r1, [pc, #52]	; (8001598 <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 8001564:	4a0d      	ldr	r2, [pc, #52]	; (800159c <LoopFillZerobss+0x1a>)
  movs r3, #0
 8001566:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001568:	e002      	b.n	8001570 <LoopCopyDataInit>

0800156a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800156a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800156c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800156e:	3304      	adds	r3, #4

08001570 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001570:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8001572:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001574:	d3f9      	bcc.n	800156a <CopyDataInit>
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8001576:	4a0a      	ldr	r2, [pc, #40]	; (80015a0 <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 8001578:	4c0a      	ldr	r4, [pc, #40]	; (80015a4 <LoopFillZerobss+0x22>)
  movs r3, #0
 800157a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800157c:	e001      	b.n	8001582 <LoopFillZerobss>

0800157e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800157e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001580:	3204      	adds	r2, #4

08001582 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8001582:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001584:	d3fb      	bcc.n	800157e <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 8001586:	f01e fb71 	bl	801fc6c <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800158a:	f7ff f933 	bl	80007f4 <main>
  bx  lr
 800158e:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 8001590:	24080000 	.word	0x24080000
  ldr r0, =_sdata
 8001594:	24000000 	.word	0x24000000
  ldr r1, =_edata
 8001598:	2400011c 	.word	0x2400011c
  ldr r2, =_sidata
 800159c:	08033610 	.word	0x08033610
  ldr r2, =_sbss
 80015a0:	2400011c 	.word	0x2400011c
  ldr r4, =_ebss
 80015a4:	2400e320 	.word	0x2400e320

080015a8 <ADC3_IRQHandler>:
 * @retval None
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80015a8:	e7fe      	b.n	80015a8 <ADC3_IRQHandler>

080015aa <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_init();
 80015aa:	f000 be17 	b.w	80021dc <touchgfx_init>

080015ae <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80015ae:	f000 be89 	b.w	80022c4 <touchgfx_taskEntry>

080015b2 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
 80015b2:	6840      	ldr	r0, [r0, #4]
    }
 80015b4:	4770      	bx	lr

080015b6 <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
 80015b6:	6041      	str	r1, [r0, #4]
    }
 80015b8:	4770      	bx	lr

080015ba <_ZN8touchgfx22STM32H7Instrumentation12getElapsedUSEjjj>:
    HAL_TIM_Base_Start(&tim);
}

unsigned int STM32H7Instrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
 80015ba:	1a51      	subs	r1, r2, r1
 80015bc:	eb01 0153 	add.w	r1, r1, r3, lsr #1
}
 80015c0:	fbb1 f0f3 	udiv	r0, r1, r3
 80015c4:	4770      	bx	lr
	...

080015c8 <_ZN8touchgfx22STM32H7Instrumentation12getCPUCyclesEv>:

unsigned int STM32H7Instrumentation::getCPUCycles()
{
    return __HAL_TIM_GET_COUNTER(&tim) * m_sysclkRatio;
 80015c8:	4b02      	ldr	r3, [pc, #8]	; (80015d4 <_ZN8touchgfx22STM32H7Instrumentation12getCPUCyclesEv+0xc>)
 80015ca:	68c0      	ldr	r0, [r0, #12]
 80015cc:	681b      	ldr	r3, [r3, #0]
 80015ce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
}
 80015d0:	4358      	muls	r0, r3
 80015d2:	4770      	bx	lr
 80015d4:	24000394 	.word	0x24000394

080015d8 <_ZN8touchgfx22STM32H7InstrumentationD1Ev>:
#include <platform/core/MCUInstrumentation.hpp>
#include <stdint.h>

namespace touchgfx
{
class STM32H7Instrumentation: public MCUInstrumentation
 80015d8:	4770      	bx	lr
	...

080015dc <_ZN8touchgfx22STM32H7Instrumentation4initEv>:
{
 80015dc:	b537      	push	{r0, r1, r2, r4, r5, lr}
    __HAL_RCC_TIM2_CLK_ENABLE();
 80015de:	4a1e      	ldr	r2, [pc, #120]	; (8001658 <_ZN8touchgfx22STM32H7Instrumentation4initEv+0x7c>)
    tim.Instance = TIM2;
 80015e0:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
{
 80015e4:	4605      	mov	r5, r0
    tim.Init.Period = 0xFFFFFFFF;
 80015e6:	f04f 30ff 	mov.w	r0, #4294967295
    __HAL_RCC_TIM2_CLK_ENABLE();
 80015ea:	f8d2 30e8 	ldr.w	r3, [r2, #232]	; 0xe8
 80015ee:	f043 0301 	orr.w	r3, r3, #1
 80015f2:	f8c2 30e8 	str.w	r3, [r2, #232]	; 0xe8
 80015f6:	f8d2 30e8 	ldr.w	r3, [r2, #232]	; 0xe8
 80015fa:	f003 0301 	and.w	r3, r3, #1
 80015fe:	9301      	str	r3, [sp, #4]
 8001600:	9b01      	ldr	r3, [sp, #4]
    tim.Instance = TIM2;
 8001602:	4b16      	ldr	r3, [pc, #88]	; (800165c <_ZN8touchgfx22STM32H7Instrumentation4initEv+0x80>)
 8001604:	6019      	str	r1, [r3, #0]
    tim.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001606:	2100      	movs	r1, #0
    tim.Init.Period = 0xFFFFFFFF;
 8001608:	60d8      	str	r0, [r3, #12]
    tim.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800160a:	6119      	str	r1, [r3, #16]
    tim.Init.CounterMode = TIM_COUNTERMODE_UP;
 800160c:	6099      	str	r1, [r3, #8]
    tim.Init.Prescaler = 0;
 800160e:	6059      	str	r1, [r3, #4]
    tim.Init.RepetitionCounter = 1;
 8001610:	2101      	movs	r1, #1
 8001612:	6159      	str	r1, [r3, #20]
    uwD2Prescaler = D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1) >> POSITION_VAL(RCC_D2CFGR_D2PPRE1_0)];
 8001614:	69d3      	ldr	r3, [r2, #28]
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8001616:	2210      	movs	r2, #16
 8001618:	f003 0370 	and.w	r3, r3, #112	; 0x70
 800161c:	fa92 f2a2 	rbit	r2, r2
   */
  if (value == 0U)
  {
    return 32U;
  }
  return __builtin_clz(value);
 8001620:	fab2 f282 	clz	r2, r2
 8001624:	40d3      	lsrs	r3, r2
    if (!uwD2Prescaler)
 8001626:	4a0e      	ldr	r2, [pc, #56]	; (8001660 <_ZN8touchgfx22STM32H7Instrumentation4initEv+0x84>)
 8001628:	5cd3      	ldrb	r3, [r2, r3]
 800162a:	b983      	cbnz	r3, 800164e <_ZN8touchgfx22STM32H7Instrumentation4initEv+0x72>
        uwTimclock = HAL_RCC_GetHCLKFreq();
 800162c:	f006 ff78 	bl	8008520 <HAL_RCC_GetHCLKFreq>
 8001630:	4604      	mov	r4, r0
    m_sysclkRatio = HAL_RCC_GetSysClockFreq() / uwTimclock;
 8001632:	f006 fdaf 	bl	8008194 <HAL_RCC_GetSysClockFreq>
 8001636:	fbb0 f0f4 	udiv	r0, r0, r4
 800163a:	60e8      	str	r0, [r5, #12]
    HAL_TIM_Base_Init(&tim);
 800163c:	4807      	ldr	r0, [pc, #28]	; (800165c <_ZN8touchgfx22STM32H7Instrumentation4initEv+0x80>)
 800163e:	f007 ffa5 	bl	800958c <HAL_TIM_Base_Init>
    HAL_TIM_Base_Start(&tim);
 8001642:	4806      	ldr	r0, [pc, #24]	; (800165c <_ZN8touchgfx22STM32H7Instrumentation4initEv+0x80>)
}
 8001644:	b003      	add	sp, #12
 8001646:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    HAL_TIM_Base_Start(&tim);
 800164a:	f007 be0d 	b.w	8009268 <HAL_TIM_Base_Start>
        uwTimclock = 2 * HAL_RCC_GetPCLK1Freq();
 800164e:	f006 ff89 	bl	8008564 <HAL_RCC_GetPCLK1Freq>
 8001652:	0044      	lsls	r4, r0, #1
 8001654:	e7ed      	b.n	8001632 <_ZN8touchgfx22STM32H7Instrumentation4initEv+0x56>
 8001656:	bf00      	nop
 8001658:	58024400 	.word	0x58024400
 800165c:	24000394 	.word	0x24000394
 8001660:	08022590 	.word	0x08022590

08001664 <_ZN8touchgfx22STM32H7InstrumentationD0Ev>:
 8001664:	b510      	push	{r4, lr}
 8001666:	4604      	mov	r4, r0
 8001668:	2110      	movs	r1, #16
 800166a:	f01e f8d8 	bl	801f81e <_ZdlPvj>
 800166e:	4620      	mov	r0, r4
 8001670:	bd10      	pop	{r4, pc}

08001672 <_ZN8touchgfx22STM32H7Instrumentation12setMCUActiveEb>:

void STM32H7Instrumentation::setMCUActive(bool active)
{
 8001672:	b538      	push	{r3, r4, r5, lr}
    if (active) //idle task sched out
    {
        uint32_t current_cc = cc_in;
        cc_consumed += getCPUCycles() - current_cc;
 8001674:	6803      	ldr	r3, [r0, #0]
{
 8001676:	4604      	mov	r4, r0
        cc_consumed += getCPUCycles() - current_cc;
 8001678:	691a      	ldr	r2, [r3, #16]
    if (active) //idle task sched out
 800167a:	b131      	cbz	r1, 800168a <_ZN8touchgfx22STM32H7Instrumentation12setMCUActiveEb+0x18>
        uint32_t current_cc = cc_in;
 800167c:	6885      	ldr	r5, [r0, #8]
        cc_consumed += getCPUCycles() - current_cc;
 800167e:	4790      	blx	r2
 8001680:	6863      	ldr	r3, [r4, #4]
 8001682:	1b5b      	subs	r3, r3, r5
 8001684:	4418      	add	r0, r3
 8001686:	6060      	str	r0, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
 8001688:	bd38      	pop	{r3, r4, r5, pc}
        cc_in = getCPUCycles();
 800168a:	4790      	blx	r2
 800168c:	60a0      	str	r0, [r4, #8]
}
 800168e:	e7fb      	b.n	8001688 <_ZN8touchgfx22STM32H7Instrumentation12setMCUActiveEb+0x16>

08001690 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8001690:	4770      	bx	lr

08001692 <_ZN20STM32TouchControllerD0Ev>:
 8001692:	b510      	push	{r4, lr}
 8001694:	4604      	mov	r4, r0
 8001696:	2104      	movs	r1, #4
 8001698:	f01e f8c1 	bl	801f81e <_ZdlPvj>
 800169c:	4620      	mov	r0, r4
 800169e:	bd10      	pop	{r4, pc}

080016a0 <_ZN20STM32TouchController4initEv>:
static bool bsp_ts_initialized = false;
TS_Init_t* hTS;
TS_State_t  TS_State = {0};

void STM32TouchController::init()
{
 80016a0:	b508      	push	{r3, lr}
    /**
     * Initialize touch controller and driver
     *
     */
    hTS->Width = 800;
 80016a2:	4b0e      	ldr	r3, [pc, #56]	; (80016dc <_ZN20STM32TouchController4initEv+0x3c>)
    hTS->Height = 480;
 80016a4:	f44f 7248 	mov.w	r2, #800	; 0x320
    hTS->Orientation = TS_SWAP_XY | TS_SWAP_Y;
    hTS->Accuracy = 0;
 80016a8:	2000      	movs	r0, #0
    hTS->Width = 800;
 80016aa:	6819      	ldr	r1, [r3, #0]
    hTS->Height = 480;
 80016ac:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 80016b0:	e9c1 2300 	strd	r2, r3, [r1]
    hTS->Accuracy = 0;
 80016b4:	230c      	movs	r3, #12
 80016b6:	e9c1 3002 	strd	r3, r0, [r1, #8]

    if (BSP_TS_Init(0, hTS) == BSP_ERROR_NONE)
 80016ba:	f004 f801 	bl	80056c0 <BSP_TS_Init>
 80016be:	4b08      	ldr	r3, [pc, #32]	; (80016e0 <_ZN20STM32TouchController4initEv+0x40>)
 80016c0:	b910      	cbnz	r0, 80016c8 <_ZN20STM32TouchController4initEv+0x28>
    {
        bsp_ts_initialized = true;
 80016c2:	2201      	movs	r2, #1
 80016c4:	701a      	strb	r2, [r3, #0]
    }

    assert(bsp_ts_initialized);
}
 80016c6:	bd08      	pop	{r3, pc}
    assert(bsp_ts_initialized);
 80016c8:	781b      	ldrb	r3, [r3, #0]
 80016ca:	2b00      	cmp	r3, #0
 80016cc:	d1fb      	bne.n	80016c6 <_ZN20STM32TouchController4initEv+0x26>
 80016ce:	4b05      	ldr	r3, [pc, #20]	; (80016e4 <_ZN20STM32TouchController4initEv+0x44>)
 80016d0:	212e      	movs	r1, #46	; 0x2e
 80016d2:	4a05      	ldr	r2, [pc, #20]	; (80016e8 <_ZN20STM32TouchController4initEv+0x48>)
 80016d4:	4805      	ldr	r0, [pc, #20]	; (80016ec <_ZN20STM32TouchController4initEv+0x4c>)
 80016d6:	f01e fa7f 	bl	801fbd8 <__assert_func>
 80016da:	bf00      	nop
 80016dc:	240003f0 	.word	0x240003f0
 80016e0:	240003ec 	.word	0x240003ec
 80016e4:	08020eac 	.word	0x08020eac
 80016e8:	08020ebf 	.word	0x08020ebf
 80016ec:	08020ee9 	.word	0x08020ee9

080016f0 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 80016f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    if (bsp_ts_initialized)
 80016f2:	4b0a      	ldr	r3, [pc, #40]	; (800171c <_ZN20STM32TouchController11sampleTouchERlS0_+0x2c>)
{
 80016f4:	460f      	mov	r7, r1
 80016f6:	4616      	mov	r6, r2
    if (bsp_ts_initialized)
 80016f8:	781d      	ldrb	r5, [r3, #0]
 80016fa:	b915      	cbnz	r5, 8001702 <_ZN20STM32TouchController11sampleTouchERlS0_+0x12>
            x = TS_State.TouchX;
            y = TS_State.TouchY;
            return true;
        }
    }
    return false;
 80016fc:	2500      	movs	r5, #0
}
 80016fe:	4628      	mov	r0, r5
 8001700:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        BSP_TS_GetState(0, &TS_State);
 8001702:	4c07      	ldr	r4, [pc, #28]	; (8001720 <_ZN20STM32TouchController11sampleTouchERlS0_+0x30>)
 8001704:	2000      	movs	r0, #0
 8001706:	4621      	mov	r1, r4
 8001708:	f004 f86e 	bl	80057e8 <BSP_TS_GetState>
        if (TS_State.TouchDetected)
 800170c:	6823      	ldr	r3, [r4, #0]
 800170e:	2b00      	cmp	r3, #0
 8001710:	d0f4      	beq.n	80016fc <_ZN20STM32TouchController11sampleTouchERlS0_+0xc>
            x = TS_State.TouchX;
 8001712:	6863      	ldr	r3, [r4, #4]
 8001714:	603b      	str	r3, [r7, #0]
            y = TS_State.TouchY;
 8001716:	68a3      	ldr	r3, [r4, #8]
 8001718:	6033      	str	r3, [r6, #0]
            return true;
 800171a:	e7f0      	b.n	80016fe <_ZN20STM32TouchController11sampleTouchERlS0_+0xe>
 800171c:	240003ec 	.word	0x240003ec
 8001720:	240003e0 	.word	0x240003e0

08001724 <_ZN8touchgfx4GPIO4initEv>:
 * Perform configuration of IO pins.
 */
void GPIO::init()
{

}
 8001724:	4770      	bx	lr

08001726 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{

}
 8001726:	4770      	bx	lr

08001728 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
 8001728:	4770      	bx	lr

0800172a <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
 800172a:	4770      	bx	lr

0800172c <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 800172c:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 800172e:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 8001732:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 8001736:	4770      	bx	lr

08001738 <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
    {
        return false;
    }
 8001738:	2000      	movs	r0, #0
 800173a:	4770      	bx	lr

0800173c <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     *
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800173c:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800173e:	3900      	subs	r1, #0
 8001740:	4b02      	ldr	r3, [pc, #8]	; (800174c <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
 8001742:	bf18      	it	ne
 8001744:	2101      	movne	r1, #1
 8001746:	7019      	strb	r1, [r3, #0]
    }
 8001748:	4770      	bx	lr
 800174a:	bf00      	nop
 800174c:	2400e07b 	.word	0x2400e07b

08001750 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8001750:	2000      	movs	r0, #0
 8001752:	4770      	bx	lr

08001754 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8001754:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8001756:	b10b      	cbz	r3, 800175c <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8001758:	4608      	mov	r0, r1
 800175a:	4718      	bx	r3
        }
    }
 800175c:	4770      	bx	lr

0800175e <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 800175e:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8001762:	4770      	bx	lr

08001764 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8001764:	6840      	ldr	r0, [r0, #4]
 8001766:	6803      	ldr	r3, [r0, #0]
 8001768:	699b      	ldr	r3, [r3, #24]
 800176a:	4718      	bx	r3

0800176c <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // and implemented needed functionality here.

    /* USER CODE BEGIN getTFTFrameBuffer */
    return currFbBase;
    /* USER CODE END getTFTFrameBuffer */
}
 800176c:	4b01      	ldr	r3, [pc, #4]	; (8001774 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv+0x8>)
 800176e:	6818      	ldr	r0, [r3, #0]
 8001770:	4770      	bx	lr
 8001772:	bf00      	nop
 8001774:	240003f4 	.word	0x240003f4

08001778 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8001778:	4770      	bx	lr

0800177a <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    /* USER CODE BEGIN flushFrameBuffer step 1 */
    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 800177a:	f000 be23 	b.w	80023c4 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

0800177e <_ZN11TouchGFXHAL19configureInterruptsEv>:
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    /* USER CODE BEGIN configureInterrupts */
    TouchGFXGeneratedHAL::configureInterrupts();
 800177e:	f000 bdd1 	b.w	8002324 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08001782 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    /* USER CODE BEGIN enableInterrupts */
    TouchGFXGeneratedHAL::enableInterrupts();
 8001782:	f000 be39 	b.w	80023f8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08001786 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    /* USER CODE BEGIN disableInterrupts */
    TouchGFXGeneratedHAL::disableInterrupts();
 8001786:	f000 be2b 	b.w	80023e0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

0800178a <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 800178a:	f000 bdd3 	b.w	8002334 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

0800178e <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 800178e:	b510      	push	{r4, lr}
 8001790:	4604      	mov	r4, r0
        swapFrameBuffers();
 8001792:	f00b febf 	bl	800d514 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8001796:	6823      	ldr	r3, [r4, #0]
 8001798:	4620      	mov	r0, r4
 800179a:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 800179e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 80017a2:	4718      	bx	r3

080017a4 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80017a4:	f00b b84e 	b.w	800c844 <_ZN8touchgfx3HAL16flushFrameBufferEv>

080017a8 <_ZN11TouchGFXHALD0Ev>:
 80017a8:	b510      	push	{r4, lr}
 80017aa:	4604      	mov	r4, r0
 80017ac:	217c      	movs	r1, #124	; 0x7c
 80017ae:	f01e f836 	bl	801f81e <_ZdlPvj>
 80017b2:	4620      	mov	r0, r4
 80017b4:	bd10      	pop	{r4, pc}
	...

080017b8 <_ZN11TouchGFXHAL10beginFrameEv>:
    HAL::setFrameBufferStartAddresses(frameBuffer, doubleBuffer, animationStorage);
}

bool TouchGFXHAL::beginFrame()
{
    refreshRequested = false;
 80017b8:	4b02      	ldr	r3, [pc, #8]	; (80017c4 <_ZN11TouchGFXHAL10beginFrameEv+0xc>)
 80017ba:	2200      	movs	r2, #0
 80017bc:	701a      	strb	r2, [r3, #0]
    return HAL::beginFrame();
 80017be:	f00b b87d 	b.w	800c8bc <_ZN8touchgfx3HAL10beginFrameEv>
 80017c2:	bf00      	nop
 80017c4:	2400000c 	.word	0x2400000c

080017c8 <_ZN11TouchGFXHAL8endFrameEv>:
}

void TouchGFXHAL::endFrame()
{
 80017c8:	b510      	push	{r4, lr}
 80017ca:	4604      	mov	r4, r0
    HAL::endFrame();
 80017cc:	f00b f882 	bl	800c8d4 <_ZN8touchgfx3HAL8endFrameEv>
    if (frameBufferUpdatedThisFrame)
 80017d0:	f894 304b 	ldrb.w	r3, [r4, #75]	; 0x4b
 80017d4:	b113      	cbz	r3, 80017dc <_ZN11TouchGFXHAL8endFrameEv+0x14>
    {
        refreshRequested = true;
 80017d6:	4b02      	ldr	r3, [pc, #8]	; (80017e0 <_ZN11TouchGFXHAL8endFrameEv+0x18>)
 80017d8:	2201      	movs	r2, #1
 80017da:	701a      	strb	r2, [r3, #0]
    }
}
 80017dc:	bd10      	pop	{r4, pc}
 80017de:	bf00      	nop
 80017e0:	2400000c 	.word	0x2400000c

080017e4 <_ZN11TouchGFXHAL10initializeEv>:
{
 80017e4:	b538      	push	{r3, r4, r5, lr}
 80017e6:	4604      	mov	r4, r0
    GPIO::init();
 80017e8:	f7ff ff9c 	bl	8001724 <_ZN8touchgfx4GPIO4initEv>
    mcuInstr.init();
 80017ec:	4d07      	ldr	r5, [pc, #28]	; (800180c <_ZN11TouchGFXHAL10initializeEv+0x28>)
    TouchGFXGeneratedHAL::initialize();
 80017ee:	4620      	mov	r0, r4
 80017f0:	f000 fda1 	bl	8002336 <_ZN20TouchGFXGeneratedHAL10initializeEv>
        lockDMAToPorch = enableLock;
 80017f4:	2300      	movs	r3, #0
    mcuInstr.init();
 80017f6:	4628      	mov	r0, r5
 80017f8:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
 80017fc:	f7ff feee 	bl	80015dc <_ZN8touchgfx22STM32H7Instrumentation4initEv>
        updateMCULoad = enabled;
 8001800:	2301      	movs	r3, #1
        mcuInstrumentation = mcuInstr;
 8001802:	6125      	str	r5, [r4, #16]
        updateMCULoad = enabled;
 8001804:	f884 306c 	strb.w	r3, [r4, #108]	; 0x6c
}
 8001808:	bd38      	pop	{r3, r4, r5, pc}
 800180a:	bf00      	nop
 800180c:	240003fc 	.word	0x240003fc

08001810 <_ZN11TouchGFXHAL9taskEntryEv>:
    enableLCDControllerInterrupt();
 8001810:	6803      	ldr	r3, [r0, #0]
{
 8001812:	4604      	mov	r4, r0
 8001814:	b507      	push	{r0, r1, r2, lr}
    enableLCDControllerInterrupt();
 8001816:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800181a:	4798      	blx	r3
    enableInterrupts();
 800181c:	6823      	ldr	r3, [r4, #0]
 800181e:	4620      	mov	r0, r4
 8001820:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8001822:	4798      	blx	r3
    OSWrappers::waitForVSync();
 8001824:	f000 faa6 	bl	8001d74 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8001828:	6823      	ldr	r3, [r4, #0]
 800182a:	4620      	mov	r0, r4
 800182c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800182e:	4798      	blx	r3
    HAL_DSI_ShortWrite(&hdsi, LCD_OTM8009A_ID, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_DISPON, 0x00);
 8001830:	2100      	movs	r1, #0
 8001832:	2329      	movs	r3, #41	; 0x29
 8001834:	2215      	movs	r2, #21
 8001836:	4805      	ldr	r0, [pc, #20]	; (800184c <_ZN11TouchGFXHAL9taskEntryEv+0x3c>)
 8001838:	9100      	str	r1, [sp, #0]
 800183a:	f004 fe1c 	bl	8006476 <HAL_DSI_ShortWrite>
        OSWrappers::waitForVSync();
 800183e:	f000 fa99 	bl	8001d74 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8001842:	6823      	ldr	r3, [r4, #0]
 8001844:	4620      	mov	r0, r4
 8001846:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8001848:	4798      	blx	r3
    for (;;)
 800184a:	e7f8      	b.n	800183e <_ZN11TouchGFXHAL9taskEntryEv+0x2e>
 800184c:	240001f8 	.word	0x240001f8

08001850 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 8001850:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 8001854:	b11b      	cbz	r3, 800185e <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8001856:	6840      	ldr	r0, [r0, #4]
 8001858:	6803      	ldr	r3, [r0, #0]
 800185a:	681b      	ldr	r3, [r3, #0]
 800185c:	4718      	bx	r3
    }
 800185e:	4618      	mov	r0, r3
 8001860:	4770      	bx	lr
	...

08001864 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
    {
        if (requestedOrientation != nativeDisplayOrientation)
 8001864:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
        {
            if (DISPLAY_ROTATION == rotate0)
 8001868:	4b0d      	ldr	r3, [pc, #52]	; (80018a0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
    virtual void performDisplayOrientationChange()
 800186a:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 800186c:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
            if (DISPLAY_ROTATION == rotate0)
 8001870:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8001872:	428c      	cmp	r4, r1
 8001874:	d009      	beq.n	800188a <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8001876:	b93a      	cbnz	r2, 8001888 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
 8001878:	490a      	ldr	r1, [pc, #40]	; (80018a4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800187a:	4a0b      	ldr	r2, [pc, #44]	; (80018a8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 800187c:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800187e:	8814      	ldrh	r4, [r2, #0]
                DISPLAY_WIDTH = tmp;
 8001880:	8010      	strh	r0, [r2, #0]
                DISPLAY_ROTATION = rotate90;
 8001882:	2201      	movs	r2, #1
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001884:	800c      	strh	r4, [r1, #0]
        else if (DISPLAY_ROTATION != rotate0)
        {
            const uint16_t tmp = DISPLAY_HEIGHT;
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
 8001886:	701a      	strb	r2, [r3, #0]
        }
    }
 8001888:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 800188a:	2a00      	cmp	r2, #0
 800188c:	d0fc      	beq.n	8001888 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800188e:	4a06      	ldr	r2, [pc, #24]	; (80018a8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001890:	4904      	ldr	r1, [pc, #16]	; (80018a4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001892:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001894:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001896:	800c      	strh	r4, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8001898:	8010      	strh	r0, [r2, #0]
            DISPLAY_ROTATION = rotate0;
 800189a:	2200      	movs	r2, #0
 800189c:	e7f3      	b.n	8001886 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 800189e:	bf00      	nop
 80018a0:	2400e074 	.word	0x2400e074
 80018a4:	2400e072 	.word	0x2400e072
 80018a8:	2400e070 	.word	0x2400e070

080018ac <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 80018ac:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 80018ae:	4b09      	ldr	r3, [pc, #36]	; (80018d4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 80018b0:	881b      	ldrh	r3, [r3, #0]
 80018b2:	428b      	cmp	r3, r1
 80018b4:	d803      	bhi.n	80018be <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 80018b6:	4b08      	ldr	r3, [pc, #32]	; (80018d8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 80018b8:	881b      	ldrh	r3, [r3, #0]
 80018ba:	4293      	cmp	r3, r2
 80018bc:	d905      	bls.n	80018ca <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 80018be:	4b07      	ldr	r3, [pc, #28]	; (80018dc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 80018c0:	219e      	movs	r1, #158	; 0x9e
 80018c2:	4a07      	ldr	r2, [pc, #28]	; (80018e0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 80018c4:	4807      	ldr	r0, [pc, #28]	; (80018e4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 80018c6:	f01e f987 	bl	801fbd8 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 80018ca:	4b07      	ldr	r3, [pc, #28]	; (80018e8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 80018cc:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 80018ce:	4b07      	ldr	r3, [pc, #28]	; (80018ec <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 80018d0:	801a      	strh	r2, [r3, #0]
    }
 80018d2:	bd08      	pop	{r3, pc}
 80018d4:	2400e070 	.word	0x2400e070
 80018d8:	2400e072 	.word	0x2400e072
 80018dc:	08020f4c 	.word	0x08020f4c
 80018e0:	08020faf 	.word	0x08020faf
 80018e4:	08020ff2 	.word	0x08020ff2
 80018e8:	2400e076 	.word	0x2400e076
 80018ec:	2400e078 	.word	0x2400e078

080018f0 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_>:
{
 80018f0:	b570      	push	{r4, r5, r6, lr}
 80018f2:	460d      	mov	r5, r1
 80018f4:	4619      	mov	r1, r3
    currFbBase = (uint16_t*)frameBuffer;
 80018f6:	4b0b      	ldr	r3, [pc, #44]	; (8001924 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x34>)
 80018f8:	601d      	str	r5, [r3, #0]
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 80018fa:	b935      	cbnz	r5, 800190a <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x1a>
 80018fc:	4b0a      	ldr	r3, [pc, #40]	; (8001928 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x38>)
 80018fe:	f240 21bb 	movw	r1, #699	; 0x2bb
 8001902:	4a0a      	ldr	r2, [pc, #40]	; (800192c <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x3c>)
 8001904:	480a      	ldr	r0, [pc, #40]	; (8001930 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x40>)
 8001906:	f01e f967 	bl	801fbd8 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800190a:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800190e:	3a00      	subs	r2, #0
 8001910:	4b08      	ldr	r3, [pc, #32]	; (8001934 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x44>)
 8001912:	bf18      	it	ne
 8001914:	2201      	movne	r2, #1
 8001916:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8001918:	6803      	ldr	r3, [r0, #0]
}
 800191a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800191e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8001922:	4718      	bx	r3
 8001924:	240003f4 	.word	0x240003f4
 8001928:	08021045 	.word	0x08021045
 800192c:	0802107d 	.word	0x0802107d
 8001930:	08020ff2 	.word	0x08020ff2
 8001934:	2400e07a 	.word	0x2400e07a

08001938 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
          lastRenderMethod(HARDWARE)
 8001938:	e9c0 1201 	strd	r1, r2, [r0, #4]
 800193c:	60c3      	str	r3, [r0, #12]
 800193e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001942:	2300      	movs	r3, #0
 8001944:	e9c0 2312 	strd	r2, r3, [r0, #72]	; 0x48
 8001948:	4a1d      	ldr	r2, [pc, #116]	; (80019c0 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x88>)
              downX(0),
              downY(0),
              tickCount(0),
              velocityX(0),
              velocityY(0),
              inProgress(false)
 800194a:	8503      	strh	r3, [r0, #40]	; 0x28
 800194c:	f880 302a 	strb.w	r3, [r0, #42]	; 0x2a
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8001950:	62c3      	str	r3, [r0, #44]	; 0x2c
 8001952:	8603      	strh	r3, [r0, #48]	; 0x30
 8001954:	6603      	str	r3, [r0, #96]	; 0x60
 8001956:	f880 306c 	strb.w	r3, [r0, #108]	; 0x6c
 800195a:	6703      	str	r3, [r0, #112]	; 0x70
 800195c:	e9c0 2319 	strd	r2, r3, [r0, #100]	; 0x64
 8001960:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001964:	6742      	str	r2, [r0, #116]	; 0x74
 8001966:	2201      	movs	r2, #1
TouchGFXHAL::TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height)
 8001968:	b570      	push	{r4, r5, r6, lr}
 800196a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800196e:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8001972:	f8bd 6014 	ldrh.w	r6, [sp, #20]
              inProgress(false)
 8001976:	e9c0 3306 	strd	r3, r3, [r0, #24]
 800197a:	e9c0 3308 	strd	r3, r3, [r0, #32]
 800197e:	e9c0 330e 	strd	r3, r3, [r0, #56]	; 0x38
 8001982:	e9c0 3310 	strd	r3, r3, [r0, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8001986:	e9c0 3314 	strd	r3, r3, [r0, #80]	; 0x50
 800198a:	e9c0 3316 	strd	r3, r3, [r0, #88]	; 0x58
 800198e:	f880 2078 	strb.w	r2, [r0, #120]	; 0x78
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8001992:	42b5      	cmp	r5, r6
        instance = this;
 8001994:	4a0b      	ldr	r2, [pc, #44]	; (80019c4 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x8c>)
 8001996:	6010      	str	r0, [r2, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001998:	4a0b      	ldr	r2, [pc, #44]	; (80019c8 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x90>)
 800199a:	8015      	strh	r5, [r2, #0]
 800199c:	4a0b      	ldr	r2, [pc, #44]	; (80019cc <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x94>)
 800199e:	8015      	strh	r5, [r2, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 80019a0:	bf28      	it	cs
 80019a2:	2500      	movcs	r5, #0
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80019a4:	4a0a      	ldr	r2, [pc, #40]	; (80019d0 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x98>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 80019a6:	bf38      	it	cc
 80019a8:	2501      	movcc	r5, #1
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80019aa:	8016      	strh	r6, [r2, #0]
 80019ac:	4a09      	ldr	r2, [pc, #36]	; (80019d4 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x9c>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 80019ae:	f880 5034 	strb.w	r5, [r0, #52]	; 0x34
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80019b2:	8016      	strh	r6, [r2, #0]
        DISPLAY_ROTATION = rotate0;
 80019b4:	4a08      	ldr	r2, [pc, #32]	; (80019d8 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0xa0>)
 80019b6:	7013      	strb	r3, [r2, #0]
                           height)
 80019b8:	4b08      	ldr	r3, [pc, #32]	; (80019dc <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0xa4>)
 80019ba:	6003      	str	r3, [r0, #0]
}
 80019bc:	bd70      	pop	{r4, r5, r6, pc}
 80019be:	bf00      	nop
 80019c0:	01000001 	.word	0x01000001
 80019c4:	2400e07c 	.word	0x2400e07c
 80019c8:	2400e070 	.word	0x2400e070
 80019cc:	2400e076 	.word	0x2400e076
 80019d0:	2400e072 	.word	0x2400e072
 80019d4:	2400e078 	.word	0x2400e078
 80019d8:	2400e074 	.word	0x2400e074
 80019dc:	080210d4 	.word	0x080210d4

080019e0 <DSI_IO_Write>:
      */
    int32_t DSI_IO_Write(uint16_t ChannelNbr, uint16_t Reg, uint8_t* pData, uint16_t Size)
    {
        int32_t ret = BSP_ERROR_NONE;

        if (Size <= 1U)
 80019e0:	2b01      	cmp	r3, #1
    {
 80019e2:	b513      	push	{r0, r1, r4, lr}
        if (Size <= 1U)
 80019e4:	d80e      	bhi.n	8001a04 <DSI_IO_Write+0x24>
        {
            if (HAL_DSI_ShortWrite(&hdsi, ChannelNbr, DSI_DCS_SHORT_PKT_WRITE_P1, Reg, (uint32_t)pData[Size]) != HAL_OK)
 80019e6:	5cd3      	ldrb	r3, [r2, r3]
 80019e8:	2215      	movs	r2, #21
 80019ea:	9300      	str	r3, [sp, #0]
 80019ec:	460b      	mov	r3, r1
 80019ee:	4601      	mov	r1, r0
 80019f0:	4808      	ldr	r0, [pc, #32]	; (8001a14 <DSI_IO_Write+0x34>)
 80019f2:	f004 fd40 	bl	8006476 <HAL_DSI_ShortWrite>
 80019f6:	b118      	cbz	r0, 8001a00 <DSI_IO_Write+0x20>
            {
                ret = BSP_ERROR_BUS_FAILURE;
 80019f8:	f06f 0007 	mvn.w	r0, #7
                ret = BSP_ERROR_BUS_FAILURE;
            }
        }

        return ret;
    }
 80019fc:	b002      	add	sp, #8
 80019fe:	bd10      	pop	{r4, pc}
        int32_t ret = BSP_ERROR_NONE;
 8001a00:	2000      	movs	r0, #0
 8001a02:	e7fb      	b.n	80019fc <DSI_IO_Write+0x1c>
            if (HAL_DSI_LongWrite(&hdsi, ChannelNbr, DSI_DCS_LONG_PKT_WRITE, Size, (uint32_t)Reg, pData) != HAL_OK)
 8001a04:	e9cd 1200 	strd	r1, r2, [sp]
 8001a08:	4601      	mov	r1, r0
 8001a0a:	2239      	movs	r2, #57	; 0x39
 8001a0c:	4801      	ldr	r0, [pc, #4]	; (8001a14 <DSI_IO_Write+0x34>)
 8001a0e:	f004 fd43 	bl	8006498 <HAL_DSI_LongWrite>
 8001a12:	e7f0      	b.n	80019f6 <DSI_IO_Write+0x16>
 8001a14:	240001f8 	.word	0x240001f8

08001a18 <DSI_IO_Read>:
      * @param  pData pointer to a buffer to store the payload of a read back operation.
      * @param  Size  Data size to be read (in byte).
      * @retval BSP status
      */
    int32_t DSI_IO_Read(uint16_t ChannelNbr, uint16_t Reg, uint8_t* pData, uint16_t Size)
    {
 8001a18:	b51f      	push	{r0, r1, r2, r3, r4, lr}
        int32_t ret = BSP_ERROR_NONE;

        if (HAL_DSI_Read(&hdsi, ChannelNbr, pData, Size, DSI_DCS_SHORT_PKT_READ, Reg, pData) != HAL_OK)
 8001a1a:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8001a1e:	2106      	movs	r1, #6
 8001a20:	9100      	str	r1, [sp, #0]
 8001a22:	4601      	mov	r1, r0
 8001a24:	4805      	ldr	r0, [pc, #20]	; (8001a3c <DSI_IO_Read+0x24>)
 8001a26:	f004 fd98 	bl	800655a <HAL_DSI_Read>
        {
            ret = BSP_ERROR_BUS_FAILURE;
 8001a2a:	2800      	cmp	r0, #0
        }

        return ret;
    }
 8001a2c:	bf14      	ite	ne
 8001a2e:	f06f 0007 	mvnne.w	r0, #7
 8001a32:	2000      	moveq	r0, #0
 8001a34:	b005      	add	sp, #20
 8001a36:	f85d fb04 	ldr.w	pc, [sp], #4
 8001a3a:	bf00      	nop
 8001a3c:	240001f8 	.word	0x240001f8

08001a40 <LCD_ReqTear>:

    /**
     * Request TE at scanline.
     */
    void LCD_ReqTear(void)
    {
 8001a40:	b530      	push	{r4, r5, lr}
 8001a42:	b085      	sub	sp, #20
        uint16_t scanline = 533;

        ScanLineParams[0] = scanline >> 8;
        ScanLineParams[1] = scanline & 0x00FF;

        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8001a44:	4c0c      	ldr	r4, [pc, #48]	; (8001a78 <LCD_ReqTear+0x38>)
        ScanLineParams[0] = scanline >> 8;
 8001a46:	2302      	movs	r3, #2
        ScanLineParams[1] = scanline & 0x00FF;
 8001a48:	2515      	movs	r5, #21
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8001a4a:	aa03      	add	r2, sp, #12
 8001a4c:	2100      	movs	r1, #0
 8001a4e:	4620      	mov	r0, r4
        ScanLineParams[0] = scanline >> 8;
 8001a50:	f88d 300c 	strb.w	r3, [sp, #12]
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8001a54:	9201      	str	r2, [sp, #4]
 8001a56:	2244      	movs	r2, #68	; 0x44
        ScanLineParams[1] = scanline & 0x00FF;
 8001a58:	f88d 500d 	strb.w	r5, [sp, #13]
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8001a5c:	9200      	str	r2, [sp, #0]
 8001a5e:	2239      	movs	r2, #57	; 0x39
 8001a60:	f004 fd1a 	bl	8006498 <HAL_DSI_LongWrite>
        HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_TEEON, 0x00);
 8001a64:	2100      	movs	r1, #0
 8001a66:	2335      	movs	r3, #53	; 0x35
 8001a68:	462a      	mov	r2, r5
 8001a6a:	4620      	mov	r0, r4
 8001a6c:	9100      	str	r1, [sp, #0]
 8001a6e:	f004 fd02 	bl	8006476 <HAL_DSI_ShortWrite>
    }
 8001a72:	b005      	add	sp, #20
 8001a74:	bd30      	pop	{r4, r5, pc}
 8001a76:	bf00      	nop
 8001a78:	240001f8 	.word	0x240001f8

08001a7c <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
{
 8001a7c:	b508      	push	{r3, lr}
    LCD_ReqTear();
 8001a7e:	f7ff ffdf 	bl	8001a40 <LCD_ReqTear>
    __HAL_DSI_CLEAR_FLAG(&hdsi, DSI_IT_ER);
 8001a82:	4b0c      	ldr	r3, [pc, #48]	; (8001ab4 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv+0x38>)
 8001a84:	2202      	movs	r2, #2
 8001a86:	681b      	ldr	r3, [r3, #0]
 8001a88:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
    __HAL_DSI_CLEAR_FLAG(&hdsi, DSI_IT_TE);
 8001a8c:	2201      	movs	r2, #1
 8001a8e:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
    __HAL_DSI_ENABLE_IT(&hdsi, DSI_IT_TE);
 8001a92:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 8001a96:	f042 0201 	orr.w	r2, r2, #1
 8001a9a:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408
    __HAL_DSI_ENABLE_IT(&hdsi, DSI_IT_ER);
 8001a9e:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 8001aa2:	f042 0202 	orr.w	r2, r2, #2
 8001aa6:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408
    LTDC->IER = 3; /* Enable line and FIFO underrun interrupts */
 8001aaa:	2203      	movs	r2, #3
 8001aac:	4b02      	ldr	r3, [pc, #8]	; (8001ab8 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv+0x3c>)
 8001aae:	635a      	str	r2, [r3, #52]	; 0x34
}
 8001ab0:	bd08      	pop	{r3, pc}
 8001ab2:	bf00      	nop
 8001ab4:	240001f8 	.word	0x240001f8
 8001ab8:	50001000 	.word	0x50001000

08001abc <LCD_ReqEnable>:
    void LCD_ReqEnable(void)
    {
        static bool firstRefreshRequested = false;

        // Enable DSI interface once the very first framebuffer is ready for display
        if (!firstRefreshRequested)
 8001abc:	4b07      	ldr	r3, [pc, #28]	; (8001adc <LCD_ReqEnable+0x20>)
    {
 8001abe:	b507      	push	{r0, r1, r2, lr}
        if (!firstRefreshRequested)
 8001ac0:	7819      	ldrb	r1, [r3, #0]
 8001ac2:	b939      	cbnz	r1, 8001ad4 <LCD_ReqEnable+0x18>
        {
            firstRefreshRequested = true;
 8001ac4:	2201      	movs	r2, #1

            /* Send Display on DCS Command to display */
            HAL_DSI_ShortWrite(&(hdsi),
 8001ac6:	4806      	ldr	r0, [pc, #24]	; (8001ae0 <LCD_ReqEnable+0x24>)
            firstRefreshRequested = true;
 8001ac8:	701a      	strb	r2, [r3, #0]
            HAL_DSI_ShortWrite(&(hdsi),
 8001aca:	2329      	movs	r3, #41	; 0x29
 8001acc:	2215      	movs	r2, #21
 8001ace:	9100      	str	r1, [sp, #0]
 8001ad0:	f004 fcd1 	bl	8006476 <HAL_DSI_ShortWrite>
                               0,
                               DSI_DCS_SHORT_PKT_WRITE_P1,
                               OTM8009A_CMD_DISPON,
                               0x00);
        }
    }
 8001ad4:	b003      	add	sp, #12
 8001ad6:	f85d fb04 	ldr.w	pc, [sp], #4
 8001ada:	bf00      	nop
 8001adc:	2400040c 	.word	0x2400040c
 8001ae0:	240001f8 	.word	0x240001f8

08001ae4 <LCD_SetUpdateRegionLeft>:
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pCols[idx]);
    }

    void LCD_SetUpdateRegionLeft()
    {
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pColLeft);
 8001ae4:	4b06      	ldr	r3, [pc, #24]	; (8001b00 <LCD_SetUpdateRegionLeft+0x1c>)
    {
 8001ae6:	b507      	push	{r0, r1, r2, lr}
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pColLeft);
 8001ae8:	9301      	str	r3, [sp, #4]
 8001aea:	232a      	movs	r3, #42	; 0x2a
 8001aec:	2239      	movs	r2, #57	; 0x39
 8001aee:	2100      	movs	r1, #0
 8001af0:	9300      	str	r3, [sp, #0]
 8001af2:	2304      	movs	r3, #4
 8001af4:	4803      	ldr	r0, [pc, #12]	; (8001b04 <LCD_SetUpdateRegionLeft+0x20>)
 8001af6:	f004 fccf 	bl	8006498 <HAL_DSI_LongWrite>
    }
 8001afa:	b003      	add	sp, #12
 8001afc:	f85d fb04 	ldr.w	pc, [sp], #4
 8001b00:	24000004 	.word	0x24000004
 8001b04:	240001f8 	.word	0x240001f8

08001b08 <LCD_SetUpdateRegionRight>:

    void LCD_SetUpdateRegionRight()
    {
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pColRight);
 8001b08:	4b06      	ldr	r3, [pc, #24]	; (8001b24 <LCD_SetUpdateRegionRight+0x1c>)
    {
 8001b0a:	b507      	push	{r0, r1, r2, lr}
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pColRight);
 8001b0c:	9301      	str	r3, [sp, #4]
 8001b0e:	232a      	movs	r3, #42	; 0x2a
 8001b10:	2239      	movs	r2, #57	; 0x39
 8001b12:	2100      	movs	r1, #0
 8001b14:	9300      	str	r3, [sp, #0]
 8001b16:	2304      	movs	r3, #4
 8001b18:	4803      	ldr	r0, [pc, #12]	; (8001b28 <LCD_SetUpdateRegionRight+0x20>)
 8001b1a:	f004 fcbd 	bl	8006498 <HAL_DSI_LongWrite>
    }
 8001b1e:	b003      	add	sp, #12
 8001b20:	f85d fb04 	ldr.w	pc, [sp], #4
 8001b24:	24000008 	.word	0x24000008
 8001b28:	240001f8 	.word	0x240001f8

08001b2c <HAL_DSI_TearingEffectCallback>:
                           0, DSI_DCS_SHORT_PKT_WRITE_P1,
                           OTM8009A_CMD_WRDISBV, (uint16_t)(value * 255) / 100);
    }

    void HAL_DSI_TearingEffectCallback(DSI_HandleTypeDef* hdsi)
    {
 8001b2c:	b538      	push	{r3, r4, r5, lr}
        return instance;
 8001b2e:	4d14      	ldr	r5, [pc, #80]	; (8001b80 <HAL_DSI_TearingEffectCallback+0x54>)
 8001b30:	4604      	mov	r4, r0
        GPIO::set(GPIO::VSYNC_FREQ);
 8001b32:	2000      	movs	r0, #0
 8001b34:	f7ff fdf7 	bl	8001726 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8001b38:	682a      	ldr	r2, [r5, #0]
        vSyncCnt++;
 8001b3a:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 8001b3e:	3301      	adds	r3, #1
 8001b40:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66

        HAL::getInstance()->vSync();
        OSWrappers::signalVSync();
 8001b44:	f000 f90a 	bl	8001d5c <_ZN8touchgfx10OSWrappers11signalVSyncEv>

        // In single buffering, only require that the system waits for display update to be finished if we
        // actually intend to update the display in this frame.
        HAL::getInstance()->lockDMAToFrontPorch(refreshRequested);
 8001b48:	4b0e      	ldr	r3, [pc, #56]	; (8001b84 <HAL_DSI_TearingEffectCallback+0x58>)
        lockDMAToPorch = enableLock;
 8001b4a:	682a      	ldr	r2, [r5, #0]
 8001b4c:	7819      	ldrb	r1, [r3, #0]

        if (refreshRequested && !displayRefreshing)
 8001b4e:	781b      	ldrb	r3, [r3, #0]
 8001b50:	f882 104a 	strb.w	r1, [r2, #74]	; 0x4a
 8001b54:	b173      	cbz	r3, 8001b74 <HAL_DSI_TearingEffectCallback+0x48>
 8001b56:	4d0c      	ldr	r5, [pc, #48]	; (8001b88 <HAL_DSI_TearingEffectCallback+0x5c>)
 8001b58:	782b      	ldrb	r3, [r5, #0]
 8001b5a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8001b5e:	b94b      	cbnz	r3, 8001b74 <HAL_DSI_TearingEffectCallback+0x48>
        {

            // Update region 0 = first area of display (First quarter for 16bpp, first half for 24bpp)
            updateRegion = 0;
 8001b60:	4b0a      	ldr	r3, [pc, #40]	; (8001b8c <HAL_DSI_TearingEffectCallback+0x60>)
 8001b62:	601a      	str	r2, [r3, #0]
            LCD_SetUpdateRegionLeft();
 8001b64:	f7ff ffbe 	bl	8001ae4 <LCD_SetUpdateRegionLeft>

            // Transfer a quarter screen of pixel data.
            HAL_DSI_Refresh(hdsi);
 8001b68:	4620      	mov	r0, r4
 8001b6a:	f004 fc74 	bl	8006456 <HAL_DSI_Refresh>
            displayRefreshing = true;
 8001b6e:	2301      	movs	r3, #1
 8001b70:	702b      	strb	r3, [r5, #0]
        }
        else
        {
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001b72:	bd38      	pop	{r3, r4, r5, pc}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001b74:	2000      	movs	r0, #0
    }
 8001b76:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001b7a:	f7ff bdd5 	b.w	8001728 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8001b7e:	bf00      	nop
 8001b80:	2400e07c 	.word	0x2400e07c
 8001b84:	2400000c 	.word	0x2400000c
 8001b88:	2400040d 	.word	0x2400040d
 8001b8c:	240003f8 	.word	0x240003f8

08001b90 <HAL_DSI_EndOfRefreshCallback>:

    void HAL_DSI_EndOfRefreshCallback(DSI_HandleTypeDef* hdsi)
    {
 8001b90:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
        if (displayRefreshing)
 8001b94:	4e3f      	ldr	r6, [pc, #252]	; (8001c94 <HAL_DSI_EndOfRefreshCallback+0x104>)
    {
 8001b96:	b085      	sub	sp, #20
 8001b98:	4604      	mov	r4, r0
        if (displayRefreshing)
 8001b9a:	7833      	ldrb	r3, [r6, #0]
 8001b9c:	2b00      	cmp	r3, #0
 8001b9e:	d076      	beq.n	8001c8e <HAL_DSI_EndOfRefreshCallback+0xfe>
        {
            if (updateRegion == 0)
 8001ba0:	4d3d      	ldr	r5, [pc, #244]	; (8001c98 <HAL_DSI_EndOfRefreshCallback+0x108>)
 8001ba2:	f8df 8104 	ldr.w	r8, [pc, #260]	; 8001ca8 <HAL_DSI_EndOfRefreshCallback+0x118>
 8001ba6:	f8d5 9000 	ldr.w	r9, [r5]
 8001baa:	4f3c      	ldr	r7, [pc, #240]	; (8001c9c <HAL_DSI_EndOfRefreshCallback+0x10c>)
 8001bac:	f1b9 0f00 	cmp.w	r9, #0
 8001bb0:	d139      	bne.n	8001c26 <HAL_DSI_EndOfRefreshCallback+0x96>
            {
                HAL_Delay(1);
 8001bb2:	2001      	movs	r0, #1
 8001bb4:	f003 ff28 	bl	8005a08 <HAL_Delay>

                // If we transferred the left half, also transfer right half.
                __HAL_DSI_WRAPPER_DISABLE(hdsi);
 8001bb8:	6823      	ldr	r3, [r4, #0]
 8001bba:	f8cd 9000 	str.w	r9, [sp]
 8001bbe:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
                LTDC_LAYER(&hltdc, 0)->CFBAR = ((uint32_t)currFbBase) + (HAL::FRAME_BUFFER_WIDTH / 2) * 3;
 8001bc2:	f8d8 1000 	ldr.w	r1, [r8]
                __HAL_DSI_WRAPPER_DISABLE(hdsi);
 8001bc6:	f022 0208 	bic.w	r2, r2, #8
                LTDC_LAYER(&hltdc, 0)->CFBAR = ((uint32_t)currFbBase) + (HAL::FRAME_BUFFER_WIDTH / 2) * 3;
 8001bca:	6838      	ldr	r0, [r7, #0]
 8001bcc:	f101 0684 	add.w	r6, r1, #132	; 0x84
                __HAL_DSI_WRAPPER_DISABLE(hdsi);
 8001bd0:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 8001bd4:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 8001bd8:	f002 0208 	and.w	r2, r2, #8
 8001bdc:	9200      	str	r2, [sp, #0]
 8001bde:	9a00      	ldr	r2, [sp, #0]
                LTDC_LAYER(&hltdc, 0)->CFBAR = ((uint32_t)currFbBase) + (HAL::FRAME_BUFFER_WIDTH / 2) * 3;
 8001be0:	4a2f      	ldr	r2, [pc, #188]	; (8001ca0 <HAL_DSI_EndOfRefreshCallback+0x110>)
 8001be2:	8812      	ldrh	r2, [r2, #0]
 8001be4:	0852      	lsrs	r2, r2, #1
 8001be6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8001bea:	4402      	add	r2, r0
 8001bec:	62b2      	str	r2, [r6, #40]	; 0x28
                __HAL_LTDC_RELOAD_IMMEDIATE_CONFIG(&hltdc);
 8001bee:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8001bf0:	f042 0201 	orr.w	r2, r2, #1
 8001bf4:	624a      	str	r2, [r1, #36]	; 0x24
                __HAL_DSI_WRAPPER_ENABLE(hdsi);
 8001bf6:	f8cd 9004 	str.w	r9, [sp, #4]
 8001bfa:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 8001bfe:	f042 0208 	orr.w	r2, r2, #8
 8001c02:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 8001c06:	f8d3 3404 	ldr.w	r3, [r3, #1028]	; 0x404
 8001c0a:	f003 0308 	and.w	r3, r3, #8
 8001c0e:	9301      	str	r3, [sp, #4]
 8001c10:	9b01      	ldr	r3, [sp, #4]

                LCD_SetUpdateRegionRight(); //Set display column to 400-799
 8001c12:	f7ff ff79 	bl	8001b08 <LCD_SetUpdateRegionRight>
                updateRegion = 1;
 8001c16:	2301      	movs	r3, #1
                HAL_DSI_Refresh(hdsi);
 8001c18:	4620      	mov	r0, r4
                updateRegion = 1;
 8001c1a:	602b      	str	r3, [r5, #0]
                    // Signal to the framework that display update has finished.
                    HAL::getInstance()->frontPorchEntered();
                }
            }
        }
    }
 8001c1c:	b005      	add	sp, #20
 8001c1e:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
                HAL_DSI_Refresh(hdsi);
 8001c22:	f004 bc18 	b.w	8006456 <HAL_DSI_Refresh>
                __HAL_DSI_WRAPPER_DISABLE(hdsi);
 8001c26:	6803      	ldr	r3, [r0, #0]
 8001c28:	2500      	movs	r5, #0
                LTDC_LAYER(&hltdc, 0)->CFBAR = (uint32_t)currFbBase;
 8001c2a:	6838      	ldr	r0, [r7, #0]
                __HAL_DSI_WRAPPER_DISABLE(hdsi);
 8001c2c:	9502      	str	r5, [sp, #8]
 8001c2e:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 8001c32:	f022 0208 	bic.w	r2, r2, #8
 8001c36:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 8001c3a:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 8001c3e:	f002 0208 	and.w	r2, r2, #8
 8001c42:	9202      	str	r2, [sp, #8]
 8001c44:	9a02      	ldr	r2, [sp, #8]
                LTDC_LAYER(&hltdc, 0)->CFBAR = (uint32_t)currFbBase;
 8001c46:	f8d8 2000 	ldr.w	r2, [r8]
 8001c4a:	f8c2 00ac 	str.w	r0, [r2, #172]	; 0xac
                GPIO::clear(GPIO::VSYNC_FREQ);
 8001c4e:	4628      	mov	r0, r5
                __HAL_LTDC_RELOAD_IMMEDIATE_CONFIG(&hltdc);
 8001c50:	6a51      	ldr	r1, [r2, #36]	; 0x24
 8001c52:	f041 0101 	orr.w	r1, r1, #1
 8001c56:	6251      	str	r1, [r2, #36]	; 0x24
                __HAL_DSI_WRAPPER_ENABLE(hdsi);
 8001c58:	9503      	str	r5, [sp, #12]
 8001c5a:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 8001c5e:	f042 0208 	orr.w	r2, r2, #8
 8001c62:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 8001c66:	f8d3 3404 	ldr.w	r3, [r3, #1028]	; 0x404
 8001c6a:	f003 0308 	and.w	r3, r3, #8
 8001c6e:	9303      	str	r3, [sp, #12]
 8001c70:	9b03      	ldr	r3, [sp, #12]
                GPIO::clear(GPIO::VSYNC_FREQ);
 8001c72:	f7ff fd59 	bl	8001728 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
                LCD_ReqEnable();
 8001c76:	f7ff ff21 	bl	8001abc <LCD_ReqEnable>
        return instance;
 8001c7a:	4b0a      	ldr	r3, [pc, #40]	; (8001ca4 <HAL_DSI_EndOfRefreshCallback+0x114>)
                displayRefreshing = false;
 8001c7c:	7035      	strb	r5, [r6, #0]
 8001c7e:	6818      	ldr	r0, [r3, #0]
                if (HAL::getInstance())
 8001c80:	b128      	cbz	r0, 8001c8e <HAL_DSI_EndOfRefreshCallback+0xfe>
        allowDMATransfers();
 8001c82:	6803      	ldr	r3, [r0, #0]
 8001c84:	6a1b      	ldr	r3, [r3, #32]
    }
 8001c86:	b005      	add	sp, #20
 8001c88:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001c8c:	4718      	bx	r3
 8001c8e:	b005      	add	sp, #20
 8001c90:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001c94:	2400040d 	.word	0x2400040d
 8001c98:	240003f8 	.word	0x240003f8
 8001c9c:	240003f4 	.word	0x240003f4
 8001ca0:	2400e076 	.word	0x2400e076
 8001ca4:	2400e07c 	.word	0x2400e07c
 8001ca8:	24000214 	.word	0x24000214

08001cac <IdleTaskHook>:

    portBASE_TYPE IdleTaskHook(void* p)
    {
 8001cac:	4601      	mov	r1, r0
 8001cae:	b508      	push	{r3, lr}
        return instance;
 8001cb0:	4b03      	ldr	r3, [pc, #12]	; (8001cc0 <IdleTaskHook+0x14>)
 8001cb2:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
 8001cb4:	b101      	cbz	r1, 8001cb8 <IdleTaskHook+0xc>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
 8001cb6:	2101      	movs	r1, #1
        }
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
 8001cb8:	f00b fc46 	bl	800d548 <_ZN8touchgfx3HAL12setMCUActiveEb>
        }
        return pdTRUE;
    }
 8001cbc:	2001      	movs	r0, #1
 8001cbe:	bd08      	pop	{r3, pc}
 8001cc0:	2400e07c 	.word	0x2400e07c

08001cc4 <_GLOBAL__sub_I_displayRefreshing>:
          cc_in(0)
 8001cc4:	4b03      	ldr	r3, [pc, #12]	; (8001cd4 <_GLOBAL__sub_I_displayRefreshing+0x10>)
 8001cc6:	2200      	movs	r2, #0
 8001cc8:	605a      	str	r2, [r3, #4]
 8001cca:	609a      	str	r2, [r3, #8]
 8001ccc:	4a02      	ldr	r2, [pc, #8]	; (8001cd8 <_GLOBAL__sub_I_displayRefreshing+0x14>)
 8001cce:	601a      	str	r2, [r3, #0]

}
 8001cd0:	4770      	bx	lr
 8001cd2:	bf00      	nop
 8001cd4:	240003fc 	.word	0x240003fc
 8001cd8:	08020e8c 	.word	0x08020e8c

08001cdc <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001cdc:	2101      	movs	r1, #1
 8001cde:	2200      	movs	r2, #0
{
 8001ce0:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001ce2:	4608      	mov	r0, r1
 8001ce4:	f007 fda3 	bl	800982e <osSemaphoreNew>
 8001ce8:	4b0a      	ldr	r3, [pc, #40]	; (8001d14 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8001cea:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8001cec:	b928      	cbnz	r0, 8001cfa <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8001cee:	4b0a      	ldr	r3, [pc, #40]	; (8001d18 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8001cf0:	2128      	movs	r1, #40	; 0x28
 8001cf2:	4a0a      	ldr	r2, [pc, #40]	; (8001d1c <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001cf4:	480a      	ldr	r0, [pc, #40]	; (8001d20 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8001cf6:	f01d ff6f 	bl	801fbd8 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8001cfa:	2200      	movs	r2, #0
 8001cfc:	2104      	movs	r1, #4
 8001cfe:	2001      	movs	r0, #1
 8001d00:	f007 fe32 	bl	8009968 <osMessageQueueNew>
 8001d04:	4b07      	ldr	r3, [pc, #28]	; (8001d24 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8001d06:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001d08:	b918      	cbnz	r0, 8001d12 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8001d0a:	4b07      	ldr	r3, [pc, #28]	; (8001d28 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8001d0c:	212c      	movs	r1, #44	; 0x2c
 8001d0e:	4a03      	ldr	r2, [pc, #12]	; (8001d1c <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8001d10:	e7f0      	b.n	8001cf4 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8001d12:	bd08      	pop	{r3, pc}
 8001d14:	24000414 	.word	0x24000414
 8001d18:	080211a4 	.word	0x080211a4
 8001d1c:	080211ed 	.word	0x080211ed
 8001d20:	0802121c 	.word	0x0802121c
 8001d24:	24000410 	.word	0x24000410
 8001d28:	08021265 	.word	0x08021265

08001d2c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8001d2c:	4b02      	ldr	r3, [pc, #8]	; (8001d38 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8001d2e:	f04f 31ff 	mov.w	r1, #4294967295
 8001d32:	6818      	ldr	r0, [r3, #0]
 8001d34:	f007 bdc5 	b.w	80098c2 <osSemaphoreAcquire>
 8001d38:	24000414 	.word	0x24000414

08001d3c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8001d3c:	4b01      	ldr	r3, [pc, #4]	; (8001d44 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8001d3e:	6818      	ldr	r0, [r3, #0]
 8001d40:	f007 bdea 	b.w	8009918 <osSemaphoreRelease>
 8001d44:	24000414 	.word	0x24000414

08001d48 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8001d48:	4b02      	ldr	r3, [pc, #8]	; (8001d54 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8001d4a:	2100      	movs	r1, #0
 8001d4c:	6818      	ldr	r0, [r3, #0]
 8001d4e:	f007 bdb8 	b.w	80098c2 <osSemaphoreAcquire>
 8001d52:	bf00      	nop
 8001d54:	24000414 	.word	0x24000414

08001d58 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8001d58:	f7ff bff0 	b.w	8001d3c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08001d5c <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8001d5c:	2300      	movs	r3, #0
 8001d5e:	4803      	ldr	r0, [pc, #12]	; (8001d6c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8001d60:	4903      	ldr	r1, [pc, #12]	; (8001d70 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8001d62:	461a      	mov	r2, r3
 8001d64:	6800      	ldr	r0, [r0, #0]
 8001d66:	f007 be3a 	b.w	80099de <osMessageQueuePut>
 8001d6a:	bf00      	nop
 8001d6c:	24000410 	.word	0x24000410
 8001d70:	24000010 	.word	0x24000010

08001d74 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8001d74:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8001d76:	2300      	movs	r3, #0
 8001d78:	4c07      	ldr	r4, [pc, #28]	; (8001d98 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8001d7a:	a901      	add	r1, sp, #4
 8001d7c:	461a      	mov	r2, r3
 8001d7e:	6820      	ldr	r0, [r4, #0]
 8001d80:	f007 fe5d 	bl	8009a3e <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8001d84:	f04f 33ff 	mov.w	r3, #4294967295
 8001d88:	2200      	movs	r2, #0
 8001d8a:	a901      	add	r1, sp, #4
 8001d8c:	6820      	ldr	r0, [r4, #0]
 8001d8e:	f007 fe56 	bl	8009a3e <osMessageQueueGet>
}
 8001d92:	b002      	add	sp, #8
 8001d94:	bd10      	pop	{r4, pc}
 8001d96:	bf00      	nop
 8001d98:	24000410 	.word	0x24000410

08001d9c <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8001d9c:	6803      	ldr	r3, [r0, #0]
 8001d9e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001da0:	4718      	bx	r3

08001da2 <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8001da2:	2001      	movs	r0, #1
 8001da4:	4770      	bx	lr

08001da6 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8001da6:	6803      	ldr	r3, [r0, #0]
 8001da8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001daa:	4718      	bx	r3

08001dac <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8001dac:	f240 30ef 	movw	r0, #1007	; 0x3ef
 8001db0:	4770      	bx	lr
	...

08001db4 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8001db4:	4b05      	ldr	r3, [pc, #20]	; (8001dcc <_ZN8STM32DMAD1Ev+0x18>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001db6:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001dba:	6003      	str	r3, [r0, #0]
 8001dbc:	4b04      	ldr	r3, [pc, #16]	; (8001dd0 <_ZN8STM32DMAD1Ev+0x1c>)
 8001dbe:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001dc2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001dc6:	f3bf 8f6f 	isb	sy
}
 8001dca:	4770      	bx	lr
 8001dcc:	08021400 	.word	0x08021400
 8001dd0:	e000e100 	.word	0xe000e100

08001dd4 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8001dd4:	b510      	push	{r4, lr}
 8001dd6:	4604      	mov	r4, r0
}
 8001dd8:	f44f 615a 	mov.w	r1, #3488	; 0xda0
 8001ddc:	f7ff ffea 	bl	8001db4 <_ZN8STM32DMAD1Ev>
 8001de0:	4620      	mov	r0, r4
 8001de2:	f01d fd1c 	bl	801f81e <_ZdlPvj>
 8001de6:	4620      	mov	r0, r4
 8001de8:	bd10      	pop	{r4, pc}
	...

08001dec <_ZN8STM32DMA10initializeEv>:
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001dec:	4b0f      	ldr	r3, [pc, #60]	; (8001e2c <_ZN8STM32DMA10initializeEv+0x40>)
{
 8001dee:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001df0:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 8001df4:	f042 0210 	orr.w	r2, r2, #16
 8001df8:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
 8001dfc:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 8001e00:	f002 0210 	and.w	r2, r2, #16
 8001e04:	9201      	str	r2, [sp, #4]
 8001e06:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8001e08:	6fda      	ldr	r2, [r3, #124]	; 0x7c
 8001e0a:	f042 0210 	orr.w	r2, r2, #16
 8001e0e:	67da      	str	r2, [r3, #124]	; 0x7c
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8001e10:	6fda      	ldr	r2, [r3, #124]	; 0x7c
 8001e12:	f022 0210 	bic.w	r2, r2, #16
 8001e16:	67da      	str	r2, [r3, #124]	; 0x7c
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8001e18:	4b05      	ldr	r3, [pc, #20]	; (8001e30 <_ZN8STM32DMA10initializeEv+0x44>)
 8001e1a:	4a06      	ldr	r2, [pc, #24]	; (8001e34 <_ZN8STM32DMA10initializeEv+0x48>)
 8001e1c:	621a      	str	r2, [r3, #32]
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001e1e:	4b06      	ldr	r3, [pc, #24]	; (8001e38 <_ZN8STM32DMA10initializeEv+0x4c>)
 8001e20:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001e24:	609a      	str	r2, [r3, #8]
}
 8001e26:	b002      	add	sp, #8
 8001e28:	4770      	bx	lr
 8001e2a:	bf00      	nop
 8001e2c:	58024400 	.word	0x58024400
 8001e30:	24000190 	.word	0x24000190
 8001e34:	08001e3d 	.word	0x08001e3d
 8001e38:	e000e100 	.word	0xe000e100

08001e3c <DMA2D_XferCpltCallback>:
 8001e3c:	4b02      	ldr	r3, [pc, #8]	; (8001e48 <DMA2D_XferCpltCallback+0xc>)
 8001e3e:	681b      	ldr	r3, [r3, #0]
 8001e40:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8001e42:	6803      	ldr	r3, [r0, #0]
 8001e44:	695b      	ldr	r3, [r3, #20]
 8001e46:	4718      	bx	r3
 8001e48:	2400e07c 	.word	0x2400e07c

08001e4c <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8001e4c:	b570      	push	{r4, r5, r6, lr}
 8001e4e:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8001e50:	4b0a      	ldr	r3, [pc, #40]	; (8001e7c <_ZN8STM32DMAC1Ev+0x30>)
 8001e52:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8001e54:	2600      	movs	r6, #0
 8001e56:	4625      	mov	r5, r4
 8001e58:	2260      	movs	r2, #96	; 0x60
 8001e5a:	6060      	str	r0, [r4, #4]
 8001e5c:	7226      	strb	r6, [r4, #8]
 8001e5e:	7266      	strb	r6, [r4, #9]
 8001e60:	f845 3b20 	str.w	r3, [r5], #32
 8001e64:	4629      	mov	r1, r5
 8001e66:	f00b fcd5 	bl	800d814 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8001e6a:	f504 635a 	add.w	r3, r4, #3488	; 0xda0
        : color(0)
 8001e6e:	60ee      	str	r6, [r5, #12]
 8001e70:	3524      	adds	r5, #36	; 0x24
 8001e72:	42ab      	cmp	r3, r5
 8001e74:	d1fb      	bne.n	8001e6e <_ZN8STM32DMAC1Ev+0x22>
}
 8001e76:	4620      	mov	r0, r4
 8001e78:	bd70      	pop	{r4, r5, r6, pc}
 8001e7a:	bf00      	nop
 8001e7c:	08021400 	.word	0x08021400

08001e80 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8001e80:	b508      	push	{r3, lr}
    switch (format)
 8001e82:	290b      	cmp	r1, #11
 8001e84:	d80b      	bhi.n	8001e9e <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1e>
 8001e86:	e8df f001 	tbb	[pc, r1]
 8001e8a:	0612      	.short	0x0612
 8001e8c:	0a0a0a10 	.word	0x0a0a0a10
 8001e90:	0808080a 	.word	0x0808080a
 8001e94:	0808      	.short	0x0808
 8001e96:	2001      	movs	r0, #1
}
 8001e98:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8001e9a:	2005      	movs	r0, #5
        break;
 8001e9c:	e7fc      	b.n	8001e98 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        assert(0 && "Unsupported Format!");
 8001e9e:	4b05      	ldr	r3, [pc, #20]	; (8001eb4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8001ea0:	2166      	movs	r1, #102	; 0x66
 8001ea2:	4a05      	ldr	r2, [pc, #20]	; (8001eb8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8001ea4:	4805      	ldr	r0, [pc, #20]	; (8001ebc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x3c>)
 8001ea6:	f01d fe97 	bl	801fbd8 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8001eaa:	2000      	movs	r0, #0
 8001eac:	e7f4      	b.n	8001e98 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8001eae:	2002      	movs	r0, #2
    return dma2dColorMode;
 8001eb0:	e7f2      	b.n	8001e98 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8001eb2:	bf00      	nop
 8001eb4:	080212a7 	.word	0x080212a7
 8001eb8:	080212c2 	.word	0x080212c2
 8001ebc:	0802130c 	.word	0x0802130c

08001ec0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8001ec0:	b508      	push	{r3, lr}
    switch (format)
 8001ec2:	290a      	cmp	r1, #10
 8001ec4:	d809      	bhi.n	8001eda <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1a>
 8001ec6:	e8df f001 	tbb	[pc, r1]
 8001eca:	0610      	.short	0x0610
 8001ecc:	0808080e 	.word	0x0808080e
 8001ed0:	06060608 	.word	0x06060608
 8001ed4:	06          	.byte	0x06
 8001ed5:	00          	.byte	0x00
 8001ed6:	2001      	movs	r0, #1
}
 8001ed8:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8001eda:	4b05      	ldr	r3, [pc, #20]	; (8001ef0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x30>)
 8001edc:	2187      	movs	r1, #135	; 0x87
 8001ede:	4a05      	ldr	r2, [pc, #20]	; (8001ef4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8001ee0:	4805      	ldr	r0, [pc, #20]	; (8001ef8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8001ee2:	f01d fe79 	bl	801fbd8 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8001ee6:	2000      	movs	r0, #0
 8001ee8:	e7f6      	b.n	8001ed8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8001eea:	2002      	movs	r0, #2
    return dma2dColorMode;
 8001eec:	e7f4      	b.n	8001ed8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8001eee:	bf00      	nop
 8001ef0:	080212a7 	.word	0x080212a7
 8001ef4:	08021353 	.word	0x08021353
 8001ef8:	0802130c 	.word	0x0802130c

08001efc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 8001efc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001f00:	7f4f      	ldrb	r7, [r1, #29]
{
 8001f02:	460c      	mov	r4, r1
 8001f04:	4681      	mov	r9, r0
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001f06:	4639      	mov	r1, r7
 8001f08:	f7ff ffba 	bl	8001e80 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001f0c:	f894 801e 	ldrb.w	r8, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001f10:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001f12:	4648      	mov	r0, r9
 8001f14:	4641      	mov	r1, r8
 8001f16:	f7ff ffb3 	bl	8001e80 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001f1a:	4641      	mov	r1, r8
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001f1c:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001f1e:	4648      	mov	r0, r9
 8001f20:	f7ff ffce 	bl	8001ec0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001f24:	8aa1      	ldrh	r1, [r4, #20]
 8001f26:	8b62      	ldrh	r2, [r4, #26]
 8001f28:	4b42      	ldr	r3, [pc, #264]	; (8002034 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8001f2a:	1a52      	subs	r2, r2, r1
 8001f2c:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001f2e:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8001f30:	8b22      	ldrh	r2, [r4, #24]
 8001f32:	1a52      	subs	r2, r2, r1
 8001f34:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001f36:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8001f38:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001f3a:	ea42 4201 	orr.w	r2, r2, r1, lsl #16

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001f3e:	6920      	ldr	r0, [r4, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001f40:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8001f42:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001f44:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8001f46:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8001f48:	6821      	ldr	r1, [r4, #0]
    {
    case BLIT_OP_COPY_A4:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001f4a:	f894 c01c 	ldrb.w	ip, [r4, #28]
    switch (blitOp.operation)
 8001f4e:	2980      	cmp	r1, #128	; 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001f50:	ea4f 620c 	mov.w	r2, ip, lsl #24
    switch (blitOp.operation)
 8001f54:	d026      	beq.n	8001fa4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa8>
 8001f56:	d810      	bhi.n	8001f7a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7e>
 8001f58:	2920      	cmp	r1, #32
 8001f5a:	ea45 0402 	orr.w	r4, r5, r2
 8001f5e:	d062      	beq.n	8002026 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x12a>
 8001f60:	2940      	cmp	r1, #64	; 0x40
 8001f62:	d060      	beq.n	8002026 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x12a>
 8001f64:	2904      	cmp	r1, #4
 8001f66:	d05e      	beq.n	8002026 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x12a>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001f68:	432a      	orrs	r2, r5
 8001f6a:	4b32      	ldr	r3, [pc, #200]	; (8002034 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8001f6c:	4547      	cmp	r7, r8
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001f6e:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8001f72:	61da      	str	r2, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8001f74:	d05b      	beq.n	800202e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x132>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8001f76:	4a30      	ldr	r2, [pc, #192]	; (8002038 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8001f78:	e040      	b.n	8001ffc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
    switch (blitOp.operation)
 8001f7a:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 8001f7e:	d007      	beq.n	8001f90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x94>
 8001f80:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8001f84:	d1f0      	bne.n	8001f68 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001f86:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8001f8a:	f042 0209 	orr.w	r2, r2, #9
 8001f8e:	e003      	b.n	8001f98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001f90:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8001f94:	f042 020a 	orr.w	r2, r2, #10
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001f98:	61da      	str	r2, [r3, #28]
        return color;
 8001f9a:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8001f9c:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001f9e:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001fa0:	6158      	str	r0, [r3, #20]
 8001fa2:	e02a      	b.n	8001ffa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfe>
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001fa4:	432a      	orrs	r2, r5
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8001fa6:	68a4      	ldr	r4, [r4, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001fa8:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8001fac:	61da      	str	r2, [r3, #28]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8001fae:	1d22      	adds	r2, r4, #4
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001fb0:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001fb2:	6158      	str	r0, [r3, #20]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8001fb4:	62da      	str	r2, [r3, #44]	; 0x2c
            switch ((Bitmap::ClutFormat)palette->format)
 8001fb6:	7822      	ldrb	r2, [r4, #0]
 8001fb8:	b142      	cbz	r2, 8001fcc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd0>
 8001fba:	2a01      	cmp	r2, #1
 8001fbc:	d021      	beq.n	8002002 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x106>
                assert(0 && "Unsupported format");
 8001fbe:	4b1f      	ldr	r3, [pc, #124]	; (800203c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8001fc0:	f240 1101 	movw	r1, #257	; 0x101
 8001fc4:	4a1e      	ldr	r2, [pc, #120]	; (8002040 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 8001fc6:	481f      	ldr	r0, [pc, #124]	; (8002044 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8001fc8:	f01d fe06 	bl	801fbd8 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001fcc:	69da      	ldr	r2, [r3, #28]
            bool blend = true;
 8001fce:	2001      	movs	r0, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001fd0:	8861      	ldrh	r1, [r4, #2]
 8001fd2:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8001fd6:	3901      	subs	r1, #1
 8001fd8:	f022 0210 	bic.w	r2, r2, #16
 8001fdc:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8001fe0:	61da      	str	r2, [r3, #28]
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8001fe2:	4b14      	ldr	r3, [pc, #80]	; (8002034 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8001fe4:	69da      	ldr	r2, [r3, #28]
 8001fe6:	f042 0220 	orr.w	r2, r2, #32
 8001fea:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8001fec:	69da      	ldr	r2, [r3, #28]
 8001fee:	0692      	lsls	r2, r2, #26
 8001ff0:	d4fc      	bmi.n	8001fec <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf0>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8001ff2:	2210      	movs	r2, #16
 8001ff4:	609a      	str	r2, [r3, #8]
            if(blend)
 8001ff6:	2800      	cmp	r0, #0
 8001ff8:	d0bd      	beq.n	8001f76 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7a>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8001ffa:	4a13      	ldr	r2, [pc, #76]	; (8002048 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8001ffc:	601a      	str	r2, [r3, #0]
        }

        break;
    }
}
 8001ffe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8002002:	8862      	ldrh	r2, [r4, #2]
                if(blitOp.alpha == 255)
 8002004:	f1bc 00ff 	subs.w	r0, ip, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8002008:	69d9      	ldr	r1, [r3, #28]
 800200a:	f102 34ff 	add.w	r4, r2, #4294967295
                if(blitOp.alpha == 255)
 800200e:	bf18      	it	ne
 8002010:	2001      	movne	r0, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8002012:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8002016:	f022 0210 	bic.w	r2, r2, #16
 800201a:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
 800201e:	f042 0210 	orr.w	r2, r2, #16
 8002022:	61da      	str	r2, [r3, #28]
                break;
 8002024:	e7dd      	b.n	8001fe2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8002026:	f444 3400 	orr.w	r4, r4, #131072	; 0x20000
 800202a:	61dc      	str	r4, [r3, #28]
 800202c:	e7b7      	b.n	8001f9e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 800202e:	f240 2201 	movw	r2, #513	; 0x201
 8002032:	e7e3      	b.n	8001ffc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
 8002034:	52001000 	.word	0x52001000
 8002038:	00010201 	.word	0x00010201
 800203c:	0802139e 	.word	0x0802139e
 8002040:	080213b8 	.word	0x080213b8
 8002044:	0802130c 	.word	0x0802130c
 8002048:	00020201 	.word	0x00020201

0800204c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 800204c:	b570      	push	{r4, r5, r6, lr}
 800204e:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8002050:	7f89      	ldrb	r1, [r1, #30]
 8002052:	f7ff ff35 	bl	8001ec0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8002056:	4b12      	ldr	r3, [pc, #72]	; (80020a0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x54>)

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8002058:	8aa5      	ldrh	r5, [r4, #20]
 800205a:	8ae1      	ldrh	r1, [r4, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 800205c:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 800205e:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8002062:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8002064:	1b52      	subs	r2, r2, r5
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8002066:	6459      	str	r1, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8002068:	6921      	ldr	r1, [r4, #16]
 800206a:	63d9      	str	r1, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 800206c:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 800206e:	6826      	ldr	r6, [r4, #0]
 8002070:	68e5      	ldr	r5, [r4, #12]
 8002072:	2e08      	cmp	r6, #8
 8002074:	d10d      	bne.n	8002092 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8002076:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8002078:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800207a:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_BGPFCCR_ALPHA));
 800207c:	4a09      	ldr	r2, [pc, #36]	; (80020a4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x58>)
 800207e:	7f20      	ldrb	r0, [r4, #28]
 8002080:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8002084:	61da      	str	r2, [r3, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8002086:	4a08      	ldr	r2, [pc, #32]	; (80020a8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x5c>)
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8002088:	621d      	str	r5, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800208a:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800208c:	60d9      	str	r1, [r3, #12]

        // set color
        WRITE_REG(DMA2D->OCOLR, blitOp.color);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 800208e:	601a      	str	r2, [r3, #0]
    }
}
 8002090:	bd70      	pop	{r4, r5, r6, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8002092:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8002094:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8002096:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8002098:	4a04      	ldr	r2, [pc, #16]	; (80020ac <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x60>)
        WRITE_REG(DMA2D->OCOLR, blitOp.color);
 800209a:	639d      	str	r5, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 800209c:	e7f7      	b.n	800208e <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 800209e:	bf00      	nop
 80020a0:	52001000 	.word	0x52001000
 80020a4:	00010009 	.word	0x00010009
 80020a8:	00020201 	.word	0x00020201
 80020ac:	00030201 	.word	0x00030201

080020b0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 80020b0:	2001      	movs	r0, #1
 80020b2:	4770      	bx	lr

080020b4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 80020b4:	2038      	movs	r0, #56	; 0x38
 80020b6:	4770      	bx	lr

080020b8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 80020b8:	2338      	movs	r3, #56	; 0x38
 80020ba:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80020be:	3008      	adds	r0, #8
 80020c0:	4770      	bx	lr

080020c2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 80020c2:	2338      	movs	r3, #56	; 0x38
 80020c4:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80020c8:	3008      	adds	r0, #8
 80020ca:	4770      	bx	lr

080020cc <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11InitialViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80020cc:	2001      	movs	r0, #1
 80020ce:	4770      	bx	lr

080020d0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11InitialViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80020d0:	f243 10d4 	movw	r0, #12756	; 0x31d4
 80020d4:	4770      	bx	lr

080020d6 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11InitialViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80020d6:	f243 13d4 	movw	r3, #12756	; 0x31d4
 80020da:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80020de:	3008      	adds	r0, #8
 80020e0:	4770      	bx	lr

080020e2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11InitialViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80020e2:	f243 13d4 	movw	r3, #12756	; 0x31d4
 80020e6:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80020ea:	3008      	adds	r0, #8
 80020ec:	4770      	bx	lr

080020ee <_ZNK8touchgfx9PartitionINS_4meta8TypeListI14BlankPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80020ee:	2001      	movs	r0, #1
 80020f0:	4770      	bx	lr

080020f2 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14BlankPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80020f2:	2010      	movs	r0, #16
 80020f4:	4770      	bx	lr

080020f6 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14BlankPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80020f6:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80020fa:	3008      	adds	r0, #8
 80020fc:	4770      	bx	lr

080020fe <_ZNK8touchgfx9PartitionINS_4meta8TypeListI14BlankPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80020fe:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8002102:	3008      	adds	r0, #8
 8002104:	4770      	bx	lr

08002106 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoInitialScreenNoTransition();
 8002106:	4608      	mov	r0, r1
 8002108:	f000 bfec 	b.w	80030e4 <_ZN23FrontendApplicationBase29gotoInitialScreenNoTransitionEv>

0800210c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 800210c:	4b03      	ldr	r3, [pc, #12]	; (800211c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 800210e:	b510      	push	{r4, lr}
 8002110:	4604      	mov	r4, r0
 8002112:	6003      	str	r3, [r0, #0]
 8002114:	f009 fc78 	bl	800ba08 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002118:	4620      	mov	r0, r4
 800211a:	bd10      	pop	{r4, pc}
 800211c:	080214b8 	.word	0x080214b8

08002120 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8002120:	b510      	push	{r4, lr}
 8002122:	4604      	mov	r4, r0
 8002124:	f7ff fff2 	bl	800210c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8002128:	2140      	movs	r1, #64	; 0x40
 800212a:	4620      	mov	r0, r4
 800212c:	f01d fb77 	bl	801f81e <_ZdlPvj>
 8002130:	4620      	mov	r0, r4
 8002132:	bd10      	pop	{r4, pc}

08002134 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11InitialViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8002134:	4b03      	ldr	r3, [pc, #12]	; (8002144 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11InitialViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8002136:	b510      	push	{r4, lr}
 8002138:	4604      	mov	r4, r0
 800213a:	6003      	str	r3, [r0, #0]
 800213c:	f009 fc64 	bl	800ba08 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002140:	4620      	mov	r0, r4
 8002142:	bd10      	pop	{r4, pc}
 8002144:	08021484 	.word	0x08021484

08002148 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11InitialViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8002148:	b510      	push	{r4, lr}
 800214a:	4604      	mov	r4, r0
 800214c:	f7ff fff2 	bl	8002134 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11InitialViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002150:	f243 11dc 	movw	r1, #12764	; 0x31dc
 8002154:	4620      	mov	r0, r4
 8002156:	f01d fb62 	bl	801f81e <_ZdlPvj>
 800215a:	4620      	mov	r0, r4
 800215c:	bd10      	pop	{r4, pc}
	...

08002160 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14BlankPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8002160:	4b03      	ldr	r3, [pc, #12]	; (8002170 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14BlankPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8002162:	b510      	push	{r4, lr}
 8002164:	4604      	mov	r4, r0
 8002166:	6003      	str	r3, [r0, #0]
 8002168:	f009 fc4e 	bl	800ba08 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800216c:	4620      	mov	r0, r4
 800216e:	bd10      	pop	{r4, pc}
 8002170:	08021450 	.word	0x08021450

08002174 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14BlankPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8002174:	b510      	push	{r4, lr}
 8002176:	4604      	mov	r4, r0
 8002178:	f7ff fff2 	bl	8002160 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14BlankPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800217c:	2118      	movs	r1, #24
 800217e:	4620      	mov	r0, r4
 8002180:	f01d fb4d 	bl	801f81e <_ZdlPvj>
 8002184:	4620      	mov	r0, r4
 8002186:	bd10      	pop	{r4, pc}

08002188 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8002188:	4b09      	ldr	r3, [pc, #36]	; (80021b0 <_ZN12FrontendHeapD1Ev+0x28>)
 800218a:	b510      	push	{r4, lr}
 800218c:	4604      	mov	r4, r0
 800218e:	6003      	str	r3, [r0, #0]
 8002190:	f500 5048 	add.w	r0, r0, #12800	; 0x3200
 8002194:	3008      	adds	r0, #8
 8002196:	f7ff ffb9 	bl	800210c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 800219a:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 800219e:	f7ff ffc9 	bl	8002134 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11InitialViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80021a2:	f104 0014 	add.w	r0, r4, #20
 80021a6:	f7ff ffdb 	bl	8002160 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14BlankPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80021aa:	4620      	mov	r0, r4
 80021ac:	bd10      	pop	{r4, pc}
 80021ae:	bf00      	nop
 80021b0:	080214ec 	.word	0x080214ec

080021b4 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 80021b4:	b508      	push	{r3, lr}
 80021b6:	4802      	ldr	r0, [pc, #8]	; (80021c0 <__tcf_0+0xc>)
 80021b8:	f7ff ffe6 	bl	8002188 <_ZN12FrontendHeapD1Ev>
 80021bc:	bd08      	pop	{r3, pc}
 80021be:	bf00      	nop
 80021c0:	2400041c 	.word	0x2400041c

080021c4 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 80021c4:	b510      	push	{r4, lr}
 80021c6:	4604      	mov	r4, r0
 80021c8:	f7ff ffde 	bl	8002188 <_ZN12FrontendHeapD1Ev>
 80021cc:	f243 31b0 	movw	r1, #13232	; 0x33b0
 80021d0:	4620      	mov	r0, r4
 80021d2:	f01d fb24 	bl	801f81e <_ZdlPvj>
 80021d6:	4620      	mov	r0, r4
 80021d8:	bd10      	pop	{r4, pc}
	...

080021dc <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 800, 480);

void touchgfx_init()
{
 80021dc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 80021e0:	f000 f934 	bl	800244c <_ZN14BitmapDatabase11getInstanceEv>
 80021e4:	2400      	movs	r4, #0
 80021e6:	4605      	mov	r5, r0
 80021e8:	f000 f934 	bl	8002454 <_ZN14BitmapDatabase15getInstanceSizeEv>
 80021ec:	4623      	mov	r3, r4
 80021ee:	4601      	mov	r1, r0
 80021f0:	4622      	mov	r2, r4
 80021f2:	4628      	mov	r0, r5
 80021f4:	9400      	str	r4, [sp, #0]
 80021f6:	f012 fc6f 	bl	8014ad8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 80021fa:	4b26      	ldr	r3, [pc, #152]	; (8002294 <touchgfx_init+0xb8>)
 80021fc:	4a26      	ldr	r2, [pc, #152]	; (8002298 <touchgfx_init+0xbc>)
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 80021fe:	4620      	mov	r0, r4
        static FrontendHeap instance;
 8002200:	4d26      	ldr	r5, [pc, #152]	; (800229c <touchgfx_init+0xc0>)
 8002202:	601a      	str	r2, [r3, #0]
 8002204:	f001 fb36 	bl	8003874 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8002208:	4825      	ldr	r0, [pc, #148]	; (80022a0 <touchgfx_init+0xc4>)
 800220a:	f012 fb01 	bl	8014810 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 800220e:	782b      	ldrb	r3, [r5, #0]
 8002210:	f3bf 8f5b 	dmb	ish
 8002214:	07db      	lsls	r3, r3, #31
 8002216:	d436      	bmi.n	8002286 <touchgfx_init+0xaa>
 8002218:	4628      	mov	r0, r5
 800221a:	f01d fb02 	bl	801f822 <__cxa_guard_acquire>
 800221e:	b390      	cbz	r0, 8002286 <touchgfx_init+0xaa>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8002220:	4c20      	ldr	r4, [pc, #128]	; (80022a4 <touchgfx_init+0xc8>)
 8002222:	4f21      	ldr	r7, [pc, #132]	; (80022a8 <touchgfx_init+0xcc>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8002224:	4b21      	ldr	r3, [pc, #132]	; (80022ac <touchgfx_init+0xd0>)
 8002226:	f104 0014 	add.w	r0, r4, #20
 800222a:	f107 0650 	add.w	r6, r7, #80	; 0x50
 800222e:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 8002232:	6023      	str	r3, [r4, #0]
 8002234:	6060      	str	r0, [r4, #4]
 8002236:	f8c4 8008 	str.w	r8, [r4, #8]
 800223a:	60e7      	str	r7, [r4, #12]
 800223c:	6126      	str	r6, [r4, #16]
 800223e:	f009 fbe5 	bl	800ba0c <_ZN8touchgfx17AbstractPartitionC1Ev>
 8002242:	4b1b      	ldr	r3, [pc, #108]	; (80022b0 <touchgfx_init+0xd4>)
 8002244:	4640      	mov	r0, r8
 8002246:	6163      	str	r3, [r4, #20]
 8002248:	f009 fbe0 	bl	800ba0c <_ZN8touchgfx17AbstractPartitionC1Ev>
 800224c:	4b19      	ldr	r3, [pc, #100]	; (80022b4 <touchgfx_init+0xd8>)
 800224e:	4638      	mov	r0, r7
 8002250:	62e3      	str	r3, [r4, #44]	; 0x2c
 8002252:	f009 fbdb 	bl	800ba0c <_ZN8touchgfx17AbstractPartitionC1Ev>
 8002256:	f504 5340 	add.w	r3, r4, #12288	; 0x3000
 800225a:	4a17      	ldr	r2, [pc, #92]	; (80022b8 <touchgfx_init+0xdc>)
 800225c:	f503 7012 	add.w	r0, r3, #584	; 0x248
 8002260:	f8c3 2208 	str.w	r2, [r3, #520]	; 0x208
 8002264:	f001 fcfd 	bl	8003c62 <_ZN5ModelC1Ev>
 8002268:	4622      	mov	r2, r4
 800226a:	f107 0140 	add.w	r1, r7, #64	; 0x40
 800226e:	4630      	mov	r0, r6
 8002270:	f001 fc3c 	bl	8003aec <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8002274:	4630      	mov	r0, r6
 8002276:	f000 ff35 	bl	80030e4 <_ZN23FrontendApplicationBase29gotoInitialScreenNoTransitionEv>
        static FrontendHeap instance;
 800227a:	4810      	ldr	r0, [pc, #64]	; (80022bc <touchgfx_init+0xe0>)
 800227c:	f01d fcca 	bl	801fc14 <atexit>
 8002280:	4628      	mov	r0, r5
 8002282:	f01d fada 	bl	801f83a <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8002286:	480e      	ldr	r0, [pc, #56]	; (80022c0 <touchgfx_init+0xe4>)
}
 8002288:	b002      	add	sp, #8
 800228a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 800228e:	f7ff baa9 	b.w	80017e4 <_ZN11TouchGFXHAL10initializeEv>
 8002292:	bf00      	nop
 8002294:	2400e0f8 	.word	0x2400e0f8
 8002298:	240045ec 	.word	0x240045ec
 800229c:	24000418 	.word	0x24000418
 80022a0:	24000014 	.word	0x24000014
 80022a4:	2400041c 	.word	0x2400041c
 80022a8:	24003624 	.word	0x24003624
 80022ac:	080214ec 	.word	0x080214ec
 80022b0:	08021450 	.word	0x08021450
 80022b4:	08021484 	.word	0x08021484
 80022b8:	080214b8 	.word	0x080214b8
 80022bc:	080021b5 	.word	0x080021b5
 80022c0:	24004570 	.word	0x24004570

080022c4 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 80022c4:	4801      	ldr	r0, [pc, #4]	; (80022cc <touchgfx_taskEntry+0x8>)
 80022c6:	f7ff baa3 	b.w	8001810 <_ZN11TouchGFXHAL9taskEntryEv>
 80022ca:	bf00      	nop
 80022cc:	24004570 	.word	0x24004570

080022d0 <_GLOBAL__sub_I_touchgfx_init>:
}
 80022d0:	b513      	push	{r0, r1, r4, lr}
static STM32DMA dma;
 80022d2:	490c      	ldr	r1, [pc, #48]	; (8002304 <_GLOBAL__sub_I_touchgfx_init+0x34>)
{
public:

    STM32TouchController() {}
 80022d4:	4b0c      	ldr	r3, [pc, #48]	; (8002308 <_GLOBAL__sub_I_touchgfx_init+0x38>)
 80022d6:	4c0d      	ldr	r4, [pc, #52]	; (800230c <_GLOBAL__sub_I_touchgfx_init+0x3c>)
 80022d8:	4608      	mov	r0, r1
 80022da:	6023      	str	r3, [r4, #0]
 80022dc:	f7ff fdb6 	bl	8001e4c <_ZN8STM32DMAC1Ev>
static LCD24bpp display;
 80022e0:	4a0b      	ldr	r2, [pc, #44]	; (8002310 <_GLOBAL__sub_I_touchgfx_init+0x40>)
 80022e2:	4610      	mov	r0, r2
 80022e4:	f014 ff00 	bl	80170e8 <_ZN8touchgfx8LCD24bppC1Ev>
static TouchGFXHAL hal(dma, display, tc, 800, 480);
 80022e8:	f44f 7348 	mov.w	r3, #800	; 0x320
 80022ec:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 80022f0:	4904      	ldr	r1, [pc, #16]	; (8002304 <_GLOBAL__sub_I_touchgfx_init+0x34>)
 80022f2:	4808      	ldr	r0, [pc, #32]	; (8002314 <_GLOBAL__sub_I_touchgfx_init+0x44>)
 80022f4:	e9cd 3200 	strd	r3, r2, [sp]
 80022f8:	4623      	mov	r3, r4
 80022fa:	4a05      	ldr	r2, [pc, #20]	; (8002310 <_GLOBAL__sub_I_touchgfx_init+0x40>)
 80022fc:	f7ff fb1c 	bl	8001938 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
}
 8002300:	b002      	add	sp, #8
 8002302:	bd10      	pop	{r4, pc}
 8002304:	240037d0 	.word	0x240037d0
 8002308:	08020f3c 	.word	0x08020f3c
 800230c:	240037cc 	.word	0x240037cc
 8002310:	240045f0 	.word	0x240045f0
 8002314:	24004570 	.word	0x24004570

08002318 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8002318:	4801      	ldr	r0, [pc, #4]	; (8002320 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 800231a:	f7ff bd4b 	b.w	8001db4 <_ZN8STM32DMAD1Ev>
 800231e:	bf00      	nop
 8002320:	240037d0 	.word	0x240037d0

08002324 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8002324:	4b02      	ldr	r3, [pc, #8]	; (8002330 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 8002326:	2290      	movs	r2, #144	; 0x90
 8002328:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
}
 800232c:	4770      	bx	lr
 800232e:	bf00      	nop
 8002330:	e000e100 	.word	0xe000e100

08002334 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:
}

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    //setTFTFrameBuffer() not used for selected display interface
}
 8002334:	4770      	bx	lr

08002336 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8002336:	b570      	push	{r4, r5, r6, lr}
 8002338:	4604      	mov	r4, r0
    HAL::initialize();
 800233a:	f00a fad8 	bl	800c8ee <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 800233e:	6823      	ldr	r3, [r4, #0]
 8002340:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8002342:	f00f f993 	bl	801166c <_ZN8touchgfx11Application11getInstanceEv>
 8002346:	4601      	mov	r1, r0
 8002348:	4620      	mov	r0, r4
 800234a:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)0xD0000000, (void*)0, (void*)0);
 800234c:	6823      	ldr	r3, [r4, #0]
 800234e:	4620      	mov	r0, r4
 8002350:	f04f 4150 	mov.w	r1, #3489660928	; 0xd0000000
 8002354:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 8002358:	2300      	movs	r3, #0
 800235a:	46ac      	mov	ip, r5
 800235c:	461a      	mov	r2, r3
}
 800235e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)0xD0000000, (void*)0, (void*)0);
 8002362:	4760      	bx	ip

08002364 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
    }
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8002364:	f00a bbcf 	b.w	800cb06 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08002368 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv.part.0>:
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 8002368:	4910      	ldr	r1, [pc, #64]	; (80023ac <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv.part.0+0x44>)
 800236a:	2300      	movs	r3, #0
}

void TouchGFXGeneratedHAL::InvalidateCache()
 800236c:	b570      	push	{r4, r5, r6, lr}
 800236e:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 8002372:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
 8002376:	f8d1 3080 	ldr.w	r3, [r1, #128]	; 0x80
                                            /* clean & invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 800237a:	f643 74e0 	movw	r4, #16352	; 0x3fe0
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 800237e:	f3c3 00c9 	ubfx	r0, r3, #3, #10
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 8002382:	f3c3 334e 	ubfx	r3, r3, #13, #15
 8002386:	015b      	lsls	r3, r3, #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8002388:	ea03 0604 	and.w	r6, r3, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 800238c:	4602      	mov	r2, r0
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 800238e:	ea46 7582 	orr.w	r5, r6, r2, lsl #30
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
 8002392:	3a01      	subs	r2, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8002394:	f8c1 5274 	str.w	r5, [r1, #628]	; 0x274
      } while (ways-- != 0U);
 8002398:	d2f9      	bcs.n	800238e <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv.part.0+0x26>
    } while(sets-- != 0U);
 800239a:	3b20      	subs	r3, #32
 800239c:	f113 0f20 	cmn.w	r3, #32
 80023a0:	d1f2      	bne.n	8002388 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv.part.0+0x20>
 80023a2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80023a6:	f3bf 8f6f 	isb	sy
    // "System Core" settings for "Cortex M7" in CubeMX in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
    {
        SCB_CleanInvalidateDCache();
    }
}
 80023aa:	bd70      	pop	{r4, r5, r6, pc}
 80023ac:	e000ed00 	.word	0xe000ed00

080023b0 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:
    if (SCB->CCR & SCB_CCR_DC_Msk)
 80023b0:	4b03      	ldr	r3, [pc, #12]	; (80023c0 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x10>)
 80023b2:	695b      	ldr	r3, [r3, #20]
 80023b4:	03db      	lsls	r3, r3, #15
 80023b6:	d501      	bpl.n	80023bc <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0xc>
 80023b8:	f7ff bfd6 	b.w	8002368 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv.part.0>
}
 80023bc:	4770      	bx	lr
 80023be:	bf00      	nop
 80023c0:	e000ed00 	.word	0xe000ed00

080023c4 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:
{
 80023c4:	b508      	push	{r3, lr}
    HAL::flushFrameBuffer(rect);
 80023c6:	f00a fa43 	bl	800c850 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>
    if (SCB->CCR & SCB_CCR_DC_Msk)
 80023ca:	4b04      	ldr	r3, [pc, #16]	; (80023dc <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE+0x18>)
 80023cc:	695b      	ldr	r3, [r3, #20]
 80023ce:	03db      	lsls	r3, r3, #15
 80023d0:	d503      	bpl.n	80023da <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE+0x16>
}
 80023d2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80023d6:	f7ff bfc7 	b.w	8002368 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv.part.0>
 80023da:	bd08      	pop	{r3, pc}
 80023dc:	e000ed00 	.word	0xe000ed00

080023e0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80023e0:	4b04      	ldr	r3, [pc, #16]	; (80023f4 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 80023e2:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80023e6:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80023ea:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80023ee:	f3bf 8f6f 	isb	sy
}
 80023f2:	4770      	bx	lr
 80023f4:	e000e100 	.word	0xe000e100

080023f8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80023f8:	4b02      	ldr	r3, [pc, #8]	; (8002404 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 80023fa:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80023fe:	609a      	str	r2, [r3, #8]
}
 8002400:	4770      	bx	lr
 8002402:	bf00      	nop
 8002404:	e000e100 	.word	0xe000e100

08002408 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const touchgfx::FontId HUGE = 3;    // consolab_160_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8002408:	4770      	bx	lr

0800240a <_ZN23ApplicationFontProviderD0Ev>:
 800240a:	b510      	push	{r4, lr}
 800240c:	4604      	mov	r4, r0
 800240e:	2104      	movs	r1, #4
 8002410:	f01d fa05 	bl	801f81e <_ZdlPvj>
 8002414:	4620      	mov	r0, r4
 8002416:	bd10      	pop	{r4, pc}

08002418 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8002418:	b508      	push	{r3, lr}
    switch (typography)
 800241a:	2903      	cmp	r1, #3
 800241c:	d813      	bhi.n	8002446 <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 800241e:	e8df f001 	tbb	[pc, r1]
 8002422:	0602      	.short	0x0602
 8002424:	0e0a      	.short	0x0e0a
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002426:	f001 fa71 	bl	800390c <_ZN17TypedTextDatabase8getFontsEv>
 800242a:	6800      	ldr	r0, [r0, #0]
        // consolab_160_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    default:
        return 0;
    }
}
 800242c:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 800242e:	f001 fa6d 	bl	800390c <_ZN17TypedTextDatabase8getFontsEv>
 8002432:	6840      	ldr	r0, [r0, #4]
 8002434:	e7fa      	b.n	800242c <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002436:	f001 fa69 	bl	800390c <_ZN17TypedTextDatabase8getFontsEv>
 800243a:	6880      	ldr	r0, [r0, #8]
 800243c:	e7f6      	b.n	800242c <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 800243e:	f001 fa65 	bl	800390c <_ZN17TypedTextDatabase8getFontsEv>
 8002442:	68c0      	ldr	r0, [r0, #12]
 8002444:	e7f2      	b.n	800242c <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 8002446:	2000      	movs	r0, #0
 8002448:	e7f0      	b.n	800242c <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

0800244c <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 800244c:	4800      	ldr	r0, [pc, #0]	; (8002450 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 800244e:	4770      	bx	lr
 8002450:	0802150c 	.word	0x0802150c

08002454 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002454:	2006      	movs	r0, #6
 8002456:	4770      	bx	lr

08002458 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8002458:	2000      	movs	r0, #0
 800245a:	4770      	bx	lr

0800245c <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 800245c:	8081      	strh	r1, [r0, #4]
    }
 800245e:	4770      	bx	lr

08002460 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8002460:	80c1      	strh	r1, [r0, #6]
    }
 8002462:	4770      	bx	lr

08002464 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8002464:	8101      	strh	r1, [r0, #8]
    }
 8002466:	4770      	bx	lr

08002468 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8002468:	8141      	strh	r1, [r0, #10]
    }
 800246a:	4770      	bx	lr

0800246c <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 800246c:	4770      	bx	lr

0800246e <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     *
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
    }
 800246e:	4770      	bx	lr

08002470 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     *
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
    }
 8002470:	4770      	bx	lr

08002472 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     *
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
    }
 8002472:	4770      	bx	lr

08002474 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8002474:	4770      	bx	lr

08002476 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8002476:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8002478:	88c4      	ldrh	r4, [r0, #6]
 800247a:	6803      	ldr	r3, [r0, #0]
 800247c:	1b12      	subs	r2, r2, r4
 800247e:	8884      	ldrh	r4, [r0, #4]
 8002480:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002482:	1b09      	subs	r1, r1, r4
 8002484:	b212      	sxth	r2, r2
    }
 8002486:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 800248a:	b209      	sxth	r1, r1
 800248c:	4718      	bx	r3

0800248e <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800248e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002492:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8002494:	f04f 33ff 	mov.w	r3, #4294967295
 8002498:	6203      	str	r3, [r0, #32]
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 800249a:	6813      	ldr	r3, [r2, #0]
 800249c:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 800249e:	6010      	str	r0, [r2, #0]
    }
 80024a0:	4770      	bx	lr

080024a2 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 80024a2:	4770      	bx	lr

080024a4 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 80024a4:	4770      	bx	lr

080024a6 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 80024a6:	4770      	bx	lr

080024a8 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 80024a8:	4770      	bx	lr

080024aa <_ZN8touchgfx6Screen14handleKeyEventEh>:
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
    }
 80024aa:	4770      	bx	lr

080024ac <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     */
    virtual void getLastChild(int16_t x, int16_t y, Drawable** last)
    {
        (void)x;
        (void)y;
        if (isVisible() && isTouchable())
 80024ac:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80024b0:	b11a      	cbz	r2, 80024ba <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 80024b2:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 80024b6:	b102      	cbz	r2, 80024ba <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 80024b8:	6018      	str	r0, [r3, #0]
        }
    }
 80024ba:	4770      	bx	lr

080024bc <_ZN13BlankViewBaseD1Ev>:

class BlankViewBase : public touchgfx::View<BlankPresenter>
{
public:
    BlankViewBase();
    virtual ~BlankViewBase() {}
 80024bc:	4770      	bx	lr

080024be <_ZN13BlankViewBase11setupScreenEv>:
}

void BlankViewBase::setupScreen()
{

}
 80024be:	4770      	bx	lr

080024c0 <_ZN13BlankViewBase15afterTransitionEv>:
void BlankViewBase::afterTransition()
{
    //blankScreenWait
    //When screen transition ends delay
    //Delay for 10000 ms (600 Ticks)
    blankScreenWaitCounter = BLANKSCREENWAIT_DURATION;
 80024c0:	f44f 7316 	mov.w	r3, #600	; 0x258
 80024c4:	f8a0 306c 	strh.w	r3, [r0, #108]	; 0x6c
}
 80024c8:	4770      	bx	lr

080024ca <_ZN13BlankViewBaseD0Ev>:
 80024ca:	b510      	push	{r4, lr}
 80024cc:	4604      	mov	r4, r0
 80024ce:	2170      	movs	r1, #112	; 0x70
 80024d0:	f01d f9a5 	bl	801f81e <_ZdlPvj>
 80024d4:	4620      	mov	r0, r4
 80024d6:	bd10      	pop	{r4, pc}

080024d8 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 80024d8:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80024dc:	b112      	cbz	r2, 80024e4 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 80024de:	6803      	ldr	r3, [r0, #0]
 80024e0:	695b      	ldr	r3, [r3, #20]
 80024e2:	4718      	bx	r3
    }
 80024e4:	4770      	bx	lr

080024e6 <_ZN13BlankViewBase15handleTickEventEv>:
{
 80024e6:	b508      	push	{r3, lr}
    if(blankScreenWaitCounter > 0)
 80024e8:	f8b0 306c 	ldrh.w	r3, [r0, #108]	; 0x6c
 80024ec:	b153      	cbz	r3, 8002504 <_ZN13BlankViewBase15handleTickEventEv+0x1e>
        blankScreenWaitCounter--;
 80024ee:	3b01      	subs	r3, #1
 80024f0:	b29b      	uxth	r3, r3
 80024f2:	f8a0 306c 	strh.w	r3, [r0, #108]	; 0x6c
        if(blankScreenWaitCounter == 0)
 80024f6:	b92b      	cbnz	r3, 8002504 <_ZN13BlankViewBase15handleTickEventEv+0x1e>
    virtual void handleTickEvent();
    virtual void afterTransition();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80024f8:	f00f f8b8 	bl	801166c <_ZN8touchgfx11Application11getInstanceEv>
}
 80024fc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
            application().gotoInitialScreenNoTransition();
 8002500:	f000 bdf0 	b.w	80030e4 <_ZN23FrontendApplicationBase29gotoInitialScreenNoTransitionEv>
}
 8002504:	bd08      	pop	{r3, pc}
	...

08002508 <_ZN13BlankViewBaseC1Ev>:
BlankViewBase::BlankViewBase() :
 8002508:	b538      	push	{r3, r4, r5, lr}
 800250a:	4604      	mov	r4, r0
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 800250c:	f010 fc02 	bl	8012d14 <_ZN8touchgfx6ScreenC1Ev>
 8002510:	2300      	movs	r3, #0
    blankScreenWaitCounter(0)
 8002512:	4a16      	ldr	r2, [pc, #88]	; (800256c <_ZN13BlankViewBaseC1Ev+0x64>)
 8002514:	4625      	mov	r5, r4
        setWidth(width);
 8002516:	f44f 7148 	mov.w	r1, #800	; 0x320
 800251a:	63e3      	str	r3, [r4, #60]	; 0x3c
 800251c:	f845 2b40 	str.w	r2, [r5], #64
 8002520:	4628      	mov	r0, r5
        : color(col)
 8002522:	66a3      	str	r3, [r4, #104]	; 0x68
 8002524:	f8a4 306c 	strh.w	r3, [r4, #108]	; 0x6c
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8002528:	4a11      	ldr	r2, [pc, #68]	; (8002570 <_ZN13BlankViewBaseC1Ev+0x68>)
        : x(0), y(0), width(0), height(0)
 800252a:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
 800252e:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
          visible(true)
 8002532:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
 8002536:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
 800253a:	f44f 7380 	mov.w	r3, #256	; 0x100
 800253e:	6422      	str	r2, [r4, #64]	; 0x40
 8002540:	f8a4 3064 	strh.w	r3, [r4, #100]	; 0x64
 8002544:	23ff      	movs	r3, #255	; 0xff
 8002546:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
        setWidth(width);
 800254a:	f7ff ff8b 	bl	8002464 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 800254e:	4628      	mov	r0, r5
 8002550:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 8002554:	f7ff ff88 	bl	8002468 <_ZN8touchgfx8Drawable9setHeightEs>
     *
     * @see getColor, Color::getColorFrom24BitRGB
     */
    void setColor(colortype color)
    {
        this->color = color;
 8002558:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 800255c:	1d20      	adds	r0, r4, #4
 800255e:	4629      	mov	r1, r5
 8002560:	66a3      	str	r3, [r4, #104]	; 0x68
 8002562:	f009 ff1d 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002566:	4620      	mov	r0, r4
 8002568:	bd38      	pop	{r3, r4, r5, pc}
 800256a:	bf00      	nop
 800256c:	0802158c 	.word	0x0802158c
 8002570:	08023ae4 	.word	0x08023ae4

08002574 <_ZN12BoomViewBaseD1Ev>:

class BoomViewBase : public touchgfx::View<BoomPresenter>
{
public:
    BoomViewBase();
    virtual ~BoomViewBase() {}
 8002574:	4770      	bx	lr

08002576 <_ZN12BoomViewBase11setupScreenEv>:
}

void BoomViewBase::setupScreen()
{

}
 8002576:	4770      	bx	lr

08002578 <_ZN12BoomViewBase15afterTransitionEv>:
void BoomViewBase::afterTransition()
{
    //wait10seconds
    //When screen transition ends delay
    //Delay for 10000 ms (600 Ticks)
    wait10secondsCounter = WAIT10SECONDS_DURATION;
 8002578:	f44f 7316 	mov.w	r3, #600	; 0x258
 800257c:	f8a0 3098 	strh.w	r3, [r0, #152]	; 0x98
}
 8002580:	4770      	bx	lr

08002582 <_ZN12BoomViewBaseD0Ev>:
 8002582:	b510      	push	{r4, lr}
 8002584:	4604      	mov	r4, r0
 8002586:	219c      	movs	r1, #156	; 0x9c
 8002588:	f01d f949 	bl	801f81e <_ZdlPvj>
 800258c:	4620      	mov	r0, r4
 800258e:	bd10      	pop	{r4, pc}

08002590 <_ZN12BoomViewBase15handleTickEventEv>:
{
 8002590:	b508      	push	{r3, lr}
    if(wait10secondsCounter > 0)
 8002592:	f8b0 3098 	ldrh.w	r3, [r0, #152]	; 0x98
 8002596:	b153      	cbz	r3, 80025ae <_ZN12BoomViewBase15handleTickEventEv+0x1e>
        wait10secondsCounter--;
 8002598:	3b01      	subs	r3, #1
 800259a:	b29b      	uxth	r3, r3
 800259c:	f8a0 3098 	strh.w	r3, [r0, #152]	; 0x98
        if(wait10secondsCounter == 0)
 80025a0:	b92b      	cbnz	r3, 80025ae <_ZN12BoomViewBase15handleTickEventEv+0x1e>
    virtual void handleTickEvent();
    virtual void afterTransition();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80025a2:	f00f f863 	bl	801166c <_ZN8touchgfx11Application11getInstanceEv>
}
 80025a6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
            application().gotoBlankScreenBlockTransition();
 80025aa:	f000 bdcb 	b.w	8003144 <_ZN23FrontendApplicationBase30gotoBlankScreenBlockTransitionEv>
}
 80025ae:	bd08      	pop	{r3, pc}

080025b0 <_ZN8touchgfx8Drawable5setXYEss>:
        setX(x);
 80025b0:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 80025b2:	b570      	push	{r4, r5, r6, lr}
 80025b4:	4604      	mov	r4, r0
        setX(x);
 80025b6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 80025b8:	4615      	mov	r5, r2
        setX(x);
 80025ba:	4798      	blx	r3
        setY(y);
 80025bc:	6823      	ldr	r3, [r4, #0]
 80025be:	4620      	mov	r0, r4
 80025c0:	4629      	mov	r1, r5
 80025c2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 80025c4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 80025c8:	4718      	bx	r3
	...

080025cc <_ZN12BoomViewBaseC1Ev>:
BoomViewBase::BoomViewBase() :
 80025cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80025ce:	4604      	mov	r4, r0
 80025d0:	b085      	sub	sp, #20
 80025d2:	f010 fb9f 	bl	8012d14 <_ZN8touchgfx6ScreenC1Ev>
 80025d6:	2500      	movs	r5, #0
    wait10secondsCounter(0)
 80025d8:	4626      	mov	r6, r4
 80025da:	4b2e      	ldr	r3, [pc, #184]	; (8002694 <_ZN12BoomViewBaseC1Ev+0xc8>)
 80025dc:	63e5      	str	r5, [r4, #60]	; 0x3c
          visible(true)
 80025de:	f44f 7280 	mov.w	r2, #256	; 0x100
 80025e2:	f846 3b40 	str.w	r3, [r6], #64
 80025e6:	f104 076c 	add.w	r7, r4, #108	; 0x6c
        : Widget(), alpha(255), color(0)
 80025ea:	4b2b      	ldr	r3, [pc, #172]	; (8002698 <_ZN12BoomViewBaseC1Ev+0xcc>)
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
    {
        Image::setBitmap(bmp);
 80025ec:	a903      	add	r1, sp, #12
 80025ee:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
 80025f2:	4638      	mov	r0, r7
 80025f4:	f8a4 2090 	strh.w	r2, [r4, #144]	; 0x90
        : Widget(), bitmap(bmp), alpha(255)
 80025f8:	4a28      	ldr	r2, [pc, #160]	; (800269c <_ZN12BoomViewBaseC1Ev+0xd0>)
 80025fa:	6625      	str	r5, [r4, #96]	; 0x60
 80025fc:	66e2      	str	r2, [r4, #108]	; 0x6c
        : color(col)
 80025fe:	66a5      	str	r5, [r4, #104]	; 0x68
        : x(0), y(0), width(0), height(0)
 8002600:	e9c4 3510 	strd	r3, r5, [r4, #64]	; 0x40
 8002604:	23ff      	movs	r3, #255	; 0xff
 8002606:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 800260a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800260e:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8002612:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 8002616:	f884 3094 	strb.w	r3, [r4, #148]	; 0x94
 800261a:	f8ad 300c 	strh.w	r3, [sp, #12]
 800261e:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
 8002622:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
 8002626:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 800262a:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
 800262e:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 8002632:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
        Image::setBitmap(bmp);
 8002636:	f00d f9f6 	bl	800fa26 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        setXY(x, y);
 800263a:	462a      	mov	r2, r5
 800263c:	4629      	mov	r1, r5
 800263e:	4630      	mov	r0, r6
 8002640:	f8a4 5098 	strh.w	r5, [r4, #152]	; 0x98
 8002644:	f7ff ffb4 	bl	80025b0 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002648:	4630      	mov	r0, r6
 800264a:	f44f 7148 	mov.w	r1, #800	; 0x320
 800264e:	f7ff ff09 	bl	8002464 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8002652:	4630      	mov	r0, r6
 8002654:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 8002658:	f7ff ff06 	bl	8002468 <_ZN8touchgfx8Drawable9setHeightEs>
        this->color = color;
 800265c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
    nuke.setXY(0, 0);
 8002660:	462a      	mov	r2, r5
 8002662:	4629      	mov	r1, r5
 8002664:	4638      	mov	r0, r7
 8002666:	66a3      	str	r3, [r4, #104]	; 0x68
 8002668:	f7ff ffa2 	bl	80025b0 <_ZN8touchgfx8Drawable5setXYEss>
 800266c:	2305      	movs	r3, #5
    nuke.setBitmap(touchgfx::Bitmap(BITMAP_NUKE_800X480_ID));
 800266e:	a903      	add	r1, sp, #12
 8002670:	4638      	mov	r0, r7
 8002672:	f8ad 300c 	strh.w	r3, [sp, #12]
 8002676:	f00d f9d6 	bl	800fa26 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800267a:	1d20      	adds	r0, r4, #4
 800267c:	4631      	mov	r1, r6
 800267e:	9001      	str	r0, [sp, #4]
 8002680:	f009 fe8e 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002684:	9801      	ldr	r0, [sp, #4]
 8002686:	4639      	mov	r1, r7
 8002688:	f009 fe8a 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800268c:	4620      	mov	r0, r4
 800268e:	b005      	add	sp, #20
 8002690:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002692:	bf00      	nop
 8002694:	080215c0 	.word	0x080215c0
 8002698:	08023ae4 	.word	0x08023ae4
 800269c:	08023d14 	.word	0x08023d14

080026a0 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 80026a0:	b513      	push	{r0, r1, r4, lr}
 80026a2:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 80026a4:	b151      	cbz	r1, 80026bc <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80026a6:	6803      	ldr	r3, [r0, #0]
 80026a8:	aa01      	add	r2, sp, #4
        const uint8_t* dummyPixelDataPointer = 0;
 80026aa:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 80026ac:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80026b0:	689c      	ldr	r4, [r3, #8]
 80026b2:	f10d 0303 	add.w	r3, sp, #3
 80026b6:	47a0      	blx	r4
        return glyph;
    }
 80026b8:	b002      	add	sp, #8
 80026ba:	bd10      	pop	{r4, pc}
            return 0;
 80026bc:	4608      	mov	r0, r1
 80026be:	e7fb      	b.n	80026b8 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

080026c0 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 80026c0:	8940      	ldrh	r0, [r0, #10]
 80026c2:	4770      	bx	lr

080026c4 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 80026c4:	8980      	ldrh	r0, [r0, #12]
 80026c6:	4770      	bx	lr

080026c8 <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 80026c8:	8880      	ldrh	r0, [r0, #4]
 80026ca:	4770      	bx	lr

080026cc <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 80026cc:	7983      	ldrb	r3, [r0, #6]
 80026ce:	8880      	ldrh	r0, [r0, #4]
 80026d0:	4418      	add	r0, r3
    }
 80026d2:	b280      	uxth	r0, r0
 80026d4:	4770      	bx	lr

080026d6 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 80026d6:	79c0      	ldrb	r0, [r0, #7]
    }
 80026d8:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 80026dc:	4770      	bx	lr

080026de <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 80026de:	79c0      	ldrb	r0, [r0, #7]
    }
 80026e0:	09c0      	lsrs	r0, r0, #7
 80026e2:	4770      	bx	lr

080026e4 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 80026e4:	4770      	bx	lr

080026e6 <_ZN17CountdownViewBaseD1Ev>:

class CountdownViewBase : public touchgfx::View<CountdownPresenter>
{
public:
    CountdownViewBase();
    virtual ~CountdownViewBase() {}
 80026e6:	4770      	bx	lr

080026e8 <_ZN17CountdownViewBase11setupScreenEv>:
}

void CountdownViewBase::setupScreen()
{

}
 80026e8:	4770      	bx	lr

080026ea <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 80026ea:	b510      	push	{r4, lr}
 80026ec:	4604      	mov	r4, r0
    }
 80026ee:	2108      	movs	r1, #8
 80026f0:	f01d f895 	bl	801f81e <_ZdlPvj>
 80026f4:	4620      	mov	r0, r4
 80026f6:	bd10      	pop	{r4, pc}

080026f8 <_ZN17CountdownViewBaseD0Ev>:
 80026f8:	b510      	push	{r4, lr}
 80026fa:	4604      	mov	r4, r0
 80026fc:	f44f 7182 	mov.w	r1, #260	; 0x104
 8002700:	f01d f88d 	bl	801f81e <_ZdlPvj>
 8002704:	4620      	mov	r0, r4
 8002706:	bd10      	pop	{r4, pc}

08002708 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002708:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800270c:	461d      	mov	r5, r3
        setX(x);
 800270e:	6803      	ldr	r3, [r0, #0]
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002710:	4604      	mov	r4, r0
 8002712:	4616      	mov	r6, r2
        setX(x);
 8002714:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002716:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
        setX(x);
 800271a:	4798      	blx	r3
        setY(y);
 800271c:	6823      	ldr	r3, [r4, #0]
 800271e:	4631      	mov	r1, r6
 8002720:	4620      	mov	r0, r4
 8002722:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002724:	4798      	blx	r3
        setWidth(width);
 8002726:	6823      	ldr	r3, [r4, #0]
 8002728:	4629      	mov	r1, r5
 800272a:	4620      	mov	r0, r4
 800272c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800272e:	4798      	blx	r3
        setHeight(height);
 8002730:	6823      	ldr	r3, [r4, #0]
 8002732:	4639      	mov	r1, r7
 8002734:	4620      	mov	r0, r4
 8002736:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8002738:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        setHeight(height);
 800273c:	4718      	bx	r3
	...

08002740 <_ZN17CountdownViewBaseC1Ev>:
CountdownViewBase::CountdownViewBase()
 8002740:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002742:	4604      	mov	r4, r0
 8002744:	b087      	sub	sp, #28
 8002746:	f010 fae5 	bl	8012d14 <_ZN8touchgfx6ScreenC1Ev>
 800274a:	2500      	movs	r5, #0
 800274c:	4627      	mov	r7, r4
 800274e:	4b2b      	ldr	r3, [pc, #172]	; (80027fc <_ZN17CountdownViewBaseC1Ev+0xbc>)
 8002750:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002752:	f104 066c 	add.w	r6, r4, #108	; 0x6c
 8002756:	f847 3b40 	str.w	r3, [r7], #64
        : Widget(), alpha(255), color(0)
 800275a:	4b29      	ldr	r3, [pc, #164]	; (8002800 <_ZN17CountdownViewBaseC1Ev+0xc0>)
 800275c:	4630      	mov	r0, r6
          visible(true)
 800275e:	6625      	str	r5, [r4, #96]	; 0x60
        : color(col)
 8002760:	66a5      	str	r5, [r4, #104]	; 0x68
        : x(0), y(0), width(0), height(0)
 8002762:	e9c4 3510 	strd	r3, r5, [r4, #64]	; 0x40
 8002766:	f44f 7380 	mov.w	r3, #256	; 0x100
 800276a:	f8a4 3064 	strh.w	r3, [r4, #100]	; 0x64
 800276e:	23ff      	movs	r3, #255	; 0xff
 8002770:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8002774:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 8002778:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
 800277c:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
 8002780:	f009 fcdc 	bl	800c13c <_ZN8touchgfx12DigitalClockC1Ev>
    __background.setPosition(0, 0, 800, 480);
 8002784:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 8002788:	462a      	mov	r2, r5
 800278a:	4629      	mov	r1, r5
 800278c:	4638      	mov	r0, r7
 800278e:	9300      	str	r3, [sp, #0]
 8002790:	f44f 7348 	mov.w	r3, #800	; 0x320
 8002794:	f7ff ffb8 	bl	8002708 <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 8002798:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
    clock.setPosition(48, 142, 705, 196);
 800279c:	228e      	movs	r2, #142	; 0x8e
 800279e:	4630      	mov	r0, r6
 80027a0:	66a3      	str	r3, [r4, #104]	; 0x68
 80027a2:	23c4      	movs	r3, #196	; 0xc4
 80027a4:	2130      	movs	r1, #48	; 0x30
 80027a6:	9300      	str	r3, [sp, #0]
 80027a8:	f240 23c1 	movw	r3, #705	; 0x2c1
 80027ac:	f7ff ffac 	bl	8002708 <_ZN8touchgfx8Drawable11setPositionEssss>
    clock.setColor(touchgfx::Color::getColorFromRGB(255, 0, 0));
 80027b0:	4630      	mov	r0, r6
 80027b2:	4914      	ldr	r1, [pc, #80]	; (8002804 <_ZN17CountdownViewBaseC1Ev+0xc4>)
 80027b4:	f009 fb7a 	bl	800beac <_ZN8touchgfx12DigitalClock8setColorENS_9colortypeE>
        : typedTextId(id)
 80027b8:	4b13      	ldr	r3, [pc, #76]	; (8002808 <_ZN17CountdownViewBaseC1Ev+0xc8>)
    clock.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3MZV));
 80027ba:	a904      	add	r1, sp, #16
 80027bc:	4630      	mov	r0, r6
 80027be:	9304      	str	r3, [sp, #16]
 80027c0:	f8ad 5014 	strh.w	r5, [sp, #20]
 80027c4:	f009 fbbe 	bl	800bf44 <_ZN8touchgfx12DigitalClock12setTypedTextENS_9TypedTextE>
    clock.displayLeadingZeroForHourIndicator(true);
 80027c8:	4630      	mov	r0, r6
 80027ca:	2101      	movs	r1, #1
 80027cc:	f009 fd04 	bl	800c1d8 <_ZN8touchgfx12DigitalClock34displayLeadingZeroForHourIndicatorEb>
     *
     * @see DisplayMode, getDisplayMode
     */
    virtual void setDisplayMode(DisplayMode dm)
    {
        displayMode = dm;
 80027d0:	2303      	movs	r3, #3
    clock.setTime24Hour(0, 0, 10);
 80027d2:	462a      	mov	r2, r5
 80027d4:	4629      	mov	r1, r5
 80027d6:	4630      	mov	r0, r6
 80027d8:	f884 309b 	strb.w	r3, [r4, #155]	; 0x9b
 80027dc:	230a      	movs	r3, #10
 80027de:	f009 fcfe 	bl	800c1de <_ZN8touchgfx13AbstractClock13setTime24HourEhhh>
 80027e2:	1d20      	adds	r0, r4, #4
 80027e4:	4639      	mov	r1, r7
 80027e6:	9003      	str	r0, [sp, #12]
 80027e8:	f009 fdda 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80027ec:	9803      	ldr	r0, [sp, #12]
 80027ee:	4631      	mov	r1, r6
 80027f0:	f009 fdd6 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80027f4:	4620      	mov	r0, r4
 80027f6:	b007      	add	sp, #28
 80027f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80027fa:	bf00      	nop
 80027fc:	08021604 	.word	0x08021604
 8002800:	08023ae4 	.word	0x08023ae4
 8002804:	ffff0000 	.word	0xffff0000
 8002808:	080215f4 	.word	0x080215f4

0800280c <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 800280c:	4770      	bx	lr

0800280e <_ZN8touchgfx11Application15appSwitchScreenEh>:
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
    }
 800280e:	4770      	bx	lr

08002810 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8002810:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 8002814:	6808      	ldr	r0, [r1, #0]
 8002816:	6849      	ldr	r1, [r1, #4]
 8002818:	c303      	stmia	r3!, {r0, r1}
    }
 800281a:	4770      	bx	lr

0800281c <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 800281c:	4770      	bx	lr

0800281e <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 800281e:	4770      	bx	lr

08002820 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8002820:	6041      	str	r1, [r0, #4]
    }
 8002822:	4770      	bx	lr

08002824 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8002824:	4770      	bx	lr
	...

08002828 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002828:	4b06      	ldr	r3, [pc, #24]	; (8002844 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 800282a:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 800282e:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002832:	2300      	movs	r3, #0
 8002834:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Initial

void FrontendApplicationBase::gotoInitialScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoInitialScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002838:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 800283c:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c

    virtual void changeToStartScreen()
    {
        gotoInitialScreenNoTransition();
    }
 8002840:	4770      	bx	lr
 8002842:	bf00      	nop
 8002844:	08002e4d 	.word	0x08002e4d

08002848 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8002848:	2301      	movs	r3, #1
 800284a:	7203      	strb	r3, [r0, #8]
    }
 800284c:	4770      	bx	lr

0800284e <_ZN8touchgfx15BlockTransition8tearDownEv>:
        }
    }

    virtual void tearDown()
    {
    }
 800284e:	4770      	bx	lr

08002850 <_ZN8touchgfx15BlockTransition4initEv>:

    virtual void init()
    {
        Transition::init();
    }
 8002850:	4770      	bx	lr

08002852 <_ZN8touchgfx15BlockTransition10invalidateEv>:
     * Block transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 8002852:	4770      	bx	lr

08002854 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectD1Ev>:
{
public:
    /**
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
 8002854:	4770      	bx	lr

08002856 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
class WipeTransition : public Transition
 8002856:	4770      	bx	lr

08002858 <_ZN8touchgfx15BlockTransitionD1Ev>:
class BlockTransition : public Transition
 8002858:	4770      	bx	lr

0800285a <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 800285a:	4770      	bx	lr

0800285c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 800285c:	4770      	bx	lr

0800285e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
            // Copy rect from tft to client framebuffer
            HAL::getInstance()->lcd().blitCopy((const uint16_t*)tftFb, source, rect, 255, false);
        }
    }

    virtual void tearDown()
 800285e:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 8002860:	6840      	ldr	r0, [r0, #4]
 8002862:	6803      	ldr	r3, [r0, #0]
 8002864:	3110      	adds	r1, #16
 8002866:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8002868:	4718      	bx	r3

0800286a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    }

    virtual void init()
 800286a:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 800286c:	6840      	ldr	r0, [r0, #4]
 800286e:	6803      	ldr	r3, [r0, #0]
 8002870:	3110      	adds	r1, #16
 8002872:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002874:	4718      	bx	r3

08002876 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 8002876:	4770      	bx	lr

08002878 <_ZNK8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRect4drawERKNS_4RectE>:
        }
 8002878:	4770      	bx	lr

0800287a <_ZNK8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRect12getSolidRectEv>:
     * @param  y      The y coordinate.
     * @param  width  The width.
     * @param  height The height.
     */
    Rect(int16_t x, int16_t y, int16_t width, int16_t height)
        : x(x), y(y), width(width), height(height)
 800287a:	2200      	movs	r2, #0
        virtual Rect getSolidRect() const
 800287c:	b510      	push	{r4, lr}
            return Rect(0U, 0U, rect.width, rect.height);
 800287e:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 8002882:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8002886:	8002      	strh	r2, [r0, #0]
 8002888:	8042      	strh	r2, [r0, #2]
 800288a:	8084      	strh	r4, [r0, #4]
 800288c:	80c1      	strh	r1, [r0, #6]
        }
 800288e:	bd10      	pop	{r4, pc}

08002890 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8002890:	b410      	push	{r4}
    {
        (pobject->*pmemfun_0)();
 8002892:	6841      	ldr	r1, [r0, #4]
    virtual void execute()
 8002894:	4603      	mov	r3, r0
        (pobject->*pmemfun_0)();
 8002896:	68c2      	ldr	r2, [r0, #12]
 8002898:	689b      	ldr	r3, [r3, #8]
 800289a:	1054      	asrs	r4, r2, #1
 800289c:	eb01 0062 	add.w	r0, r1, r2, asr #1
 80028a0:	07d2      	lsls	r2, r2, #31
 80028a2:	bf48      	it	mi
 80028a4:	590a      	ldrmi	r2, [r1, r4]
    }
 80028a6:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun_0)();
 80028aa:	bf48      	it	mi
 80028ac:	58d3      	ldrmi	r3, [r2, r3]
 80028ae:	4718      	bx	r3

080028b0 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun_0 != 0);
 80028b0:	6843      	ldr	r3, [r0, #4]
 80028b2:	b12b      	cbz	r3, 80028c0 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 80028b4:	6883      	ldr	r3, [r0, #8]
 80028b6:	b92b      	cbnz	r3, 80028c4 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 80028b8:	68c0      	ldr	r0, [r0, #12]
 80028ba:	f000 0001 	and.w	r0, r0, #1
 80028be:	4770      	bx	lr
 80028c0:	4618      	mov	r0, r3
 80028c2:	4770      	bx	lr
 80028c4:	2001      	movs	r0, #1
    }
 80028c6:	4770      	bx	lr

080028c8 <_ZN8touchgfx15BlockTransitionD0Ev>:
 80028c8:	b510      	push	{r4, lr}
 80028ca:	4604      	mov	r4, r0
 80028cc:	2114      	movs	r1, #20
 80028ce:	f01c ffa6 	bl	801f81e <_ZdlPvj>
 80028d2:	4620      	mov	r0, r4
 80028d4:	bd10      	pop	{r4, pc}

080028d6 <_ZN8touchgfx12NoTransitionD0Ev>:
 80028d6:	b510      	push	{r4, lr}
 80028d8:	4604      	mov	r4, r0
 80028da:	210c      	movs	r1, #12
 80028dc:	f01c ff9f 	bl	801f81e <_ZdlPvj>
 80028e0:	4620      	mov	r0, r4
 80028e2:	bd10      	pop	{r4, pc}

080028e4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80028e4:	b510      	push	{r4, lr}
 80028e6:	4604      	mov	r4, r0
 80028e8:	2110      	movs	r1, #16
 80028ea:	f01c ff98 	bl	801f81e <_ZdlPvj>
 80028ee:	4620      	mov	r0, r4
 80028f0:	bd10      	pop	{r4, pc}

080028f2 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 80028f2:	b510      	push	{r4, lr}
 80028f4:	4604      	mov	r4, r0
 80028f6:	f44f 71ac 	mov.w	r1, #344	; 0x158
 80028fa:	f01c ff90 	bl	801f81e <_ZdlPvj>
 80028fe:	4620      	mov	r0, r4
 8002900:	bd10      	pop	{r4, pc}

08002902 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
class WipeTransition : public Transition
 8002902:	b510      	push	{r4, lr}
 8002904:	4604      	mov	r4, r0
 8002906:	2138      	movs	r1, #56	; 0x38
 8002908:	f01c ff89 	bl	801f81e <_ZdlPvj>
 800290c:	4620      	mov	r0, r4
 800290e:	bd10      	pop	{r4, pc}

08002910 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectD0Ev>:
    class FullSolidRect : public Widget
 8002910:	b510      	push	{r4, lr}
 8002912:	4604      	mov	r4, r0
 8002914:	2128      	movs	r1, #40	; 0x28
 8002916:	f01c ff82 	bl	801f81e <_ZdlPvj>
 800291a:	4620      	mov	r0, r4
 800291c:	bd10      	pop	{r4, pc}
	...

08002920 <_ZN8touchgfx15BlockTransition15handleTickEventEv>:
    virtual void handleTickEvent()
 8002920:	b570      	push	{r4, r5, r6, lr}
 8002922:	b0b2      	sub	sp, #200	; 0xc8
 8002924:	4604      	mov	r4, r0
        const int indeces[blocks] = { 20, 11, 47, 14, 10, 0, 18, 28, 13, 6, 2, 41,
 8002926:	22c0      	movs	r2, #192	; 0xc0
 8002928:	491d      	ldr	r1, [pc, #116]	; (80029a0 <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x80>)
 800292a:	a802      	add	r0, sp, #8
 800292c:	f01d f9d2 	bl	801fcd4 <memcpy>
        if (animationCounter == 0 && HAL::USE_DOUBLE_BUFFERING)
 8002930:	7c23      	ldrb	r3, [r4, #16]
 8002932:	bb6b      	cbnz	r3, 8002990 <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x70>
 8002934:	4b1b      	ldr	r3, [pc, #108]	; (80029a4 <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x84>)
 8002936:	781b      	ldrb	r3, [r3, #0]
 8002938:	bb33      	cbnz	r3, 8002988 <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x68>
    virtual void handleTickEvent()
 800293a:	2503      	movs	r5, #3
            while (blocks_per_tick-- > 0 && animationCounter < blocks)
 800293c:	3d01      	subs	r5, #1
 800293e:	d02c      	beq.n	800299a <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x7a>
 8002940:	7c23      	ldrb	r3, [r4, #16]
 8002942:	2b2f      	cmp	r3, #47	; 0x2f
 8002944:	d829      	bhi.n	800299a <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x7a>
                const int index = indeces[animationCounter];
 8002946:	aa32      	add	r2, sp, #200	; 0xc8
                const int16_t x = (index % blocksHorizontal) * blockWidth;
 8002948:	89e6      	ldrh	r6, [r4, #14]
 800294a:	8960      	ldrh	r0, [r4, #10]
                const int index = indeces[animationCounter];
 800294c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
                const int16_t y = (index / blocksHorizontal) * blockHeight;
 8002950:	89a1      	ldrh	r1, [r4, #12]
 8002952:	f8ad 0004 	strh.w	r0, [sp, #4]
                const int index = indeces[animationCounter];
 8002956:	f853 3cc0 	ldr.w	r3, [r3, #-192]
 800295a:	f8ad 1006 	strh.w	r1, [sp, #6]
                const int16_t x = (index % blocksHorizontal) * blockWidth;
 800295e:	fb93 f2f6 	sdiv	r2, r3, r6
 8002962:	fb06 3312 	mls	r3, r6, r2, r3
                const int16_t y = (index / blocksHorizontal) * blockHeight;
 8002966:	fb12 f201 	smulbb	r2, r2, r1
                screenContainer->invalidateRect(invRect);
 800296a:	4669      	mov	r1, sp
                const int16_t x = (index % blocksHorizontal) * blockWidth;
 800296c:	fb13 f300 	smulbb	r3, r3, r0
                screenContainer->invalidateRect(invRect);
 8002970:	6860      	ldr	r0, [r4, #4]
 8002972:	f8ad 2002 	strh.w	r2, [sp, #2]
 8002976:	f8ad 3000 	strh.w	r3, [sp]
 800297a:	6803      	ldr	r3, [r0, #0]
 800297c:	691b      	ldr	r3, [r3, #16]
 800297e:	4798      	blx	r3
                animationCounter++;
 8002980:	7c23      	ldrb	r3, [r4, #16]
 8002982:	3301      	adds	r3, #1
 8002984:	7423      	strb	r3, [r4, #16]
            while (blocks_per_tick-- > 0 && animationCounter < blocks)
 8002986:	e7d9      	b.n	800293c <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x1c>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8002988:	f00e fe70 	bl	801166c <_ZN8touchgfx11Application11getInstanceEv>
 800298c:	f00e fec8 	bl	8011720 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
        if (animationCounter < blocks)
 8002990:	7c23      	ldrb	r3, [r4, #16]
 8002992:	2b2f      	cmp	r3, #47	; 0x2f
 8002994:	d9d1      	bls.n	800293a <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x1a>
            done = true;
 8002996:	2301      	movs	r3, #1
 8002998:	7223      	strb	r3, [r4, #8]
    }
 800299a:	b032      	add	sp, #200	; 0xc8
 800299c:	bd70      	pop	{r4, r5, r6, pc}
 800299e:	bf00      	nop
 80029a0:	08020d50 	.word	0x08020d50
 80029a4:	2400e07a 	.word	0x2400e07a

080029a8 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 80029a8:	b508      	push	{r3, lr}
        Application::getInstance()->invalidate();
 80029aa:	f00e fe5f 	bl	801166c <_ZN8touchgfx11Application11getInstanceEv>
    }
 80029ae:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        Application::getInstance()->invalidate();
 80029b2:	f00f ba95 	b.w	8011ee0 <_ZN8touchgfx11Application10invalidateEv>

080029b6 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 80029b6:	b510      	push	{r4, lr}
 80029b8:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 80029ba:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 80029be:	b158      	cbz	r0, 80029d8 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 80029c0:	6803      	ldr	r3, [r0, #0]
 80029c2:	68db      	ldr	r3, [r3, #12]
 80029c4:	4798      	blx	r3
 80029c6:	b138      	cbz	r0, 80029d8 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 80029c8:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 80029cc:	6803      	ldr	r3, [r0, #0]
 80029ce:	689b      	ldr	r3, [r3, #8]
 80029d0:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80029d2:	2300      	movs	r3, #0
 80029d4:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 80029d8:	bd10      	pop	{r4, pc}
	...

080029dc <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoBlankScreenBlockTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoBlankScreenBlockTransitionImpl()
{
 80029dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<BlankView, BlankPresenter, touchgfx::BlockTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80029e0:	e9d0 6954 	ldrd	r6, r9, [r0, #336]	; 0x150
{
 80029e4:	4605      	mov	r5, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80029e6:	68b0      	ldr	r0, [r6, #8]
 80029e8:	6803      	ldr	r3, [r0, #0]
 80029ea:	6a1b      	ldr	r3, [r3, #32]
 80029ec:	4798      	blx	r3
 80029ee:	286f      	cmp	r0, #111	; 0x6f
 80029f0:	d805      	bhi.n	80029fe <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv+0x22>
 80029f2:	4b50      	ldr	r3, [pc, #320]	; (8002b34 <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv+0x158>)
 80029f4:	21a3      	movs	r1, #163	; 0xa3
 80029f6:	4a50      	ldr	r2, [pc, #320]	; (8002b38 <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv+0x15c>)
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80029f8:	4850      	ldr	r0, [pc, #320]	; (8002b3c <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv+0x160>)
 80029fa:	f01d f8ed 	bl	801fbd8 <__assert_func>
 80029fe:	6870      	ldr	r0, [r6, #4]
 8002a00:	6803      	ldr	r3, [r0, #0]
 8002a02:	6a1b      	ldr	r3, [r3, #32]
 8002a04:	4798      	blx	r3
 8002a06:	280f      	cmp	r0, #15
 8002a08:	d803      	bhi.n	8002a12 <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv+0x36>
 8002a0a:	4b4d      	ldr	r3, [pc, #308]	; (8002b40 <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv+0x164>)
 8002a0c:	21a4      	movs	r1, #164	; 0xa4
 8002a0e:	4a4a      	ldr	r2, [pc, #296]	; (8002b38 <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv+0x15c>)
 8002a10:	e7f2      	b.n	80029f8 <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002a12:	68f0      	ldr	r0, [r6, #12]
 8002a14:	6803      	ldr	r3, [r0, #0]
 8002a16:	6a1b      	ldr	r3, [r3, #32]
 8002a18:	4798      	blx	r3
 8002a1a:	2813      	cmp	r0, #19
 8002a1c:	d803      	bhi.n	8002a26 <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv+0x4a>
 8002a1e:	4b49      	ldr	r3, [pc, #292]	; (8002b44 <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv+0x168>)
 8002a20:	21a5      	movs	r1, #165	; 0xa5
 8002a22:	4a45      	ldr	r2, [pc, #276]	; (8002b38 <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv+0x15c>)
 8002a24:	e7e8      	b.n	80029f8 <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv+0x1c>
    if (*currentTrans)
 8002a26:	f8df 8130 	ldr.w	r8, [pc, #304]	; 8002b58 <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv+0x17c>
    Application::getInstance()->clearAllTimerWidgets();
 8002a2a:	f00e fe1f 	bl	801166c <_ZN8touchgfx11Application11getInstanceEv>
 8002a2e:	f00e fe6b 	bl	8011708 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8002a32:	f8d8 0000 	ldr.w	r0, [r8]
 8002a36:	b110      	cbz	r0, 8002a3e <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv+0x62>
        (*currentTrans)->tearDown();
 8002a38:	6803      	ldr	r3, [r0, #0]
 8002a3a:	68db      	ldr	r3, [r3, #12]
 8002a3c:	4798      	blx	r3
    if (*currentTrans)
 8002a3e:	f8d8 0000 	ldr.w	r0, [r8]
 8002a42:	b110      	cbz	r0, 8002a4a <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv+0x6e>
        (*currentTrans)->~Transition();
 8002a44:	6803      	ldr	r3, [r0, #0]
 8002a46:	681b      	ldr	r3, [r3, #0]
 8002a48:	4798      	blx	r3
    if (*currentScreen)
 8002a4a:	4f3f      	ldr	r7, [pc, #252]	; (8002b48 <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv+0x16c>)
 8002a4c:	6838      	ldr	r0, [r7, #0]
 8002a4e:	b110      	cbz	r0, 8002a56 <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv+0x7a>
        (*currentScreen)->tearDownScreen();
 8002a50:	6803      	ldr	r3, [r0, #0]
 8002a52:	695b      	ldr	r3, [r3, #20]
 8002a54:	4798      	blx	r3
    if (*currentPresenter)
 8002a56:	f8d5 0138 	ldr.w	r0, [r5, #312]	; 0x138
 8002a5a:	b110      	cbz	r0, 8002a62 <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv+0x86>
        (*currentPresenter)->deactivate();
 8002a5c:	6803      	ldr	r3, [r0, #0]
 8002a5e:	685b      	ldr	r3, [r3, #4]
 8002a60:	4798      	blx	r3
    if (*currentScreen)
 8002a62:	6838      	ldr	r0, [r7, #0]
 8002a64:	b110      	cbz	r0, 8002a6c <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv+0x90>
        (*currentScreen)->~Screen();
 8002a66:	6803      	ldr	r3, [r0, #0]
 8002a68:	681b      	ldr	r3, [r3, #0]
 8002a6a:	4798      	blx	r3
    if (*currentPresenter)
 8002a6c:	f8d5 0138 	ldr.w	r0, [r5, #312]	; 0x138
 8002a70:	b110      	cbz	r0, 8002a78 <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv+0x9c>
        (*currentPresenter)->~Presenter();
 8002a72:	6803      	ldr	r3, [r0, #0]
 8002a74:	689b      	ldr	r3, [r3, #8]
 8002a76:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002a78:	68f0      	ldr	r0, [r6, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8002a7a:	2100      	movs	r1, #0
 8002a7c:	6803      	ldr	r3, [r0, #0]
 8002a7e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002a80:	4798      	blx	r3
        : screenContainer(0), done(false)
 8002a82:	2300      	movs	r3, #0
          animationCounter(0)
 8002a84:	4a31      	ldr	r2, [pc, #196]	; (8002b4c <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv+0x170>)
 8002a86:	4604      	mov	r4, r0
 8002a88:	6043      	str	r3, [r0, #4]
 8002a8a:	7203      	strb	r3, [r0, #8]
 8002a8c:	7403      	strb	r3, [r0, #16]
        if (HAL::DISPLAY_WIDTH > HAL::DISPLAY_HEIGHT)
 8002a8e:	4b30      	ldr	r3, [pc, #192]	; (8002b50 <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv+0x174>)
          animationCounter(0)
 8002a90:	6002      	str	r2, [r0, #0]
        if (HAL::DISPLAY_WIDTH > HAL::DISPLAY_HEIGHT)
 8002a92:	881a      	ldrh	r2, [r3, #0]
 8002a94:	4b2f      	ldr	r3, [pc, #188]	; (8002b54 <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv+0x178>)
 8002a96:	881b      	ldrh	r3, [r3, #0]
 8002a98:	429a      	cmp	r2, r3
 8002a9a:	d93f      	bls.n	8002b1c <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv+0x140>
            blockWidth = (HAL::DISPLAY_WIDTH + 7) / 8;
 8002a9c:	3207      	adds	r2, #7
            blockHeight = (HAL::DISPLAY_HEIGHT + 5) / 6;
 8002a9e:	3305      	adds	r3, #5
            blockWidth = (HAL::DISPLAY_WIDTH + 7) / 8;
 8002aa0:	10d2      	asrs	r2, r2, #3
 8002aa2:	8142      	strh	r2, [r0, #10]
            blockHeight = (HAL::DISPLAY_HEIGHT + 5) / 6;
 8002aa4:	2206      	movs	r2, #6
 8002aa6:	fbb3 f3f2 	udiv	r3, r3, r2
 8002aaa:	8183      	strh	r3, [r0, #12]
            blocksHorizontal = 8;
 8002aac:	2308      	movs	r3, #8
 8002aae:	81c3      	strh	r3, [r0, #14]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002ab0:	68b0      	ldr	r0, [r6, #8]
 8002ab2:	2100      	movs	r1, #0
 8002ab4:	6803      	ldr	r3, [r0, #0]
 8002ab6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002ab8:	4798      	blx	r3
 8002aba:	4682      	mov	sl, r0
 8002abc:	f000 ff66 	bl	800398c <_ZN9BlankViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002ac0:	6870      	ldr	r0, [r6, #4]
 8002ac2:	2100      	movs	r1, #0
 8002ac4:	6803      	ldr	r3, [r0, #0]
 8002ac6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002ac8:	4798      	blx	r3
 8002aca:	4606      	mov	r6, r0
 8002acc:	4651      	mov	r1, sl
 8002ace:	f000 ff43 	bl	8003958 <_ZN14BlankPresenterC1ER9BlankView>
    *currentTrans = newTransition;
 8002ad2:	f8c8 4000 	str.w	r4, [r8]
    *currentPresenter = newPresenter;
 8002ad6:	f8c5 6138 	str.w	r6, [r5, #312]	; 0x138
    *currentScreen = newScreen;
 8002ada:	f8c7 a000 	str.w	sl, [r7]
    model->bind(newPresenter);
 8002ade:	b33e      	cbz	r6, 8002b30 <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv+0x154>
 8002ae0:	1d33      	adds	r3, r6, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8002ae2:	f8c9 3000 	str.w	r3, [r9]
    newScreen->setupScreen();
 8002ae6:	4650      	mov	r0, sl
 8002ae8:	f8da 3000 	ldr.w	r3, [sl]

    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8002aec:	f8c6 9008 	str.w	r9, [r6, #8]
 8002af0:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] presenter The specific Presenter to be associated with the View.
     */
    void bind(T& presenter)
    {
        this->presenter = &presenter;
 8002af2:	f8ca 603c 	str.w	r6, [sl, #60]	; 0x3c
 8002af6:	4798      	blx	r3
    newPresenter->activate();
 8002af8:	6833      	ldr	r3, [r6, #0]
 8002afa:	4630      	mov	r0, r6
 8002afc:	681b      	ldr	r3, [r3, #0]
 8002afe:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002b00:	4621      	mov	r1, r4
 8002b02:	4650      	mov	r0, sl
 8002b04:	f010 fab2 	bl	801306c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002b08:	6823      	ldr	r3, [r4, #0]
 8002b0a:	4620      	mov	r0, r4
 8002b0c:	691b      	ldr	r3, [r3, #16]
 8002b0e:	4798      	blx	r3
    newTransition->invalidate();
 8002b10:	6823      	ldr	r3, [r4, #0]
 8002b12:	4620      	mov	r0, r4
 8002b14:	695b      	ldr	r3, [r3, #20]
}
 8002b16:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002b1a:	4718      	bx	r3
            blockWidth = (HAL::DISPLAY_WIDTH + 5) / 6;
 8002b1c:	2106      	movs	r1, #6
 8002b1e:	3205      	adds	r2, #5
            blockHeight = (HAL::DISPLAY_HEIGHT + 7) / 8;
 8002b20:	3307      	adds	r3, #7
            blocksHorizontal = 6;
 8002b22:	81c1      	strh	r1, [r0, #14]
            blockHeight = (HAL::DISPLAY_HEIGHT + 7) / 8;
 8002b24:	10db      	asrs	r3, r3, #3
            blockWidth = (HAL::DISPLAY_WIDTH + 5) / 6;
 8002b26:	fbb2 f2f1 	udiv	r2, r2, r1
            blockHeight = (HAL::DISPLAY_HEIGHT + 7) / 8;
 8002b2a:	8183      	strh	r3, [r0, #12]
            blockWidth = (HAL::DISPLAY_WIDTH + 5) / 6;
 8002b2c:	8142      	strh	r2, [r0, #10]
            blocksHorizontal = 6;
 8002b2e:	e7bf      	b.n	8002ab0 <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv+0xd4>
    model->bind(newPresenter);
 8002b30:	4633      	mov	r3, r6
 8002b32:	e7d6      	b.n	8002ae2 <_ZN23FrontendApplicationBase34gotoBlankScreenBlockTransitionImplEv+0x106>
 8002b34:	08021630 	.word	0x08021630
 8002b38:	080216be 	.word	0x080216be
 8002b3c:	080217c1 	.word	0x080217c1
 8002b40:	08021816 	.word	0x08021816
 8002b44:	080218b9 	.word	0x080218b9
 8002b48:	2400e0d8 	.word	0x2400e0d8
 8002b4c:	08021d08 	.word	0x08021d08
 8002b50:	2400e070 	.word	0x2400e070
 8002b54:	2400e072 	.word	0x2400e072
 8002b58:	2400e0dc 	.word	0x2400e0dc

08002b5c <_ZN23FrontendApplicationBase30gotoBoomScreenNoTransitionImplEv>:
{
 8002b5c:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<BoomView, BoomPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002b60:	e9d0 5a54 	ldrd	r5, sl, [r0, #336]	; 0x150
{
 8002b64:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002b66:	68a8      	ldr	r0, [r5, #8]
 8002b68:	6803      	ldr	r3, [r0, #0]
 8002b6a:	6a1b      	ldr	r3, [r3, #32]
 8002b6c:	4798      	blx	r3
 8002b6e:	289b      	cmp	r0, #155	; 0x9b
 8002b70:	d805      	bhi.n	8002b7e <_ZN23FrontendApplicationBase30gotoBoomScreenNoTransitionImplEv+0x22>
 8002b72:	4b45      	ldr	r3, [pc, #276]	; (8002c88 <_ZN23FrontendApplicationBase30gotoBoomScreenNoTransitionImplEv+0x12c>)
 8002b74:	21a3      	movs	r1, #163	; 0xa3
 8002b76:	4a45      	ldr	r2, [pc, #276]	; (8002c8c <_ZN23FrontendApplicationBase30gotoBoomScreenNoTransitionImplEv+0x130>)
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002b78:	4845      	ldr	r0, [pc, #276]	; (8002c90 <_ZN23FrontendApplicationBase30gotoBoomScreenNoTransitionImplEv+0x134>)
 8002b7a:	f01d f82d 	bl	801fbd8 <__assert_func>
 8002b7e:	6868      	ldr	r0, [r5, #4]
 8002b80:	6803      	ldr	r3, [r0, #0]
 8002b82:	6a1b      	ldr	r3, [r3, #32]
 8002b84:	4798      	blx	r3
 8002b86:	280f      	cmp	r0, #15
 8002b88:	d803      	bhi.n	8002b92 <_ZN23FrontendApplicationBase30gotoBoomScreenNoTransitionImplEv+0x36>
 8002b8a:	4b42      	ldr	r3, [pc, #264]	; (8002c94 <_ZN23FrontendApplicationBase30gotoBoomScreenNoTransitionImplEv+0x138>)
 8002b8c:	21a4      	movs	r1, #164	; 0xa4
 8002b8e:	4a3f      	ldr	r2, [pc, #252]	; (8002c8c <_ZN23FrontendApplicationBase30gotoBoomScreenNoTransitionImplEv+0x130>)
 8002b90:	e7f2      	b.n	8002b78 <_ZN23FrontendApplicationBase30gotoBoomScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002b92:	68e8      	ldr	r0, [r5, #12]
 8002b94:	6803      	ldr	r3, [r0, #0]
 8002b96:	6a1b      	ldr	r3, [r3, #32]
 8002b98:	4798      	blx	r3
 8002b9a:	280b      	cmp	r0, #11
 8002b9c:	d803      	bhi.n	8002ba6 <_ZN23FrontendApplicationBase30gotoBoomScreenNoTransitionImplEv+0x4a>
 8002b9e:	4b3e      	ldr	r3, [pc, #248]	; (8002c98 <_ZN23FrontendApplicationBase30gotoBoomScreenNoTransitionImplEv+0x13c>)
 8002ba0:	21a5      	movs	r1, #165	; 0xa5
 8002ba2:	4a3a      	ldr	r2, [pc, #232]	; (8002c8c <_ZN23FrontendApplicationBase30gotoBoomScreenNoTransitionImplEv+0x130>)
 8002ba4:	e7e8      	b.n	8002b78 <_ZN23FrontendApplicationBase30gotoBoomScreenNoTransitionImplEv+0x1c>
    if (*currentTrans)
 8002ba6:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8002ca0 <_ZN23FrontendApplicationBase30gotoBoomScreenNoTransitionImplEv+0x144>
    Application::getInstance()->clearAllTimerWidgets();
 8002baa:	f00e fd5f 	bl	801166c <_ZN8touchgfx11Application11getInstanceEv>
 8002bae:	f00e fdab 	bl	8011708 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8002bb2:	f8d9 0000 	ldr.w	r0, [r9]
 8002bb6:	b110      	cbz	r0, 8002bbe <_ZN23FrontendApplicationBase30gotoBoomScreenNoTransitionImplEv+0x62>
        (*currentTrans)->tearDown();
 8002bb8:	6803      	ldr	r3, [r0, #0]
 8002bba:	68db      	ldr	r3, [r3, #12]
 8002bbc:	4798      	blx	r3
    if (*currentTrans)
 8002bbe:	f8d9 0000 	ldr.w	r0, [r9]
 8002bc2:	b110      	cbz	r0, 8002bca <_ZN23FrontendApplicationBase30gotoBoomScreenNoTransitionImplEv+0x6e>
        (*currentTrans)->~Transition();
 8002bc4:	6803      	ldr	r3, [r0, #0]
 8002bc6:	681b      	ldr	r3, [r3, #0]
 8002bc8:	4798      	blx	r3
    if (*currentScreen)
 8002bca:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8002ca4 <_ZN23FrontendApplicationBase30gotoBoomScreenNoTransitionImplEv+0x148>
 8002bce:	f8d8 0000 	ldr.w	r0, [r8]
 8002bd2:	b110      	cbz	r0, 8002bda <_ZN23FrontendApplicationBase30gotoBoomScreenNoTransitionImplEv+0x7e>
        (*currentScreen)->tearDownScreen();
 8002bd4:	6803      	ldr	r3, [r0, #0]
 8002bd6:	695b      	ldr	r3, [r3, #20]
 8002bd8:	4798      	blx	r3
    if (*currentPresenter)
 8002bda:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002bde:	b110      	cbz	r0, 8002be6 <_ZN23FrontendApplicationBase30gotoBoomScreenNoTransitionImplEv+0x8a>
        (*currentPresenter)->deactivate();
 8002be0:	6803      	ldr	r3, [r0, #0]
 8002be2:	685b      	ldr	r3, [r3, #4]
 8002be4:	4798      	blx	r3
    if (*currentScreen)
 8002be6:	f8d8 0000 	ldr.w	r0, [r8]
 8002bea:	b110      	cbz	r0, 8002bf2 <_ZN23FrontendApplicationBase30gotoBoomScreenNoTransitionImplEv+0x96>
        (*currentScreen)->~Screen();
 8002bec:	6803      	ldr	r3, [r0, #0]
 8002bee:	681b      	ldr	r3, [r3, #0]
 8002bf0:	4798      	blx	r3
    if (*currentPresenter)
 8002bf2:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002bf6:	b110      	cbz	r0, 8002bfe <_ZN23FrontendApplicationBase30gotoBoomScreenNoTransitionImplEv+0xa2>
        (*currentPresenter)->~Presenter();
 8002bf8:	6803      	ldr	r3, [r0, #0]
 8002bfa:	689b      	ldr	r3, [r3, #8]
 8002bfc:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002bfe:	68e8      	ldr	r0, [r5, #12]
 8002c00:	2100      	movs	r1, #0
 8002c02:	f04f 0b00 	mov.w	fp, #0
 8002c06:	6803      	ldr	r3, [r0, #0]
 8002c08:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002c0a:	4798      	blx	r3
 8002c0c:	4b23      	ldr	r3, [pc, #140]	; (8002c9c <_ZN23FrontendApplicationBase30gotoBoomScreenNoTransitionImplEv+0x140>)
 8002c0e:	4604      	mov	r4, r0
 8002c10:	f8c0 b004 	str.w	fp, [r0, #4]
 8002c14:	6003      	str	r3, [r0, #0]
 8002c16:	4659      	mov	r1, fp
 8002c18:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002c1c:	68a8      	ldr	r0, [r5, #8]
 8002c1e:	6803      	ldr	r3, [r0, #0]
 8002c20:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002c22:	4798      	blx	r3
 8002c24:	4606      	mov	r6, r0
 8002c26:	f000 fee3 	bl	80039f0 <_ZN8BoomViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002c2a:	6868      	ldr	r0, [r5, #4]
 8002c2c:	4659      	mov	r1, fp
 8002c2e:	6803      	ldr	r3, [r0, #0]
 8002c30:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002c32:	4798      	blx	r3
 8002c34:	4605      	mov	r5, r0
 8002c36:	4631      	mov	r1, r6
 8002c38:	f000 fec0 	bl	80039bc <_ZN13BoomPresenterC1ER8BoomView>
    *currentTrans = newTransition;
 8002c3c:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8002c40:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8002c44:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002c48:	b1e5      	cbz	r5, 8002c84 <_ZN23FrontendApplicationBase30gotoBoomScreenNoTransitionImplEv+0x128>
 8002c4a:	1d2b      	adds	r3, r5, #4
 8002c4c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002c50:	4630      	mov	r0, r6
 8002c52:	6833      	ldr	r3, [r6, #0]
 8002c54:	f8c5 a008 	str.w	sl, [r5, #8]
 8002c58:	68db      	ldr	r3, [r3, #12]
 8002c5a:	63f5      	str	r5, [r6, #60]	; 0x3c
 8002c5c:	4798      	blx	r3
    newPresenter->activate();
 8002c5e:	682b      	ldr	r3, [r5, #0]
 8002c60:	4628      	mov	r0, r5
 8002c62:	681b      	ldr	r3, [r3, #0]
 8002c64:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002c66:	4621      	mov	r1, r4
 8002c68:	4630      	mov	r0, r6
 8002c6a:	f010 f9ff 	bl	801306c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002c6e:	6823      	ldr	r3, [r4, #0]
 8002c70:	4620      	mov	r0, r4
 8002c72:	691b      	ldr	r3, [r3, #16]
 8002c74:	4798      	blx	r3
    newTransition->invalidate();
 8002c76:	6823      	ldr	r3, [r4, #0]
 8002c78:	4620      	mov	r0, r4
 8002c7a:	695b      	ldr	r3, [r3, #20]
}
 8002c7c:	b001      	add	sp, #4
 8002c7e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002c82:	4718      	bx	r3
    model->bind(newPresenter);
 8002c84:	462b      	mov	r3, r5
 8002c86:	e7e1      	b.n	8002c4c <_ZN23FrontendApplicationBase30gotoBoomScreenNoTransitionImplEv+0xf0>
 8002c88:	08021630 	.word	0x08021630
 8002c8c:	0802195c 	.word	0x0802195c
 8002c90:	080217c1 	.word	0x080217c1
 8002c94:	08021816 	.word	0x08021816
 8002c98:	080218b9 	.word	0x080218b9
 8002c9c:	08021ce4 	.word	0x08021ce4
 8002ca0:	2400e0dc 	.word	0x2400e0dc
 8002ca4:	2400e0d8 	.word	0x2400e0d8

08002ca8 <_ZN23FrontendApplicationBase41gotoCountdownScreenWipeTransitionEastImplEv>:
{
 8002ca8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<CountdownView, CountdownPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002cac:	e9d0 ba54 	ldrd	fp, sl, [r0, #336]	; 0x150
{
 8002cb0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002cb2:	f8db 0008 	ldr.w	r0, [fp, #8]
 8002cb6:	6803      	ldr	r3, [r0, #0]
 8002cb8:	6a1b      	ldr	r3, [r3, #32]
 8002cba:	4798      	blx	r3
 8002cbc:	f5b0 7f84 	cmp.w	r0, #264	; 0x108
 8002cc0:	d205      	bcs.n	8002cce <_ZN23FrontendApplicationBase41gotoCountdownScreenWipeTransitionEastImplEv+0x26>
 8002cc2:	4b57      	ldr	r3, [pc, #348]	; (8002e20 <_ZN23FrontendApplicationBase41gotoCountdownScreenWipeTransitionEastImplEv+0x178>)
 8002cc4:	21a3      	movs	r1, #163	; 0xa3
 8002cc6:	4a57      	ldr	r2, [pc, #348]	; (8002e24 <_ZN23FrontendApplicationBase41gotoCountdownScreenWipeTransitionEastImplEv+0x17c>)
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002cc8:	4857      	ldr	r0, [pc, #348]	; (8002e28 <_ZN23FrontendApplicationBase41gotoCountdownScreenWipeTransitionEastImplEv+0x180>)
 8002cca:	f01c ff85 	bl	801fbd8 <__assert_func>
 8002cce:	f8db 0004 	ldr.w	r0, [fp, #4]
 8002cd2:	6803      	ldr	r3, [r0, #0]
 8002cd4:	6a1b      	ldr	r3, [r3, #32]
 8002cd6:	4798      	blx	r3
 8002cd8:	280f      	cmp	r0, #15
 8002cda:	d803      	bhi.n	8002ce4 <_ZN23FrontendApplicationBase41gotoCountdownScreenWipeTransitionEastImplEv+0x3c>
 8002cdc:	4b53      	ldr	r3, [pc, #332]	; (8002e2c <_ZN23FrontendApplicationBase41gotoCountdownScreenWipeTransitionEastImplEv+0x184>)
 8002cde:	21a4      	movs	r1, #164	; 0xa4
 8002ce0:	4a50      	ldr	r2, [pc, #320]	; (8002e24 <_ZN23FrontendApplicationBase41gotoCountdownScreenWipeTransitionEastImplEv+0x17c>)
 8002ce2:	e7f1      	b.n	8002cc8 <_ZN23FrontendApplicationBase41gotoCountdownScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002ce4:	f8db 000c 	ldr.w	r0, [fp, #12]
 8002ce8:	6803      	ldr	r3, [r0, #0]
 8002cea:	6a1b      	ldr	r3, [r3, #32]
 8002cec:	4798      	blx	r3
 8002cee:	2837      	cmp	r0, #55	; 0x37
 8002cf0:	d803      	bhi.n	8002cfa <_ZN23FrontendApplicationBase41gotoCountdownScreenWipeTransitionEastImplEv+0x52>
 8002cf2:	4b4f      	ldr	r3, [pc, #316]	; (8002e30 <_ZN23FrontendApplicationBase41gotoCountdownScreenWipeTransitionEastImplEv+0x188>)
 8002cf4:	21a5      	movs	r1, #165	; 0xa5
 8002cf6:	4a4b      	ldr	r2, [pc, #300]	; (8002e24 <_ZN23FrontendApplicationBase41gotoCountdownScreenWipeTransitionEastImplEv+0x17c>)
 8002cf8:	e7e6      	b.n	8002cc8 <_ZN23FrontendApplicationBase41gotoCountdownScreenWipeTransitionEastImplEv+0x20>
    if (*currentTrans)
 8002cfa:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8002e44 <_ZN23FrontendApplicationBase41gotoCountdownScreenWipeTransitionEastImplEv+0x19c>
    Application::getInstance()->clearAllTimerWidgets();
 8002cfe:	f00e fcb5 	bl	801166c <_ZN8touchgfx11Application11getInstanceEv>
 8002d02:	f00e fd01 	bl	8011708 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8002d06:	f8d9 0000 	ldr.w	r0, [r9]
 8002d0a:	b110      	cbz	r0, 8002d12 <_ZN23FrontendApplicationBase41gotoCountdownScreenWipeTransitionEastImplEv+0x6a>
        (*currentTrans)->tearDown();
 8002d0c:	6803      	ldr	r3, [r0, #0]
 8002d0e:	68db      	ldr	r3, [r3, #12]
 8002d10:	4798      	blx	r3
    if (*currentTrans)
 8002d12:	f8d9 0000 	ldr.w	r0, [r9]
 8002d16:	b110      	cbz	r0, 8002d1e <_ZN23FrontendApplicationBase41gotoCountdownScreenWipeTransitionEastImplEv+0x76>
        (*currentTrans)->~Transition();
 8002d18:	6803      	ldr	r3, [r0, #0]
 8002d1a:	681b      	ldr	r3, [r3, #0]
 8002d1c:	4798      	blx	r3
    if (*currentScreen)
 8002d1e:	f8df 8128 	ldr.w	r8, [pc, #296]	; 8002e48 <_ZN23FrontendApplicationBase41gotoCountdownScreenWipeTransitionEastImplEv+0x1a0>
 8002d22:	f8d8 0000 	ldr.w	r0, [r8]
 8002d26:	b110      	cbz	r0, 8002d2e <_ZN23FrontendApplicationBase41gotoCountdownScreenWipeTransitionEastImplEv+0x86>
        (*currentScreen)->tearDownScreen();
 8002d28:	6803      	ldr	r3, [r0, #0]
 8002d2a:	695b      	ldr	r3, [r3, #20]
 8002d2c:	4798      	blx	r3
    if (*currentPresenter)
 8002d2e:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002d32:	b110      	cbz	r0, 8002d3a <_ZN23FrontendApplicationBase41gotoCountdownScreenWipeTransitionEastImplEv+0x92>
        (*currentPresenter)->deactivate();
 8002d34:	6803      	ldr	r3, [r0, #0]
 8002d36:	685b      	ldr	r3, [r3, #4]
 8002d38:	4798      	blx	r3
    if (*currentScreen)
 8002d3a:	f8d8 0000 	ldr.w	r0, [r8]
 8002d3e:	b110      	cbz	r0, 8002d46 <_ZN23FrontendApplicationBase41gotoCountdownScreenWipeTransitionEastImplEv+0x9e>
        (*currentScreen)->~Screen();
 8002d40:	6803      	ldr	r3, [r0, #0]
 8002d42:	681b      	ldr	r3, [r3, #0]
 8002d44:	4798      	blx	r3
    if (*currentPresenter)
 8002d46:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002d4a:	b110      	cbz	r0, 8002d52 <_ZN23FrontendApplicationBase41gotoCountdownScreenWipeTransitionEastImplEv+0xaa>
        (*currentPresenter)->~Presenter();
 8002d4c:	6803      	ldr	r3, [r0, #0]
 8002d4e:	689b      	ldr	r3, [r3, #8]
 8002d50:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002d52:	f8db 000c 	ldr.w	r0, [fp, #12]
 8002d56:	2100      	movs	r1, #0
 8002d58:	2500      	movs	r5, #0
 8002d5a:	6803      	ldr	r3, [r0, #0]
 8002d5c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002d5e:	4798      	blx	r3
          solid()
 8002d60:	4b34      	ldr	r3, [pc, #208]	; (8002e34 <_ZN23FrontendApplicationBase41gotoCountdownScreenWipeTransitionEastImplEv+0x18c>)
 8002d62:	4604      	mov	r4, r0
 8002d64:	6045      	str	r5, [r0, #4]
 8002d66:	6003      	str	r3, [r0, #0]
 8002d68:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8002d6c:	7285      	strb	r5, [r0, #10]
 8002d6e:	3010      	adds	r0, #16
 8002d70:	f820 3c08 	strh.w	r3, [r0, #-8]
 8002d74:	f44f 7380 	mov.w	r3, #256	; 0x100
 8002d78:	81e5      	strh	r5, [r4, #14]
 8002d7a:	6363      	str	r3, [r4, #52]	; 0x34
    class FullSolidRect : public Widget
 8002d7c:	4b2e      	ldr	r3, [pc, #184]	; (8002e38 <_ZN23FrontendApplicationBase41gotoCountdownScreenWipeTransitionEastImplEv+0x190>)
        setWidth(width);
 8002d7e:	9001      	str	r0, [sp, #4]
 8002d80:	6123      	str	r3, [r4, #16]
            targetValue = HAL::DISPLAY_WIDTH;
 8002d82:	4b2e      	ldr	r3, [pc, #184]	; (8002e3c <_ZN23FrontendApplicationBase41gotoCountdownScreenWipeTransitionEastImplEv+0x194>)
 8002d84:	f9b3 1000 	ldrsh.w	r1, [r3]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8002d88:	4b2d      	ldr	r3, [pc, #180]	; (8002e40 <_ZN23FrontendApplicationBase41gotoCountdownScreenWipeTransitionEastImplEv+0x198>)
            targetValue = HAL::DISPLAY_WIDTH;
 8002d8a:	81a1      	strh	r1, [r4, #12]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8002d8c:	f9b3 6000 	ldrsh.w	r6, [r3]
          solid()
 8002d90:	e9c4 5505 	strd	r5, r5, [r4, #20]
 8002d94:	e9c4 5507 	strd	r5, r5, [r4, #28]
 8002d98:	e9c4 5509 	strd	r5, r5, [r4, #36]	; 0x24
 8002d9c:	e9c4 550b 	strd	r5, r5, [r4, #44]	; 0x2c
 8002da0:	f7ff fb60 	bl	8002464 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8002da4:	6923      	ldr	r3, [r4, #16]
 8002da6:	4631      	mov	r1, r6
 8002da8:	9801      	ldr	r0, [sp, #4]
 8002daa:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002dac:	4798      	blx	r3
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002dae:	f8db 0008 	ldr.w	r0, [fp, #8]
 8002db2:	4629      	mov	r1, r5
 8002db4:	6803      	ldr	r3, [r0, #0]
 8002db6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002db8:	4798      	blx	r3
 8002dba:	4606      	mov	r6, r0
 8002dbc:	f000 fe52 	bl	8003a64 <_ZN13CountdownViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002dc0:	f8db 0004 	ldr.w	r0, [fp, #4]
 8002dc4:	4629      	mov	r1, r5
 8002dc6:	6803      	ldr	r3, [r0, #0]
 8002dc8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002dca:	4798      	blx	r3
 8002dcc:	4605      	mov	r5, r0
 8002dce:	4631      	mov	r1, r6
 8002dd0:	f000 fe2e 	bl	8003a30 <_ZN18CountdownPresenterC1ER13CountdownView>
    *currentTrans = newTransition;
 8002dd4:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8002dd8:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8002ddc:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002de0:	b1e5      	cbz	r5, 8002e1c <_ZN23FrontendApplicationBase41gotoCountdownScreenWipeTransitionEastImplEv+0x174>
 8002de2:	1d2b      	adds	r3, r5, #4
 8002de4:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002de8:	4630      	mov	r0, r6
 8002dea:	6833      	ldr	r3, [r6, #0]
 8002dec:	f8c5 a008 	str.w	sl, [r5, #8]
 8002df0:	68db      	ldr	r3, [r3, #12]
 8002df2:	63f5      	str	r5, [r6, #60]	; 0x3c
 8002df4:	4798      	blx	r3
    newPresenter->activate();
 8002df6:	682b      	ldr	r3, [r5, #0]
 8002df8:	4628      	mov	r0, r5
 8002dfa:	681b      	ldr	r3, [r3, #0]
 8002dfc:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002dfe:	4621      	mov	r1, r4
 8002e00:	4630      	mov	r0, r6
 8002e02:	f010 f933 	bl	801306c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002e06:	6823      	ldr	r3, [r4, #0]
 8002e08:	4620      	mov	r0, r4
 8002e0a:	691b      	ldr	r3, [r3, #16]
 8002e0c:	4798      	blx	r3
    newTransition->invalidate();
 8002e0e:	6823      	ldr	r3, [r4, #0]
 8002e10:	4620      	mov	r0, r4
 8002e12:	695b      	ldr	r3, [r3, #20]
}
 8002e14:	b003      	add	sp, #12
 8002e16:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002e1a:	4718      	bx	r3
    model->bind(newPresenter);
 8002e1c:	462b      	mov	r3, r5
 8002e1e:	e7e1      	b.n	8002de4 <_ZN23FrontendApplicationBase41gotoCountdownScreenWipeTransitionEastImplEv+0x13c>
 8002e20:	08021630 	.word	0x08021630
 8002e24:	08021a5a 	.word	0x08021a5a
 8002e28:	080217c1 	.word	0x080217c1
 8002e2c:	08021816 	.word	0x08021816
 8002e30:	080218b9 	.word	0x080218b9
 8002e34:	08021d94 	.word	0x08021d94
 8002e38:	08021d2c 	.word	0x08021d2c
 8002e3c:	2400e070 	.word	0x2400e070
 8002e40:	2400e072 	.word	0x2400e072
 8002e44:	2400e0dc 	.word	0x2400e0dc
 8002e48:	2400e0d8 	.word	0x2400e0d8

08002e4c <_ZN23FrontendApplicationBase33gotoInitialScreenNoTransitionImplEv>:
{
 8002e4c:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<InitialView, InitialPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002e50:	e9d0 5a54 	ldrd	r5, sl, [r0, #336]	; 0x150
{
 8002e54:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002e56:	68a8      	ldr	r0, [r5, #8]
 8002e58:	6803      	ldr	r3, [r0, #0]
 8002e5a:	6a1b      	ldr	r3, [r3, #32]
 8002e5c:	4798      	blx	r3
 8002e5e:	f243 13d3 	movw	r3, #12755	; 0x31d3
 8002e62:	4298      	cmp	r0, r3
 8002e64:	d805      	bhi.n	8002e72 <_ZN23FrontendApplicationBase33gotoInitialScreenNoTransitionImplEv+0x26>
 8002e66:	4b45      	ldr	r3, [pc, #276]	; (8002f7c <_ZN23FrontendApplicationBase33gotoInitialScreenNoTransitionImplEv+0x130>)
 8002e68:	21a3      	movs	r1, #163	; 0xa3
 8002e6a:	4a45      	ldr	r2, [pc, #276]	; (8002f80 <_ZN23FrontendApplicationBase33gotoInitialScreenNoTransitionImplEv+0x134>)
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002e6c:	4845      	ldr	r0, [pc, #276]	; (8002f84 <_ZN23FrontendApplicationBase33gotoInitialScreenNoTransitionImplEv+0x138>)
 8002e6e:	f01c feb3 	bl	801fbd8 <__assert_func>
 8002e72:	6868      	ldr	r0, [r5, #4]
 8002e74:	6803      	ldr	r3, [r0, #0]
 8002e76:	6a1b      	ldr	r3, [r3, #32]
 8002e78:	4798      	blx	r3
 8002e7a:	280f      	cmp	r0, #15
 8002e7c:	d803      	bhi.n	8002e86 <_ZN23FrontendApplicationBase33gotoInitialScreenNoTransitionImplEv+0x3a>
 8002e7e:	4b42      	ldr	r3, [pc, #264]	; (8002f88 <_ZN23FrontendApplicationBase33gotoInitialScreenNoTransitionImplEv+0x13c>)
 8002e80:	21a4      	movs	r1, #164	; 0xa4
 8002e82:	4a3f      	ldr	r2, [pc, #252]	; (8002f80 <_ZN23FrontendApplicationBase33gotoInitialScreenNoTransitionImplEv+0x134>)
 8002e84:	e7f2      	b.n	8002e6c <_ZN23FrontendApplicationBase33gotoInitialScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002e86:	68e8      	ldr	r0, [r5, #12]
 8002e88:	6803      	ldr	r3, [r0, #0]
 8002e8a:	6a1b      	ldr	r3, [r3, #32]
 8002e8c:	4798      	blx	r3
 8002e8e:	280b      	cmp	r0, #11
 8002e90:	d803      	bhi.n	8002e9a <_ZN23FrontendApplicationBase33gotoInitialScreenNoTransitionImplEv+0x4e>
 8002e92:	4b3e      	ldr	r3, [pc, #248]	; (8002f8c <_ZN23FrontendApplicationBase33gotoInitialScreenNoTransitionImplEv+0x140>)
 8002e94:	21a5      	movs	r1, #165	; 0xa5
 8002e96:	4a3a      	ldr	r2, [pc, #232]	; (8002f80 <_ZN23FrontendApplicationBase33gotoInitialScreenNoTransitionImplEv+0x134>)
 8002e98:	e7e8      	b.n	8002e6c <_ZN23FrontendApplicationBase33gotoInitialScreenNoTransitionImplEv+0x20>
    if (*currentTrans)
 8002e9a:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8002f94 <_ZN23FrontendApplicationBase33gotoInitialScreenNoTransitionImplEv+0x148>
    Application::getInstance()->clearAllTimerWidgets();
 8002e9e:	f00e fbe5 	bl	801166c <_ZN8touchgfx11Application11getInstanceEv>
 8002ea2:	f00e fc31 	bl	8011708 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8002ea6:	f8d9 0000 	ldr.w	r0, [r9]
 8002eaa:	b110      	cbz	r0, 8002eb2 <_ZN23FrontendApplicationBase33gotoInitialScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 8002eac:	6803      	ldr	r3, [r0, #0]
 8002eae:	68db      	ldr	r3, [r3, #12]
 8002eb0:	4798      	blx	r3
    if (*currentTrans)
 8002eb2:	f8d9 0000 	ldr.w	r0, [r9]
 8002eb6:	b110      	cbz	r0, 8002ebe <_ZN23FrontendApplicationBase33gotoInitialScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 8002eb8:	6803      	ldr	r3, [r0, #0]
 8002eba:	681b      	ldr	r3, [r3, #0]
 8002ebc:	4798      	blx	r3
    if (*currentScreen)
 8002ebe:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8002f98 <_ZN23FrontendApplicationBase33gotoInitialScreenNoTransitionImplEv+0x14c>
 8002ec2:	f8d8 0000 	ldr.w	r0, [r8]
 8002ec6:	b110      	cbz	r0, 8002ece <_ZN23FrontendApplicationBase33gotoInitialScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8002ec8:	6803      	ldr	r3, [r0, #0]
 8002eca:	695b      	ldr	r3, [r3, #20]
 8002ecc:	4798      	blx	r3
    if (*currentPresenter)
 8002ece:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002ed2:	b110      	cbz	r0, 8002eda <_ZN23FrontendApplicationBase33gotoInitialScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8002ed4:	6803      	ldr	r3, [r0, #0]
 8002ed6:	685b      	ldr	r3, [r3, #4]
 8002ed8:	4798      	blx	r3
    if (*currentScreen)
 8002eda:	f8d8 0000 	ldr.w	r0, [r8]
 8002ede:	b110      	cbz	r0, 8002ee6 <_ZN23FrontendApplicationBase33gotoInitialScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 8002ee0:	6803      	ldr	r3, [r0, #0]
 8002ee2:	681b      	ldr	r3, [r3, #0]
 8002ee4:	4798      	blx	r3
    if (*currentPresenter)
 8002ee6:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002eea:	b110      	cbz	r0, 8002ef2 <_ZN23FrontendApplicationBase33gotoInitialScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8002eec:	6803      	ldr	r3, [r0, #0]
 8002eee:	689b      	ldr	r3, [r3, #8]
 8002ef0:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002ef2:	68e8      	ldr	r0, [r5, #12]
 8002ef4:	2100      	movs	r1, #0
 8002ef6:	f04f 0b00 	mov.w	fp, #0
 8002efa:	6803      	ldr	r3, [r0, #0]
 8002efc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002efe:	4798      	blx	r3
 8002f00:	4b23      	ldr	r3, [pc, #140]	; (8002f90 <_ZN23FrontendApplicationBase33gotoInitialScreenNoTransitionImplEv+0x144>)
 8002f02:	4604      	mov	r4, r0
 8002f04:	f8c0 b004 	str.w	fp, [r0, #4]
 8002f08:	6003      	str	r3, [r0, #0]
 8002f0a:	4659      	mov	r1, fp
 8002f0c:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002f10:	68a8      	ldr	r0, [r5, #8]
 8002f12:	6803      	ldr	r3, [r0, #0]
 8002f14:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002f16:	4798      	blx	r3
 8002f18:	4606      	mov	r6, r0
 8002f1a:	f000 fe87 	bl	8003c2c <_ZN11InitialViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002f1e:	6868      	ldr	r0, [r5, #4]
 8002f20:	4659      	mov	r1, fp
 8002f22:	6803      	ldr	r3, [r0, #0]
 8002f24:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002f26:	4798      	blx	r3
 8002f28:	4605      	mov	r5, r0
 8002f2a:	4631      	mov	r1, r6
 8002f2c:	f000 fdfe 	bl	8003b2c <_ZN16InitialPresenterC1ER11InitialView>
    *currentTrans = newTransition;
 8002f30:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8002f34:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8002f38:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002f3c:	b1e5      	cbz	r5, 8002f78 <_ZN23FrontendApplicationBase33gotoInitialScreenNoTransitionImplEv+0x12c>
 8002f3e:	1d2b      	adds	r3, r5, #4
 8002f40:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002f44:	4630      	mov	r0, r6
 8002f46:	6833      	ldr	r3, [r6, #0]
 8002f48:	f8c5 a008 	str.w	sl, [r5, #8]
 8002f4c:	68db      	ldr	r3, [r3, #12]
 8002f4e:	63f5      	str	r5, [r6, #60]	; 0x3c
 8002f50:	4798      	blx	r3
    newPresenter->activate();
 8002f52:	682b      	ldr	r3, [r5, #0]
 8002f54:	4628      	mov	r0, r5
 8002f56:	681b      	ldr	r3, [r3, #0]
 8002f58:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002f5a:	4621      	mov	r1, r4
 8002f5c:	4630      	mov	r0, r6
 8002f5e:	f010 f885 	bl	801306c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002f62:	6823      	ldr	r3, [r4, #0]
 8002f64:	4620      	mov	r0, r4
 8002f66:	691b      	ldr	r3, [r3, #16]
 8002f68:	4798      	blx	r3
    newTransition->invalidate();
 8002f6a:	6823      	ldr	r3, [r4, #0]
 8002f6c:	4620      	mov	r0, r4
 8002f6e:	695b      	ldr	r3, [r3, #20]
}
 8002f70:	b001      	add	sp, #4
 8002f72:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002f76:	4718      	bx	r3
    model->bind(newPresenter);
 8002f78:	462b      	mov	r3, r5
 8002f7a:	e7e1      	b.n	8002f40 <_ZN23FrontendApplicationBase33gotoInitialScreenNoTransitionImplEv+0xf4>
 8002f7c:	08021630 	.word	0x08021630
 8002f80:	08021b74 	.word	0x08021b74
 8002f84:	080217c1 	.word	0x080217c1
 8002f88:	08021816 	.word	0x08021816
 8002f8c:	080218b9 	.word	0x080218b9
 8002f90:	08021ce4 	.word	0x08021ce4
 8002f94:	2400e0dc 	.word	0x2400e0dc
 8002f98:	2400e0d8 	.word	0x2400e0d8

08002f9c <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002f9c:	4b04      	ldr	r3, [pc, #16]	; (8002fb0 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8002f9e:	681b      	ldr	r3, [r3, #0]
 8002fa0:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8002fa4:	b10a      	cbz	r2, 8002faa <_ZN8touchgfx3HAL3lcdEv+0xe>
 8002fa6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8002fa8:	b900      	cbnz	r0, 8002fac <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 8002faa:	6898      	ldr	r0, [r3, #8]
    }
 8002fac:	4770      	bx	lr
 8002fae:	bf00      	nop
 8002fb0:	2400e07c 	.word	0x2400e07c

08002fb4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8002fb4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002fb6:	4604      	mov	r4, r0
        animationCounter++;
 8002fb8:	7a80      	ldrb	r0, [r0, #10]
    virtual void handleTickEvent()
 8002fba:	b089      	sub	sp, #36	; 0x24
        animationCounter++;
 8002fbc:	3001      	adds	r0, #1
        if (animationCounter <= (animationSteps))
 8002fbe:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8002fc0:	b2c0      	uxtb	r0, r0
        if (animationCounter <= (animationSteps))
 8002fc2:	4298      	cmp	r0, r3
        animationCounter++;
 8002fc4:	72a0      	strb	r0, [r4, #10]
        if (animationCounter <= (animationSteps))
 8002fc6:	d850      	bhi.n	800306a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xb6>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002fc8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8002fcc:	2100      	movs	r1, #0
 8002fce:	f010 f853 	bl	8013078 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
            if (calculatedValue % 2)
 8002fd2:	f010 0201 	ands.w	r2, r0, #1
 8002fd6:	b283      	uxth	r3, r0
 8002fd8:	d04d      	beq.n	8003076 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xc2>
                calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8002fda:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8002fde:	2800      	cmp	r0, #0
 8002fe0:	bfd8      	it	le
 8002fe2:	460a      	movle	r2, r1
 8002fe4:	4413      	add	r3, r2
 8002fe6:	81e3      	strh	r3, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002fe8:	4e24      	ldr	r6, [pc, #144]	; (800307c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xc8>)
 8002fea:	2500      	movs	r5, #0
                const uint16_t prevSolidWidth = solid.getWidth();
 8002fec:	f8b4 c018 	ldrh.w	ip, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002ff0:	8831      	ldrh	r1, [r6, #0]
 8002ff2:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8002ff4:	4f22      	ldr	r7, [pc, #136]	; (8003080 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xcc>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002ff6:	1aca      	subs	r2, r1, r3
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 8002ff8:	4463      	add	r3, ip
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8002ffa:	f9b7 0000 	ldrsh.w	r0, [r7]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 8002ffe:	1a5b      	subs	r3, r3, r1
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003000:	b212      	sxth	r2, r2
 8003002:	f8ad 001e 	strh.w	r0, [sp, #30]
                screenContainer->invalidateRect(r);
 8003006:	a906      	add	r1, sp, #24
 8003008:	6860      	ldr	r0, [r4, #4]
 800300a:	f8ad 301c 	strh.w	r3, [sp, #28]
 800300e:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 8003010:	8322      	strh	r2, [r4, #24]
 8003012:	691b      	ldr	r3, [r3, #16]
 8003014:	f8ad 2018 	strh.w	r2, [sp, #24]
 8003018:	f8ad 501a 	strh.w	r5, [sp, #26]
 800301c:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 800301e:	7aa3      	ldrb	r3, [r4, #10]
 8003020:	2b01      	cmp	r3, #1
 8003022:	d126      	bne.n	8003072 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
 8003024:	4b17      	ldr	r3, [pc, #92]	; (8003084 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xd0>)
 8003026:	781b      	ldrb	r3, [r3, #0]
 8003028:	b31b      	cbz	r3, 8003072 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
            Rect rect = solid.getRect(); // Part to copy between buffers
 800302a:	69a1      	ldr	r1, [r4, #24]
 800302c:	ab04      	add	r3, sp, #16
 800302e:	6960      	ldr	r0, [r4, #20]
 8003030:	c303      	stmia	r3!, {r0, r1}
        return instance;
 8003032:	4b15      	ldr	r3, [pc, #84]	; (8003088 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xd4>)
 8003034:	6818      	ldr	r0, [r3, #0]
            uint16_t* tftFb = HAL::getInstance()->getTFTFrameBuffer();
 8003036:	6803      	ldr	r3, [r0, #0]
 8003038:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800303a:	4798      	blx	r3
            source.width = HAL::DISPLAY_WIDTH;
 800303c:	8833      	ldrh	r3, [r6, #0]
            uint16_t* tftFb = HAL::getInstance()->getTFTFrameBuffer();
 800303e:	9003      	str	r0, [sp, #12]
            source.width = HAL::DISPLAY_WIDTH;
 8003040:	f8ad 301c 	strh.w	r3, [sp, #28]
            source.height = HAL::DISPLAY_HEIGHT;
 8003044:	883b      	ldrh	r3, [r7, #0]
        : x(0), y(0), width(0), height(0)
 8003046:	f8ad 5018 	strh.w	r5, [sp, #24]
 800304a:	f8ad 301e 	strh.w	r3, [sp, #30]
 800304e:	f8ad 501a 	strh.w	r5, [sp, #26]
            HAL::getInstance()->lcd().blitCopy((const uint16_t*)tftFb, source, rect, 255, false);
 8003052:	f7ff ffa3 	bl	8002f9c <_ZN8touchgfx3HAL3lcdEv>
 8003056:	22ff      	movs	r2, #255	; 0xff
 8003058:	6803      	ldr	r3, [r0, #0]
 800305a:	9903      	ldr	r1, [sp, #12]
 800305c:	9200      	str	r2, [sp, #0]
 800305e:	aa06      	add	r2, sp, #24
 8003060:	9501      	str	r5, [sp, #4]
 8003062:	68dc      	ldr	r4, [r3, #12]
 8003064:	ab04      	add	r3, sp, #16
 8003066:	47a0      	blx	r4
 8003068:	e003      	b.n	8003072 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
            done = true;
 800306a:	2301      	movs	r3, #1
 800306c:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 800306e:	2300      	movs	r3, #0
 8003070:	72a3      	strb	r3, [r4, #10]
    }
 8003072:	b009      	add	sp, #36	; 0x24
 8003074:	bdf0      	pop	{r4, r5, r6, r7, pc}
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8003076:	81e0      	strh	r0, [r4, #14]
 8003078:	e7b6      	b.n	8002fe8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x34>
 800307a:	bf00      	nop
 800307c:	2400e070 	.word	0x2400e070
 8003080:	2400e072 	.word	0x2400e072
 8003084:	2400e07a 	.word	0x2400e07a
 8003088:	2400e07c 	.word	0x2400e07c

0800308c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 800308c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800308e:	4604      	mov	r4, r0
 8003090:	4617      	mov	r7, r2
 8003092:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8003094:	f00e fb7e 	bl	8011794 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8003098:	4b0e      	ldr	r3, [pc, #56]	; (80030d4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x48>)
          pendingScreenTransitionCallback(0)
 800309a:	2500      	movs	r5, #0
        instance = this;
 800309c:	601c      	str	r4, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 800309e:	4629      	mov	r1, r5
      model(m)
 80030a0:	4b0d      	ldr	r3, [pc, #52]	; (80030d8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x4c>)
 80030a2:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun_0(0)
 80030a4:	4b0d      	ldr	r3, [pc, #52]	; (80030dc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 80030a6:	e9c4 3550 	strd	r3, r5, [r4, #320]	; 0x140
 80030aa:	4b0d      	ldr	r3, [pc, #52]	; (80030e0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 80030ac:	6818      	ldr	r0, [r3, #0]
 80030ae:	e9c4 5552 	strd	r5, r5, [r4, #328]	; 0x148
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80030b2:	6803      	ldr	r3, [r0, #0]
          pendingScreenTransitionCallback(0)
 80030b4:	e9c4 554e 	strd	r5, r5, [r4, #312]	; 0x138
 80030b8:	689b      	ldr	r3, [r3, #8]
      model(m)
 80030ba:	e9c4 7654 	strd	r7, r6, [r4, #336]	; 0x150
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80030be:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 80030c0:	4628      	mov	r0, r5
 80030c2:	f000 fbd7 	bl	8003874 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD24bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 80030c6:	f7ff ff69 	bl	8002f9c <_ZN8touchgfx3HAL3lcdEv>
 80030ca:	f015 f8fa 	bl	80182c2 <_ZN8touchgfx8LCD24bpp22enableTextureMapperAllEv>
}
 80030ce:	4620      	mov	r0, r4
 80030d0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80030d2:	bf00      	nop
 80030d4:	2400e0e8 	.word	0x2400e0e8
 80030d8:	08021c98 	.word	0x08021c98
 80030dc:	08021c80 	.word	0x08021c80
 80030e0:	2400e07c 	.word	0x2400e07c

080030e4 <_ZN23FrontendApplicationBase29gotoInitialScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80030e4:	4b06      	ldr	r3, [pc, #24]	; (8003100 <_ZN23FrontendApplicationBase29gotoInitialScreenNoTransitionEv+0x1c>)
 80030e6:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 80030ea:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 80030ee:	2300      	movs	r3, #0
 80030f0:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 80030f4:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 80030f8:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 80030fc:	4770      	bx	lr
 80030fe:	bf00      	nop
 8003100:	08002e4d 	.word	0x08002e4d

08003104 <_ZN23FrontendApplicationBase37gotoCountdownScreenWipeTransitionEastEv>:
 8003104:	4b06      	ldr	r3, [pc, #24]	; (8003120 <_ZN23FrontendApplicationBase37gotoCountdownScreenWipeTransitionEastEv+0x1c>)
 8003106:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 800310a:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 800310e:	2300      	movs	r3, #0
 8003110:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8003114:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8003118:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 800311c:	4770      	bx	lr
 800311e:	bf00      	nop
 8003120:	08002ca9 	.word	0x08002ca9

08003124 <_ZN23FrontendApplicationBase26gotoBoomScreenNoTransitionEv>:
 8003124:	4b06      	ldr	r3, [pc, #24]	; (8003140 <_ZN23FrontendApplicationBase26gotoBoomScreenNoTransitionEv+0x1c>)
 8003126:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 800312a:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 800312e:	2300      	movs	r3, #0
 8003130:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8003134:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8003138:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 800313c:	4770      	bx	lr
 800313e:	bf00      	nop
 8003140:	08002b5d 	.word	0x08002b5d

08003144 <_ZN23FrontendApplicationBase30gotoBlankScreenBlockTransitionEv>:
 8003144:	4b06      	ldr	r3, [pc, #24]	; (8003160 <_ZN23FrontendApplicationBase30gotoBlankScreenBlockTransitionEv+0x1c>)
 8003146:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 800314a:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 800314e:	2300      	movs	r3, #0
 8003150:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8003154:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8003158:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 800315c:	4770      	bx	lr
 800315e:	bf00      	nop
 8003160:	080029dd 	.word	0x080029dd

08003164 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8003164:	6a00      	ldr	r0, [r0, #32]
 8003166:	4770      	bx	lr

08003168 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8003168:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800316a:	4770      	bx	lr

0800316c <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 800316c:	4770      	bx	lr

0800316e <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 800316e:	888b      	ldrh	r3, [r1, #4]
 8003170:	6980      	ldr	r0, [r0, #24]
 8003172:	0adb      	lsrs	r3, r3, #11
 8003174:	680a      	ldr	r2, [r1, #0]
 8003176:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 800317a:	4410      	add	r0, r2
 800317c:	4770      	bx	lr

0800317e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 800317e:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8003180:	b1c2      	cbz	r2, 80031b4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8003182:	7b13      	ldrb	r3, [r2, #12]
 8003184:	b1b3      	cbz	r3, 80031b4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8003186:	7b54      	ldrb	r4, [r2, #13]
 8003188:	7ad2      	ldrb	r2, [r2, #11]
 800318a:	0224      	lsls	r4, r4, #8
 800318c:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8003190:	4314      	orrs	r4, r2
 8003192:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8003194:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8003196:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 800319a:	8813      	ldrh	r3, [r2, #0]
 800319c:	428b      	cmp	r3, r1
 800319e:	d102      	bne.n	80031a6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 80031a0:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 80031a4:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 80031a6:	d805      	bhi.n	80031b4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80031a8:	3801      	subs	r0, #1
 80031aa:	3204      	adds	r2, #4
 80031ac:	b280      	uxth	r0, r0
 80031ae:	2800      	cmp	r0, #0
 80031b0:	d1f3      	bne.n	800319a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 80031b2:	e7f7      	b.n	80031a4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 80031b4:	2000      	movs	r0, #0
 80031b6:	e7f5      	b.n	80031a4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

080031b8 <_ZN8touchgfx13GeneratedFontD0Ev>:
 80031b8:	b510      	push	{r4, lr}
 80031ba:	4604      	mov	r4, r0
 80031bc:	2128      	movs	r1, #40	; 0x28
 80031be:	f01c fb2e 	bl	801f81e <_ZdlPvj>
 80031c2:	4620      	mov	r0, r4
 80031c4:	bd10      	pop	{r4, pc}
	...

080031c8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 80031c8:	b530      	push	{r4, r5, lr}
 80031ca:	b089      	sub	sp, #36	; 0x24
 80031cc:	4604      	mov	r4, r0
      arabicTable(formsTable)
 80031ce:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 80031d2:	9506      	str	r5, [sp, #24]
 80031d4:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 80031d8:	9505      	str	r5, [sp, #20]
 80031da:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 80031de:	9504      	str	r5, [sp, #16]
 80031e0:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 80031e4:	9503      	str	r5, [sp, #12]
 80031e6:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 80031ea:	9502      	str	r5, [sp, #8]
 80031ec:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 80031f0:	9501      	str	r5, [sp, #4]
 80031f2:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 80031f6:	9500      	str	r5, [sp, #0]
 80031f8:	f00f fae6 	bl	80127c8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 80031fc:	4b06      	ldr	r3, [pc, #24]	; (8003218 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x50>)
}
 80031fe:	4620      	mov	r0, r4
      arabicTable(formsTable)
 8003200:	6023      	str	r3, [r4, #0]
 8003202:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8003204:	61a3      	str	r3, [r4, #24]
 8003206:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8003208:	61e3      	str	r3, [r4, #28]
 800320a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800320c:	6223      	str	r3, [r4, #32]
 800320e:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8003210:	6263      	str	r3, [r4, #36]	; 0x24
}
 8003212:	b009      	add	sp, #36	; 0x24
 8003214:	bd30      	pop	{r4, r5, pc}
 8003216:	bf00      	nop
 8003218:	08021db8 	.word	0x08021db8

0800321c <_ZN15InitialViewBaseD1Ev>:

class InitialViewBase : public touchgfx::View<InitialPresenter>
{
public:
    InitialViewBase();
    virtual ~InitialViewBase() {}
 800321c:	4770      	bx	lr

0800321e <_ZN15InitialViewBase11setupScreenEv>:
}

void InitialViewBase::setupScreen()
{

}
 800321e:	4770      	bx	lr

08003220 <_ZN15InitialViewBaseD0Ev>:
 8003220:	b510      	push	{r4, lr}
 8003222:	4604      	mov	r4, r0
 8003224:	f243 11c8 	movw	r1, #12744	; 0x31c8
 8003228:	f01c faf9 	bl	801f81e <_ZdlPvj>
 800322c:	4620      	mov	r0, r4
 800322e:	bd10      	pop	{r4, pc}

08003230 <_ZN15InitialViewBase14handleKeyEventEh>:

//Handles when a key is pressed
void InitialViewBase::handleKeyEvent(uint8_t key)
{
 8003230:	b508      	push	{r3, lr}
    if(0 == key)
 8003232:	b929      	cbnz	r1, 8003240 <_ZN15InitialViewBase14handleKeyEventEh+0x10>
    virtual void setupScreen();
    virtual void handleKeyEvent(uint8_t key);

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003234:	f00e fa1a 	bl	801166c <_ZN8touchgfx11Application11getInstanceEv>
        //HardwareButtonClick
        //When hardware button 0 clicked change screen to Boom
        //Go to Boom with no screen transition
        application().gotoBoomScreenNoTransition();
    }
}
 8003238:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoBoomScreenNoTransition();
 800323c:	f7ff bf72 	b.w	8003124 <_ZN23FrontendApplicationBase26gotoBoomScreenNoTransitionEv>
}
 8003240:	bd08      	pop	{r3, pc}
	...

08003244 <_ZN8touchgfx6WidgetC1Ev>:
 8003244:	2200      	movs	r2, #0
 8003246:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800324a:	e9c0 2203 	strd	r2, r2, [r0, #12]
          visible(true)
 800324e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8003252:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8003256:	f44f 7280 	mov.w	r2, #256	; 0x100
 800325a:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 800325c:	4a01      	ldr	r2, [pc, #4]	; (8003264 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 800325e:	6002      	str	r2, [r0, #0]
 8003260:	4770      	bx	lr
 8003262:	bf00      	nop
 8003264:	08021f18 	.word	0x08021f18

08003268 <_ZN8touchgfx21AbstractPainterRGB888C1Ev>:
 * @see AbstractPainter
 */
class AbstractPainterRGB888 : public AbstractPainter
{
public:
    AbstractPainterRGB888()
 8003268:	b570      	push	{r4, r5, r6, lr}
public:
    /** Initializes a new instance of the AbstractPainter class. */
    AbstractPainter()
        : areaOffsetX(0),
          areaOffsetY(0),
          widgetAlpha(255)
 800326a:	2300      	movs	r3, #0
 800326c:	22ff      	movs	r2, #255	; 0xff
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800326e:	4e14      	ldr	r6, [pc, #80]	; (80032c0 <_ZN8touchgfx21AbstractPainterRGB888C1Ev+0x58>)
 8003270:	4604      	mov	r4, r0
 8003272:	7202      	strb	r2, [r0, #8]
 8003274:	6043      	str	r3, [r0, #4]
        : AbstractPainter(), currentX(0), currentY(0)
 8003276:	4a13      	ldr	r2, [pc, #76]	; (80032c4 <_ZN8touchgfx21AbstractPainterRGB888C1Ev+0x5c>)
 8003278:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800327c:	6833      	ldr	r3, [r6, #0]
 800327e:	6002      	str	r2, [r0, #0]
 8003280:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8003284:	b10a      	cbz	r2, 800328a <_ZN8touchgfx21AbstractPainterRGB888C1Ev+0x22>
 8003286:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8003288:	b900      	cbnz	r0, 800328c <_ZN8touchgfx21AbstractPainterRGB888C1Ev+0x24>
        return instance->lcdRef;
 800328a:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 800328c:	6803      	ldr	r3, [r0, #0]
 800328e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003290:	4798      	blx	r3
 8003292:	1e43      	subs	r3, r0, #1
 8003294:	425d      	negs	r5, r3
 8003296:	415d      	adcs	r5, r3
        return auxiliaryLCD;
 8003298:	6833      	ldr	r3, [r6, #0]
 800329a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
 800329c:	b130      	cbz	r0, 80032ac <_ZN8touchgfx21AbstractPainterRGB888C1Ev+0x44>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 800329e:	6803      	ldr	r3, [r0, #0]
 80032a0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80032a2:	4798      	blx	r3
 80032a4:	2801      	cmp	r0, #1
 80032a6:	bf08      	it	eq
 80032a8:	f045 0501 	orreq.w	r5, r5, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB888) && "The chosen painter only works with RGB888 displays");
 80032ac:	b92d      	cbnz	r5, 80032ba <_ZN8touchgfx21AbstractPainterRGB888C1Ev+0x52>
 80032ae:	4b06      	ldr	r3, [pc, #24]	; (80032c8 <_ZN8touchgfx21AbstractPainterRGB888C1Ev+0x60>)
 80032b0:	2128      	movs	r1, #40	; 0x28
 80032b2:	4a06      	ldr	r2, [pc, #24]	; (80032cc <_ZN8touchgfx21AbstractPainterRGB888C1Ev+0x64>)
 80032b4:	4806      	ldr	r0, [pc, #24]	; (80032d0 <_ZN8touchgfx21AbstractPainterRGB888C1Ev+0x68>)
 80032b6:	f01c fc8f 	bl	801fbd8 <__assert_func>
    }
 80032ba:	4620      	mov	r0, r4
 80032bc:	bd70      	pop	{r4, r5, r6, pc}
 80032be:	bf00      	nop
 80032c0:	2400e07c 	.word	0x2400e07c
 80032c4:	080235b8 	.word	0x080235b8
 80032c8:	08021e08 	.word	0x08021e08
 80032cc:	08021e66 	.word	0x08021e66
 80032d0:	08021e9f 	.word	0x08021e9f

080032d4 <_ZN15InitialViewBaseC1Ev>:
InitialViewBase::InitialViewBase()
 80032d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80032d8:	4604      	mov	r4, r0
        : presenter(0)
 80032da:	2500      	movs	r5, #0
        touchable = touch;
 80032dc:	f04f 0a01 	mov.w	sl, #1
 80032e0:	4627      	mov	r7, r4
 80032e2:	f104 0898 	add.w	r8, r4, #152	; 0x98
 80032e6:	f104 09e0 	add.w	r9, r4, #224	; 0xe0
 80032ea:	f504 768c 	add.w	r6, r4, #280	; 0x118
 80032ee:	f504 7b2f 	add.w	fp, r4, #700	; 0x2bc
 80032f2:	ed2d 8b02 	vpush	{d8}
 80032f6:	b08d      	sub	sp, #52	; 0x34
 80032f8:	f00f fd0c 	bl	8012d14 <_ZN8touchgfx6ScreenC1Ev>
 80032fc:	4ba6      	ldr	r3, [pc, #664]	; (8003598 <_ZN15InitialViewBaseC1Ev+0x2c4>)
        : Widget(), alpha(255), color(0)
 80032fe:	4629      	mov	r1, r5
 8003300:	2226      	movs	r2, #38	; 0x26
 8003302:	63e5      	str	r5, [r4, #60]	; 0x3c
 8003304:	f847 3b40 	str.w	r3, [r7], #64
 8003308:	4638      	mov	r0, r7
 800330a:	f01c fcf1 	bl	801fcf0 <memset>
 800330e:	4638      	mov	r0, r7
 8003310:	f7ff ff98 	bl	8003244 <_ZN8touchgfx6WidgetC1Ev>
 8003314:	4ba1      	ldr	r3, [pc, #644]	; (800359c <_ZN15InitialViewBaseC1Ev+0x2c8>)
 */
class TextArea : public Widget
{
public:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8003316:	4629      	mov	r1, r5
 8003318:	2226      	movs	r2, #38	; 0x26
 800331a:	6423      	str	r3, [r4, #64]	; 0x40
 800331c:	23ff      	movs	r3, #255	; 0xff
 800331e:	4640      	mov	r0, r8
        : color(col)
 8003320:	66a5      	str	r5, [r4, #104]	; 0x68
 8003322:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 8003326:	f104 036c 	add.w	r3, r4, #108	; 0x6c
class Container : public Drawable
{
public:
    Container()
        : Drawable(),
          firstChild(0)
 800332a:	f8c4 5094 	str.w	r5, [r4, #148]	; 0x94
 800332e:	ee08 3a10 	vmov	s16, r3
          visible(true)
 8003332:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003336:	f8a4 3090 	strh.w	r3, [r4, #144]	; 0x90
 800333a:	4b99      	ldr	r3, [pc, #612]	; (80035a0 <_ZN15InitialViewBaseC1Ev+0x2cc>)
        : x(0), y(0), width(0), height(0)
 800333c:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 8003340:	66e3      	str	r3, [r4, #108]	; 0x6c
 8003342:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
 8003346:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 800334a:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
 800334e:	f01c fccf 	bl	801fcf0 <memset>
 8003352:	4640      	mov	r0, r8
 8003354:	f7ff ff76 	bl	8003244 <_ZN8touchgfx6WidgetC1Ev>
 8003358:	4b92      	ldr	r3, [pc, #584]	; (80035a4 <_ZN15InitialViewBaseC1Ev+0x2d0>)
 800335a:	f44f 017f 	mov.w	r1, #16711680	; 0xff0000
        : x(x), y(y), width(width), height(height)
 800335e:	f04f 32ff 	mov.w	r2, #4294967295
 8003362:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
class AbstractButton : public Widget
{
public:
    /** Sets this Widget touchable so the user can interact with buttons. */
    AbstractButton()
        : Widget(), action(), pressed(false)
 8003366:	4648      	mov	r0, r9
 8003368:	4b8f      	ldr	r3, [pc, #572]	; (80035a8 <_ZN15InitialViewBaseC1Ev+0x2d4>)
 800336a:	f8c4 10cc 	str.w	r1, [r4, #204]	; 0xcc
 800336e:	4629      	mov	r1, r5
 8003370:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8003374:	f64f 73ff 	movw	r3, #65535	; 0xffff
        : color(col)
 8003378:	f8c4 50c8 	str.w	r5, [r4, #200]	; 0xc8
 800337c:	f8a4 30c4 	strh.w	r3, [r4, #196]	; 0xc4
 8003380:	f8a4 50d0 	strh.w	r5, [r4, #208]	; 0xd0
        : x(x), y(y), width(width), height(height)
 8003384:	f8c4 50d4 	str.w	r5, [r4, #212]	; 0xd4
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
 8003388:	e9c4 2536 	strd	r2, r5, [r4, #216]	; 0xd8
 800338c:	2226      	movs	r2, #38	; 0x26
 800338e:	f01c fcaf 	bl	801fcf0 <memset>
 8003392:	4648      	mov	r0, r9
 8003394:	f7ff ff56 	bl	8003244 <_ZN8touchgfx6WidgetC1Ev>
 8003398:	f04f 32ff 	mov.w	r2, #4294967295
 800339c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80033a0:	4630      	mov	r0, r6
 80033a2:	f8a4 210e 	strh.w	r2, [r4, #270]	; 0x10e
 * A ToggleButton is a Button specialization that swaps the two bitmaps when clicked, such that
 * the previous "pressed" bitmap, now becomes the one displayed when button is not
 * pressed. This can by used to give the effect of a button that can be pressed in and
 * when it is subsequently pressed, it will pop back out.
 */
class ToggleButton : public Button
 80033a6:	4a81      	ldr	r2, [pc, #516]	; (80035ac <_ZN15InitialViewBaseC1Ev+0x2d8>)
 80033a8:	f8a4 3110 	strh.w	r3, [r4, #272]	; 0x110
 80033ac:	f8c4 20e0 	str.w	r2, [r4, #224]	; 0xe0
 */
class Button : public AbstractButton
{
public:
    Button()
        : AbstractButton(), up(), down(), alpha(255)
 80033b0:	f884 3112 	strb.w	r3, [r4, #274]	; 0x112
 80033b4:	f8a4 3114 	strh.w	r3, [r4, #276]	; 0x114
 80033b8:	f8c4 5108 	str.w	r5, [r4, #264]	; 0x108
 80033bc:	f884 510c 	strb.w	r5, [r4, #268]	; 0x10c
        touchable = touch;
 80033c0:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 80033c4:	f00b ffec 	bl	800f3a0 <_ZN8touchgfx5GaugeC1Ev>
 80033c8:	f64f 73ff 	movw	r3, #65535	; 0xffff
     */
    PainterRGB888Bitmap(const Bitmap& bmp = Bitmap(BITMAP_INVALID))
        : AbstractPainterRGB888(),
          bitmapARGB8888Pointer(0), bitmapRGB888Pointer(0),
          bitmap(), bitmapRectToFrameBuffer(),
          xOffset(0), yOffset(0), isTiled(false)
 80033cc:	4658      	mov	r0, fp
 80033ce:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80033d2:	f7ff ff49 	bl	8003268 <_ZN8touchgfx21AbstractPainterRGB888C1Ev>
 80033d6:	4a76      	ldr	r2, [pc, #472]	; (80035b0 <_ZN15InitialViewBaseC1Ev+0x2dc>)
 80033d8:	f64f 73ff 	movw	r3, #65535	; 0xffff
    {
        setBitmap(bmp);
 80033dc:	a90a      	add	r1, sp, #40	; 0x28
 80033de:	4658      	mov	r0, fp
          xOffset(0), yOffset(0), isTiled(false)
 80033e0:	f8c4 22bc 	str.w	r2, [r4, #700]	; 0x2bc
        : x(0), y(0), width(0), height(0)
 80033e4:	f8c4 52e0 	str.w	r5, [r4, #736]	; 0x2e0
 80033e8:	f8a4 52e4 	strh.w	r5, [r4, #740]	; 0x2e4
 80033ec:	f884 52e6 	strb.w	r5, [r4, #742]	; 0x2e6
 80033f0:	e9c4 35b6 	strd	r3, r5, [r4, #728]	; 0x2d8
 80033f4:	e9c4 55b4 	strd	r5, r5, [r4, #720]	; 0x2d0
        setBitmap(bmp);
 80033f8:	f00a fcf8 	bl	800ddec <_ZN8touchgfx19PainterRGB888Bitmap9setBitmapERKNS_6BitmapE>
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80033fc:	f504 703a 	add.w	r0, r4, #744	; 0x2e8
 8003400:	f642 61e0 	movw	r1, #12000	; 0x2ee0
 8003404:	f00c fb8c 	bl	800fb20 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 800, 480);
 8003408:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 800340c:	462a      	mov	r2, r5
 800340e:	4629      	mov	r1, r5
 8003410:	4638      	mov	r0, r7
 8003412:	9300      	str	r3, [sp, #0]
 8003414:	f44f 7348 	mov.w	r3, #800	; 0x320
 8003418:	f7ff f976 	bl	8002708 <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 800341c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
    sensorOverrideContainer.setPosition(472, 405, 328, 75);
 8003420:	ee18 0a10 	vmov	r0, s16
 8003424:	f240 1295 	movw	r2, #405	; 0x195
 8003428:	66a3      	str	r3, [r4, #104]	; 0x68
 800342a:	234b      	movs	r3, #75	; 0x4b
 800342c:	f44f 71ec 	mov.w	r1, #472	; 0x1d8
 8003430:	9300      	str	r3, [sp, #0]
 8003432:	f44f 73a4 	mov.w	r3, #328	; 0x148
 8003436:	f7ff f967 	bl	8002708 <_ZN8touchgfx8Drawable11setPositionEssss>
    sensorOverrideLabel.setXY(158, 25);
 800343a:	4640      	mov	r0, r8
 800343c:	2219      	movs	r2, #25
 800343e:	219e      	movs	r1, #158	; 0x9e
 8003440:	f7ff f8b6 	bl	80025b0 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 8003444:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 8003448:	a804      	add	r0, sp, #16
 800344a:	4641      	mov	r1, r8
        this->color = color;
 800344c:	f8c4 20c8 	str.w	r2, [r4, #200]	; 0xc8
        linespace = space;
 8003450:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8003454:	f00b fbc6 	bl	800ebe4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003458:	a804      	add	r0, sp, #16
 800345a:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 800345e:	c807      	ldmia	r0, {r0, r1, r2}
 8003460:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003464:	4b50      	ldr	r3, [pc, #320]	; (80035a8 <_ZN15InitialViewBaseC1Ev+0x2d4>)
    sensorOverrideLabel.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HFBX));
 8003466:	a90a      	add	r1, sp, #40	; 0x28
 8003468:	4640      	mov	r0, r8
 800346a:	f8ad a02c 	strh.w	sl, [sp, #44]	; 0x2c
 800346e:	930a      	str	r3, [sp, #40]	; 0x28
 8003470:	f00b fefc 	bl	800f26c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    sensorOverrideContainer.add(sensorOverrideLabel);
 8003474:	4641      	mov	r1, r8
 8003476:	ee18 0a10 	vmov	r0, s16
 800347a:	f008 ff91 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    sensorOverrideToggle.setXY(20, 18);
 800347e:	4648      	mov	r0, r9
 8003480:	2212      	movs	r2, #18
 8003482:	2114      	movs	r1, #20
 8003484:	f7ff f894 	bl	80025b0 <_ZN8touchgfx8Drawable5setXYEss>
 8003488:	2303      	movs	r3, #3
{
public:
    virtual void setBitmaps(const Bitmap& bitmapReleased, const Bitmap& bitmapPressed)
    {
        originalPressed = bitmapPressed;
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 800348a:	aa0a      	add	r2, sp, #40	; 0x28
 800348c:	a909      	add	r1, sp, #36	; 0x24
 800348e:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8003492:	2304      	movs	r3, #4
 8003494:	4648      	mov	r0, r9
        originalPressed = bitmapPressed;
 8003496:	f8a4 3114 	strh.w	r3, [r4, #276]	; 0x114
 800349a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 800349e:	f00c f8ff 	bl	800f6a0 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    sensorOverrideContainer.add(sensorOverrideToggle);
 80034a2:	4649      	mov	r1, r9
 80034a4:	ee18 0a10 	vmov	r0, s16
 80034a8:	f008 ff7a 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge1.setBackground(touchgfx::Bitmap(BITMAP_DARK_GAUGES_ORIGINAL_GAUGE_BACKGROUND_STYLE_01_ID));
 80034ac:	a90a      	add	r1, sp, #40	; 0x28
 80034ae:	4630      	mov	r0, r6
 80034b0:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 80034b4:	f008 fc3a 	bl	800bd2c <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    gauge1.setPosition(275, 115, 251, 251);
 80034b8:	23fb      	movs	r3, #251	; 0xfb
 80034ba:	4630      	mov	r0, r6
 80034bc:	2273      	movs	r2, #115	; 0x73
 80034be:	9300      	str	r3, [sp, #0]
 80034c0:	f240 1113 	movw	r1, #275	; 0x113
 80034c4:	f7ff f920 	bl	8002708 <_ZN8touchgfx8Drawable11setPositionEssss>
    gauge1.setCenter(125, 125);
 80034c8:	227d      	movs	r2, #125	; 0x7d
 80034ca:	4630      	mov	r0, r6
 80034cc:	4611      	mov	r1, r2
 80034ce:	f00c f840 	bl	800f552 <_ZN8touchgfx5Gauge9setCenterEii>
    gauge1.setStartEndAngle(-90, 180);
 80034d2:	4630      	mov	r0, r6
 80034d4:	22b4      	movs	r2, #180	; 0xb4
 80034d6:	f06f 0159 	mvn.w	r1, #89	; 0x59
 80034da:	f00c f8bf 	bl	800f65c <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    gauge1.setRange(0, 150);
 80034de:	462b      	mov	r3, r5
 80034e0:	2296      	movs	r2, #150	; 0x96
 80034e2:	4629      	mov	r1, r5
 80034e4:	4630      	mov	r0, r6
 80034e6:	9500      	str	r5, [sp, #0]
 80034e8:	f008 fb4e 	bl	800bb88 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    gauge1.setValue(0);
 80034ec:	4629      	mov	r1, r5
 80034ee:	4630      	mov	r0, r6
 80034f0:	f00c f85e 	bl	800f5b0 <_ZN8touchgfx5Gauge8setValueEi>
    gauge1.setEasingEquation(touchgfx::EasingEquations::linearEaseIn);
 80034f4:	4630      	mov	r0, r6
 80034f6:	492f      	ldr	r1, [pc, #188]	; (80035b4 <_ZN15InitialViewBaseC1Ev+0x2e0>)
 80034f8:	f008 fabf 	bl	800ba7a <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>
    gauge1.setNeedle(BITMAP_DARK_NEEDLES_ORIGINAL_GAUGE_NEEDLE_STYLE_01_ID, 11, 55);
 80034fc:	220b      	movs	r2, #11
 80034fe:	2337      	movs	r3, #55	; 0x37
 8003500:	4630      	mov	r0, r6
 8003502:	2102      	movs	r1, #2
 8003504:	f00c f810 	bl	800f528 <_ZN8touchgfx5Gauge9setNeedleEtss>
    gauge1.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8003508:	4651      	mov	r1, sl
 800350a:	4630      	mov	r0, r6
 800350c:	f00b ffa8 	bl	800f460 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    gauge1.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8003510:	4651      	mov	r1, sl
 8003512:	4630      	mov	r0, r6
 8003514:	f00b ffa7 	bl	800f466 <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    gauge1.setArcVisible();
 8003518:	4651      	mov	r1, sl
 800351a:	4630      	mov	r0, r6
 800351c:	f00b ffa6 	bl	800f46c <_ZN8touchgfx5Gauge13setArcVisibleEb>
    gauge1Painter.setBitmap(touchgfx::Bitmap(BITMAP_DARK_GAUGES_ORIGINAL_GAUGE_FILL_STYLE_01_ID));
 8003520:	a90a      	add	r1, sp, #40	; 0x28
 8003522:	4658      	mov	r0, fp
 8003524:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
 8003528:	f00a fc60 	bl	800ddec <_ZN8touchgfx19PainterRGB888Bitmap9setBitmapERKNS_6BitmapE>
    gauge1.getArc().setPainter(gauge1Painter);
 800352c:	4630      	mov	r0, r6
 800352e:	f00b ffa0 	bl	800f472 <_ZN8touchgfx5Gauge6getArcEv>
 8003532:	6803      	ldr	r3, [r0, #0]
 8003534:	4659      	mov	r1, fp
 8003536:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003538:	4798      	blx	r3
    gauge1.getArc().setRadius(94);
 800353a:	4630      	mov	r0, r6
 800353c:	f00b ff99 	bl	800f472 <_ZN8touchgfx5Gauge6getArcEv>
     * @note The area containing the Circle is not invalidated.
     */
    template <typename T>
    void setRadius(const T r)
    {
        this->circleRadius = CWRUtil::toQ5(r);
 8003540:	f44f 633c 	mov.w	r3, #3008	; 0xbc0
 8003544:	6383      	str	r3, [r0, #56]	; 0x38
    gauge1.getArc().setLineWidth(14);
 8003546:	4630      	mov	r0, r6
 8003548:	f00b ff93 	bl	800f472 <_ZN8touchgfx5Gauge6getArcEv>
     *       before updating the width to ensure that the old circle is completely erased.
     */
    template <typename T>
    void setLineWidth(const T width)
    {
        this->circleLineWidth = CWRUtil::toQ5(width);
 800354c:	f44f 73e0 	mov.w	r3, #448	; 0x1c0
 8003550:	6443      	str	r3, [r0, #68]	; 0x44
    gauge1.getArc().setCapPrecision(180);
 8003552:	4630      	mov	r0, r6
 8003554:	f00b ff8d 	bl	800f472 <_ZN8touchgfx5Gauge6getArcEv>
 8003558:	21b4      	movs	r1, #180	; 0xb4
 800355a:	f00a fcf9 	bl	800df50 <_ZN8touchgfx6Circle15setCapPrecisionEi>
    gauge1.setArcPosition(28, 30, 196, 88);
 800355e:	2358      	movs	r3, #88	; 0x58
 8003560:	221e      	movs	r2, #30
 8003562:	4630      	mov	r0, r6
 8003564:	9300      	str	r3, [sp, #0]
 8003566:	211c      	movs	r1, #28
 8003568:	23c4      	movs	r3, #196	; 0xc4
 800356a:	f00b ff51 	bl	800f410 <_ZN8touchgfx5Gauge14setArcPositionEssss>
 800356e:	1d20      	adds	r0, r4, #4
 8003570:	4639      	mov	r1, r7
 8003572:	9003      	str	r0, [sp, #12]
 8003574:	f008 ff14 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003578:	ee18 1a10 	vmov	r1, s16
 800357c:	9803      	ldr	r0, [sp, #12]
 800357e:	f008 ff0f 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003582:	9803      	ldr	r0, [sp, #12]
 8003584:	4631      	mov	r1, r6
 8003586:	f008 ff0b 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800358a:	4620      	mov	r0, r4
 800358c:	b00d      	add	sp, #52	; 0x34
 800358e:	ecbd 8b02 	vpop	{d8}
 8003592:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003596:	bf00      	nop
 8003598:	08021f80 	.word	0x08021f80
 800359c:	08023ae4 	.word	0x08023ae4
 80035a0:	08022d38 	.word	0x08022d38
 80035a4:	08023a24 	.word	0x08023a24
 80035a8:	080215f4 	.word	0x080215f4
 80035ac:	080239b0 	.word	0x080239b0
 80035b0:	080236d4 	.word	0x080236d4
 80035b4:	08013139 	.word	0x08013139

080035b8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_consolab_160_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_consolab_160_4bpp();

touchgfx::GeneratedFont& getFont_consolab_160_4bpp()
{
    static touchgfx::GeneratedFont consolab_160_4bpp(glyphs_consolab_160_4bpp, 16, 160, 2, 4, 0, 0, 0, unicodes_consolab_160_4bpp, kerning_consolab_160_4bpp, 63, 0, 0, 0);
 80035b8:	4770      	bx	lr
	...

080035bc <_Z25getFont_consolab_160_4bppv>:
{
 80035bc:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont consolab_160_4bpp(glyphs_consolab_160_4bpp, 16, 160, 2, 4, 0, 0, 0, unicodes_consolab_160_4bpp, kerning_consolab_160_4bpp, 63, 0, 0, 0);
 80035be:	4d15      	ldr	r5, [pc, #84]	; (8003614 <_Z25getFont_consolab_160_4bppv+0x58>)
{
 80035c0:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont consolab_160_4bpp(glyphs_consolab_160_4bpp, 16, 160, 2, 4, 0, 0, 0, unicodes_consolab_160_4bpp, kerning_consolab_160_4bpp, 63, 0, 0, 0);
 80035c2:	782c      	ldrb	r4, [r5, #0]
 80035c4:	f3bf 8f5b 	dmb	ish
 80035c8:	f014 0401 	ands.w	r4, r4, #1
 80035cc:	d11f      	bne.n	800360e <_Z25getFont_consolab_160_4bppv+0x52>
 80035ce:	4628      	mov	r0, r5
 80035d0:	f01c f927 	bl	801f822 <__cxa_guard_acquire>
 80035d4:	b1d8      	cbz	r0, 800360e <_Z25getFont_consolab_160_4bppv+0x52>
 80035d6:	233f      	movs	r3, #63	; 0x3f
 80035d8:	2204      	movs	r2, #4
 80035da:	490f      	ldr	r1, [pc, #60]	; (8003618 <_Z25getFont_consolab_160_4bppv+0x5c>)
 80035dc:	9307      	str	r3, [sp, #28]
 80035de:	4b0f      	ldr	r3, [pc, #60]	; (800361c <_Z25getFont_consolab_160_4bppv+0x60>)
 80035e0:	480f      	ldr	r0, [pc, #60]	; (8003620 <_Z25getFont_consolab_160_4bppv+0x64>)
 80035e2:	9306      	str	r3, [sp, #24]
 80035e4:	4b0f      	ldr	r3, [pc, #60]	; (8003624 <_Z25getFont_consolab_160_4bppv+0x68>)
 80035e6:	9408      	str	r4, [sp, #32]
 80035e8:	e9cd 4304 	strd	r4, r3, [sp, #16]
 80035ec:	2302      	movs	r3, #2
 80035ee:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 80035f2:	e9cd 3200 	strd	r3, r2, [sp]
 80035f6:	e9cd 4402 	strd	r4, r4, [sp, #8]
 80035fa:	23a0      	movs	r3, #160	; 0xa0
 80035fc:	2210      	movs	r2, #16
 80035fe:	f7ff fde3 	bl	80031c8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8003602:	4809      	ldr	r0, [pc, #36]	; (8003628 <_Z25getFont_consolab_160_4bppv+0x6c>)
 8003604:	f01c fb06 	bl	801fc14 <atexit>
 8003608:	4628      	mov	r0, r5
 800360a:	f01c f916 	bl	801f83a <__cxa_guard_release>
    return consolab_160_4bpp;
}
 800360e:	4804      	ldr	r0, [pc, #16]	; (8003620 <_Z25getFont_consolab_160_4bppv+0x64>)
 8003610:	b00d      	add	sp, #52	; 0x34
 8003612:	bd30      	pop	{r4, r5, pc}
 8003614:	24004648 	.word	0x24004648
 8003618:	08033434 	.word	0x08033434
 800361c:	080335d0 	.word	0x080335d0
 8003620:	2400464c 	.word	0x2400464c
 8003624:	080335e0 	.word	0x080335e0
 8003628:	080035b9 	.word	0x080035b9

0800362c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 0, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800362c:	4770      	bx	lr
	...

08003630 <_Z23getFont_verdana_10_4bppv>:
{
 8003630:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 0, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8003632:	4d15      	ldr	r5, [pc, #84]	; (8003688 <_Z23getFont_verdana_10_4bppv+0x58>)
{
 8003634:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 0, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8003636:	782c      	ldrb	r4, [r5, #0]
 8003638:	f3bf 8f5b 	dmb	ish
 800363c:	f014 0401 	ands.w	r4, r4, #1
 8003640:	d11e      	bne.n	8003680 <_Z23getFont_verdana_10_4bppv+0x50>
 8003642:	4628      	mov	r0, r5
 8003644:	f01c f8ed 	bl	801f822 <__cxa_guard_acquire>
 8003648:	b1d0      	cbz	r0, 8003680 <_Z23getFont_verdana_10_4bppv+0x50>
 800364a:	233f      	movs	r3, #63	; 0x3f
 800364c:	2201      	movs	r2, #1
 800364e:	490f      	ldr	r1, [pc, #60]	; (800368c <_Z23getFont_verdana_10_4bppv+0x5c>)
 8003650:	9307      	str	r3, [sp, #28]
 8003652:	4b0f      	ldr	r3, [pc, #60]	; (8003690 <_Z23getFont_verdana_10_4bppv+0x60>)
 8003654:	480f      	ldr	r0, [pc, #60]	; (8003694 <_Z23getFont_verdana_10_4bppv+0x64>)
 8003656:	9306      	str	r3, [sp, #24]
 8003658:	4b0f      	ldr	r3, [pc, #60]	; (8003698 <_Z23getFont_verdana_10_4bppv+0x68>)
 800365a:	9408      	str	r4, [sp, #32]
 800365c:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8003660:	2304      	movs	r3, #4
 8003662:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8003666:	e9cd 4300 	strd	r4, r3, [sp]
 800366a:	e9cd 4402 	strd	r4, r4, [sp, #8]
 800366e:	230a      	movs	r3, #10
 8003670:	f7ff fdaa 	bl	80031c8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8003674:	4809      	ldr	r0, [pc, #36]	; (800369c <_Z23getFont_verdana_10_4bppv+0x6c>)
 8003676:	f01c facd 	bl	801fc14 <atexit>
 800367a:	4628      	mov	r0, r5
 800367c:	f01c f8dd 	bl	801f83a <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8003680:	4804      	ldr	r0, [pc, #16]	; (8003694 <_Z23getFont_verdana_10_4bppv+0x64>)
 8003682:	b00d      	add	sp, #52	; 0x34
 8003684:	bd30      	pop	{r4, r5, pc}
 8003686:	bf00      	nop
 8003688:	24004674 	.word	0x24004674
 800368c:	08033514 	.word	0x08033514
 8003690:	080335d4 	.word	0x080335d4
 8003694:	24004678 	.word	0x24004678
 8003698:	080335e4 	.word	0x080335e4
 800369c:	0800362d 	.word	0x0800362d

080036a0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 11, 20, 0, 4, 0, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 80036a0:	4770      	bx	lr
	...

080036a4 <_Z23getFont_verdana_20_4bppv>:
{
 80036a4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 11, 20, 0, 4, 0, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 80036a6:	4d15      	ldr	r5, [pc, #84]	; (80036fc <_Z23getFont_verdana_20_4bppv+0x58>)
{
 80036a8:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 11, 20, 0, 4, 0, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 80036aa:	782c      	ldrb	r4, [r5, #0]
 80036ac:	f3bf 8f5b 	dmb	ish
 80036b0:	f014 0401 	ands.w	r4, r4, #1
 80036b4:	d11e      	bne.n	80036f4 <_Z23getFont_verdana_20_4bppv+0x50>
 80036b6:	4628      	mov	r0, r5
 80036b8:	f01c f8b3 	bl	801f822 <__cxa_guard_acquire>
 80036bc:	b1d0      	cbz	r0, 80036f4 <_Z23getFont_verdana_20_4bppv+0x50>
 80036be:	233f      	movs	r3, #63	; 0x3f
 80036c0:	220b      	movs	r2, #11
 80036c2:	490f      	ldr	r1, [pc, #60]	; (8003700 <_Z23getFont_verdana_20_4bppv+0x5c>)
 80036c4:	9307      	str	r3, [sp, #28]
 80036c6:	4b0f      	ldr	r3, [pc, #60]	; (8003704 <_Z23getFont_verdana_20_4bppv+0x60>)
 80036c8:	480f      	ldr	r0, [pc, #60]	; (8003708 <_Z23getFont_verdana_20_4bppv+0x64>)
 80036ca:	9306      	str	r3, [sp, #24]
 80036cc:	4b0f      	ldr	r3, [pc, #60]	; (800370c <_Z23getFont_verdana_20_4bppv+0x68>)
 80036ce:	9408      	str	r4, [sp, #32]
 80036d0:	e9cd 4304 	strd	r4, r3, [sp, #16]
 80036d4:	2304      	movs	r3, #4
 80036d6:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 80036da:	e9cd 4300 	strd	r4, r3, [sp]
 80036de:	e9cd 4402 	strd	r4, r4, [sp, #8]
 80036e2:	2314      	movs	r3, #20
 80036e4:	f7ff fd70 	bl	80031c8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80036e8:	4809      	ldr	r0, [pc, #36]	; (8003710 <_Z23getFont_verdana_20_4bppv+0x6c>)
 80036ea:	f01c fa93 	bl	801fc14 <atexit>
 80036ee:	4628      	mov	r0, r5
 80036f0:	f01c f8a3 	bl	801f83a <__cxa_guard_release>
    return verdana_20_4bpp;
}
 80036f4:	4804      	ldr	r0, [pc, #16]	; (8003708 <_Z23getFont_verdana_20_4bppv+0x64>)
 80036f6:	b00d      	add	sp, #52	; 0x34
 80036f8:	bd30      	pop	{r4, r5, pc}
 80036fa:	bf00      	nop
 80036fc:	240046a0 	.word	0x240046a0
 8003700:	08033524 	.word	0x08033524
 8003704:	080335d8 	.word	0x080335d8
 8003708:	240046a4 	.word	0x240046a4
 800370c:	080335e8 	.word	0x080335e8
 8003710:	080036a1 	.word	0x080036a1

08003714 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 0, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8003714:	4770      	bx	lr
	...

08003718 <_Z23getFont_verdana_40_4bppv>:
{
 8003718:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 0, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800371a:	4d15      	ldr	r5, [pc, #84]	; (8003770 <_Z23getFont_verdana_40_4bppv+0x58>)
{
 800371c:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 0, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800371e:	782c      	ldrb	r4, [r5, #0]
 8003720:	f3bf 8f5b 	dmb	ish
 8003724:	f014 0401 	ands.w	r4, r4, #1
 8003728:	d11e      	bne.n	8003768 <_Z23getFont_verdana_40_4bppv+0x50>
 800372a:	4628      	mov	r0, r5
 800372c:	f01c f879 	bl	801f822 <__cxa_guard_acquire>
 8003730:	b1d0      	cbz	r0, 8003768 <_Z23getFont_verdana_40_4bppv+0x50>
 8003732:	233f      	movs	r3, #63	; 0x3f
 8003734:	2201      	movs	r2, #1
 8003736:	490f      	ldr	r1, [pc, #60]	; (8003774 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8003738:	9307      	str	r3, [sp, #28]
 800373a:	4b0f      	ldr	r3, [pc, #60]	; (8003778 <_Z23getFont_verdana_40_4bppv+0x60>)
 800373c:	480f      	ldr	r0, [pc, #60]	; (800377c <_Z23getFont_verdana_40_4bppv+0x64>)
 800373e:	9306      	str	r3, [sp, #24]
 8003740:	4b0f      	ldr	r3, [pc, #60]	; (8003780 <_Z23getFont_verdana_40_4bppv+0x68>)
 8003742:	9408      	str	r4, [sp, #32]
 8003744:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8003748:	2304      	movs	r3, #4
 800374a:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 800374e:	e9cd 4300 	strd	r4, r3, [sp]
 8003752:	e9cd 4402 	strd	r4, r4, [sp, #8]
 8003756:	2328      	movs	r3, #40	; 0x28
 8003758:	f7ff fd36 	bl	80031c8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800375c:	4809      	ldr	r0, [pc, #36]	; (8003784 <_Z23getFont_verdana_40_4bppv+0x6c>)
 800375e:	f01c fa59 	bl	801fc14 <atexit>
 8003762:	4628      	mov	r0, r5
 8003764:	f01c f869 	bl	801f83a <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8003768:	4804      	ldr	r0, [pc, #16]	; (800377c <_Z23getFont_verdana_40_4bppv+0x64>)
 800376a:	b00d      	add	sp, #52	; 0x34
 800376c:	bd30      	pop	{r4, r5, pc}
 800376e:	bf00      	nop
 8003770:	240046cc 	.word	0x240046cc
 8003774:	080335c0 	.word	0x080335c0
 8003778:	080335dc 	.word	0x080335dc
 800377c:	240046d0 	.word	0x240046d0
 8003780:	080335ec 	.word	0x080335ec
 8003784:	08003715 	.word	0x08003715

08003788 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8003788:	2000      	movs	r0, #0
 800378a:	4770      	bx	lr

0800378c <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 800378c:	2000      	movs	r0, #0
 800378e:	4770      	bx	lr

08003790 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8003790:	b40e      	push	{r1, r2, r3}
 8003792:	b503      	push	{r0, r1, lr}
 8003794:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8003796:	2100      	movs	r1, #0
{
 8003798:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 800379c:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800379e:	f00e fe43 	bl	8012428 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80037a2:	b002      	add	sp, #8
 80037a4:	f85d eb04 	ldr.w	lr, [sp], #4
 80037a8:	b003      	add	sp, #12
 80037aa:	4770      	bx	lr

080037ac <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80037ac:	b40c      	push	{r2, r3}
 80037ae:	b507      	push	{r0, r1, r2, lr}
 80037b0:	ab04      	add	r3, sp, #16
 80037b2:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 80037b6:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 80037b8:	f00e fe36 	bl	8012428 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80037bc:	b003      	add	sp, #12
 80037be:	f85d eb04 	ldr.w	lr, [sp], #4
 80037c2:	b002      	add	sp, #8
 80037c4:	4770      	bx	lr
	...

080037c8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 80037c8:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 80037ca:	b510      	push	{r4, lr}
 80037cc:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 80037ce:	b373      	cbz	r3, 800382e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 80037d0:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 80037d2:	b92b      	cbnz	r3, 80037e0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 80037d4:	4b18      	ldr	r3, [pc, #96]	; (8003838 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 80037d6:	21c0      	movs	r1, #192	; 0xc0
 80037d8:	4a18      	ldr	r2, [pc, #96]	; (800383c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
            return buffer[pos];
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 80037da:	4819      	ldr	r0, [pc, #100]	; (8003840 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 80037dc:	f01c f9fc 	bl	801fbd8 <__assert_func>
            return buffer[pos];
 80037e0:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80037e2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80037e6:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 80037e8:	b30b      	cbz	r3, 800382e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 80037ea:	f010 fa3b 	bl	8013c64 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 80037ee:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80037f0:	2b01      	cmp	r3, #1
 80037f2:	d803      	bhi.n	80037fc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 80037f4:	4b13      	ldr	r3, [pc, #76]	; (8003844 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 80037f6:	21c5      	movs	r1, #197	; 0xc5
 80037f8:	4a13      	ldr	r2, [pc, #76]	; (8003848 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 80037fa:	e7ee      	b.n	80037da <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 80037fc:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 80037fe:	f640 103f 	movw	r0, #2367	; 0x93f
 8003802:	1c53      	adds	r3, r2, #1
 8003804:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8003806:	2b09      	cmp	r3, #9
 8003808:	4619      	mov	r1, r3
 800380a:	bf88      	it	hi
 800380c:	f1a3 010a 	subhi.w	r1, r3, #10
 8003810:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8003814:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8003816:	4281      	cmp	r1, r0
 8003818:	d109      	bne.n	800382e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 800381a:	2b0a      	cmp	r3, #10
 800381c:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8003820:	bf28      	it	cs
 8003822:	2300      	movcs	r3, #0
            return buffer[pos];
 8003824:	8c50      	ldrh	r0, [r2, #34]	; 0x22
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8003826:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800382a:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 800382c:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 800382e:	4620      	mov	r0, r4
}
 8003830:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8003834:	f010 b8fa 	b.w	8013a2c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8003838:	08021fac 	.word	0x08021fac
 800383c:	08021fb5 	.word	0x08021fb5
 8003840:	08022060 	.word	0x08022060
 8003844:	080220b8 	.word	0x080220b8
 8003848:	080220c6 	.word	0x080220c6

0800384c <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 800384c:	f010 b8a6 	b.w	801399c <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08003850 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8003850:	b510      	push	{r4, lr}
 8003852:	b086      	sub	sp, #24
 8003854:	ac02      	add	r4, sp, #8
 8003856:	e884 0006 	stmia.w	r4, {r1, r2}
 800385a:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 800385c:	ab0a      	add	r3, sp, #40	; 0x28
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 800385e:	4621      	mov	r1, r4
    va_start(pArg, format);
 8003860:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8003862:	9301      	str	r3, [sp, #4]
 8003864:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003866:	9300      	str	r3, [sp, #0]
 8003868:	9b08      	ldr	r3, [sp, #32]
 800386a:	f00d fa26 	bl	8010cba <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800386e:	b006      	add	sp, #24
 8003870:	bd10      	pop	{r4, pc}
	...

08003874 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8003874:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8003876:	bb18      	cbnz	r0, 80038c0 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8003878:	4b12      	ldr	r3, [pc, #72]	; (80038c4 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 800387a:	4813      	ldr	r0, [pc, #76]	; (80038c8 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 800387c:	681b      	ldr	r3, [r3, #0]
 800387e:	4913      	ldr	r1, [pc, #76]	; (80038cc <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8003880:	b1b3      	cbz	r3, 80038b0 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8003882:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8003884:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8003886:	441a      	add	r2, r3
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8003888:	441c      	add	r4, r3
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800388a:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800388c:	685a      	ldr	r2, [r3, #4]
 800388e:	441a      	add	r2, r3
 8003890:	600a      	str	r2, [r1, #0]
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8003892:	4b0f      	ldr	r3, [pc, #60]	; (80038d0 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8003894:	2200      	movs	r2, #0
 8003896:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8003898:	f000 f838 	bl	800390c <_ZN17TypedTextDatabase8getFontsEv>
 800389c:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800389e:	f000 f833 	bl	8003908 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 80038a2:	4b0c      	ldr	r3, [pc, #48]	; (80038d4 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 80038a4:	601c      	str	r4, [r3, #0]
        fonts = f;
 80038a6:	4b0c      	ldr	r3, [pc, #48]	; (80038d8 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 80038a8:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 80038aa:	4b0c      	ldr	r3, [pc, #48]	; (80038dc <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 80038ac:	8018      	strh	r0, [r3, #0]
    }
}
 80038ae:	e007      	b.n	80038c0 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 80038b0:	4b0b      	ldr	r3, [pc, #44]	; (80038e0 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 80038b2:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 80038b4:	4b0b      	ldr	r3, [pc, #44]	; (80038e4 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 80038b6:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 80038b8:	4b0b      	ldr	r3, [pc, #44]	; (80038e8 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 80038ba:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 80038bc:	2c00      	cmp	r4, #0
 80038be:	d1e8      	bne.n	8003892 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 80038c0:	bd38      	pop	{r3, r4, r5, pc}
 80038c2:	bf00      	nop
 80038c4:	240046f8 	.word	0x240046f8
 80038c8:	240046fc 	.word	0x240046fc
 80038cc:	24004700 	.word	0x24004700
 80038d0:	24004704 	.word	0x24004704
 80038d4:	2400e0ec 	.word	0x2400e0ec
 80038d8:	2400e0f4 	.word	0x2400e0f4
 80038dc:	2400e0f0 	.word	0x2400e0f0
 80038e0:	901703a4 	.word	0x901703a4
 80038e4:	9017039c 	.word	0x9017039c
 80038e8:	901703cc 	.word	0x901703cc

080038ec <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 80038ec:	4b04      	ldr	r3, [pc, #16]	; (8003900 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 80038ee:	681b      	ldr	r3, [r3, #0]
 80038f0:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80038f4:	4b03      	ldr	r3, [pc, #12]	; (8003904 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 80038f6:	681b      	ldr	r3, [r3, #0]
}
 80038f8:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 80038fc:	4770      	bx	lr
 80038fe:	bf00      	nop
 8003900:	24004700 	.word	0x24004700
 8003904:	240046fc 	.word	0x240046fc

08003908 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8003908:	2002      	movs	r0, #2
 800390a:	4770      	bx	lr

0800390c <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 800390c:	4800      	ldr	r0, [pc, #0]	; (8003910 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 800390e:	4770      	bx	lr
 8003910:	24004708 	.word	0x24004708

08003914 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_consolab_160_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8003914:	b510      	push	{r4, lr}
};
 8003916:	4c07      	ldr	r4, [pc, #28]	; (8003934 <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
    &(getFont_verdana_20_4bpp()),
 8003918:	f7ff fec4 	bl	80036a4 <_Z23getFont_verdana_20_4bppv>
};
 800391c:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 800391e:	f7ff fefb 	bl	8003718 <_Z23getFont_verdana_40_4bppv>
};
 8003922:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 8003924:	f7ff fe84 	bl	8003630 <_Z23getFont_verdana_10_4bppv>
};
 8003928:	60a0      	str	r0, [r4, #8]
    &(getFont_consolab_160_4bpp())
 800392a:	f7ff fe47 	bl	80035bc <_Z25getFont_consolab_160_4bppv>
};
 800392e:	60e0      	str	r0, [r4, #12]
} // namespace TypedTextDatabase
 8003930:	bd10      	pop	{r4, pc}
 8003932:	bf00      	nop
 8003934:	24004708 	.word	0x24004708

08003938 <_ZN13ModelListener10secondTickEv>:
    }

    virtual void secondTick() { }
 8003938:	4770      	bx	lr

0800393a <_ZN13ModelListener19testPinStateChangedEb>:
    virtual void testPinStateChanged(bool state) { }
 800393a:	4770      	bx	lr

0800393c <_ZN14BlankPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~BlankPresenter() {};
 800393c:	4770      	bx	lr

0800393e <_ZThn4_N14BlankPresenterD1Ev>:
 800393e:	3804      	subs	r0, #4
 8003940:	4770      	bx	lr

08003942 <_ZN14BlankPresenter10deactivateEv>:
}

void BlankPresenter::activate()
{

}
 8003942:	4770      	bx	lr

08003944 <_ZN14BlankPresenterD0Ev>:
 8003944:	b510      	push	{r4, lr}
 8003946:	4604      	mov	r4, r0
 8003948:	2110      	movs	r1, #16
 800394a:	f01b ff68 	bl	801f81e <_ZdlPvj>
 800394e:	4620      	mov	r0, r4
 8003950:	bd10      	pop	{r4, pc}

08003952 <_ZThn4_N14BlankPresenterD0Ev>:
 8003952:	f1a0 0004 	sub.w	r0, r0, #4
 8003956:	e7f5      	b.n	8003944 <_ZN14BlankPresenterD0Ev>

08003958 <_ZN14BlankPresenterC1ER9BlankView>:
    ModelListener() : model(0) {}
 8003958:	2200      	movs	r2, #0
    : view(v)
 800395a:	60c1      	str	r1, [r0, #12]
 800395c:	6082      	str	r2, [r0, #8]
 800395e:	4a04      	ldr	r2, [pc, #16]	; (8003970 <_ZN14BlankPresenterC1ER9BlankView+0x18>)
BlankPresenter::BlankPresenter(BlankView& v)
 8003960:	b510      	push	{r4, lr}
    : view(v)
 8003962:	f102 0408 	add.w	r4, r2, #8
 8003966:	3220      	adds	r2, #32
 8003968:	6004      	str	r4, [r0, #0]
 800396a:	6042      	str	r2, [r0, #4]
}
 800396c:	bd10      	pop	{r4, pc}
 800396e:	bf00      	nop
 8003970:	08022198 	.word	0x08022198

08003974 <_ZN9BlankViewD1Ev>:

class BlankView : public BlankViewBase
{
public:
    BlankView();
    virtual ~BlankView() {}
 8003974:	4770      	bx	lr

08003976 <_ZN9BlankView14tearDownScreenEv>:
}

void BlankView::tearDownScreen()
{
    BlankViewBase::tearDownScreen();
}
 8003976:	4770      	bx	lr

08003978 <_ZN9BlankView11setupScreenEv>:
    BlankViewBase::setupScreen();
 8003978:	f7fe bda1 	b.w	80024be <_ZN13BlankViewBase11setupScreenEv>

0800397c <_ZN9BlankViewD0Ev>:
 800397c:	b510      	push	{r4, lr}
 800397e:	4604      	mov	r4, r0
 8003980:	2170      	movs	r1, #112	; 0x70
 8003982:	f01b ff4c 	bl	801f81e <_ZdlPvj>
 8003986:	4620      	mov	r0, r4
 8003988:	bd10      	pop	{r4, pc}
	...

0800398c <_ZN9BlankViewC1Ev>:
BlankView::BlankView()
 800398c:	b510      	push	{r4, lr}
 800398e:	4604      	mov	r4, r0
 8003990:	f7fe fdba 	bl	8002508 <_ZN13BlankViewBaseC1Ev>
 8003994:	4b01      	ldr	r3, [pc, #4]	; (800399c <_ZN9BlankViewC1Ev+0x10>)
}
 8003996:	4620      	mov	r0, r4
BlankView::BlankView()
 8003998:	6023      	str	r3, [r4, #0]
}
 800399a:	bd10      	pop	{r4, pc}
 800399c:	080221d0 	.word	0x080221d0

080039a0 <_ZN13BoomPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    void deactivate();

    ~BoomPresenter() {};
 80039a0:	4770      	bx	lr

080039a2 <_ZThn4_N13BoomPresenterD1Ev>:
 80039a2:	3804      	subs	r0, #4
 80039a4:	4770      	bx	lr

080039a6 <_ZN13BoomPresenter10deactivateEv>:
}

void BoomPresenter::activate()
{

}
 80039a6:	4770      	bx	lr

080039a8 <_ZN13BoomPresenterD0Ev>:
 80039a8:	b510      	push	{r4, lr}
 80039aa:	4604      	mov	r4, r0
 80039ac:	2110      	movs	r1, #16
 80039ae:	f01b ff36 	bl	801f81e <_ZdlPvj>
 80039b2:	4620      	mov	r0, r4
 80039b4:	bd10      	pop	{r4, pc}

080039b6 <_ZThn4_N13BoomPresenterD0Ev>:
 80039b6:	f1a0 0004 	sub.w	r0, r0, #4
 80039ba:	e7f5      	b.n	80039a8 <_ZN13BoomPresenterD0Ev>

080039bc <_ZN13BoomPresenterC1ER8BoomView>:
 80039bc:	2200      	movs	r2, #0
    : view(v)
 80039be:	60c1      	str	r1, [r0, #12]
 80039c0:	6082      	str	r2, [r0, #8]
 80039c2:	4a04      	ldr	r2, [pc, #16]	; (80039d4 <_ZN13BoomPresenterC1ER8BoomView+0x18>)
BoomPresenter::BoomPresenter(BoomView& v)
 80039c4:	b510      	push	{r4, lr}
    : view(v)
 80039c6:	f102 0408 	add.w	r4, r2, #8
 80039ca:	3220      	adds	r2, #32
 80039cc:	6004      	str	r4, [r0, #0]
 80039ce:	6042      	str	r2, [r0, #4]
}
 80039d0:	bd10      	pop	{r4, pc}
 80039d2:	bf00      	nop
 80039d4:	080221fc 	.word	0x080221fc

080039d8 <_ZN8BoomViewD1Ev>:

class BoomView : public BoomViewBase
{
public:
    BoomView();
    ~BoomView() {}
 80039d8:	4770      	bx	lr

080039da <_ZN8BoomView14tearDownScreenEv>:
}

void BoomView::tearDownScreen()
{
    BoomViewBase::tearDownScreen();
 80039da:	4770      	bx	lr

080039dc <_ZN8BoomView11setupScreenEv>:
    BoomViewBase::setupScreen();
 80039dc:	f7fe bdcb 	b.w	8002576 <_ZN12BoomViewBase11setupScreenEv>

080039e0 <_ZN8BoomViewD0Ev>:
 80039e0:	b510      	push	{r4, lr}
 80039e2:	4604      	mov	r4, r0
 80039e4:	219c      	movs	r1, #156	; 0x9c
 80039e6:	f01b ff1a 	bl	801f81e <_ZdlPvj>
 80039ea:	4620      	mov	r0, r4
 80039ec:	bd10      	pop	{r4, pc}
	...

080039f0 <_ZN8BoomViewC1Ev>:
BoomView::BoomView()
 80039f0:	b510      	push	{r4, lr}
 80039f2:	4604      	mov	r4, r0
 80039f4:	f7fe fdea 	bl	80025cc <_ZN12BoomViewBaseC1Ev>
 80039f8:	4b01      	ldr	r3, [pc, #4]	; (8003a00 <_ZN8BoomViewC1Ev+0x10>)
}
 80039fa:	4620      	mov	r0, r4
BoomView::BoomView()
 80039fc:	6023      	str	r3, [r4, #0]
}
 80039fe:	bd10      	pop	{r4, pc}
 8003a00:	08022234 	.word	0x08022234

08003a04 <_ZN18CountdownPresenterD1Ev>:
     */
    virtual void deactivate();

    void secondTick();

    virtual ~CountdownPresenter() {};
 8003a04:	4770      	bx	lr

08003a06 <_ZThn4_N18CountdownPresenterD1Ev>:
 8003a06:	3804      	subs	r0, #4
 8003a08:	4770      	bx	lr

08003a0a <_ZN18CountdownPresenter10deactivateEv>:
}

void CountdownPresenter::activate()
{

}
 8003a0a:	4770      	bx	lr

08003a0c <_ZN18CountdownPresenterD0Ev>:
 8003a0c:	b510      	push	{r4, lr}
 8003a0e:	4604      	mov	r4, r0
 8003a10:	2110      	movs	r1, #16
 8003a12:	f01b ff04 	bl	801f81e <_ZdlPvj>
 8003a16:	4620      	mov	r0, r4
 8003a18:	bd10      	pop	{r4, pc}

08003a1a <_ZThn4_N18CountdownPresenterD0Ev>:
 8003a1a:	f1a0 0004 	sub.w	r0, r0, #4
 8003a1e:	e7f5      	b.n	8003a0c <_ZN18CountdownPresenterD0Ev>

08003a20 <_ZN18CountdownPresenter10secondTickEv>:

}

void CountdownPresenter::secondTick()
{
    view.handleSecondTick();
 8003a20:	68c0      	ldr	r0, [r0, #12]
 8003a22:	f000 b83d 	b.w	8003aa0 <_ZN13CountdownView16handleSecondTickEv>

08003a26 <_ZThn4_N18CountdownPresenter10secondTickEv>:
    void secondTick();
 8003a26:	f1a0 0004 	sub.w	r0, r0, #4
 8003a2a:	f7ff bff9 	b.w	8003a20 <_ZN18CountdownPresenter10secondTickEv>
	...

08003a30 <_ZN18CountdownPresenterC1ER13CountdownView>:
 8003a30:	2200      	movs	r2, #0
    : view(v)
 8003a32:	60c1      	str	r1, [r0, #12]
 8003a34:	6082      	str	r2, [r0, #8]
 8003a36:	4a04      	ldr	r2, [pc, #16]	; (8003a48 <_ZN18CountdownPresenterC1ER13CountdownView+0x18>)
CountdownPresenter::CountdownPresenter(CountdownView& v)
 8003a38:	b510      	push	{r4, lr}
    : view(v)
 8003a3a:	f102 0408 	add.w	r4, r2, #8
 8003a3e:	3224      	adds	r2, #36	; 0x24
 8003a40:	6004      	str	r4, [r0, #0]
 8003a42:	6042      	str	r2, [r0, #4]
}
 8003a44:	bd10      	pop	{r4, pc}
 8003a46:	bf00      	nop
 8003a48:	08022260 	.word	0x08022260

08003a4c <_ZN13CountdownViewD1Ev>:

class CountdownView : public CountdownViewBase
{
public:
    CountdownView();
    ~CountdownView() {}
 8003a4c:	4770      	bx	lr

08003a4e <_ZN13CountdownView14tearDownScreenEv>:
}

void CountdownView::tearDownScreen()
{
    CountdownViewBase::tearDownScreen();
}
 8003a4e:	4770      	bx	lr

08003a50 <_ZN13CountdownView11setupScreenEv>:
    CountdownViewBase::setupScreen();
 8003a50:	f7fe be4a 	b.w	80026e8 <_ZN17CountdownViewBase11setupScreenEv>

08003a54 <_ZN13CountdownViewD0Ev>:
 8003a54:	b510      	push	{r4, lr}
 8003a56:	4604      	mov	r4, r0
 8003a58:	f44f 7184 	mov.w	r1, #264	; 0x108
 8003a5c:	f01b fedf 	bl	801f81e <_ZdlPvj>
 8003a60:	4620      	mov	r0, r4
 8003a62:	bd10      	pop	{r4, pc}

08003a64 <_ZN13CountdownViewC1Ev>:
CountdownView::CountdownView()
 8003a64:	b510      	push	{r4, lr}
 8003a66:	4604      	mov	r4, r0
 8003a68:	f7fe fe6a 	bl	8002740 <_ZN17CountdownViewBaseC1Ev>
 8003a6c:	4b03      	ldr	r3, [pc, #12]	; (8003a7c <_ZN13CountdownViewC1Ev+0x18>)
}
 8003a6e:	4620      	mov	r0, r4
CountdownView::CountdownView()
 8003a70:	6023      	str	r3, [r4, #0]
 8003a72:	230a      	movs	r3, #10
 8003a74:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
}
 8003a78:	bd10      	pop	{r4, pc}
 8003a7a:	bf00      	nop
 8003a7c:	0802229c 	.word	0x0802229c

08003a80 <_ZN13CountdownView11clockUpdateEv>:

void CountdownView::clockUpdate()
{
 8003a80:	b507      	push	{r0, r1, r2, lr}
 8003a82:	4603      	mov	r3, r0
    clock.setTime24Hour(0, 0, timeLeft);
 8003a84:	2200      	movs	r2, #0
 8003a86:	306c      	adds	r0, #108	; 0x6c
 8003a88:	f893 3104 	ldrb.w	r3, [r3, #260]	; 0x104
 8003a8c:	4611      	mov	r1, r2
 8003a8e:	9001      	str	r0, [sp, #4]
 8003a90:	f008 fba5 	bl	800c1de <_ZN8touchgfx13AbstractClock13setTime24HourEhhh>
    clock.invalidate();
 8003a94:	9801      	ldr	r0, [sp, #4]
}
 8003a96:	b003      	add	sp, #12
 8003a98:	f85d eb04 	ldr.w	lr, [sp], #4
    clock.invalidate();
 8003a9c:	f00e bde6 	b.w	801266c <_ZNK8touchgfx8Drawable10invalidateEv>

08003aa0 <_ZN13CountdownView16handleSecondTickEv>:

void CountdownView::handleSecondTick()
{
    if (timeLeft > 0) {
 8003aa0:	f8d0 2104 	ldr.w	r2, [r0, #260]	; 0x104
{
 8003aa4:	b508      	push	{r3, lr}
    if (timeLeft > 0) {
 8003aa6:	b132      	cbz	r2, 8003ab6 <_ZN13CountdownView16handleSecondTickEv+0x16>
        timeLeft--;
 8003aa8:	3a01      	subs	r2, #1
        clockUpdate();
    }
    else application().gotoBoomScreenNoTransition();
}
 8003aaa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        timeLeft--;
 8003aae:	f8c0 2104 	str.w	r2, [r0, #260]	; 0x104
        clockUpdate();
 8003ab2:	f7ff bfe5 	b.w	8003a80 <_ZN13CountdownView11clockUpdateEv>
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003ab6:	f00d fdd9 	bl	801166c <_ZN8touchgfx11Application11getInstanceEv>
}
 8003aba:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    else application().gotoBoomScreenNoTransition();
 8003abe:	f7ff bb31 	b.w	8003124 <_ZN23FrontendApplicationBase26gotoBoomScreenNoTransitionEv>

08003ac2 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8003ac2:	4770      	bx	lr

08003ac4 <_ZN19FrontendApplicationD0Ev>:
 8003ac4:	b510      	push	{r4, lr}
 8003ac6:	4604      	mov	r4, r0
 8003ac8:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8003acc:	f01b fea7 	bl	801f81e <_ZdlPvj>
 8003ad0:	4620      	mov	r0, r4
 8003ad2:	bd10      	pop	{r4, pc}

08003ad4 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8003ad4:	b510      	push	{r4, lr}
 8003ad6:	4604      	mov	r4, r0
    {
        model.tick();
 8003ad8:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 8003adc:	f000 f8c7 	bl	8003c6e <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8003ae0:	4620      	mov	r0, r4
    }
 8003ae2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8003ae6:	f00d bc63 	b.w	80113b0 <_ZN8touchgfx11Application15handleTickEventEv>
	...

08003aec <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8003aec:	b510      	push	{r4, lr}
 8003aee:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8003af0:	f7ff facc 	bl	800308c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8003af4:	4b01      	ldr	r3, [pc, #4]	; (8003afc <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
{

}
 8003af6:	4620      	mov	r0, r4
    : FrontendApplicationBase(m, heap)
 8003af8:	6023      	str	r3, [r4, #0]
}
 8003afa:	bd10      	pop	{r4, pc}
 8003afc:	080222d0 	.word	0x080222d0

08003b00 <_ZN16InitialPresenterD1Ev>:
     */
    void deactivate();

    void testPinStateChanged(bool state);

    ~InitialPresenter() {};
 8003b00:	4770      	bx	lr

08003b02 <_ZThn4_N16InitialPresenterD1Ev>:
 8003b02:	3804      	subs	r0, #4
 8003b04:	4770      	bx	lr

08003b06 <_ZN16InitialPresenter10deactivateEv>:
}

void InitialPresenter::activate()
{

}
 8003b06:	4770      	bx	lr

08003b08 <_ZN16InitialPresenterD0Ev>:
 8003b08:	b510      	push	{r4, lr}
 8003b0a:	4604      	mov	r4, r0
 8003b0c:	2110      	movs	r1, #16
 8003b0e:	f01b fe86 	bl	801f81e <_ZdlPvj>
 8003b12:	4620      	mov	r0, r4
 8003b14:	bd10      	pop	{r4, pc}

08003b16 <_ZThn4_N16InitialPresenterD0Ev>:
 8003b16:	f1a0 0004 	sub.w	r0, r0, #4
 8003b1a:	e7f5      	b.n	8003b08 <_ZN16InitialPresenterD0Ev>

08003b1c <_ZN16InitialPresenter19testPinStateChangedEb>:

}

void InitialPresenter::testPinStateChanged(bool state)
{
	view.testPinStateChanged(state);
 8003b1c:	68c0      	ldr	r0, [r0, #12]
 8003b1e:	f000 b899 	b.w	8003c54 <_ZN11InitialView19testPinStateChangedEb>

08003b22 <_ZThn4_N16InitialPresenter19testPinStateChangedEb>:
    void testPinStateChanged(bool state);
 8003b22:	f1a0 0004 	sub.w	r0, r0, #4
 8003b26:	f7ff bff9 	b.w	8003b1c <_ZN16InitialPresenter19testPinStateChangedEb>
	...

08003b2c <_ZN16InitialPresenterC1ER11InitialView>:
 8003b2c:	2200      	movs	r2, #0
    : view(v)
 8003b2e:	60c1      	str	r1, [r0, #12]
 8003b30:	6082      	str	r2, [r0, #8]
 8003b32:	4a04      	ldr	r2, [pc, #16]	; (8003b44 <_ZN16InitialPresenterC1ER11InitialView+0x18>)
InitialPresenter::InitialPresenter(InitialView& v)
 8003b34:	b510      	push	{r4, lr}
    : view(v)
 8003b36:	f102 0408 	add.w	r4, r2, #8
 8003b3a:	3224      	adds	r2, #36	; 0x24
 8003b3c:	6004      	str	r4, [r0, #0]
 8003b3e:	6042      	str	r2, [r0, #4]
}
 8003b40:	bd10      	pop	{r4, pc}
 8003b42:	bf00      	nop
 8003b44:	08022314 	.word	0x08022314

08003b48 <_ZN11InitialViewD1Ev>:

class InitialView : public InitialViewBase
{
public:
    InitialView();
    ~InitialView() {}
 8003b48:	4770      	bx	lr

08003b4a <_ZN11InitialView14tearDownScreenEv>:
}

void InitialView::tearDownScreen()
{
    InitialViewBase::tearDownScreen();
}
 8003b4a:	4770      	bx	lr

08003b4c <_ZN11InitialView11setupScreenEv>:
{
 8003b4c:	b513      	push	{r0, r1, r4, lr}
 8003b4e:	4604      	mov	r4, r0
    InitialViewBase::setupScreen();
 8003b50:	f7ff fb65 	bl	800321e <_ZN15InitialViewBase11setupScreenEv>
    sensorOverrideToggle.forceState(true);
 8003b54:	2101      	movs	r1, #1
 8003b56:	f104 00e0 	add.w	r0, r4, #224	; 0xe0
 8003b5a:	9001      	str	r0, [sp, #4]
 8003b5c:	f00a ff55 	bl	800ea0a <_ZN8touchgfx12ToggleButton10forceStateEb>
    sensorOverrideToggle.invalidate();
 8003b60:	9801      	ldr	r0, [sp, #4]
 8003b62:	f00e fd83 	bl	801266c <_ZNK8touchgfx8Drawable10invalidateEv>
    gauge1.setValue(coreTemp);
 8003b66:	f504 5340 	add.w	r3, r4, #12288	; 0x3000
 8003b6a:	f504 708c 	add.w	r0, r4, #280	; 0x118
 8003b6e:	f8d3 11c8 	ldr.w	r1, [r3, #456]	; 0x1c8
}
 8003b72:	b002      	add	sp, #8
 8003b74:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    gauge1.setValue(coreTemp);
 8003b78:	f00b bd1a 	b.w	800f5b0 <_ZN8touchgfx5Gauge8setValueEi>

08003b7c <_ZN11InitialViewD0Ev>:
 8003b7c:	b510      	push	{r4, lr}
 8003b7e:	4604      	mov	r4, r0
 8003b80:	f243 11d4 	movw	r1, #12756	; 0x31d4
 8003b84:	f01b fe4b 	bl	801f81e <_ZdlPvj>
 8003b88:	4620      	mov	r0, r4
 8003b8a:	bd10      	pop	{r4, pc}

08003b8c <_ZNK8touchgfx6Bitmap5getIdEv>:
    /**
     * Gets the id of this Bitmap.
     *
     * @return The id of this Bitmap.
     */
    BitmapId getId() const
 8003b8c:	b508      	push	{r3, lr}
    {
        assert(bitmaps != 0 && "Bitmap database has not been initialized.");
 8003b8e:	4b05      	ldr	r3, [pc, #20]	; (8003ba4 <_ZNK8touchgfx6Bitmap5getIdEv+0x18>)
 8003b90:	681b      	ldr	r3, [r3, #0]
 8003b92:	b92b      	cbnz	r3, 8003ba0 <_ZNK8touchgfx6Bitmap5getIdEv+0x14>
 8003b94:	4b04      	ldr	r3, [pc, #16]	; (8003ba8 <_ZNK8touchgfx6Bitmap5getIdEv+0x1c>)
 8003b96:	2187      	movs	r1, #135	; 0x87
 8003b98:	4a04      	ldr	r2, [pc, #16]	; (8003bac <_ZNK8touchgfx6Bitmap5getIdEv+0x20>)
 8003b9a:	4805      	ldr	r0, [pc, #20]	; (8003bb0 <_ZNK8touchgfx6Bitmap5getIdEv+0x24>)
 8003b9c:	f01c f81c 	bl	801fbd8 <__assert_func>
        return bitmapId;
    }
 8003ba0:	8800      	ldrh	r0, [r0, #0]
 8003ba2:	bd08      	pop	{r3, pc}
 8003ba4:	2400e124 	.word	0x2400e124
 8003ba8:	08022348 	.word	0x08022348
 8003bac:	08022384 	.word	0x08022384
 8003bb0:	080223b7 	.word	0x080223b7

08003bb4 <_ZN11InitialView15handleTickEventEv>:

void InitialView::handleTickEvent()
{
 8003bb4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8003bb6:	4604      	mov	r4, r0
     * @return True if the button has been toggled, i.e. the pressed state is shown when the
     *         button is not pressed.
     */
    bool getState() const
    {
        return up.getId() == originalPressed.getId();
 8003bb8:	f500 7087 	add.w	r0, r0, #270	; 0x10e
 8003bbc:	f7ff ffe6 	bl	8003b8c <_ZNK8touchgfx6Bitmap5getIdEv>
 8003bc0:	4605      	mov	r5, r0
 8003bc2:	f504 708a 	add.w	r0, r4, #276	; 0x114
    bool sensorOverride = sensorOverrideToggle.getState();
	if (sensorOverride) coolingEnabled = sensorOverride;
    if (coolingEnabled && coreTemp > 20) coreTemp--;
    if (!coolingEnabled && coreTemp < 1000) coreTemp++;
 8003bc6:	f504 5640 	add.w	r6, r4, #12288	; 0x3000
 8003bca:	f7ff ffdf 	bl	8003b8c <_ZNK8touchgfx6Bitmap5getIdEv>
	if (sensorOverride) coolingEnabled = sensorOverride;
 8003bce:	4285      	cmp	r5, r0
    if (!coolingEnabled && coreTemp < 1000) coreTemp++;
 8003bd0:	f8d6 31c8 	ldr.w	r3, [r6, #456]	; 0x1c8
	if (sensorOverride) coolingEnabled = sensorOverride;
 8003bd4:	d11e      	bne.n	8003c14 <_ZN11InitialView15handleTickEventEv+0x60>
 8003bd6:	2201      	movs	r2, #1
 8003bd8:	f886 21d0 	strb.w	r2, [r6, #464]	; 0x1d0
    if (coolingEnabled && coreTemp > 20) coreTemp--;
 8003bdc:	2b14      	cmp	r3, #20
 8003bde:	d902      	bls.n	8003be6 <_ZN11InitialView15handleTickEventEv+0x32>
 8003be0:	3b01      	subs	r3, #1
    if (!coolingEnabled && coreTemp < 1000) coreTemp++;
 8003be2:	f8c6 31c8 	str.w	r3, [r6, #456]	; 0x1c8
    if (coreTemp == lastCoreTemp) return;
 8003be6:	e9d6 1372 	ldrd	r1, r3, [r6, #456]	; 0x1c8
 8003bea:	4299      	cmp	r1, r3
 8003bec:	d01b      	beq.n	8003c26 <_ZN11InitialView15handleTickEventEv+0x72>
    gauge1.setValue(coreTemp);
 8003bee:	f504 708c 	add.w	r0, r4, #280	; 0x118
 8003bf2:	9001      	str	r0, [sp, #4]
 8003bf4:	f00b fcdc 	bl	800f5b0 <_ZN8touchgfx5Gauge8setValueEi>
    gauge1.invalidate();
 8003bf8:	9801      	ldr	r0, [sp, #4]
 8003bfa:	f00e fd37 	bl	801266c <_ZNK8touchgfx8Drawable10invalidateEv>
    if (coreTemp > 150) {
 8003bfe:	f8d6 31c8 	ldr.w	r3, [r6, #456]	; 0x1c8
 8003c02:	2b96      	cmp	r3, #150	; 0x96
 8003c04:	d90f      	bls.n	8003c26 <_ZN11InitialView15handleTickEventEv+0x72>
 8003c06:	f00d fd31 	bl	801166c <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoCountdownScreenWipeTransitionEast();

    }
}
 8003c0a:	b002      	add	sp, #8
 8003c0c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        application().gotoCountdownScreenWipeTransitionEast();
 8003c10:	f7ff ba78 	b.w	8003104 <_ZN23FrontendApplicationBase37gotoCountdownScreenWipeTransitionEastEv>
    if (coolingEnabled && coreTemp > 20) coreTemp--;
 8003c14:	f896 21d0 	ldrb.w	r2, [r6, #464]	; 0x1d0
 8003c18:	2a00      	cmp	r2, #0
 8003c1a:	d1df      	bne.n	8003bdc <_ZN11InitialView15handleTickEventEv+0x28>
    if (!coolingEnabled && coreTemp < 1000) coreTemp++;
 8003c1c:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8003c20:	d2e1      	bcs.n	8003be6 <_ZN11InitialView15handleTickEventEv+0x32>
 8003c22:	3301      	adds	r3, #1
 8003c24:	e7dd      	b.n	8003be2 <_ZN11InitialView15handleTickEventEv+0x2e>
}
 8003c26:	b002      	add	sp, #8
 8003c28:	bd70      	pop	{r4, r5, r6, pc}
	...

08003c2c <_ZN11InitialViewC1Ev>:
InitialView::InitialView()
 8003c2c:	b510      	push	{r4, lr}
 8003c2e:	4604      	mov	r4, r0
 8003c30:	f7ff fb50 	bl	80032d4 <_ZN15InitialViewBaseC1Ev>
 8003c34:	4b06      	ldr	r3, [pc, #24]	; (8003c50 <_ZN11InitialViewC1Ev+0x24>)
 8003c36:	2114      	movs	r1, #20
 8003c38:	2200      	movs	r2, #0
}
 8003c3a:	4620      	mov	r0, r4
InitialView::InitialView()
 8003c3c:	6023      	str	r3, [r4, #0]
 8003c3e:	f504 5340 	add.w	r3, r4, #12288	; 0x3000
 8003c42:	e9c3 1272 	strd	r1, r2, [r3, #456]	; 0x1c8
 8003c46:	2201      	movs	r2, #1
 8003c48:	f883 21d0 	strb.w	r2, [r3, #464]	; 0x1d0
}
 8003c4c:	bd10      	pop	{r4, pc}
 8003c4e:	bf00      	nop
 8003c50:	08022414 	.word	0x08022414

08003c54 <_ZN11InitialView19testPinStateChangedEb>:

void InitialView::testPinStateChanged(bool state)
{
	coolingEnabled = !state;
 8003c54:	f500 5040 	add.w	r0, r0, #12288	; 0x3000
 8003c58:	f081 0101 	eor.w	r1, r1, #1
 8003c5c:	f880 11d0 	strb.w	r1, [r0, #464]	; 0x1d0
}
 8003c60:	4770      	bx	lr

08003c62 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 8003c62:	2200      	movs	r2, #0
 8003c64:	e9c0 2200 	strd	r2, r2, [r0]
 8003c68:	6082      	str	r2, [r0, #8]
 8003c6a:	7302      	strb	r2, [r0, #12]
{

}
 8003c6c:	4770      	bx	lr

08003c6e <_ZN5Model4tickEv>:

void Model::tick()
{
 8003c6e:	b510      	push	{r4, lr}
 8003c70:	4604      	mov	r4, r0
	bool testPinState = BRIDGE_GetTestPinState();
 8003c72:	f7fc fd47 	bl	8000704 <BRIDGE_GetTestPinState>
 8003c76:	4601      	mov	r1, r0
	if (testPinState != lastTestPinState) modelListener->testPinStateChanged(lastTestPinState = testPinState);
 8003c78:	7b23      	ldrb	r3, [r4, #12]
 8003c7a:	4283      	cmp	r3, r0
 8003c7c:	d004      	beq.n	8003c88 <_ZN5Model4tickEv+0x1a>
 8003c7e:	6820      	ldr	r0, [r4, #0]
 8003c80:	6803      	ldr	r3, [r0, #0]
 8003c82:	68db      	ldr	r3, [r3, #12]
 8003c84:	7321      	strb	r1, [r4, #12]
 8003c86:	4798      	blx	r3
	frame++;
 8003c88:	6863      	ldr	r3, [r4, #4]
 8003c8a:	223c      	movs	r2, #60	; 0x3c
 8003c8c:	3301      	adds	r3, #1
 8003c8e:	fbb3 f1f2 	udiv	r1, r3, r2
 8003c92:	6063      	str	r3, [r4, #4]
 8003c94:	fb02 3311 	mls	r3, r2, r1, r3
	if ((frame % 60) == 0) {
 8003c98:	b943      	cbnz	r3, 8003cac <_ZN5Model4tickEv+0x3e>
		second++;
 8003c9a:	68a3      	ldr	r3, [r4, #8]
		modelListener->secondTick();
 8003c9c:	6820      	ldr	r0, [r4, #0]
		second++;
 8003c9e:	3301      	adds	r3, #1
 8003ca0:	60a3      	str	r3, [r4, #8]
		modelListener->secondTick();
 8003ca2:	6803      	ldr	r3, [r0, #0]
	}
}
 8003ca4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		modelListener->secondTick();
 8003ca8:	689b      	ldr	r3, [r3, #8]
 8003caa:	4718      	bx	r3
}
 8003cac:	bd10      	pop	{r4, pc}

08003cae <FT6X06_GetCapabilities>:
{
  /* Prevent unused argument(s) compilation warning */  
  (void)(pObj);
  
  /* Store component's capabilities */
  Capabilities->MultiTouch = 1;
 8003cae:	2301      	movs	r3, #1
  Capabilities->Gesture    = 0;  /* Gesture feature is currently not activated on FW chipset */
  Capabilities->MaxTouch   = FT6X06_MAX_NB_TOUCH;
  Capabilities->MaxXl      = FT6X06_MAX_X_LENGTH;
  Capabilities->MaxYl      = FT6X06_MAX_Y_LENGTH;
 8003cb0:	f44f 7248 	mov.w	r2, #800	; 0x320
  
  return FT6X06_OK;
}
 8003cb4:	2000      	movs	r0, #0
  Capabilities->MultiTouch = 1;
 8003cb6:	800b      	strh	r3, [r1, #0]
  Capabilities->MaxTouch   = FT6X06_MAX_NB_TOUCH;
 8003cb8:	2302      	movs	r3, #2
 8003cba:	708b      	strb	r3, [r1, #2]
  Capabilities->MaxYl      = FT6X06_MAX_Y_LENGTH;
 8003cbc:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 8003cc0:	e9c1 2301 	strd	r2, r3, [r1, #4]
}
 8003cc4:	4770      	bx	lr

08003cc6 <FT6X06_DeInit>:
  * @param  pObj Component object pointer
  * @retval Component status
  */
int32_t FT6X06_DeInit(FT6X06_Object_t *pObj)
{
  if(pObj->IsInitialized == 1U)
 8003cc6:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 8003cca:	2b01      	cmp	r3, #1
  {
    pObj->IsInitialized = 0;
 8003ccc:	bf04      	itt	eq
 8003cce:	2300      	moveq	r3, #0
 8003cd0:	f880 3024 	strbeq.w	r3, [r0, #36]	; 0x24
  }
  
  return FT6X06_OK;
}
 8003cd4:	2000      	movs	r0, #0
 8003cd6:	4770      	bx	lr

08003cd8 <FT6X06_ITStatus>:
  /* Prevent unused argument(s) compilation warning */  
  (void)(pObj);
  
  /* Always return FT6X06_OK as feature not supported by FT6X06 */
  return FT6X06_OK;
}
 8003cd8:	2000      	movs	r0, #0
 8003cda:	4770      	bx	lr

08003cdc <ReadRegWrap>:
  * @param  pData The target register value to be read
  * @param  Length buffer size to be read
  * @retval Component status.
  */
static int32_t ReadRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
 8003cdc:	b410      	push	{r4}
  FT6X06_Object_t *pObj = (FT6X06_Object_t *)handle;

  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
 8003cde:	6904      	ldr	r4, [r0, #16]
 8003ce0:	8900      	ldrh	r0, [r0, #8]
 8003ce2:	46a4      	mov	ip, r4
}
 8003ce4:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
 8003ce8:	4760      	bx	ip

08003cea <WriteRegWrap>:
  * @param  pData The target register value to be written
  * @param  Length buffer size to be written
  * @retval Component status.
  */
static int32_t WriteRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
 8003cea:	b410      	push	{r4}
  FT6X06_Object_t *pObj = (FT6X06_Object_t *)handle;

  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
 8003cec:	68c4      	ldr	r4, [r0, #12]
 8003cee:	8900      	ldrh	r0, [r0, #8]
 8003cf0:	46a4      	mov	ip, r4
}
 8003cf2:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
 8003cf6:	4760      	bx	ip

08003cf8 <FT6X06_GestureConfig>:
{
 8003cf8:	e92d 4320 	stmdb	sp!, {r5, r8, r9, lr}
  ret = ft6x06_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
 8003cfc:	f100 0818 	add.w	r8, r0, #24
{
 8003d00:	4689      	mov	r9, r1
  ret = ft6x06_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
 8003d02:	7809      	ldrb	r1, [r1, #0]
 8003d04:	4640      	mov	r0, r8
 8003d06:	f000 f917 	bl	8003f38 <ft6x06_radian_value>
 8003d0a:	4605      	mov	r5, r0
  ret += ft6x06_offset_left_right(&pObj->Ctx, (uint8_t)GestureInit->OffsetLeftRight);
 8003d0c:	f899 1004 	ldrb.w	r1, [r9, #4]
 8003d10:	4640      	mov	r0, r8
 8003d12:	f000 f91d 	bl	8003f50 <ft6x06_offset_left_right>
 8003d16:	4405      	add	r5, r0
  ret += ft6x06_offset_up_down(&pObj->Ctx, (uint8_t)GestureInit->OffsetUpDown);
 8003d18:	f899 1008 	ldrb.w	r1, [r9, #8]
 8003d1c:	4640      	mov	r0, r8
 8003d1e:	f000 f923 	bl	8003f68 <ft6x06_offset_up_down>
 8003d22:	4405      	add	r5, r0
  ret += ft6x06_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
 8003d24:	f899 100c 	ldrb.w	r1, [r9, #12]
 8003d28:	4640      	mov	r0, r8
 8003d2a:	f000 f929 	bl	8003f80 <ft6x06_disatnce_left_right>
 8003d2e:	4405      	add	r5, r0
  ret += ft6x06_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
 8003d30:	f899 1010 	ldrb.w	r1, [r9, #16]
 8003d34:	4640      	mov	r0, r8
 8003d36:	f000 f92f 	bl	8003f98 <ft6x06_distance_up_down>
 8003d3a:	4405      	add	r5, r0
  ret += ft6x06_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
 8003d3c:	f899 1014 	ldrb.w	r1, [r9, #20]
 8003d40:	4640      	mov	r0, r8
 8003d42:	f000 f935 	bl	8003fb0 <ft6x06_distance_zoom>
  if(ret != FT6X06_OK)
 8003d46:	42c5      	cmn	r5, r0
}
 8003d48:	bf14      	ite	ne
 8003d4a:	f04f 30ff 	movne.w	r0, #4294967295
 8003d4e:	2000      	moveq	r0, #0
 8003d50:	e8bd 8320 	ldmia.w	sp!, {r5, r8, r9, pc}

08003d54 <FT6X06_ReadID>:
{
 8003d54:	b513      	push	{r0, r1, r4, lr}
 8003d56:	460c      	mov	r4, r1
  ret = ft6x06_chip_id(&pObj->Ctx, &ft6x06_id);
 8003d58:	3018      	adds	r0, #24
 8003d5a:	f10d 0107 	add.w	r1, sp, #7
 8003d5e:	f000 f93f 	bl	8003fe0 <ft6x06_chip_id>
  *Id = (uint32_t) ft6x06_id;
 8003d62:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8003d66:	6023      	str	r3, [r4, #0]
}
 8003d68:	b002      	add	sp, #8
 8003d6a:	bd10      	pop	{r4, pc}

08003d6c <FT6X06_GetState>:
{
 8003d6c:	b537      	push	{r0, r1, r2, r4, r5, lr}
  if(ft6x06_td_status(&pObj->Ctx, &nb_touch) != FT6X06_OK)
 8003d6e:	f100 0518 	add.w	r5, r0, #24
{
 8003d72:	460c      	mov	r4, r1
  if(ft6x06_td_status(&pObj->Ctx, &nb_touch) != FT6X06_OK)
 8003d74:	a901      	add	r1, sp, #4
 8003d76:	4628      	mov	r0, r5
 8003d78:	f000 f8d1 	bl	8003f1e <ft6x06_td_status>
 8003d7c:	bb08      	cbnz	r0, 8003dc2 <FT6X06_GetState+0x56>
    if(nb_touch > FT6X06_MAX_NB_TOUCH)
 8003d7e:	f89d 3004 	ldrb.w	r3, [sp, #4]
      ret = (int32_t)nb_touch;
 8003d82:	2b02      	cmp	r3, #2
 8003d84:	bf98      	it	ls
 8003d86:	4618      	movls	r0, r3
  if(ft6x06_read_reg(&pObj->Ctx, FT6X06_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT6X06_OK)
 8003d88:	2304      	movs	r3, #4
  State->TouchDetected = (uint32_t)FT6X06_DetectTouch(pObj);
 8003d8a:	6020      	str	r0, [r4, #0]
  if(ft6x06_read_reg(&pObj->Ctx, FT6X06_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT6X06_OK)
 8003d8c:	2103      	movs	r1, #3
 8003d8e:	4628      	mov	r0, r5
 8003d90:	eb0d 0203 	add.w	r2, sp, r3
 8003d94:	f000 f8b0 	bl	8003ef8 <ft6x06_read_reg>
 8003d98:	b9b0      	cbnz	r0, 8003dc8 <FT6X06_GetState+0x5c>
    State->TouchX = (((uint32_t)data[0] & FT6X06_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT6X06_P1_XL_TP_BIT_MASK);
 8003d9a:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8003d9e:	f89d 2005 	ldrb.w	r2, [sp, #5]
 8003da2:	021b      	lsls	r3, r3, #8
 8003da4:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8003da8:	4313      	orrs	r3, r2
    State->TouchY = (((uint32_t)data[2] & FT6X06_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT6X06_P1_YL_TP_BIT_MASK);
 8003daa:	f89d 2007 	ldrb.w	r2, [sp, #7]
    State->TouchX = (((uint32_t)data[0] & FT6X06_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT6X06_P1_XL_TP_BIT_MASK);
 8003dae:	6063      	str	r3, [r4, #4]
    State->TouchY = (((uint32_t)data[2] & FT6X06_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT6X06_P1_YL_TP_BIT_MASK);
 8003db0:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8003db4:	021b      	lsls	r3, r3, #8
 8003db6:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8003dba:	4313      	orrs	r3, r2
 8003dbc:	60a3      	str	r3, [r4, #8]
}
 8003dbe:	b003      	add	sp, #12
 8003dc0:	bd30      	pop	{r4, r5, pc}
    ret = FT6X06_ERROR;
 8003dc2:	f04f 30ff 	mov.w	r0, #4294967295
 8003dc6:	e7df      	b.n	8003d88 <FT6X06_GetState+0x1c>
    ret = FT6X06_ERROR;
 8003dc8:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
 8003dcc:	e7f7      	b.n	8003dbe <FT6X06_GetState+0x52>

08003dce <FT6X06_GetGesture>:
  return ft6x06_gest_id(&pObj->Ctx, GestureId);
 8003dce:	3018      	adds	r0, #24
 8003dd0:	f000 b8a0 	b.w	8003f14 <ft6x06_gest_id>

08003dd4 <FT6X06_EnableIT>:
  return ft6x06_g_mode(&pObj->Ctx, FT6X06_G_MODE_INTERRUPT_TRIGGER);
 8003dd4:	2101      	movs	r1, #1
 8003dd6:	3018      	adds	r0, #24
 8003dd8:	f000 b8f6 	b.w	8003fc8 <ft6x06_g_mode>

08003ddc <FT6X06_DisableIT>:
  return ft6x06_g_mode(&pObj->Ctx, FT6X06_G_MODE_INTERRUPT_POLLING);
 8003ddc:	2100      	movs	r1, #0
 8003dde:	3018      	adds	r0, #24
 8003de0:	f000 b8f2 	b.w	8003fc8 <ft6x06_g_mode>

08003de4 <FT6X06_Init>:
{
 8003de4:	b510      	push	{r4, lr}
  if(pObj->IsInitialized == 0U)
 8003de6:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
{
 8003dea:	4604      	mov	r4, r0
  if(pObj->IsInitialized == 0U)
 8003dec:	b96b      	cbnz	r3, 8003e0a <FT6X06_Init+0x26>
    pObj->IO.Init();
 8003dee:	6803      	ldr	r3, [r0, #0]
 8003df0:	4798      	blx	r3
    ret += FT6X06_DisableIT(pObj);
 8003df2:	4620      	mov	r0, r4
 8003df4:	f7ff fff2 	bl	8003ddc <FT6X06_DisableIT>
  if(ret != FT6X06_OK)
 8003df8:	3800      	subs	r0, #0
    pObj->IsInitialized = 1;
 8003dfa:	f04f 0301 	mov.w	r3, #1
  if(ret != FT6X06_OK)
 8003dfe:	bf18      	it	ne
 8003e00:	2001      	movne	r0, #1
    pObj->IsInitialized = 1;
 8003e02:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
  if(ret != FT6X06_OK)
 8003e06:	4240      	negs	r0, r0
}
 8003e08:	bd10      	pop	{r4, pc}
  int32_t ret = FT6X06_OK;
 8003e0a:	2000      	movs	r0, #0
  return ret;
 8003e0c:	e7fc      	b.n	8003e08 <FT6X06_Init+0x24>

08003e0e <FT6X06_ClearIT>:
 8003e0e:	2000      	movs	r0, #0
 8003e10:	4770      	bx	lr

08003e12 <FT6X06_GetMultiTouchState>:
{
 8003e12:	b530      	push	{r4, r5, lr}
  if(ft6x06_td_status(&pObj->Ctx, &nb_touch) != FT6X06_OK)
 8003e14:	f100 0518 	add.w	r5, r0, #24
{
 8003e18:	b085      	sub	sp, #20
 8003e1a:	460c      	mov	r4, r1
  if(ft6x06_td_status(&pObj->Ctx, &nb_touch) != FT6X06_OK)
 8003e1c:	4628      	mov	r0, r5
 8003e1e:	a901      	add	r1, sp, #4
 8003e20:	f000 f87d 	bl	8003f1e <ft6x06_td_status>
 8003e24:	2800      	cmp	r0, #0
 8003e26:	d145      	bne.n	8003eb4 <FT6X06_GetMultiTouchState+0xa2>
    if(nb_touch > FT6X06_MAX_NB_TOUCH)
 8003e28:	f89d 3004 	ldrb.w	r3, [sp, #4]
      ret = (int32_t)nb_touch;
 8003e2c:	2b02      	cmp	r3, #2
 8003e2e:	bf98      	it	ls
 8003e30:	4618      	movls	r0, r3
  State->TouchDetected = (uint32_t)FT6X06_DetectTouch(pObj);
 8003e32:	6020      	str	r0, [r4, #0]
  if(ft6x06_read_reg(&pObj->Ctx, FT6X06_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT6X06_OK)
 8003e34:	230c      	movs	r3, #12
 8003e36:	aa01      	add	r2, sp, #4
 8003e38:	2103      	movs	r1, #3
 8003e3a:	4628      	mov	r0, r5
 8003e3c:	f000 f85c 	bl	8003ef8 <ft6x06_read_reg>
 8003e40:	2800      	cmp	r0, #0
 8003e42:	d13a      	bne.n	8003eba <FT6X06_GetMultiTouchState+0xa8>
    State->TouchX[0] = (((uint32_t)data[0] & FT6X06_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT6X06_P1_XL_TP_BIT_MASK);
 8003e44:	f89d 2004 	ldrb.w	r2, [sp, #4]
 8003e48:	f89d 1005 	ldrb.w	r1, [sp, #5]
 8003e4c:	0213      	lsls	r3, r2, #8
    State->TouchEvent[0] = (((uint32_t)data[0] & FT6X06_P1_XH_EF_BIT_MASK) >> FT6X06_P1_XH_EF_BIT_POSITION);
 8003e4e:	0992      	lsrs	r2, r2, #6
    State->TouchX[0] = (((uint32_t)data[0] & FT6X06_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT6X06_P1_XL_TP_BIT_MASK);
 8003e50:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchEvent[0] = (((uint32_t)data[0] & FT6X06_P1_XH_EF_BIT_MASK) >> FT6X06_P1_XH_EF_BIT_POSITION);
 8003e54:	61e2      	str	r2, [r4, #28]
    State->TouchX[0] = (((uint32_t)data[0] & FT6X06_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT6X06_P1_XL_TP_BIT_MASK);
 8003e56:	430b      	orrs	r3, r1
    State->TouchY[0] = (((uint32_t)data[2] & FT6X06_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT6X06_P1_YL_TP_BIT_MASK);
 8003e58:	f89d 1007 	ldrb.w	r1, [sp, #7]
    State->TouchX[1] = (((uint32_t)data[6] & FT6X06_P2_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[7] & FT6X06_P2_XL_TP_BIT_MASK);
 8003e5c:	f89d 200a 	ldrb.w	r2, [sp, #10]
    State->TouchX[0] = (((uint32_t)data[0] & FT6X06_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT6X06_P1_XL_TP_BIT_MASK);
 8003e60:	6063      	str	r3, [r4, #4]
    State->TouchY[0] = (((uint32_t)data[2] & FT6X06_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT6X06_P1_YL_TP_BIT_MASK);
 8003e62:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8003e66:	021b      	lsls	r3, r3, #8
 8003e68:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8003e6c:	430b      	orrs	r3, r1
    State->TouchX[1] = (((uint32_t)data[6] & FT6X06_P2_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[7] & FT6X06_P2_XL_TP_BIT_MASK);
 8003e6e:	f89d 100b 	ldrb.w	r1, [sp, #11]
    State->TouchY[0] = (((uint32_t)data[2] & FT6X06_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT6X06_P1_YL_TP_BIT_MASK);
 8003e72:	60e3      	str	r3, [r4, #12]
    State->TouchWeight[0] = ((uint32_t)data[4] & FT6X06_P1_WEIGHT_BIT_MASK);
 8003e74:	f89d 3008 	ldrb.w	r3, [sp, #8]
 8003e78:	6163      	str	r3, [r4, #20]
    State->TouchArea[0] = ((uint32_t)data[5] & FT6X06_P1_MISC_BIT_MASK) >> FT6X06_P1_MISC_BIT_POSITION;
 8003e7a:	f89d 3009 	ldrb.w	r3, [sp, #9]
 8003e7e:	091b      	lsrs	r3, r3, #4
 8003e80:	6263      	str	r3, [r4, #36]	; 0x24
    State->TouchX[1] = (((uint32_t)data[6] & FT6X06_P2_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[7] & FT6X06_P2_XL_TP_BIT_MASK);
 8003e82:	0213      	lsls	r3, r2, #8
    State->TouchEvent[1] = (((uint32_t)data[6] & FT6X06_P2_XH_EF_BIT_MASK) >> FT6X06_P2_XH_EF_BIT_POSITION);
 8003e84:	0992      	lsrs	r2, r2, #6
    State->TouchX[1] = (((uint32_t)data[6] & FT6X06_P2_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[7] & FT6X06_P2_XL_TP_BIT_MASK);
 8003e86:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchEvent[1] = (((uint32_t)data[6] & FT6X06_P2_XH_EF_BIT_MASK) >> FT6X06_P2_XH_EF_BIT_POSITION);
 8003e8a:	6222      	str	r2, [r4, #32]
    State->TouchX[1] = (((uint32_t)data[6] & FT6X06_P2_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[7] & FT6X06_P2_XL_TP_BIT_MASK);
 8003e8c:	430b      	orrs	r3, r1
    State->TouchY[1] = (((uint32_t)data[8] & FT6X06_P2_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[9] & FT6X06_P2_YL_TP_BIT_MASK);
 8003e8e:	f89d 100d 	ldrb.w	r1, [sp, #13]
    State->TouchX[1] = (((uint32_t)data[6] & FT6X06_P2_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[7] & FT6X06_P2_XL_TP_BIT_MASK);
 8003e92:	60a3      	str	r3, [r4, #8]
    State->TouchY[1] = (((uint32_t)data[8] & FT6X06_P2_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[9] & FT6X06_P2_YL_TP_BIT_MASK);
 8003e94:	f89d 300c 	ldrb.w	r3, [sp, #12]
 8003e98:	021b      	lsls	r3, r3, #8
 8003e9a:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8003e9e:	430b      	orrs	r3, r1
 8003ea0:	6123      	str	r3, [r4, #16]
    State->TouchWeight[1] = ((uint32_t)data[10] & FT6X06_P2_WEIGHT_BIT_MASK);
 8003ea2:	f89d 300e 	ldrb.w	r3, [sp, #14]
 8003ea6:	61a3      	str	r3, [r4, #24]
    State->TouchArea[1] = ((uint32_t)data[11] & FT6X06_P2_MISC_BIT_MASK) >> FT6X06_P2_MISC_BIT_POSITION;
 8003ea8:	f89d 300f 	ldrb.w	r3, [sp, #15]
 8003eac:	091b      	lsrs	r3, r3, #4
 8003eae:	62a3      	str	r3, [r4, #40]	; 0x28
}
 8003eb0:	b005      	add	sp, #20
 8003eb2:	bd30      	pop	{r4, r5, pc}
    ret = FT6X06_ERROR;
 8003eb4:	f04f 30ff 	mov.w	r0, #4294967295
 8003eb8:	e7bb      	b.n	8003e32 <FT6X06_GetMultiTouchState+0x20>
    ret = FT6X06_ERROR;
 8003eba:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;  
 8003ebe:	e7f7      	b.n	8003eb0 <FT6X06_GetMultiTouchState+0x9e>

08003ec0 <FT6X06_RegisterBusIO>:
  if (pObj == NULL)
 8003ec0:	b190      	cbz	r0, 8003ee8 <FT6X06_RegisterBusIO+0x28>
    pObj->IO.DeInit    = pIO->DeInit;
 8003ec2:	684a      	ldr	r2, [r1, #4]
    pObj->IO.Init      = pIO->Init;
 8003ec4:	680b      	ldr	r3, [r1, #0]
    pObj->IO.DeInit    = pIO->DeInit;
 8003ec6:	6042      	str	r2, [r0, #4]
    pObj->IO.Address   = pIO->Address;
 8003ec8:	890a      	ldrh	r2, [r1, #8]
    pObj->IO.Init      = pIO->Init;
 8003eca:	6003      	str	r3, [r0, #0]
    pObj->IO.Address   = pIO->Address;
 8003ecc:	8102      	strh	r2, [r0, #8]
    pObj->IO.WriteReg  = pIO->WriteReg;
 8003ece:	68ca      	ldr	r2, [r1, #12]
 8003ed0:	60c2      	str	r2, [r0, #12]
    pObj->IO.ReadReg   = pIO->ReadReg;
 8003ed2:	690a      	ldr	r2, [r1, #16]
 8003ed4:	6102      	str	r2, [r0, #16]
    pObj->IO.GetTick   = pIO->GetTick;
 8003ed6:	694a      	ldr	r2, [r1, #20]
    pObj->Ctx.handle   = pObj;
 8003ed8:	6200      	str	r0, [r0, #32]
    pObj->IO.GetTick   = pIO->GetTick;
 8003eda:	6142      	str	r2, [r0, #20]
    pObj->Ctx.ReadReg  = ReadRegWrap;
 8003edc:	4a04      	ldr	r2, [pc, #16]	; (8003ef0 <FT6X06_RegisterBusIO+0x30>)
 8003ede:	61c2      	str	r2, [r0, #28]
    pObj->Ctx.WriteReg = WriteRegWrap;
 8003ee0:	4a04      	ldr	r2, [pc, #16]	; (8003ef4 <FT6X06_RegisterBusIO+0x34>)
 8003ee2:	6182      	str	r2, [r0, #24]
    if(pObj->IO.Init != NULL)
 8003ee4:	b103      	cbz	r3, 8003ee8 <FT6X06_RegisterBusIO+0x28>
      ret = pObj->IO.Init();
 8003ee6:	4718      	bx	r3
}
 8003ee8:	f04f 30ff 	mov.w	r0, #4294967295
 8003eec:	4770      	bx	lr
 8003eee:	bf00      	nop
 8003ef0:	08003cdd 	.word	0x08003cdd
 8003ef4:	08003ceb 	.word	0x08003ceb

08003ef8 <ft6x06_read_reg>:
*                 I2C or SPI reading functions
* Input         : Register Address, length of buffer
* Output        : pdata Read
*******************************************************************************/
int32_t ft6x06_read_reg(ft6x06_ctx_t *ctx, uint8_t reg, uint8_t* pdata, uint16_t length)
{
 8003ef8:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
 8003efa:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
 8003efe:	46a4      	mov	ip, r4
}
 8003f00:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
 8003f04:	4760      	bx	ip

08003f06 <ft6x06_write_reg>:
*                 I2C or SPI writing function
* Input         : Register Address, pdata to be written, length of buffer
* Output        : None
*******************************************************************************/
int32_t ft6x06_write_reg(ft6x06_ctx_t *ctx, uint8_t reg, uint8_t *pdata, uint16_t length)
{
 8003f06:	b410      	push	{r4}
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
 8003f08:	6804      	ldr	r4, [r0, #0]
 8003f0a:	6880      	ldr	r0, [r0, #8]
 8003f0c:	46a4      	mov	ip, r4
}
 8003f0e:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
 8003f12:	4760      	bx	ip

08003f14 <ft6x06_gest_id>:
* Output         : Status of GEST_ID register
* Return         : Status [FT6X06_ERROR, FT6X06_OK]
*******************************************************************************/
int32_t  ft6x06_gest_id(ft6x06_ctx_t *ctx, uint8_t *value)
{
  return ft6x06_read_reg(ctx, FT6X06_GEST_ID_REG, (uint8_t *)value, 1);
 8003f14:	2301      	movs	r3, #1
{
 8003f16:	460a      	mov	r2, r1
  return ft6x06_read_reg(ctx, FT6X06_GEST_ID_REG, (uint8_t *)value, 1);
 8003f18:	4619      	mov	r1, r3
 8003f1a:	f7ff bfed 	b.w	8003ef8 <ft6x06_read_reg>

08003f1e <ft6x06_td_status>:
* Input          : Pointer to uint8_t
* Output         : Status of TD_STATUS register
* Return         : Status [FT6X06_ERROR, FT6X06_OK]
*******************************************************************************/
int32_t  ft6x06_td_status(ft6x06_ctx_t *ctx, uint8_t *value)
{
 8003f1e:	b510      	push	{r4, lr}
  int32_t ret;
  
  ret = ft6x06_read_reg(ctx, FT6X06_TD_STAT_REG, (uint8_t *)value, 1);
 8003f20:	460a      	mov	r2, r1
{
 8003f22:	460c      	mov	r4, r1
  ret = ft6x06_read_reg(ctx, FT6X06_TD_STAT_REG, (uint8_t *)value, 1);
 8003f24:	2301      	movs	r3, #1
 8003f26:	2102      	movs	r1, #2
 8003f28:	f7ff ffe6 	bl	8003ef8 <ft6x06_read_reg>
  
  if(ret == 0)
 8003f2c:	b918      	cbnz	r0, 8003f36 <ft6x06_td_status+0x18>
  {
    *value &= FT6X06_TD_STATUS_BIT_MASK; 
 8003f2e:	7823      	ldrb	r3, [r4, #0]
 8003f30:	f003 030f 	and.w	r3, r3, #15
 8003f34:	7023      	strb	r3, [r4, #0]
    *value = *value >> FT6X06_TD_STATUS_BIT_POSITION; 
  }
  
  return ret;
}
 8003f36:	bd10      	pop	{r4, pc}

08003f38 <ft6x06_radian_value>:
* Input          : uint8_t
* Output         : None
* Return         : Status [FT6X06_ERROR, FT6X06_OK]
*******************************************************************************/
int32_t  ft6x06_radian_value(ft6x06_ctx_t *ctx, uint8_t value)
{
 8003f38:	b507      	push	{r0, r1, r2, lr}
  return ft6x06_write_reg(ctx, FT6X06_RADIAN_VALUE_REG, &value, 1);
 8003f3a:	2301      	movs	r3, #1
{
 8003f3c:	f88d 1007 	strb.w	r1, [sp, #7]
  return ft6x06_write_reg(ctx, FT6X06_RADIAN_VALUE_REG, &value, 1);
 8003f40:	f10d 0207 	add.w	r2, sp, #7
 8003f44:	2191      	movs	r1, #145	; 0x91
 8003f46:	f7ff ffde 	bl	8003f06 <ft6x06_write_reg>
}
 8003f4a:	b003      	add	sp, #12
 8003f4c:	f85d fb04 	ldr.w	pc, [sp], #4

08003f50 <ft6x06_offset_left_right>:
* Input          : uint8_t
* Output         : None
* Return         : Status [FT6X06_ERROR, FT6X06_OK]
*******************************************************************************/
int32_t  ft6x06_offset_left_right(ft6x06_ctx_t *ctx, uint8_t value)
{
 8003f50:	b507      	push	{r0, r1, r2, lr}
  return ft6x06_write_reg(ctx, FT6X06_OFFSET_LR_REG, &value, 1);
 8003f52:	2301      	movs	r3, #1
{
 8003f54:	f88d 1007 	strb.w	r1, [sp, #7]
  return ft6x06_write_reg(ctx, FT6X06_OFFSET_LR_REG, &value, 1);
 8003f58:	f10d 0207 	add.w	r2, sp, #7
 8003f5c:	2192      	movs	r1, #146	; 0x92
 8003f5e:	f7ff ffd2 	bl	8003f06 <ft6x06_write_reg>
}
 8003f62:	b003      	add	sp, #12
 8003f64:	f85d fb04 	ldr.w	pc, [sp], #4

08003f68 <ft6x06_offset_up_down>:
* Input          : uint8_t
* Output         : None
* Return         : Status [FT6X06_ERROR, FT6X06_OK]
*******************************************************************************/
int32_t  ft6x06_offset_up_down(ft6x06_ctx_t *ctx, uint8_t value)
{
 8003f68:	b507      	push	{r0, r1, r2, lr}
  return ft6x06_write_reg(ctx, FT6X06_OFFSET_UD_REG, &value, 1);
 8003f6a:	2301      	movs	r3, #1
{
 8003f6c:	f88d 1007 	strb.w	r1, [sp, #7]
  return ft6x06_write_reg(ctx, FT6X06_OFFSET_UD_REG, &value, 1);
 8003f70:	f10d 0207 	add.w	r2, sp, #7
 8003f74:	2193      	movs	r1, #147	; 0x93
 8003f76:	f7ff ffc6 	bl	8003f06 <ft6x06_write_reg>
}
 8003f7a:	b003      	add	sp, #12
 8003f7c:	f85d fb04 	ldr.w	pc, [sp], #4

08003f80 <ft6x06_disatnce_left_right>:
* Input          : uint8_t
* Output         : None
* Return         : Status [FT6X06_ERROR, FT6X06_OK]
*******************************************************************************/
int32_t  ft6x06_disatnce_left_right(ft6x06_ctx_t *ctx, uint8_t value)
{
 8003f80:	b507      	push	{r0, r1, r2, lr}
  return ft6x06_write_reg(ctx, FT6X06_DISTANCE_LR_REG, &value, 1);
 8003f82:	2301      	movs	r3, #1
{
 8003f84:	f88d 1007 	strb.w	r1, [sp, #7]
  return ft6x06_write_reg(ctx, FT6X06_DISTANCE_LR_REG, &value, 1);
 8003f88:	f10d 0207 	add.w	r2, sp, #7
 8003f8c:	2194      	movs	r1, #148	; 0x94
 8003f8e:	f7ff ffba 	bl	8003f06 <ft6x06_write_reg>
}
 8003f92:	b003      	add	sp, #12
 8003f94:	f85d fb04 	ldr.w	pc, [sp], #4

08003f98 <ft6x06_distance_up_down>:
* Input          : uint8_t
* Output         : None
* Return         : Status [FT6X06_ERROR, FT6X06_OK]
*******************************************************************************/
int32_t  ft6x06_distance_up_down(ft6x06_ctx_t *ctx, uint8_t value)
{
 8003f98:	b507      	push	{r0, r1, r2, lr}
  return ft6x06_write_reg(ctx, FT6X06_DISTANCE_UD_REG, &value, 1);
 8003f9a:	2301      	movs	r3, #1
{
 8003f9c:	f88d 1007 	strb.w	r1, [sp, #7]
  return ft6x06_write_reg(ctx, FT6X06_DISTANCE_UD_REG, &value, 1);
 8003fa0:	f10d 0207 	add.w	r2, sp, #7
 8003fa4:	2195      	movs	r1, #149	; 0x95
 8003fa6:	f7ff ffae 	bl	8003f06 <ft6x06_write_reg>
}
 8003faa:	b003      	add	sp, #12
 8003fac:	f85d fb04 	ldr.w	pc, [sp], #4

08003fb0 <ft6x06_distance_zoom>:
* Input          : uint8_t
* Output         : None
* Return         : Status [FT6X06_ERROR, FT6X06_OK]
*******************************************************************************/
int32_t  ft6x06_distance_zoom(ft6x06_ctx_t *ctx, uint8_t value)
{
 8003fb0:	b507      	push	{r0, r1, r2, lr}
  return ft6x06_write_reg(ctx, FT6X06_DISTANCE_ZOOM_REG, &value, 1);
 8003fb2:	2301      	movs	r3, #1
{
 8003fb4:	f88d 1007 	strb.w	r1, [sp, #7]
  return ft6x06_write_reg(ctx, FT6X06_DISTANCE_ZOOM_REG, &value, 1);
 8003fb8:	f10d 0207 	add.w	r2, sp, #7
 8003fbc:	2196      	movs	r1, #150	; 0x96
 8003fbe:	f7ff ffa2 	bl	8003f06 <ft6x06_write_reg>
}
 8003fc2:	b003      	add	sp, #12
 8003fc4:	f85d fb04 	ldr.w	pc, [sp], #4

08003fc8 <ft6x06_g_mode>:
* Input          : uint8_t
* Output         : None
* Return         : Status [FT6X06_ERROR, FT6X06_OK]
*******************************************************************************/
int32_t  ft6x06_g_mode(ft6x06_ctx_t *ctx, uint8_t value)
{
 8003fc8:	b507      	push	{r0, r1, r2, lr}
  return ft6x06_write_reg(ctx, FT6X06_GMODE_REG, &value, 1);
 8003fca:	2301      	movs	r3, #1
{
 8003fcc:	f88d 1007 	strb.w	r1, [sp, #7]
  return ft6x06_write_reg(ctx, FT6X06_GMODE_REG, &value, 1);
 8003fd0:	f10d 0207 	add.w	r2, sp, #7
 8003fd4:	21a4      	movs	r1, #164	; 0xa4
 8003fd6:	f7ff ff96 	bl	8003f06 <ft6x06_write_reg>
}
 8003fda:	b003      	add	sp, #12
 8003fdc:	f85d fb04 	ldr.w	pc, [sp], #4

08003fe0 <ft6x06_chip_id>:
* Input          : Pointer to uint8_t
* Output         : Status of FT6X06_CHIP_ID register
* Return         : Status [FT6X06_ERROR, FT6X06_OK]
*******************************************************************************/
int32_t  ft6x06_chip_id(ft6x06_ctx_t *ctx, uint8_t *value)
{
 8003fe0:	460a      	mov	r2, r1
  int32_t ret;
  
  ret = ft6x06_read_reg(ctx, FT6X06_CHIP_ID_REG, (uint8_t *)value, 1);
 8003fe2:	2301      	movs	r3, #1
 8003fe4:	21a8      	movs	r1, #168	; 0xa8
 8003fe6:	f7ff bf87 	b.w	8003ef8 <ft6x06_read_reg>
	...

08003fec <IS42S32800J_ClockEnable>:
  * @param  Ctx Component object pointer
  * @param  Interface Could be FMC_SDRAM_CMD_TARGET_BANK1 or FMC_SDRAM_CMD_TARGET_BANK2
  * @retval error status
  */
int32_t IS42S32800J_ClockEnable(SDRAM_HandleTypeDef *Ctx, uint32_t Interface) 
{
 8003fec:	b508      	push	{r3, lr}
  Command.CommandMode            = IS42S32800J_CLK_ENABLE_CMD;
 8003fee:	2201      	movs	r2, #1
 8003ff0:	4b07      	ldr	r3, [pc, #28]	; (8004010 <IS42S32800J_ClockEnable+0x24>)
  Command.CommandTarget          = Interface;
 8003ff2:	e9c3 2100 	strd	r2, r1, [r3]
  Command.AutoRefreshNumber      = 1;
 8003ff6:	609a      	str	r2, [r3, #8]
  Command.ModeRegisterDefinition = 0;
 8003ff8:	2200      	movs	r2, #0

  /* Send the command */
  if(HAL_SDRAM_SendCommand(Ctx, &Command, IS42S32800J_TIMEOUT) != HAL_OK)
 8003ffa:	4619      	mov	r1, r3
  Command.ModeRegisterDefinition = 0;
 8003ffc:	60da      	str	r2, [r3, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, IS42S32800J_TIMEOUT) != HAL_OK)
 8003ffe:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8004002:	f005 f8f9 	bl	80091f8 <HAL_SDRAM_SendCommand>
 8004006:	3800      	subs	r0, #0
 8004008:	bf18      	it	ne
 800400a:	2001      	movne	r0, #1
  }
  else
  {
    return IS42S32800J_OK;
  }
}
 800400c:	4240      	negs	r0, r0
 800400e:	bd08      	pop	{r3, pc}
 8004010:	24004718 	.word	0x24004718

08004014 <IS42S32800J_Precharge>:
  * @param  Ctx Component object pointer
  * @param  Interface Could be FMC_SDRAM_CMD_TARGET_BANK1 or FMC_SDRAM_CMD_TARGET_BANK2
  * @retval error status
  */
int32_t IS42S32800J_Precharge(SDRAM_HandleTypeDef *Ctx, uint32_t Interface) 
{
 8004014:	b508      	push	{r3, lr}
  Command.CommandMode            = IS42S32800J_PALL_CMD;
 8004016:	2202      	movs	r2, #2
 8004018:	4b08      	ldr	r3, [pc, #32]	; (800403c <IS42S32800J_Precharge+0x28>)
  Command.CommandTarget          = Interface;
 800401a:	e9c3 2100 	strd	r2, r1, [r3]
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;
 800401e:	2101      	movs	r1, #1
 8004020:	2200      	movs	r2, #0
 8004022:	e9c3 1202 	strd	r1, r2, [r3, #8]

  /* Send the command */
  if(HAL_SDRAM_SendCommand(Ctx, &Command, IS42S32800J_TIMEOUT) != HAL_OK)
 8004026:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800402a:	4619      	mov	r1, r3
 800402c:	f005 f8e4 	bl	80091f8 <HAL_SDRAM_SendCommand>
 8004030:	3800      	subs	r0, #0
 8004032:	bf18      	it	ne
 8004034:	2001      	movne	r0, #1
  }
  else
  {
    return IS42S32800J_OK;
  }
}
 8004036:	4240      	negs	r0, r0
 8004038:	bd08      	pop	{r3, pc}
 800403a:	bf00      	nop
 800403c:	24004718 	.word	0x24004718

08004040 <IS42S32800J_ModeRegConfig>:
int32_t IS42S32800J_ModeRegConfig(SDRAM_HandleTypeDef *Ctx, IS42S32800J_Context_t *pRegMode) 
{
  uint32_t tmpmrd;

  /* Program the external memory mode register */
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
 8004040:	e9d1 3203 	ldrd	r3, r2, [r1, #12]
{
 8004044:	b510      	push	{r4, lr}
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
 8004046:	4313      	orrs	r3, r2
                     pRegMode->BurstType     |\
 8004048:	694a      	ldr	r2, [r1, #20]
                     pRegMode->CASLatency    |\
                     pRegMode->OperationMode |\
                     pRegMode->WriteBurstMode;
  
  Command.CommandMode            = IS42S32800J_LOAD_MODE_CMD;
 800404a:	4c0b      	ldr	r4, [pc, #44]	; (8004078 <IS42S32800J_ModeRegConfig+0x38>)
                     pRegMode->BurstType     |\
 800404c:	4313      	orrs	r3, r2
                     pRegMode->CASLatency    |\
 800404e:	698a      	ldr	r2, [r1, #24]
 8004050:	4313      	orrs	r3, r2
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
 8004052:	69ca      	ldr	r2, [r1, #28]
 8004054:	4313      	orrs	r3, r2
  Command.CommandMode            = IS42S32800J_LOAD_MODE_CMD;
 8004056:	2204      	movs	r2, #4
 8004058:	6022      	str	r2, [r4, #0]
  Command.CommandTarget          = pRegMode->TargetBank;
 800405a:	680a      	ldr	r2, [r1, #0]
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = tmpmrd;
  
  /* Send the command */
  if(HAL_SDRAM_SendCommand(Ctx, &Command, IS42S32800J_TIMEOUT) != HAL_OK)
 800405c:	4621      	mov	r1, r4
  Command.CommandTarget          = pRegMode->TargetBank;
 800405e:	6062      	str	r2, [r4, #4]
  Command.AutoRefreshNumber      = 1;
 8004060:	2201      	movs	r2, #1
  Command.ModeRegisterDefinition = tmpmrd;
 8004062:	e9c4 2302 	strd	r2, r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, IS42S32800J_TIMEOUT) != HAL_OK)
 8004066:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800406a:	f005 f8c5 	bl	80091f8 <HAL_SDRAM_SendCommand>
 800406e:	3800      	subs	r0, #0
 8004070:	bf18      	it	ne
 8004072:	2001      	movne	r0, #1
  }
  else
  {
    return IS42S32800J_OK;
  }
}
 8004074:	4240      	negs	r0, r0
 8004076:	bd10      	pop	{r4, pc}
 8004078:	24004718 	.word	0x24004718

0800407c <IS42S32800J_RefreshMode>:
  * @param  RefreshMode Could be IS42S32800J_CMD_AUTOREFRESH_MODE or
  *                      IS42S32800J_CMD_SELFREFRESH_MODE
  * @retval error status
  */
int32_t IS42S32800J_RefreshMode(SDRAM_HandleTypeDef *Ctx, uint32_t Interface, uint32_t RefreshMode) 
{
 800407c:	b508      	push	{r3, lr}
  Command.CommandMode            = RefreshMode;
 800407e:	4b08      	ldr	r3, [pc, #32]	; (80040a0 <IS42S32800J_RefreshMode+0x24>)
  Command.CommandTarget          = Interface;
 8004080:	e9c3 2100 	strd	r2, r1, [r3]
  Command.AutoRefreshNumber      = 8;
  Command.ModeRegisterDefinition = 0;
 8004084:	2108      	movs	r1, #8
 8004086:	2200      	movs	r2, #0
 8004088:	e9c3 1202 	strd	r1, r2, [r3, #8]

  /* Send the command */
  if(HAL_SDRAM_SendCommand(Ctx, &Command, IS42S32800J_TIMEOUT) != HAL_OK)
 800408c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8004090:	4619      	mov	r1, r3
 8004092:	f005 f8b1 	bl	80091f8 <HAL_SDRAM_SendCommand>
 8004096:	3800      	subs	r0, #0
 8004098:	bf18      	it	ne
 800409a:	2001      	movne	r0, #1
  }
  else
  {
    return IS42S32800J_OK;
  }
}
 800409c:	4240      	negs	r0, r0
 800409e:	bd08      	pop	{r3, pc}
 80040a0:	24004718 	.word	0x24004718

080040a4 <IS42S32800J_RefreshRate>:
  * @param  Ctx Component object pointer
  * @param  RefreshCount The refresh rate to be programmed
  * @retval error status
  */
int32_t IS42S32800J_RefreshRate(SDRAM_HandleTypeDef *Ctx, uint32_t RefreshCount) 
{
 80040a4:	b508      	push	{r3, lr}
  /* Set the device refresh rate */
  if(HAL_SDRAM_ProgramRefreshRate(Ctx, RefreshCount) != HAL_OK)
 80040a6:	f005 f8c6 	bl	8009236 <HAL_SDRAM_ProgramRefreshRate>
 80040aa:	3800      	subs	r0, #0
 80040ac:	bf18      	it	ne
 80040ae:	2001      	movne	r0, #1
  }
  else
  {
    return IS42S32800J_OK;
  }
}
 80040b0:	4240      	negs	r0, r0
 80040b2:	bd08      	pop	{r3, pc}

080040b4 <IS42S32800J_Init>:
{
 80040b4:	b570      	push	{r4, r5, r6, lr}
 80040b6:	460c      	mov	r4, r1
  if(IS42S32800J_ClockEnable(Ctx, pRegMode->TargetBank) == IS42S32800J_OK)
 80040b8:	6809      	ldr	r1, [r1, #0]
{
 80040ba:	4605      	mov	r5, r0
  if(IS42S32800J_ClockEnable(Ctx, pRegMode->TargetBank) == IS42S32800J_OK)
 80040bc:	f7ff ff96 	bl	8003fec <IS42S32800J_ClockEnable>
 80040c0:	b110      	cbz	r0, 80040c8 <IS42S32800J_Init+0x14>
  int32_t ret = IS42S32800J_ERROR;
 80040c2:	f04f 30ff 	mov.w	r0, #4294967295
}
 80040c6:	bd70      	pop	{r4, r5, r6, pc}
  * @retval IS42S32800J_OK
  */
static int32_t IS42S32800J_Delay(uint32_t Delay)
{  
  uint32_t tickstart;
  tickstart = HAL_GetTick();
 80040c8:	f001 fc98 	bl	80059fc <HAL_GetTick>
 80040cc:	4606      	mov	r6, r0
  while((HAL_GetTick() - tickstart) < Delay)
 80040ce:	f001 fc95 	bl	80059fc <HAL_GetTick>
 80040d2:	4286      	cmp	r6, r0
 80040d4:	d0fb      	beq.n	80040ce <IS42S32800J_Init+0x1a>
    if(IS42S32800J_Precharge(Ctx, pRegMode->TargetBank) == IS42S32800J_OK)
 80040d6:	6821      	ldr	r1, [r4, #0]
 80040d8:	4628      	mov	r0, r5
 80040da:	f7ff ff9b 	bl	8004014 <IS42S32800J_Precharge>
 80040de:	2800      	cmp	r0, #0
 80040e0:	d1ef      	bne.n	80040c2 <IS42S32800J_Init+0xe>
      if(IS42S32800J_RefreshMode(Ctx, pRegMode->TargetBank, pRegMode->RefreshMode) == IS42S32800J_OK)
 80040e2:	4628      	mov	r0, r5
 80040e4:	e9d4 1200 	ldrd	r1, r2, [r4]
 80040e8:	f7ff ffc8 	bl	800407c <IS42S32800J_RefreshMode>
 80040ec:	2800      	cmp	r0, #0
 80040ee:	d1e8      	bne.n	80040c2 <IS42S32800J_Init+0xe>
        if(IS42S32800J_ModeRegConfig(Ctx, pRegMode) == IS42S32800J_OK)
 80040f0:	4621      	mov	r1, r4
 80040f2:	4628      	mov	r0, r5
 80040f4:	f7ff ffa4 	bl	8004040 <IS42S32800J_ModeRegConfig>
 80040f8:	2800      	cmp	r0, #0
 80040fa:	d1e2      	bne.n	80040c2 <IS42S32800J_Init+0xe>
          if(IS42S32800J_RefreshRate(Ctx, pRegMode->RefreshRate) == IS42S32800J_OK)
 80040fc:	68a1      	ldr	r1, [r4, #8]
 80040fe:	4628      	mov	r0, r5
 8004100:	f7ff ffd0 	bl	80040a4 <IS42S32800J_RefreshRate>
 8004104:	3800      	subs	r0, #0
 8004106:	bf18      	it	ne
 8004108:	2001      	movne	r0, #1
 800410a:	4240      	negs	r0, r0
  return ret;
 800410c:	e7db      	b.n	80040c6 <IS42S32800J_Init+0x12>

0800410e <MT25TL01G_GetFlashInfo>:
  * @retval QSPI memory status
  */
int32_t MT25TL01G_GetFlashInfo(MT25TL01G_Info_t *pInfo)
{
  pInfo->FlashSize          = MT25TL01G_FLASH_SIZE;
  pInfo->EraseSectorSize    = (2 * MT25TL01G_SUBSECTOR_SIZE);
 800410e:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8004112:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  pInfo->ProgPageSize       = MT25TL01G_PAGE_SIZE;
  pInfo->EraseSectorsNumber = (MT25TL01G_FLASH_SIZE/pInfo->EraseSectorSize);
 8004116:	f44f 7180 	mov.w	r1, #256	; 0x100
  pInfo->EraseSectorSize    = (2 * MT25TL01G_SUBSECTOR_SIZE);
 800411a:	e9c0 2300 	strd	r2, r3, [r0]
  pInfo->EraseSectorsNumber = (MT25TL01G_FLASH_SIZE/pInfo->EraseSectorSize);
 800411e:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8004122:	e9c0 3102 	strd	r3, r1, [r0, #8]
  pInfo->ProgPagesNumber    = (MT25TL01G_FLASH_SIZE/pInfo->ProgPageSize);
 8004126:	f44f 2300 	mov.w	r3, #524288	; 0x80000
 800412a:	6103      	str	r3, [r0, #16]
  return MT25TL01G_OK;
}
 800412c:	2000      	movs	r0, #0
 800412e:	4770      	bx	lr

08004130 <MT25TL01G_AutoPollingMemReady>:
  * @param  Ctx Component object pointer
  * @param  Mode Interface mode
  * @retval QSPI memory status
  */
int32_t MT25TL01G_AutoPollingMemReady(QSPI_HandleTypeDef *Ctx, MT25TL01G_Interface_t Mode)
{
 8004130:	b500      	push	{lr}

  QSPI_CommandTypeDef     s_command;
  QSPI_AutoPollingTypeDef s_config;

  /* Configure automatic polling mode to wait for memory ready */
  s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
 8004132:	f44f 7340 	mov.w	r3, #768	; 0x300
{
 8004136:	b095      	sub	sp, #84	; 0x54
  s_command.Instruction       = MT25TL01G_READ_STATUS_REG_CMD;
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
  s_command.DataMode          = QSPI_DATA_4_LINES;
 8004138:	f04f 7240 	mov.w	r2, #50331648	; 0x3000000
  s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
 800413c:	930c      	str	r3, [sp, #48]	; 0x30
  s_command.Instruction       = MT25TL01G_READ_STATUS_REG_CMD;
 800413e:	2305      	movs	r3, #5
  s_command.DataMode          = QSPI_DATA_4_LINES;
 8004140:	920f      	str	r2, [sp, #60]	; 0x3c
  s_command.DummyCycles       = 2;
 8004142:	2202      	movs	r2, #2
  s_command.Instruction       = MT25TL01G_READ_STATUS_REG_CMD;
 8004144:	9306      	str	r3, [sp, #24]
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8004146:	2300      	movs	r3, #0
  s_command.DummyCycles       = 2;
 8004148:	920b      	str	r2, [sp, #44]	; 0x2c
  s_config.Interval        = 0x10;
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
  s_config.Mask            = MT25TL01G_SR_WIP | (MT25TL01G_SR_WIP <<8);
  s_config.StatusBytesSize = 2;

  if (HAL_QSPI_AutoPolling(Ctx, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800414a:	a906      	add	r1, sp, #24
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 800414c:	9313      	str	r3, [sp, #76]	; 0x4c
  s_config.Match           = 0;
 800414e:	9300      	str	r3, [sp, #0]
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
 8004150:	9304      	str	r3, [sp, #16]
  s_config.StatusBytesSize = 2;
 8004152:	9203      	str	r2, [sp, #12]
  if (HAL_QSPI_AutoPolling(Ctx, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004154:	466a      	mov	r2, sp
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8004156:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 800415a:	e9cd 3311 	strd	r3, r3, [sp, #68]	; 0x44
  s_config.Interval        = 0x10;
 800415e:	2310      	movs	r3, #16
 8004160:	9302      	str	r3, [sp, #8]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 8004162:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8004166:	9305      	str	r3, [sp, #20]
  s_config.Mask            = MT25TL01G_SR_WIP | (MT25TL01G_SR_WIP <<8);
 8004168:	f240 1301 	movw	r3, #257	; 0x101
 800416c:	9301      	str	r3, [sp, #4]
  if (HAL_QSPI_AutoPolling(Ctx, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800416e:	f241 3388 	movw	r3, #5000	; 0x1388
 8004172:	f003 fc9e 	bl	8007ab2 <HAL_QSPI_AutoPolling>
  {
    return MT25TL01G_ERROR_AUTOPOLLING;
 8004176:	2800      	cmp	r0, #0
  }

  return MT25TL01G_OK;

}
 8004178:	bf14      	ite	ne
 800417a:	f06f 0004 	mvnne.w	r0, #4
 800417e:	2000      	moveq	r0, #0
 8004180:	b015      	add	sp, #84	; 0x54
 8004182:	f85d fb04 	ldr.w	pc, [sp], #4

08004186 <MT25TL01G_WriteEnable>:
{
  QSPI_CommandTypeDef     s_command;
  QSPI_AutoPollingTypeDef s_config;

  /* Enable write operations */
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 8004186:	2903      	cmp	r1, #3
  s_command.DummyCycles       = 0;
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004188:	f241 3288 	movw	r2, #5000	; 0x1388
{
 800418c:	b530      	push	{r4, r5, lr}
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 800418e:	bf08      	it	eq
 8004190:	f44f 7340 	moveq.w	r3, #768	; 0x300
{
 8004194:	b095      	sub	sp, #84	; 0x54
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 8004196:	bf18      	it	ne
 8004198:	f44f 7380 	movne.w	r3, #256	; 0x100
{
 800419c:	460c      	mov	r4, r1
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800419e:	a906      	add	r1, sp, #24
{
 80041a0:	4605      	mov	r5, r0
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 80041a2:	930c      	str	r3, [sp, #48]	; 0x30
  s_command.Instruction       = MT25TL01G_WRITE_ENABLE_CMD;
 80041a4:	2306      	movs	r3, #6
 80041a6:	9306      	str	r3, [sp, #24]
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 80041a8:	2300      	movs	r3, #0
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 80041aa:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_command.DataMode          = QSPI_DATA_NONE;
 80041ae:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DummyCycles       = 0;
 80041b0:	930b      	str	r3, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 80041b2:	9313      	str	r3, [sp, #76]	; 0x4c
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 80041b4:	e9cd 3311 	strd	r3, r3, [sp, #68]	; 0x44
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80041b8:	f003 fb80 	bl	80078bc <HAL_QSPI_Command>
 80041bc:	bb20      	cbnz	r0, 8004208 <MT25TL01G_WriteEnable+0x82>
  {
    return MT25TL01G_ERROR_COMMAND;
  }

  /* Configure automatic polling mode to wait for write enabling */
  s_config.Match           = MT25TL01G_SR_WREN | (MT25TL01G_SR_WREN << 8);
 80041be:	f240 2302 	movw	r3, #514	; 0x202
  s_config.Mask            = MT25TL01G_SR_WREN | (MT25TL01G_SR_WREN << 8);
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
  s_config.StatusBytesSize = 2;
  s_config.Interval        = 0x10;
 80041c2:	2202      	movs	r2, #2
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;

  s_command.Instruction    = MT25TL01G_READ_STATUS_REG_CMD;
  s_command.DataMode       = (Mode == MT25TL01G_QPI_MODE) ? QSPI_DATA_4_LINES : QSPI_DATA_1_LINE;
 80041c4:	2c03      	cmp	r4, #3
  s_command.Instruction    = MT25TL01G_READ_STATUS_REG_CMD;
 80041c6:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
 80041ca:	9004      	str	r0, [sp, #16]


  if (HAL_QSPI_AutoPolling(Ctx, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80041cc:	4628      	mov	r0, r5
  s_config.Mask            = MT25TL01G_SR_WREN | (MT25TL01G_SR_WREN << 8);
 80041ce:	e9cd 3300 	strd	r3, r3, [sp]
  s_config.Interval        = 0x10;
 80041d2:	f04f 0310 	mov.w	r3, #16
 80041d6:	e9cd 3202 	strd	r3, r2, [sp, #8]
  s_command.Instruction    = MT25TL01G_READ_STATUS_REG_CMD;
 80041da:	f04f 0305 	mov.w	r3, #5
  if (HAL_QSPI_AutoPolling(Ctx, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80041de:	466a      	mov	r2, sp
  s_command.Instruction    = MT25TL01G_READ_STATUS_REG_CMD;
 80041e0:	e9cd 1305 	strd	r1, r3, [sp, #20]
  s_command.DataMode       = (Mode == MT25TL01G_QPI_MODE) ? QSPI_DATA_4_LINES : QSPI_DATA_1_LINE;
 80041e4:	bf0c      	ite	eq
 80041e6:	f04f 7340 	moveq.w	r3, #50331648	; 0x3000000
 80041ea:	f04f 7380 	movne.w	r3, #16777216	; 0x1000000
  if (HAL_QSPI_AutoPolling(Ctx, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80041ee:	a906      	add	r1, sp, #24
  s_command.DataMode       = (Mode == MT25TL01G_QPI_MODE) ? QSPI_DATA_4_LINES : QSPI_DATA_1_LINE;
 80041f0:	930f      	str	r3, [sp, #60]	; 0x3c
  if (HAL_QSPI_AutoPolling(Ctx, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80041f2:	f241 3388 	movw	r3, #5000	; 0x1388
 80041f6:	f003 fc5c 	bl	8007ab2 <HAL_QSPI_AutoPolling>
  {
    return MT25TL01G_ERROR_AUTOPOLLING;
 80041fa:	2800      	cmp	r0, #0
 80041fc:	bf0c      	ite	eq
 80041fe:	2000      	moveq	r0, #0
 8004200:	f06f 0004 	mvnne.w	r0, #4
  }

  return MT25TL01G_OK;
}
 8004204:	b015      	add	sp, #84	; 0x54
 8004206:	bd30      	pop	{r4, r5, pc}
    return MT25TL01G_ERROR_COMMAND;
 8004208:	f06f 0001 	mvn.w	r0, #1
 800420c:	e7fa      	b.n	8004204 <MT25TL01G_WriteEnable+0x7e>

0800420e <MT25TL01G_Enter4BytesAddressMode>:
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 800420e:	2903      	cmp	r1, #3
{
 8004210:	b530      	push	{r4, r5, lr}
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 8004212:	bf08      	it	eq
 8004214:	f44f 7340 	moveq.w	r3, #768	; 0x300
{
 8004218:	b08f      	sub	sp, #60	; 0x3c
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 800421a:	bf18      	it	ne
 800421c:	f44f 7380 	movne.w	r3, #256	; 0x100
{
 8004220:	4604      	mov	r4, r0
 8004222:	460d      	mov	r5, r1
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 8004224:	9306      	str	r3, [sp, #24]
  s_command.Instruction       = MT25TL01G_ENTER_4_BYTE_ADDR_MODE_CMD;
 8004226:	23b7      	movs	r3, #183	; 0xb7
 8004228:	9300      	str	r3, [sp, #0]
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 800422a:	2300      	movs	r3, #0
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 800422c:	e9cd 3307 	strd	r3, r3, [sp, #28]
  s_command.DataMode          = QSPI_DATA_NONE;
 8004230:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.DummyCycles       = 0;
 8004232:	9305      	str	r3, [sp, #20]
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8004234:	930d      	str	r3, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8004236:	e9cd 330b 	strd	r3, r3, [sp, #44]	; 0x2c
  if( MT25TL01G_WriteEnable(Ctx,Mode)!=MT25TL01G_OK)
 800423a:	f7ff ffa4 	bl	8004186 <MT25TL01G_WriteEnable>
 800423e:	b958      	cbnz	r0, 8004258 <MT25TL01G_Enter4BytesAddressMode+0x4a>
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004240:	f241 3288 	movw	r2, #5000	; 0x1388
 8004244:	4669      	mov	r1, sp
 8004246:	4620      	mov	r0, r4
 8004248:	f003 fb38 	bl	80078bc <HAL_QSPI_Command>
 800424c:	b920      	cbnz	r0, 8004258 <MT25TL01G_Enter4BytesAddressMode+0x4a>
  else if(MT25TL01G_AutoPollingMemReady(Ctx,Mode)!=MT25TL01G_OK)
 800424e:	4629      	mov	r1, r5
 8004250:	4620      	mov	r0, r4
 8004252:	f7ff ff6d 	bl	8004130 <MT25TL01G_AutoPollingMemReady>
 8004256:	b108      	cbz	r0, 800425c <MT25TL01G_Enter4BytesAddressMode+0x4e>
    return MT25TL01G_ERROR_COMMAND;
 8004258:	f06f 0001 	mvn.w	r0, #1
}
 800425c:	b00f      	add	sp, #60	; 0x3c
 800425e:	bd30      	pop	{r4, r5, pc}

08004260 <MT25TL01G_EnterQPIMode>:
  * @param  Ctx Component object pointer
  * @param  Mode Interface mode
  * @retval QSPI memory status
  */
int32_t MT25TL01G_EnterQPIMode(QSPI_HandleTypeDef *Ctx)
{
 8004260:	b500      	push	{lr}
  QSPI_CommandTypeDef s_command;

  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8004262:	f44f 7380 	mov.w	r3, #256	; 0x100
{
 8004266:	b08f      	sub	sp, #60	; 0x3c
  s_command.DummyCycles       = 0;
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004268:	f241 3288 	movw	r2, #5000	; 0x1388
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 800426c:	9306      	str	r3, [sp, #24]
  s_command.Instruction       = MT25TL01G_ENTER_QUAD_CMD;
 800426e:	2335      	movs	r3, #53	; 0x35
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004270:	4669      	mov	r1, sp
  s_command.Instruction       = MT25TL01G_ENTER_QUAD_CMD;
 8004272:	9300      	str	r3, [sp, #0]
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8004274:	2300      	movs	r3, #0
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8004276:	e9cd 3307 	strd	r3, r3, [sp, #28]
  s_command.DataMode          = QSPI_DATA_NONE;
 800427a:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.DummyCycles       = 0;
 800427c:	9305      	str	r3, [sp, #20]
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 800427e:	930d      	str	r3, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8004280:	e9cd 330b 	strd	r3, r3, [sp, #44]	; 0x2c
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004284:	f003 fb1a 	bl	80078bc <HAL_QSPI_Command>
  {
    return MT25TL01G_ERROR_COMMAND;
 8004288:	2800      	cmp	r0, #0
  }

  return MT25TL01G_OK;
}
 800428a:	bf14      	ite	ne
 800428c:	f06f 0001 	mvnne.w	r0, #1
 8004290:	2000      	moveq	r0, #0
 8004292:	b00f      	add	sp, #60	; 0x3c
 8004294:	f85d fb04 	ldr.w	pc, [sp], #4

08004298 <MT25TL01G_ExitQPIMode>:
  * @param  Ctx Component object pointer
  * @param  Mode Interface mode
  * @retval QSPI memory status
  */
int32_t MT25TL01G_ExitQPIMode(QSPI_HandleTypeDef *Ctx)
{
 8004298:	b500      	push	{lr}
  QSPI_CommandTypeDef s_command;

  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 800429a:	f44f 7380 	mov.w	r3, #256	; 0x100
{
 800429e:	b08f      	sub	sp, #60	; 0x3c
  s_command.DummyCycles       = 0;
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80042a0:	f241 3288 	movw	r2, #5000	; 0x1388
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80042a4:	9306      	str	r3, [sp, #24]
  s_command.Instruction       = MT25TL01G_EXIT_QUAD_CMD;
 80042a6:	23f5      	movs	r3, #245	; 0xf5
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80042a8:	4669      	mov	r1, sp
  s_command.Instruction       = MT25TL01G_EXIT_QUAD_CMD;
 80042aa:	9300      	str	r3, [sp, #0]
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 80042ac:	2300      	movs	r3, #0
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 80042ae:	e9cd 3307 	strd	r3, r3, [sp, #28]
  s_command.DataMode          = QSPI_DATA_NONE;
 80042b2:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.DummyCycles       = 0;
 80042b4:	9305      	str	r3, [sp, #20]
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 80042b6:	930d      	str	r3, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 80042b8:	e9cd 330b 	strd	r3, r3, [sp, #44]	; 0x2c
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80042bc:	f003 fafe 	bl	80078bc <HAL_QSPI_Command>
  {
    return MT25TL01G_ERROR_COMMAND;
 80042c0:	2800      	cmp	r0, #0
  }

  return MT25TL01G_OK;
}
 80042c2:	bf14      	ite	ne
 80042c4:	f06f 0001 	mvnne.w	r0, #1
 80042c8:	2000      	moveq	r0, #0
 80042ca:	b00f      	add	sp, #60	; 0x3c
 80042cc:	f85d fb04 	ldr.w	pc, [sp], #4

080042d0 <MT25TL01G_EnableMemoryMappedModeDTR>:
  * @param  Ctx Component object pointer
  * @param  Mode Interface mode
  * @retval QSPI memory status
  */
int32_t MT25TL01G_EnableMemoryMappedModeDTR(QSPI_HandleTypeDef *Ctx, MT25TL01G_Interface_t Mode)
{
 80042d0:	b500      	push	{lr}
 80042d2:	b091      	sub	sp, #68	; 0x44
  QSPI_CommandTypeDef      s_command;
  QSPI_MemoryMappedTypeDef s_mem_mapped_cfg;
  switch(Mode)
 80042d4:	2903      	cmp	r1, #3
 80042d6:	d80e      	bhi.n	80042f6 <MT25TL01G_EnableMemoryMappedModeDTR+0x26>
 80042d8:	e8df f001 	tbb	[pc, r1]
 80042dc:	3f342902 	.word	0x3f342902
  {
  case MT25TL01G_SPI_MODE:                /* 1-1-1 commands, Power on H/W default setting */
    s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80042e0:	f44f 7380 	mov.w	r3, #256	; 0x100
 80042e4:	9308      	str	r3, [sp, #32]
    s_command.Instruction       = MT25TL01G_FAST_READ_4_BYTE_DTR_CMD;
 80042e6:	230e      	movs	r3, #14
 80042e8:	9302      	str	r3, [sp, #8]
    s_command.AddressMode       = QSPI_ADDRESS_1_LINE;
 80042ea:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80042ee:	9309      	str	r3, [sp, #36]	; 0x24
    s_command.DataMode          = QSPI_DATA_1_LINE;
 80042f0:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
    break;
  case MT25TL01G_QPI_MODE:                 /* 4-4-4 commands */
    s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
    s_command.Instruction       = MT25TL01G_QUAD_INOUT_FAST_READ_DTR_CMD;
    s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
    s_command.DataMode          = QSPI_DATA_4_LINES;
 80042f4:	930b      	str	r3, [sp, #44]	; 0x2c
    break;
  }
  /* Configure the command for the read instruction */
  s_command.AddressSize       = QSPI_ADDRESS_32_BITS;
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
  s_command.DummyCycles       = MT25TL01G_DUMMY_CYCLES_READ_QUAD_DTR;
 80042f6:	2208      	movs	r2, #8
  s_command.AddressSize       = QSPI_ADDRESS_32_BITS;
 80042f8:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  s_command.DdrMode           = QSPI_DDR_MODE_ENABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_HALF_CLK_DELAY;
 80042fc:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000

  /* Configure the memory mapped mode */
  s_mem_mapped_cfg.TimeOutActivation = QSPI_TIMEOUT_COUNTER_DISABLE;
  s_mem_mapped_cfg.TimeOutPeriod     = 0;

  if (HAL_QSPI_MemoryMapped(Ctx, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 8004300:	a902      	add	r1, sp, #8
  s_command.DummyCycles       = MT25TL01G_DUMMY_CYCLES_READ_QUAD_DTR;
 8004302:	9207      	str	r2, [sp, #28]
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_HALF_CLK_DELAY;
 8004304:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
  s_command.AddressSize       = QSPI_ADDRESS_32_BITS;
 8004308:	9305      	str	r3, [sp, #20]
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 800430a:	2300      	movs	r3, #0
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_HALF_CLK_DELAY;
 800430c:	e9cd c20d 	strd	ip, r2, [sp, #52]	; 0x34
  if (HAL_QSPI_MemoryMapped(Ctx, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 8004310:	466a      	mov	r2, sp
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8004312:	930a      	str	r3, [sp, #40]	; 0x28
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8004314:	930f      	str	r3, [sp, #60]	; 0x3c
  s_mem_mapped_cfg.TimeOutPeriod     = 0;
 8004316:	e9cd 3300 	strd	r3, r3, [sp]
  if (HAL_QSPI_MemoryMapped(Ctx, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 800431a:	f003 fc1a 	bl	8007b52 <HAL_QSPI_MemoryMapped>
  {
    return MT25TL01G_ERROR_MEMORYMAPPED;
 800431e:	2800      	cmp	r0, #0
  }

  return MT25TL01G_OK;
}
 8004320:	bf14      	ite	ne
 8004322:	f06f 0005 	mvnne.w	r0, #5
 8004326:	2000      	moveq	r0, #0
 8004328:	b011      	add	sp, #68	; 0x44
 800432a:	f85d fb04 	ldr.w	pc, [sp], #4
    s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 800432e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004332:	9308      	str	r3, [sp, #32]
    s_command.Instruction       = MT25TL01G_DUAL_OUT_FAST_READ_DTR_CMD;
 8004334:	233d      	movs	r3, #61	; 0x3d
 8004336:	9302      	str	r3, [sp, #8]
    s_command.AddressMode       = QSPI_ADDRESS_1_LINE;
 8004338:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800433c:	9309      	str	r3, [sp, #36]	; 0x24
    s_command.DataMode          = QSPI_DATA_2_LINES;
 800433e:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8004342:	e7d7      	b.n	80042f4 <MT25TL01G_EnableMemoryMappedModeDTR+0x24>
    s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8004344:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004348:	9308      	str	r3, [sp, #32]
    s_command.Instruction       = MT25TL01G_QUAD_INOUT_FAST_READ_4_BYTE_DTR_CMD;
 800434a:	23ee      	movs	r3, #238	; 0xee
    s_command.Instruction       = MT25TL01G_QUAD_INOUT_FAST_READ_DTR_CMD;
 800434c:	9302      	str	r3, [sp, #8]
    s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
 800434e:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 8004352:	9309      	str	r3, [sp, #36]	; 0x24
    s_command.DataMode          = QSPI_DATA_4_LINES;
 8004354:	f04f 7340 	mov.w	r3, #50331648	; 0x3000000
 8004358:	e7cc      	b.n	80042f4 <MT25TL01G_EnableMemoryMappedModeDTR+0x24>
    s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
 800435a:	f44f 7340 	mov.w	r3, #768	; 0x300
 800435e:	9308      	str	r3, [sp, #32]
    s_command.Instruction       = MT25TL01G_QUAD_INOUT_FAST_READ_DTR_CMD;
 8004360:	23ed      	movs	r3, #237	; 0xed
 8004362:	e7f3      	b.n	800434c <MT25TL01G_EnableMemoryMappedModeDTR+0x7c>

08004364 <MT25TL01G_EnableMemoryMappedModeSTR>:
  * @param  Mode Interface mode
  * @retval QSPI memory status
  */

int32_t MT25TL01G_EnableMemoryMappedModeSTR(QSPI_HandleTypeDef *Ctx, MT25TL01G_Interface_t Mode)
{
 8004364:	b500      	push	{lr}
 8004366:	b091      	sub	sp, #68	; 0x44
  QSPI_CommandTypeDef      s_command;
  QSPI_MemoryMappedTypeDef s_mem_mapped_cfg;
  switch(Mode)
 8004368:	2903      	cmp	r1, #3
 800436a:	d80e      	bhi.n	800438a <MT25TL01G_EnableMemoryMappedModeSTR+0x26>
 800436c:	e8df f001 	tbb	[pc, r1]
 8004370:	3b302502 	.word	0x3b302502
  {
  case MT25TL01G_SPI_MODE:           /* 1-1-1 read commands */
    s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8004374:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004378:	9308      	str	r3, [sp, #32]
    s_command.Instruction       = MT25TL01G_FAST_READ_4_BYTE_ADDR_CMD;
 800437a:	230c      	movs	r3, #12
 800437c:	9302      	str	r3, [sp, #8]
    s_command.AddressMode       = QSPI_ADDRESS_1_LINE;
 800437e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8004382:	9309      	str	r3, [sp, #36]	; 0x24
    s_command.DataMode          = QSPI_DATA_1_LINE;
 8004384:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000

  case MT25TL01G_QPI_MODE:                 /* 4-4-4 commands */
    s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
    s_command.Instruction       = MT25TL01G_QUAD_INOUT_FAST_READ_CMD;
    s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
    s_command.DataMode          = QSPI_DATA_4_LINES;
 8004388:	930b      	str	r3, [sp, #44]	; 0x2c

    break;

  }
  /* Configure the command for the read instruction */
  s_command.DummyCycles       = MT25TL01G_DUMMY_CYCLES_READ;
 800438a:	2308      	movs	r3, #8

  /* Configure the memory mapped mode */
  s_mem_mapped_cfg.TimeOutActivation = QSPI_TIMEOUT_COUNTER_DISABLE;
  s_mem_mapped_cfg.TimeOutPeriod     = 0;

  if (HAL_QSPI_MemoryMapped(Ctx, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 800438c:	466a      	mov	r2, sp
 800438e:	a902      	add	r1, sp, #8
  s_command.DummyCycles       = MT25TL01G_DUMMY_CYCLES_READ;
 8004390:	9307      	str	r3, [sp, #28]
  s_command.AddressSize       = QSPI_ADDRESS_32_BITS;
 8004392:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 8004396:	9305      	str	r3, [sp, #20]
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8004398:	2300      	movs	r3, #0
 800439a:	930a      	str	r3, [sp, #40]	; 0x28
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 800439c:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 800439e:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_mem_mapped_cfg.TimeOutPeriod     = 0;
 80043a2:	e9cd 3300 	strd	r3, r3, [sp]
  if (HAL_QSPI_MemoryMapped(Ctx, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 80043a6:	f003 fbd4 	bl	8007b52 <HAL_QSPI_MemoryMapped>
  {
    return MT25TL01G_ERROR_MEMORYMAPPED;
 80043aa:	2800      	cmp	r0, #0
  }

  return MT25TL01G_OK;
}
 80043ac:	bf14      	ite	ne
 80043ae:	f06f 0005 	mvnne.w	r0, #5
 80043b2:	2000      	moveq	r0, #0
 80043b4:	b011      	add	sp, #68	; 0x44
 80043b6:	f85d fb04 	ldr.w	pc, [sp], #4
    s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80043ba:	f44f 7380 	mov.w	r3, #256	; 0x100
 80043be:	9308      	str	r3, [sp, #32]
    s_command.Instruction       = MT25TL01G_DUAL_INOUT_FAST_READ_4_BYTE_ADDR_CMD;
 80043c0:	23bc      	movs	r3, #188	; 0xbc
 80043c2:	9302      	str	r3, [sp, #8]
    s_command.AddressMode       = QSPI_ADDRESS_2_LINES;
 80043c4:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80043c8:	9309      	str	r3, [sp, #36]	; 0x24
    s_command.DataMode          = QSPI_DATA_2_LINES;
 80043ca:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 80043ce:	e7db      	b.n	8004388 <MT25TL01G_EnableMemoryMappedModeSTR+0x24>
    s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80043d0:	f44f 7380 	mov.w	r3, #256	; 0x100
 80043d4:	9308      	str	r3, [sp, #32]
    s_command.Instruction       = MT25TL01G_QUAD_INOUT_FAST_READ_4_BYTE_ADDR_CMD;
 80043d6:	23ec      	movs	r3, #236	; 0xec
    s_command.Instruction       = MT25TL01G_QUAD_INOUT_FAST_READ_CMD;
 80043d8:	9302      	str	r3, [sp, #8]
    s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
 80043da:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 80043de:	9309      	str	r3, [sp, #36]	; 0x24
    s_command.DataMode          = QSPI_DATA_4_LINES;
 80043e0:	f04f 7340 	mov.w	r3, #50331648	; 0x3000000
 80043e4:	e7d0      	b.n	8004388 <MT25TL01G_EnableMemoryMappedModeSTR+0x24>
    s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
 80043e6:	f44f 7340 	mov.w	r3, #768	; 0x300
 80043ea:	9308      	str	r3, [sp, #32]
    s_command.Instruction       = MT25TL01G_QUAD_INOUT_FAST_READ_CMD;
 80043ec:	23eb      	movs	r3, #235	; 0xeb
 80043ee:	e7f3      	b.n	80043d8 <MT25TL01G_EnableMemoryMappedModeSTR+0x74>

080043f0 <MT25TL01G_ResetEnable>:
int32_t MT25TL01G_ResetEnable(QSPI_HandleTypeDef *Ctx, MT25TL01G_Interface_t Mode)
{
  QSPI_CommandTypeDef s_command;

  /* Initialize the reset enable command */
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 80043f0:	2903      	cmp	r1, #3
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  /* Send the command */
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80043f2:	f241 3288 	movw	r2, #5000	; 0x1388
{
 80043f6:	b500      	push	{lr}
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 80043f8:	bf08      	it	eq
 80043fa:	f44f 7340 	moveq.w	r3, #768	; 0x300
{
 80043fe:	b08f      	sub	sp, #60	; 0x3c
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 8004400:	bf18      	it	ne
 8004402:	f44f 7380 	movne.w	r3, #256	; 0x100
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004406:	4669      	mov	r1, sp
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 8004408:	9306      	str	r3, [sp, #24]
  s_command.Instruction       = MT25TL01G_RESET_ENABLE_CMD;
 800440a:	2366      	movs	r3, #102	; 0x66
 800440c:	9300      	str	r3, [sp, #0]
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 800440e:	2300      	movs	r3, #0
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8004410:	e9cd 3307 	strd	r3, r3, [sp, #28]
  s_command.DataMode          = QSPI_DATA_NONE;
 8004414:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.DummyCycles       = 0;
 8004416:	9305      	str	r3, [sp, #20]
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8004418:	930d      	str	r3, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 800441a:	e9cd 330b 	strd	r3, r3, [sp, #44]	; 0x2c
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800441e:	f003 fa4d 	bl	80078bc <HAL_QSPI_Command>
  {
    return MT25TL01G_ERROR_COMMAND;
 8004422:	2800      	cmp	r0, #0
  }

  return MT25TL01G_OK;
}
 8004424:	bf14      	ite	ne
 8004426:	f06f 0001 	mvnne.w	r0, #1
 800442a:	2000      	moveq	r0, #0
 800442c:	b00f      	add	sp, #60	; 0x3c
 800442e:	f85d fb04 	ldr.w	pc, [sp], #4

08004432 <MT25TL01G_ResetMemory>:
int32_t MT25TL01G_ResetMemory(QSPI_HandleTypeDef *Ctx, MT25TL01G_Interface_t Mode)
{
  QSPI_CommandTypeDef s_command;

  /* Initialize the reset enable command */
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 8004432:	2903      	cmp	r1, #3
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  /* Send the command */
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004434:	f241 3288 	movw	r2, #5000	; 0x1388
{
 8004438:	b500      	push	{lr}
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 800443a:	bf08      	it	eq
 800443c:	f44f 7340 	moveq.w	r3, #768	; 0x300
{
 8004440:	b08f      	sub	sp, #60	; 0x3c
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 8004442:	bf18      	it	ne
 8004444:	f44f 7380 	movne.w	r3, #256	; 0x100
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004448:	4669      	mov	r1, sp
  s_command.InstructionMode   = (Mode == MT25TL01G_QPI_MODE) ? QSPI_INSTRUCTION_4_LINES : QSPI_INSTRUCTION_1_LINE;
 800444a:	9306      	str	r3, [sp, #24]
  s_command.Instruction       = MT25TL01G_RESET_MEMORY_CMD ;
 800444c:	2399      	movs	r3, #153	; 0x99
 800444e:	9300      	str	r3, [sp, #0]
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8004450:	2300      	movs	r3, #0
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8004452:	e9cd 3307 	strd	r3, r3, [sp, #28]
  s_command.DataMode          = QSPI_DATA_NONE;
 8004456:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.DummyCycles       = 0;
 8004458:	9305      	str	r3, [sp, #20]
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 800445a:	930d      	str	r3, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 800445c:	e9cd 330b 	strd	r3, r3, [sp, #44]	; 0x2c
  if (HAL_QSPI_Command(Ctx, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004460:	f003 fa2c 	bl	80078bc <HAL_QSPI_Command>
  {
    return MT25TL01G_ERROR_COMMAND;
 8004464:	2800      	cmp	r0, #0
  }

  return MT25TL01G_OK;
}
 8004466:	bf14      	ite	ne
 8004468:	f06f 0001 	mvnne.w	r0, #1
 800446c:	2000      	moveq	r0, #0
 800446e:	b00f      	add	sp, #60	; 0x3c
 8004470:	f85d fb04 	ldr.w	pc, [sp], #4

08004474 <OTM8009A_ReadRegWrap>:
  * @param  pData  The target register value to be written
  * @param  Length  buffer size to be written
  * @retval error status
  */
static int32_t OTM8009A_ReadRegWrap(void *Handle, uint16_t Reg, uint8_t* pData, uint16_t Length)
{
 8004474:	b410      	push	{r4}
  OTM8009A_Object_t *pObj = (OTM8009A_Object_t *)Handle;

  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
 8004476:	6884      	ldr	r4, [r0, #8]
 8004478:	8800      	ldrh	r0, [r0, #0]
 800447a:	46a4      	mov	ip, r4
}
 800447c:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
 8004480:	4760      	bx	ip

08004482 <OTM8009A_WriteRegWrap>:
  * @param  pData  The target register value to be written
  * @param  Length  buffer size to be written
  * @retval error status
  */
static int32_t OTM8009A_WriteRegWrap(void *Handle, uint16_t Reg, uint8_t *pData, uint16_t Length)
{
 8004482:	b410      	push	{r4}
  OTM8009A_Object_t *pObj = (OTM8009A_Object_t *)Handle;

  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
 8004484:	6844      	ldr	r4, [r0, #4]
 8004486:	8800      	ldrh	r0, [r0, #0]
 8004488:	46a4      	mov	ip, r4
}
 800448a:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
 800448e:	4760      	bx	ip

08004490 <OTM8009A_IO_Delay.isra.0>:

/**
  * @brief  OTM8009A delay
  * @param  Delay  Delay in ms
  */
static int32_t OTM8009A_IO_Delay(OTM8009A_Object_t *pObj, uint32_t Delay)
 8004490:	b570      	push	{r4, r5, r6, lr}
{
  uint32_t tickstart;
  tickstart = pObj->IO.GetTick();
 8004492:	68c3      	ldr	r3, [r0, #12]
static int32_t OTM8009A_IO_Delay(OTM8009A_Object_t *pObj, uint32_t Delay)
 8004494:	4604      	mov	r4, r0
 8004496:	460d      	mov	r5, r1
  tickstart = pObj->IO.GetTick();
 8004498:	4798      	blx	r3
 800449a:	4606      	mov	r6, r0
  while((pObj->IO.GetTick() - tickstart) < Delay)
 800449c:	68e3      	ldr	r3, [r4, #12]
 800449e:	4798      	blx	r3
 80044a0:	1b83      	subs	r3, r0, r6
 80044a2:	42ab      	cmp	r3, r5
 80044a4:	d3fa      	bcc.n	800449c <OTM8009A_IO_Delay.isra.0+0xc>
  {
  }
  return OTM8009A_OK;
}
 80044a6:	bd70      	pop	{r4, r5, r6, pc}

080044a8 <OTM8009A_Init>:
{
 80044a8:	e92d 4f37 	stmdb	sp!, {r0, r1, r2, r4, r5, r8, r9, sl, fp, lr}
  ret = otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 80044ac:	2300      	movs	r3, #0
 80044ae:	f100 0810 	add.w	r8, r0, #16
{
 80044b2:	4682      	mov	sl, r0
 80044b4:	4689      	mov	r9, r1
 80044b6:	4693      	mov	fp, r2
  ret = otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 80044b8:	4619      	mov	r1, r3
 80044ba:	4add      	ldr	r2, [pc, #884]	; (8004830 <OTM8009A_Init+0x388>)
 80044bc:	4640      	mov	r0, r8
 80044be:	f000 fbad 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xFF, lcd_reg_data1, 3);
 80044c2:	2303      	movs	r3, #3
  ret = otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 80044c4:	4604      	mov	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xFF, lcd_reg_data1, 3);
 80044c6:	4adb      	ldr	r2, [pc, #876]	; (8004834 <OTM8009A_Init+0x38c>)
 80044c8:	21ff      	movs	r1, #255	; 0xff
 80044ca:	4640      	mov	r0, r8
 80044cc:	f000 fba6 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[2], 0);
 80044d0:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xFF, lcd_reg_data1, 3);
 80044d2:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[2], 0);
 80044d4:	4ad8      	ldr	r2, [pc, #864]	; (8004838 <OTM8009A_Init+0x390>)
 80044d6:	4619      	mov	r1, r3
 80044d8:	4640      	mov	r0, r8
 80044da:	f000 fb9f 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xFF, lcd_reg_data2, 2);
 80044de:	2302      	movs	r3, #2
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[2], 0);
 80044e0:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xFF, lcd_reg_data2, 2);
 80044e2:	4ad6      	ldr	r2, [pc, #856]	; (800483c <OTM8009A_Init+0x394>)
 80044e4:	21ff      	movs	r1, #255	; 0xff
 80044e6:	4640      	mov	r0, r8
 80044e8:	f000 fb98 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[2], 0);
 80044ec:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xFF, lcd_reg_data2, 2);
 80044ee:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[2], 0);
 80044f0:	4ad1      	ldr	r2, [pc, #836]	; (8004838 <OTM8009A_Init+0x390>)
 80044f2:	4619      	mov	r1, r3
 80044f4:	4640      	mov	r0, r8
 80044f6:	f000 fb91 	bl	8004c1c <otm8009a_write_reg>
 80044fa:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC4, &short_reg_data[3], 0);
 80044fc:	2300      	movs	r3, #0
 80044fe:	4ad0      	ldr	r2, [pc, #832]	; (8004840 <OTM8009A_Init+0x398>)
 8004500:	21c4      	movs	r1, #196	; 0xc4
 8004502:	4640      	mov	r0, r8
 8004504:	f000 fb8a 	bl	8004c1c <otm8009a_write_reg>
  (void)OTM8009A_IO_Delay(pObj, 10);
 8004508:	210a      	movs	r1, #10
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC4, &short_reg_data[3], 0);
 800450a:	4404      	add	r4, r0
  (void)OTM8009A_IO_Delay(pObj, 10);
 800450c:	4650      	mov	r0, sl
 800450e:	f7ff ffbf 	bl	8004490 <OTM8009A_IO_Delay.isra.0>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[4], 0);
 8004512:	2300      	movs	r3, #0
 8004514:	4acb      	ldr	r2, [pc, #812]	; (8004844 <OTM8009A_Init+0x39c>)
 8004516:	4640      	mov	r0, r8
 8004518:	4619      	mov	r1, r3
 800451a:	4dcb      	ldr	r5, [pc, #812]	; (8004848 <OTM8009A_Init+0x3a0>)
 800451c:	f000 fb7e 	bl	8004c1c <otm8009a_write_reg>
 8004520:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC4, &short_reg_data[5], 0);
 8004522:	2300      	movs	r3, #0
 8004524:	4ac9      	ldr	r2, [pc, #804]	; (800484c <OTM8009A_Init+0x3a4>)
 8004526:	21c4      	movs	r1, #196	; 0xc4
 8004528:	4640      	mov	r0, r8
 800452a:	f000 fb77 	bl	8004c1c <otm8009a_write_reg>
  (void)OTM8009A_IO_Delay(pObj, 10);
 800452e:	210a      	movs	r1, #10
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC4, &short_reg_data[5], 0);
 8004530:	4404      	add	r4, r0
  (void)OTM8009A_IO_Delay(pObj, 10);
 8004532:	4650      	mov	r0, sl
 8004534:	f7ff ffac 	bl	8004490 <OTM8009A_IO_Delay.isra.0>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[6], 0);
 8004538:	2300      	movs	r3, #0
 800453a:	4ac5      	ldr	r2, [pc, #788]	; (8004850 <OTM8009A_Init+0x3a8>)
 800453c:	4640      	mov	r0, r8
 800453e:	4619      	mov	r1, r3
 8004540:	f000 fb6c 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC5, &short_reg_data[7], 0);
 8004544:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[6], 0);
 8004546:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC5, &short_reg_data[7], 0);
 8004548:	4ac2      	ldr	r2, [pc, #776]	; (8004854 <OTM8009A_Init+0x3ac>)
 800454a:	21c5      	movs	r1, #197	; 0xc5
 800454c:	4640      	mov	r0, r8
 800454e:	f000 fb65 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[8], 0);
 8004552:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC5, &short_reg_data[7], 0);
 8004554:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[8], 0);
 8004556:	4ac0      	ldr	r2, [pc, #768]	; (8004858 <OTM8009A_Init+0x3b0>)
 8004558:	4619      	mov	r1, r3
 800455a:	4640      	mov	r0, r8
 800455c:	f000 fb5e 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC5, &short_reg_data[9], 0);
 8004560:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[8], 0);
 8004562:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC5, &short_reg_data[9], 0);
 8004564:	4abd      	ldr	r2, [pc, #756]	; (800485c <OTM8009A_Init+0x3b4>)
 8004566:	21c5      	movs	r1, #197	; 0xc5
 8004568:	4640      	mov	r0, r8
 800456a:	f000 fb57 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[10], 0);
 800456e:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC5, &short_reg_data[9], 0);
 8004570:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[10], 0);
 8004572:	4abb      	ldr	r2, [pc, #748]	; (8004860 <OTM8009A_Init+0x3b8>)
 8004574:	4619      	mov	r1, r3
 8004576:	4640      	mov	r0, r8
 8004578:	f000 fb50 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC0, &short_reg_data[11], 0);
 800457c:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[10], 0);
 800457e:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC0, &short_reg_data[11], 0);
 8004580:	4ab8      	ldr	r2, [pc, #736]	; (8004864 <OTM8009A_Init+0x3bc>)
 8004582:	21c0      	movs	r1, #192	; 0xc0
 8004584:	4640      	mov	r0, r8
 8004586:	f000 fb49 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 800458a:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC0, &short_reg_data[11], 0);
 800458c:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 800458e:	4aa8      	ldr	r2, [pc, #672]	; (8004830 <OTM8009A_Init+0x388>)
 8004590:	4619      	mov	r1, r3
 8004592:	4640      	mov	r0, r8
 8004594:	f000 fb42 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xD9, &short_reg_data[12], 0);
 8004598:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 800459a:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xD9, &short_reg_data[12], 0);
 800459c:	4ab2      	ldr	r2, [pc, #712]	; (8004868 <OTM8009A_Init+0x3c0>)
 800459e:	21d9      	movs	r1, #217	; 0xd9
 80045a0:	4640      	mov	r0, r8
 80045a2:	f000 fb3b 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[13], 0);
 80045a6:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xD9, &short_reg_data[12], 0);
 80045a8:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[13], 0);
 80045aa:	4ab0      	ldr	r2, [pc, #704]	; (800486c <OTM8009A_Init+0x3c4>)
 80045ac:	4619      	mov	r1, r3
 80045ae:	4640      	mov	r0, r8
 80045b0:	f000 fb34 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC1, &short_reg_data[14], 0);
 80045b4:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[13], 0);
 80045b6:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC1, &short_reg_data[14], 0);
 80045b8:	4aad      	ldr	r2, [pc, #692]	; (8004870 <OTM8009A_Init+0x3c8>)
 80045ba:	21c1      	movs	r1, #193	; 0xc1
 80045bc:	4640      	mov	r0, r8
 80045be:	f000 fb2d 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[15], 0);
 80045c2:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC1, &short_reg_data[14], 0);
 80045c4:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[15], 0);
 80045c6:	4aab      	ldr	r2, [pc, #684]	; (8004874 <OTM8009A_Init+0x3cc>)
 80045c8:	4619      	mov	r1, r3
 80045ca:	4640      	mov	r0, r8
 80045cc:	f000 fb26 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC1, &short_reg_data[16], 0);
 80045d0:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[15], 0);
 80045d2:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC1, &short_reg_data[16], 0);
 80045d4:	4aa8      	ldr	r2, [pc, #672]	; (8004878 <OTM8009A_Init+0x3d0>)
 80045d6:	21c1      	movs	r1, #193	; 0xc1
 80045d8:	4640      	mov	r0, r8
 80045da:	f000 fb1f 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[17], 0);
 80045de:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC1, &short_reg_data[16], 0);
 80045e0:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[17], 0);
 80045e2:	4aa6      	ldr	r2, [pc, #664]	; (800487c <OTM8009A_Init+0x3d4>)
 80045e4:	4619      	mov	r1, r3
 80045e6:	4640      	mov	r0, r8
 80045e8:	f000 fb18 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC5, &short_reg_data[18], 0);
 80045ec:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[17], 0);
 80045ee:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC5, &short_reg_data[18], 0);
 80045f0:	4aa3      	ldr	r2, [pc, #652]	; (8004880 <OTM8009A_Init+0x3d8>)
 80045f2:	21c5      	movs	r1, #197	; 0xc5
 80045f4:	4640      	mov	r0, r8
 80045f6:	f000 fb11 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[19], 0);
 80045fa:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC5, &short_reg_data[18], 0);
 80045fc:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[19], 0);
 80045fe:	4aa1      	ldr	r2, [pc, #644]	; (8004884 <OTM8009A_Init+0x3dc>)
 8004600:	4619      	mov	r1, r3
 8004602:	4640      	mov	r0, r8
 8004604:	f000 fb0a 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC5, &short_reg_data[9], 0);
 8004608:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[19], 0);
 800460a:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC5, &short_reg_data[9], 0);
 800460c:	4a93      	ldr	r2, [pc, #588]	; (800485c <OTM8009A_Init+0x3b4>)
 800460e:	21c5      	movs	r1, #197	; 0xc5
 8004610:	4640      	mov	r0, r8
 8004612:	f000 fb03 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 8004616:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC5, &short_reg_data[9], 0);
 8004618:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 800461a:	4a85      	ldr	r2, [pc, #532]	; (8004830 <OTM8009A_Init+0x388>)
 800461c:	4619      	mov	r1, r3
 800461e:	4640      	mov	r0, r8
 8004620:	f000 fafc 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xD8, lcd_reg_data5, 2);
 8004624:	2302      	movs	r3, #2
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 8004626:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xD8, lcd_reg_data5, 2);
 8004628:	4a97      	ldr	r2, [pc, #604]	; (8004888 <OTM8009A_Init+0x3e0>)
 800462a:	21d8      	movs	r1, #216	; 0xd8
 800462c:	4640      	mov	r0, r8
 800462e:	f000 faf5 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[20], 0);
 8004632:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xD8, lcd_reg_data5, 2);
 8004634:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[20], 0);
 8004636:	4a95      	ldr	r2, [pc, #596]	; (800488c <OTM8009A_Init+0x3e4>)
 8004638:	4619      	mov	r1, r3
 800463a:	4640      	mov	r0, r8
 800463c:	f000 faee 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC5, &short_reg_data[21], 0);
 8004640:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[20], 0);
 8004642:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC5, &short_reg_data[21], 0);
 8004644:	4a92      	ldr	r2, [pc, #584]	; (8004890 <OTM8009A_Init+0x3e8>)
 8004646:	21c5      	movs	r1, #197	; 0xc5
 8004648:	4640      	mov	r0, r8
 800464a:	f000 fae7 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[22], 0);
 800464e:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC5, &short_reg_data[21], 0);
 8004650:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[22], 0);
 8004652:	4a90      	ldr	r2, [pc, #576]	; (8004894 <OTM8009A_Init+0x3ec>)
 8004654:	4619      	mov	r1, r3
 8004656:	4640      	mov	r0, r8
 8004658:	f000 fae0 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC0, &short_reg_data[23], 0);
 800465c:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[22], 0);
 800465e:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC0, &short_reg_data[23], 0);
 8004660:	4a8d      	ldr	r2, [pc, #564]	; (8004898 <OTM8009A_Init+0x3f0>)
 8004662:	21c0      	movs	r1, #192	; 0xc0
 8004664:	4640      	mov	r0, r8
 8004666:	f000 fad9 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[24], 0);
 800466a:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC0, &short_reg_data[23], 0);
 800466c:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[24], 0);
 800466e:	4a8b      	ldr	r2, [pc, #556]	; (800489c <OTM8009A_Init+0x3f4>)
 8004670:	4619      	mov	r1, r3
 8004672:	4640      	mov	r0, r8
 8004674:	f000 fad2 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC5, &short_reg_data[25], 0);
 8004678:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[24], 0);
 800467a:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC5, &short_reg_data[25], 0);
 800467c:	4a88      	ldr	r2, [pc, #544]	; (80048a0 <OTM8009A_Init+0x3f8>)
 800467e:	21c5      	movs	r1, #197	; 0xc5
 8004680:	4640      	mov	r0, r8
 8004682:	f000 facb 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[13], 0);
 8004686:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC5, &short_reg_data[25], 0);
 8004688:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[13], 0);
 800468a:	4a78      	ldr	r2, [pc, #480]	; (800486c <OTM8009A_Init+0x3c4>)
 800468c:	4619      	mov	r1, r3
 800468e:	4640      	mov	r0, r8
 8004690:	f000 fac4 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC4, &short_reg_data[26], 0);
 8004694:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[13], 0);
 8004696:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC4, &short_reg_data[26], 0);
 8004698:	4a82      	ldr	r2, [pc, #520]	; (80048a4 <OTM8009A_Init+0x3fc>)
 800469a:	21c4      	movs	r1, #196	; 0xc4
 800469c:	4640      	mov	r0, r8
 800469e:	f000 fabd 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[15], 0);
 80046a2:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC4, &short_reg_data[26], 0);
 80046a4:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[15], 0);
 80046a6:	4a73      	ldr	r2, [pc, #460]	; (8004874 <OTM8009A_Init+0x3cc>)
 80046a8:	4619      	mov	r1, r3
 80046aa:	4640      	mov	r0, r8
 80046ac:	f000 fab6 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC1, &short_reg_data[27], 0);
 80046b0:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[15], 0);
 80046b2:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC1, &short_reg_data[27], 0);
 80046b4:	4a7c      	ldr	r2, [pc, #496]	; (80048a8 <OTM8009A_Init+0x400>)
 80046b6:	21c1      	movs	r1, #193	; 0xc1
 80046b8:	4640      	mov	r0, r8
 80046ba:	f000 faaf 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[28], 0);
 80046be:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC1, &short_reg_data[27], 0);
 80046c0:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[28], 0);
 80046c2:	4a7a      	ldr	r2, [pc, #488]	; (80048ac <OTM8009A_Init+0x404>)
 80046c4:	4619      	mov	r1, r3
 80046c6:	4640      	mov	r0, r8
 80046c8:	f000 faa8 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xB3, lcd_reg_data6, 2);
 80046cc:	2302      	movs	r3, #2
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[28], 0);
 80046ce:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xB3, lcd_reg_data6, 2);
 80046d0:	4a77      	ldr	r2, [pc, #476]	; (80048b0 <OTM8009A_Init+0x408>)
 80046d2:	21b3      	movs	r1, #179	; 0xb3
 80046d4:	4640      	mov	r0, r8
 80046d6:	f000 faa1 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[2], 0);
 80046da:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xB3, lcd_reg_data6, 2);
 80046dc:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[2], 0);
 80046de:	4a56      	ldr	r2, [pc, #344]	; (8004838 <OTM8009A_Init+0x390>)
 80046e0:	4619      	mov	r1, r3
 80046e2:	4640      	mov	r0, r8
 80046e4:	f000 fa9a 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCE, lcd_reg_data7, 6);
 80046e8:	2306      	movs	r3, #6
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[2], 0);
 80046ea:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCE, lcd_reg_data7, 6);
 80046ec:	4a71      	ldr	r2, [pc, #452]	; (80048b4 <OTM8009A_Init+0x40c>)
 80046ee:	21ce      	movs	r1, #206	; 0xce
 80046f0:	4640      	mov	r0, r8
 80046f2:	f000 fa93 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[29], 0);
 80046f6:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCE, lcd_reg_data7, 6);
 80046f8:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[29], 0);
 80046fa:	4a6f      	ldr	r2, [pc, #444]	; (80048b8 <OTM8009A_Init+0x410>)
 80046fc:	4619      	mov	r1, r3
 80046fe:	4640      	mov	r0, r8
 8004700:	f000 fa8c 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCE, lcd_reg_data8, 14);
 8004704:	230e      	movs	r3, #14
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[29], 0);
 8004706:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCE, lcd_reg_data8, 14);
 8004708:	4a6c      	ldr	r2, [pc, #432]	; (80048bc <OTM8009A_Init+0x414>)
 800470a:	21ce      	movs	r1, #206	; 0xce
 800470c:	4640      	mov	r0, r8
 800470e:	f000 fa85 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[30], 0);
 8004712:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCE, lcd_reg_data8, 14);
 8004714:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[30], 0);
 8004716:	4a6a      	ldr	r2, [pc, #424]	; (80048c0 <OTM8009A_Init+0x418>)
 8004718:	4619      	mov	r1, r3
 800471a:	4640      	mov	r0, r8
 800471c:	f000 fa7e 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCE, lcd_reg_data9, 14);
 8004720:	230e      	movs	r3, #14
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[30], 0);
 8004722:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCE, lcd_reg_data9, 14);
 8004724:	4a67      	ldr	r2, [pc, #412]	; (80048c4 <OTM8009A_Init+0x41c>)
 8004726:	21ce      	movs	r1, #206	; 0xce
 8004728:	4640      	mov	r0, r8
 800472a:	f000 fa77 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[31], 0);
 800472e:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCE, lcd_reg_data9, 14);
 8004730:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[31], 0);
 8004732:	4a65      	ldr	r2, [pc, #404]	; (80048c8 <OTM8009A_Init+0x420>)
 8004734:	4619      	mov	r1, r3
 8004736:	4640      	mov	r0, r8
 8004738:	f000 fa70 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCF, lcd_reg_data10, 10);
 800473c:	230a      	movs	r3, #10
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[31], 0);
 800473e:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCF, lcd_reg_data10, 10);
 8004740:	4a62      	ldr	r2, [pc, #392]	; (80048cc <OTM8009A_Init+0x424>)
 8004742:	21cf      	movs	r1, #207	; 0xcf
 8004744:	4640      	mov	r0, r8
 8004746:	f000 fa69 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[32], 0);
 800474a:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCF, lcd_reg_data10, 10);
 800474c:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[32], 0);
 800474e:	4a60      	ldr	r2, [pc, #384]	; (80048d0 <OTM8009A_Init+0x428>)
 8004750:	4619      	mov	r1, r3
 8004752:	4640      	mov	r0, r8
 8004754:	f000 fa62 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCF, &short_reg_data[45], 0);
 8004758:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[32], 0);
 800475a:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCF, &short_reg_data[45], 0);
 800475c:	4a5d      	ldr	r2, [pc, #372]	; (80048d4 <OTM8009A_Init+0x42c>)
 800475e:	21cf      	movs	r1, #207	; 0xcf
 8004760:	4640      	mov	r0, r8
 8004762:	f000 fa5b 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[2], 0);
 8004766:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCF, &short_reg_data[45], 0);
 8004768:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[2], 0);
 800476a:	4a33      	ldr	r2, [pc, #204]	; (8004838 <OTM8009A_Init+0x390>)
 800476c:	4619      	mov	r1, r3
 800476e:	4640      	mov	r0, r8
 8004770:	f000 fa54 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCB, lcd_reg_data11, 10);
 8004774:	230a      	movs	r3, #10
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[2], 0);
 8004776:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCB, lcd_reg_data11, 10);
 8004778:	4a57      	ldr	r2, [pc, #348]	; (80048d8 <OTM8009A_Init+0x430>)
 800477a:	21cb      	movs	r1, #203	; 0xcb
 800477c:	4640      	mov	r0, r8
 800477e:	f000 fa4d 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[33], 0);
 8004782:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCB, lcd_reg_data11, 10);
 8004784:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[33], 0);
 8004786:	4a55      	ldr	r2, [pc, #340]	; (80048dc <OTM8009A_Init+0x434>)
 8004788:	4619      	mov	r1, r3
 800478a:	4640      	mov	r0, r8
 800478c:	f000 fa46 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCB, lcd_reg_data12, 15);
 8004790:	230f      	movs	r3, #15
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[33], 0);
 8004792:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCB, lcd_reg_data12, 15);
 8004794:	4a52      	ldr	r2, [pc, #328]	; (80048e0 <OTM8009A_Init+0x438>)
 8004796:	21cb      	movs	r1, #203	; 0xcb
 8004798:	4640      	mov	r0, r8
 800479a:	f000 fa3f 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[29], 0);
 800479e:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCB, lcd_reg_data12, 15);
 80047a0:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[29], 0);
 80047a2:	4a45      	ldr	r2, [pc, #276]	; (80048b8 <OTM8009A_Init+0x410>)
 80047a4:	4619      	mov	r1, r3
 80047a6:	4640      	mov	r0, r8
 80047a8:	f000 fa38 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCB, lcd_reg_data13, 15);
 80047ac:	230f      	movs	r3, #15
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[29], 0);
 80047ae:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCB, lcd_reg_data13, 15);
 80047b0:	4a4c      	ldr	r2, [pc, #304]	; (80048e4 <OTM8009A_Init+0x43c>)
 80047b2:	21cb      	movs	r1, #203	; 0xcb
 80047b4:	4640      	mov	r0, r8
 80047b6:	f000 fa31 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[30], 0);
 80047ba:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCB, lcd_reg_data13, 15);
 80047bc:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[30], 0);
 80047be:	4a40      	ldr	r2, [pc, #256]	; (80048c0 <OTM8009A_Init+0x418>)
 80047c0:	4619      	mov	r1, r3
 80047c2:	4640      	mov	r0, r8
 80047c4:	f000 fa2a 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCB, lcd_reg_data14, 10);
 80047c8:	230a      	movs	r3, #10
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[30], 0);
 80047ca:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCB, lcd_reg_data14, 10);
 80047cc:	4a46      	ldr	r2, [pc, #280]	; (80048e8 <OTM8009A_Init+0x440>)
 80047ce:	21cb      	movs	r1, #203	; 0xcb
 80047d0:	4640      	mov	r0, r8
 80047d2:	f000 fa23 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[31], 0);
 80047d6:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCB, lcd_reg_data14, 10);
 80047d8:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[31], 0);
 80047da:	4a3b      	ldr	r2, [pc, #236]	; (80048c8 <OTM8009A_Init+0x420>)
 80047dc:	4619      	mov	r1, r3
 80047de:	4640      	mov	r0, r8
 80047e0:	f000 fa1c 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCB, lcd_reg_data15, 15);
 80047e4:	230f      	movs	r3, #15
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[31], 0);
 80047e6:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCB, lcd_reg_data15, 15);
 80047e8:	4a40      	ldr	r2, [pc, #256]	; (80048ec <OTM8009A_Init+0x444>)
 80047ea:	21cb      	movs	r1, #203	; 0xcb
 80047ec:	4640      	mov	r0, r8
 80047ee:	f000 fa15 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[32], 0);
 80047f2:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCB, lcd_reg_data15, 15);
 80047f4:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[32], 0);
 80047f6:	4a36      	ldr	r2, [pc, #216]	; (80048d0 <OTM8009A_Init+0x428>)
 80047f8:	4619      	mov	r1, r3
 80047fa:	4640      	mov	r0, r8
 80047fc:	f000 fa0e 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCB, lcd_reg_data16, 15);
 8004800:	230f      	movs	r3, #15
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[32], 0);
 8004802:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCB, lcd_reg_data16, 15);
 8004804:	4a3a      	ldr	r2, [pc, #232]	; (80048f0 <OTM8009A_Init+0x448>)
 8004806:	21cb      	movs	r1, #203	; 0xcb
 8004808:	4640      	mov	r0, r8
 800480a:	f000 fa07 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[34], 0);
 800480e:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCB, lcd_reg_data16, 15);
 8004810:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[34], 0);
 8004812:	4a38      	ldr	r2, [pc, #224]	; (80048f4 <OTM8009A_Init+0x44c>)
 8004814:	4619      	mov	r1, r3
 8004816:	4640      	mov	r0, r8
 8004818:	f000 fa00 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCB, lcd_reg_data17, 10);
 800481c:	230a      	movs	r3, #10
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[34], 0);
 800481e:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCB, lcd_reg_data17, 10);
 8004820:	4a35      	ldr	r2, [pc, #212]	; (80048f8 <OTM8009A_Init+0x450>)
 8004822:	21cb      	movs	r1, #203	; 0xcb
 8004824:	4640      	mov	r0, r8
 8004826:	f000 f9f9 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[35], 0);
 800482a:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCB, lcd_reg_data17, 10);
 800482c:	4404      	add	r4, r0
 800482e:	e065      	b.n	80048fc <OTM8009A_Init+0x454>
 8004830:	08022555 	.word	0x08022555
 8004834:	08022448 	.word	0x08022448
 8004838:	08022556 	.word	0x08022556
 800483c:	080224c3 	.word	0x080224c3
 8004840:	08022557 	.word	0x08022557
 8004844:	08022558 	.word	0x08022558
 8004848:	24004728 	.word	0x24004728
 800484c:	08022559 	.word	0x08022559
 8004850:	0802255a 	.word	0x0802255a
 8004854:	0802255b 	.word	0x0802255b
 8004858:	0802255c 	.word	0x0802255c
 800485c:	0802255d 	.word	0x0802255d
 8004860:	0802255e 	.word	0x0802255e
 8004864:	0802255f 	.word	0x0802255f
 8004868:	08022560 	.word	0x08022560
 800486c:	08022561 	.word	0x08022561
 8004870:	08022562 	.word	0x08022562
 8004874:	08022563 	.word	0x08022563
 8004878:	08022564 	.word	0x08022564
 800487c:	08022565 	.word	0x08022565
 8004880:	08022566 	.word	0x08022566
 8004884:	08022567 	.word	0x08022567
 8004888:	0802252e 	.word	0x0802252e
 800488c:	08022568 	.word	0x08022568
 8004890:	08022569 	.word	0x08022569
 8004894:	0802256a 	.word	0x0802256a
 8004898:	0802256b 	.word	0x0802256b
 800489c:	0802256c 	.word	0x0802256c
 80048a0:	0802256d 	.word	0x0802256d
 80048a4:	0802256e 	.word	0x0802256e
 80048a8:	0802256f 	.word	0x0802256f
 80048ac:	08022570 	.word	0x08022570
 80048b0:	08022530 	.word	0x08022530
 80048b4:	08022532 	.word	0x08022532
 80048b8:	08022571 	.word	0x08022571
 80048bc:	08022538 	.word	0x08022538
 80048c0:	08022572 	.word	0x08022572
 80048c4:	08022546 	.word	0x08022546
 80048c8:	08022573 	.word	0x08022573
 80048cc:	0802244b 	.word	0x0802244b
 80048d0:	08022574 	.word	0x08022574
 80048d4:	08022581 	.word	0x08022581
 80048d8:	08022455 	.word	0x08022455
 80048dc:	08022575 	.word	0x08022575
 80048e0:	0802245f 	.word	0x0802245f
 80048e4:	0802246e 	.word	0x0802246e
 80048e8:	0802247d 	.word	0x0802247d
 80048ec:	08022487 	.word	0x08022487
 80048f0:	08022496 	.word	0x08022496
 80048f4:	08022576 	.word	0x08022576
 80048f8:	080224a5 	.word	0x080224a5
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[35], 0);
 80048fc:	4a99      	ldr	r2, [pc, #612]	; (8004b64 <OTM8009A_Init+0x6bc>)
 80048fe:	4619      	mov	r1, r3
 8004900:	4640      	mov	r0, r8
 8004902:	f000 f98b 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCB, lcd_reg_data18, 10);
 8004906:	230a      	movs	r3, #10
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[35], 0);
 8004908:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCB, lcd_reg_data18, 10);
 800490a:	4a97      	ldr	r2, [pc, #604]	; (8004b68 <OTM8009A_Init+0x6c0>)
 800490c:	21cb      	movs	r1, #203	; 0xcb
 800490e:	4640      	mov	r0, r8
 8004910:	f000 f984 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[2], 0);
 8004914:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCB, lcd_reg_data18, 10);
 8004916:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[2], 0);
 8004918:	4a94      	ldr	r2, [pc, #592]	; (8004b6c <OTM8009A_Init+0x6c4>)
 800491a:	4619      	mov	r1, r3
 800491c:	4640      	mov	r0, r8
 800491e:	f000 f97d 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCC, lcd_reg_data19, 10);
 8004922:	230a      	movs	r3, #10
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[2], 0);
 8004924:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCC, lcd_reg_data19, 10);
 8004926:	4a92      	ldr	r2, [pc, #584]	; (8004b70 <OTM8009A_Init+0x6c8>)
 8004928:	21cc      	movs	r1, #204	; 0xcc
 800492a:	4640      	mov	r0, r8
 800492c:	f000 f976 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[33], 0);
 8004930:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCC, lcd_reg_data19, 10);
 8004932:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[33], 0);
 8004934:	4a8f      	ldr	r2, [pc, #572]	; (8004b74 <OTM8009A_Init+0x6cc>)
 8004936:	4619      	mov	r1, r3
 8004938:	4640      	mov	r0, r8
 800493a:	f000 f96f 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCC, lcd_reg_data20, 15);
 800493e:	230f      	movs	r3, #15
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[33], 0);
 8004940:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCC, lcd_reg_data20, 15);
 8004942:	4a8d      	ldr	r2, [pc, #564]	; (8004b78 <OTM8009A_Init+0x6d0>)
 8004944:	21cc      	movs	r1, #204	; 0xcc
 8004946:	4640      	mov	r0, r8
 8004948:	f000 f968 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[29], 0);
 800494c:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCC, lcd_reg_data20, 15);
 800494e:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[29], 0);
 8004950:	4a8a      	ldr	r2, [pc, #552]	; (8004b7c <OTM8009A_Init+0x6d4>)
 8004952:	4619      	mov	r1, r3
 8004954:	4640      	mov	r0, r8
 8004956:	f000 f961 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCC, lcd_reg_data21, 15);
 800495a:	230f      	movs	r3, #15
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[29], 0);
 800495c:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCC, lcd_reg_data21, 15);
 800495e:	4a88      	ldr	r2, [pc, #544]	; (8004b80 <OTM8009A_Init+0x6d8>)
 8004960:	21cc      	movs	r1, #204	; 0xcc
 8004962:	4640      	mov	r0, r8
 8004964:	f000 f95a 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[30], 0);
 8004968:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCC, lcd_reg_data21, 15);
 800496a:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[30], 0);
 800496c:	4a85      	ldr	r2, [pc, #532]	; (8004b84 <OTM8009A_Init+0x6dc>)
 800496e:	4619      	mov	r1, r3
 8004970:	4640      	mov	r0, r8
 8004972:	f000 f953 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCC, lcd_reg_data22, 10);
 8004976:	230a      	movs	r3, #10
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[30], 0);
 8004978:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCC, lcd_reg_data22, 10);
 800497a:	4a83      	ldr	r2, [pc, #524]	; (8004b88 <OTM8009A_Init+0x6e0>)
 800497c:	21cc      	movs	r1, #204	; 0xcc
 800497e:	4640      	mov	r0, r8
 8004980:	f000 f94c 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[31], 0);
 8004984:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCC, lcd_reg_data22, 10);
 8004986:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[31], 0);
 8004988:	4a80      	ldr	r2, [pc, #512]	; (8004b8c <OTM8009A_Init+0x6e4>)
 800498a:	4619      	mov	r1, r3
 800498c:	4640      	mov	r0, r8
 800498e:	f000 f945 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCC, lcd_reg_data23, 15);
 8004992:	230f      	movs	r3, #15
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[31], 0);
 8004994:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCC, lcd_reg_data23, 15);
 8004996:	4a7e      	ldr	r2, [pc, #504]	; (8004b90 <OTM8009A_Init+0x6e8>)
 8004998:	21cc      	movs	r1, #204	; 0xcc
 800499a:	4640      	mov	r0, r8
 800499c:	f000 f93e 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[32], 0);
 80049a0:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCC, lcd_reg_data23, 15);
 80049a2:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[32], 0);
 80049a4:	4a7b      	ldr	r2, [pc, #492]	; (8004b94 <OTM8009A_Init+0x6ec>)
 80049a6:	4619      	mov	r1, r3
 80049a8:	4640      	mov	r0, r8
 80049aa:	f000 f937 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCC, lcd_reg_data24, 15);
 80049ae:	230f      	movs	r3, #15
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[32], 0);
 80049b0:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCC, lcd_reg_data24, 15);
 80049b2:	4a79      	ldr	r2, [pc, #484]	; (8004b98 <OTM8009A_Init+0x6f0>)
 80049b4:	21cc      	movs	r1, #204	; 0xcc
 80049b6:	4640      	mov	r0, r8
 80049b8:	f000 f930 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[13], 0);
 80049bc:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xCC, lcd_reg_data24, 15);
 80049be:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[13], 0);
 80049c0:	4a76      	ldr	r2, [pc, #472]	; (8004b9c <OTM8009A_Init+0x6f4>)
 80049c2:	4619      	mov	r1, r3
 80049c4:	4640      	mov	r0, r8
 80049c6:	f000 f929 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC5, &short_reg_data[46], 0);
 80049ca:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[13], 0);
 80049cc:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC5, &short_reg_data[46], 0);
 80049ce:	4a74      	ldr	r2, [pc, #464]	; (8004ba0 <OTM8009A_Init+0x6f8>)
 80049d0:	21c5      	movs	r1, #197	; 0xc5
 80049d2:	4640      	mov	r0, r8
 80049d4:	f000 f922 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[47], 0);
 80049d8:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC5, &short_reg_data[46], 0);
 80049da:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[47], 0);
 80049dc:	4a71      	ldr	r2, [pc, #452]	; (8004ba4 <OTM8009A_Init+0x6fc>)
 80049de:	4619      	mov	r1, r3
 80049e0:	4640      	mov	r0, r8
 80049e2:	f000 f91b 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xF5, &short_reg_data[48], 0);
 80049e6:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[47], 0);
 80049e8:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xF5, &short_reg_data[48], 0);
 80049ea:	4a6f      	ldr	r2, [pc, #444]	; (8004ba8 <OTM8009A_Init+0x700>)
 80049ec:	21f5      	movs	r1, #245	; 0xf5
 80049ee:	4640      	mov	r0, r8
 80049f0:	f000 f914 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[49], 0);
 80049f4:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xF5, &short_reg_data[48], 0);
 80049f6:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[49], 0);
 80049f8:	4a6c      	ldr	r2, [pc, #432]	; (8004bac <OTM8009A_Init+0x704>)
 80049fa:	4619      	mov	r1, r3
 80049fc:	4640      	mov	r0, r8
 80049fe:	f000 f90d 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC6, &short_reg_data[50], 0);
 8004a02:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[49], 0);
 8004a04:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC6, &short_reg_data[50], 0);
 8004a06:	4a6a      	ldr	r2, [pc, #424]	; (8004bb0 <OTM8009A_Init+0x708>)
 8004a08:	21c6      	movs	r1, #198	; 0xc6
 8004a0a:	4640      	mov	r0, r8
 8004a0c:	f000 f906 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 8004a10:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xC6, &short_reg_data[50], 0);
 8004a12:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 8004a14:	4a67      	ldr	r2, [pc, #412]	; (8004bb4 <OTM8009A_Init+0x70c>)
 8004a16:	4619      	mov	r1, r3
 8004a18:	4640      	mov	r0, r8
 8004a1a:	f000 f8ff 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xFF, lcd_reg_data25, 3);
 8004a1e:	2303      	movs	r3, #3
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 8004a20:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xFF, lcd_reg_data25, 3);
 8004a22:	4a65      	ldr	r2, [pc, #404]	; (8004bb8 <OTM8009A_Init+0x710>)
 8004a24:	21ff      	movs	r1, #255	; 0xff
 8004a26:	4640      	mov	r0, r8
 8004a28:	f000 f8f8 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 8004a2c:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xFF, lcd_reg_data25, 3);
 8004a2e:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 8004a30:	4a60      	ldr	r2, [pc, #384]	; (8004bb4 <OTM8009A_Init+0x70c>)
 8004a32:	4619      	mov	r1, r3
 8004a34:	4640      	mov	r0, r8
 8004a36:	f000 f8f1 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 8004a3a:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 8004a3c:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 8004a3e:	4a5d      	ldr	r2, [pc, #372]	; (8004bb4 <OTM8009A_Init+0x70c>)
 8004a40:	4619      	mov	r1, r3
 8004a42:	4640      	mov	r0, r8
 8004a44:	f000 f8ea 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, 0xE1, lcd_reg_data3, 16);
 8004a48:	2310      	movs	r3, #16
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 8004a4a:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xE1, lcd_reg_data3, 16);
 8004a4c:	4a5b      	ldr	r2, [pc, #364]	; (8004bbc <OTM8009A_Init+0x714>)
 8004a4e:	21e1      	movs	r1, #225	; 0xe1
 8004a50:	4640      	mov	r0, r8
 8004a52:	f000 f8e3 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 8004a56:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xE1, lcd_reg_data3, 16);
 8004a58:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 8004a5a:	4a56      	ldr	r2, [pc, #344]	; (8004bb4 <OTM8009A_Init+0x70c>)
 8004a5c:	4619      	mov	r1, r3
 8004a5e:	4640      	mov	r0, r8
 8004a60:	f000 f8dc 	bl	8004c1c <otm8009a_write_reg>
 8004a64:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, 0xE2, lcd_reg_data4, 16);
 8004a66:	2310      	movs	r3, #16
 8004a68:	4a55      	ldr	r2, [pc, #340]	; (8004bc0 <OTM8009A_Init+0x718>)
 8004a6a:	21e2      	movs	r1, #226	; 0xe2
 8004a6c:	4640      	mov	r0, r8
 8004a6e:	f000 f8d5 	bl	8004c1c <otm8009a_write_reg>
 8004a72:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_SLPOUT, &short_reg_data[36], 0);
 8004a74:	2300      	movs	r3, #0
 8004a76:	4a53      	ldr	r2, [pc, #332]	; (8004bc4 <OTM8009A_Init+0x71c>)
 8004a78:	2111      	movs	r1, #17
 8004a7a:	4640      	mov	r0, r8
 8004a7c:	f000 f8ce 	bl	8004c1c <otm8009a_write_reg>
  (void)OTM8009A_IO_Delay(pObj, 120);
 8004a80:	2178      	movs	r1, #120	; 0x78
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_SLPOUT, &short_reg_data[36], 0);
 8004a82:	4404      	add	r4, r0
  (void)OTM8009A_IO_Delay(pObj, 120);
 8004a84:	4650      	mov	r0, sl
 8004a86:	f7ff fd03 	bl	8004490 <OTM8009A_IO_Delay.isra.0>
  switch(ColorCoding)
 8004a8a:	f1b9 0f00 	cmp.w	r9, #0
 8004a8e:	d062      	beq.n	8004b56 <OTM8009A_Init+0x6ae>
 8004a90:	f1b9 0f02 	cmp.w	r9, #2
 8004a94:	d108      	bne.n	8004aa8 <OTM8009A_Init+0x600>
    ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_COLMOD, &short_reg_data[37], 0);
 8004a96:	2300      	movs	r3, #0
 8004a98:	4a4b      	ldr	r2, [pc, #300]	; (8004bc8 <OTM8009A_Init+0x720>)
    ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_COLMOD, &short_reg_data[38], 0);
 8004a9a:	213a      	movs	r1, #58	; 0x3a
 8004a9c:	4640      	mov	r0, r8
 8004a9e:	f000 f8bd 	bl	8004c1c <otm8009a_write_reg>
 8004aa2:	4404      	add	r4, r0
    OTM8009ACtx.ColorCode = OTM8009A_FORMAT_RGB888;
 8004aa4:	f8c5 9004 	str.w	r9, [r5, #4]
  if(Orientation == OTM8009A_ORIENTATION_LANDSCAPE)
 8004aa8:	f1bb 0f01 	cmp.w	fp, #1
 8004aac:	d156      	bne.n	8004b5c <OTM8009A_Init+0x6b4>
	uint8_t tmp = OTM8009A_MADCTR_MODE_LANDSCAPE;
 8004aae:	2360      	movs	r3, #96	; 0x60
    ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_MADCTR, &tmp, 0);
 8004ab0:	f10d 0207 	add.w	r2, sp, #7
 8004ab4:	2136      	movs	r1, #54	; 0x36
 8004ab6:	4640      	mov	r0, r8
	uint8_t tmp = OTM8009A_MADCTR_MODE_LANDSCAPE;
 8004ab8:	f88d 3007 	strb.w	r3, [sp, #7]
    ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_MADCTR, &tmp, 0);
 8004abc:	2300      	movs	r3, #0
 8004abe:	f000 f8ad 	bl	8004c1c <otm8009a_write_reg>
 8004ac2:	4404      	add	r4, r0
    ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_CASET, LcdRegData27, 4);
 8004ac4:	2304      	movs	r3, #4
 8004ac6:	4a41      	ldr	r2, [pc, #260]	; (8004bcc <OTM8009A_Init+0x724>)
 8004ac8:	212a      	movs	r1, #42	; 0x2a
 8004aca:	4640      	mov	r0, r8
 8004acc:	f000 f8a6 	bl	8004c1c <otm8009a_write_reg>
 8004ad0:	4404      	add	r4, r0
    ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_PASET, LcdRegData28, 4);
 8004ad2:	2304      	movs	r3, #4
 8004ad4:	4a3e      	ldr	r2, [pc, #248]	; (8004bd0 <OTM8009A_Init+0x728>)
 8004ad6:	212b      	movs	r1, #43	; 0x2b
 8004ad8:	4640      	mov	r0, r8
 8004ada:	f000 f89f 	bl	8004c1c <otm8009a_write_reg>
 8004ade:	4404      	add	r4, r0
    OTM8009ACtx.Orientation = OTM8009A_ORIENTATION_LANDSCAPE;
 8004ae0:	f8c5 b000 	str.w	fp, [r5]
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_WRDISBV, &short_reg_data[39], 0);
 8004ae4:	2300      	movs	r3, #0
 8004ae6:	4a3b      	ldr	r2, [pc, #236]	; (8004bd4 <OTM8009A_Init+0x72c>)
 8004ae8:	2151      	movs	r1, #81	; 0x51
 8004aea:	4640      	mov	r0, r8
 8004aec:	f000 f896 	bl	8004c1c <otm8009a_write_reg>
  OTM8009ACtx.Brightness = ((uint32_t)short_reg_data[39] / 0xFFU) * 100U;
 8004af0:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_WRDISBV, &short_reg_data[39], 0);
 8004af2:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_WRCTRLD, &short_reg_data[40], 0);
 8004af4:	4a38      	ldr	r2, [pc, #224]	; (8004bd8 <OTM8009A_Init+0x730>)
 8004af6:	2153      	movs	r1, #83	; 0x53
 8004af8:	4640      	mov	r0, r8
  OTM8009ACtx.Brightness = ((uint32_t)short_reg_data[39] / 0xFFU) * 100U;
 8004afa:	60ab      	str	r3, [r5, #8]
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_WRCTRLD, &short_reg_data[40], 0);
 8004afc:	f000 f88e 	bl	8004c1c <otm8009a_write_reg>
 8004b00:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_WRCABC, &short_reg_data[41], 0);
 8004b02:	2300      	movs	r3, #0
 8004b04:	4a35      	ldr	r2, [pc, #212]	; (8004bdc <OTM8009A_Init+0x734>)
 8004b06:	2155      	movs	r1, #85	; 0x55
 8004b08:	4640      	mov	r0, r8
 8004b0a:	f000 f887 	bl	8004c1c <otm8009a_write_reg>
 8004b0e:	4404      	add	r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_WRCABCMB, &short_reg_data[42], 0);
 8004b10:	2300      	movs	r3, #0
 8004b12:	4a33      	ldr	r2, [pc, #204]	; (8004be0 <OTM8009A_Init+0x738>)
 8004b14:	215e      	movs	r1, #94	; 0x5e
 8004b16:	4640      	mov	r0, r8
 8004b18:	f000 f880 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_DISPON, &short_reg_data[43], 0);
 8004b1c:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_WRCABCMB, &short_reg_data[42], 0);
 8004b1e:	1825      	adds	r5, r4, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_DISPON, &short_reg_data[43], 0);
 8004b20:	4a30      	ldr	r2, [pc, #192]	; (8004be4 <OTM8009A_Init+0x73c>)
 8004b22:	2129      	movs	r1, #41	; 0x29
 8004b24:	4640      	mov	r0, r8
 8004b26:	f000 f879 	bl	8004c1c <otm8009a_write_reg>
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 8004b2a:	2300      	movs	r3, #0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_DISPON, &short_reg_data[43], 0);
 8004b2c:	4405      	add	r5, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_NOP, &short_reg_data[1], 0);
 8004b2e:	4a21      	ldr	r2, [pc, #132]	; (8004bb4 <OTM8009A_Init+0x70c>)
 8004b30:	4619      	mov	r1, r3
 8004b32:	4640      	mov	r0, r8
 8004b34:	f000 f872 	bl	8004c1c <otm8009a_write_reg>
 8004b38:	4405      	add	r5, r0
  ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_RAMWR, &short_reg_data[44], 0);
 8004b3a:	2300      	movs	r3, #0
 8004b3c:	4a2a      	ldr	r2, [pc, #168]	; (8004be8 <OTM8009A_Init+0x740>)
 8004b3e:	212c      	movs	r1, #44	; 0x2c
 8004b40:	4640      	mov	r0, r8
 8004b42:	f000 f86b 	bl	8004c1c <otm8009a_write_reg>
  if(ret != OTM8009A_OK)
 8004b46:	42c5      	cmn	r5, r0
}
 8004b48:	bf14      	ite	ne
 8004b4a:	f04f 30ff 	movne.w	r0, #4294967295
 8004b4e:	2000      	moveq	r0, #0
 8004b50:	b003      	add	sp, #12
 8004b52:	e8bd 8f30 	ldmia.w	sp!, {r4, r5, r8, r9, sl, fp, pc}
    ret += otm8009a_write_reg(&pObj->Ctx, OTM8009A_CMD_COLMOD, &short_reg_data[38], 0);
 8004b56:	464b      	mov	r3, r9
 8004b58:	4a24      	ldr	r2, [pc, #144]	; (8004bec <OTM8009A_Init+0x744>)
 8004b5a:	e79e      	b.n	8004a9a <OTM8009A_Init+0x5f2>
    OTM8009ACtx.Orientation = OTM8009A_ORIENTATION_PORTRAIT;
 8004b5c:	2300      	movs	r3, #0
 8004b5e:	602b      	str	r3, [r5, #0]
 8004b60:	e7c0      	b.n	8004ae4 <OTM8009A_Init+0x63c>
 8004b62:	bf00      	nop
 8004b64:	08022577 	.word	0x08022577
 8004b68:	080224af 	.word	0x080224af
 8004b6c:	08022556 	.word	0x08022556
 8004b70:	080224b9 	.word	0x080224b9
 8004b74:	08022575 	.word	0x08022575
 8004b78:	080224c5 	.word	0x080224c5
 8004b7c:	08022571 	.word	0x08022571
 8004b80:	080224d4 	.word	0x080224d4
 8004b84:	08022572 	.word	0x08022572
 8004b88:	080224e3 	.word	0x080224e3
 8004b8c:	08022573 	.word	0x08022573
 8004b90:	080224ed 	.word	0x080224ed
 8004b94:	08022574 	.word	0x08022574
 8004b98:	080224fc 	.word	0x080224fc
 8004b9c:	08022561 	.word	0x08022561
 8004ba0:	08022582 	.word	0x08022582
 8004ba4:	08022583 	.word	0x08022583
 8004ba8:	08022584 	.word	0x08022584
 8004bac:	08022585 	.word	0x08022585
 8004bb0:	08022586 	.word	0x08022586
 8004bb4:	08022555 	.word	0x08022555
 8004bb8:	0802250b 	.word	0x0802250b
 8004bbc:	0802250e 	.word	0x0802250e
 8004bc0:	0802251e 	.word	0x0802251e
 8004bc4:	08022578 	.word	0x08022578
 8004bc8:	08022579 	.word	0x08022579
 8004bcc:	08022440 	.word	0x08022440
 8004bd0:	08022444 	.word	0x08022444
 8004bd4:	0802257b 	.word	0x0802257b
 8004bd8:	0802257c 	.word	0x0802257c
 8004bdc:	0802257d 	.word	0x0802257d
 8004be0:	0802257e 	.word	0x0802257e
 8004be4:	0802257f 	.word	0x0802257f
 8004be8:	08022580 	.word	0x08022580
 8004bec:	0802257a 	.word	0x0802257a

08004bf0 <OTM8009A_RegisterBusIO>:
  if(pObj == NULL)
 8004bf0:	b160      	cbz	r0, 8004c0c <OTM8009A_RegisterBusIO+0x1c>
    pObj->IO.WriteReg  = pIO->WriteReg;
 8004bf2:	684b      	ldr	r3, [r1, #4]
 8004bf4:	6043      	str	r3, [r0, #4]
    pObj->IO.ReadReg   = pIO->ReadReg;
 8004bf6:	688b      	ldr	r3, [r1, #8]
 8004bf8:	6083      	str	r3, [r0, #8]
    pObj->IO.GetTick   = pIO->GetTick;
 8004bfa:	68cb      	ldr	r3, [r1, #12]
    pObj->Ctx.handle   = pObj;
 8004bfc:	6180      	str	r0, [r0, #24]
    pObj->IO.GetTick   = pIO->GetTick;
 8004bfe:	60c3      	str	r3, [r0, #12]
    pObj->Ctx.ReadReg  = OTM8009A_ReadRegWrap;
 8004c00:	4b04      	ldr	r3, [pc, #16]	; (8004c14 <OTM8009A_RegisterBusIO+0x24>)
 8004c02:	6143      	str	r3, [r0, #20]
    pObj->Ctx.WriteReg = OTM8009A_WriteRegWrap;
 8004c04:	4b04      	ldr	r3, [pc, #16]	; (8004c18 <OTM8009A_RegisterBusIO+0x28>)
 8004c06:	6103      	str	r3, [r0, #16]
  int32_t ret = OTM8009A_OK;
 8004c08:	2000      	movs	r0, #0
 8004c0a:	4770      	bx	lr
    ret = OTM8009A_ERROR;
 8004c0c:	f04f 30ff 	mov.w	r0, #4294967295
}
 8004c10:	4770      	bx	lr
 8004c12:	bf00      	nop
 8004c14:	08004475 	.word	0x08004475
 8004c18:	08004483 	.word	0x08004483

08004c1c <otm8009a_write_reg>:
*                 I2C or SPI writing function
* Input         : Register Address, Data to be written, length of buffer
* Output        : None
*******************************************************************************/
int32_t otm8009a_write_reg(otm8009a_ctx_t *ctx, uint16_t reg, const uint8_t *pdata, uint16_t length)
{
 8004c1c:	b410      	push	{r4}
  return ctx->WriteReg(ctx->handle, reg, (uint8_t *)pdata, length);
 8004c1e:	6804      	ldr	r4, [r0, #0]
 8004c20:	6880      	ldr	r0, [r0, #8]
 8004c22:	46a4      	mov	ip, r4
}
 8004c24:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->WriteReg(ctx->handle, reg, (uint8_t *)pdata, length);
 8004c28:	4760      	bx	ip
	...

08004c2c <BSP_I2C4_DeInit>:
  */
int32_t BSP_I2C4_DeInit(void)
{
  int32_t ret  = BSP_ERROR_NONE;

  I2c4InitCounter--;
 8004c2c:	4a10      	ldr	r2, [pc, #64]	; (8004c70 <BSP_I2C4_DeInit+0x44>)
{
 8004c2e:	b508      	push	{r3, lr}
  I2c4InitCounter--;
 8004c30:	6813      	ldr	r3, [r2, #0]
 8004c32:	3b01      	subs	r3, #1
 8004c34:	6013      	str	r3, [r2, #0]
  if (I2c4InitCounter == 0U)
 8004c36:	b10b      	cbz	r3, 8004c3c <BSP_I2C4_DeInit+0x10>
  int32_t ret  = BSP_ERROR_NONE;
 8004c38:	2000      	movs	r0, #0
      ret = BSP_ERROR_BUS_FAILURE;
    }
  }

  return ret;
}
 8004c3a:	bd08      	pop	{r3, pc}
  /* Prevent unused argument(s) compilation warning */
  UNUSED(phi2c);

  /* Configure I2C Tx, Rx as alternate function */
  gpio_init_structure.Pin = BUS_I2C4_SCL_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SCL_GPIO_PORT, gpio_init_structure.Pin );
 8004c3c:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8004c40:	480c      	ldr	r0, [pc, #48]	; (8004c74 <BSP_I2C4_DeInit+0x48>)
 8004c42:	f001 fe0b 	bl	800685c <HAL_GPIO_DeInit>
  gpio_init_structure.Pin = BUS_I2C4_SDA_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SDA_GPIO_PORT, gpio_init_structure.Pin);
 8004c46:	480b      	ldr	r0, [pc, #44]	; (8004c74 <BSP_I2C4_DeInit+0x48>)
 8004c48:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8004c4c:	f001 fe06 	bl	800685c <HAL_GPIO_DeInit>

  /* Disable I2C clock */
  BUS_I2C4_CLK_DISABLE();
 8004c50:	4a09      	ldr	r2, [pc, #36]	; (8004c78 <BSP_I2C4_DeInit+0x4c>)
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
 8004c52:	480a      	ldr	r0, [pc, #40]	; (8004c7c <BSP_I2C4_DeInit+0x50>)
  BUS_I2C4_CLK_DISABLE();
 8004c54:	f8d2 30f4 	ldr.w	r3, [r2, #244]	; 0xf4
 8004c58:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8004c5c:	f8c2 30f4 	str.w	r3, [r2, #244]	; 0xf4
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
 8004c60:	f002 f8a4 	bl	8006dac <HAL_I2C_DeInit>
 8004c64:	2800      	cmp	r0, #0
 8004c66:	d0e7      	beq.n	8004c38 <BSP_I2C4_DeInit+0xc>
      ret = BSP_ERROR_BUS_FAILURE;
 8004c68:	f06f 0007 	mvn.w	r0, #7
  return ret;
 8004c6c:	e7e5      	b.n	8004c3a <BSP_I2C4_DeInit+0xe>
 8004c6e:	bf00      	nop
 8004c70:	24004734 	.word	0x24004734
 8004c74:	58020c00 	.word	0x58020c00
 8004c78:	58024400 	.word	0x58024400
 8004c7c:	2400513c 	.word	0x2400513c

08004c80 <MX_I2C4_Init>:
  hI2c->Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
 8004c80:	2300      	movs	r3, #0
 8004c82:	2201      	movs	r2, #1
{
 8004c84:	b510      	push	{r4, lr}
  hI2c->Init.Timing           = timing;
 8004c86:	6041      	str	r1, [r0, #4]
{
 8004c88:	4604      	mov	r4, r0
  hI2c->Init.NoStretchMode    = I2C_NOSTRETCH_DISABLE;
 8004c8a:	6203      	str	r3, [r0, #32]
  hI2c->Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
 8004c8c:	e9c0 3202 	strd	r3, r2, [r0, #8]
  hI2c->Init.OwnAddress2      = 0;
 8004c90:	e9c0 3304 	strd	r3, r3, [r0, #16]
  hI2c->Init.GeneralCallMode  = I2C_GENERALCALL_DISABLE;
 8004c94:	e9c0 3306 	strd	r3, r3, [r0, #24]
  if (HAL_I2C_Init(hI2c) != HAL_OK)
 8004c98:	f002 f836 	bl	8006d08 <HAL_I2C_Init>
 8004c9c:	4601      	mov	r1, r0
 8004c9e:	b108      	cbz	r0, 8004ca4 <MX_I2C4_Init+0x24>
    status = HAL_ERROR;
 8004ca0:	2001      	movs	r0, #1
}
 8004ca2:	bd10      	pop	{r4, pc}
    if (HAL_I2CEx_ConfigAnalogFilter(hI2c, analog_filter) != HAL_OK)
 8004ca4:	4620      	mov	r0, r4
 8004ca6:	f002 fa12 	bl	80070ce <HAL_I2CEx_ConfigAnalogFilter>
 8004caa:	4601      	mov	r1, r0
 8004cac:	2800      	cmp	r0, #0
 8004cae:	d1f7      	bne.n	8004ca0 <MX_I2C4_Init+0x20>
      if (HAL_I2CEx_ConfigDigitalFilter(hI2c, I2C_DIGITAL_FILTER_COEF) != HAL_OK)
 8004cb0:	4620      	mov	r0, r4
 8004cb2:	f002 fa32 	bl	800711a <HAL_I2CEx_ConfigDigitalFilter>
    status = HAL_ERROR;
 8004cb6:	3800      	subs	r0, #0
 8004cb8:	bf18      	it	ne
 8004cba:	2001      	movne	r0, #1
 8004cbc:	e7f1      	b.n	8004ca2 <MX_I2C4_Init+0x22>
	...

08004cc0 <BSP_I2C4_Init>:
  hbus_i2c4.Instance = BUS_I2C4;
 8004cc0:	4ba3      	ldr	r3, [pc, #652]	; (8004f50 <BSP_I2C4_Init+0x290>)
 8004cc2:	48a4      	ldr	r0, [pc, #656]	; (8004f54 <BSP_I2C4_Init+0x294>)
{
 8004cc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  hbus_i2c4.Instance = BUS_I2C4;
 8004cc8:	6003      	str	r3, [r0, #0]
{
 8004cca:	b093      	sub	sp, #76	; 0x4c
  if (I2c4InitCounter == 0U)
 8004ccc:	4ba2      	ldr	r3, [pc, #648]	; (8004f58 <BSP_I2C4_Init+0x298>)
 8004cce:	681a      	ldr	r2, [r3, #0]
 8004cd0:	9200      	str	r2, [sp, #0]
 8004cd2:	2a00      	cmp	r2, #0
 8004cd4:	f040 80cf 	bne.w	8004e76 <BSP_I2C4_Init+0x1b6>
    I2c4InitCounter++;
 8004cd8:	2201      	movs	r2, #1
 8004cda:	601a      	str	r2, [r3, #0]
    if (HAL_I2C_GetState(&hbus_i2c4) == HAL_I2C_STATE_RESET)
 8004cdc:	f002 f9f2 	bl	80070c4 <HAL_I2C_GetState>
 8004ce0:	2800      	cmp	r0, #0
 8004ce2:	f040 80c8 	bne.w	8004e76 <BSP_I2C4_Init+0x1b6>
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
 8004ce6:	4d9d      	ldr	r5, [pc, #628]	; (8004f5c <BSP_I2C4_Init+0x29c>)
  gpio_init_structure.Mode      = GPIO_MODE_AF_OD;
 8004ce8:	f04f 0812 	mov.w	r8, #18
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
 8004cec:	2702      	movs	r7, #2
 8004cee:	2604      	movs	r6, #4
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
 8004cf0:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
 8004cf4:	a90d      	add	r1, sp, #52	; 0x34
 8004cf6:	489a      	ldr	r0, [pc, #616]	; (8004f60 <BSP_I2C4_Init+0x2a0>)
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
 8004cf8:	f043 0308 	orr.w	r3, r3, #8
 8004cfc:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
 8004d00:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
 8004d04:	f003 0308 	and.w	r3, r3, #8
 8004d08:	930a      	str	r3, [sp, #40]	; 0x28
 8004d0a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
 8004d0c:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
 8004d10:	f043 0308 	orr.w	r3, r3, #8
 8004d14:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
 8004d18:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
 8004d1c:	f003 0308 	and.w	r3, r3, #8
 8004d20:	930b      	str	r3, [sp, #44]	; 0x2c
 8004d22:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  gpio_init_structure.Mode      = GPIO_MODE_AF_OD;
 8004d24:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8004d28:	e9cd 380d 	strd	r3, r8, [sp, #52]	; 0x34
  gpio_init_structure.Pull      = GPIO_NOPULL;
 8004d2c:	9b00      	ldr	r3, [sp, #0]
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
 8004d2e:	e9cd 7610 	strd	r7, r6, [sp, #64]	; 0x40
  gpio_init_structure.Pull      = GPIO_NOPULL;
 8004d32:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
 8004d34:	f001 fca6 	bl	8006684 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
 8004d38:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
 8004d3c:	a90d      	add	r1, sp, #52	; 0x34
 8004d3e:	4888      	ldr	r0, [pc, #544]	; (8004f60 <BSP_I2C4_Init+0x2a0>)
  gpio_init_structure.Alternate = BUS_I2C4_SDA_AF;
 8004d40:	9611      	str	r6, [sp, #68]	; 0x44
  gpio_init_structure.Mode      = GPIO_MODE_AF_OD;
 8004d42:	e9cd 380d 	strd	r3, r8, [sp, #52]	; 0x34
  gpio_init_structure.Pull      = GPIO_NOPULL;
 8004d46:	9b00      	ldr	r3, [sp, #0]
  gpio_init_structure.Speed     = GPIO_SPEED_FREQ_HIGH;
 8004d48:	e9cd 370f 	strd	r3, r7, [sp, #60]	; 0x3c
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
 8004d4c:	f001 fc9a 	bl	8006684 <HAL_GPIO_Init>
  BUS_I2C4_CLK_ENABLE();
 8004d50:	f8d5 30f4 	ldr.w	r3, [r5, #244]	; 0xf4
 8004d54:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8004d58:	f8c5 30f4 	str.w	r3, [r5, #244]	; 0xf4
 8004d5c:	f8d5 30f4 	ldr.w	r3, [r5, #244]	; 0xf4
 8004d60:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004d64:	930c      	str	r3, [sp, #48]	; 0x30
 8004d66:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  BUS_I2C4_FORCE_RESET();
 8004d68:	f8d5 309c 	ldr.w	r3, [r5, #156]	; 0x9c
 8004d6c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8004d70:	f8c5 309c 	str.w	r3, [r5, #156]	; 0x9c
  BUS_I2C4_RELEASE_RESET();
 8004d74:	f8d5 309c 	ldr.w	r3, [r5, #156]	; 0x9c
 8004d78:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8004d7c:	f8c5 309c 	str.w	r3, [r5, #156]	; 0x9c
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
 8004d80:	f003 fc02 	bl	8008588 <HAL_RCC_GetPCLK2Freq>
  if((clock_src_freq != 0U) && (i2c_freq != 0U))
 8004d84:	2800      	cmp	r0, #0
 8004d86:	d070      	beq.n	8004e6a <BSP_I2C4_Init+0x1aa>
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
 8004d88:	4b76      	ldr	r3, [pc, #472]	; (8004f64 <BSP_I2C4_Init+0x2a4>)
  uint32_t prev_presc = I2C_PRESC_MAX;
 8004d8a:	f04f 0810 	mov.w	r8, #16
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
 8004d8e:	f8df 91dc 	ldr.w	r9, [pc, #476]	; 8004f6c <BSP_I2C4_Init+0x2ac>
 8004d92:	f04f 0a14 	mov.w	sl, #20
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
 8004d96:	eb03 0350 	add.w	r3, r3, r0, lsr #1
 8004d9a:	fbb3 f0f0 	udiv	r0, r3, r0
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
 8004d9e:	eb00 0240 	add.w	r2, r0, r0, lsl #1
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
 8004da2:	f640 13f6 	movw	r3, #2550	; 0x9f6
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
 8004da6:	4601      	mov	r1, r0
  tsdadel_min = (int32_t)I2C_Charac[I2C_speed].tfall + (int32_t)I2C_Charac[I2C_speed].hddat_min -
 8004da8:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
 8004dac:	eba3 0380 	sub.w	r3, r3, r0, lsl #2
  tsdadel_min = (int32_t)I2C_Charac[I2C_speed].tfall + (int32_t)I2C_Charac[I2C_speed].hddat_min -
 8004db0:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 8004db4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8004db8:	32e2      	adds	r2, #226	; 0xe2
  if (tsdadel_min <= 0)
 8004dba:	9302      	str	r3, [sp, #8]
 8004dbc:	4b6a      	ldr	r3, [pc, #424]	; (8004f68 <BSP_I2C4_Init+0x2a8>)
 8004dbe:	ea22 7be2 	bic.w	fp, r2, r2, asr #31
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
 8004dc2:	9a00      	ldr	r2, [sp, #0]
 8004dc4:	681b      	ldr	r3, [r3, #0]
 8004dc6:	4696      	mov	lr, r2
{
 8004dc8:	468c      	mov	ip, r1
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
 8004dca:	2600      	movs	r6, #0
      if (tscldel >= (uint32_t)tscldel_min)
 8004dcc:	f240 3479 	movw	r4, #889	; 0x379
 8004dd0:	9601      	str	r6, [sp, #4]
      uint32_t tscldel = (scldel + 1U) * (presc + 1U) * ti2cclk;
 8004dd2:	3601      	adds	r6, #1
      if (tscldel >= (uint32_t)tscldel_min)
 8004dd4:	45a4      	cmp	ip, r4
 8004dd6:	d959      	bls.n	8004e8c <BSP_I2C4_Init+0x1cc>
 8004dd8:	2500      	movs	r5, #0
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
 8004dda:	462f      	mov	r7, r5
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
 8004ddc:	45ab      	cmp	fp, r5
 8004dde:	d851      	bhi.n	8004e84 <BSP_I2C4_Init+0x1c4>
 8004de0:	9c02      	ldr	r4, [sp, #8]
 8004de2:	42ac      	cmp	r4, r5
 8004de4:	d34e      	bcc.n	8004e84 <BSP_I2C4_Init+0x1c4>
            if(presc != prev_presc)
 8004de6:	4590      	cmp	r8, r2
 8004de8:	d04c      	beq.n	8004e84 <BSP_I2C4_Init+0x1c4>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
 8004dea:	fb0a f803 	mul.w	r8, sl, r3
              I2c_valid_timing_nbr ++;
 8004dee:	3301      	adds	r3, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
 8004df0:	9c01      	ldr	r4, [sp, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
 8004df2:	eb09 0e08 	add.w	lr, r9, r8
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
 8004df6:	2b7f      	cmp	r3, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
 8004df8:	f849 2008 	str.w	r2, [r9, r8]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
 8004dfc:	e9ce 4701 	strd	r4, r7, [lr, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
 8004e00:	d93d      	bls.n	8004e7e <BSP_I2C4_Init+0x1be>
 8004e02:	4a59      	ldr	r2, [pc, #356]	; (8004f68 <BSP_I2C4_Init+0x2a8>)
 8004e04:	6013      	str	r3, [r2, #0]
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
 8004e06:	4b58      	ldr	r3, [pc, #352]	; (8004f68 <BSP_I2C4_Init+0x2a8>)
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
 8004e08:	f242 7210 	movw	r2, #10000	; 0x2710
 8004e0c:	4957      	ldr	r1, [pc, #348]	; (8004f6c <BSP_I2C4_Init+0x2ac>)
 8004e0e:	2700      	movs	r7, #0
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
 8004e10:	681b      	ldr	r3, [r3, #0]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
 8004e12:	9203      	str	r2, [sp, #12]
 8004e14:	f04f 32ff 	mov.w	r2, #4294967295
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
 8004e18:	9305      	str	r3, [sp, #20]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
 8004e1a:	0043      	lsls	r3, r0, #1
 8004e1c:	f103 0432 	add.w	r4, r3, #50	; 0x32
 8004e20:	f5c3 5b90 	rsb	fp, r3, #4608	; 0x1200
 8004e24:	f5a3 5311 	sub.w	r3, r3, #9280	; 0x2440
 8004e28:	f10b 0b0c 	add.w	fp, fp, #12
 8004e2c:	9409      	str	r4, [sp, #36]	; 0x24
 8004e2e:	3b0a      	subs	r3, #10
 8004e30:	9302      	str	r3, [sp, #8]
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
 8004e32:	9b05      	ldr	r3, [sp, #20]
 8004e34:	429f      	cmp	r7, r3
 8004e36:	d134      	bne.n	8004ea2 <BSP_I2C4_Init+0x1e2>
        if (idx < I2C_VALID_TIMING_NBR)
 8004e38:	2a7f      	cmp	r2, #127	; 0x7f
 8004e3a:	d816      	bhi.n	8004e6a <BSP_I2C4_Init+0x1aa>
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
 8004e3c:	2314      	movs	r3, #20
 8004e3e:	435a      	muls	r2, r3
 8004e40:	4b4a      	ldr	r3, [pc, #296]	; (8004f6c <BSP_I2C4_Init+0x2ac>)
 8004e42:	1899      	adds	r1, r3, r2
 8004e44:	589b      	ldr	r3, [r3, r2]
                ((I2c_valid_timing[idx].scll & 0xFFU) << 0);
 8004e46:	7c0c      	ldrb	r4, [r1, #16]
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
 8004e48:	ea44 7403 	orr.w	r4, r4, r3, lsl #28
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
 8004e4c:	684b      	ldr	r3, [r1, #4]
 8004e4e:	051b      	lsls	r3, r3, #20
 8004e50:	f403 0370 	and.w	r3, r3, #15728640	; 0xf00000
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
 8004e54:	431c      	orrs	r4, r3
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
 8004e56:	688b      	ldr	r3, [r1, #8]
 8004e58:	041b      	lsls	r3, r3, #16
 8004e5a:	f403 2370 	and.w	r3, r3, #983040	; 0xf0000
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
 8004e5e:	431c      	orrs	r4, r3
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
 8004e60:	68cb      	ldr	r3, [r1, #12]
 8004e62:	021b      	lsls	r3, r3, #8
 8004e64:	b29b      	uxth	r3, r3
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
 8004e66:	4323      	orrs	r3, r4
 8004e68:	9300      	str	r3, [sp, #0]
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
 8004e6a:	9900      	ldr	r1, [sp, #0]
 8004e6c:	4839      	ldr	r0, [pc, #228]	; (8004f54 <BSP_I2C4_Init+0x294>)
 8004e6e:	f7ff ff07 	bl	8004c80 <MX_I2C4_Init>
 8004e72:	2800      	cmp	r0, #0
 8004e74:	d169      	bne.n	8004f4a <BSP_I2C4_Init+0x28a>
  int32_t ret = BSP_ERROR_NONE;
 8004e76:	2000      	movs	r0, #0
}
 8004e78:	b013      	add	sp, #76	; 0x4c
 8004e7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004e7e:	4690      	mov	r8, r2
 8004e80:	f04f 0e01 	mov.w	lr, #1
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
 8004e84:	3701      	adds	r7, #1
 8004e86:	440d      	add	r5, r1
 8004e88:	2f10      	cmp	r7, #16
 8004e8a:	d1a7      	bne.n	8004ddc <BSP_I2C4_Init+0x11c>
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
 8004e8c:	2e10      	cmp	r6, #16
 8004e8e:	448c      	add	ip, r1
 8004e90:	d19c      	bne.n	8004dcc <BSP_I2C4_Init+0x10c>
  for (presc = 0; presc < I2C_PRESC_MAX; presc++)
 8004e92:	3201      	adds	r2, #1
 8004e94:	4401      	add	r1, r0
 8004e96:	2a10      	cmp	r2, #16
 8004e98:	d196      	bne.n	8004dc8 <BSP_I2C4_Init+0x108>
 8004e9a:	f1be 0f00 	cmp.w	lr, #0
 8004e9e:	d1b0      	bne.n	8004e02 <BSP_I2C4_Init+0x142>
 8004ea0:	e7b1      	b.n	8004e06 <BSP_I2C4_Init+0x146>
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
 8004ea2:	680b      	ldr	r3, [r1, #0]
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
 8004ea4:	f04f 0c00 	mov.w	ip, #0
 8004ea8:	9c09      	ldr	r4, [sp, #36]	; 0x24
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
 8004eaa:	fb03 0300 	mla	r3, r3, r0, r0
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
 8004eae:	441c      	add	r4, r3
 8004eb0:	ebab 0503 	sub.w	r5, fp, r3
 8004eb4:	9404      	str	r4, [sp, #16]
 8004eb6:	006c      	lsls	r4, r5, #1
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
 8004eb8:	9d04      	ldr	r5, [sp, #16]
 8004eba:	9401      	str	r4, [sp, #4]
 8004ebc:	9c02      	ldr	r4, [sp, #8]
 8004ebe:	441c      	add	r4, r3
 8004ec0:	9408      	str	r4, [sp, #32]
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
 8004ec2:	f241 245c 	movw	r4, #4700	; 0x125c
 8004ec6:	f8cd c018 	str.w	ip, [sp, #24]
 8004eca:	f1a5 0632 	sub.w	r6, r5, #50	; 0x32
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
 8004ece:	f10c 0c01 	add.w	ip, ip, #1
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
 8004ed2:	42a5      	cmp	r5, r4
 8004ed4:	d92e      	bls.n	8004f34 <BSP_I2C4_Init+0x274>
 8004ed6:	ebb0 0f96 	cmp.w	r0, r6, lsr #2
 8004eda:	d22b      	bcs.n	8004f34 <BSP_I2C4_Init+0x274>
 8004edc:	9c08      	ldr	r4, [sp, #32]
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
 8004ede:	f04f 0e00 	mov.w	lr, #0
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
 8004ee2:	f8dd 8010 	ldr.w	r8, [sp, #16]
 8004ee6:	1966      	adds	r6, r4, r5
 8004ee8:	f8dd 9004 	ldr.w	r9, [sp, #4]
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
 8004eec:	f206 6a83 	addw	sl, r6, #1667	; 0x683
 8004ef0:	f241 0447 	movw	r4, #4167	; 0x1047
 8004ef4:	f8cd e01c 	str.w	lr, [sp, #28]
          uint32_t tscl_h = tafdel_min + dnf_delay + (2U * ti2cclk) + ((sclh + 1U) * tpresc);
 8004ef8:	f10e 0e01 	add.w	lr, lr, #1
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
 8004efc:	45a2      	cmp	sl, r4
 8004efe:	d812      	bhi.n	8004f26 <BSP_I2C4_Init+0x266>
 8004f00:	f5b8 6f7a 	cmp.w	r8, #4000	; 0xfa0
 8004f04:	d30f      	bcc.n	8004f26 <BSP_I2C4_Init+0x266>
 8004f06:	4540      	cmp	r0, r8
 8004f08:	d20d      	bcs.n	8004f26 <BSP_I2C4_Init+0x266>
              error = -error;
 8004f0a:	ea36 0a26 	bics.w	sl, r6, r6, asr #32
 8004f0e:	bf28      	it	cs
 8004f10:	46ca      	movcs	sl, r9
            if ((uint32_t)error < prev_error)
 8004f12:	9c03      	ldr	r4, [sp, #12]
 8004f14:	45a2      	cmp	sl, r4
 8004f16:	d206      	bcs.n	8004f26 <BSP_I2C4_Init+0x266>
              I2c_valid_timing[count].scll = scll;
 8004f18:	9a06      	ldr	r2, [sp, #24]
              I2c_valid_timing[count].sclh = sclh;
 8004f1a:	f8cd a00c 	str.w	sl, [sp, #12]
              I2c_valid_timing[count].scll = scll;
 8004f1e:	610a      	str	r2, [r1, #16]
              I2c_valid_timing[count].sclh = sclh;
 8004f20:	9a07      	ldr	r2, [sp, #28]
 8004f22:	60ca      	str	r2, [r1, #12]
 8004f24:	463a      	mov	r2, r7
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
 8004f26:	f5be 7f80 	cmp.w	lr, #256	; 0x100
 8004f2a:	eba9 0903 	sub.w	r9, r9, r3
 8004f2e:	441e      	add	r6, r3
 8004f30:	4498      	add	r8, r3
 8004f32:	d1db      	bne.n	8004eec <BSP_I2C4_Init+0x22c>
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
 8004f34:	9c01      	ldr	r4, [sp, #4]
 8004f36:	f5bc 7f80 	cmp.w	ip, #256	; 0x100
 8004f3a:	441d      	add	r5, r3
 8004f3c:	eba4 0403 	sub.w	r4, r4, r3
 8004f40:	9401      	str	r4, [sp, #4]
 8004f42:	d1be      	bne.n	8004ec2 <BSP_I2C4_Init+0x202>
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
 8004f44:	3701      	adds	r7, #1
 8004f46:	3114      	adds	r1, #20
 8004f48:	e773      	b.n	8004e32 <BSP_I2C4_Init+0x172>
          ret = BSP_ERROR_BUS_FAILURE;
 8004f4a:	f06f 0007 	mvn.w	r0, #7
  return ret;
 8004f4e:	e793      	b.n	8004e78 <BSP_I2C4_Init+0x1b8>
 8004f50:	58001c00 	.word	0x58001c00
 8004f54:	2400513c 	.word	0x2400513c
 8004f58:	24004734 	.word	0x24004734
 8004f5c:	58024400 	.word	0x58024400
 8004f60:	58020c00 	.word	0x58020c00
 8004f64:	3b9aca00 	.word	0x3b9aca00
 8004f68:	24005138 	.word	0x24005138
 8004f6c:	24004738 	.word	0x24004738

08004f70 <BSP_I2C4_WriteReg>:
{
 8004f70:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_WriteReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if(HAL_I2C_Mem_Write(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
 8004f72:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 8004f76:	9200      	str	r2, [sp, #0]
 8004f78:	460a      	mov	r2, r1
 8004f7a:	4601      	mov	r1, r0
 8004f7c:	4808      	ldr	r0, [pc, #32]	; (8004fa0 <BSP_I2C4_WriteReg+0x30>)
 8004f7e:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8004f82:	2301      	movs	r3, #1
 8004f84:	f001 ff2b 	bl	8006dde <HAL_I2C_Mem_Write>
 8004f88:	b140      	cbz	r0, 8004f9c <BSP_I2C4_WriteReg+0x2c>
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
 8004f8a:	4805      	ldr	r0, [pc, #20]	; (8004fa0 <BSP_I2C4_WriteReg+0x30>)
 8004f8c:	f002 f89d 	bl	80070ca <HAL_I2C_GetError>
      ret =  BSP_ERROR_PERIPH_FAILURE;
 8004f90:	2804      	cmp	r0, #4
 8004f92:	bf0c      	ite	eq
 8004f94:	f06f 0065 	mvneq.w	r0, #101	; 0x65
 8004f98:	f06f 0003 	mvnne.w	r0, #3
}
 8004f9c:	b004      	add	sp, #16
 8004f9e:	bd10      	pop	{r4, pc}
 8004fa0:	2400513c 	.word	0x2400513c

08004fa4 <BSP_I2C4_ReadReg>:
{
 8004fa4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_ReadReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if (HAL_I2C_Mem_Read(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
 8004fa6:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 8004faa:	9200      	str	r2, [sp, #0]
 8004fac:	460a      	mov	r2, r1
 8004fae:	4601      	mov	r1, r0
 8004fb0:	4808      	ldr	r0, [pc, #32]	; (8004fd4 <BSP_I2C4_ReadReg+0x30>)
 8004fb2:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8004fb6:	2301      	movs	r3, #1
 8004fb8:	f001 ffc8 	bl	8006f4c <HAL_I2C_Mem_Read>
 8004fbc:	b140      	cbz	r0, 8004fd0 <BSP_I2C4_ReadReg+0x2c>
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
 8004fbe:	4805      	ldr	r0, [pc, #20]	; (8004fd4 <BSP_I2C4_ReadReg+0x30>)
 8004fc0:	f002 f883 	bl	80070ca <HAL_I2C_GetError>
      ret =  BSP_ERROR_PERIPH_FAILURE;
 8004fc4:	2804      	cmp	r0, #4
 8004fc6:	bf0c      	ite	eq
 8004fc8:	f06f 0065 	mvneq.w	r0, #101	; 0x65
 8004fcc:	f06f 0003 	mvnne.w	r0, #3
}
 8004fd0:	b004      	add	sp, #16
 8004fd2:	bd10      	pop	{r4, pc}
 8004fd4:	2400513c 	.word	0x2400513c

08004fd8 <BSP_GetTick>:
  return (int32_t)HAL_GetTick();
 8004fd8:	f000 bd10 	b.w	80059fc <HAL_GetTick>

08004fdc <MX_QSPI_Init>:
  */
__weak HAL_StatusTypeDef MX_QSPI_Init(QSPI_HandleTypeDef *hQspi, MX_QSPI_Init_t *Config)
{
  /* QSPI initialization */
  /* QSPI freq = SYSCLK /(1 + ClockPrescaler) Mhz */
  hQspi->Instance                = QUADSPI;
 8004fdc:	4a09      	ldr	r2, [pc, #36]	; (8005004 <MX_QSPI_Init+0x28>)
  hQspi->Init.ClockPrescaler     = Config->ClockPrescaler;
  hQspi->Init.FifoThreshold      = 1;
  hQspi->Init.SampleShifting     = Config->SampleShifting;
  hQspi->Init.FlashSize          = Config->FlashSize;
  hQspi->Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_4_CYCLE; /* Min 50ns for nonRead */
  hQspi->Init.ClockMode          = QSPI_CLOCK_MODE_0;
 8004fde:	f44f 7c40 	mov.w	ip, #768	; 0x300
  hQspi->Instance                = QUADSPI;
 8004fe2:	6002      	str	r2, [r0, #0]
  hQspi->Init.ClockPrescaler     = Config->ClockPrescaler;
 8004fe4:	684a      	ldr	r2, [r1, #4]
 8004fe6:	6042      	str	r2, [r0, #4]
  hQspi->Init.FifoThreshold      = 1;
 8004fe8:	2201      	movs	r2, #1
 8004fea:	6082      	str	r2, [r0, #8]
  hQspi->Init.SampleShifting     = Config->SampleShifting;
 8004fec:	688a      	ldr	r2, [r1, #8]
 8004fee:	60c2      	str	r2, [r0, #12]
  hQspi->Init.FlashSize          = Config->FlashSize;
 8004ff0:	680a      	ldr	r2, [r1, #0]
 8004ff2:	6102      	str	r2, [r0, #16]
  hQspi->Init.ClockMode          = QSPI_CLOCK_MODE_0;
 8004ff4:	2200      	movs	r2, #0
 8004ff6:	e9c0 c205 	strd	ip, r2, [r0, #20]
  hQspi->Init.FlashID            = QSPI_FLASH_ID_1;
 8004ffa:	61c2      	str	r2, [r0, #28]
  hQspi->Init.DualFlash          = Config->DualFlashMode;
 8004ffc:	68ca      	ldr	r2, [r1, #12]
 8004ffe:	6202      	str	r2, [r0, #32]

  return HAL_QSPI_Init(hQspi);
 8005000:	f002 bc0e 	b.w	8007820 <HAL_QSPI_Init>
 8005004:	52005000 	.word	0x52005000

08005008 <BSP_QSPI_EnableMemoryMappedMode>:
  *         Only 1 Instance can running MMP mode. And it will lock system at this mode.
  * @param  Instance  QSPI instance
  * @retval BSP status
  */
int32_t BSP_QSPI_EnableMemoryMappedMode(uint32_t Instance)
{
 8005008:	b510      	push	{r4, lr}
  int32_t ret = BSP_ERROR_NONE;

  /* Check if the instance is supported */
  if(Instance >= QSPI_INSTANCES_NUMBER)
 800500a:	b988      	cbnz	r0, 8005030 <BSP_QSPI_EnableMemoryMappedMode+0x28>
  }
  else
  {
    if(QSPI_Ctx[Instance].TransferRate == BSP_QSPI_STR_TRANSFER)
    {
      if(MT25TL01G_EnableMemoryMappedModeSTR(&hqspi, QSPI_Ctx[Instance].InterfaceMode) != MT25TL01G_OK)
 800500c:	4c0a      	ldr	r4, [pc, #40]	; (8005038 <BSP_QSPI_EnableMemoryMappedMode+0x30>)
 800500e:	480b      	ldr	r0, [pc, #44]	; (800503c <BSP_QSPI_EnableMemoryMappedMode+0x34>)
    if(QSPI_Ctx[Instance].TransferRate == BSP_QSPI_STR_TRANSFER)
 8005010:	78a3      	ldrb	r3, [r4, #2]
      if(MT25TL01G_EnableMemoryMappedModeSTR(&hqspi, QSPI_Ctx[Instance].InterfaceMode) != MT25TL01G_OK)
 8005012:	7861      	ldrb	r1, [r4, #1]
    if(QSPI_Ctx[Instance].TransferRate == BSP_QSPI_STR_TRANSFER)
 8005014:	b94b      	cbnz	r3, 800502a <BSP_QSPI_EnableMemoryMappedMode+0x22>
      if(MT25TL01G_EnableMemoryMappedModeSTR(&hqspi, QSPI_Ctx[Instance].InterfaceMode) != MT25TL01G_OK)
 8005016:	f7ff f9a5 	bl	8004364 <MT25TL01G_EnableMemoryMappedModeSTR>
 800501a:	b110      	cbz	r0, 8005022 <BSP_QSPI_EnableMemoryMappedMode+0x1a>
      {
        ret = BSP_ERROR_COMPONENT_FAILURE;
 800501c:	f06f 0004 	mvn.w	r0, #4
    }
  }

  /* Return BSP status */
  return ret;
}
 8005020:	bd10      	pop	{r4, pc}
        QSPI_Ctx[Instance].IsInitialized = QSPI_ACCESS_MMP;
 8005022:	2302      	movs	r3, #2
  int32_t ret = BSP_ERROR_NONE;
 8005024:	2000      	movs	r0, #0
        QSPI_Ctx[Instance].IsInitialized = QSPI_ACCESS_MMP;
 8005026:	7023      	strb	r3, [r4, #0]
 8005028:	e7fa      	b.n	8005020 <BSP_QSPI_EnableMemoryMappedMode+0x18>
      if(MT25TL01G_EnableMemoryMappedModeDTR(&hqspi, QSPI_Ctx[Instance].InterfaceMode) != MT25TL01G_OK)
 800502a:	f7ff f951 	bl	80042d0 <MT25TL01G_EnableMemoryMappedModeDTR>
 800502e:	e7f4      	b.n	800501a <BSP_QSPI_EnableMemoryMappedMode+0x12>
    ret = BSP_ERROR_WRONG_PARAM;
 8005030:	f06f 0001 	mvn.w	r0, #1
  return ret;
 8005034:	e7f4      	b.n	8005020 <BSP_QSPI_EnableMemoryMappedMode+0x18>
 8005036:	bf00      	nop
 8005038:	24005188 	.word	0x24005188
 800503c:	240002bc 	.word	0x240002bc

08005040 <BSP_QSPI_ConfigFlash>:
  * @param  Mode      QSPI mode
  * @param  Rate      QSPI transfer rate
  * @retval BSP status
  */
int32_t BSP_QSPI_ConfigFlash(uint32_t Instance, BSP_QSPI_Interface_t Mode, BSP_QSPI_Transfer_t Rate)
{
 8005040:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005042:	460c      	mov	r4, r1
 8005044:	4617      	mov	r7, r2
  int32_t ret = BSP_ERROR_NONE;

  /* Check if the instance is supported */
  if(Instance >= QSPI_INSTANCES_NUMBER)
 8005046:	bb28      	cbnz	r0, 8005094 <BSP_QSPI_ConfigFlash+0x54>
    ret = BSP_ERROR_WRONG_PARAM;
  }
  else
  {
    /* Check if MMP mode locked ************************************************/
    if(QSPI_Ctx[Instance].IsInitialized == QSPI_ACCESS_MMP)
 8005048:	4d17      	ldr	r5, [pc, #92]	; (80050a8 <BSP_QSPI_ConfigFlash+0x68>)
 800504a:	782b      	ldrb	r3, [r5, #0]
 800504c:	2b02      	cmp	r3, #2
 800504e:	d024      	beq.n	800509a <BSP_QSPI_ConfigFlash+0x5a>
      ret = BSP_ERROR_QSPI_MMP_LOCK_FAILURE;
    }
    else
    {
      /* Setup MCU transfer rate setting ***************************************************/
      hqspi.Init.SampleShifting = (Rate == BSP_QSPI_STR_TRANSFER) ? QSPI_SAMPLE_SHIFTING_HALFCYCLE : QSPI_SAMPLE_SHIFTING_NONE;
 8005050:	2a00      	cmp	r2, #0
 8005052:	4e16      	ldr	r6, [pc, #88]	; (80050ac <BSP_QSPI_ConfigFlash+0x6c>)
 8005054:	bf08      	it	eq
 8005056:	2010      	moveq	r0, #16
 8005058:	60f0      	str	r0, [r6, #12]

      if(HAL_QSPI_Init(&hqspi)!= HAL_OK)
 800505a:	4630      	mov	r0, r6
 800505c:	f002 fbe0 	bl	8007820 <HAL_QSPI_Init>
 8005060:	b9f0      	cbnz	r0, 80050a0 <BSP_QSPI_ConfigFlash+0x60>
        ret = BSP_ERROR_PERIPH_FAILURE;
      }
      else
      {
        /* Setup Flash interface ***************************************************/
        switch(QSPI_Ctx[Instance].InterfaceMode)
 8005062:	786b      	ldrb	r3, [r5, #1]
 8005064:	2b03      	cmp	r3, #3
 8005066:	d10f      	bne.n	8005088 <BSP_QSPI_ConfigFlash+0x48>
        {
        case MT25TL01G_QPI_MODE :               /* 4-4-4 commands */
          if(Mode != MT25TL01G_QPI_MODE)
 8005068:	2c03      	cmp	r4, #3
 800506a:	d105      	bne.n	8005078 <BSP_QSPI_ConfigFlash+0x38>

        /* Update QSPI context if all operations are well done */
        if(ret == BSP_ERROR_NONE)
        {
          /* Update current status parameter *****************************************/
          QSPI_Ctx[Instance].IsInitialized = QSPI_ACCESS_INDIRECT;
 800506c:	2301      	movs	r3, #1
          QSPI_Ctx[Instance].InterfaceMode = Mode;
          QSPI_Ctx[Instance].TransferRate  = Rate;
 800506e:	2000      	movs	r0, #0
          QSPI_Ctx[Instance].InterfaceMode = Mode;
 8005070:	706c      	strb	r4, [r5, #1]
          QSPI_Ctx[Instance].IsInitialized = QSPI_ACCESS_INDIRECT;
 8005072:	702b      	strb	r3, [r5, #0]
          QSPI_Ctx[Instance].TransferRate  = Rate;
 8005074:	70af      	strb	r7, [r5, #2]
    }
  }

  /* Return BSP status */
  return ret;
}
 8005076:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            if(MT25TL01G_ExitQPIMode(&hqspi) != MT25TL01G_OK)
 8005078:	4630      	mov	r0, r6
 800507a:	f7ff f90d 	bl	8004298 <MT25TL01G_ExitQPIMode>
 800507e:	2800      	cmp	r0, #0
 8005080:	d0f4      	beq.n	800506c <BSP_QSPI_ConfigFlash+0x2c>
              ret = BSP_ERROR_COMPONENT_FAILURE;
 8005082:	f06f 0004 	mvn.w	r0, #4
 8005086:	e7f6      	b.n	8005076 <BSP_QSPI_ConfigFlash+0x36>
          if(Mode == MT25TL01G_QPI_MODE)
 8005088:	2c03      	cmp	r4, #3
 800508a:	d1ef      	bne.n	800506c <BSP_QSPI_ConfigFlash+0x2c>
            if(MT25TL01G_EnterQPIMode(&hqspi) != MT25TL01G_OK)
 800508c:	4630      	mov	r0, r6
 800508e:	f7ff f8e7 	bl	8004260 <MT25TL01G_EnterQPIMode>
 8005092:	e7f4      	b.n	800507e <BSP_QSPI_ConfigFlash+0x3e>
    ret = BSP_ERROR_WRONG_PARAM;
 8005094:	f06f 0001 	mvn.w	r0, #1
 8005098:	e7ed      	b.n	8005076 <BSP_QSPI_ConfigFlash+0x36>
      ret = BSP_ERROR_QSPI_MMP_LOCK_FAILURE;
 800509a:	f06f 0019 	mvn.w	r0, #25
 800509e:	e7ea      	b.n	8005076 <BSP_QSPI_ConfigFlash+0x36>
        ret = BSP_ERROR_PERIPH_FAILURE;
 80050a0:	f06f 0003 	mvn.w	r0, #3
  return ret;
 80050a4:	e7e7      	b.n	8005076 <BSP_QSPI_ConfigFlash+0x36>
 80050a6:	bf00      	nop
 80050a8:	24005188 	.word	0x24005188
 80050ac:	240002bc 	.word	0x240002bc

080050b0 <BSP_QSPI_Init>:
{
 80050b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80050b4:	460d      	mov	r5, r1
 80050b6:	b0a4      	sub	sp, #144	; 0x90
  if(Instance >= QSPI_INSTANCES_NUMBER)
 80050b8:	4604      	mov	r4, r0
 80050ba:	2800      	cmp	r0, #0
 80050bc:	f040 81ac 	bne.w	8005418 <BSP_QSPI_Init+0x368>
    if(QSPI_Ctx[Instance].IsInitialized == QSPI_ACCESS_NONE)
 80050c0:	4e03      	ldr	r6, [pc, #12]	; (80050d0 <BSP_QSPI_Init+0x20>)
 80050c2:	7833      	ldrb	r3, [r6, #0]
 80050c4:	b133      	cbz	r3, 80050d4 <BSP_QSPI_Init+0x24>
  int32_t ret = BSP_ERROR_NONE;
 80050c6:	2000      	movs	r0, #0
}
 80050c8:	b024      	add	sp, #144	; 0x90
 80050ca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80050ce:	bf00      	nop
 80050d0:	24005188 	.word	0x24005188
{
  GPIO_InitTypeDef gpio_init_structure;

  /*##-1- Enable peripherals and GPIO Clocks #################################*/
  /* Enable the QuadSPI memory interface clock */
  QSPI_CLK_ENABLE();
 80050d4:	4bc2      	ldr	r3, [pc, #776]	; (80053e0 <BSP_QSPI_Init+0x330>)
  QSPI_BK2_D3_GPIO_CLK_ENABLE();

  /*##-2- Configure peripheral GPIO ##########################################*/
  /* QSPI CLK GPIO pin configuration  */
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 80050d6:	f04f 0904 	mov.w	r9, #4
  gpio_init_structure.Speed     = GPIO_SPEED_FREQ_VERY_HIGH;
  gpio_init_structure.Pull      = GPIO_NOPULL;
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 80050da:	2709      	movs	r7, #9
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 80050dc:	a916      	add	r1, sp, #88	; 0x58
  QSPI_CLK_ENABLE();
 80050de:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4

  /* QSPI CS GPIO pin configuration  */
  gpio_init_structure.Pin       = QSPI_BK1_CS_PIN;
 80050e2:	f04f 0840 	mov.w	r8, #64	; 0x40
  gpio_init_structure.Pull      = GPIO_PULLUP;
  gpio_init_structure.Alternate = GPIO_AF10_QUADSPI;
 80050e6:	f04f 0a0a 	mov.w	sl, #10
  QSPI_CLK_ENABLE();
 80050ea:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80050ee:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
 80050f2:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 80050f6:	f402 4280 	and.w	r2, r2, #16384	; 0x4000
 80050fa:	9201      	str	r2, [sp, #4]
 80050fc:	9a01      	ldr	r2, [sp, #4]
  QSPI_FORCE_RESET();
 80050fe:	6fda      	ldr	r2, [r3, #124]	; 0x7c
 8005100:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8005104:	67da      	str	r2, [r3, #124]	; 0x7c
  QSPI_RELEASE_RESET();
 8005106:	6fda      	ldr	r2, [r3, #124]	; 0x7c
 8005108:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800510c:	67da      	str	r2, [r3, #124]	; 0x7c
  QSPI_CLK_GPIO_CLK_ENABLE();
 800510e:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8005112:	f042 0202 	orr.w	r2, r2, #2
 8005116:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 800511a:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 800511e:	f002 0202 	and.w	r2, r2, #2
 8005122:	9202      	str	r2, [sp, #8]
 8005124:	9a02      	ldr	r2, [sp, #8]
  QSPI_BK1_CS_GPIO_CLK_ENABLE();
 8005126:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 800512a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800512e:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8005132:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8005136:	f002 0240 	and.w	r2, r2, #64	; 0x40
 800513a:	9203      	str	r2, [sp, #12]
 800513c:	9a03      	ldr	r2, [sp, #12]
  QSPI_BK1_D0_GPIO_CLK_ENABLE();
 800513e:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8005142:	f042 0208 	orr.w	r2, r2, #8
 8005146:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 800514a:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 800514e:	f002 0208 	and.w	r2, r2, #8
 8005152:	9204      	str	r2, [sp, #16]
 8005154:	9a04      	ldr	r2, [sp, #16]
  QSPI_BK1_D1_GPIO_CLK_ENABLE();
 8005156:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 800515a:	f042 0220 	orr.w	r2, r2, #32
 800515e:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8005162:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8005166:	f002 0220 	and.w	r2, r2, #32
 800516a:	9205      	str	r2, [sp, #20]
 800516c:	9a05      	ldr	r2, [sp, #20]
  QSPI_BK1_D2_GPIO_CLK_ENABLE();
 800516e:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8005172:	f042 0220 	orr.w	r2, r2, #32
 8005176:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 800517a:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 800517e:	f002 0220 	and.w	r2, r2, #32
 8005182:	9206      	str	r2, [sp, #24]
 8005184:	9a06      	ldr	r2, [sp, #24]
  QSPI_BK1_D3_GPIO_CLK_ENABLE();
 8005186:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 800518a:	f042 0220 	orr.w	r2, r2, #32
 800518e:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8005192:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8005196:	f002 0220 	and.w	r2, r2, #32
 800519a:	9207      	str	r2, [sp, #28]
 800519c:	9a07      	ldr	r2, [sp, #28]
  QSPI_BK2_CS_GPIO_CLK_ENABLE();
 800519e:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80051a2:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80051a6:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 80051aa:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80051ae:	f002 0240 	and.w	r2, r2, #64	; 0x40
 80051b2:	9208      	str	r2, [sp, #32]
 80051b4:	9a08      	ldr	r2, [sp, #32]
  QSPI_BK2_D0_GPIO_CLK_ENABLE();
 80051b6:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80051ba:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80051be:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 80051c2:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80051c6:	f002 0280 	and.w	r2, r2, #128	; 0x80
 80051ca:	9209      	str	r2, [sp, #36]	; 0x24
 80051cc:	9a09      	ldr	r2, [sp, #36]	; 0x24
  QSPI_BK2_D1_GPIO_CLK_ENABLE();
 80051ce:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80051d2:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80051d6:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 80051da:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80051de:	f002 0280 	and.w	r2, r2, #128	; 0x80
 80051e2:	920a      	str	r2, [sp, #40]	; 0x28
 80051e4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  QSPI_BK2_D2_GPIO_CLK_ENABLE();
 80051e6:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80051ea:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80051ee:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 80051f2:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 80051f6:	f002 0240 	and.w	r2, r2, #64	; 0x40
 80051fa:	920b      	str	r2, [sp, #44]	; 0x2c
 80051fc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  QSPI_BK2_D3_GPIO_CLK_ENABLE();
 80051fe:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8005202:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8005206:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 800520a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800520e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005212:	930c      	str	r3, [sp, #48]	; 0x30
 8005214:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 8005216:	2302      	movs	r3, #2
 8005218:	e9cd 9316 	strd	r9, r3, [sp, #88]	; 0x58
  gpio_init_structure.Speed     = GPIO_SPEED_FREQ_VERY_HIGH;
 800521c:	2303      	movs	r3, #3
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 800521e:	971a      	str	r7, [sp, #104]	; 0x68
  gpio_init_structure.Pull      = GPIO_NOPULL;
 8005220:	e9cd 0318 	strd	r0, r3, [sp, #96]	; 0x60
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 8005224:	486f      	ldr	r0, [pc, #444]	; (80053e4 <BSP_QSPI_Init+0x334>)
 8005226:	f001 fa2d 	bl	8006684 <HAL_GPIO_Init>
  gpio_init_structure.Pull      = GPIO_PULLUP;
 800522a:	2301      	movs	r3, #1
  HAL_GPIO_Init(QSPI_BK1_CS_GPIO_PORT, &gpio_init_structure);
 800522c:	a916      	add	r1, sp, #88	; 0x58
 800522e:	486e      	ldr	r0, [pc, #440]	; (80053e8 <BSP_QSPI_Init+0x338>)
  gpio_init_structure.Pull      = GPIO_PULLUP;
 8005230:	9318      	str	r3, [sp, #96]	; 0x60
  gpio_init_structure.Pin       = QSPI_BK1_CS_PIN;
 8005232:	f8cd 8058 	str.w	r8, [sp, #88]	; 0x58
  gpio_init_structure.Alternate = GPIO_AF10_QUADSPI;
 8005236:	f8cd a068 	str.w	sl, [sp, #104]	; 0x68
  HAL_GPIO_Init(QSPI_BK1_CS_GPIO_PORT, &gpio_init_structure);
 800523a:	f001 fa23 	bl	8006684 <HAL_GPIO_Init>

  /* QSPI D0 GPIO pin configuration  */
  gpio_init_structure.Pin       = QSPI_BK1_D0_PIN;
 800523e:	f44f 6300 	mov.w	r3, #2048	; 0x800
  gpio_init_structure.Pull      = GPIO_NOPULL;
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
  HAL_GPIO_Init(QSPI_BK1_D0_GPIO_PORT, &gpio_init_structure);
 8005242:	a916      	add	r1, sp, #88	; 0x58
 8005244:	4869      	ldr	r0, [pc, #420]	; (80053ec <BSP_QSPI_Init+0x33c>)
  gpio_init_structure.Pin       = QSPI_BK1_D0_PIN;
 8005246:	9316      	str	r3, [sp, #88]	; 0x58
  gpio_init_structure.Pull      = GPIO_NOPULL;
 8005248:	9418      	str	r4, [sp, #96]	; 0x60
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 800524a:	971a      	str	r7, [sp, #104]	; 0x68
  HAL_GPIO_Init(QSPI_BK1_D0_GPIO_PORT, &gpio_init_structure);
 800524c:	f001 fa1a 	bl	8006684 <HAL_GPIO_Init>

  gpio_init_structure.Pin       = QSPI_BK2_D0_PIN;
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
  HAL_GPIO_Init(QSPI_BK2_D0_GPIO_PORT, &gpio_init_structure);
 8005250:	a916      	add	r1, sp, #88	; 0x58
  gpio_init_structure.Pin       = QSPI_BK2_D0_PIN;
 8005252:	f8cd 9058 	str.w	r9, [sp, #88]	; 0x58
  HAL_GPIO_Init(QSPI_BK2_D0_GPIO_PORT, &gpio_init_structure);
 8005256:	4866      	ldr	r0, [pc, #408]	; (80053f0 <BSP_QSPI_Init+0x340>)

  /* QSPI D1 GPIO pin configuration  */
  gpio_init_structure.Pin       = QSPI_BK1_D1_PIN;
 8005258:	f44f 7900 	mov.w	r9, #512	; 0x200
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 800525c:	971a      	str	r7, [sp, #104]	; 0x68
  HAL_GPIO_Init(QSPI_BK2_D0_GPIO_PORT, &gpio_init_structure);
 800525e:	f001 fa11 	bl	8006684 <HAL_GPIO_Init>
  gpio_init_structure.Alternate = GPIO_AF10_QUADSPI;
  HAL_GPIO_Init(QSPI_BK1_D1_GPIO_PORT, &gpio_init_structure);
 8005262:	a916      	add	r1, sp, #88	; 0x58
 8005264:	4863      	ldr	r0, [pc, #396]	; (80053f4 <BSP_QSPI_Init+0x344>)
  gpio_init_structure.Pin       = QSPI_BK1_D1_PIN;
 8005266:	f8cd 9058 	str.w	r9, [sp, #88]	; 0x58
  gpio_init_structure.Alternate = GPIO_AF10_QUADSPI;
 800526a:	f8cd a068 	str.w	sl, [sp, #104]	; 0x68
  HAL_GPIO_Init(QSPI_BK1_D1_GPIO_PORT, &gpio_init_structure);
 800526e:	f001 fa09 	bl	8006684 <HAL_GPIO_Init>

  gpio_init_structure.Pin       = QSPI_BK2_D1_PIN;
 8005272:	2308      	movs	r3, #8
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
  HAL_GPIO_Init(QSPI_BK2_D1_GPIO_PORT, &gpio_init_structure);
 8005274:	a916      	add	r1, sp, #88	; 0x58
 8005276:	485e      	ldr	r0, [pc, #376]	; (80053f0 <BSP_QSPI_Init+0x340>)
  gpio_init_structure.Pin       = QSPI_BK2_D1_PIN;
 8005278:	9316      	str	r3, [sp, #88]	; 0x58
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 800527a:	971a      	str	r7, [sp, #104]	; 0x68
  HAL_GPIO_Init(QSPI_BK2_D1_GPIO_PORT, &gpio_init_structure);
 800527c:	f001 fa02 	bl	8006684 <HAL_GPIO_Init>

  /* QSPI D2 GPIO pin configuration  */
  gpio_init_structure.Pin       = QSPI_BK1_D2_PIN;
 8005280:	2380      	movs	r3, #128	; 0x80
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
  HAL_GPIO_Init(QSPI_BK1_D2_GPIO_PORT, &gpio_init_structure);
 8005282:	a916      	add	r1, sp, #88	; 0x58
 8005284:	485b      	ldr	r0, [pc, #364]	; (80053f4 <BSP_QSPI_Init+0x344>)
  gpio_init_structure.Pin       = QSPI_BK1_D2_PIN;
 8005286:	9316      	str	r3, [sp, #88]	; 0x58
  gpio_init_structure.Alternate = GPIO_AF9_QUADSPI;
 8005288:	971a      	str	r7, [sp, #104]	; 0x68
  HAL_GPIO_Init(QSPI_BK1_D2_GPIO_PORT, &gpio_init_structure);
 800528a:	f001 f9fb 	bl	8006684 <HAL_GPIO_Init>

  gpio_init_structure.Pin       = QSPI_BK2_D2_PIN;
  HAL_GPIO_Init(QSPI_BK2_D2_GPIO_PORT, &gpio_init_structure);
 800528e:	a916      	add	r1, sp, #88	; 0x58
 8005290:	4855      	ldr	r0, [pc, #340]	; (80053e8 <BSP_QSPI_Init+0x338>)
  gpio_init_structure.Pin       = QSPI_BK2_D2_PIN;
 8005292:	f8cd 9058 	str.w	r9, [sp, #88]	; 0x58
  HAL_GPIO_Init(QSPI_BK2_D2_GPIO_PORT, &gpio_init_structure);
 8005296:	f001 f9f5 	bl	8006684 <HAL_GPIO_Init>

  /* QSPI D3 GPIO pin configuration  */
  gpio_init_structure.Pin       = QSPI_BK1_D3_PIN;
  HAL_GPIO_Init(QSPI_BK1_D3_GPIO_PORT, &gpio_init_structure);
 800529a:	a916      	add	r1, sp, #88	; 0x58
 800529c:	4855      	ldr	r0, [pc, #340]	; (80053f4 <BSP_QSPI_Init+0x344>)
  gpio_init_structure.Pin       = QSPI_BK1_D3_PIN;
 800529e:	f8cd 8058 	str.w	r8, [sp, #88]	; 0x58
  HAL_GPIO_Init(QSPI_BK1_D3_GPIO_PORT, &gpio_init_structure);
 80052a2:	f001 f9ef 	bl	8006684 <HAL_GPIO_Init>

  gpio_init_structure.Pin       = QSPI_BK2_D3_PIN;
 80052a6:	f44f 4380 	mov.w	r3, #16384	; 0x4000
  HAL_GPIO_Init(QSPI_BK2_D3_GPIO_PORT, &gpio_init_structure);
 80052aa:	a916      	add	r1, sp, #88	; 0x58
 80052ac:	484e      	ldr	r0, [pc, #312]	; (80053e8 <BSP_QSPI_Init+0x338>)
  gpio_init_structure.Pin       = QSPI_BK2_D3_PIN;
 80052ae:	9316      	str	r3, [sp, #88]	; 0x58
  HAL_GPIO_Init(QSPI_BK2_D3_GPIO_PORT, &gpio_init_structure);
 80052b0:	f001 f9e8 	bl	8006684 <HAL_GPIO_Init>

  /*##-3- Configure the NVIC for QSPI #########################################*/
  /* NVIC configuration for QSPI interrupt */
  HAL_NVIC_SetPriority(QUADSPI_IRQn, 0x0F, 0);
 80052b4:	4622      	mov	r2, r4
 80052b6:	210f      	movs	r1, #15
 80052b8:	205c      	movs	r0, #92	; 0x5c
 80052ba:	f000 fbcf 	bl	8005a5c <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(QUADSPI_IRQn);
 80052be:	205c      	movs	r0, #92	; 0x5c
 80052c0:	f000 fbfe 	bl	8005ac0 <HAL_NVIC_EnableIRQ>
        (void)MT25TL01G_GetFlashInfo(&pInfo);
 80052c4:	a811      	add	r0, sp, #68	; 0x44
 80052c6:	f7fe ff22 	bl	800410e <MT25TL01G_GetFlashInfo>
        qspi_init.ClockPrescaler = PrescalerTab[Init->TransferRate];
 80052ca:	786a      	ldrb	r2, [r5, #1]
 80052cc:	4b4a      	ldr	r3, [pc, #296]	; (80053f8 <BSP_QSPI_Init+0x348>)
        qspi_init.DualFlashMode  = QSPI_DUALFLASH_ENABLE;
 80052ce:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
        qspi_init.ClockPrescaler = PrescalerTab[Init->TransferRate];
 80052d2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80052d6:	930e      	str	r3, [sp, #56]	; 0x38
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 80052d8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80052da:	fa93 f3a3 	rbit	r3, r3
        qspi_init.SampleShifting = (Init->TransferRate == BSP_QSPI_STR_TRANSFER) ? QSPI_SAMPLE_SHIFTING_HALFCYCLE : QSPI_SAMPLE_SHIFTING_NONE;
 80052de:	2a00      	cmp	r2, #0
  return __builtin_clz(value);
 80052e0:	fab3 f383 	clz	r3, r3
        if(MX_QSPI_Init(&hqspi, &qspi_init) != HAL_OK)
 80052e4:	a90d      	add	r1, sp, #52	; 0x34
 80052e6:	4845      	ldr	r0, [pc, #276]	; (80053fc <BSP_QSPI_Init+0x34c>)
        qspi_init.SampleShifting = (Init->TransferRate == BSP_QSPI_STR_TRANSFER) ? QSPI_SAMPLE_SHIFTING_HALFCYCLE : QSPI_SAMPLE_SHIFTING_NONE;
 80052e8:	bf08      	it	eq
 80052ea:	2410      	moveq	r4, #16
        qspi_init.FlashSize      = (uint32_t)POSITION_VAL((uint32_t)pInfo.FlashSize) - 1U;
 80052ec:	3b01      	subs	r3, #1
        qspi_init.SampleShifting = (Init->TransferRate == BSP_QSPI_STR_TRANSFER) ? QSPI_SAMPLE_SHIFTING_HALFCYCLE : QSPI_SAMPLE_SHIFTING_NONE;
 80052ee:	940f      	str	r4, [sp, #60]	; 0x3c
        qspi_init.FlashSize      = (uint32_t)POSITION_VAL((uint32_t)pInfo.FlashSize) - 1U;
 80052f0:	930d      	str	r3, [sp, #52]	; 0x34
        if(MX_QSPI_Init(&hqspi, &qspi_init) != HAL_OK)
 80052f2:	f7ff fe73 	bl	8004fdc <MX_QSPI_Init>
 80052f6:	2800      	cmp	r0, #0
 80052f8:	f040 8091 	bne.w	800541e <BSP_QSPI_Init+0x36e>
static int32_t QSPI_ResetMemory(uint32_t Instance)
{
  int32_t ret = BSP_ERROR_NONE;

  /* Send RESET ENABLE command in QPI mode (QUAD I/Os, 4-4-4) */
  if(MT25TL01G_ResetEnable(&hqspi, MT25TL01G_QPI_MODE) != MT25TL01G_OK)
 80052fc:	2103      	movs	r1, #3
 80052fe:	483f      	ldr	r0, [pc, #252]	; (80053fc <BSP_QSPI_Init+0x34c>)
 8005300:	f7ff f876 	bl	80043f0 <MT25TL01G_ResetEnable>
 8005304:	2800      	cmp	r0, #0
 8005306:	d17c      	bne.n	8005402 <BSP_QSPI_Init+0x352>
  {
    ret =BSP_ERROR_COMPONENT_FAILURE;
  }/* Send RESET memory command in QPI mode (QUAD I/Os, 4-4-4) */
  else if(MT25TL01G_ResetMemory(&hqspi, MT25TL01G_QPI_MODE) != MT25TL01G_OK)
 8005308:	2103      	movs	r1, #3
 800530a:	483c      	ldr	r0, [pc, #240]	; (80053fc <BSP_QSPI_Init+0x34c>)
 800530c:	f7ff f891 	bl	8004432 <MT25TL01G_ResetMemory>
 8005310:	2800      	cmp	r0, #0
 8005312:	d176      	bne.n	8005402 <BSP_QSPI_Init+0x352>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }/* Wait Flash ready */
  else if(MT25TL01G_AutoPollingMemReady(&hqspi, QSPI_Ctx[Instance].InterfaceMode) != MT25TL01G_OK)
 8005314:	7871      	ldrb	r1, [r6, #1]
 8005316:	4839      	ldr	r0, [pc, #228]	; (80053fc <BSP_QSPI_Init+0x34c>)
 8005318:	f7fe ff0a 	bl	8004130 <MT25TL01G_AutoPollingMemReady>
 800531c:	4601      	mov	r1, r0
 800531e:	2800      	cmp	r0, #0
 8005320:	d16f      	bne.n	8005402 <BSP_QSPI_Init+0x352>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }/* Send RESET ENABLE command in SPI mode (1-1-1) */
  else if(MT25TL01G_ResetEnable(&hqspi, BSP_QSPI_SPI_MODE) != MT25TL01G_OK)
 8005322:	4836      	ldr	r0, [pc, #216]	; (80053fc <BSP_QSPI_Init+0x34c>)
 8005324:	f7ff f864 	bl	80043f0 <MT25TL01G_ResetEnable>
 8005328:	4601      	mov	r1, r0
 800532a:	2800      	cmp	r0, #0
 800532c:	d169      	bne.n	8005402 <BSP_QSPI_Init+0x352>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }/* Send RESET memory command in SPI mode (1-1-1) */
  else if(MT25TL01G_ResetMemory(&hqspi, BSP_QSPI_SPI_MODE) != MT25TL01G_OK)
 800532e:	4833      	ldr	r0, [pc, #204]	; (80053fc <BSP_QSPI_Init+0x34c>)
 8005330:	f7ff f87f 	bl	8004432 <MT25TL01G_ResetMemory>
 8005334:	4601      	mov	r1, r0
 8005336:	2800      	cmp	r0, #0
 8005338:	d163      	bne.n	8005402 <BSP_QSPI_Init+0x352>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }
  else
  {
    QSPI_Ctx[Instance].IsInitialized = QSPI_ACCESS_INDIRECT;  /* After reset S/W setting to indirect access   */
 800533a:	2301      	movs	r3, #1
    QSPI_Ctx[Instance].InterfaceMode = BSP_QSPI_SPI_MODE;     /* After reset H/W back to SPI mode by default  */
    QSPI_Ctx[Instance].TransferRate  = BSP_QSPI_STR_TRANSFER; /* After reset S/W setting to STR mode          */
 800533c:	70b0      	strb	r0, [r6, #2]
        else if(MT25TL01G_AutoPollingMemReady(&hqspi, QSPI_Ctx[Instance].InterfaceMode) != MT25TL01G_OK)
 800533e:	482f      	ldr	r0, [pc, #188]	; (80053fc <BSP_QSPI_Init+0x34c>)
    QSPI_Ctx[Instance].IsInitialized = QSPI_ACCESS_INDIRECT;  /* After reset S/W setting to indirect access   */
 8005340:	8033      	strh	r3, [r6, #0]
        else if(MT25TL01G_AutoPollingMemReady(&hqspi, QSPI_Ctx[Instance].InterfaceMode) != MT25TL01G_OK)
 8005342:	f7fe fef5 	bl	8004130 <MT25TL01G_AutoPollingMemReady>
 8005346:	2800      	cmp	r0, #0
 8005348:	d15b      	bne.n	8005402 <BSP_QSPI_Init+0x352>
        else if(MT25TL01G_Enter4BytesAddressMode(&hqspi, QSPI_Ctx[Instance].InterfaceMode) != MT25TL01G_OK)
 800534a:	7871      	ldrb	r1, [r6, #1]
 800534c:	482b      	ldr	r0, [pc, #172]	; (80053fc <BSP_QSPI_Init+0x34c>)
 800534e:	f7fe ff5e 	bl	800420e <MT25TL01G_Enter4BytesAddressMode>
 8005352:	2800      	cmp	r0, #0
 8005354:	d155      	bne.n	8005402 <BSP_QSPI_Init+0x352>
    int32_t ret= BSP_ERROR_NONE;
    QSPI_CommandTypeDef s_command;
  uint16_t reg=0;

  /* Initialize the read volatile configuration register command */
  s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
 8005356:	f44f 7340 	mov.w	r3, #768	; 0x300
  uint16_t reg=0;
 800535a:	f8ad 0002 	strh.w	r0, [sp, #2]
  s_command.Instruction       = MT25TL01G_READ_VOL_CFG_REG_CMD;
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
  s_command.DataMode          = QSPI_DATA_4_LINES;
  s_command.DummyCycles       = 0;
 800535e:	901b      	str	r0, [sp, #108]	; 0x6c
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  /* Configure the command */
  if (HAL_QSPI_Command(&hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8005360:	f241 3288 	movw	r2, #5000	; 0x1388
  s_command.InstructionMode   = QSPI_INSTRUCTION_4_LINES;
 8005364:	931c      	str	r3, [sp, #112]	; 0x70
  s_command.Instruction       = MT25TL01G_READ_VOL_CFG_REG_CMD;
 8005366:	2385      	movs	r3, #133	; 0x85
  if (HAL_QSPI_Command(&hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8005368:	a916      	add	r1, sp, #88	; 0x58
  s_command.Instruction       = MT25TL01G_READ_VOL_CFG_REG_CMD;
 800536a:	9316      	str	r3, [sp, #88]	; 0x58
  s_command.DataMode          = QSPI_DATA_4_LINES;
 800536c:	f04f 7340 	mov.w	r3, #50331648	; 0x3000000
 8005370:	931f      	str	r3, [sp, #124]	; 0x7c
  s_command.NbData            = 2;
 8005372:	2302      	movs	r3, #2
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8005374:	e9cd 001d 	strd	r0, r0, [sp, #116]	; 0x74
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
 8005378:	e9cd 3020 	strd	r3, r0, [sp, #128]	; 0x80
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 800537c:	e9cd 0022 	strd	r0, r0, [sp, #136]	; 0x88
  if (HAL_QSPI_Command(&hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8005380:	481e      	ldr	r0, [pc, #120]	; (80053fc <BSP_QSPI_Init+0x34c>)
 8005382:	f002 fa9b 	bl	80078bc <HAL_QSPI_Command>
 8005386:	2800      	cmp	r0, #0
 8005388:	d13b      	bne.n	8005402 <BSP_QSPI_Init+0x352>
  {
    return BSP_ERROR_COMPONENT_FAILURE;
  }

  /* Reception of the data */
  if (HAL_QSPI_Receive(&hqspi, (uint8_t *)(&reg), HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800538a:	f241 3288 	movw	r2, #5000	; 0x1388
 800538e:	f10d 0102 	add.w	r1, sp, #2
 8005392:	481a      	ldr	r0, [pc, #104]	; (80053fc <BSP_QSPI_Init+0x34c>)
 8005394:	f002 fb2e 	bl	80079f4 <HAL_QSPI_Receive>
 8005398:	bb98      	cbnz	r0, 8005402 <BSP_QSPI_Init+0x352>
  {
    return BSP_ERROR_COMPONENT_FAILURE;
  }

  /* Enable write operations */
  if (MT25TL01G_WriteEnable(&hqspi, QSPI_Ctx[Instance].InterfaceMode) != MT25TL01G_OK)
 800539a:	7871      	ldrb	r1, [r6, #1]
 800539c:	4817      	ldr	r0, [pc, #92]	; (80053fc <BSP_QSPI_Init+0x34c>)
 800539e:	f7fe fef2 	bl	8004186 <MT25TL01G_WriteEnable>
 80053a2:	bb70      	cbnz	r0, 8005402 <BSP_QSPI_Init+0x352>
  {
    return BSP_ERROR_COMPONENT_FAILURE;
  }

  /* Update volatile configuration register (with new dummy cycles) */
  s_command.Instruction = MT25TL01G_WRITE_VOL_CFG_REG_CMD;
 80053a4:	2381      	movs	r3, #129	; 0x81
  MODIFY_REG(reg, 0xF0F0, ((MT25TL01G_DUMMY_CYCLES_READ_QUAD << 4) |
                               (MT25TL01G_DUMMY_CYCLES_READ_QUAD << 12)));

  /* Configure the write volatile configuration register command */
  if (HAL_QSPI_Command(&hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80053a6:	f241 3288 	movw	r2, #5000	; 0x1388
 80053aa:	a916      	add	r1, sp, #88	; 0x58
 80053ac:	4813      	ldr	r0, [pc, #76]	; (80053fc <BSP_QSPI_Init+0x34c>)
  s_command.Instruction = MT25TL01G_WRITE_VOL_CFG_REG_CMD;
 80053ae:	9316      	str	r3, [sp, #88]	; 0x58
  MODIFY_REG(reg, 0xF0F0, ((MT25TL01G_DUMMY_CYCLES_READ_QUAD << 4) |
 80053b0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80053b4:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80053b8:	051b      	lsls	r3, r3, #20
 80053ba:	0d1b      	lsrs	r3, r3, #20
 80053bc:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80053c0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80053c4:	f8ad 3002 	strh.w	r3, [sp, #2]
  if (HAL_QSPI_Command(&hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80053c8:	f002 fa78 	bl	80078bc <HAL_QSPI_Command>
 80053cc:	b9c8      	cbnz	r0, 8005402 <BSP_QSPI_Init+0x352>
  {
    return BSP_ERROR_COMPONENT_FAILURE;
  }

  /* Transmission of the data */
  if (HAL_QSPI_Transmit(&hqspi, (uint8_t *)(&reg), HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80053ce:	f241 3288 	movw	r2, #5000	; 0x1388
 80053d2:	f10d 0102 	add.w	r1, sp, #2
 80053d6:	4809      	ldr	r0, [pc, #36]	; (80053fc <BSP_QSPI_Init+0x34c>)
 80053d8:	f002 fab3 	bl	8007942 <HAL_QSPI_Transmit>
 80053dc:	e010      	b.n	8005400 <BSP_QSPI_Init+0x350>
 80053de:	bf00      	nop
 80053e0:	58024400 	.word	0x58024400
 80053e4:	58020400 	.word	0x58020400
 80053e8:	58021800 	.word	0x58021800
 80053ec:	58020c00 	.word	0x58020c00
 80053f0:	58021c00 	.word	0x58021c00
 80053f4:	58021400 	.word	0x58021400
 80053f8:	08022588 	.word	0x08022588
 80053fc:	240002bc 	.word	0x240002bc
 8005400:	b110      	cbz	r0, 8005408 <BSP_QSPI_Init+0x358>
            ret = BSP_ERROR_COMPONENT_FAILURE;
 8005402:	f06f 0004 	mvn.w	r0, #4
 8005406:	e65f      	b.n	80050c8 <BSP_QSPI_Init+0x18>
          if(BSP_QSPI_ConfigFlash(Instance, Init->InterfaceMode, Init->TransferRate) != BSP_ERROR_NONE)
 8005408:	786a      	ldrb	r2, [r5, #1]
 800540a:	7829      	ldrb	r1, [r5, #0]
 800540c:	f7ff fe18 	bl	8005040 <BSP_QSPI_ConfigFlash>
 8005410:	2800      	cmp	r0, #0
 8005412:	f43f ae58 	beq.w	80050c6 <BSP_QSPI_Init+0x16>
 8005416:	e7f4      	b.n	8005402 <BSP_QSPI_Init+0x352>
    ret = BSP_ERROR_WRONG_PARAM;
 8005418:	f06f 0001 	mvn.w	r0, #1
 800541c:	e654      	b.n	80050c8 <BSP_QSPI_Init+0x18>
          ret = BSP_ERROR_PERIPH_FAILURE;
 800541e:	f06f 0003 	mvn.w	r0, #3
  return ret;
 8005422:	e651      	b.n	80050c8 <BSP_QSPI_Init+0x18>

08005424 <BSP_SDRAM_DeInit>:
  * @brief  DeInitializes the SDRAM device.
  * @param Instance  SDRAM Instance
  * @retval BSP status
  */
int32_t BSP_SDRAM_DeInit(uint32_t Instance)
{
 8005424:	b510      	push	{r4, lr}
  int32_t ret = BSP_ERROR_NONE;

  if(Instance >=SDRAM_INSTANCES_NBR)
 8005426:	4604      	mov	r4, r0
 8005428:	b970      	cbnz	r0, 8005448 <BSP_SDRAM_DeInit+0x24>
    ret =  BSP_ERROR_WRONG_PARAM;
  }
  else
  {
    /* SDRAM device de-initialization */
    hsdram[Instance].Instance = FMC_SDRAM_DEVICE;
 800542a:	4b09      	ldr	r3, [pc, #36]	; (8005450 <BSP_SDRAM_DeInit+0x2c>)
 800542c:	4809      	ldr	r0, [pc, #36]	; (8005454 <BSP_SDRAM_DeInit+0x30>)
 800542e:	6003      	str	r3, [r0, #0]

    (void)HAL_SDRAM_DeInit(&hsdram[Instance]);
 8005430:	f003 fed4 	bl	80091dc <HAL_SDRAM_DeInit>
  static MDMA_HandleTypeDef mdma_handle;

  /* Prevent unused argument(s) compilation warning */
  UNUSED(hsdram);
  /* Disable NVIC configuration for MDMA interrupt */
  HAL_NVIC_DisableIRQ(SDRAM_MDMAx_IRQn);
 8005434:	207a      	movs	r0, #122	; 0x7a
 8005436:	f000 fb51 	bl	8005adc <HAL_NVIC_DisableIRQ>

  /* Deinitialize the stream for new transfer */
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
 800543a:	4807      	ldr	r0, [pc, #28]	; (8005458 <BSP_SDRAM_DeInit+0x34>)
 800543c:	4b07      	ldr	r3, [pc, #28]	; (800545c <BSP_SDRAM_DeInit+0x38>)
 800543e:	6003      	str	r3, [r0, #0]
  (void)HAL_MDMA_DeInit(&mdma_handle);
 8005440:	f002 f8bb 	bl	80075ba <HAL_MDMA_DeInit>
    ret = BSP_ERROR_NONE;
 8005444:	4620      	mov	r0, r4
}
 8005446:	bd10      	pop	{r4, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
 8005448:	f06f 0001 	mvn.w	r0, #1
  return ret;
 800544c:	e7fb      	b.n	8005446 <BSP_SDRAM_DeInit+0x22>
 800544e:	bf00      	nop
 8005450:	52004140 	.word	0x52004140
 8005454:	24005194 	.word	0x24005194
 8005458:	240051c8 	.word	0x240051c8
 800545c:	52000040 	.word	0x52000040

08005460 <MX_SDRAM_Init>:
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
 8005460:	2201      	movs	r2, #1
 8005462:	4915      	ldr	r1, [pc, #84]	; (80054b8 <MX_SDRAM_Init+0x58>)
  hsdram->Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
 8005464:	4b15      	ldr	r3, [pc, #84]	; (80054bc <MX_SDRAM_Init+0x5c>)
{
 8005466:	b510      	push	{r4, lr}
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
 8005468:	e9c0 1200 	strd	r1, r2, [r0]
  hSdram->Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_9;
 800546c:	6082      	str	r2, [r0, #8]
  hSdram->Init.MemoryDataWidth    = FMC_SDRAM_MEM_BUS_WIDTH_32;
 800546e:	2104      	movs	r1, #4
 8005470:	2220      	movs	r2, #32
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
 8005472:	2440      	movs	r4, #64	; 0x40
{
 8005474:	b088      	sub	sp, #32
  hSdram->Init.MemoryDataWidth    = FMC_SDRAM_MEM_BUS_WIDTH_32;
 8005476:	e9c0 1203 	strd	r1, r2, [r0, #12]
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
 800547a:	f44f 72c0 	mov.w	r2, #384	; 0x180
 800547e:	e9c0 4205 	strd	r4, r2, [r0, #20]
  hSdram->Init.SDClockPeriod      = FMC_SDRAM_CLOCK_PERIOD_2;
 8005482:	2200      	movs	r2, #0
 8005484:	f44f 6400 	mov.w	r4, #2048	; 0x800
 8005488:	e9c0 2407 	strd	r2, r4, [r0, #28]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
 800548c:	f44f 5480 	mov.w	r4, #4096	; 0x1000
 8005490:	6244      	str	r4, [r0, #36]	; 0x24
  hsdram->Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
 8005492:	629a      	str	r2, [r3, #40]	; 0x28
  sdram_timing.ExitSelfRefreshDelay = 7;
 8005494:	2207      	movs	r2, #7
 8005496:	2302      	movs	r3, #2
  sdram_timing.RowCycleDelay        = 7;
 8005498:	e9cd 1203 	strd	r1, r2, [sp, #12]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
 800549c:	4469      	add	r1, sp
  sdram_timing.RCDDelay             = 2;
 800549e:	9307      	str	r3, [sp, #28]
  sdram_timing.ExitSelfRefreshDelay = 7;
 80054a0:	e9cd 3201 	strd	r3, r2, [sp, #4]
  sdram_timing.RPDelay              = 2;
 80054a4:	e9cd 3305 	strd	r3, r3, [sp, #20]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
 80054a8:	f003 fe70 	bl	800918c <HAL_SDRAM_Init>
}
 80054ac:	3800      	subs	r0, #0
 80054ae:	bf18      	it	ne
 80054b0:	2001      	movne	r0, #1
 80054b2:	b008      	add	sp, #32
 80054b4:	bd10      	pop	{r4, pc}
 80054b6:	bf00      	nop
 80054b8:	52004140 	.word	0x52004140
 80054bc:	24005194 	.word	0x24005194

080054c0 <BSP_SDRAM_Init>:
{
 80054c0:	b5f0      	push	{r4, r5, r6, r7, lr}
  if(Instance >=SDRAM_INSTANCES_NBR)
 80054c2:	4605      	mov	r5, r0
{
 80054c4:	b08f      	sub	sp, #60	; 0x3c
  if(Instance >=SDRAM_INSTANCES_NBR)
 80054c6:	2800      	cmp	r0, #0
 80054c8:	f040 80dd 	bne.w	8005686 <BSP_SDRAM_Init+0x1c6>
  __HAL_RCC_FMC_CLK_ENABLE();
 80054cc:	4b71      	ldr	r3, [pc, #452]	; (8005694 <BSP_SDRAM_Init+0x1d4>)
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
 80054ce:	2703      	movs	r7, #3
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 80054d0:	a909      	add	r1, sp, #36	; 0x24
 80054d2:	4871      	ldr	r0, [pc, #452]	; (8005698 <BSP_SDRAM_Init+0x1d8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 80054d4:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
  mdma_handle.Init.Request                  = MDMA_REQUEST_SW;
 80054d8:	4c70      	ldr	r4, [pc, #448]	; (800569c <BSP_SDRAM_Init+0x1dc>)
  __HAL_RCC_FMC_CLK_ENABLE();
 80054da:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
 80054de:	4e70      	ldr	r6, [pc, #448]	; (80056a0 <BSP_SDRAM_Init+0x1e0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 80054e0:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
 80054e4:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 80054e8:	f402 5280 	and.w	r2, r2, #4096	; 0x1000
 80054ec:	9201      	str	r2, [sp, #4]
 80054ee:	9a01      	ldr	r2, [sp, #4]
  SDRAM_MDMAx_CLK_ENABLE();
 80054f0:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 80054f4:	f042 0201 	orr.w	r2, r2, #1
 80054f8:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
 80054fc:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
 8005500:	f002 0201 	and.w	r2, r2, #1
 8005504:	9202      	str	r2, [sp, #8]
 8005506:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8005508:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 800550c:	f042 0208 	orr.w	r2, r2, #8
 8005510:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8005514:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8005518:	f002 0208 	and.w	r2, r2, #8
 800551c:	9203      	str	r2, [sp, #12]
 800551e:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8005520:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8005524:	f042 0210 	orr.w	r2, r2, #16
 8005528:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 800552c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8005530:	f002 0210 	and.w	r2, r2, #16
 8005534:	9204      	str	r2, [sp, #16]
 8005536:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8005538:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 800553c:	f042 0220 	orr.w	r2, r2, #32
 8005540:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8005544:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8005548:	f002 0220 	and.w	r2, r2, #32
 800554c:	9205      	str	r2, [sp, #20]
 800554e:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8005550:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8005554:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8005558:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 800555c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8005560:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8005564:	9206      	str	r2, [sp, #24]
 8005566:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8005568:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 800556c:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8005570:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
 8005574:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8005578:	f002 0280 	and.w	r2, r2, #128	; 0x80
 800557c:	9207      	str	r2, [sp, #28]
 800557e:	9a07      	ldr	r2, [sp, #28]
  __HAL_RCC_GPIOI_CLK_ENABLE();
 8005580:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
 8005584:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005588:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
  gpio_init_structure.Pull      = GPIO_PULLUP;
 800558c:	2202      	movs	r2, #2
  __HAL_RCC_GPIOI_CLK_ENABLE();
 800558e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8005592:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005596:	9308      	str	r3, [sp, #32]
 8005598:	9b08      	ldr	r3, [sp, #32]
  gpio_init_structure.Pull      = GPIO_PULLUP;
 800559a:	2301      	movs	r3, #1
 800559c:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
 80055a0:	230c      	movs	r3, #12
 80055a2:	e9cd 730c 	strd	r7, r3, [sp, #48]	; 0x30
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 80055a6:	f24c 7303 	movw	r3, #50947	; 0xc703
 80055aa:	9309      	str	r3, [sp, #36]	; 0x24
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 80055ac:	f001 f86a 	bl	8006684 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 80055b0:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 80055b4:	a909      	add	r1, sp, #36	; 0x24
 80055b6:	483b      	ldr	r0, [pc, #236]	; (80056a4 <BSP_SDRAM_Init+0x1e4>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 80055b8:	9309      	str	r3, [sp, #36]	; 0x24
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 80055ba:	f001 f863 	bl	8006684 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 80055be:	f64f 033f 	movw	r3, #63551	; 0xf83f
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 80055c2:	a909      	add	r1, sp, #36	; 0x24
 80055c4:	4838      	ldr	r0, [pc, #224]	; (80056a8 <BSP_SDRAM_Init+0x1e8>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 80055c6:	9309      	str	r3, [sp, #36]	; 0x24
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 80055c8:	f001 f85c 	bl	8006684 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 /*| GPIO_PIN_3 */|\
 80055cc:	f248 1337 	movw	r3, #33079	; 0x8137
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 80055d0:	a909      	add	r1, sp, #36	; 0x24
 80055d2:	4836      	ldr	r0, [pc, #216]	; (80056ac <BSP_SDRAM_Init+0x1ec>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 /*| GPIO_PIN_3 */|\
 80055d4:	9309      	str	r3, [sp, #36]	; 0x24
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 80055d6:	f001 f855 	bl	8006684 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 | GPIO_PIN_8 | GPIO_PIN_9 |\
 80055da:	f64f 73e0 	movw	r3, #65504	; 0xffe0
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 80055de:	a909      	add	r1, sp, #36	; 0x24
 80055e0:	4833      	ldr	r0, [pc, #204]	; (80056b0 <BSP_SDRAM_Init+0x1f0>)
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 | GPIO_PIN_8 | GPIO_PIN_9 |\
 80055e2:	9309      	str	r3, [sp, #36]	; 0x24
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 80055e4:	f001 f84e 	bl	8006684 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 80055e8:	f240 63ff 	movw	r3, #1791	; 0x6ff
  HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 80055ec:	a909      	add	r1, sp, #36	; 0x24
 80055ee:	4831      	ldr	r0, [pc, #196]	; (80056b4 <BSP_SDRAM_Init+0x1f4>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 80055f0:	9309      	str	r3, [sp, #36]	; 0x24
  HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 80055f2:	f001 f847 	bl	8006684 <HAL_GPIO_Init>
  mdma_handle.Init.TransferTriggerMode      = MDMA_BLOCK_TRANSFER;
 80055f6:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 80055fa:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
  mdma_handle.Init.DestinationInc           = MDMA_DEST_INC_WORD;
 80055fe:	f240 2002 	movw	r0, #514	; 0x202
 8005602:	f640 0208 	movw	r2, #2056	; 0x808
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
 8005606:	6334      	str	r4, [r6, #48]	; 0x30
 8005608:	6426      	str	r6, [r4, #64]	; 0x40
  mdma_handle.Init.TransferTriggerMode      = MDMA_BLOCK_TRANSFER;
 800560a:	e9c4 1301 	strd	r1, r3, [r4, #4]
  mdma_handle.Init.DestinationInc           = MDMA_DEST_INC_WORD;
 800560e:	e9c4 0205 	strd	r0, r2, [r4, #20]
  mdma_handle.Init.Priority                 = MDMA_PRIORITY_HIGH;
 8005612:	2380      	movs	r3, #128	; 0x80
  mdma_handle.Init.SourceDataSize           = MDMA_SRC_DATASIZE_WORD;
 8005614:	2220      	movs	r2, #32
  (void)HAL_MDMA_DeInit(&mdma_handle);
 8005616:	4620      	mov	r0, r4
  mdma_handle.Init.BufferTransferLength     = 128;
 8005618:	62a3      	str	r3, [r4, #40]	; 0x28
  mdma_handle.Init.DestDataSize             = MDMA_DEST_DATASIZE_WORD;
 800561a:	e9c4 2307 	strd	r2, r3, [r4, #28]
  mdma_handle.Init.Endianness               = MDMA_LITTLE_ENDIANNESS_PRESERVE;
 800561e:	e9c4 3503 	strd	r3, r5, [r4, #12]
  mdma_handle.Init.DataAlignment            = MDMA_DATAALIGN_PACKENABLE;
 8005622:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
  mdma_handle.Instance                      = SDRAM_MDMAx_CHANNEL;
 8005626:	4b24      	ldr	r3, [pc, #144]	; (80056b8 <BSP_SDRAM_Init+0x1f8>)
  mdma_handle.Init.DataAlignment            = MDMA_DATAALIGN_PACKENABLE;
 8005628:	6262      	str	r2, [r4, #36]	; 0x24
  mdma_handle.Instance                      = SDRAM_MDMAx_CHANNEL;
 800562a:	6023      	str	r3, [r4, #0]
  mdma_handle.Init.DestBurst                = MDMA_DEST_BURST_SINGLE;
 800562c:	e9c4 550b 	strd	r5, r5, [r4, #44]	; 0x2c
  mdma_handle.Init.DestBlockAddressOffset   = 0;
 8005630:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
  (void)HAL_MDMA_DeInit(&mdma_handle);
 8005634:	f001 ffc1 	bl	80075ba <HAL_MDMA_DeInit>
  (void)HAL_MDMA_Init(&mdma_handle);
 8005638:	4620      	mov	r0, r4
 800563a:	f001 ff4f 	bl	80074dc <HAL_MDMA_Init>
  HAL_NVIC_SetPriority(SDRAM_MDMAx_IRQn, BSP_SDRAM_IT_PRIORITY, 0);
 800563e:	462a      	mov	r2, r5
 8005640:	210f      	movs	r1, #15
 8005642:	207a      	movs	r0, #122	; 0x7a
 8005644:	f000 fa0a 	bl	8005a5c <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(SDRAM_MDMAx_IRQn);
 8005648:	207a      	movs	r0, #122	; 0x7a
 800564a:	f000 fa39 	bl	8005ac0 <HAL_NVIC_EnableIRQ>
    if(MX_SDRAM_Init(&hsdram[0]) != HAL_OK)
 800564e:	4630      	mov	r0, r6
 8005650:	f7ff ff06 	bl	8005460 <MX_SDRAM_Init>
 8005654:	b9d0      	cbnz	r0, 800568c <BSP_SDRAM_Init+0x1cc>
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
 8005656:	4919      	ldr	r1, [pc, #100]	; (80056bc <BSP_SDRAM_Init+0x1fc>)
 8005658:	2308      	movs	r3, #8
      pRegMode.RefreshMode     = IS42S32800J_AUTOREFRESH_MODE_CMD;
 800565a:	e9c1 3700 	strd	r3, r7, [r1]
      pRegMode.RefreshRate     = REFRESH_COUNT;
 800565e:	f240 6303 	movw	r3, #1539	; 0x603
      pRegMode.BurstType       = IS42S32800J_BURST_TYPE_SEQUENTIAL;
 8005662:	6108      	str	r0, [r1, #16]
      pRegMode.BurstLength     = IS42S32800J_BURST_LENGTH_1;
 8005664:	e9c1 3002 	strd	r3, r0, [r1, #8]
      pRegMode.CASLatency      = IS42S32800J_CAS_LATENCY_3;
 8005668:	2330      	movs	r3, #48	; 0x30
      pRegMode.OperationMode   = IS42S32800J_OPERATING_MODE_STANDARD;
 800566a:	e9c1 3005 	strd	r3, r0, [r1, #20]
      pRegMode.WriteBurstMode  = IS42S32800J_WRITEBURST_MODE_SINGLE;
 800566e:	f44f 7300 	mov.w	r3, #512	; 0x200
      if(IS42S32800J_Init(&hsdram[0], &pRegMode) != IS42S32800J_OK)
 8005672:	4630      	mov	r0, r6
      pRegMode.WriteBurstMode  = IS42S32800J_WRITEBURST_MODE_SINGLE;
 8005674:	61cb      	str	r3, [r1, #28]
      if(IS42S32800J_Init(&hsdram[0], &pRegMode) != IS42S32800J_OK)
 8005676:	f7fe fd1d 	bl	80040b4 <IS42S32800J_Init>
        ret =  BSP_ERROR_COMPONENT_FAILURE;
 800567a:	2800      	cmp	r0, #0
 800567c:	bf18      	it	ne
 800567e:	f06f 0004 	mvnne.w	r0, #4
}
 8005682:	b00f      	add	sp, #60	; 0x3c
 8005684:	bdf0      	pop	{r4, r5, r6, r7, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
 8005686:	f06f 0001 	mvn.w	r0, #1
 800568a:	e7fa      	b.n	8005682 <BSP_SDRAM_Init+0x1c2>
      ret = BSP_ERROR_NO_INIT;
 800568c:	f04f 30ff 	mov.w	r0, #4294967295
 8005690:	e7f7      	b.n	8005682 <BSP_SDRAM_Init+0x1c2>
 8005692:	bf00      	nop
 8005694:	58024400 	.word	0x58024400
 8005698:	58020c00 	.word	0x58020c00
 800569c:	24005234 	.word	0x24005234
 80056a0:	24005194 	.word	0x24005194
 80056a4:	58021000 	.word	0x58021000
 80056a8:	58021400 	.word	0x58021400
 80056ac:	58021800 	.word	0x58021800
 80056b0:	58021c00 	.word	0x58021c00
 80056b4:	58022000 	.word	0x58022000
 80056b8:	52000040 	.word	0x52000040
 80056bc:	240052a0 	.word	0x240052a0

080056c0 <BSP_TS_Init>:
  * @param  Instance TS instance. Could be only 0.
  * @param  TS_Init  TS Init structure
  * @retval BSP status
  */
int32_t BSP_TS_Init(uint32_t Instance, TS_Init_t *TS_Init)
{
 80056c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80056c4:	460c      	mov	r4, r1
 80056c6:	b08c      	sub	sp, #48	; 0x30
  int32_t ret = BSP_ERROR_NONE;

  if((Instance >=TS_INSTANCES_NBR) || (TS_Init->Width == 0U) ||( TS_Init->Width > TS_MAX_WIDTH) ||\
 80056c8:	4606      	mov	r6, r0
 80056ca:	2800      	cmp	r0, #0
 80056cc:	d171      	bne.n	80057b2 <BSP_TS_Init+0xf2>
 80056ce:	680b      	ldr	r3, [r1, #0]
 80056d0:	1e5a      	subs	r2, r3, #1
 80056d2:	f5b2 7f48 	cmp.w	r2, #800	; 0x320
 80056d6:	d26c      	bcs.n	80057b2 <BSP_TS_Init+0xf2>
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
 80056d8:	684a      	ldr	r2, [r1, #4]
  if((Instance >=TS_INSTANCES_NBR) || (TS_Init->Width == 0U) ||( TS_Init->Width > TS_MAX_WIDTH) ||\
 80056da:	1e51      	subs	r1, r2, #1
 80056dc:	f5b1 7ff0 	cmp.w	r1, #480	; 0x1e0
 80056e0:	d267      	bcs.n	80057b2 <BSP_TS_Init+0xf2>
                         (TS_Init->Accuracy > TS_MIN((TS_Init->Width), (TS_Init->Height))))
 80056e2:	4293      	cmp	r3, r2
 80056e4:	bf28      	it	cs
 80056e6:	4613      	movcs	r3, r2
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
 80056e8:	68e2      	ldr	r2, [r4, #12]
 80056ea:	429a      	cmp	r2, r3
 80056ec:	d861      	bhi.n	80057b2 <BSP_TS_Init+0xf2>
  int32_t ret;
  FT6X06_IO_t              IOCtx;
  static FT6X06_Object_t   FT6X06Obj;
  FT6X06_Capabilities_t    Cap;
  uint32_t id, i;
  uint32_t const i2c_address[] = {TS_I2C_ADDRESS, TS_I2C_ADDRESS_A02};
 80056ee:	2370      	movs	r3, #112	; 0x70
 80056f0:	2254      	movs	r2, #84	; 0x54
 80056f2:	f10d 0a04 	add.w	sl, sp, #4

  for(i = 0; i < 2UL; i++)
  {
    IOCtx.Address     = (uint16_t)i2c_address[i];

    if(FT6X06_RegisterBusIO (&FT6X06Obj, &IOCtx) != FT6X06_OK)
 80056f6:	4f32      	ldr	r7, [pc, #200]	; (80057c0 <BSP_TS_Init+0x100>)
    }
    else
    {

      (void)FT6X06_GetCapabilities(&FT6X06Obj, &Cap);
      Ts_CompObj[Instance] = &FT6X06Obj;
 80056f8:	f8df 80e4 	ldr.w	r8, [pc, #228]	; 80057e0 <BSP_TS_Init+0x120>
      Ts_Drv = (TS_Drv_t *) &FT6X06_TS_Driver;
 80056fc:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80057e4 <BSP_TS_Init+0x124>
  uint32_t const i2c_address[] = {TS_I2C_ADDRESS, TS_I2C_ADDRESS_A02};
 8005700:	e9cd 2301 	strd	r2, r3, [sp, #4]
  IOCtx.Init        = BSP_I2C4_Init;
 8005704:	4b2f      	ldr	r3, [pc, #188]	; (80057c4 <BSP_TS_Init+0x104>)
 8005706:	9306      	str	r3, [sp, #24]
  IOCtx.DeInit      = BSP_I2C4_DeInit;
 8005708:	4b2f      	ldr	r3, [pc, #188]	; (80057c8 <BSP_TS_Init+0x108>)
 800570a:	9307      	str	r3, [sp, #28]
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
 800570c:	4b2f      	ldr	r3, [pc, #188]	; (80057cc <BSP_TS_Init+0x10c>)
 800570e:	930a      	str	r3, [sp, #40]	; 0x28
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
 8005710:	4b2f      	ldr	r3, [pc, #188]	; (80057d0 <BSP_TS_Init+0x110>)
 8005712:	9309      	str	r3, [sp, #36]	; 0x24
  IOCtx.GetTick     = BSP_GetTick;
 8005714:	4b2f      	ldr	r3, [pc, #188]	; (80057d4 <BSP_TS_Init+0x114>)
 8005716:	930b      	str	r3, [sp, #44]	; 0x2c
    IOCtx.Address     = (uint16_t)i2c_address[i];
 8005718:	f85a 3b04 	ldr.w	r3, [sl], #4
    if(FT6X06_RegisterBusIO (&FT6X06Obj, &IOCtx) != FT6X06_OK)
 800571c:	a906      	add	r1, sp, #24
 800571e:	4828      	ldr	r0, [pc, #160]	; (80057c0 <BSP_TS_Init+0x100>)
    IOCtx.Address     = (uint16_t)i2c_address[i];
 8005720:	f8ad 3020 	strh.w	r3, [sp, #32]
    if(FT6X06_RegisterBusIO (&FT6X06Obj, &IOCtx) != FT6X06_OK)
 8005724:	f7fe fbcc 	bl	8003ec0 <FT6X06_RegisterBusIO>
 8005728:	b118      	cbz	r0, 8005732 <BSP_TS_Init+0x72>
  for(i = 0; i < 2UL; i++)
 800572a:	2e01      	cmp	r6, #1
 800572c:	d044      	beq.n	80057b8 <BSP_TS_Init+0xf8>
 800572e:	2601      	movs	r6, #1
 8005730:	e7f2      	b.n	8005718 <BSP_TS_Init+0x58>
    else if(FT6X06_ReadID(&FT6X06Obj, &id) != FT6X06_OK)
 8005732:	4669      	mov	r1, sp
 8005734:	4638      	mov	r0, r7
 8005736:	f7fe fb0d 	bl	8003d54 <FT6X06_ReadID>
 800573a:	2800      	cmp	r0, #0
 800573c:	d1f5      	bne.n	800572a <BSP_TS_Init+0x6a>
    else if(id != FT6X06_ID)
 800573e:	9b00      	ldr	r3, [sp, #0]
 8005740:	2b11      	cmp	r3, #17
 8005742:	d1f2      	bne.n	800572a <BSP_TS_Init+0x6a>
      (void)FT6X06_GetCapabilities(&FT6X06Obj, &Cap);
 8005744:	a903      	add	r1, sp, #12
 8005746:	4638      	mov	r0, r7
 8005748:	f7fe fab1 	bl	8003cae <FT6X06_GetCapabilities>
      Ts_Drv = (TS_Drv_t *) &FT6X06_TS_Driver;
 800574c:	4b22      	ldr	r3, [pc, #136]	; (80057d8 <BSP_TS_Init+0x118>)

      if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT6X06_OK)
 800574e:	4638      	mov	r0, r7
      Ts_CompObj[Instance] = &FT6X06Obj;
 8005750:	f8c8 7000 	str.w	r7, [r8]
      Ts_Drv = (TS_Drv_t *) &FT6X06_TS_Driver;
 8005754:	f8c9 3000 	str.w	r3, [r9]
      if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT6X06_OK)
 8005758:	681b      	ldr	r3, [r3, #0]
 800575a:	4798      	blx	r3
 800575c:	4605      	mov	r5, r0
 800575e:	2800      	cmp	r0, #0
 8005760:	d1e3      	bne.n	800572a <BSP_TS_Init+0x6a>
      Ts_Ctx[Instance].Width             = TS_Init->Width;
 8005762:	6823      	ldr	r3, [r4, #0]
      if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
 8005764:	a906      	add	r1, sp, #24
      Ts_Ctx[Instance].Width             = TS_Init->Width;
 8005766:	4e1d      	ldr	r6, [pc, #116]	; (80057dc <BSP_TS_Init+0x11c>)
      if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
 8005768:	f8d8 0000 	ldr.w	r0, [r8]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
 800576c:	6033      	str	r3, [r6, #0]
      Ts_Ctx[Instance].Height            = TS_Init->Height;
 800576e:	6863      	ldr	r3, [r4, #4]
 8005770:	6073      	str	r3, [r6, #4]
      Ts_Ctx[Instance].Orientation       = TS_Init->Orientation;
 8005772:	68a3      	ldr	r3, [r4, #8]
 8005774:	60b3      	str	r3, [r6, #8]
      Ts_Ctx[Instance].Accuracy          = TS_Init->Accuracy;
 8005776:	68e3      	ldr	r3, [r4, #12]
 8005778:	60f3      	str	r3, [r6, #12]
      if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
 800577a:	f8d9 3000 	ldr.w	r3, [r9]
 800577e:	69db      	ldr	r3, [r3, #28]
 8005780:	4798      	blx	r3
 8005782:	2800      	cmp	r0, #0
 8005784:	da02      	bge.n	800578c <BSP_TS_Init+0xcc>
        ret = BSP_ERROR_COMPONENT_FAILURE;
 8005786:	f06f 0504 	mvn.w	r5, #4
 800578a:	e00e      	b.n	80057aa <BSP_TS_Init+0xea>
        Ts_Ctx[Instance].MaxX = Capabilities.MaxXl;
 800578c:	9b07      	ldr	r3, [sp, #28]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
 800578e:	6822      	ldr	r2, [r4, #0]
        Ts_Ctx[Instance].MaxX = Capabilities.MaxXl;
 8005790:	6133      	str	r3, [r6, #16]
        Ts_Ctx[Instance].MaxY = Capabilities.MaxYl;
 8005792:	9b08      	ldr	r3, [sp, #32]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
 8005794:	6861      	ldr	r1, [r4, #4]
        Ts_Ctx[Instance].MaxY = Capabilities.MaxYl;
 8005796:	6173      	str	r3, [r6, #20]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
 8005798:	68e3      	ldr	r3, [r4, #12]
 800579a:	441a      	add	r2, r3
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
 800579c:	440b      	add	r3, r1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
 800579e:	3201      	adds	r2, #1
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
 80057a0:	3301      	adds	r3, #1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
 80057a2:	61b2      	str	r2, [r6, #24]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
 80057a4:	6273      	str	r3, [r6, #36]	; 0x24
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
 80057a6:	e9c6 2307 	strd	r2, r3, [r6, #28]
}
 80057aa:	4628      	mov	r0, r5
 80057ac:	b00c      	add	sp, #48	; 0x30
 80057ae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    ret = BSP_ERROR_WRONG_PARAM;
 80057b2:	f06f 0501 	mvn.w	r5, #1
  return ret;
 80057b6:	e7f8      	b.n	80057aa <BSP_TS_Init+0xea>
      ret = BSP_ERROR_NO_INIT;
 80057b8:	f04f 35ff 	mov.w	r5, #4294967295
 80057bc:	e7f5      	b.n	80057aa <BSP_TS_Init+0xea>
 80057be:	bf00      	nop
 80057c0:	240052c0 	.word	0x240052c0
 80057c4:	08004cc1 	.word	0x08004cc1
 80057c8:	08004c2d 	.word	0x08004c2d
 80057cc:	08004fa5 	.word	0x08004fa5
 80057d0:	08004f71 	.word	0x08004f71
 80057d4:	08004fd9 	.word	0x08004fd9
 80057d8:	24000018 	.word	0x24000018
 80057dc:	240052ec 	.word	0x240052ec
 80057e0:	240052e8 	.word	0x240052e8
 80057e4:	24005314 	.word	0x24005314

080057e8 <BSP_TS_GetState>:
{
 80057e8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80057ec:	460e      	mov	r6, r1
  if(Instance >= TS_INSTANCES_NBR)
 80057ee:	2800      	cmp	r0, #0
 80057f0:	d151      	bne.n	8005896 <BSP_TS_GetState+0xae>
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
 80057f2:	4b2a      	ldr	r3, [pc, #168]	; (800589c <BSP_TS_GetState+0xb4>)
 80057f4:	a901      	add	r1, sp, #4
 80057f6:	4a2a      	ldr	r2, [pc, #168]	; (80058a0 <BSP_TS_GetState+0xb8>)
 80057f8:	681b      	ldr	r3, [r3, #0]
 80057fa:	6810      	ldr	r0, [r2, #0]
 80057fc:	691b      	ldr	r3, [r3, #16]
 80057fe:	4798      	blx	r3
 8005800:	2800      	cmp	r0, #0
 8005802:	db45      	blt.n	8005890 <BSP_TS_GetState+0xa8>
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
 8005804:	4927      	ldr	r1, [pc, #156]	; (80058a4 <BSP_TS_GetState+0xbc>)
    else if(state.TouchDetected != 0U)
 8005806:	9801      	ldr	r0, [sp, #4]
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
 8005808:	f8d1 c018 	ldr.w	ip, [r1, #24]
      y_diff = (TS_State->TouchY > Ts_Ctx[Instance].PreviousY[0])?
 800580c:	6a0f      	ldr	r7, [r1, #32]
    else if(state.TouchDetected != 0U)
 800580e:	2800      	cmp	r0, #0
 8005810:	d03a      	beq.n	8005888 <BSP_TS_GetState+0xa0>
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
 8005812:	688b      	ldr	r3, [r1, #8]
        x_oriented = Ts_Ctx[Instance].MaxX - x_oriented - 1UL;
 8005814:	f8d1 8010 	ldr.w	r8, [r1, #16]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
 8005818:	071c      	lsls	r4, r3, #28
        y_oriented = Ts_Ctx[Instance].MaxY - y_oriented - 1UL;
 800581a:	f8d1 e014 	ldr.w	lr, [r1, #20]
      y_oriented = state.TouchY;
 800581e:	e9dd 5202 	ldrd	r5, r2, [sp, #8]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
 8005822:	bf42      	ittt	mi
 8005824:	462c      	movmi	r4, r5
        x_oriented = state.TouchY;
 8005826:	4615      	movmi	r5, r2
        y_oriented = state.TouchX;
 8005828:	4622      	movmi	r2, r4
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_X) == TS_SWAP_X)
 800582a:	079c      	lsls	r4, r3, #30
        x_oriented = Ts_Ctx[Instance].MaxX - x_oriented - 1UL;
 800582c:	bf44      	itt	mi
 800582e:	f108 34ff 	addmi.w	r4, r8, #4294967295
 8005832:	1b65      	submi	r5, r4, r5
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_Y) == TS_SWAP_Y)
 8005834:	075b      	lsls	r3, r3, #29
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
 8005836:	680c      	ldr	r4, [r1, #0]
        y_oriented = Ts_Ctx[Instance].MaxY - y_oriented - 1UL;
 8005838:	bf48      	it	mi
 800583a:	f10e 33ff 	addmi.w	r3, lr, #4294967295
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
 800583e:	fb05 f404 	mul.w	r4, r5, r4
        y_oriented = Ts_Ctx[Instance].MaxY - y_oriented - 1UL;
 8005842:	bf48      	it	mi
 8005844:	1a9a      	submi	r2, r3, r2
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
 8005846:	684b      	ldr	r3, [r1, #4]
      TS_State->TouchDetected = state.TouchDetected;
 8005848:	6030      	str	r0, [r6, #0]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
 800584a:	4353      	muls	r3, r2
      if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
 800584c:	68c8      	ldr	r0, [r1, #12]
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
 800584e:	fbb4 f4f8 	udiv	r4, r4, r8
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
 8005852:	fbb3 f3fe 	udiv	r3, r3, lr
               (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
 8005856:	4564      	cmp	r4, ip
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
 8005858:	6074      	str	r4, [r6, #4]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
 800585a:	60b3      	str	r3, [r6, #8]
               (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
 800585c:	bf8c      	ite	hi
 800585e:	eba4 050c 	subhi.w	r5, r4, ip
 8005862:	ebac 0504 	subls.w	r5, ip, r4
               (TS_State->TouchY - Ts_Ctx[Instance].PreviousY[0]):
 8005866:	42bb      	cmp	r3, r7
 8005868:	bf8c      	ite	hi
 800586a:	1bda      	subhi	r2, r3, r7
 800586c:	1afa      	subls	r2, r7, r3
      if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
 800586e:	42a8      	cmp	r0, r5
 8005870:	d301      	bcc.n	8005876 <BSP_TS_GetState+0x8e>
 8005872:	4290      	cmp	r0, r2
 8005874:	d205      	bcs.n	8005882 <BSP_TS_GetState+0x9a>
        Ts_Ctx[Instance].PreviousX[0] = TS_State->TouchX;
 8005876:	618c      	str	r4, [r1, #24]
        Ts_Ctx[Instance].PreviousY[0] = TS_State->TouchY;
 8005878:	620b      	str	r3, [r1, #32]
  int32_t ret = BSP_ERROR_NONE;
 800587a:	2000      	movs	r0, #0
}
 800587c:	b004      	add	sp, #16
 800587e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
 8005882:	e9c6 c701 	strd	ip, r7, [r6, #4]
 8005886:	e7f8      	b.n	800587a <BSP_TS_GetState+0x92>
      TS_State->TouchX = Ts_Ctx[Instance].PreviousX[0];
 8005888:	e9c6 0c00 	strd	r0, ip, [r6]
      TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
 800588c:	60b7      	str	r7, [r6, #8]
 800588e:	e7f5      	b.n	800587c <BSP_TS_GetState+0x94>
      ret = BSP_ERROR_COMPONENT_FAILURE;
 8005890:	f06f 0004 	mvn.w	r0, #4
 8005894:	e7f2      	b.n	800587c <BSP_TS_GetState+0x94>
    ret = BSP_ERROR_WRONG_PARAM;
 8005896:	f06f 0001 	mvn.w	r0, #1
  return ret;
 800589a:	e7ef      	b.n	800587c <BSP_TS_GetState+0x94>
 800589c:	24005314 	.word	0x24005314
 80058a0:	240052e8 	.word	0x240052e8
 80058a4:	240052ec 	.word	0x240052ec

080058a8 <SystemInit>:
  */
void SystemInit (void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
 80058a8:	4b2d      	ldr	r3, [pc, #180]	; (8005960 <SystemInit+0xb8>)
 80058aa:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 80058ae:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 80058b2:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  #endif

    /*SEVONPEND enabled so that an interrupt coming from the CPU(n) interrupt signal is
     detectable by the CPU after a WFI/WFE instruction.*/
 SCB->SCR |= SCB_SCR_SEVONPEND_Msk;
 80058b6:	691a      	ldr	r2, [r3, #16]
 80058b8:	f042 0210 	orr.w	r2, r2, #16
 80058bc:	611a      	str	r2, [r3, #16]

#ifdef CORE_CM7
  /* Reset the RCC clock configuration to the default reset state ------------*/
   /* Increasing the CPU frequency */
  if(FLASH_LATENCY_DEFAULT  > (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
 80058be:	4a29      	ldr	r2, [pc, #164]	; (8005964 <SystemInit+0xbc>)
 80058c0:	6813      	ldr	r3, [r2, #0]
 80058c2:	f003 030f 	and.w	r3, r3, #15
 80058c6:	2b06      	cmp	r3, #6
 80058c8:	d805      	bhi.n	80058d6 <SystemInit+0x2e>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
	MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
 80058ca:	6813      	ldr	r3, [r2, #0]
 80058cc:	f023 030f 	bic.w	r3, r3, #15
 80058d0:	f043 0307 	orr.w	r3, r3, #7
 80058d4:	6013      	str	r3, [r2, #0]
  }

  /* Set HSION bit */
  RCC->CR |= RCC_CR_HSION;
 80058d6:	4b24      	ldr	r3, [pc, #144]	; (8005968 <SystemInit+0xc0>)
 80058d8:	681a      	ldr	r2, [r3, #0]
 80058da:	f042 0201 	orr.w	r2, r2, #1
 80058de:	601a      	str	r2, [r3, #0]

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
 80058e0:	2200      	movs	r2, #0
 80058e2:	611a      	str	r2, [r3, #16]

  /* Reset HSEON, HSECSSON, CSION, RC48ON, CSIKERON, PLL1ON, PLL2ON and PLL3ON bits */
  RCC->CR &= 0xEAF6ED7FU;
 80058e4:	4a21      	ldr	r2, [pc, #132]	; (800596c <SystemInit+0xc4>)
 80058e6:	6819      	ldr	r1, [r3, #0]
 80058e8:	400a      	ands	r2, r1

   /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLASH_LATENCY_DEFAULT  < (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
 80058ea:	491e      	ldr	r1, [pc, #120]	; (8005964 <SystemInit+0xbc>)
  RCC->CR &= 0xEAF6ED7FU;
 80058ec:	601a      	str	r2, [r3, #0]
  if(FLASH_LATENCY_DEFAULT  < (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
 80058ee:	680a      	ldr	r2, [r1, #0]
 80058f0:	0712      	lsls	r2, r2, #28
 80058f2:	d505      	bpl.n	8005900 <SystemInit+0x58>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
	MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
 80058f4:	680a      	ldr	r2, [r1, #0]
 80058f6:	f022 020f 	bic.w	r2, r2, #15
 80058fa:	f042 0207 	orr.w	r2, r2, #7
 80058fe:	600a      	str	r2, [r1, #0]
  }

  /* Reset D1CFGR register */
  RCC->D1CFGR = 0x00000000;
 8005900:	2200      	movs	r2, #0

  /* Reset D3CFGR register */
  RCC->D3CFGR = 0x00000000;

  /* Reset PLLCKSELR register */
  RCC->PLLCKSELR = 0x02020200;
 8005902:	491b      	ldr	r1, [pc, #108]	; (8005970 <SystemInit+0xc8>)
  RCC->D1CFGR = 0x00000000;
 8005904:	619a      	str	r2, [r3, #24]
  RCC->D2CFGR = 0x00000000;
 8005906:	61da      	str	r2, [r3, #28]
  RCC->D3CFGR = 0x00000000;
 8005908:	621a      	str	r2, [r3, #32]
  RCC->PLLCKSELR = 0x02020200;
 800590a:	6299      	str	r1, [r3, #40]	; 0x28

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x01FF0000;
 800590c:	4919      	ldr	r1, [pc, #100]	; (8005974 <SystemInit+0xcc>)
 800590e:	62d9      	str	r1, [r3, #44]	; 0x2c
  /* Reset PLL1DIVR register */
  RCC->PLL1DIVR = 0x01010280;
 8005910:	4919      	ldr	r1, [pc, #100]	; (8005978 <SystemInit+0xd0>)
 8005912:	6319      	str	r1, [r3, #48]	; 0x30
  /* Reset PLL1FRACR register */
  RCC->PLL1FRACR = 0x00000000;
 8005914:	635a      	str	r2, [r3, #52]	; 0x34

  /* Reset PLL2DIVR register */
  RCC->PLL2DIVR = 0x01010280;
 8005916:	6399      	str	r1, [r3, #56]	; 0x38

  /* Reset PLL2FRACR register */

  RCC->PLL2FRACR = 0x00000000;
 8005918:	63da      	str	r2, [r3, #60]	; 0x3c
  /* Reset PLL3DIVR register */
  RCC->PLL3DIVR = 0x01010280;
 800591a:	6419      	str	r1, [r3, #64]	; 0x40

  /* Reset PLL3FRACR register */
  RCC->PLL3FRACR = 0x00000000;
 800591c:	645a      	str	r2, [r3, #68]	; 0x44

  /* Reset HSEBYP bit */
  RCC->CR &= 0xFFFBFFFFU;
 800591e:	6819      	ldr	r1, [r3, #0]
 8005920:	f421 2180 	bic.w	r1, r1, #262144	; 0x40000
 8005924:	6019      	str	r1, [r3, #0]

  /* Disable all interrupts */
  RCC->CIER = 0x00000000;
 8005926:	661a      	str	r2, [r3, #96]	; 0x60

  /* Enable CortexM7 HSEM EXTI line (line 78)*/
  EXTI_D2->EMR3 |= 0x4000UL;
 8005928:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 800592c:	f8d2 30e4 	ldr.w	r3, [r2, #228]	; 0xe4
 8005930:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8005934:	f8c2 30e4 	str.w	r3, [r2, #228]	; 0xe4


  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
 8005938:	4b10      	ldr	r3, [pc, #64]	; (800597c <SystemInit+0xd4>)
 800593a:	681b      	ldr	r3, [r3, #0]
 800593c:	0c1b      	lsrs	r3, r3, #16
 800593e:	041b      	lsls	r3, r3, #16
 8005940:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8005944:	d203      	bcs.n	800594e <SystemInit+0xa6>
  {
    /* if stm32h7 revY*/
    /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
    *((__IO uint32_t*)0x51008108) = 0x000000001U;
 8005946:	4b0e      	ldr	r3, [pc, #56]	; (8005980 <SystemInit+0xd8>)
 8005948:	2201      	movs	r2, #1
 800594a:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108
  /*
   * Disable the FMC bank1 (enabled after reset).
   * This, prevents CPU speculation access on this bank which blocks the use of FMC during
   * 24us. During this time the others FMC master (such as LTDC) cannot use it!
   */
  FMC_Bank1_R->BTCR[0] = 0x000030D2;
 800594e:	4b0d      	ldr	r3, [pc, #52]	; (8005984 <SystemInit+0xdc>)
 8005950:	f243 02d2 	movw	r2, #12498	; 0x30d2
 8005954:	601a      	str	r2, [r3, #0]

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = D1_AXISRAM_BASE  | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AXI-RAM */
#else
  SCB->VTOR = FLASH_BANK1_BASE | VECT_TAB_OFFSET;       /* Vector Table Relocation in Internal FLASH */
 8005956:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800595a:	4b01      	ldr	r3, [pc, #4]	; (8005960 <SystemInit+0xb8>)
 800595c:	609a      	str	r2, [r3, #8]
#else
#error Please #define CORE_CM4 or CORE_CM7
#endif
#endif

}
 800595e:	4770      	bx	lr
 8005960:	e000ed00 	.word	0xe000ed00
 8005964:	52002000 	.word	0x52002000
 8005968:	58024400 	.word	0x58024400
 800596c:	eaf6ed7f 	.word	0xeaf6ed7f
 8005970:	02020200 	.word	0x02020200
 8005974:	01ff0000 	.word	0x01ff0000
 8005978:	01010280 	.word	0x01010280
 800597c:	5c001000 	.word	0x5c001000
 8005980:	51008000 	.word	0x51008000
 8005984:	52004000 	.word	0x52004000

08005988 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8005988:	b510      	push	{r4, lr}
   __HAL_ART_CONFIG_BASE_ADDRESS(0x08100000UL);  /* Configure the Cortex-M4 ART Base address to the Flash Bank 2 : */
   __HAL_ART_ENABLE();                           /* Enable the Cortex-M4 ART */
#endif /* DUAL_CORE &&  CORE_CM4 */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 800598a:	2003      	movs	r0, #3
 800598c:	f000 f854 	bl	8005a38 <HAL_NVIC_SetPriorityGrouping>

  /* Update the SystemCoreClock global variable */
#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
 8005990:	f002 fc00 	bl	8008194 <HAL_RCC_GetSysClockFreq>
 8005994:	490f      	ldr	r1, [pc, #60]	; (80059d4 <HAL_Init+0x4c>)
 8005996:	4a10      	ldr	r2, [pc, #64]	; (80059d8 <HAL_Init+0x50>)
 8005998:	698b      	ldr	r3, [r1, #24]
 800599a:	f3c3 2303 	ubfx	r3, r3, #8, #4
 800599e:	5cd3      	ldrb	r3, [r2, r3]
 80059a0:	f003 031f 	and.w	r3, r3, #31
 80059a4:	40d8      	lsrs	r0, r3
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

  /* Update the SystemD2Clock global variable */
#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
 80059a6:	698b      	ldr	r3, [r1, #24]
 80059a8:	f003 030f 	and.w	r3, r3, #15
 80059ac:	5cd3      	ldrb	r3, [r2, r3]
 80059ae:	4a0b      	ldr	r2, [pc, #44]	; (80059dc <HAL_Init+0x54>)
 80059b0:	f003 031f 	and.w	r3, r3, #31
 80059b4:	fa20 f303 	lsr.w	r3, r0, r3
 80059b8:	6013      	str	r3, [r2, #0]
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
 80059ba:	4b09      	ldr	r3, [pc, #36]	; (80059e0 <HAL_Init+0x58>)
 80059bc:	6018      	str	r0, [r3, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 80059be:	2000      	movs	r0, #0
 80059c0:	f7fb fd08 	bl	80013d4 <HAL_InitTick>
 80059c4:	4604      	mov	r4, r0
 80059c6:	b918      	cbnz	r0, 80059d0 <HAL_Init+0x48>
  {
    return HAL_ERROR;
  }

  /* Init the low level hardware */
  HAL_MspInit();
 80059c8:	f7fb fa94 	bl	8000ef4 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 80059cc:	4620      	mov	r0, r4
 80059ce:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80059d0:	2401      	movs	r4, #1
 80059d2:	e7fb      	b.n	80059cc <HAL_Init+0x44>
 80059d4:	58024400 	.word	0x58024400
 80059d8:	08022590 	.word	0x08022590
 80059dc:	2400004c 	.word	0x2400004c
 80059e0:	24000048 	.word	0x24000048

080059e4 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += (uint32_t)uwTickFreq;
 80059e4:	4a03      	ldr	r2, [pc, #12]	; (80059f4 <HAL_IncTick+0x10>)
 80059e6:	4b04      	ldr	r3, [pc, #16]	; (80059f8 <HAL_IncTick+0x14>)
 80059e8:	6811      	ldr	r1, [r2, #0]
 80059ea:	781b      	ldrb	r3, [r3, #0]
 80059ec:	440b      	add	r3, r1
 80059ee:	6013      	str	r3, [r2, #0]
}
 80059f0:	4770      	bx	lr
 80059f2:	bf00      	nop
 80059f4:	24005318 	.word	0x24005318
 80059f8:	24000050 	.word	0x24000050

080059fc <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 80059fc:	4b01      	ldr	r3, [pc, #4]	; (8005a04 <HAL_GetTick+0x8>)
 80059fe:	6818      	ldr	r0, [r3, #0]
}
 8005a00:	4770      	bx	lr
 8005a02:	bf00      	nop
 8005a04:	24005318 	.word	0x24005318

08005a08 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8005a08:	b538      	push	{r3, r4, r5, lr}
 8005a0a:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8005a0c:	f7ff fff6 	bl	80059fc <HAL_GetTick>
 8005a10:	4605      	mov	r5, r0
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8005a12:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8005a14:	bf1e      	ittt	ne
 8005a16:	4b04      	ldrne	r3, [pc, #16]	; (8005a28 <HAL_Delay+0x20>)
 8005a18:	781b      	ldrbne	r3, [r3, #0]
 8005a1a:	18e4      	addne	r4, r4, r3
  }

  while ((HAL_GetTick() - tickstart) < wait)
 8005a1c:	f7ff ffee 	bl	80059fc <HAL_GetTick>
 8005a20:	1b43      	subs	r3, r0, r5
 8005a22:	42a3      	cmp	r3, r4
 8005a24:	d3fa      	bcc.n	8005a1c <HAL_Delay+0x14>
  {
  }
}
 8005a26:	bd38      	pop	{r3, r4, r5, pc}
 8005a28:	24000050 	.word	0x24000050

08005a2c <HAL_GetREVID>:
  * @brief  Returns the device revision identifier.
  * @retval Device revision identifier
  */
uint32_t HAL_GetREVID(void)
{
   return((DBGMCU->IDCODE) >> 16);
 8005a2c:	4b01      	ldr	r3, [pc, #4]	; (8005a34 <HAL_GetREVID+0x8>)
 8005a2e:	6818      	ldr	r0, [r3, #0]
}
 8005a30:	0c00      	lsrs	r0, r0, #16
 8005a32:	4770      	bx	lr
 8005a34:	5c001000 	.word	0x5c001000

08005a38 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8005a38:	4907      	ldr	r1, [pc, #28]	; (8005a58 <HAL_NVIC_SetPriorityGrouping+0x20>)
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8005a3a:	0203      	lsls	r3, r0, #8
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8005a3c:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8005a3e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8005a42:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8005a46:	0412      	lsls	r2, r2, #16
 8005a48:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8005a4a:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8005a4c:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8005a50:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 8005a54:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8005a56:	4770      	bx	lr
 8005a58:	e000ed00 	.word	0xe000ed00

08005a5c <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8005a5c:	4b16      	ldr	r3, [pc, #88]	; (8005ab8 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8005a5e:	b530      	push	{r4, r5, lr}
 8005a60:	68dc      	ldr	r4, [r3, #12]
 8005a62:	f3c4 2402 	ubfx	r4, r4, #8, #3
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8005a66:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8005a6a:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8005a6c:	2d04      	cmp	r5, #4
 8005a6e:	bf28      	it	cs
 8005a70:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8005a72:	2b06      	cmp	r3, #6
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8005a74:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8005a78:	bf8c      	ite	hi
 8005a7a:	3c03      	subhi	r4, #3
 8005a7c:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8005a7e:	fa03 f505 	lsl.w	r5, r3, r5
  if ((int32_t)(IRQn) >= 0)
 8005a82:	2800      	cmp	r0, #0
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8005a84:	fa03 f304 	lsl.w	r3, r3, r4
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8005a88:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8005a8c:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8005a90:	fa01 f104 	lsl.w	r1, r1, r4
 8005a94:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8005a98:	ea4f 1303 	mov.w	r3, r3, lsl #4
 8005a9c:	b2db      	uxtb	r3, r3
  if ((int32_t)(IRQn) >= 0)
 8005a9e:	db06      	blt.n	8005aae <HAL_NVIC_SetPriority+0x52>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8005aa0:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 8005aa4:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 8005aa8:	f880 3300 	strb.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8005aac:	bd30      	pop	{r4, r5, pc}
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8005aae:	f000 000f 	and.w	r0, r0, #15
 8005ab2:	4a02      	ldr	r2, [pc, #8]	; (8005abc <HAL_NVIC_SetPriority+0x60>)
 8005ab4:	5413      	strb	r3, [r2, r0]
 8005ab6:	e7f9      	b.n	8005aac <HAL_NVIC_SetPriority+0x50>
 8005ab8:	e000ed00 	.word	0xe000ed00
 8005abc:	e000ed14 	.word	0xe000ed14

08005ac0 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8005ac0:	2800      	cmp	r0, #0
 8005ac2:	db08      	blt.n	8005ad6 <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8005ac4:	2301      	movs	r3, #1
 8005ac6:	0942      	lsrs	r2, r0, #5
 8005ac8:	f000 001f 	and.w	r0, r0, #31
 8005acc:	fa03 f000 	lsl.w	r0, r3, r0
 8005ad0:	4b01      	ldr	r3, [pc, #4]	; (8005ad8 <HAL_NVIC_EnableIRQ+0x18>)
 8005ad2:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8005ad6:	4770      	bx	lr
 8005ad8:	e000e100 	.word	0xe000e100

08005adc <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8005adc:	2800      	cmp	r0, #0
 8005ade:	db0d      	blt.n	8005afc <HAL_NVIC_DisableIRQ+0x20>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8005ae0:	0943      	lsrs	r3, r0, #5
 8005ae2:	2201      	movs	r2, #1
 8005ae4:	f000 001f 	and.w	r0, r0, #31
 8005ae8:	3320      	adds	r3, #32
 8005aea:	fa02 f000 	lsl.w	r0, r2, r0
 8005aee:	4a04      	ldr	r2, [pc, #16]	; (8005b00 <HAL_NVIC_DisableIRQ+0x24>)
 8005af0:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 8005af4:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8005af8:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
 8005afc:	4770      	bx	lr
 8005afe:	bf00      	nop
 8005b00:	e000e100 	.word	0xe000e100

08005b04 <HAL_MPU_Disable>:
  __ASM volatile ("dmb 0xF":::"memory");
 8005b04:	f3bf 8f5f 	dmb	sy
{
  /* Make sure outstanding transfers are done */
  __DMB();

  /* Disable fault exceptions */
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
 8005b08:	4b04      	ldr	r3, [pc, #16]	; (8005b1c <HAL_MPU_Disable+0x18>)
 8005b0a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8005b0c:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8005b10:	625a      	str	r2, [r3, #36]	; 0x24

  /* Disable the MPU and clear the control register*/
  MPU->CTRL = 0;
 8005b12:	2200      	movs	r2, #0
 8005b14:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
}
 8005b18:	4770      	bx	lr
 8005b1a:	bf00      	nop
 8005b1c:	e000ed00 	.word	0xe000ed00

08005b20 <HAL_MPU_Enable>:
  * @retval None
  */
void HAL_MPU_Enable(uint32_t MPU_Control)
{
  /* Enable the MPU */
  MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
 8005b20:	4b06      	ldr	r3, [pc, #24]	; (8005b3c <HAL_MPU_Enable+0x1c>)
 8005b22:	f040 0001 	orr.w	r0, r0, #1
 8005b26:	f8c3 0094 	str.w	r0, [r3, #148]	; 0x94

  /* Enable fault exceptions */
  SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
 8005b2a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8005b2c:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8005b30:	625a      	str	r2, [r3, #36]	; 0x24
  __ASM volatile ("dsb 0xF":::"memory");
 8005b32:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8005b36:	f3bf 8f6f 	isb	sy

  /* Ensure MPU setting take effects */
  __DSB();
  __ISB();
}
 8005b3a:	4770      	bx	lr
 8005b3c:	e000ed00 	.word	0xe000ed00

08005b40 <HAL_MPU_ConfigRegion>:
  /* Check the parameters */
  assert_param(IS_MPU_REGION_NUMBER(MPU_Init->Number));
  assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));

  /* Set the Region number */
  MPU->RNR = MPU_Init->Number;
 8005b40:	7843      	ldrb	r3, [r0, #1]
 8005b42:	4a14      	ldr	r2, [pc, #80]	; (8005b94 <HAL_MPU_ConfigRegion+0x54>)
{
 8005b44:	b510      	push	{r4, lr}
  MPU->RNR = MPU_Init->Number;
 8005b46:	f8c2 3098 	str.w	r3, [r2, #152]	; 0x98

  if ((MPU_Init->Enable) != 0UL)
 8005b4a:	7801      	ldrb	r1, [r0, #0]
 8005b4c:	b1e9      	cbz	r1, 8005b8a <HAL_MPU_ConfigRegion+0x4a>
    assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
    assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
    assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
    assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));

    MPU->RBAR = MPU_Init->BaseAddress;
 8005b4e:	6843      	ldr	r3, [r0, #4]
 8005b50:	f8c2 309c 	str.w	r3, [r2, #156]	; 0x9c
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 8005b54:	7ac3      	ldrb	r3, [r0, #11]
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 8005b56:	7b04      	ldrb	r4, [r0, #12]
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 8005b58:	061b      	lsls	r3, r3, #24
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 8005b5a:	ea43 7304 	orr.w	r3, r3, r4, lsl #28
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
                ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8005b5e:	430b      	orrs	r3, r1
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
 8005b60:	7a81      	ldrb	r1, [r0, #10]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8005b62:	ea43 43c1 	orr.w	r3, r3, r1, lsl #19
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
 8005b66:	7b41      	ldrb	r1, [r0, #13]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8005b68:	ea43 4381 	orr.w	r3, r3, r1, lsl #18
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
 8005b6c:	7b81      	ldrb	r1, [r0, #14]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8005b6e:	ea43 4341 	orr.w	r3, r3, r1, lsl #17
                ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
 8005b72:	7bc1      	ldrb	r1, [r0, #15]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8005b74:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
 8005b78:	7a41      	ldrb	r1, [r0, #9]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8005b7a:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8005b7e:	7a01      	ldrb	r1, [r0, #8]
 8005b80:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 8005b84:	f8c2 30a0 	str.w	r3, [r2, #160]	; 0xa0
  else
  {
    MPU->RBAR = 0x00;
    MPU->RASR = 0x00;
  }
}
 8005b88:	bd10      	pop	{r4, pc}
    MPU->RBAR = 0x00;
 8005b8a:	f8c2 109c 	str.w	r1, [r2, #156]	; 0x9c
    MPU->RASR = 0x00;
 8005b8e:	f8c2 10a0 	str.w	r1, [r2, #160]	; 0xa0
}
 8005b92:	e7f9      	b.n	8005b88 <HAL_MPU_ConfigRegion+0x48>
 8005b94:	e000ed00 	.word	0xe000ed00

08005b98 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8005b98:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8005b9a:	4604      	mov	r4, r0
 8005b9c:	b908      	cbnz	r0, 8005ba2 <HAL_CRC_Init+0xa>
  {
    return HAL_ERROR;
 8005b9e:	2001      	movs	r0, #1
  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;

  /* Return function status */
  return HAL_OK;
}
 8005ba0:	bd10      	pop	{r4, pc}
  if (hcrc->State == HAL_CRC_STATE_RESET)
 8005ba2:	7f43      	ldrb	r3, [r0, #29]
 8005ba4:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005ba8:	b913      	cbnz	r3, 8005bb0 <HAL_CRC_Init+0x18>
    hcrc->Lock = HAL_UNLOCKED;
 8005baa:	7702      	strb	r2, [r0, #28]
    HAL_CRC_MspInit(hcrc);
 8005bac:	f7fb f9ba 	bl	8000f24 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_BUSY;
 8005bb0:	2302      	movs	r3, #2
 8005bb2:	7763      	strb	r3, [r4, #29]
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
 8005bb4:	7923      	ldrb	r3, [r4, #4]
 8005bb6:	b9e3      	cbnz	r3, 8005bf2 <HAL_CRC_Init+0x5a>
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
 8005bb8:	6823      	ldr	r3, [r4, #0]
 8005bba:	4a13      	ldr	r2, [pc, #76]	; (8005c08 <HAL_CRC_Init+0x70>)
 8005bbc:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
 8005bbe:	689a      	ldr	r2, [r3, #8]
 8005bc0:	f022 0218 	bic.w	r2, r2, #24
 8005bc4:	609a      	str	r2, [r3, #8]
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 8005bc6:	7962      	ldrb	r2, [r4, #5]
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 8005bc8:	6823      	ldr	r3, [r4, #0]
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 8005bca:	b9d2      	cbnz	r2, 8005c02 <HAL_CRC_Init+0x6a>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 8005bcc:	f04f 32ff 	mov.w	r2, #4294967295
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 8005bd0:	611a      	str	r2, [r3, #16]
  return HAL_OK;
 8005bd2:	2000      	movs	r0, #0
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 8005bd4:	689a      	ldr	r2, [r3, #8]
 8005bd6:	6961      	ldr	r1, [r4, #20]
 8005bd8:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8005bdc:	430a      	orrs	r2, r1
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 8005bde:	69a1      	ldr	r1, [r4, #24]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 8005be0:	609a      	str	r2, [r3, #8]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 8005be2:	689a      	ldr	r2, [r3, #8]
 8005be4:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8005be8:	430a      	orrs	r2, r1
 8005bea:	609a      	str	r2, [r3, #8]
  hcrc->State = HAL_CRC_STATE_READY;
 8005bec:	2301      	movs	r3, #1
 8005bee:	7763      	strb	r3, [r4, #29]
  return HAL_OK;
 8005bf0:	e7d6      	b.n	8005ba0 <HAL_CRC_Init+0x8>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
 8005bf2:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
 8005bf6:	4620      	mov	r0, r4
 8005bf8:	f000 f808 	bl	8005c0c <HAL_CRCEx_Polynomial_Set>
 8005bfc:	2800      	cmp	r0, #0
 8005bfe:	d0e2      	beq.n	8005bc6 <HAL_CRC_Init+0x2e>
 8005c00:	e7cd      	b.n	8005b9e <HAL_CRC_Init+0x6>
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 8005c02:	6922      	ldr	r2, [r4, #16]
 8005c04:	e7e4      	b.n	8005bd0 <HAL_CRC_Init+0x38>
 8005c06:	bf00      	nop
 8005c08:	04c11db7 	.word	0x04c11db7

08005c0c <HAL_CRCEx_Polynomial_Set>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRCEx_Polynomial_Set(CRC_HandleTypeDef *hcrc, uint32_t Pol, uint32_t PolyLength)
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
 8005c0c:	231f      	movs	r3, #31
{
 8005c0e:	b510      	push	{r4, lr}
   * definition. HAL_ERROR is reported if Pol degree is
   * larger than that indicated by PolyLength.
   * Look for MSB position: msb will contain the degree of
   *  the second to the largest polynomial member. E.g., for
   *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
  while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
 8005c10:	3b01      	subs	r3, #1
 8005c12:	d31c      	bcc.n	8005c4e <HAL_CRCEx_Polynomial_Set+0x42>
 8005c14:	fa21 f403 	lsr.w	r4, r1, r3
 8005c18:	07e4      	lsls	r4, r4, #31
 8005c1a:	d5f9      	bpl.n	8005c10 <HAL_CRCEx_Polynomial_Set+0x4>
  {
  }

  switch (PolyLength)
 8005c1c:	2a10      	cmp	r2, #16
 8005c1e:	d012      	beq.n	8005c46 <HAL_CRCEx_Polynomial_Set+0x3a>
 8005c20:	d804      	bhi.n	8005c2c <HAL_CRCEx_Polynomial_Set+0x20>
 8005c22:	b13a      	cbz	r2, 8005c34 <HAL_CRCEx_Polynomial_Set+0x28>
 8005c24:	2a08      	cmp	r2, #8
 8005c26:	d010      	beq.n	8005c4a <HAL_CRCEx_Polynomial_Set+0x3e>
      }
      break;
    case CRC_POLYLENGTH_8B:
      if (msb >= HAL_CRC_LENGTH_8B)
      {
        status =   HAL_ERROR;
 8005c28:	2001      	movs	r0, #1

    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
 8005c2a:	e00b      	b.n	8005c44 <HAL_CRCEx_Polynomial_Set+0x38>
  switch (PolyLength)
 8005c2c:	2a18      	cmp	r2, #24
 8005c2e:	d1fb      	bne.n	8005c28 <HAL_CRCEx_Polynomial_Set+0x1c>
      if (msb >= HAL_CRC_LENGTH_7B)
 8005c30:	2b06      	cmp	r3, #6
      if (msb >= HAL_CRC_LENGTH_16B)
 8005c32:	d8f9      	bhi.n	8005c28 <HAL_CRCEx_Polynomial_Set+0x1c>
    WRITE_REG(hcrc->Instance->POL, Pol);
 8005c34:	6800      	ldr	r0, [r0, #0]
 8005c36:	6141      	str	r1, [r0, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
 8005c38:	6883      	ldr	r3, [r0, #8]
 8005c3a:	f023 0318 	bic.w	r3, r3, #24
 8005c3e:	431a      	orrs	r2, r3
 8005c40:	6082      	str	r2, [r0, #8]
 8005c42:	2000      	movs	r0, #0
}
 8005c44:	bd10      	pop	{r4, pc}
      if (msb >= HAL_CRC_LENGTH_8B)
 8005c46:	2b07      	cmp	r3, #7
 8005c48:	e7f3      	b.n	8005c32 <HAL_CRCEx_Polynomial_Set+0x26>
      if (msb >= HAL_CRC_LENGTH_16B)
 8005c4a:	2b0f      	cmp	r3, #15
 8005c4c:	e7f1      	b.n	8005c32 <HAL_CRCEx_Polynomial_Set+0x26>
  switch (PolyLength)
 8005c4e:	2a00      	cmp	r2, #0
 8005c50:	d1ea      	bne.n	8005c28 <HAL_CRCEx_Polynomial_Set+0x1c>
 8005c52:	e7ef      	b.n	8005c34 <HAL_CRCEx_Polynomial_Set+0x28>

08005c54 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8005c54:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8005c56:	4604      	mov	r4, r0
 8005c58:	2800      	cmp	r0, #0
 8005c5a:	d036      	beq.n	8005cca <HAL_DMA2D_Init+0x76>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 8005c5c:	f890 3061 	ldrb.w	r3, [r0, #97]	; 0x61
 8005c60:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005c64:	b91b      	cbnz	r3, 8005c6e <HAL_DMA2D_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8005c66:	f880 2060 	strb.w	r2, [r0, #96]	; 0x60
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8005c6a:	f7fb f973 	bl	8000f54 <HAL_DMA2D_MspInit>
  }
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8005c6e:	2302      	movs	r3, #2

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
 8005c70:	69e0      	ldr	r0, [r4, #28]
 8005c72:	6862      	ldr	r2, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8005c74:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
 8005c78:	6823      	ldr	r3, [r4, #0]
 8005c7a:	4302      	orrs	r2, r0

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
 8005c7c:	69a0      	ldr	r0, [r4, #24]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
 8005c7e:	6819      	ldr	r1, [r3, #0]
 8005c80:	f421 21e0 	bic.w	r1, r1, #458752	; 0x70000
 8005c84:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 8005c88:	430a      	orrs	r2, r1
 8005c8a:	601a      	str	r2, [r3, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
 8005c8c:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8005c8e:	68a2      	ldr	r2, [r4, #8]
 8005c90:	f421 7183 	bic.w	r1, r1, #262	; 0x106
 8005c94:	4302      	orrs	r2, r0
 8005c96:	f021 0101 	bic.w	r1, r1, #1
 8005c9a:	430a      	orrs	r2, r1
             hdma2d->Init.ColorMode | hdma2d->Init.BytesSwap);

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8005c9c:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
 8005c9e:	635a      	str	r2, [r3, #52]	; 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8005ca0:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8005ca2:	0c12      	lsrs	r2, r2, #16
 8005ca4:	0412      	lsls	r2, r2, #16
 8005ca6:	430a      	orrs	r2, r1
 8005ca8:	641a      	str	r2, [r3, #64]	; 0x40
  /* DMA2D OPFCCR AI and RBS fields setting (Output Alpha Inversion)*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
 8005caa:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8005cac:	e9d4 0204 	ldrd	r0, r2, [r4, #16]
 8005cb0:	f421 1140 	bic.w	r1, r1, #3145728	; 0x300000
 8005cb4:	0552      	lsls	r2, r2, #21
 8005cb6:	ea42 5200 	orr.w	r2, r2, r0, lsl #20
             ((hdma2d->Init.AlphaInverted << DMA2D_OPFCCR_AI_Pos) | \
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8005cba:	2000      	movs	r0, #0
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
 8005cbc:	430a      	orrs	r2, r1
 8005cbe:	635a      	str	r2, [r3, #52]	; 0x34

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8005cc0:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8005cc2:	6660      	str	r0, [r4, #100]	; 0x64
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8005cc4:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61

  return HAL_OK;
}
 8005cc8:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8005cca:	2001      	movs	r0, #1
 8005ccc:	e7fc      	b.n	8005cc8 <HAL_DMA2D_Init+0x74>

08005cce <HAL_DMA2D_LineEventCallback>:
 8005cce:	4770      	bx	lr

08005cd0 <HAL_DMA2D_CLUTLoadingCpltCallback>:
 8005cd0:	4770      	bx	lr

08005cd2 <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8005cd2:	6803      	ldr	r3, [r0, #0]
{
 8005cd4:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8005cd6:	685e      	ldr	r6, [r3, #4]
{
 8005cd8:	4604      	mov	r4, r0
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8005cda:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8005cdc:	07f2      	lsls	r2, r6, #31
 8005cde:	d514      	bpl.n	8005d0a <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 8005ce0:	05e9      	lsls	r1, r5, #23
 8005ce2:	d512      	bpl.n	8005d0a <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8005ce4:	681a      	ldr	r2, [r3, #0]
 8005ce6:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8005cea:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8005cec:	6e42      	ldr	r2, [r0, #100]	; 0x64
 8005cee:	f042 0201 	orr.w	r2, r2, #1
 8005cf2:	6642      	str	r2, [r0, #100]	; 0x64

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8005cf4:	2201      	movs	r2, #1
 8005cf6:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8005cf8:	2304      	movs	r3, #4
 8005cfa:	f880 3061 	strb.w	r3, [r0, #97]	; 0x61

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8005cfe:	2300      	movs	r3, #0
 8005d00:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60

      if (hdma2d->XferErrorCallback != NULL)
 8005d04:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8005d06:	b103      	cbz	r3, 8005d0a <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8005d08:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8005d0a:	06b2      	lsls	r2, r6, #26
 8005d0c:	d516      	bpl.n	8005d3c <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 8005d0e:	04ab      	lsls	r3, r5, #18
 8005d10:	d514      	bpl.n	8005d3c <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8005d12:	6823      	ldr	r3, [r4, #0]
 8005d14:	681a      	ldr	r2, [r3, #0]
 8005d16:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8005d1a:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8005d1c:	2220      	movs	r2, #32
 8005d1e:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8005d20:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8005d22:	f043 0302 	orr.w	r3, r3, #2
 8005d26:	6663      	str	r3, [r4, #100]	; 0x64

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8005d28:	2304      	movs	r3, #4
 8005d2a:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8005d2e:	2300      	movs	r3, #0
 8005d30:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60

      if (hdma2d->XferErrorCallback != NULL)
 8005d34:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005d36:	b10b      	cbz	r3, 8005d3c <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8005d38:	4620      	mov	r0, r4
 8005d3a:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8005d3c:	0730      	lsls	r0, r6, #28
 8005d3e:	d516      	bpl.n	8005d6e <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8005d40:	0529      	lsls	r1, r5, #20
 8005d42:	d514      	bpl.n	8005d6e <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8005d44:	6823      	ldr	r3, [r4, #0]
 8005d46:	681a      	ldr	r2, [r3, #0]
 8005d48:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005d4c:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8005d4e:	2208      	movs	r2, #8
 8005d50:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8005d52:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8005d54:	f043 0304 	orr.w	r3, r3, #4
 8005d58:	6663      	str	r3, [r4, #100]	; 0x64

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8005d5a:	2304      	movs	r3, #4
 8005d5c:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8005d60:	2300      	movs	r3, #0
 8005d62:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60

      if (hdma2d->XferErrorCallback != NULL)
 8005d66:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005d68:	b10b      	cbz	r3, 8005d6e <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8005d6a:	4620      	mov	r0, r4
 8005d6c:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8005d6e:	0772      	lsls	r2, r6, #29
 8005d70:	d50b      	bpl.n	8005d8a <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 8005d72:	056b      	lsls	r3, r5, #21
 8005d74:	d509      	bpl.n	8005d8a <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8005d76:	6823      	ldr	r3, [r4, #0]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 8005d78:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8005d7a:	681a      	ldr	r2, [r3, #0]
 8005d7c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005d80:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8005d82:	2204      	movs	r2, #4
 8005d84:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 8005d86:	f7ff ffa2 	bl	8005cce <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8005d8a:	07b0      	lsls	r0, r6, #30
 8005d8c:	d514      	bpl.n	8005db8 <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 8005d8e:	05a9      	lsls	r1, r5, #22
 8005d90:	d512      	bpl.n	8005db8 <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8005d92:	6823      	ldr	r3, [r4, #0]
 8005d94:	681a      	ldr	r2, [r3, #0]
 8005d96:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8005d9a:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8005d9c:	2202      	movs	r2, #2
 8005d9e:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8005da0:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8005da2:	6663      	str	r3, [r4, #100]	; 0x64

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8005da4:	2301      	movs	r3, #1
 8005da6:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8005daa:	2300      	movs	r3, #0
 8005dac:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60

      if (hdma2d->XferCpltCallback != NULL)
 8005db0:	6a23      	ldr	r3, [r4, #32]
 8005db2:	b10b      	cbz	r3, 8005db8 <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 8005db4:	4620      	mov	r0, r4
 8005db6:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8005db8:	06f2      	lsls	r2, r6, #27
 8005dba:	d513      	bpl.n	8005de4 <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8005dbc:	04eb      	lsls	r3, r5, #19
 8005dbe:	d511      	bpl.n	8005de4 <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8005dc0:	6823      	ldr	r3, [r4, #0]

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8005dc2:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8005dc4:	681a      	ldr	r2, [r3, #0]
 8005dc6:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8005dca:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8005dcc:	2210      	movs	r2, #16
 8005dce:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8005dd0:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8005dd2:	6663      	str	r3, [r4, #100]	; 0x64
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8005dd4:	2301      	movs	r3, #1
 8005dd6:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
 8005dda:	2300      	movs	r3, #0
 8005ddc:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8005de0:	f7ff ff76 	bl	8005cd0 <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 8005de4:	bd70      	pop	{r4, r5, r6, pc}

08005de6 <DSI_ShortWrite>:
static HAL_StatusTypeDef DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                        uint32_t ChannelID,
                                        uint32_t Mode,
                                        uint32_t Param1,
                                        uint32_t Param2)
{
 8005de6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005dea:	4607      	mov	r7, r0
 8005dec:	460d      	mov	r5, r1
 8005dee:	4614      	mov	r4, r2
 8005df0:	461e      	mov	r6, r3
  uint32_t tickstart;

  /* Get tick */
  tickstart = HAL_GetTick();
 8005df2:	f7ff fe03 	bl	80059fc <HAL_GetTick>
 8005df6:	4680      	mov	r8, r0

  /* Wait for Command FIFO Empty */
  while ((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 8005df8:	683b      	ldr	r3, [r7, #0]
 8005dfa:	6f5a      	ldr	r2, [r3, #116]	; 0x74
 8005dfc:	07d2      	lsls	r2, r2, #31
 8005dfe:	d50a      	bpl.n	8005e16 <DSI_ShortWrite+0x30>
    }
  }

  /* Configure the packet to send a short DCS command with 0 or 1 parameter */
  /* Update the DSI packet header with new information */
  hdsi->Instance->GHCR = (Mode | (ChannelID << 6U) | (Param1 << 8U) | (Param2 << 16U));
 8005e00:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
 8005e04:	9906      	ldr	r1, [sp, #24]

  return HAL_OK;
 8005e06:	2000      	movs	r0, #0
  hdsi->Instance->GHCR = (Mode | (ChannelID << 6U) | (Param1 << 8U) | (Param2 << 16U));
 8005e08:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8005e0c:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
 8005e10:	66dc      	str	r4, [r3, #108]	; 0x6c
}
 8005e12:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 8005e16:	f7ff fdf1 	bl	80059fc <HAL_GetTick>
 8005e1a:	eba0 0008 	sub.w	r0, r0, r8
 8005e1e:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8005e22:	d9e9      	bls.n	8005df8 <DSI_ShortWrite+0x12>
      return HAL_TIMEOUT;
 8005e24:	2003      	movs	r0, #3
 8005e26:	e7f4      	b.n	8005e12 <DSI_ShortWrite+0x2c>

08005e28 <HAL_DSI_ConfigErrorMonitor>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigErrorMonitor(DSI_HandleTypeDef *hdsi, uint32_t ActiveErrors)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8005e28:	7c03      	ldrb	r3, [r0, #16]
 8005e2a:	2b01      	cmp	r3, #1
 8005e2c:	d05c      	beq.n	8005ee8 <HAL_DSI_ConfigErrorMonitor+0xc0>

  hdsi->Instance->IER[0U] = 0U;
 8005e2e:	2200      	movs	r2, #0
 8005e30:	6803      	ldr	r3, [r0, #0]
 8005e32:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 8005e36:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8

  /* Store active errors to the handle */
  hdsi->ErrorMsk = ActiveErrors;

  if ((ActiveErrors & HAL_DSI_ERROR_ACK) != 0U)
 8005e3a:	07ca      	lsls	r2, r1, #31
  hdsi->ErrorMsk = ActiveErrors;
 8005e3c:	6181      	str	r1, [r0, #24]
  if ((ActiveErrors & HAL_DSI_ERROR_ACK) != 0U)
 8005e3e:	d507      	bpl.n	8005e50 <HAL_DSI_ConfigErrorMonitor+0x28>
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 8005e40:	f8d3 20c4 	ldr.w	r2, [r3, #196]	; 0xc4
 8005e44:	ea6f 4212 	mvn.w	r2, r2, lsr #16
 8005e48:	ea6f 4202 	mvn.w	r2, r2, lsl #16
 8005e4c:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PHY) != 0U)
 8005e50:	078a      	lsls	r2, r1, #30
 8005e52:	d505      	bpl.n	8005e60 <HAL_DSI_ConfigErrorMonitor+0x38>
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_PHY_MASK;
 8005e54:	f8d3 20c4 	ldr.w	r2, [r3, #196]	; 0xc4
 8005e58:	f442 12f8 	orr.w	r2, r2, #2031616	; 0x1f0000
 8005e5c:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_TX) != 0U)
 8005e60:	074a      	lsls	r2, r1, #29
 8005e62:	d505      	bpl.n	8005e70 <HAL_DSI_ConfigErrorMonitor+0x48>
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_TX_MASK;
 8005e64:	f8d3 20c8 	ldr.w	r2, [r3, #200]	; 0xc8
 8005e68:	f042 0201 	orr.w	r2, r2, #1
 8005e6c:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_RX) != 0U)
 8005e70:	070a      	lsls	r2, r1, #28
 8005e72:	d505      	bpl.n	8005e80 <HAL_DSI_ConfigErrorMonitor+0x58>
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_RX_MASK;
 8005e74:	f8d3 20c8 	ldr.w	r2, [r3, #200]	; 0xc8
 8005e78:	f042 0202 	orr.w	r2, r2, #2
 8005e7c:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_ECC) != 0U)
 8005e80:	06ca      	lsls	r2, r1, #27
 8005e82:	d505      	bpl.n	8005e90 <HAL_DSI_ConfigErrorMonitor+0x68>
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_ECC_MASK;
 8005e84:	f8d3 20c8 	ldr.w	r2, [r3, #200]	; 0xc8
 8005e88:	f042 020c 	orr.w	r2, r2, #12
 8005e8c:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_CRC) != 0U)
 8005e90:	068a      	lsls	r2, r1, #26
 8005e92:	d505      	bpl.n	8005ea0 <HAL_DSI_ConfigErrorMonitor+0x78>
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_CRC_MASK;
 8005e94:	f8d3 20c8 	ldr.w	r2, [r3, #200]	; 0xc8
 8005e98:	f042 0210 	orr.w	r2, r2, #16
 8005e9c:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PSE) != 0U)
 8005ea0:	064a      	lsls	r2, r1, #25
 8005ea2:	d505      	bpl.n	8005eb0 <HAL_DSI_ConfigErrorMonitor+0x88>
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_PSE_MASK;
 8005ea4:	f8d3 20c8 	ldr.w	r2, [r3, #200]	; 0xc8
 8005ea8:	f042 0220 	orr.w	r2, r2, #32
 8005eac:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_EOT) != 0U)
 8005eb0:	060a      	lsls	r2, r1, #24
 8005eb2:	d505      	bpl.n	8005ec0 <HAL_DSI_ConfigErrorMonitor+0x98>
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_EOT_MASK;
 8005eb4:	f8d3 20c8 	ldr.w	r2, [r3, #200]	; 0xc8
 8005eb8:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8005ebc:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_OVF) != 0U)
 8005ec0:	05ca      	lsls	r2, r1, #23
 8005ec2:	d505      	bpl.n	8005ed0 <HAL_DSI_ConfigErrorMonitor+0xa8>
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_OVF_MASK;
 8005ec4:	f8d3 20c8 	ldr.w	r2, [r3, #200]	; 0xc8
 8005ec8:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8005ecc:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_GEN) != 0U)
 8005ed0:	058a      	lsls	r2, r1, #22
 8005ed2:	d505      	bpl.n	8005ee0 <HAL_DSI_ConfigErrorMonitor+0xb8>
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_GEN_MASK;
 8005ed4:	f8d3 20c8 	ldr.w	r2, [r3, #200]	; 0xc8
 8005ed8:	f442 52f8 	orr.w	r2, r2, #7936	; 0x1f00
 8005edc:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
  }

  /* Process Unlocked */
  __HAL_UNLOCK(hdsi);
 8005ee0:	2300      	movs	r3, #0
 8005ee2:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8005ee4:	4618      	mov	r0, r3
 8005ee6:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8005ee8:	2002      	movs	r0, #2
}
 8005eea:	4770      	bx	lr

08005eec <HAL_DSI_Init>:
{
 8005eec:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8005eee:	460d      	mov	r5, r1
  if (hdsi == NULL)
 8005ef0:	4604      	mov	r4, r0
 8005ef2:	2800      	cmp	r0, #0
 8005ef4:	f000 80a9 	beq.w	800604a <HAL_DSI_Init+0x15e>
  if (hdsi->State == HAL_DSI_STATE_RESET)
 8005ef8:	7c43      	ldrb	r3, [r0, #17]
 8005efa:	b90b      	cbnz	r3, 8005f00 <HAL_DSI_Init+0x14>
    HAL_DSI_MspInit(hdsi);
 8005efc:	f7fb f84e 	bl	8000f9c <HAL_DSI_MspInit>
  hdsi->State = HAL_DSI_STATE_BUSY;
 8005f00:	2303      	movs	r3, #3
 8005f02:	7463      	strb	r3, [r4, #17]
  __HAL_DSI_REG_ENABLE(hdsi);
 8005f04:	2300      	movs	r3, #0
 8005f06:	9300      	str	r3, [sp, #0]
 8005f08:	6823      	ldr	r3, [r4, #0]
 8005f0a:	f8d3 2430 	ldr.w	r2, [r3, #1072]	; 0x430
 8005f0e:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 8005f12:	f8c3 2430 	str.w	r2, [r3, #1072]	; 0x430
 8005f16:	f8d3 3430 	ldr.w	r3, [r3, #1072]	; 0x430
 8005f1a:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8005f1e:	9300      	str	r3, [sp, #0]
 8005f20:	9b00      	ldr	r3, [sp, #0]
  tickstart = HAL_GetTick();
 8005f22:	f7ff fd6b 	bl	80059fc <HAL_GetTick>
 8005f26:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_RRS) == 0U)
 8005f28:	6822      	ldr	r2, [r4, #0]
 8005f2a:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 8005f2e:	04d9      	lsls	r1, r3, #19
 8005f30:	d57a      	bpl.n	8006028 <HAL_DSI_Init+0x13c>
  hdsi->Instance->WRPCR &= ~(DSI_WRPCR_PLL_NDIV | DSI_WRPCR_PLL_IDF | DSI_WRPCR_PLL_ODF);
 8005f32:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 8005f36:	f423 335e 	bic.w	r3, r3, #227328	; 0x37800
 8005f3a:	f423 73fe 	bic.w	r3, r3, #508	; 0x1fc
 8005f3e:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << DSI_WRPCR_PLL_NDIV_Pos) | \
 8005f42:	f8d2 1430 	ldr.w	r1, [r2, #1072]	; 0x430
                            ((PLLInit->PLLIDF) << DSI_WRPCR_PLL_IDF_Pos) | \
 8005f46:	e9d5 0300 	ldrd	r0, r3, [r5]
 8005f4a:	02db      	lsls	r3, r3, #11
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << DSI_WRPCR_PLL_NDIV_Pos) | \
 8005f4c:	ea43 0380 	orr.w	r3, r3, r0, lsl #2
                            ((PLLInit->PLLODF) << DSI_WRPCR_PLL_ODF_Pos));
 8005f50:	68a8      	ldr	r0, [r5, #8]
                            ((PLLInit->PLLIDF) << DSI_WRPCR_PLL_IDF_Pos) | \
 8005f52:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
  HAL_Delay(1);
 8005f56:	2001      	movs	r0, #1
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << DSI_WRPCR_PLL_NDIV_Pos) | \
 8005f58:	430b      	orrs	r3, r1
 8005f5a:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
  __HAL_DSI_PLL_ENABLE(hdsi);
 8005f5e:	2300      	movs	r3, #0
 8005f60:	9301      	str	r3, [sp, #4]
 8005f62:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 8005f66:	f043 0301 	orr.w	r3, r3, #1
 8005f6a:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
 8005f6e:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 8005f72:	f003 0301 	and.w	r3, r3, #1
 8005f76:	9301      	str	r3, [sp, #4]
 8005f78:	9b01      	ldr	r3, [sp, #4]
  HAL_Delay(1);
 8005f7a:	f7ff fd45 	bl	8005a08 <HAL_Delay>
  tickstart = HAL_GetTick();
 8005f7e:	f7ff fd3d 	bl	80059fc <HAL_GetTick>
 8005f82:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_PLLLS) == 0U)
 8005f84:	6823      	ldr	r3, [r4, #0]
 8005f86:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 8005f8a:	05d2      	lsls	r2, r2, #23
 8005f8c:	d556      	bpl.n	800603c <HAL_DSI_Init+0x150>
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 8005f8e:	f8d3 20a0 	ldr.w	r2, [r3, #160]	; 0xa0
  unitIntervalx4 = (4000000U * tempIDF * ((1UL << (0x3U & PLLInit->PLLODF)))) / ((HSE_VALUE / 1000U) * PLLInit->PLLNDIV);
 8005f92:	f246 10a8 	movw	r0, #25000	; 0x61a8
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 8005f96:	6861      	ldr	r1, [r4, #4]
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 8005f98:	f042 0206 	orr.w	r2, r2, #6
 8005f9c:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
  hdsi->Instance->CLCR &= ~(DSI_CLCR_DPCC | DSI_CLCR_ACR);
 8005fa0:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 8005fa4:	f022 0203 	bic.w	r2, r2, #3
 8005fa8:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 8005fac:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 8005fb0:	430a      	orrs	r2, r1
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 8005fb2:	68e1      	ldr	r1, [r4, #12]
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 8005fb4:	f042 0201 	orr.w	r2, r2, #1
 8005fb8:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 8005fbc:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 8005fc0:	f022 0203 	bic.w	r2, r2, #3
 8005fc4:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 8005fc8:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 8005fcc:	430a      	orrs	r2, r1
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 8005fce:	68a1      	ldr	r1, [r4, #8]
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 8005fd0:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 8005fd4:	689a      	ldr	r2, [r3, #8]
 8005fd6:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 8005fda:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 8005fdc:	689a      	ldr	r2, [r3, #8]
 8005fde:	430a      	orrs	r2, r1
  unitIntervalx4 = (4000000U * tempIDF * ((1UL << (0x3U & PLLInit->PLLODF)))) / ((HSE_VALUE / 1000U) * PLLInit->PLLNDIV);
 8005fe0:	491b      	ldr	r1, [pc, #108]	; (8006050 <HAL_DSI_Init+0x164>)
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 8005fe2:	609a      	str	r2, [r3, #8]
  unitIntervalx4 = (4000000U * tempIDF * ((1UL << (0x3U & PLLInit->PLLODF)))) / ((HSE_VALUE / 1000U) * PLLInit->PLLNDIV);
 8005fe4:	686a      	ldr	r2, [r5, #4]
 8005fe6:	2a01      	cmp	r2, #1
 8005fe8:	bf38      	it	cc
 8005fea:	2201      	movcc	r2, #1
 8005fec:	434a      	muls	r2, r1
 8005fee:	68a9      	ldr	r1, [r5, #8]
 8005ff0:	f001 0103 	and.w	r1, r1, #3
 8005ff4:	408a      	lsls	r2, r1
 8005ff6:	6829      	ldr	r1, [r5, #0]
 8005ff8:	4341      	muls	r1, r0
  hdsi->Instance->IER[0U] = 0U;
 8005ffa:	2000      	movs	r0, #0
  unitIntervalx4 = (4000000U * tempIDF * ((1UL << (0x3U & PLLInit->PLLODF)))) / ((HSE_VALUE / 1000U) * PLLInit->PLLNDIV);
 8005ffc:	fbb2 f2f1 	udiv	r2, r2, r1
  hdsi->Instance->WPCR[0U] &= ~DSI_WPCR0_UIX4;
 8006000:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
 8006004:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8006008:	f8c3 1418 	str.w	r1, [r3, #1048]	; 0x418
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 800600c:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
 8006010:	430a      	orrs	r2, r1
 8006012:	f8c3 2418 	str.w	r2, [r3, #1048]	; 0x418
  hdsi->Instance->IER[0U] = 0U;
 8006016:	f8c3 00c4 	str.w	r0, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 800601a:	f8c3 00c8 	str.w	r0, [r3, #200]	; 0xc8
  hdsi->State = HAL_DSI_STATE_READY;
 800601e:	2301      	movs	r3, #1
  hdsi->ErrorCode = HAL_DSI_ERROR_NONE;
 8006020:	6160      	str	r0, [r4, #20]
  hdsi->ErrorMsk = 0U;
 8006022:	61a0      	str	r0, [r4, #24]
  hdsi->State = HAL_DSI_STATE_READY;
 8006024:	7463      	strb	r3, [r4, #17]
  return HAL_OK;
 8006026:	e007      	b.n	8006038 <HAL_DSI_Init+0x14c>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 8006028:	f7ff fce8 	bl	80059fc <HAL_GetTick>
 800602c:	1b80      	subs	r0, r0, r6
 800602e:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8006032:	f67f af79 	bls.w	8005f28 <HAL_DSI_Init+0x3c>
      return HAL_TIMEOUT;
 8006036:	2003      	movs	r0, #3
}
 8006038:	b002      	add	sp, #8
 800603a:	bd70      	pop	{r4, r5, r6, pc}
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 800603c:	f7ff fcde 	bl	80059fc <HAL_GetTick>
 8006040:	1b80      	subs	r0, r0, r6
 8006042:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8006046:	d99d      	bls.n	8005f84 <HAL_DSI_Init+0x98>
 8006048:	e7f5      	b.n	8006036 <HAL_DSI_Init+0x14a>
    return HAL_ERROR;
 800604a:	2001      	movs	r0, #1
 800604c:	e7f4      	b.n	8006038 <HAL_DSI_Init+0x14c>
 800604e:	bf00      	nop
 8006050:	003d0900 	.word	0x003d0900

08006054 <HAL_DSI_ErrorCallback>:
 8006054:	4770      	bx	lr

08006056 <HAL_DSI_IRQHandler>:
{
  uint32_t ErrorStatus0;
  uint32_t ErrorStatus1;

  /* Tearing Effect Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 8006056:	6803      	ldr	r3, [r0, #0]
 8006058:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 800605c:	07d1      	lsls	r1, r2, #31
{
 800605e:	b510      	push	{r4, lr}
 8006060:	4604      	mov	r4, r0
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 8006062:	d508      	bpl.n	8006076 <HAL_DSI_IRQHandler+0x20>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_TE) != 0U)
 8006064:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 8006068:	07d2      	lsls	r2, r2, #31
 800606a:	d504      	bpl.n	8006076 <HAL_DSI_IRQHandler+0x20>
    {
      /* Clear the Tearing Effect Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_TE);
 800606c:	2201      	movs	r2, #1
 800606e:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Tearing Effect callback */
      hdsi->TearingEffectCallback(hdsi);
#else
      /*Call legacy Tearing Effect callback*/
      HAL_DSI_TearingEffectCallback(hdsi);
 8006072:	f7fb fd5b 	bl	8001b2c <HAL_DSI_TearingEffectCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* End of Refresh Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_ER) != 0U)
 8006076:	6823      	ldr	r3, [r4, #0]
 8006078:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 800607c:	0791      	lsls	r1, r2, #30
 800607e:	d509      	bpl.n	8006094 <HAL_DSI_IRQHandler+0x3e>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_ER) != 0U)
 8006080:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 8006084:	0792      	lsls	r2, r2, #30
 8006086:	d505      	bpl.n	8006094 <HAL_DSI_IRQHandler+0x3e>
    {
      /* Clear the End of Refresh Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_ER);
 8006088:	2202      	movs	r2, #2
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered End of refresh callback */
      hdsi->EndOfRefreshCallback(hdsi);
#else
      /*Call Legacy End of refresh callback */
      HAL_DSI_EndOfRefreshCallback(hdsi);
 800608a:	4620      	mov	r0, r4
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_ER);
 800608c:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
      HAL_DSI_EndOfRefreshCallback(hdsi);
 8006090:	f7fb fd7e 	bl	8001b90 <HAL_DSI_EndOfRefreshCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* Error Interrupts management ***********************************************/
  if (hdsi->ErrorMsk != 0U)
 8006094:	69a3      	ldr	r3, [r4, #24]
 8006096:	2b00      	cmp	r3, #0
 8006098:	d04e      	beq.n	8006138 <HAL_DSI_IRQHandler+0xe2>
  {
    ErrorStatus0 = hdsi->Instance->ISR[0U];
 800609a:	6821      	ldr	r1, [r4, #0]
 800609c:	f8d1 20bc 	ldr.w	r2, [r1, #188]	; 0xbc
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 80060a0:	f8d1 30c4 	ldr.w	r3, [r1, #196]	; 0xc4
    ErrorStatus1 = hdsi->Instance->ISR[1U];
 80060a4:	f8d1 00c0 	ldr.w	r0, [r1, #192]	; 0xc0
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 80060a8:	401a      	ands	r2, r3
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 80060aa:	f8d1 30c8 	ldr.w	r3, [r1, #200]	; 0xc8

    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 80060ae:	b291      	uxth	r1, r2
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 80060b0:	4003      	ands	r3, r0
    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 80060b2:	b119      	cbz	r1, 80060bc <HAL_DSI_IRQHandler+0x66>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ACK;
 80060b4:	6961      	ldr	r1, [r4, #20]
 80060b6:	f041 0101 	orr.w	r1, r1, #1
 80060ba:	6161      	str	r1, [r4, #20]
    }

    if ((ErrorStatus0 & DSI_ERROR_PHY_MASK) != 0U)
 80060bc:	f412 1ff8 	tst.w	r2, #2031616	; 0x1f0000
 80060c0:	d003      	beq.n	80060ca <HAL_DSI_IRQHandler+0x74>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PHY;
 80060c2:	6962      	ldr	r2, [r4, #20]
 80060c4:	f042 0202 	orr.w	r2, r2, #2
 80060c8:	6162      	str	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_TX_MASK) != 0U)
 80060ca:	07d8      	lsls	r0, r3, #31
 80060cc:	d503      	bpl.n	80060d6 <HAL_DSI_IRQHandler+0x80>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_TX;
 80060ce:	6962      	ldr	r2, [r4, #20]
 80060d0:	f042 0204 	orr.w	r2, r2, #4
 80060d4:	6162      	str	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_RX_MASK) != 0U)
 80060d6:	0799      	lsls	r1, r3, #30
 80060d8:	d503      	bpl.n	80060e2 <HAL_DSI_IRQHandler+0x8c>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_RX;
 80060da:	6962      	ldr	r2, [r4, #20]
 80060dc:	f042 0208 	orr.w	r2, r2, #8
 80060e0:	6162      	str	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_ECC_MASK) != 0U)
 80060e2:	f013 0f0c 	tst.w	r3, #12
 80060e6:	d003      	beq.n	80060f0 <HAL_DSI_IRQHandler+0x9a>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ECC;
 80060e8:	6962      	ldr	r2, [r4, #20]
 80060ea:	f042 0210 	orr.w	r2, r2, #16
 80060ee:	6162      	str	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_CRC_MASK) != 0U)
 80060f0:	06da      	lsls	r2, r3, #27
 80060f2:	d503      	bpl.n	80060fc <HAL_DSI_IRQHandler+0xa6>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_CRC;
 80060f4:	6962      	ldr	r2, [r4, #20]
 80060f6:	f042 0220 	orr.w	r2, r2, #32
 80060fa:	6162      	str	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_PSE_MASK) != 0U)
 80060fc:	0698      	lsls	r0, r3, #26
 80060fe:	d503      	bpl.n	8006108 <HAL_DSI_IRQHandler+0xb2>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PSE;
 8006100:	6962      	ldr	r2, [r4, #20]
 8006102:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8006106:	6162      	str	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_EOT_MASK) != 0U)
 8006108:	0659      	lsls	r1, r3, #25
 800610a:	d503      	bpl.n	8006114 <HAL_DSI_IRQHandler+0xbe>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_EOT;
 800610c:	6962      	ldr	r2, [r4, #20]
 800610e:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8006112:	6162      	str	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_OVF_MASK) != 0U)
 8006114:	061a      	lsls	r2, r3, #24
 8006116:	d503      	bpl.n	8006120 <HAL_DSI_IRQHandler+0xca>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_OVF;
 8006118:	6962      	ldr	r2, [r4, #20]
 800611a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800611e:	6162      	str	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_GEN_MASK) != 0U)
 8006120:	f413 5ff8 	tst.w	r3, #7936	; 0x1f00
 8006124:	d003      	beq.n	800612e <HAL_DSI_IRQHandler+0xd8>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_GEN;
 8006126:	6963      	ldr	r3, [r4, #20]
 8006128:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800612c:	6163      	str	r3, [r4, #20]
    }

    /* Check only selected errors */
    if (hdsi->ErrorCode != HAL_DSI_ERROR_NONE)
 800612e:	6963      	ldr	r3, [r4, #20]
 8006130:	b113      	cbz	r3, 8006138 <HAL_DSI_IRQHandler+0xe2>
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Error callback */
      hdsi->ErrorCallback(hdsi);
#else
      /*Call Legacy Error callback */
      HAL_DSI_ErrorCallback(hdsi);
 8006132:	4620      	mov	r0, r4
 8006134:	f7ff ff8e 	bl	8006054 <HAL_DSI_ErrorCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }
}
 8006138:	bd10      	pop	{r4, pc}

0800613a <HAL_DSI_SetGenericVCID>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetGenericVCID(DSI_HandleTypeDef *hdsi, uint32_t VirtualChannelID)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800613a:	7c03      	ldrb	r3, [r0, #16]
 800613c:	2b01      	cmp	r3, #1
 800613e:	d00b      	beq.n	8006158 <HAL_DSI_SetGenericVCID+0x1e>

  /* Update the GVCID register */
  hdsi->Instance->GVCIDR &= ~DSI_GVCIDR_VCID;
 8006140:	6803      	ldr	r3, [r0, #0]
 8006142:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8006144:	f022 0203 	bic.w	r2, r2, #3
 8006148:	631a      	str	r2, [r3, #48]	; 0x30
  hdsi->Instance->GVCIDR |= VirtualChannelID;
 800614a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800614c:	4311      	orrs	r1, r2
 800614e:	6319      	str	r1, [r3, #48]	; 0x30

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8006150:	2300      	movs	r3, #0
 8006152:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8006154:	4618      	mov	r0, r3
 8006156:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8006158:	2002      	movs	r0, #2
}
 800615a:	4770      	bx	lr

0800615c <HAL_DSI_ConfigAdaptedCommandMode>:
  * @param  CmdCfg  pointer to a DSI_CmdCfgTypeDef structure that contains
  *                 the DSI command mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigAdaptedCommandMode(DSI_HandleTypeDef *hdsi, DSI_CmdCfgTypeDef *CmdCfg)
{
 800615c:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 800615e:	7c03      	ldrb	r3, [r0, #16]
 8006160:	2b01      	cmp	r3, #1
 8006162:	d06a      	beq.n	800623a <HAL_DSI_ConfigAdaptedCommandMode+0xde>
  assert_param(IS_DSI_DE_POLARITY(CmdCfg->DEPolarity));
  assert_param(IS_DSI_VSYNC_POLARITY(CmdCfg->VSPolarity));
  assert_param(IS_DSI_HSYNC_POLARITY(CmdCfg->HSPolarity));

  /* Select command mode by setting CMDM and DSIM bits */
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 8006164:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;

  /* Select the virtual channel for the LTDC interface traffic */
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 8006166:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 8006168:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800616a:	f042 0201 	orr.w	r2, r2, #1
 800616e:	635a      	str	r2, [r3, #52]	; 0x34
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
 8006170:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 8006174:	f022 0201 	bic.w	r2, r2, #1
 8006178:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;
 800617c:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 8006180:	f042 0201 	orr.w	r2, r2, #1
 8006184:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
 8006188:	68da      	ldr	r2, [r3, #12]
 800618a:	f022 0203 	bic.w	r2, r2, #3
 800618e:	60da      	str	r2, [r3, #12]
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 8006190:	68da      	ldr	r2, [r3, #12]
 8006192:	4322      	orrs	r2, r4
 8006194:	60da      	str	r2, [r3, #12]

  /* Configure the polarity of control signals */
  hdsi->Instance->LPCR &= ~(DSI_LPCR_DEP | DSI_LPCR_VSP | DSI_LPCR_HSP);
 8006196:	695a      	ldr	r2, [r3, #20]
 8006198:	f022 0207 	bic.w	r2, r2, #7
 800619c:	615a      	str	r2, [r3, #20]
  hdsi->Instance->LPCR |= (CmdCfg->DEPolarity | CmdCfg->VSPolarity | CmdCfg->HSPolarity);
 800619e:	695c      	ldr	r4, [r3, #20]
 80061a0:	e9d1 5206 	ldrd	r5, r2, [r1, #24]
 80061a4:	432a      	orrs	r2, r5
 80061a6:	694d      	ldr	r5, [r1, #20]
 80061a8:	432a      	orrs	r2, r5

  /* Select the color coding for the host */
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 80061aa:	684d      	ldr	r5, [r1, #4]
  hdsi->Instance->LPCR |= (CmdCfg->DEPolarity | CmdCfg->VSPolarity | CmdCfg->HSPolarity);
 80061ac:	4322      	orrs	r2, r4
 80061ae:	615a      	str	r2, [r3, #20]
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 80061b0:	691a      	ldr	r2, [r3, #16]
 80061b2:	f022 020f 	bic.w	r2, r2, #15
 80061b6:	611a      	str	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 80061b8:	691c      	ldr	r4, [r3, #16]
 80061ba:	432c      	orrs	r4, r5
 80061bc:	611c      	str	r4, [r3, #16]

  /* Select the color coding for the wrapper */
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_COLMUX;
 80061be:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 80061c2:	f024 040e 	bic.w	r4, r4, #14
 80061c6:	f8c3 4400 	str.w	r4, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 80061ca:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400

  /* Configure the maximum allowed size for write memory command */
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 80061ce:	688c      	ldr	r4, [r1, #8]
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 80061d0:	ea42 0245 	orr.w	r2, r2, r5, lsl #1
 80061d4:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
 80061d8:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 80061da:	0c12      	lsrs	r2, r2, #16
 80061dc:	0412      	lsls	r2, r2, #16
 80061de:	665a      	str	r2, [r3, #100]	; 0x64
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 80061e0:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 80061e2:	4322      	orrs	r2, r4
 80061e4:	665a      	str	r2, [r3, #100]	; 0x64

  /* Configure the tearing effect source and polarity and select the refresh mode */
  hdsi->Instance->WCFGR &= ~(DSI_WCFGR_TESRC | DSI_WCFGR_TEPOL | DSI_WCFGR_AR | DSI_WCFGR_VSPOL);
 80061e6:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 80061ea:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 80061ee:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 80061f2:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 80061f6:	e9d1 2503 	ldrd	r2, r5, [r1, #12]
 80061fa:	432a      	orrs	r2, r5
 80061fc:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 80061fe:	432a      	orrs	r2, r5
 8006200:	6a0d      	ldr	r5, [r1, #32]
                            CmdCfg->VSyncPol);

  /* Configure the tearing effect acknowledge request */
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 8006202:	6a89      	ldr	r1, [r1, #40]	; 0x28
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 8006204:	432a      	orrs	r2, r5
 8006206:	4322      	orrs	r2, r4
 8006208:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
 800620c:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 800620e:	f022 0201 	bic.w	r2, r2, #1
 8006212:	669a      	str	r2, [r3, #104]	; 0x68
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 8006214:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 8006216:	430a      	orrs	r2, r1
 8006218:	669a      	str	r2, [r3, #104]	; 0x68

  /* Enable the Tearing Effect interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_TE);
 800621a:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800621e:	f042 0201 	orr.w	r2, r2, #1
 8006222:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Enable the End of Refresh interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_ER);
 8006226:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800622a:	f042 0202 	orr.w	r2, r2, #2
 800622e:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8006232:	2300      	movs	r3, #0
 8006234:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8006236:	4618      	mov	r0, r3
}
 8006238:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800623a:	2002      	movs	r0, #2
 800623c:	e7fc      	b.n	8006238 <HAL_DSI_ConfigAdaptedCommandMode+0xdc>
	...

08006240 <HAL_DSI_ConfigCommand>:
  * @param  LPCmd  pointer to a DSI_LPCmdTypeDef structure that contains
  *                the DSI command transmission mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigCommand(DSI_HandleTypeDef *hdsi, DSI_LPCmdTypeDef *LPCmd)
{
 8006240:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 8006242:	7c03      	ldrb	r3, [r0, #16]
 8006244:	2b01      	cmp	r3, #1
 8006246:	d02a      	beq.n	800629e <HAL_DSI_ConfigCommand+0x5e>
  assert_param(IS_DSI_LP_DLW(LPCmd->LPDcsLongWrite));
  assert_param(IS_DSI_LP_MRDP(LPCmd->LPMaxReadPacket));
  assert_param(IS_DSI_ACK_REQUEST(LPCmd->AcknowledgeRequest));

  /* Select High-speed or Low-power for command transmission */
  hdsi->Instance->CMCR &= ~(DSI_CMCR_GSW0TX | \
 8006248:	6802      	ldr	r2, [r0, #0]
 800624a:	4b16      	ldr	r3, [pc, #88]	; (80062a4 <HAL_DSI_ConfigCommand+0x64>)
 800624c:	6e94      	ldr	r4, [r2, #104]	; 0x68
 800624e:	4023      	ands	r3, r4
 8006250:	6693      	str	r3, [r2, #104]	; 0x68
                            DSI_CMCR_DSW0TX | \
                            DSI_CMCR_DSW1TX | \
                            DSI_CMCR_DSR0TX | \
                            DSI_CMCR_DLWTX  | \
                            DSI_CMCR_MRDPS);
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 8006252:	6e94      	ldr	r4, [r2, #104]	; 0x68
 8006254:	e9d1 3500 	ldrd	r3, r5, [r1]
 8006258:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteOneP | \
 800625a:	688d      	ldr	r5, [r1, #8]
 800625c:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteTwoP | \
 800625e:	68cd      	ldr	r5, [r1, #12]
 8006260:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadNoP   | \
 8006262:	690d      	ldr	r5, [r1, #16]
 8006264:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadOneP  | \
 8006266:	694d      	ldr	r5, [r1, #20]
 8006268:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadTwoP  | \
 800626a:	698d      	ldr	r5, [r1, #24]
 800626c:	432b      	orrs	r3, r5
                           LPCmd->LPGenLongWrite      | \
 800626e:	69cd      	ldr	r5, [r1, #28]
 8006270:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteNoP  | \
 8006272:	6a0d      	ldr	r5, [r1, #32]
 8006274:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteOneP | \
 8006276:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 8006278:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortReadNoP   | \
 800627a:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800627c:	432b      	orrs	r3, r5
                           LPCmd->LPDcsLongWrite      | \
 800627e:	6acd      	ldr	r5, [r1, #44]	; 0x2c
                           LPCmd->LPMaxReadPacket);

  /* Configure the acknowledge request after each packet transmission */
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 8006280:	6b09      	ldr	r1, [r1, #48]	; 0x30
                           LPCmd->LPDcsLongWrite      | \
 8006282:	432b      	orrs	r3, r5
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 8006284:	4323      	orrs	r3, r4
 8006286:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
 8006288:	6e93      	ldr	r3, [r2, #104]	; 0x68
 800628a:	f023 0302 	bic.w	r3, r3, #2
 800628e:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 8006290:	6e93      	ldr	r3, [r2, #104]	; 0x68
 8006292:	430b      	orrs	r3, r1
 8006294:	6693      	str	r3, [r2, #104]	; 0x68

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8006296:	2300      	movs	r3, #0
 8006298:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800629a:	4618      	mov	r0, r3
}
 800629c:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800629e:	2002      	movs	r0, #2
 80062a0:	e7fc      	b.n	800629c <HAL_DSI_ConfigCommand+0x5c>
 80062a2:	bf00      	nop
 80062a4:	fef080ff 	.word	0xfef080ff

080062a8 <HAL_DSI_ConfigFlowControl>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigFlowControl(DSI_HandleTypeDef *hdsi, uint32_t FlowControl)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 80062a8:	7c03      	ldrb	r3, [r0, #16]
 80062aa:	2b01      	cmp	r3, #1
 80062ac:	d00b      	beq.n	80062c6 <HAL_DSI_ConfigFlowControl+0x1e>

  /* Check the parameters */
  assert_param(IS_DSI_FLOW_CONTROL(FlowControl));

  /* Set the DSI Host Protocol Configuration Register */
  hdsi->Instance->PCR &= ~DSI_FLOW_CONTROL_ALL;
 80062ae:	6803      	ldr	r3, [r0, #0]
 80062b0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80062b2:	f022 021f 	bic.w	r2, r2, #31
 80062b6:	62da      	str	r2, [r3, #44]	; 0x2c
  hdsi->Instance->PCR |= FlowControl;
 80062b8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80062ba:	4311      	orrs	r1, r2
 80062bc:	62d9      	str	r1, [r3, #44]	; 0x2c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 80062be:	2300      	movs	r3, #0
 80062c0:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 80062c2:	4618      	mov	r0, r3
 80062c4:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 80062c6:	2002      	movs	r0, #2
}
 80062c8:	4770      	bx	lr

080062ca <HAL_DSI_ConfigPhyTimer>:
  * @param  PhyTimers  DSI_PHY_TimerTypeDef structure that contains
  *                    the DSI PHY timing parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigPhyTimer(DSI_HandleTypeDef *hdsi, DSI_PHY_TimerTypeDef *PhyTimers)
{
 80062ca:	b530      	push	{r4, r5, lr}
  uint32_t maxTime;
  /* Process locked */
  __HAL_LOCK(hdsi);
 80062cc:	7c03      	ldrb	r3, [r0, #16]
 80062ce:	2b01      	cmp	r3, #1
 80062d0:	d035      	beq.n	800633e <HAL_DSI_ConfigPhyTimer+0x74>
     Register (DSI_CLTCR).
     But the DSI Host is not calculating LP2HS_TIME + HS2LP_TIME but 2 x HS2LP_TIME.

     Workaround : Configure HS2LP_TIME and LP2HS_TIME with the same value being the max of HS2LP_TIME or LP2HS_TIME.
    */
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 80062d2:	6803      	ldr	r3, [r0, #0]
  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 80062d4:	e9d1 2400 	ldrd	r2, r4, [r1]
 80062d8:	4294      	cmp	r4, r2
 80062da:	bf38      	it	cc
 80062dc:	4614      	movcc	r4, r2
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 80062de:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 80062e2:	f002 22fc 	and.w	r2, r2, #4227922944	; 0xfc00fc00
 80062e6:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
  hdsi->Instance->CLTCR |= (maxTime | ((maxTime) << 16U));
 80062ea:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 80062ee:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 80062f2:	4322      	orrs	r2, r4
 80062f4:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98

  /* Data lane timer configuration */
  hdsi->Instance->DLTCR &= ~(DSI_DLTCR_MRD_TIME | DSI_DLTCR_LP2HS_TIME | DSI_DLTCR_HS2LP_TIME);
 80062f8:	f8d3 209c 	ldr.w	r2, [r3, #156]	; 0x9c
 80062fc:	f402 4200 	and.w	r2, r2, #32768	; 0x8000
 8006300:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 8006304:	f8d3 409c 	ldr.w	r4, [r3, #156]	; 0x9c
                              PhyTimers->DataLaneHS2LPTime) << 24U));
 8006308:	e9d1 2502 	ldrd	r2, r5, [r1, #8]
 800630c:	0612      	lsls	r2, r2, #24
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 800630e:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 8006312:	690d      	ldr	r5, [r1, #16]

  /* Configure the wait period to request HS transmission after a stop state */
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 8006314:	6949      	ldr	r1, [r1, #20]
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 8006316:	432a      	orrs	r2, r5
 8006318:	4322      	orrs	r2, r4
 800631a:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
 800631e:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 8006322:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8006326:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 800632a:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 800632e:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8006332:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8006336:	2300      	movs	r3, #0
 8006338:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800633a:	4618      	mov	r0, r3
}
 800633c:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800633e:	2002      	movs	r0, #2
 8006340:	e7fc      	b.n	800633c <HAL_DSI_ConfigPhyTimer+0x72>
	...

08006344 <HAL_DSI_ConfigHostTimeouts>:
  * @param  HostTimeouts  DSI_HOST_TimeoutTypeDef structure that contains
  *                       the DSI host timeout parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigHostTimeouts(DSI_HandleTypeDef *hdsi, DSI_HOST_TimeoutTypeDef *HostTimeouts)
{
 8006344:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 8006346:	7c03      	ldrb	r3, [r0, #16]
 8006348:	2b01      	cmp	r3, #1
 800634a:	d05c      	beq.n	8006406 <HAL_DSI_ConfigHostTimeouts+0xc2>

  /* Set the timeout clock division factor */
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 800634c:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 800634e:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 8006350:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);

  /* Low-power reception timeout */
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 8006352:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 8006354:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8006358:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 800635a:	689a      	ldr	r2, [r3, #8]
 800635c:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 8006360:	684c      	ldr	r4, [r1, #4]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 8006362:	609a      	str	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 8006364:	6f9a      	ldr	r2, [r3, #120]	; 0x78
 8006366:	b292      	uxth	r2, r2
 8006368:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 800636a:	6f9a      	ldr	r2, [r3, #120]	; 0x78
 800636c:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 8006370:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
 8006372:	4a26      	ldr	r2, [pc, #152]	; (800640c <HAL_DSI_ConfigHostTimeouts+0xc8>)
 8006374:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 8006376:	4014      	ands	r4, r2
 8006378:	679c      	str	r4, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 800637a:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 800637c:	432c      	orrs	r4, r5

  /* High-speed read timeout */
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 800637e:	68cd      	ldr	r5, [r1, #12]
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 8006380:	679c      	str	r4, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 8006382:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
 8006384:	4014      	ands	r4, r2
 8006386:	67dc      	str	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 8006388:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
 800638a:	432c      	orrs	r4, r5

  /* Low-power read timeout */
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 800638c:	690d      	ldr	r5, [r1, #16]
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 800638e:	67dc      	str	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 8006390:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
 8006394:	4014      	ands	r4, r2
 8006396:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 800639a:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
 800639e:	432c      	orrs	r4, r5

  /* High-speed write timeout */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 80063a0:	694d      	ldr	r5, [r1, #20]
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 80063a2:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 80063a6:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 80063aa:	4014      	ands	r4, r2
 80063ac:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 80063b0:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 80063b4:	432c      	orrs	r4, r5
 80063b6:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84

  /* High-speed write presp mode */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_PM;
 80063ba:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 80063be:	f024 7480 	bic.w	r4, r4, #16777216	; 0x1000000
 80063c2:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWritePrespMode;
 80063c6:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 80063ca:	698d      	ldr	r5, [r1, #24]
 80063cc:	432c      	orrs	r4, r5

  /* Low-speed write timeout */
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 80063ce:	69cd      	ldr	r5, [r1, #28]

  /* BTA timeout */
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 80063d0:	6a09      	ldr	r1, [r1, #32]
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWritePrespMode;
 80063d2:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 80063d6:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
 80063da:	4014      	ands	r4, r2
 80063dc:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 80063e0:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
 80063e4:	432c      	orrs	r4, r5
 80063e6:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
 80063ea:	f8d3 408c 	ldr.w	r4, [r3, #140]	; 0x8c
 80063ee:	4022      	ands	r2, r4
 80063f0:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 80063f4:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 80063f8:	430a      	orrs	r2, r1
 80063fa:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 80063fe:	2300      	movs	r3, #0
 8006400:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8006402:	4618      	mov	r0, r3
}
 8006404:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 8006406:	2002      	movs	r0, #2
 8006408:	e7fc      	b.n	8006404 <HAL_DSI_ConfigHostTimeouts+0xc0>
 800640a:	bf00      	nop
 800640c:	ffff0000 	.word	0xffff0000

08006410 <HAL_DSI_Start>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Start(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8006410:	7c03      	ldrb	r3, [r0, #16]
{
 8006412:	b082      	sub	sp, #8
  __HAL_LOCK(hdsi);
 8006414:	2b01      	cmp	r3, #1
 8006416:	d01c      	beq.n	8006452 <HAL_DSI_Start+0x42>

  /* Enable the DSI host */
  __HAL_DSI_ENABLE(hdsi);
 8006418:	6802      	ldr	r2, [r0, #0]
 800641a:	2300      	movs	r3, #0
 800641c:	9300      	str	r3, [sp, #0]
 800641e:	6851      	ldr	r1, [r2, #4]
 8006420:	f041 0101 	orr.w	r1, r1, #1
 8006424:	6051      	str	r1, [r2, #4]
 8006426:	6851      	ldr	r1, [r2, #4]
 8006428:	f001 0101 	and.w	r1, r1, #1
 800642c:	9100      	str	r1, [sp, #0]
 800642e:	9900      	ldr	r1, [sp, #0]

  /* Enable the DSI wrapper */
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 8006430:	9301      	str	r3, [sp, #4]
 8006432:	f8d2 1404 	ldr.w	r1, [r2, #1028]	; 0x404
 8006436:	f041 0108 	orr.w	r1, r1, #8
 800643a:	f8c2 1404 	str.w	r1, [r2, #1028]	; 0x404
 800643e:	f8d2 2404 	ldr.w	r2, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8006442:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8006444:	4618      	mov	r0, r3
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 8006446:	f002 0208 	and.w	r2, r2, #8
 800644a:	9201      	str	r2, [sp, #4]
 800644c:	9a01      	ldr	r2, [sp, #4]
}
 800644e:	b002      	add	sp, #8
 8006450:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8006452:	2002      	movs	r0, #2
 8006454:	e7fb      	b.n	800644e <HAL_DSI_Start+0x3e>

08006456 <HAL_DSI_Refresh>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Refresh(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8006456:	7c03      	ldrb	r3, [r0, #16]
 8006458:	2b01      	cmp	r3, #1
 800645a:	d00a      	beq.n	8006472 <HAL_DSI_Refresh+0x1c>

  /* Update the display */
  hdsi->Instance->WCR |= DSI_WCR_LTDCEN;
 800645c:	6802      	ldr	r2, [r0, #0]
 800645e:	f8d2 3404 	ldr.w	r3, [r2, #1028]	; 0x404
 8006462:	f043 0304 	orr.w	r3, r3, #4
 8006466:	f8c2 3404 	str.w	r3, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800646a:	2300      	movs	r3, #0
 800646c:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800646e:	4618      	mov	r0, r3
 8006470:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8006472:	2002      	movs	r0, #2
}
 8006474:	4770      	bx	lr

08006476 <HAL_DSI_ShortWrite>:
HAL_StatusTypeDef HAL_DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                     uint32_t ChannelID,
                                     uint32_t Mode,
                                     uint32_t Param1,
                                     uint32_t Param2)
{
 8006476:	b537      	push	{r0, r1, r2, r4, r5, lr}
  HAL_StatusTypeDef status;
  /* Check the parameters */
  assert_param(IS_DSI_SHORT_WRITE_PACKET_TYPE(Mode));

  /* Process locked */
  __HAL_LOCK(hdsi);
 8006478:	7c05      	ldrb	r5, [r0, #16]
{
 800647a:	4604      	mov	r4, r0
  __HAL_LOCK(hdsi);
 800647c:	2d01      	cmp	r5, #1
 800647e:	d009      	beq.n	8006494 <HAL_DSI_ShortWrite+0x1e>
 8006480:	2501      	movs	r5, #1
 8006482:	7405      	strb	r5, [r0, #16]

  status = DSI_ShortWrite(hdsi, ChannelID, Mode, Param1, Param2);
 8006484:	9d06      	ldr	r5, [sp, #24]
 8006486:	9500      	str	r5, [sp, #0]
 8006488:	f7ff fcad 	bl	8005de6 <DSI_ShortWrite>

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800648c:	2300      	movs	r3, #0
 800648e:	7423      	strb	r3, [r4, #16]

  return status;
}
 8006490:	b003      	add	sp, #12
 8006492:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 8006494:	2002      	movs	r0, #2
 8006496:	e7fb      	b.n	8006490 <HAL_DSI_ShortWrite+0x1a>

08006498 <HAL_DSI_LongWrite>:
                                    uint32_t ChannelID,
                                    uint32_t Mode,
                                    uint32_t NbParams,
                                    uint32_t Param1,
                                    uint8_t *ParametersTable)
{
 8006498:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800649c:	461c      	mov	r4, r3
  uint32_t tickstart;
  uint32_t fifoword;
  uint8_t *pparams = ParametersTable;

  /* Process locked */
  __HAL_LOCK(hdsi);
 800649e:	7c03      	ldrb	r3, [r0, #16]
{
 80064a0:	4606      	mov	r6, r0
 80064a2:	460f      	mov	r7, r1
  __HAL_LOCK(hdsi);
 80064a4:	2b01      	cmp	r3, #1
{
 80064a6:	4615      	mov	r5, r2
 80064a8:	e9dd 980a 	ldrd	r9, r8, [sp, #40]	; 0x28
  __HAL_LOCK(hdsi);
 80064ac:	d053      	beq.n	8006556 <HAL_DSI_LongWrite+0xbe>
 80064ae:	2301      	movs	r3, #1
 80064b0:	7403      	strb	r3, [r0, #16]

  /* Check the parameters */
  assert_param(IS_DSI_LONG_WRITE_PACKET_TYPE(Mode));

  /* Get tick */
  tickstart = HAL_GetTick();
 80064b2:	f7ff faa3 	bl	80059fc <HAL_GetTick>
 80064b6:	4683      	mov	fp, r0

  /* Wait for Command FIFO Empty */
  while ((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 80064b8:	6831      	ldr	r1, [r6, #0]
 80064ba:	6f4b      	ldr	r3, [r1, #116]	; 0x74
 80064bc:	f013 0a01 	ands.w	sl, r3, #1
 80064c0:	d01a      	beq.n	80064f8 <HAL_DSI_LongWrite+0x60>
    }
  }

  /* Set the DCS code on payload byte 1, and the other parameters on the write FIFO command*/
  fifoword = Param1;
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 80064c2:	2c03      	cmp	r4, #3
 80064c4:	4620      	mov	r0, r4

  for (count = 0U; count < nbBytes; count++)
 80064c6:	f04f 0200 	mov.w	r2, #0
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 80064ca:	bf28      	it	cs
 80064cc:	2003      	movcs	r0, #3
  for (count = 0U; count < nbBytes; count++)
 80064ce:	4282      	cmp	r2, r0
 80064d0:	d11e      	bne.n	8006510 <HAL_DSI_LongWrite+0x78>
  {
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
  }
  hdsi->Instance->GPDR = fifoword;

  uicounter = NbParams - nbBytes;
 80064d2:	1aa3      	subs	r3, r4, r2
  pparams += nbBytes;
 80064d4:	4442      	add	r2, r8
  hdsi->Instance->GPDR = fifoword;
 80064d6:	f8c1 9070 	str.w	r9, [r1, #112]	; 0x70
  /* Set the Next parameters on the write FIFO command*/
  while (uicounter != 0U)
 80064da:	bb1b      	cbnz	r3, 8006524 <HAL_DSI_LongWrite+0x8c>

  /* Configure the packet to send a long DCS command */
  DSI_ConfigPacketHeader(hdsi->Instance,
                         ChannelID,
                         Mode,
                         ((NbParams + 1U) & 0x00FFU),
 80064dc:	3401      	adds	r4, #1
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 80064de:	ea45 1587 	orr.w	r5, r5, r7, lsl #6
                         (((NbParams + 1U) & 0xFF00U) >> 8U));

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);

  return HAL_OK;
 80064e2:	4618      	mov	r0, r3
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 80064e4:	0222      	lsls	r2, r4, #8
 80064e6:	0224      	lsls	r4, r4, #8
 80064e8:	b292      	uxth	r2, r2
 80064ea:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 80064ee:	4315      	orrs	r5, r2
 80064f0:	432c      	orrs	r4, r5
 80064f2:	66cc      	str	r4, [r1, #108]	; 0x6c
  __HAL_UNLOCK(hdsi);
 80064f4:	7433      	strb	r3, [r6, #16]
  return HAL_OK;
 80064f6:	e009      	b.n	800650c <HAL_DSI_LongWrite+0x74>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 80064f8:	f7ff fa80 	bl	80059fc <HAL_GetTick>
 80064fc:	eba0 000b 	sub.w	r0, r0, fp
 8006500:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8006504:	d9d8      	bls.n	80064b8 <HAL_DSI_LongWrite+0x20>
      return HAL_TIMEOUT;
 8006506:	2003      	movs	r0, #3
      __HAL_UNLOCK(hdsi);
 8006508:	f886 a010 	strb.w	sl, [r6, #16]
}
 800650c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
 8006510:	f818 3002 	ldrb.w	r3, [r8, r2]
 8006514:	3201      	adds	r2, #1
 8006516:	ea4f 0cc2 	mov.w	ip, r2, lsl #3
 800651a:	fa03 f30c 	lsl.w	r3, r3, ip
 800651e:	ea49 0903 	orr.w	r9, r9, r3
  for (count = 0U; count < nbBytes; count++)
 8006522:	e7d4      	b.n	80064ce <HAL_DSI_LongWrite+0x36>
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 8006524:	2b04      	cmp	r3, #4
    fifoword = 0U;
 8006526:	f04f 0c00 	mov.w	ip, #0
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 800652a:	469e      	mov	lr, r3
    for (count = 0U; count < nbBytes; count++)
 800652c:	4660      	mov	r0, ip
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 800652e:	bf28      	it	cs
 8006530:	f04f 0e04 	movcs.w	lr, #4
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 8006534:	f812 8000 	ldrb.w	r8, [r2, r0]
 8006538:	ea4f 09c0 	mov.w	r9, r0, lsl #3
    for (count = 0U; count < nbBytes; count++)
 800653c:	3001      	adds	r0, #1
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 800653e:	fa08 f809 	lsl.w	r8, r8, r9
    for (count = 0U; count < nbBytes; count++)
 8006542:	4586      	cmp	lr, r0
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 8006544:	ea4c 0c08 	orr.w	ip, ip, r8
    for (count = 0U; count < nbBytes; count++)
 8006548:	d1f4      	bne.n	8006534 <HAL_DSI_LongWrite+0x9c>
    uicounter -= nbBytes;
 800654a:	eba3 030e 	sub.w	r3, r3, lr
    pparams += nbBytes;
 800654e:	4472      	add	r2, lr
    hdsi->Instance->GPDR = fifoword;
 8006550:	f8c1 c070 	str.w	ip, [r1, #112]	; 0x70
    pparams += nbBytes;
 8006554:	e7c1      	b.n	80064da <HAL_DSI_LongWrite+0x42>
  __HAL_LOCK(hdsi);
 8006556:	2002      	movs	r0, #2
 8006558:	e7d8      	b.n	800650c <HAL_DSI_LongWrite+0x74>

0800655a <HAL_DSI_Read>:
                               uint8_t *Array,
                               uint32_t Size,
                               uint32_t Mode,
                               uint32_t DCSCmd,
                               uint8_t *ParametersTable)
{
 800655a:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800655e:	461e      	mov	r6, r3
  uint32_t fifoword;
  uint32_t nbbytes;
  uint32_t count;

  /* Process locked */
  __HAL_LOCK(hdsi);
 8006560:	7c03      	ldrb	r3, [r0, #16]
{
 8006562:	4605      	mov	r5, r0
 8006564:	460c      	mov	r4, r1
  __HAL_LOCK(hdsi);
 8006566:	2b01      	cmp	r3, #1
{
 8006568:	4617      	mov	r7, r2
 800656a:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 800656e:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
  __HAL_LOCK(hdsi);
 8006572:	d06f      	beq.n	8006654 <HAL_DSI_Read+0xfa>
 8006574:	2301      	movs	r3, #1

  /* Check the parameters */
  assert_param(IS_DSI_READ_PACKET_TYPE(Mode));

  if (datasize > 2U)
 8006576:	2e02      	cmp	r6, #2
  __HAL_LOCK(hdsi);
 8006578:	7403      	strb	r3, [r0, #16]
  if (datasize > 2U)
 800657a:	d90d      	bls.n	8006598 <HAL_DSI_Read+0x3e>
  {
    /* set max return packet size */
    if (DSI_ShortWrite(hdsi, ChannelNbr, DSI_MAX_RETURN_PKT_SIZE, ((datasize) & 0xFFU),
 800657c:	f3c6 2307 	ubfx	r3, r6, #8, #8
 8006580:	2237      	movs	r2, #55	; 0x37
 8006582:	9300      	str	r3, [sp, #0]
 8006584:	b2f3      	uxtb	r3, r6
 8006586:	f7ff fc2e 	bl	8005de6 <DSI_ShortWrite>
 800658a:	b128      	cbz	r0, 8006598 <HAL_DSI_Read+0x3e>
                       (((datasize) >> 8U) & 0xFFU)) != HAL_OK)
    {
      /* Process Unlocked */
      __HAL_UNLOCK(hdsi);
 800658c:	2300      	movs	r3, #0

      return HAL_ERROR;
 800658e:	2001      	movs	r0, #1
      __HAL_UNLOCK(hdsi);
 8006590:	742b      	strb	r3, [r5, #16]

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);

  return HAL_OK;
}
 8006592:	b003      	add	sp, #12
 8006594:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  if (Mode == DSI_DCS_SHORT_PKT_READ)
 8006598:	f1b9 0f06 	cmp.w	r9, #6
 800659c:	d10f      	bne.n	80065be <HAL_DSI_Read+0x64>
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 800659e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    DSI_ConfigPacketHeader(hdsi->Instance, ChannelNbr, Mode, DCSCmd, 0U);
 80065a0:	682a      	ldr	r2, [r5, #0]
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 80065a2:	021b      	lsls	r3, r3, #8
 80065a4:	ea43 1484 	orr.w	r4, r3, r4, lsl #6
 80065a8:	f044 0406 	orr.w	r4, r4, #6
 80065ac:	66d4      	str	r4, [r2, #108]	; 0x6c
  tickstart = HAL_GetTick();
 80065ae:	f7ff fa25 	bl	80059fc <HAL_GetTick>
 80065b2:	4604      	mov	r4, r0
  while (((int32_t)(datasize)) > 0)
 80065b4:	2e00      	cmp	r6, #0
 80065b6:	dc27      	bgt.n	8006608 <HAL_DSI_Read+0xae>
  __HAL_UNLOCK(hdsi);
 80065b8:	2000      	movs	r0, #0
 80065ba:	7428      	strb	r0, [r5, #16]
  return HAL_OK;
 80065bc:	e7e9      	b.n	8006592 <HAL_DSI_Read+0x38>
  else if (Mode == DSI_GEN_SHORT_PKT_READ_P0)
 80065be:	f1b9 0f04 	cmp.w	r9, #4
 80065c2:	d105      	bne.n	80065d0 <HAL_DSI_Read+0x76>
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 80065c4:	01a4      	lsls	r4, r4, #6
    DSI_ConfigPacketHeader(hdsi->Instance, ChannelNbr, Mode, 0U, 0U);
 80065c6:	682b      	ldr	r3, [r5, #0]
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 80065c8:	f044 0404 	orr.w	r4, r4, #4
 80065cc:	66dc      	str	r4, [r3, #108]	; 0x6c
}
 80065ce:	e7ee      	b.n	80065ae <HAL_DSI_Read+0x54>
  else if (Mode == DSI_GEN_SHORT_PKT_READ_P1)
 80065d0:	f1b9 0f14 	cmp.w	r9, #20
 80065d4:	d108      	bne.n	80065e8 <HAL_DSI_Read+0x8e>
    DSI_ConfigPacketHeader(hdsi->Instance, ChannelNbr, Mode, ParametersTable[0U], 0U);
 80065d6:	f898 1000 	ldrb.w	r1, [r8]
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 80065da:	01a4      	lsls	r4, r4, #6
    DSI_ConfigPacketHeader(hdsi->Instance, ChannelNbr, Mode, ParametersTable[0U], 0U);
 80065dc:	682b      	ldr	r3, [r5, #0]
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 80065de:	ea44 2401 	orr.w	r4, r4, r1, lsl #8
 80065e2:	f044 0414 	orr.w	r4, r4, #20
 80065e6:	e7f1      	b.n	80065cc <HAL_DSI_Read+0x72>
  else if (Mode == DSI_GEN_SHORT_PKT_READ_P2)
 80065e8:	f1b9 0f24 	cmp.w	r9, #36	; 0x24
 80065ec:	d1ce      	bne.n	800658c <HAL_DSI_Read+0x32>
    DSI_ConfigPacketHeader(hdsi->Instance, ChannelNbr, Mode, ParametersTable[0U], ParametersTable[1U]);
 80065ee:	f898 1001 	ldrb.w	r1, [r8, #1]
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 80065f2:	01a4      	lsls	r4, r4, #6
    DSI_ConfigPacketHeader(hdsi->Instance, ChannelNbr, Mode, ParametersTable[0U], ParametersTable[1U]);
 80065f4:	f898 2000 	ldrb.w	r2, [r8]
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 80065f8:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
    DSI_ConfigPacketHeader(hdsi->Instance, ChannelNbr, Mode, ParametersTable[0U], ParametersTable[1U]);
 80065fc:	682b      	ldr	r3, [r5, #0]
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 80065fe:	ea44 2402 	orr.w	r4, r4, r2, lsl #8
 8006602:	f044 0424 	orr.w	r4, r4, #36	; 0x24
 8006606:	e7e1      	b.n	80065cc <HAL_DSI_Read+0x72>
    if ((hdsi->Instance->GPSR & DSI_GPSR_PRDFE) == 0U)
 8006608:	682a      	ldr	r2, [r5, #0]
 800660a:	6f53      	ldr	r3, [r2, #116]	; 0x74
 800660c:	f013 0310 	ands.w	r3, r3, #16
 8006610:	d10d      	bne.n	800662e <HAL_DSI_Read+0xd4>
      nbbytes = (datasize < 4U) ? datasize : 4U;
 8006612:	2e04      	cmp	r6, #4
      fifoword = hdsi->Instance->GPDR;
 8006614:	6f10      	ldr	r0, [r2, #112]	; 0x70
      nbbytes = (datasize < 4U) ? datasize : 4U;
 8006616:	4632      	mov	r2, r6
 8006618:	bf28      	it	cs
 800661a:	2204      	movcs	r2, #4
        *pdata = (uint8_t)(fifoword >> (8U * count));
 800661c:	00d9      	lsls	r1, r3, #3
 800661e:	fa20 f101 	lsr.w	r1, r0, r1
 8006622:	54f9      	strb	r1, [r7, r3]
      for (count = 0U; count < nbbytes; count++)
 8006624:	3301      	adds	r3, #1
 8006626:	429a      	cmp	r2, r3
 8006628:	d1f8      	bne.n	800661c <HAL_DSI_Read+0xc2>
        pdata++;
 800662a:	4417      	add	r7, r2
        datasize--;
 800662c:	1ab6      	subs	r6, r6, r2
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 800662e:	f7ff f9e5 	bl	80059fc <HAL_GetTick>
 8006632:	1b00      	subs	r0, r0, r4
 8006634:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8006638:	d903      	bls.n	8006642 <HAL_DSI_Read+0xe8>
      __HAL_UNLOCK(hdsi);
 800663a:	2300      	movs	r3, #0
      return HAL_TIMEOUT;
 800663c:	2003      	movs	r0, #3
      __HAL_UNLOCK(hdsi);
 800663e:	742b      	strb	r3, [r5, #16]
      return HAL_TIMEOUT;
 8006640:	e7a7      	b.n	8006592 <HAL_DSI_Read+0x38>
    if ((hdsi->Instance->GPSR & DSI_GPSR_RCB) == 0U)
 8006642:	682b      	ldr	r3, [r5, #0]
 8006644:	6f5a      	ldr	r2, [r3, #116]	; 0x74
 8006646:	0652      	lsls	r2, r2, #25
 8006648:	d4b4      	bmi.n	80065b4 <HAL_DSI_Read+0x5a>
      if ((hdsi->Instance->ISR[1U] & DSI_ISR1_PSE) == DSI_ISR1_PSE)
 800664a:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800664e:	069b      	lsls	r3, r3, #26
 8006650:	d49c      	bmi.n	800658c <HAL_DSI_Read+0x32>
 8006652:	e7af      	b.n	80065b4 <HAL_DSI_Read+0x5a>
  __HAL_LOCK(hdsi);
 8006654:	2002      	movs	r0, #2
 8006656:	e79c      	b.n	8006592 <HAL_DSI_Read+0x38>

08006658 <HAL_DSI_SetLowPowerRXFilter>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetLowPowerRXFilter(DSI_HandleTypeDef *hdsi, uint32_t Frequency)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8006658:	7c03      	ldrb	r3, [r0, #16]
 800665a:	2b01      	cmp	r3, #1
 800665c:	d010      	beq.n	8006680 <HAL_DSI_SetLowPowerRXFilter+0x28>

  /* Low-Power RX low-pass Filtering Tuning */
  hdsi->Instance->WPCR[1U] &= ~DSI_WPCR1_LPRXFT;
 800665e:	6803      	ldr	r3, [r0, #0]
 8006660:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 8006664:	f022 62c0 	bic.w	r2, r2, #100663296	; 0x6000000
 8006668:	f8c3 241c 	str.w	r2, [r3, #1052]	; 0x41c
  hdsi->Instance->WPCR[1U] |= Frequency << 25U;
 800666c:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 8006670:	ea42 6141 	orr.w	r1, r2, r1, lsl #25
 8006674:	f8c3 141c 	str.w	r1, [r3, #1052]	; 0x41c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8006678:	2300      	movs	r3, #0
 800667a:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800667c:	4618      	mov	r0, r3
 800667e:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8006680:	2002      	movs	r0, #2
}
 8006682:	4770      	bx	lr

08006684 <HAL_GPIO_Init>:
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8006684:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t position = 0x00U;
 8006688:	2300      	movs	r3, #0
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800668a:	f8df 91cc 	ldr.w	r9, [pc, #460]	; 8006858 <HAL_GPIO_Init+0x1d4>
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
 800668e:	f04f 44b0 	mov.w	r4, #1476395008	; 0x58000000
  while (((GPIO_Init->Pin) >> position) != 0x00U)
 8006692:	680a      	ldr	r2, [r1, #0]
 8006694:	fa32 f503 	lsrs.w	r5, r2, r3
 8006698:	d102      	bne.n	80066a0 <HAL_GPIO_Init+0x1c>
      }
    }

    position++;
  }
}
 800669a:	b003      	add	sp, #12
 800669c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
 80066a0:	f04f 0e01 	mov.w	lr, #1
 80066a4:	fa0e fe03 	lsl.w	lr, lr, r3
    if (iocurrent != 0x00U)
 80066a8:	ea1e 0202 	ands.w	r2, lr, r2
 80066ac:	f000 80bd 	beq.w	800682a <HAL_GPIO_Init+0x1a6>
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 80066b0:	684e      	ldr	r6, [r1, #4]
 80066b2:	ea4f 0843 	mov.w	r8, r3, lsl #1
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
 80066b6:	f04f 0c03 	mov.w	ip, #3
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 80066ba:	f006 0503 	and.w	r5, r6, #3
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
 80066be:	fa0c fc08 	lsl.w	ip, ip, r8
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 80066c2:	1e6f      	subs	r7, r5, #1
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
 80066c4:	ea6f 0c0c 	mvn.w	ip, ip
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 80066c8:	2f01      	cmp	r7, #1
 80066ca:	d834      	bhi.n	8006736 <HAL_GPIO_Init+0xb2>
        temp = GPIOx->OSPEEDR;
 80066cc:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
 80066ce:	ea07 0a0c 	and.w	sl, r7, ip
        temp |= (GPIO_Init->Speed << (position * 2U));
 80066d2:	68cf      	ldr	r7, [r1, #12]
 80066d4:	fa07 f708 	lsl.w	r7, r7, r8
 80066d8:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OSPEEDR = temp;
 80066dc:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 80066de:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
 80066e0:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 80066e4:	f3c6 1700 	ubfx	r7, r6, #4, #1
 80066e8:	409f      	lsls	r7, r3
 80066ea:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 80066ee:	6047      	str	r7, [r0, #4]
      temp = GPIOx->PUPDR;
 80066f0:	68c7      	ldr	r7, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80066f2:	2d02      	cmp	r5, #2
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
 80066f4:	ea07 0e0c 	and.w	lr, r7, ip
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 80066f8:	688f      	ldr	r7, [r1, #8]
 80066fa:	fa07 f708 	lsl.w	r7, r7, r8
 80066fe:	ea47 070e 	orr.w	r7, r7, lr
      GPIOx->PUPDR = temp;
 8006702:	60c7      	str	r7, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8006704:	d119      	bne.n	800673a <HAL_GPIO_Init+0xb6>
        temp = GPIOx->AFR[position >> 3U];
 8006706:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
 800670a:	f003 0b07 	and.w	fp, r3, #7
 800670e:	f04f 0e0f 	mov.w	lr, #15
 8006712:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
 8006716:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
        temp = GPIOx->AFR[position >> 3U];
 800671a:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
 800671e:	fa0e fe0b 	lsl.w	lr, lr, fp
 8006722:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
 8006726:	690f      	ldr	r7, [r1, #16]
 8006728:	fa07 f70b 	lsl.w	r7, r7, fp
 800672c:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 8006730:	f8ca 7020 	str.w	r7, [sl, #32]
 8006734:	e001      	b.n	800673a <HAL_GPIO_Init+0xb6>
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8006736:	2d03      	cmp	r5, #3
 8006738:	d1da      	bne.n	80066f0 <HAL_GPIO_Init+0x6c>
      temp = GPIOx->MODER;
 800673a:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800673c:	fa05 f508 	lsl.w	r5, r5, r8
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8006740:	f416 3f40 	tst.w	r6, #196608	; 0x30000
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
 8006744:	ea07 070c 	and.w	r7, r7, ip
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8006748:	ea47 0705 	orr.w	r7, r7, r5
      GPIOx->MODER = temp;
 800674c:	6007      	str	r7, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800674e:	d06c      	beq.n	800682a <HAL_GPIO_Init+0x1a6>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8006750:	f8d9 50f4 	ldr.w	r5, [r9, #244]	; 0xf4
 8006754:	f023 0703 	bic.w	r7, r3, #3
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
 8006758:	f003 0c03 	and.w	ip, r3, #3
 800675c:	f04f 0e0f 	mov.w	lr, #15
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8006760:	f045 0502 	orr.w	r5, r5, #2
 8006764:	f107 47b0 	add.w	r7, r7, #1476395008	; 0x58000000
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
 8006768:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800676c:	f8c9 50f4 	str.w	r5, [r9, #244]	; 0xf4
 8006770:	f507 6780 	add.w	r7, r7, #1024	; 0x400
 8006774:	f8d9 50f4 	ldr.w	r5, [r9, #244]	; 0xf4
 8006778:	f005 0502 	and.w	r5, r5, #2
 800677c:	9501      	str	r5, [sp, #4]
 800677e:	9d01      	ldr	r5, [sp, #4]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
 8006780:	fa0e f50c 	lsl.w	r5, lr, ip
        temp = SYSCFG->EXTICR[position >> 2U];
 8006784:	f8d7 8008 	ldr.w	r8, [r7, #8]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
 8006788:	ea28 0e05 	bic.w	lr, r8, r5
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
 800678c:	4d31      	ldr	r5, [pc, #196]	; (8006854 <HAL_GPIO_Init+0x1d0>)
 800678e:	42a8      	cmp	r0, r5
 8006790:	d04d      	beq.n	800682e <HAL_GPIO_Init+0x1aa>
 8006792:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006796:	42a8      	cmp	r0, r5
 8006798:	d04b      	beq.n	8006832 <HAL_GPIO_Init+0x1ae>
 800679a:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800679e:	42a8      	cmp	r0, r5
 80067a0:	d049      	beq.n	8006836 <HAL_GPIO_Init+0x1b2>
 80067a2:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80067a6:	42a8      	cmp	r0, r5
 80067a8:	d047      	beq.n	800683a <HAL_GPIO_Init+0x1b6>
 80067aa:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80067ae:	42a8      	cmp	r0, r5
 80067b0:	d045      	beq.n	800683e <HAL_GPIO_Init+0x1ba>
 80067b2:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80067b6:	42a8      	cmp	r0, r5
 80067b8:	d043      	beq.n	8006842 <HAL_GPIO_Init+0x1be>
 80067ba:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80067be:	42a8      	cmp	r0, r5
 80067c0:	d041      	beq.n	8006846 <HAL_GPIO_Init+0x1c2>
 80067c2:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80067c6:	42a8      	cmp	r0, r5
 80067c8:	d03f      	beq.n	800684a <HAL_GPIO_Init+0x1c6>
 80067ca:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80067ce:	42a8      	cmp	r0, r5
 80067d0:	d03d      	beq.n	800684e <HAL_GPIO_Init+0x1ca>
 80067d2:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80067d6:	42a8      	cmp	r0, r5
 80067d8:	bf0c      	ite	eq
 80067da:	2509      	moveq	r5, #9
 80067dc:	250a      	movne	r5, #10
 80067de:	fa05 f50c 	lsl.w	r5, r5, ip
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 80067e2:	f416 1f80 	tst.w	r6, #1048576	; 0x100000
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
 80067e6:	ea45 050e 	orr.w	r5, r5, lr
        SYSCFG->EXTICR[position >> 2U] = temp;
 80067ea:	60bd      	str	r5, [r7, #8]
        temp &= ~(iocurrent);
 80067ec:	ea6f 0702 	mvn.w	r7, r2
        temp = EXTI->RTSR1;
 80067f0:	6825      	ldr	r5, [r4, #0]
        temp &= ~(iocurrent);
 80067f2:	bf0c      	ite	eq
 80067f4:	403d      	andeq	r5, r7
          temp |= iocurrent;
 80067f6:	4315      	orrne	r5, r2
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 80067f8:	f416 1f00 	tst.w	r6, #2097152	; 0x200000
        EXTI->RTSR1 = temp;
 80067fc:	6025      	str	r5, [r4, #0]
        temp = EXTI->FTSR1;
 80067fe:	6865      	ldr	r5, [r4, #4]
        temp &= ~(iocurrent);
 8006800:	bf0c      	ite	eq
 8006802:	403d      	andeq	r5, r7
          temp |= iocurrent;
 8006804:	4315      	orrne	r5, r2
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8006806:	f416 3f00 	tst.w	r6, #131072	; 0x20000
        EXTI->FTSR1 = temp;
 800680a:	6065      	str	r5, [r4, #4]
        temp = EXTI_CurrentCPU->EMR1;
 800680c:	f8d4 5084 	ldr.w	r5, [r4, #132]	; 0x84
        temp &= ~(iocurrent);
 8006810:	bf0c      	ite	eq
 8006812:	403d      	andeq	r5, r7
          temp |= iocurrent;
 8006814:	4315      	orrne	r5, r2
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8006816:	03f6      	lsls	r6, r6, #15
        EXTI_CurrentCPU->EMR1 = temp;
 8006818:	f8c4 5084 	str.w	r5, [r4, #132]	; 0x84
        temp = EXTI_CurrentCPU->IMR1;
 800681c:	f8d4 5080 	ldr.w	r5, [r4, #128]	; 0x80
        temp &= ~(iocurrent);
 8006820:	bf54      	ite	pl
 8006822:	403d      	andpl	r5, r7
          temp |= iocurrent;
 8006824:	4315      	orrmi	r5, r2
        EXTI_CurrentCPU->IMR1 = temp;
 8006826:	f8c4 5080 	str.w	r5, [r4, #128]	; 0x80
    position++;
 800682a:	3301      	adds	r3, #1
 800682c:	e731      	b.n	8006692 <HAL_GPIO_Init+0xe>
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
 800682e:	2500      	movs	r5, #0
 8006830:	e7d5      	b.n	80067de <HAL_GPIO_Init+0x15a>
 8006832:	2501      	movs	r5, #1
 8006834:	e7d3      	b.n	80067de <HAL_GPIO_Init+0x15a>
 8006836:	2502      	movs	r5, #2
 8006838:	e7d1      	b.n	80067de <HAL_GPIO_Init+0x15a>
 800683a:	2503      	movs	r5, #3
 800683c:	e7cf      	b.n	80067de <HAL_GPIO_Init+0x15a>
 800683e:	2504      	movs	r5, #4
 8006840:	e7cd      	b.n	80067de <HAL_GPIO_Init+0x15a>
 8006842:	2505      	movs	r5, #5
 8006844:	e7cb      	b.n	80067de <HAL_GPIO_Init+0x15a>
 8006846:	2506      	movs	r5, #6
 8006848:	e7c9      	b.n	80067de <HAL_GPIO_Init+0x15a>
 800684a:	2507      	movs	r5, #7
 800684c:	e7c7      	b.n	80067de <HAL_GPIO_Init+0x15a>
 800684e:	2508      	movs	r5, #8
 8006850:	e7c5      	b.n	80067de <HAL_GPIO_Init+0x15a>
 8006852:	bf00      	nop
 8006854:	58020000 	.word	0x58020000
 8006858:	58024400 	.word	0x58024400

0800685c <HAL_GPIO_DeInit>:
  * @param  GPIO_Pin: specifies the port bit to be written.
  *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
  * @retval None
  */
void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
{
 800685c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t position = 0x00U;
 8006860:	2200      	movs	r2, #0
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      /* Clear the External Interrupt or Event for the current IO */
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
 8006862:	f8df 812c 	ldr.w	r8, [pc, #300]	; 8006990 <HAL_GPIO_DeInit+0x134>
 8006866:	f8df 912c 	ldr.w	r9, [pc, #300]	; 8006994 <HAL_GPIO_DeInit+0x138>
 800686a:	f8df a12c 	ldr.w	sl, [pc, #300]	; 8006998 <HAL_GPIO_DeInit+0x13c>
 800686e:	f8df b12c 	ldr.w	fp, [pc, #300]	; 800699c <HAL_GPIO_DeInit+0x140>
  while ((GPIO_Pin >> position) != 0x00U)
 8006872:	fa31 f302 	lsrs.w	r3, r1, r2
 8006876:	d101      	bne.n	800687c <HAL_GPIO_DeInit+0x20>
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
    }

    position++;
  }
}
 8006878:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    iocurrent = GPIO_Pin & (1UL << position) ;
 800687c:	2301      	movs	r3, #1
 800687e:	fa03 fc02 	lsl.w	ip, r3, r2
    if (iocurrent != 0x00U)
 8006882:	ea1c 0601 	ands.w	r6, ip, r1
 8006886:	d06d      	beq.n	8006964 <HAL_GPIO_DeInit+0x108>
      tmp = SYSCFG->EXTICR[position >> 2U];
 8006888:	f022 0403 	bic.w	r4, r2, #3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
 800688c:	f002 0703 	and.w	r7, r2, #3
 8006890:	250f      	movs	r5, #15
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
 8006892:	4b3e      	ldr	r3, [pc, #248]	; (800698c <HAL_GPIO_DeInit+0x130>)
 8006894:	f104 44b0 	add.w	r4, r4, #1476395008	; 0x58000000
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
 8006898:	00bf      	lsls	r7, r7, #2
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
 800689a:	4298      	cmp	r0, r3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
 800689c:	fa05 f507 	lsl.w	r5, r5, r7
      tmp = SYSCFG->EXTICR[position >> 2U];
 80068a0:	f8d4 e408 	ldr.w	lr, [r4, #1032]	; 0x408
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
 80068a4:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80068a8:	ea05 0e0e 	and.w	lr, r5, lr
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
 80068ac:	d05c      	beq.n	8006968 <HAL_GPIO_DeInit+0x10c>
 80068ae:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80068b2:	4298      	cmp	r0, r3
 80068b4:	d05a      	beq.n	800696c <HAL_GPIO_DeInit+0x110>
 80068b6:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80068ba:	4298      	cmp	r0, r3
 80068bc:	d058      	beq.n	8006970 <HAL_GPIO_DeInit+0x114>
 80068be:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80068c2:	4298      	cmp	r0, r3
 80068c4:	d056      	beq.n	8006974 <HAL_GPIO_DeInit+0x118>
 80068c6:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80068ca:	4298      	cmp	r0, r3
 80068cc:	d054      	beq.n	8006978 <HAL_GPIO_DeInit+0x11c>
 80068ce:	4540      	cmp	r0, r8
 80068d0:	d054      	beq.n	800697c <HAL_GPIO_DeInit+0x120>
 80068d2:	4548      	cmp	r0, r9
 80068d4:	d054      	beq.n	8006980 <HAL_GPIO_DeInit+0x124>
 80068d6:	4550      	cmp	r0, sl
 80068d8:	d054      	beq.n	8006984 <HAL_GPIO_DeInit+0x128>
 80068da:	4558      	cmp	r0, fp
 80068dc:	d054      	beq.n	8006988 <HAL_GPIO_DeInit+0x12c>
 80068de:	f503 53a0 	add.w	r3, r3, #5120	; 0x1400
 80068e2:	4298      	cmp	r0, r3
 80068e4:	bf0c      	ite	eq
 80068e6:	2309      	moveq	r3, #9
 80068e8:	230a      	movne	r3, #10
 80068ea:	40bb      	lsls	r3, r7
 80068ec:	4573      	cmp	r3, lr
 80068ee:	d119      	bne.n	8006924 <HAL_GPIO_DeInit+0xc8>
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
 80068f0:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 80068f4:	f8d3 7080 	ldr.w	r7, [r3, #128]	; 0x80
 80068f8:	ea27 0706 	bic.w	r7, r7, r6
 80068fc:	f8c3 7080 	str.w	r7, [r3, #128]	; 0x80
        EXTI_CurrentCPU->EMR1 &= ~(iocurrent);
 8006900:	f8d3 7084 	ldr.w	r7, [r3, #132]	; 0x84
 8006904:	ea27 0706 	bic.w	r7, r7, r6
 8006908:	f8c3 7084 	str.w	r7, [r3, #132]	; 0x84
        EXTI->FTSR1 &= ~(iocurrent);
 800690c:	685f      	ldr	r7, [r3, #4]
 800690e:	ea27 0706 	bic.w	r7, r7, r6
 8006912:	605f      	str	r7, [r3, #4]
        EXTI->RTSR1 &= ~(iocurrent);
 8006914:	681f      	ldr	r7, [r3, #0]
 8006916:	ea27 0606 	bic.w	r6, r7, r6
 800691a:	601e      	str	r6, [r3, #0]
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
 800691c:	68a3      	ldr	r3, [r4, #8]
 800691e:	ea23 0305 	bic.w	r3, r3, r5
 8006922:	60a3      	str	r3, [r4, #8]
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
 8006924:	2503      	movs	r5, #3
 8006926:	0053      	lsls	r3, r2, #1
 8006928:	6804      	ldr	r4, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
 800692a:	f002 0707 	and.w	r7, r2, #7
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
 800692e:	fa05 f303 	lsl.w	r3, r5, r3
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
 8006932:	260f      	movs	r6, #15
 8006934:	00bf      	lsls	r7, r7, #2
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
 8006936:	431c      	orrs	r4, r3
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
 8006938:	40be      	lsls	r6, r7
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
 800693a:	6004      	str	r4, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
 800693c:	fa22 f405 	lsr.w	r4, r2, r5
 8006940:	eb00 0484 	add.w	r4, r0, r4, lsl #2
 8006944:	6a25      	ldr	r5, [r4, #32]
 8006946:	ea25 0606 	bic.w	r6, r5, r6
 800694a:	6226      	str	r6, [r4, #32]
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
 800694c:	68c4      	ldr	r4, [r0, #12]
 800694e:	ea24 0403 	bic.w	r4, r4, r3
 8006952:	60c4      	str	r4, [r0, #12]
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT0 << position) ;
 8006954:	6844      	ldr	r4, [r0, #4]
 8006956:	ea24 040c 	bic.w	r4, r4, ip
 800695a:	6044      	str	r4, [r0, #4]
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
 800695c:	6884      	ldr	r4, [r0, #8]
 800695e:	ea24 0303 	bic.w	r3, r4, r3
 8006962:	6083      	str	r3, [r0, #8]
    position++;
 8006964:	3201      	adds	r2, #1
 8006966:	e784      	b.n	8006872 <HAL_GPIO_DeInit+0x16>
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
 8006968:	2300      	movs	r3, #0
 800696a:	e7be      	b.n	80068ea <HAL_GPIO_DeInit+0x8e>
 800696c:	2301      	movs	r3, #1
 800696e:	e7bc      	b.n	80068ea <HAL_GPIO_DeInit+0x8e>
 8006970:	2302      	movs	r3, #2
 8006972:	e7ba      	b.n	80068ea <HAL_GPIO_DeInit+0x8e>
 8006974:	2303      	movs	r3, #3
 8006976:	e7b8      	b.n	80068ea <HAL_GPIO_DeInit+0x8e>
 8006978:	2304      	movs	r3, #4
 800697a:	e7b6      	b.n	80068ea <HAL_GPIO_DeInit+0x8e>
 800697c:	2305      	movs	r3, #5
 800697e:	e7b4      	b.n	80068ea <HAL_GPIO_DeInit+0x8e>
 8006980:	2306      	movs	r3, #6
 8006982:	e7b2      	b.n	80068ea <HAL_GPIO_DeInit+0x8e>
 8006984:	2307      	movs	r3, #7
 8006986:	e7b0      	b.n	80068ea <HAL_GPIO_DeInit+0x8e>
 8006988:	2308      	movs	r3, #8
 800698a:	e7ae      	b.n	80068ea <HAL_GPIO_DeInit+0x8e>
 800698c:	58020000 	.word	0x58020000
 8006990:	58021400 	.word	0x58021400
 8006994:	58021800 	.word	0x58021800
 8006998:	58021c00 	.word	0x58021c00
 800699c:	58022000 	.word	0x58022000

080069a0 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != 0x00U)
 80069a0:	6903      	ldr	r3, [r0, #16]
 80069a2:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 80069a4:	bf14      	ite	ne
 80069a6:	2001      	movne	r0, #1
 80069a8:	2000      	moveq	r0, #0
 80069aa:	4770      	bx	lr

080069ac <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 80069ac:	b10a      	cbz	r2, 80069b2 <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
 80069ae:	6181      	str	r1, [r0, #24]
  }
}
 80069b0:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
 80069b2:	0409      	lsls	r1, r1, #16
 80069b4:	e7fb      	b.n	80069ae <HAL_GPIO_WritePin+0x2>
	...

080069b8 <HAL_HSEM_FastTake>:
    /*take success when MasterID match and take bit set*/
    return HAL_OK;
  }
#else  
  /* Read the RLR register to take the semaphore */
  if (HSEM->RLR[SemID] == (HSEM_CR_COREID_CURRENT | HSEM_RLR_LOCK))
 80069b8:	4b04      	ldr	r3, [pc, #16]	; (80069cc <HAL_HSEM_FastTake+0x14>)
 80069ba:	3020      	adds	r0, #32
 80069bc:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
  }
#endif

  /* Semaphore take fails */
  return HAL_ERROR;
}
 80069c0:	4b03      	ldr	r3, [pc, #12]	; (80069d0 <HAL_HSEM_FastTake+0x18>)
 80069c2:	1ac0      	subs	r0, r0, r3
 80069c4:	bf18      	it	ne
 80069c6:	2001      	movne	r0, #1
 80069c8:	4770      	bx	lr
 80069ca:	bf00      	nop
 80069cc:	58026400 	.word	0x58026400
 80069d0:	80000300 	.word	0x80000300

080069d4 <HAL_HSEM_Release>:

  /* Clear the semaphore by writing to the R register : the MasterID , the processID and take bit = 0  */
#if  USE_MULTI_CORE_SHARED_CODE != 0U
  HSEM->R[SemID] = (ProcessID | ((HAL_GetCurrentCPUID() << POSITION_VAL(HSEM_R_MASTERID)) & HSEM_R_MASTERID));
#else
  HSEM->R[SemID] = (ProcessID | HSEM_CR_COREID_CURRENT);
 80069d4:	f441 7140 	orr.w	r1, r1, #768	; 0x300
 80069d8:	4b01      	ldr	r3, [pc, #4]	; (80069e0 <HAL_HSEM_Release+0xc>)
 80069da:	f843 1020 	str.w	r1, [r3, r0, lsl #2]
#endif

}
 80069de:	4770      	bx	lr
 80069e0:	58026400 	.word	0x58026400

080069e4 <I2C_Flush_TXDR>:
  */
static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c)
{
  /* If a pending TXIS flag is set */
  /* Write a dummy data in TXDR to clear it */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
 80069e4:	6803      	ldr	r3, [r0, #0]
 80069e6:	699a      	ldr	r2, [r3, #24]
 80069e8:	0791      	lsls	r1, r2, #30
 80069ea:	d501      	bpl.n	80069f0 <I2C_Flush_TXDR+0xc>
  {
    hi2c->Instance->TXDR = 0x00U;
 80069ec:	2200      	movs	r2, #0
 80069ee:	629a      	str	r2, [r3, #40]	; 0x28
  }

  /* Flush TX register if not empty */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80069f0:	699a      	ldr	r2, [r3, #24]
 80069f2:	07d2      	lsls	r2, r2, #31
 80069f4:	d403      	bmi.n	80069fe <I2C_Flush_TXDR+0x1a>
  {
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
 80069f6:	699a      	ldr	r2, [r3, #24]
 80069f8:	f042 0201 	orr.w	r2, r2, #1
 80069fc:	619a      	str	r2, [r3, #24]
  }
}
 80069fe:	4770      	bx	lr

08006a00 <I2C_TransferConfig>:
  *     @arg @ref I2C_GENERATE_START_WRITE Generate Restart for write request.
  * @retval None
  */
static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t Size, uint32_t Mode,
                               uint32_t Request)
{
 8006a00:	b530      	push	{r4, r5, lr}
 8006a02:	9d03      	ldr	r5, [sp, #12]
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* Declaration of tmp to prevent undefined behavior of volatile usage */
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8006a04:	f3c1 0109 	ubfx	r1, r1, #0, #10
                            (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
                              (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
 8006a08:	6804      	ldr	r4, [r0, #0]
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8006a0a:	432b      	orrs	r3, r5
  MODIFY_REG(hi2c->Instance->CR2, \
 8006a0c:	6860      	ldr	r0, [r4, #4]
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8006a0e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  MODIFY_REG(hi2c->Instance->CR2, \
 8006a12:	4a05      	ldr	r2, [pc, #20]	; (8006a28 <I2C_TransferConfig+0x28>)
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8006a14:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->CR2, \
 8006a16:	ea42 5255 	orr.w	r2, r2, r5, lsr #21
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8006a1a:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
  MODIFY_REG(hi2c->Instance->CR2, \
 8006a1e:	ea20 0002 	bic.w	r0, r0, r2
 8006a22:	4303      	orrs	r3, r0
 8006a24:	6063      	str	r3, [r4, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
                I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
 8006a26:	bd30      	pop	{r4, r5, pc}
 8006a28:	03ff63ff 	.word	0x03ff63ff

08006a2c <I2C_IsErrorOccurred>:
{
 8006a2c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  uint32_t itflag   = hi2c->Instance->ISR;
 8006a30:	6803      	ldr	r3, [r0, #0]
{
 8006a32:	4605      	mov	r5, r0
 8006a34:	4688      	mov	r8, r1
 8006a36:	4617      	mov	r7, r2
  uint32_t itflag   = hi2c->Instance->ISR;
 8006a38:	699c      	ldr	r4, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
 8006a3a:	f014 0410 	ands.w	r4, r4, #16
 8006a3e:	d079      	beq.n	8006b34 <I2C_IsErrorOccurred+0x108>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8006a40:	2210      	movs	r2, #16
  HAL_StatusTypeDef status = HAL_OK;
 8006a42:	2600      	movs	r6, #0
              hi2c->State = HAL_I2C_STATE_READY;
 8006a44:	f04f 0920 	mov.w	r9, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8006a48:	61da      	str	r2, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
 8006a4a:	682b      	ldr	r3, [r5, #0]
 8006a4c:	699a      	ldr	r2, [r3, #24]
 8006a4e:	0694      	lsls	r4, r2, #26
 8006a50:	d436      	bmi.n	8006ac0 <I2C_IsErrorOccurred+0x94>
 8006a52:	b10e      	cbz	r6, 8006a58 <I2C_IsErrorOccurred+0x2c>
    error_code |= HAL_I2C_ERROR_AF;
 8006a54:	2404      	movs	r4, #4
 8006a56:	e039      	b.n	8006acc <I2C_IsErrorOccurred+0xa0>
      if (Timeout != HAL_MAX_DELAY)
 8006a58:	f1b8 3fff 	cmp.w	r8, #4294967295
 8006a5c:	d0f6      	beq.n	8006a4c <I2C_IsErrorOccurred+0x20>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 8006a5e:	f7fe ffcd 	bl	80059fc <HAL_GetTick>
 8006a62:	1bc0      	subs	r0, r0, r7
 8006a64:	4540      	cmp	r0, r8
 8006a66:	d802      	bhi.n	8006a6e <I2C_IsErrorOccurred+0x42>
 8006a68:	f1b8 0f00 	cmp.w	r8, #0
 8006a6c:	d1ed      	bne.n	8006a4a <I2C_IsErrorOccurred+0x1e>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
 8006a6e:	682b      	ldr	r3, [r5, #0]
 8006a70:	6859      	ldr	r1, [r3, #4]
          tmp2 = hi2c->Mode;
 8006a72:	f895 2042 	ldrb.w	r2, [r5, #66]	; 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
 8006a76:	6998      	ldr	r0, [r3, #24]
          tmp2 = hi2c->Mode;
 8006a78:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
 8006a7a:	0400      	lsls	r0, r0, #16
 8006a7c:	d50a      	bpl.n	8006a94 <I2C_IsErrorOccurred+0x68>
 8006a7e:	0449      	lsls	r1, r1, #17
 8006a80:	d408      	bmi.n	8006a94 <I2C_IsErrorOccurred+0x68>
              (tmp1 != I2C_CR2_STOP) && \
 8006a82:	2a20      	cmp	r2, #32
 8006a84:	d006      	beq.n	8006a94 <I2C_IsErrorOccurred+0x68>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
 8006a86:	685a      	ldr	r2, [r3, #4]
 8006a88:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8006a8c:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
 8006a8e:	f7fe ffb5 	bl	80059fc <HAL_GetTick>
 8006a92:	4607      	mov	r7, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8006a94:	682b      	ldr	r3, [r5, #0]
 8006a96:	699c      	ldr	r4, [r3, #24]
 8006a98:	f014 0420 	ands.w	r4, r4, #32
 8006a9c:	d1d5      	bne.n	8006a4a <I2C_IsErrorOccurred+0x1e>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
 8006a9e:	f7fe ffad 	bl	80059fc <HAL_GetTick>
 8006aa2:	1bc0      	subs	r0, r0, r7
 8006aa4:	2819      	cmp	r0, #25
 8006aa6:	d9f5      	bls.n	8006a94 <I2C_IsErrorOccurred+0x68>
              hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8006aa8:	6c6b      	ldr	r3, [r5, #68]	; 0x44
              status = HAL_ERROR;
 8006aaa:	2601      	movs	r6, #1
              __HAL_UNLOCK(hi2c);
 8006aac:	f885 4040 	strb.w	r4, [r5, #64]	; 0x40
              hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8006ab0:	f043 0320 	orr.w	r3, r3, #32
 8006ab4:	646b      	str	r3, [r5, #68]	; 0x44
              hi2c->State = HAL_I2C_STATE_READY;
 8006ab6:	f885 9041 	strb.w	r9, [r5, #65]	; 0x41
              hi2c->Mode = HAL_I2C_MODE_NONE;
 8006aba:	f885 4042 	strb.w	r4, [r5, #66]	; 0x42
              status = HAL_ERROR;
 8006abe:	e7e9      	b.n	8006a94 <I2C_IsErrorOccurred+0x68>
    if (status == HAL_OK)
 8006ac0:	2e00      	cmp	r6, #0
 8006ac2:	d1c7      	bne.n	8006a54 <I2C_IsErrorOccurred+0x28>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8006ac4:	2220      	movs	r2, #32
    error_code |= HAL_I2C_ERROR_AF;
 8006ac6:	2404      	movs	r4, #4
    status = HAL_ERROR;
 8006ac8:	2601      	movs	r6, #1
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8006aca:	61da      	str	r2, [r3, #28]
  itflag = hi2c->Instance->ISR;
 8006acc:	682b      	ldr	r3, [r5, #0]
 8006ace:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
 8006ad0:	05d0      	lsls	r0, r2, #23
 8006ad2:	d505      	bpl.n	8006ae0 <I2C_IsErrorOccurred+0xb4>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
 8006ad4:	f44f 7180 	mov.w	r1, #256	; 0x100
    error_code |= HAL_I2C_ERROR_BERR;
 8006ad8:	f044 0401 	orr.w	r4, r4, #1
    status = HAL_ERROR;
 8006adc:	2601      	movs	r6, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
 8006ade:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
 8006ae0:	0551      	lsls	r1, r2, #21
 8006ae2:	d505      	bpl.n	8006af0 <I2C_IsErrorOccurred+0xc4>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
 8006ae4:	f44f 6180 	mov.w	r1, #1024	; 0x400
    error_code |= HAL_I2C_ERROR_OVR;
 8006ae8:	f044 0408 	orr.w	r4, r4, #8
    status = HAL_ERROR;
 8006aec:	2601      	movs	r6, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
 8006aee:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
 8006af0:	0592      	lsls	r2, r2, #22
 8006af2:	d521      	bpl.n	8006b38 <I2C_IsErrorOccurred+0x10c>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
 8006af4:	f44f 7200 	mov.w	r2, #512	; 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
 8006af8:	f044 0402 	orr.w	r4, r4, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
 8006afc:	61da      	str	r2, [r3, #28]
    I2C_Flush_TXDR(hi2c);
 8006afe:	4628      	mov	r0, r5
    __HAL_UNLOCK(hi2c);
 8006b00:	2601      	movs	r6, #1
    I2C_Flush_TXDR(hi2c);
 8006b02:	f7ff ff6f 	bl	80069e4 <I2C_Flush_TXDR>
    I2C_RESET_CR2(hi2c);
 8006b06:	682a      	ldr	r2, [r5, #0]
 8006b08:	6853      	ldr	r3, [r2, #4]
 8006b0a:	f023 73ff 	bic.w	r3, r3, #33423360	; 0x1fe0000
 8006b0e:	f423 338b 	bic.w	r3, r3, #71168	; 0x11600
 8006b12:	f423 73ff 	bic.w	r3, r3, #510	; 0x1fe
 8006b16:	f023 0301 	bic.w	r3, r3, #1
 8006b1a:	6053      	str	r3, [r2, #4]
    hi2c->ErrorCode |= error_code;
 8006b1c:	6c6b      	ldr	r3, [r5, #68]	; 0x44
 8006b1e:	431c      	orrs	r4, r3
    hi2c->State = HAL_I2C_STATE_READY;
 8006b20:	2320      	movs	r3, #32
    hi2c->ErrorCode |= error_code;
 8006b22:	646c      	str	r4, [r5, #68]	; 0x44
    hi2c->State = HAL_I2C_STATE_READY;
 8006b24:	f885 3041 	strb.w	r3, [r5, #65]	; 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8006b28:	2300      	movs	r3, #0
 8006b2a:	f885 3042 	strb.w	r3, [r5, #66]	; 0x42
    __HAL_UNLOCK(hi2c);
 8006b2e:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
 8006b32:	e003      	b.n	8006b3c <I2C_IsErrorOccurred+0x110>
  HAL_StatusTypeDef status = HAL_OK;
 8006b34:	4626      	mov	r6, r4
 8006b36:	e7c9      	b.n	8006acc <I2C_IsErrorOccurred+0xa0>
  if (status != HAL_OK)
 8006b38:	2e00      	cmp	r6, #0
 8006b3a:	d1e0      	bne.n	8006afe <I2C_IsErrorOccurred+0xd2>
}
 8006b3c:	4630      	mov	r0, r6
 8006b3e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

08006b42 <I2C_WaitOnTXISFlagUntilTimeout>:
{
 8006b42:	b570      	push	{r4, r5, r6, lr}
 8006b44:	4604      	mov	r4, r0
 8006b46:	460d      	mov	r5, r1
 8006b48:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 8006b4a:	6823      	ldr	r3, [r4, #0]
 8006b4c:	699b      	ldr	r3, [r3, #24]
 8006b4e:	079b      	lsls	r3, r3, #30
 8006b50:	d501      	bpl.n	8006b56 <I2C_WaitOnTXISFlagUntilTimeout+0x14>
  return HAL_OK;
 8006b52:	2000      	movs	r0, #0
}
 8006b54:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 8006b56:	4632      	mov	r2, r6
 8006b58:	4629      	mov	r1, r5
 8006b5a:	4620      	mov	r0, r4
 8006b5c:	f7ff ff66 	bl	8006a2c <I2C_IsErrorOccurred>
 8006b60:	b9a0      	cbnz	r0, 8006b8c <I2C_WaitOnTXISFlagUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
 8006b62:	1c6a      	adds	r2, r5, #1
 8006b64:	d0f1      	beq.n	8006b4a <I2C_WaitOnTXISFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006b66:	f7fe ff49 	bl	80059fc <HAL_GetTick>
 8006b6a:	1b80      	subs	r0, r0, r6
 8006b6c:	42a8      	cmp	r0, r5
 8006b6e:	d801      	bhi.n	8006b74 <I2C_WaitOnTXISFlagUntilTimeout+0x32>
 8006b70:	2d00      	cmp	r5, #0
 8006b72:	d1ea      	bne.n	8006b4a <I2C_WaitOnTXISFlagUntilTimeout+0x8>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8006b74:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8006b76:	f043 0320 	orr.w	r3, r3, #32
 8006b7a:	6463      	str	r3, [r4, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8006b7c:	2320      	movs	r3, #32
 8006b7e:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8006b82:	2300      	movs	r3, #0
 8006b84:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
        __HAL_UNLOCK(hi2c);
 8006b88:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
      return HAL_ERROR;
 8006b8c:	2001      	movs	r0, #1
 8006b8e:	e7e1      	b.n	8006b54 <I2C_WaitOnTXISFlagUntilTimeout+0x12>

08006b90 <I2C_WaitOnFlagUntilTimeout>:
{
 8006b90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006b94:	9f06      	ldr	r7, [sp, #24]
 8006b96:	4604      	mov	r4, r0
 8006b98:	4688      	mov	r8, r1
 8006b9a:	4616      	mov	r6, r2
 8006b9c:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8006b9e:	6822      	ldr	r2, [r4, #0]
 8006ba0:	6993      	ldr	r3, [r2, #24]
 8006ba2:	ea38 0303 	bics.w	r3, r8, r3
 8006ba6:	bf0c      	ite	eq
 8006ba8:	2301      	moveq	r3, #1
 8006baa:	2300      	movne	r3, #0
 8006bac:	42b3      	cmp	r3, r6
 8006bae:	d001      	beq.n	8006bb4 <I2C_WaitOnFlagUntilTimeout+0x24>
  return HAL_OK;
 8006bb0:	2000      	movs	r0, #0
 8006bb2:	e015      	b.n	8006be0 <I2C_WaitOnFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
 8006bb4:	1c6b      	adds	r3, r5, #1
 8006bb6:	d0f3      	beq.n	8006ba0 <I2C_WaitOnFlagUntilTimeout+0x10>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006bb8:	f7fe ff20 	bl	80059fc <HAL_GetTick>
 8006bbc:	1bc0      	subs	r0, r0, r7
 8006bbe:	42a8      	cmp	r0, r5
 8006bc0:	d801      	bhi.n	8006bc6 <I2C_WaitOnFlagUntilTimeout+0x36>
 8006bc2:	2d00      	cmp	r5, #0
 8006bc4:	d1eb      	bne.n	8006b9e <I2C_WaitOnFlagUntilTimeout+0xe>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8006bc6:	6c63      	ldr	r3, [r4, #68]	; 0x44
        __HAL_UNLOCK(hi2c);
 8006bc8:	2001      	movs	r0, #1
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8006bca:	f043 0320 	orr.w	r3, r3, #32
 8006bce:	6463      	str	r3, [r4, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8006bd0:	2320      	movs	r3, #32
 8006bd2:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8006bd6:	2300      	movs	r3, #0
 8006bd8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
        __HAL_UNLOCK(hi2c);
 8006bdc:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8006be0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08006be4 <I2C_RequestMemoryWrite>:
{
 8006be4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8006be8:	461e      	mov	r6, r3
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 8006bea:	4b18      	ldr	r3, [pc, #96]	; (8006c4c <I2C_RequestMemoryWrite+0x68>)
{
 8006bec:	4605      	mov	r5, r0
 8006bee:	4614      	mov	r4, r2
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 8006bf0:	9300      	str	r3, [sp, #0]
 8006bf2:	b2f2      	uxtb	r2, r6
 8006bf4:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
{
 8006bf8:	e9dd 7808 	ldrd	r7, r8, [sp, #32]
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 8006bfc:	f7ff ff00 	bl	8006a00 <I2C_TransferConfig>
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006c00:	4628      	mov	r0, r5
 8006c02:	4642      	mov	r2, r8
 8006c04:	4639      	mov	r1, r7
 8006c06:	f7ff ff9c 	bl	8006b42 <I2C_WaitOnTXISFlagUntilTimeout>
 8006c0a:	b118      	cbz	r0, 8006c14 <I2C_RequestMemoryWrite+0x30>
    return HAL_ERROR;
 8006c0c:	2001      	movs	r0, #1
}
 8006c0e:	b002      	add	sp, #8
 8006c10:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8006c14:	2e01      	cmp	r6, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8006c16:	682b      	ldr	r3, [r5, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8006c18:	d10d      	bne.n	8006c36 <I2C_RequestMemoryWrite+0x52>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8006c1a:	b2e4      	uxtb	r4, r4
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
 8006c1c:	2200      	movs	r2, #0
 8006c1e:	2180      	movs	r1, #128	; 0x80
 8006c20:	4628      	mov	r0, r5
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8006c22:	629c      	str	r4, [r3, #40]	; 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
 8006c24:	463b      	mov	r3, r7
 8006c26:	f8cd 8000 	str.w	r8, [sp]
 8006c2a:	f7ff ffb1 	bl	8006b90 <I2C_WaitOnFlagUntilTimeout>
    return HAL_ERROR;
 8006c2e:	3800      	subs	r0, #0
 8006c30:	bf18      	it	ne
 8006c32:	2001      	movne	r0, #1
 8006c34:	e7eb      	b.n	8006c0e <I2C_RequestMemoryWrite+0x2a>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8006c36:	0a22      	lsrs	r2, r4, #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006c38:	4639      	mov	r1, r7
 8006c3a:	4628      	mov	r0, r5
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8006c3c:	629a      	str	r2, [r3, #40]	; 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006c3e:	4642      	mov	r2, r8
 8006c40:	f7ff ff7f 	bl	8006b42 <I2C_WaitOnTXISFlagUntilTimeout>
 8006c44:	2800      	cmp	r0, #0
 8006c46:	d1e1      	bne.n	8006c0c <I2C_RequestMemoryWrite+0x28>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8006c48:	682b      	ldr	r3, [r5, #0]
 8006c4a:	e7e6      	b.n	8006c1a <I2C_RequestMemoryWrite+0x36>
 8006c4c:	80002000 	.word	0x80002000

08006c50 <I2C_RequestMemoryRead>:
{
 8006c50:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8006c54:	461e      	mov	r6, r3
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 8006c56:	4b18      	ldr	r3, [pc, #96]	; (8006cb8 <I2C_RequestMemoryRead+0x68>)
{
 8006c58:	4605      	mov	r5, r0
 8006c5a:	4614      	mov	r4, r2
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 8006c5c:	9300      	str	r3, [sp, #0]
 8006c5e:	b2f2      	uxtb	r2, r6
 8006c60:	2300      	movs	r3, #0
{
 8006c62:	e9dd 7808 	ldrd	r7, r8, [sp, #32]
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 8006c66:	f7ff fecb 	bl	8006a00 <I2C_TransferConfig>
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006c6a:	4628      	mov	r0, r5
 8006c6c:	4642      	mov	r2, r8
 8006c6e:	4639      	mov	r1, r7
 8006c70:	f7ff ff67 	bl	8006b42 <I2C_WaitOnTXISFlagUntilTimeout>
 8006c74:	b118      	cbz	r0, 8006c7e <I2C_RequestMemoryRead+0x2e>
    return HAL_ERROR;
 8006c76:	2001      	movs	r0, #1
}
 8006c78:	b002      	add	sp, #8
 8006c7a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8006c7e:	2e01      	cmp	r6, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8006c80:	682b      	ldr	r3, [r5, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8006c82:	d10d      	bne.n	8006ca0 <I2C_RequestMemoryRead+0x50>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8006c84:	b2e4      	uxtb	r4, r4
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
 8006c86:	2200      	movs	r2, #0
 8006c88:	2140      	movs	r1, #64	; 0x40
 8006c8a:	4628      	mov	r0, r5
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8006c8c:	629c      	str	r4, [r3, #40]	; 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
 8006c8e:	463b      	mov	r3, r7
 8006c90:	f8cd 8000 	str.w	r8, [sp]
 8006c94:	f7ff ff7c 	bl	8006b90 <I2C_WaitOnFlagUntilTimeout>
    return HAL_ERROR;
 8006c98:	3800      	subs	r0, #0
 8006c9a:	bf18      	it	ne
 8006c9c:	2001      	movne	r0, #1
 8006c9e:	e7eb      	b.n	8006c78 <I2C_RequestMemoryRead+0x28>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8006ca0:	0a22      	lsrs	r2, r4, #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006ca2:	4639      	mov	r1, r7
 8006ca4:	4628      	mov	r0, r5
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8006ca6:	629a      	str	r2, [r3, #40]	; 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006ca8:	4642      	mov	r2, r8
 8006caa:	f7ff ff4a 	bl	8006b42 <I2C_WaitOnTXISFlagUntilTimeout>
 8006cae:	2800      	cmp	r0, #0
 8006cb0:	d1e1      	bne.n	8006c76 <I2C_RequestMemoryRead+0x26>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8006cb2:	682b      	ldr	r3, [r5, #0]
 8006cb4:	e7e6      	b.n	8006c84 <I2C_RequestMemoryRead+0x34>
 8006cb6:	bf00      	nop
 8006cb8:	80002000 	.word	0x80002000

08006cbc <I2C_WaitOnSTOPFlagUntilTimeout>:
{
 8006cbc:	b570      	push	{r4, r5, r6, lr}
 8006cbe:	4604      	mov	r4, r0
 8006cc0:	460d      	mov	r5, r1
 8006cc2:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8006cc4:	6823      	ldr	r3, [r4, #0]
 8006cc6:	699b      	ldr	r3, [r3, #24]
 8006cc8:	069b      	lsls	r3, r3, #26
 8006cca:	d501      	bpl.n	8006cd0 <I2C_WaitOnSTOPFlagUntilTimeout+0x14>
  return HAL_OK;
 8006ccc:	2000      	movs	r0, #0
}
 8006cce:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 8006cd0:	4632      	mov	r2, r6
 8006cd2:	4629      	mov	r1, r5
 8006cd4:	4620      	mov	r0, r4
 8006cd6:	f7ff fea9 	bl	8006a2c <I2C_IsErrorOccurred>
 8006cda:	b990      	cbnz	r0, 8006d02 <I2C_WaitOnSTOPFlagUntilTimeout+0x46>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006cdc:	f7fe fe8e 	bl	80059fc <HAL_GetTick>
 8006ce0:	1b80      	subs	r0, r0, r6
 8006ce2:	42a8      	cmp	r0, r5
 8006ce4:	d801      	bhi.n	8006cea <I2C_WaitOnSTOPFlagUntilTimeout+0x2e>
 8006ce6:	2d00      	cmp	r5, #0
 8006ce8:	d1ec      	bne.n	8006cc4 <I2C_WaitOnSTOPFlagUntilTimeout+0x8>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8006cea:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8006cec:	f043 0320 	orr.w	r3, r3, #32
 8006cf0:	6463      	str	r3, [r4, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8006cf2:	2320      	movs	r3, #32
 8006cf4:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8006cf8:	2300      	movs	r3, #0
 8006cfa:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
        __HAL_UNLOCK(hi2c);
 8006cfe:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
      return HAL_ERROR;
 8006d02:	2001      	movs	r0, #1
 8006d04:	e7e3      	b.n	8006cce <I2C_WaitOnSTOPFlagUntilTimeout+0x12>

08006d06 <HAL_I2C_MspInit>:
}
 8006d06:	4770      	bx	lr

08006d08 <HAL_I2C_Init>:
{
 8006d08:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 8006d0a:	4604      	mov	r4, r0
 8006d0c:	2800      	cmp	r0, #0
 8006d0e:	d04a      	beq.n	8006da6 <HAL_I2C_Init+0x9e>
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8006d10:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 8006d14:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006d18:	b91b      	cbnz	r3, 8006d22 <HAL_I2C_Init+0x1a>
    hi2c->Lock = HAL_UNLOCKED;
 8006d1a:	f880 2040 	strb.w	r2, [r0, #64]	; 0x40
    HAL_I2C_MspInit(hi2c);
 8006d1e:	f7ff fff2 	bl	8006d06 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8006d22:	2324      	movs	r3, #36	; 0x24
 8006d24:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_I2C_DISABLE(hi2c);
 8006d28:	6823      	ldr	r3, [r4, #0]
 8006d2a:	681a      	ldr	r2, [r3, #0]
 8006d2c:	f022 0201 	bic.w	r2, r2, #1
 8006d30:	601a      	str	r2, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 8006d32:	6862      	ldr	r2, [r4, #4]
 8006d34:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8006d38:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
 8006d3a:	689a      	ldr	r2, [r3, #8]
 8006d3c:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8006d40:	609a      	str	r2, [r3, #8]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 8006d42:	e9d4 2102 	ldrd	r2, r1, [r4, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8006d46:	2901      	cmp	r1, #1
 8006d48:	d124      	bne.n	8006d94 <HAL_I2C_Init+0x8c>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 8006d4a:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8006d4e:	609a      	str	r2, [r3, #8]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 8006d50:	685a      	ldr	r2, [r3, #4]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006d52:	2000      	movs	r0, #0
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 8006d54:	f042 7200 	orr.w	r2, r2, #33554432	; 0x2000000
 8006d58:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8006d5c:	605a      	str	r2, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 8006d5e:	68da      	ldr	r2, [r3, #12]
 8006d60:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8006d64:	60da      	str	r2, [r3, #12]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 8006d66:	e9d4 2104 	ldrd	r2, r1, [r4, #16]
 8006d6a:	430a      	orrs	r2, r1
                          (hi2c->Init.OwnAddress2Masks << 8));
 8006d6c:	69a1      	ldr	r1, [r4, #24]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 8006d6e:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8006d72:	60da      	str	r2, [r3, #12]
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 8006d74:	e9d4 2107 	ldrd	r2, r1, [r4, #28]
 8006d78:	430a      	orrs	r2, r1
 8006d7a:	601a      	str	r2, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
 8006d7c:	681a      	ldr	r2, [r3, #0]
 8006d7e:	f042 0201 	orr.w	r2, r2, #1
 8006d82:	601a      	str	r2, [r3, #0]
  hi2c->State = HAL_I2C_STATE_READY;
 8006d84:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006d86:	6460      	str	r0, [r4, #68]	; 0x44
  hi2c->State = HAL_I2C_STATE_READY;
 8006d88:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
 8006d8c:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8006d8e:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
}
 8006d92:	bd10      	pop	{r4, pc}
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 8006d94:	f442 4204 	orr.w	r2, r2, #33792	; 0x8400
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 8006d98:	2902      	cmp	r1, #2
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 8006d9a:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 8006d9c:	d1d8      	bne.n	8006d50 <HAL_I2C_Init+0x48>
    hi2c->Instance->CR2 = (I2C_CR2_ADD10);
 8006d9e:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8006da2:	605a      	str	r2, [r3, #4]
 8006da4:	e7d4      	b.n	8006d50 <HAL_I2C_Init+0x48>
    return HAL_ERROR;
 8006da6:	2001      	movs	r0, #1
 8006da8:	e7f3      	b.n	8006d92 <HAL_I2C_Init+0x8a>

08006daa <HAL_I2C_MspDeInit>:
 8006daa:	4770      	bx	lr

08006dac <HAL_I2C_DeInit>:
{
 8006dac:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 8006dae:	4604      	mov	r4, r0
 8006db0:	b198      	cbz	r0, 8006dda <HAL_I2C_DeInit+0x2e>
  __HAL_I2C_DISABLE(hi2c);
 8006db2:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 8006db4:	2324      	movs	r3, #36	; 0x24
 8006db6:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41
  __HAL_I2C_DISABLE(hi2c);
 8006dba:	6813      	ldr	r3, [r2, #0]
 8006dbc:	f023 0301 	bic.w	r3, r3, #1
 8006dc0:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
 8006dc2:	f7ff fff2 	bl	8006daa <HAL_I2C_MspDeInit>
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006dc6:	2000      	movs	r0, #0
 8006dc8:	6460      	str	r0, [r4, #68]	; 0x44
  __HAL_UNLOCK(hi2c);
 8006dca:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_RESET;
 8006dce:	f884 0041 	strb.w	r0, [r4, #65]	; 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
 8006dd2:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8006dd4:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
}
 8006dd8:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8006dda:	2001      	movs	r0, #1
 8006ddc:	e7fc      	b.n	8006dd8 <HAL_I2C_DeInit+0x2c>

08006dde <HAL_I2C_Mem_Write>:
{
 8006dde:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006de2:	b085      	sub	sp, #20
 8006de4:	469b      	mov	fp, r3
 8006de6:	4604      	mov	r4, r0
 8006de8:	460f      	mov	r7, r1
 8006dea:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8006dee:	4692      	mov	sl, r2
 8006df0:	f8dd 9040 	ldr.w	r9, [sp, #64]	; 0x40
 8006df4:	9303      	str	r3, [sp, #12]
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006df6:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 8006dfa:	2b20      	cmp	r3, #32
 8006dfc:	f040 80a3 	bne.w	8006f46 <HAL_I2C_Mem_Write+0x168>
    if ((pData == NULL) || (Size == 0U))
 8006e00:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006e02:	b10b      	cbz	r3, 8006e08 <HAL_I2C_Mem_Write+0x2a>
 8006e04:	9b03      	ldr	r3, [sp, #12]
 8006e06:	b933      	cbnz	r3, 8006e16 <HAL_I2C_Mem_Write+0x38>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 8006e08:	f44f 7300 	mov.w	r3, #512	; 0x200
 8006e0c:	6463      	str	r3, [r4, #68]	; 0x44
      return HAL_ERROR;
 8006e0e:	2001      	movs	r0, #1
}
 8006e10:	b005      	add	sp, #20
 8006e12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    __HAL_LOCK(hi2c);
 8006e16:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 8006e1a:	2b01      	cmp	r3, #1
 8006e1c:	f000 8093 	beq.w	8006f46 <HAL_I2C_Mem_Write+0x168>
 8006e20:	2501      	movs	r5, #1
 8006e22:	f880 5040 	strb.w	r5, [r0, #64]	; 0x40
    tickstart = HAL_GetTick();
 8006e26:	f7fe fde9 	bl	80059fc <HAL_GetTick>
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8006e2a:	2319      	movs	r3, #25
 8006e2c:	9000      	str	r0, [sp, #0]
    tickstart = HAL_GetTick();
 8006e2e:	4606      	mov	r6, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8006e30:	462a      	mov	r2, r5
 8006e32:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8006e36:	4620      	mov	r0, r4
 8006e38:	f7ff feaa 	bl	8006b90 <I2C_WaitOnFlagUntilTimeout>
 8006e3c:	4680      	mov	r8, r0
 8006e3e:	2800      	cmp	r0, #0
 8006e40:	d1e5      	bne.n	8006e0e <HAL_I2C_Mem_Write+0x30>
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8006e42:	2321      	movs	r3, #33	; 0x21
    hi2c->XferISR   = NULL;
 8006e44:	6360      	str	r0, [r4, #52]	; 0x34
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8006e46:	4652      	mov	r2, sl
 8006e48:	4639      	mov	r1, r7
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8006e4a:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8006e4e:	2340      	movs	r3, #64	; 0x40
 8006e50:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
    hi2c->pBuffPtr  = pData;
 8006e54:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006e56:	6460      	str	r0, [r4, #68]	; 0x44
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8006e58:	4620      	mov	r0, r4
    hi2c->pBuffPtr  = pData;
 8006e5a:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount = Size;
 8006e5c:	9b03      	ldr	r3, [sp, #12]
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8006e5e:	e9cd 9600 	strd	r9, r6, [sp]
    hi2c->XferCount = Size;
 8006e62:	8563      	strh	r3, [r4, #42]	; 0x2a
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8006e64:	465b      	mov	r3, fp
 8006e66:	f7ff febd 	bl	8006be4 <I2C_RequestMemoryWrite>
 8006e6a:	b110      	cbz	r0, 8006e72 <HAL_I2C_Mem_Write+0x94>
      __HAL_UNLOCK(hi2c);
 8006e6c:	f884 8040 	strb.w	r8, [r4, #64]	; 0x40
      return HAL_ERROR;
 8006e70:	e7cd      	b.n	8006e0e <HAL_I2C_Mem_Write+0x30>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8006e72:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006e74:	b29b      	uxth	r3, r3
 8006e76:	2bff      	cmp	r3, #255	; 0xff
 8006e78:	d955      	bls.n	8006f26 <HAL_I2C_Mem_Write+0x148>
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8006e7a:	22ff      	movs	r2, #255	; 0xff
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 8006e7c:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8006e80:	9000      	str	r0, [sp, #0]
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8006e82:	8522      	strh	r2, [r4, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8006e84:	4639      	mov	r1, r7
 8006e86:	4620      	mov	r0, r4
 8006e88:	f7ff fdba 	bl	8006a00 <I2C_TransferConfig>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006e8c:	4632      	mov	r2, r6
 8006e8e:	4649      	mov	r1, r9
 8006e90:	4620      	mov	r0, r4
 8006e92:	f7ff fe56 	bl	8006b42 <I2C_WaitOnTXISFlagUntilTimeout>
 8006e96:	2800      	cmp	r0, #0
 8006e98:	d1b9      	bne.n	8006e0e <HAL_I2C_Mem_Write+0x30>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
 8006e9a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006e9c:	6822      	ldr	r2, [r4, #0]
 8006e9e:	f813 1b01 	ldrb.w	r1, [r3], #1
 8006ea2:	6291      	str	r1, [r2, #40]	; 0x28
      hi2c->pBuffPtr++;
 8006ea4:	6263      	str	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8006ea6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8006ea8:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8006eaa:	3b01      	subs	r3, #1
      hi2c->XferSize--;
 8006eac:	3a01      	subs	r2, #1
      hi2c->XferCount--;
 8006eae:	b29b      	uxth	r3, r3
      hi2c->XferSize--;
 8006eb0:	b292      	uxth	r2, r2
      hi2c->XferCount--;
 8006eb2:	8563      	strh	r3, [r4, #42]	; 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8006eb4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8006eb6:	8522      	strh	r2, [r4, #40]	; 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8006eb8:	b29b      	uxth	r3, r3
 8006eba:	b1ab      	cbz	r3, 8006ee8 <HAL_I2C_Mem_Write+0x10a>
 8006ebc:	b9a2      	cbnz	r2, 8006ee8 <HAL_I2C_Mem_Write+0x10a>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 8006ebe:	464b      	mov	r3, r9
 8006ec0:	2180      	movs	r1, #128	; 0x80
 8006ec2:	4620      	mov	r0, r4
 8006ec4:	9600      	str	r6, [sp, #0]
 8006ec6:	f7ff fe63 	bl	8006b90 <I2C_WaitOnFlagUntilTimeout>
 8006eca:	2800      	cmp	r0, #0
 8006ecc:	d19f      	bne.n	8006e0e <HAL_I2C_Mem_Write+0x30>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8006ece:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006ed0:	b29b      	uxth	r3, r3
 8006ed2:	2bff      	cmp	r3, #255	; 0xff
 8006ed4:	d92f      	bls.n	8006f36 <HAL_I2C_Mem_Write+0x158>
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8006ed6:	22ff      	movs	r2, #255	; 0xff
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8006ed8:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8006edc:	9000      	str	r0, [sp, #0]
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8006ede:	8522      	strh	r2, [r4, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8006ee0:	4639      	mov	r1, r7
 8006ee2:	4620      	mov	r0, r4
 8006ee4:	f7ff fd8c 	bl	8006a00 <I2C_TransferConfig>
    } while (hi2c->XferCount > 0U);
 8006ee8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006eea:	b29b      	uxth	r3, r3
 8006eec:	2b00      	cmp	r3, #0
 8006eee:	d1cd      	bne.n	8006e8c <HAL_I2C_Mem_Write+0xae>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006ef0:	4632      	mov	r2, r6
 8006ef2:	4649      	mov	r1, r9
 8006ef4:	4620      	mov	r0, r4
 8006ef6:	f7ff fee1 	bl	8006cbc <I2C_WaitOnSTOPFlagUntilTimeout>
 8006efa:	2800      	cmp	r0, #0
 8006efc:	d187      	bne.n	8006e0e <HAL_I2C_Mem_Write+0x30>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8006efe:	6823      	ldr	r3, [r4, #0]
 8006f00:	2120      	movs	r1, #32
 8006f02:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
 8006f04:	685a      	ldr	r2, [r3, #4]
 8006f06:	f022 72ff 	bic.w	r2, r2, #33423360	; 0x1fe0000
 8006f0a:	f422 328b 	bic.w	r2, r2, #71168	; 0x11600
 8006f0e:	f422 72ff 	bic.w	r2, r2, #510	; 0x1fe
 8006f12:	f022 0201 	bic.w	r2, r2, #1
 8006f16:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 8006f18:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
 8006f1c:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 8006f20:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
    return HAL_OK;
 8006f24:	e774      	b.n	8006e10 <HAL_I2C_Mem_Write+0x32>
      hi2c->XferSize = hi2c->XferCount;
 8006f26:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8006f28:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8006f2c:	9000      	str	r0, [sp, #0]
      hi2c->XferSize = hi2c->XferCount;
 8006f2e:	b292      	uxth	r2, r2
 8006f30:	8522      	strh	r2, [r4, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8006f32:	b2d2      	uxtb	r2, r2
 8006f34:	e7a6      	b.n	8006e84 <HAL_I2C_Mem_Write+0xa6>
          hi2c->XferSize = hi2c->XferCount;
 8006f36:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8006f38:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8006f3c:	9000      	str	r0, [sp, #0]
          hi2c->XferSize = hi2c->XferCount;
 8006f3e:	b292      	uxth	r2, r2
 8006f40:	8522      	strh	r2, [r4, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8006f42:	b2d2      	uxtb	r2, r2
 8006f44:	e7cc      	b.n	8006ee0 <HAL_I2C_Mem_Write+0x102>
    return HAL_BUSY;
 8006f46:	2002      	movs	r0, #2
 8006f48:	e762      	b.n	8006e10 <HAL_I2C_Mem_Write+0x32>
	...

08006f4c <HAL_I2C_Mem_Read>:
{
 8006f4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006f50:	b085      	sub	sp, #20
 8006f52:	469b      	mov	fp, r3
 8006f54:	4604      	mov	r4, r0
 8006f56:	460f      	mov	r7, r1
 8006f58:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8006f5c:	4692      	mov	sl, r2
 8006f5e:	f8dd 9040 	ldr.w	r9, [sp, #64]	; 0x40
 8006f62:	9303      	str	r3, [sp, #12]
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006f64:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 8006f68:	2b20      	cmp	r3, #32
 8006f6a:	f040 80a7 	bne.w	80070bc <HAL_I2C_Mem_Read+0x170>
    if ((pData == NULL) || (Size == 0U))
 8006f6e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006f70:	b10b      	cbz	r3, 8006f76 <HAL_I2C_Mem_Read+0x2a>
 8006f72:	9b03      	ldr	r3, [sp, #12]
 8006f74:	b933      	cbnz	r3, 8006f84 <HAL_I2C_Mem_Read+0x38>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 8006f76:	f44f 7300 	mov.w	r3, #512	; 0x200
 8006f7a:	6463      	str	r3, [r4, #68]	; 0x44
      return HAL_ERROR;
 8006f7c:	2001      	movs	r0, #1
}
 8006f7e:	b005      	add	sp, #20
 8006f80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    __HAL_LOCK(hi2c);
 8006f84:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 8006f88:	2b01      	cmp	r3, #1
 8006f8a:	f000 8097 	beq.w	80070bc <HAL_I2C_Mem_Read+0x170>
 8006f8e:	2501      	movs	r5, #1
 8006f90:	f880 5040 	strb.w	r5, [r0, #64]	; 0x40
    tickstart = HAL_GetTick();
 8006f94:	f7fe fd32 	bl	80059fc <HAL_GetTick>
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8006f98:	2319      	movs	r3, #25
 8006f9a:	9000      	str	r0, [sp, #0]
    tickstart = HAL_GetTick();
 8006f9c:	4606      	mov	r6, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8006f9e:	462a      	mov	r2, r5
 8006fa0:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8006fa4:	4620      	mov	r0, r4
 8006fa6:	f7ff fdf3 	bl	8006b90 <I2C_WaitOnFlagUntilTimeout>
 8006faa:	4680      	mov	r8, r0
 8006fac:	2800      	cmp	r0, #0
 8006fae:	d1e5      	bne.n	8006f7c <HAL_I2C_Mem_Read+0x30>
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8006fb0:	2322      	movs	r3, #34	; 0x22
    hi2c->XferISR   = NULL;
 8006fb2:	6360      	str	r0, [r4, #52]	; 0x34
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8006fb4:	4652      	mov	r2, sl
 8006fb6:	4639      	mov	r1, r7
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8006fb8:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8006fbc:	2340      	movs	r3, #64	; 0x40
 8006fbe:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
    hi2c->pBuffPtr  = pData;
 8006fc2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006fc4:	6460      	str	r0, [r4, #68]	; 0x44
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8006fc6:	4620      	mov	r0, r4
    hi2c->pBuffPtr  = pData;
 8006fc8:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount = Size;
 8006fca:	9b03      	ldr	r3, [sp, #12]
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8006fcc:	e9cd 9600 	strd	r9, r6, [sp]
    hi2c->XferCount = Size;
 8006fd0:	8563      	strh	r3, [r4, #42]	; 0x2a
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8006fd2:	465b      	mov	r3, fp
 8006fd4:	f7ff fe3c 	bl	8006c50 <I2C_RequestMemoryRead>
 8006fd8:	b110      	cbz	r0, 8006fe0 <HAL_I2C_Mem_Read+0x94>
      __HAL_UNLOCK(hi2c);
 8006fda:	f884 8040 	strb.w	r8, [r4, #64]	; 0x40
      return HAL_ERROR;
 8006fde:	e7cd      	b.n	8006f7c <HAL_I2C_Mem_Read+0x30>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8006fe0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006fe2:	b29b      	uxth	r3, r3
 8006fe4:	2bff      	cmp	r3, #255	; 0xff
 8006fe6:	4b36      	ldr	r3, [pc, #216]	; (80070c0 <HAL_I2C_Mem_Read+0x174>)
 8006fe8:	d958      	bls.n	800709c <HAL_I2C_Mem_Read+0x150>
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8006fea:	22ff      	movs	r2, #255	; 0xff
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8006fec:	9300      	str	r3, [sp, #0]
 8006fee:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8006ff2:	8522      	strh	r2, [r4, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8006ff4:	4639      	mov	r1, r7
 8006ff6:	4620      	mov	r0, r4
 8006ff8:	f7ff fd02 	bl	8006a00 <I2C_TransferConfig>
      if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
 8006ffc:	464b      	mov	r3, r9
 8006ffe:	2200      	movs	r2, #0
 8007000:	2104      	movs	r1, #4
 8007002:	4620      	mov	r0, r4
 8007004:	9600      	str	r6, [sp, #0]
 8007006:	f7ff fdc3 	bl	8006b90 <I2C_WaitOnFlagUntilTimeout>
 800700a:	2800      	cmp	r0, #0
 800700c:	d1b6      	bne.n	8006f7c <HAL_I2C_Mem_Read+0x30>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
 800700e:	6823      	ldr	r3, [r4, #0]
 8007010:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8007012:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007014:	701a      	strb	r2, [r3, #0]
      hi2c->pBuffPtr++;
 8007016:	6a63      	ldr	r3, [r4, #36]	; 0x24
      hi2c->XferSize--;
 8007018:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      hi2c->pBuffPtr++;
 800701a:	3301      	adds	r3, #1
      hi2c->XferSize--;
 800701c:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 800701e:	6263      	str	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8007020:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8007022:	b292      	uxth	r2, r2
      hi2c->XferCount--;
 8007024:	3b01      	subs	r3, #1
      hi2c->XferSize--;
 8007026:	8522      	strh	r2, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8007028:	b29b      	uxth	r3, r3
 800702a:	8563      	strh	r3, [r4, #42]	; 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 800702c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800702e:	b29b      	uxth	r3, r3
 8007030:	b1ab      	cbz	r3, 800705e <HAL_I2C_Mem_Read+0x112>
 8007032:	b9a2      	cbnz	r2, 800705e <HAL_I2C_Mem_Read+0x112>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 8007034:	464b      	mov	r3, r9
 8007036:	2180      	movs	r1, #128	; 0x80
 8007038:	4620      	mov	r0, r4
 800703a:	9600      	str	r6, [sp, #0]
 800703c:	f7ff fda8 	bl	8006b90 <I2C_WaitOnFlagUntilTimeout>
 8007040:	2800      	cmp	r0, #0
 8007042:	d19b      	bne.n	8006f7c <HAL_I2C_Mem_Read+0x30>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8007044:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8007046:	b29b      	uxth	r3, r3
 8007048:	2bff      	cmp	r3, #255	; 0xff
 800704a:	d92f      	bls.n	80070ac <HAL_I2C_Mem_Read+0x160>
          hi2c->XferSize = MAX_NBYTE_SIZE;
 800704c:	22ff      	movs	r2, #255	; 0xff
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE,
 800704e:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8007052:	9000      	str	r0, [sp, #0]
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8007054:	8522      	strh	r2, [r4, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8007056:	4639      	mov	r1, r7
 8007058:	4620      	mov	r0, r4
 800705a:	f7ff fcd1 	bl	8006a00 <I2C_TransferConfig>
    } while (hi2c->XferCount > 0U);
 800705e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8007060:	b29b      	uxth	r3, r3
 8007062:	2b00      	cmp	r3, #0
 8007064:	d1ca      	bne.n	8006ffc <HAL_I2C_Mem_Read+0xb0>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8007066:	4632      	mov	r2, r6
 8007068:	4649      	mov	r1, r9
 800706a:	4620      	mov	r0, r4
 800706c:	f7ff fe26 	bl	8006cbc <I2C_WaitOnSTOPFlagUntilTimeout>
 8007070:	2800      	cmp	r0, #0
 8007072:	d183      	bne.n	8006f7c <HAL_I2C_Mem_Read+0x30>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8007074:	6823      	ldr	r3, [r4, #0]
 8007076:	2120      	movs	r1, #32
 8007078:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
 800707a:	685a      	ldr	r2, [r3, #4]
 800707c:	f022 72ff 	bic.w	r2, r2, #33423360	; 0x1fe0000
 8007080:	f422 328b 	bic.w	r2, r2, #71168	; 0x11600
 8007084:	f422 72ff 	bic.w	r2, r2, #510	; 0x1fe
 8007088:	f022 0201 	bic.w	r2, r2, #1
 800708c:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 800708e:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
 8007092:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 8007096:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
    return HAL_OK;
 800709a:	e770      	b.n	8006f7e <HAL_I2C_Mem_Read+0x32>
      hi2c->XferSize = hi2c->XferCount;
 800709c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 800709e:	9300      	str	r3, [sp, #0]
 80070a0:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
      hi2c->XferSize = hi2c->XferCount;
 80070a4:	b292      	uxth	r2, r2
 80070a6:	8522      	strh	r2, [r4, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 80070a8:	b2d2      	uxtb	r2, r2
 80070aa:	e7a3      	b.n	8006ff4 <HAL_I2C_Mem_Read+0xa8>
          hi2c->XferSize = hi2c->XferCount;
 80070ac:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 80070ae:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 80070b2:	9000      	str	r0, [sp, #0]
          hi2c->XferSize = hi2c->XferCount;
 80070b4:	b292      	uxth	r2, r2
 80070b6:	8522      	strh	r2, [r4, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 80070b8:	b2d2      	uxtb	r2, r2
 80070ba:	e7cc      	b.n	8007056 <HAL_I2C_Mem_Read+0x10a>
    return HAL_BUSY;
 80070bc:	2002      	movs	r0, #2
 80070be:	e75e      	b.n	8006f7e <HAL_I2C_Mem_Read+0x32>
 80070c0:	80002400 	.word	0x80002400

080070c4 <HAL_I2C_GetState>:
  return hi2c->State;
 80070c4:	f890 0041 	ldrb.w	r0, [r0, #65]	; 0x41
}
 80070c8:	4770      	bx	lr

080070ca <HAL_I2C_GetError>:
  return hi2c->ErrorCode;
 80070ca:	6c40      	ldr	r0, [r0, #68]	; 0x44
}
 80070cc:	4770      	bx	lr

080070ce <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter New state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 80070ce:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 80070d0:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 80070d4:	2b20      	cmp	r3, #32
 80070d6:	b2dc      	uxtb	r4, r3
 80070d8:	d11d      	bne.n	8007116 <HAL_I2CEx_ConfigAnalogFilter+0x48>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 80070da:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 80070de:	2b01      	cmp	r3, #1
 80070e0:	d019      	beq.n	8007116 <HAL_I2CEx_ConfigAnalogFilter+0x48>

    hi2c->State = HAL_I2C_STATE_BUSY;
 80070e2:	2324      	movs	r3, #36	; 0x24
 80070e4:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 80070e8:	6803      	ldr	r3, [r0, #0]
 80070ea:	681a      	ldr	r2, [r3, #0]
 80070ec:	f022 0201 	bic.w	r2, r2, #1
 80070f0:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
 80070f2:	681a      	ldr	r2, [r3, #0]
 80070f4:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 80070f8:	601a      	str	r2, [r3, #0]

    /* Set analog filter bit*/
    hi2c->Instance->CR1 |= AnalogFilter;
 80070fa:	681a      	ldr	r2, [r3, #0]
 80070fc:	4311      	orrs	r1, r2
 80070fe:	6019      	str	r1, [r3, #0]

    __HAL_I2C_ENABLE(hi2c);
 8007100:	681a      	ldr	r2, [r3, #0]
 8007102:	f042 0201 	orr.w	r2, r2, #1
 8007106:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8007108:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800710a:	f880 4041 	strb.w	r4, [r0, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
 800710e:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40

    return HAL_OK;
 8007112:	4618      	mov	r0, r3
  }
  else
  {
    return HAL_BUSY;
  }
}
 8007114:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 8007116:	2002      	movs	r0, #2
 8007118:	e7fc      	b.n	8007114 <HAL_I2CEx_ConfigAnalogFilter+0x46>

0800711a <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between Min_Data=0x00 and Max_Data=0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 800711a:	b510      	push	{r4, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800711c:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 8007120:	2b20      	cmp	r3, #32
 8007122:	b2dc      	uxtb	r4, r3
 8007124:	d11c      	bne.n	8007160 <HAL_I2CEx_ConfigDigitalFilter+0x46>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 8007126:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 800712a:	2b01      	cmp	r3, #1
 800712c:	d018      	beq.n	8007160 <HAL_I2CEx_ConfigDigitalFilter+0x46>

    hi2c->State = HAL_I2C_STATE_BUSY;
 800712e:	2324      	movs	r3, #36	; 0x24
 8007130:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8007134:	6803      	ldr	r3, [r0, #0]
 8007136:	681a      	ldr	r2, [r3, #0]
 8007138:	f022 0201 	bic.w	r2, r2, #1
 800713c:	601a      	str	r2, [r3, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->CR1;
 800713e:	681a      	ldr	r2, [r3, #0]

    /* Reset I2Cx DNF bits [11:8] */
    tmpreg &= ~(I2C_CR1_DNF);
 8007140:	f422 6270 	bic.w	r2, r2, #3840	; 0xf00

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter << 8U;
 8007144:	ea42 2101 	orr.w	r1, r2, r1, lsl #8

    /* Store the new register value */
    hi2c->Instance->CR1 = tmpreg;
 8007148:	6019      	str	r1, [r3, #0]

    __HAL_I2C_ENABLE(hi2c);
 800714a:	681a      	ldr	r2, [r3, #0]
 800714c:	f042 0201 	orr.w	r2, r2, #1
 8007150:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8007152:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 8007154:	f880 4041 	strb.w	r4, [r0, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
 8007158:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40

    return HAL_OK;
 800715c:	4618      	mov	r0, r3
  }
  else
  {
    return HAL_BUSY;
  }
}
 800715e:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 8007160:	2002      	movs	r0, #2
 8007162:	e7fc      	b.n	800715e <HAL_I2CEx_ConfigDigitalFilter+0x44>

08007164 <LTDC_SetConfig>:
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8007164:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8007166:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8007168:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800716c:	3284      	adds	r2, #132	; 0x84
 800716e:	1883      	adds	r3, r0, r2
{
 8007170:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8007174:	68c6      	ldr	r6, [r0, #12]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8007176:	f10c 0701 	add.w	r7, ip, #1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800717a:	685d      	ldr	r5, [r3, #4]

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800717c:	f04f 0e00 	mov.w	lr, #0
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8007180:	684c      	ldr	r4, [r1, #4]
 8007182:	f3c6 460b 	ubfx	r6, r6, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8007186:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800718a:	f8d1 9018 	ldr.w	r9, [r1, #24]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800718e:	4426      	add	r6, r4
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8007190:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8007192:	68c5      	ldr	r5, [r0, #12]
 8007194:	f3c5 450b 	ubfx	r5, r5, #16, #12
 8007198:	443d      	add	r5, r7
 800719a:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800719e:	68ce      	ldr	r6, [r1, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 80071a0:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 80071a2:	68c5      	ldr	r5, [r0, #12]
 80071a4:	f3c5 050a 	ubfx	r5, r5, #0, #11
 80071a8:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 80071aa:	689d      	ldr	r5, [r3, #8]
 80071ac:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 80071b0:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 80071b2:	688d      	ldr	r5, [r1, #8]
 80071b4:	68c7      	ldr	r7, [r0, #12]
 80071b6:	3501      	adds	r5, #1
 80071b8:	f3c7 070a 	ubfx	r7, r7, #0, #11
 80071bc:	443d      	add	r5, r7
 80071be:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 80071c2:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 80071c4:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 80071c6:	691d      	ldr	r5, [r3, #16]
 80071c8:	f025 0507 	bic.w	r5, r5, #7
 80071cc:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 80071ce:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 80071d0:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 80071d2:	f891 7032 	ldrb.w	r7, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 80071d6:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 80071da:	f8c3 e018 	str.w	lr, [r3, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 80071de:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 80071e2:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 80071e6:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 80071ea:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 80071ee:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 80071f0:	695d      	ldr	r5, [r3, #20]
 80071f2:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 80071f6:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 80071f8:	694d      	ldr	r5, [r1, #20]
 80071fa:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 80071fc:	69dd      	ldr	r5, [r3, #28]
 80071fe:	f425 65e0 	bic.w	r5, r5, #1792	; 0x700
 8007202:	f025 0507 	bic.w	r5, r5, #7
 8007206:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8007208:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 800720c:	433d      	orrs	r5, r7
 800720e:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8007210:	6a9d      	ldr	r5, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8007212:	6a4d      	ldr	r5, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8007214:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8007218:	629d      	str	r5, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800721a:	b31e      	cbz	r6, 8007264 <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800721c:	2e01      	cmp	r6, #1
 800721e:	d023      	beq.n	8007268 <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8007220:	1eb5      	subs	r5, r6, #2
 8007222:	2d02      	cmp	r5, #2
 8007224:	d922      	bls.n	800726c <LTDC_SetConfig+0x108>
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 8007226:	2e07      	cmp	r6, #7
 8007228:	bf0c      	ite	eq
 800722a:	2502      	moveq	r5, #2
 800722c:	2501      	movne	r5, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800722e:	6ade      	ldr	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
 8007230:	eba4 040c 	sub.w	r4, r4, ip
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8007234:	f006 26e0 	and.w	r6, r6, #3758153728	; 0xe000e000
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
 8007238:	436c      	muls	r4, r5
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800723a:	62de      	str	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
 800723c:	3407      	adds	r4, #7
 800723e:	6a8e      	ldr	r6, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8007240:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
 8007242:	436e      	muls	r6, r5
 8007244:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 8007248:	62dc      	str	r4, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800724a:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 800724c:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 8007250:	f024 0407 	bic.w	r4, r4, #7
 8007254:	631c      	str	r4, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8007256:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8007258:	5883      	ldr	r3, [r0, r2]
 800725a:	f043 0301 	orr.w	r3, r3, #1
 800725e:	5083      	str	r3, [r0, r2]
}
 8007260:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 8007264:	2504      	movs	r5, #4
 8007266:	e7e2      	b.n	800722e <LTDC_SetConfig+0xca>
    tmp = 3U;
 8007268:	2503      	movs	r5, #3
 800726a:	e7e0      	b.n	800722e <LTDC_SetConfig+0xca>
    tmp = 2U;
 800726c:	2502      	movs	r5, #2
 800726e:	e7de      	b.n	800722e <LTDC_SetConfig+0xca>

08007270 <HAL_LTDC_Init>:
{
 8007270:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 8007272:	4604      	mov	r4, r0
 8007274:	2800      	cmp	r0, #0
 8007276:	d063      	beq.n	8007340 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8007278:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800727c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8007280:	b91b      	cbnz	r3, 800728a <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 8007282:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 8007286:	f7f9 fed7 	bl	8001038 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800728a:	2302      	movs	r3, #2
 800728c:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8007290:	6823      	ldr	r3, [r4, #0]
 8007292:	699a      	ldr	r2, [r3, #24]
 8007294:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 8007298:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800729a:	6999      	ldr	r1, [r3, #24]
 800729c:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 80072a0:	4302      	orrs	r2, r0
 80072a2:	68e0      	ldr	r0, [r4, #12]
 80072a4:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 80072a6:	6920      	ldr	r0, [r4, #16]
 80072a8:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.HorizontalSync << 16U);
 80072aa:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 80072ac:	430a      	orrs	r2, r1
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 80072ae:	4925      	ldr	r1, [pc, #148]	; (8007344 <HAL_LTDC_Init+0xd4>)
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 80072b0:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 80072b2:	689a      	ldr	r2, [r3, #8]
 80072b4:	400a      	ands	r2, r1
 80072b6:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 80072b8:	689a      	ldr	r2, [r3, #8]
 80072ba:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80072be:	69a0      	ldr	r0, [r4, #24]
 80072c0:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 80072c2:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 80072c4:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 80072c6:	68da      	ldr	r2, [r3, #12]
 80072c8:	400a      	ands	r2, r1
 80072ca:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 80072cc:	68da      	ldr	r2, [r3, #12]
 80072ce:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80072d2:	6a20      	ldr	r0, [r4, #32]
 80072d4:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 80072d6:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 80072d8:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 80072da:	691a      	ldr	r2, [r3, #16]
 80072dc:	400a      	ands	r2, r1
 80072de:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 80072e0:	691a      	ldr	r2, [r3, #16]
 80072e2:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80072e6:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80072e8:	4302      	orrs	r2, r0
 80072ea:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 80072ec:	695a      	ldr	r2, [r3, #20]
 80072ee:	4011      	ands	r1, r2
 80072f0:	6159      	str	r1, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 80072f2:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 80072f4:	695a      	ldr	r2, [r3, #20]
 80072f6:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80072fa:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80072fc:	430a      	orrs	r2, r1
 80072fe:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8007300:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8007302:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8007306:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800730a:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800730e:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8007310:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8007312:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 8007316:	430a      	orrs	r2, r1
 8007318:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800731c:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8007320:	2000      	movs	r0, #0
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8007322:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8007324:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007326:	f042 0206 	orr.w	r2, r2, #6
 800732a:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 800732c:	699a      	ldr	r2, [r3, #24]
 800732e:	f042 0201 	orr.w	r2, r2, #1
 8007332:	619a      	str	r2, [r3, #24]
  hltdc->State = HAL_LTDC_STATE_READY;
 8007334:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8007336:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800733a:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 800733e:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8007340:	2001      	movs	r0, #1
 8007342:	e7fc      	b.n	800733e <HAL_LTDC_Init+0xce>
 8007344:	f000f800 	.word	0xf000f800

08007348 <HAL_LTDC_ErrorCallback>:
 8007348:	4770      	bx	lr

0800734a <HAL_LTDC_LineEventCallback>:
 800734a:	4770      	bx	lr

0800734c <HAL_LTDC_ReloadEventCallback>:
 800734c:	4770      	bx	lr

0800734e <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800734e:	6803      	ldr	r3, [r0, #0]
{
 8007350:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8007352:	6b9e      	ldr	r6, [r3, #56]	; 0x38
{
 8007354:	4604      	mov	r4, r0
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8007356:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8007358:	0772      	lsls	r2, r6, #29
 800735a:	d514      	bpl.n	8007386 <HAL_LTDC_IRQHandler+0x38>
 800735c:	0769      	lsls	r1, r5, #29
 800735e:	d512      	bpl.n	8007386 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8007360:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007362:	f022 0204 	bic.w	r2, r2, #4
 8007366:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8007368:	2204      	movs	r2, #4
 800736a:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800736c:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8007370:	f043 0301 	orr.w	r3, r3, #1
 8007374:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 8007378:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800737a:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800737e:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8007382:	f7ff ffe1 	bl	8007348 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8007386:	07b2      	lsls	r2, r6, #30
 8007388:	d516      	bpl.n	80073b8 <HAL_LTDC_IRQHandler+0x6a>
 800738a:	07ab      	lsls	r3, r5, #30
 800738c:	d514      	bpl.n	80073b8 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800738e:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ErrorCallback(hltdc);
 8007390:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8007392:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007394:	f022 0202 	bic.w	r2, r2, #2
 8007398:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800739a:	2202      	movs	r2, #2
 800739c:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800739e:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 80073a2:	4313      	orrs	r3, r2
 80073a4:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 80073a8:	2304      	movs	r3, #4
 80073aa:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80073ae:	2300      	movs	r3, #0
 80073b0:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 80073b4:	f7ff ffc8 	bl	8007348 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 80073b8:	07f0      	lsls	r0, r6, #31
 80073ba:	d510      	bpl.n	80073de <HAL_LTDC_IRQHandler+0x90>
 80073bc:	07e9      	lsls	r1, r5, #31
 80073be:	d50e      	bpl.n	80073de <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 80073c0:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_LineEventCallback(hltdc);
 80073c2:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 80073c4:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80073c6:	f022 0201 	bic.w	r2, r2, #1
 80073ca:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 80073cc:	2201      	movs	r2, #1
 80073ce:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 80073d0:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 80073d2:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80073d6:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 80073da:	f7ff ffb6 	bl	800734a <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 80073de:	0732      	lsls	r2, r6, #28
 80073e0:	d511      	bpl.n	8007406 <HAL_LTDC_IRQHandler+0xb8>
 80073e2:	072b      	lsls	r3, r5, #28
 80073e4:	d50f      	bpl.n	8007406 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 80073e6:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ReloadEventCallback(hltdc);
 80073e8:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 80073ea:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80073ec:	f022 0208 	bic.w	r2, r2, #8
 80073f0:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 80073f2:	2208      	movs	r2, #8
 80073f4:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 80073f6:	2301      	movs	r3, #1
 80073f8:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80073fc:	2300      	movs	r3, #0
 80073fe:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 8007402:	f7ff ffa3 	bl	800734c <HAL_LTDC_ReloadEventCallback>
}
 8007406:	bd70      	pop	{r4, r5, r6, pc}

08007408 <HAL_LTDC_ConfigLayer>:
{
 8007408:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 800740c:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
{
 8007410:	4606      	mov	r6, r0
 8007412:	460f      	mov	r7, r1
 8007414:	4694      	mov	ip, r2
  __HAL_LOCK(hltdc);
 8007416:	2b01      	cmp	r3, #1
 8007418:	f04f 0002 	mov.w	r0, #2
 800741c:	d01f      	beq.n	800745e <HAL_LTDC_ConfigLayer+0x56>
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800741e:	2434      	movs	r4, #52	; 0x34
  __HAL_LOCK(hltdc);
 8007420:	f04f 0801 	mov.w	r8, #1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8007424:	460d      	mov	r5, r1
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8007426:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800742a:	fb04 6402 	mla	r4, r4, r2, r6
  __HAL_LOCK(hltdc);
 800742e:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8007432:	3438      	adds	r4, #56	; 0x38
 8007434:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007436:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007438:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800743a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800743c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800743e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007440:	682b      	ldr	r3, [r5, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8007442:	4630      	mov	r0, r6
 8007444:	4662      	mov	r2, ip
 8007446:	4639      	mov	r1, r7
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8007448:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 800744a:	f7ff fe8b 	bl	8007164 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800744e:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 8007450:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8007452:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 8007456:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800745a:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 800745e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08007464 <HAL_LTDC_SetPitch>:
{
 8007464:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hltdc);
 8007466:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800746a:	2b01      	cmp	r3, #1
 800746c:	f04f 0302 	mov.w	r3, #2
 8007470:	d02c      	beq.n	80074cc <HAL_LTDC_SetPitch+0x68>
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 8007472:	2434      	movs	r4, #52	; 0x34
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8007474:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 8007478:	fb04 0402 	mla	r4, r4, r2, r0
 800747c:	6ca4      	ldr	r4, [r4, #72]	; 0x48
  if (pixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800747e:	b33c      	cbz	r4, 80074d0 <HAL_LTDC_SetPitch+0x6c>
  else if (pixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8007480:	2c01      	cmp	r4, #1
 8007482:	d027      	beq.n	80074d4 <HAL_LTDC_SetPitch+0x70>
  else if ((pixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8007484:	1ea5      	subs	r5, r4, #2
 8007486:	429d      	cmp	r5, r3
 8007488:	d902      	bls.n	8007490 <HAL_LTDC_SetPitch+0x2c>
    tmp = 1U;
 800748a:	2c07      	cmp	r4, #7
 800748c:	bf18      	it	ne
 800748e:	2301      	movne	r3, #1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 8007490:	01d2      	lsls	r2, r2, #7
 8007492:	6804      	ldr	r4, [r0, #0]
  pitchUpdate = ((LinePitchInPixels * tmp) << 16U);
 8007494:	434b      	muls	r3, r1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 8007496:	3284      	adds	r2, #132	; 0x84
 8007498:	4422      	add	r2, r4
 800749a:	6ad4      	ldr	r4, [r2, #44]	; 0x2c
 800749c:	f024 54ff 	bic.w	r4, r4, #534773760	; 0x1fe00000
 80074a0:	f424 14f8 	bic.w	r4, r4, #2031616	; 0x1f0000
 80074a4:	62d4      	str	r4, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 80074a6:	4c0c      	ldr	r4, [pc, #48]	; (80074d8 <HAL_LTDC_SetPitch+0x74>)
 80074a8:	6a65      	ldr	r5, [r4, #36]	; 0x24
 80074aa:	f045 0501 	orr.w	r5, r5, #1
 80074ae:	6265      	str	r5, [r4, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR |= pitchUpdate;
 80074b0:	6ad5      	ldr	r5, [r2, #44]	; 0x2c
 80074b2:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 80074b6:	62d3      	str	r3, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 80074b8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80074ba:	f043 0301 	orr.w	r3, r3, #1
 80074be:	6263      	str	r3, [r4, #36]	; 0x24
  hltdc->State = HAL_LTDC_STATE_READY;
 80074c0:	2301      	movs	r3, #1
 80074c2:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 80074c6:	2300      	movs	r3, #0
 80074c8:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 80074cc:	4618      	mov	r0, r3
 80074ce:	bd30      	pop	{r4, r5, pc}
    tmp = 4U;
 80074d0:	2304      	movs	r3, #4
 80074d2:	e7dd      	b.n	8007490 <HAL_LTDC_SetPitch+0x2c>
    tmp = 3U;
 80074d4:	2303      	movs	r3, #3
 80074d6:	e7db      	b.n	8007490 <HAL_LTDC_SetPitch+0x2c>
 80074d8:	50001000 	.word	0x50001000

080074dc <HAL_MDMA_Init>:
  * @param  hmdma: Pointer to a MDMA_HandleTypeDef structure that contains
  *               the configuration information for the specified MDMA Channel.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_MDMA_Init(MDMA_HandleTypeDef *hmdma)
{
 80074dc:	b538      	push	{r3, r4, r5, lr}
 80074de:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80074e0:	f7fe fa8c 	bl	80059fc <HAL_GetTick>
 80074e4:	4605      	mov	r5, r0

  /* Check the MDMA peripheral handle */
  if(hmdma == NULL)
 80074e6:	2c00      	cmp	r4, #0
 80074e8:	d061      	beq.n	80075ae <HAL_MDMA_Init+0xd2>
  assert_param(IS_MDMA_BLOCK_ADDR_OFFSET(hmdma->Init.SourceBlockAddressOffset));
  assert_param(IS_MDMA_BLOCK_ADDR_OFFSET(hmdma->Init.DestBlockAddressOffset));


  /* Allocate lock resource */
  __HAL_UNLOCK(hmdma);
 80074ea:	2300      	movs	r3, #0

  /* Change MDMA peripheral state */
  hmdma->State = HAL_MDMA_STATE_BUSY;

  /* Disable the MDMA channel */
  __HAL_MDMA_DISABLE(hmdma);
 80074ec:	6822      	ldr	r2, [r4, #0]
  __HAL_UNLOCK(hmdma);
 80074ee:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  hmdma->State = HAL_MDMA_STATE_BUSY;
 80074f2:	2302      	movs	r3, #2
 80074f4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_MDMA_DISABLE(hmdma);
 80074f8:	68d3      	ldr	r3, [r2, #12]
 80074fa:	f023 0301 	bic.w	r3, r3, #1
 80074fe:	60d3      	str	r3, [r2, #12]

  /* Check if the MDMA channel is effectively disabled */
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
 8007500:	6823      	ldr	r3, [r4, #0]
 8007502:	68da      	ldr	r2, [r3, #12]
 8007504:	07d2      	lsls	r2, r2, #31
 8007506:	d448      	bmi.n	800759a <HAL_MDMA_Init+0xbe>
static void MDMA_Init(MDMA_HandleTypeDef *hmdma)
{
  uint32_t blockoffset;

  /* Prepare the MDMA Channel configuration */
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
 8007508:	e9d4 2103 	ldrd	r2, r1, [r4, #12]
 800750c:	430a      	orrs	r2, r1
 800750e:	60da      	str	r2, [r3, #12]
  /* Write new CTCR Register value */
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
                           hmdma->Init.SourceDataSize | hmdma->Init.DestDataSize   | \
                           hmdma->Init.DataAlignment  | hmdma->Init.SourceBurst    | \
                           hmdma->Init.DestBurst                                   | \
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
 8007510:	e9d4 2105 	ldrd	r2, r1, [r4, #20]
 8007514:	430a      	orrs	r2, r1
 8007516:	69e1      	ldr	r1, [r4, #28]
 8007518:	430a      	orrs	r2, r1
 800751a:	6a21      	ldr	r1, [r4, #32]
 800751c:	430a      	orrs	r2, r1
 800751e:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8007520:	430a      	orrs	r2, r1
 8007522:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8007524:	430a      	orrs	r2, r1
 8007526:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8007528:	430a      	orrs	r2, r1
 800752a:	68a1      	ldr	r1, [r4, #8]
 800752c:	430a      	orrs	r2, r1
 800752e:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8007530:	3901      	subs	r1, #1
 8007532:	ea42 4281 	orr.w	r2, r2, r1, lsl #18
                           hmdma->Init.TransferTriggerMode;

  /* If SW request set the CTCR register to SW Request Mode */
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
 8007536:	6861      	ldr	r1, [r4, #4]
 8007538:	f1b1 4f80 	cmp.w	r1, #1073741824	; 0x40000000
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
 800753c:	611a      	str	r2, [r3, #16]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
 800753e:	d103      	bne.n	8007548 <HAL_MDMA_Init+0x6c>
    -If the request is done by SW : BWM could be set to 1 or 0.
    -If the request is done by a peripheral :
    If mask address not set (0) => BWM must be set to 0
    If mask address set (different than 0) => BWM could be set to 1 or 0
    */
    hmdma->Instance->CTCR |= (MDMA_CTCR_SWRM | MDMA_CTCR_BWM);
 8007540:	691a      	ldr	r2, [r3, #16]
 8007542:	f042 4240 	orr.w	r2, r2, #3221225472	; 0xc0000000
 8007546:	611a      	str	r2, [r3, #16]
  }

  /* Reset CBNDTR Register */
  hmdma->Instance->CBNDTR = 0;
 8007548:	2200      	movs	r2, #0
 800754a:	615a      	str	r2, [r3, #20]

  /* if block source address offset is negative set the Block Repeat Source address Update Mode to decrement */
  if(hmdma->Init.SourceBlockAddressOffset < 0)
 800754c:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800754e:	2a00      	cmp	r2, #0
 8007550:	da04      	bge.n	800755c <HAL_MDMA_Init+0x80>
  {
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
 8007552:	6958      	ldr	r0, [r3, #20]
    /* Write new CBRUR Register value : source repeat block offset */
    blockoffset = (uint32_t)(- hmdma->Init.SourceBlockAddressOffset);
 8007554:	4252      	negs	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
 8007556:	f440 2080 	orr.w	r0, r0, #262144	; 0x40000
 800755a:	6158      	str	r0, [r3, #20]
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
  }
  else
  {
    /* Write new CBRUR Register value : source repeat block offset */
    hmdma->Instance->CBRUR = (((uint32_t)hmdma->Init.SourceBlockAddressOffset) & 0x0000FFFFU);
 800755c:	b292      	uxth	r2, r2
 800755e:	621a      	str	r2, [r3, #32]
  }

  /* If block destination address offset is negative set the Block Repeat destination address Update Mode to decrement */
  if(hmdma->Init.DestBlockAddressOffset < 0)
 8007560:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8007562:	2a00      	cmp	r2, #0
 8007564:	da25      	bge.n	80075b2 <HAL_MDMA_Init+0xd6>
  {
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
 8007566:	6958      	ldr	r0, [r3, #20]
    /* Write new CBRUR Register value : destination repeat block offset */
    blockoffset = (uint32_t)(- hmdma->Init.DestBlockAddressOffset);
 8007568:	4252      	negs	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
 800756a:	f440 2000 	orr.w	r0, r0, #524288	; 0x80000
 800756e:	6158      	str	r0, [r3, #20]
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
 8007570:	6a18      	ldr	r0, [r3, #32]
  }
  else
  {
    /*write new CBRUR Register value : destination repeat block offset */
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
 8007572:	ea40 4202 	orr.w	r2, r0, r2, lsl #16
  }

  /* if HW request set the HW request and the requet CleraMask and ClearData MaskData, */
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
 8007576:	f1b1 4f80 	cmp.w	r1, #1073741824	; 0x40000000
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
 800757a:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
 800757c:	f04f 0200 	mov.w	r2, #0
 8007580:	d019      	beq.n	80075b6 <HAL_MDMA_Init+0xda>
  {
    /* Set the HW request in CTRB register  */
    hmdma->Instance->CTBR = hmdma->Init.Request & MDMA_CTBR_TSEL;
 8007582:	b2c9      	uxtb	r1, r1
 8007584:	6299      	str	r1, [r3, #40]	; 0x28
  {
    hmdma->Instance->CTBR = 0;
  }

  /* Write Link Address Register */
  hmdma->Instance->CLAR =  0;
 8007586:	625a      	str	r2, [r3, #36]	; 0x24
  return HAL_OK;
 8007588:	2000      	movs	r0, #0
  hmdma->State = HAL_MDMA_STATE_READY;
 800758a:	2301      	movs	r3, #1
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
 800758c:	66a2      	str	r2, [r4, #104]	; 0x68
  hmdma->LinkedListNodeCounter  = 0;
 800758e:	6662      	str	r2, [r4, #100]	; 0x64
  hmdma->State = HAL_MDMA_STATE_READY;
 8007590:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hmdma->LastLinkedListNodeAddress   = 0;
 8007594:	e9c4 2217 	strd	r2, r2, [r4, #92]	; 0x5c
}
 8007598:	bd38      	pop	{r3, r4, r5, pc}
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
 800759a:	f7fe fa2f 	bl	80059fc <HAL_GetTick>
 800759e:	1b40      	subs	r0, r0, r5
 80075a0:	2805      	cmp	r0, #5
 80075a2:	d9ad      	bls.n	8007500 <HAL_MDMA_Init+0x24>
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
 80075a4:	2340      	movs	r3, #64	; 0x40
 80075a6:	66a3      	str	r3, [r4, #104]	; 0x68
      hmdma->State = HAL_MDMA_STATE_ERROR;
 80075a8:	2303      	movs	r3, #3
 80075aa:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    return HAL_ERROR;
 80075ae:	2001      	movs	r0, #1
 80075b0:	e7f2      	b.n	8007598 <HAL_MDMA_Init+0xbc>
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
 80075b2:	6a18      	ldr	r0, [r3, #32]
 80075b4:	e7dd      	b.n	8007572 <HAL_MDMA_Init+0x96>
    hmdma->Instance->CTBR = 0;
 80075b6:	629a      	str	r2, [r3, #40]	; 0x28
 80075b8:	e7e5      	b.n	8007586 <HAL_MDMA_Init+0xaa>

080075ba <HAL_MDMA_DeInit>:
  if(hmdma == NULL)
 80075ba:	b1d8      	cbz	r0, 80075f4 <HAL_MDMA_DeInit+0x3a>
  __HAL_MDMA_DISABLE(hmdma);
 80075bc:	6802      	ldr	r2, [r0, #0]
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
 80075be:	211f      	movs	r1, #31
  __HAL_MDMA_DISABLE(hmdma);
 80075c0:	68d3      	ldr	r3, [r2, #12]
 80075c2:	f023 0301 	bic.w	r3, r3, #1
 80075c6:	60d3      	str	r3, [r2, #12]
  hmdma->Instance->CCR  = 0;
 80075c8:	2300      	movs	r3, #0
 80075ca:	60d3      	str	r3, [r2, #12]
  hmdma->Instance->CTCR = 0;
 80075cc:	6113      	str	r3, [r2, #16]
  hmdma->Instance->CBNDTR = 0;
 80075ce:	6153      	str	r3, [r2, #20]
  hmdma->Instance->CSAR = 0;
 80075d0:	6193      	str	r3, [r2, #24]
  hmdma->Instance->CDAR = 0;
 80075d2:	61d3      	str	r3, [r2, #28]
  hmdma->Instance->CBRUR = 0;
 80075d4:	6213      	str	r3, [r2, #32]
  hmdma->Instance->CLAR = 0;
 80075d6:	6253      	str	r3, [r2, #36]	; 0x24
  hmdma->Instance->CTBR = 0;
 80075d8:	6293      	str	r3, [r2, #40]	; 0x28
  hmdma->Instance->CMAR = 0;
 80075da:	6313      	str	r3, [r2, #48]	; 0x30
  hmdma->Instance->CMDR = 0;
 80075dc:	6353      	str	r3, [r2, #52]	; 0x34
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
 80075de:	6051      	str	r1, [r2, #4]
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
 80075e0:	6683      	str	r3, [r0, #104]	; 0x68
  hmdma->LinkedListNodeCounter  = 0;
 80075e2:	6643      	str	r3, [r0, #100]	; 0x64
  hmdma->State = HAL_MDMA_STATE_RESET;
 80075e4:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
  __HAL_UNLOCK(hmdma);
 80075e8:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  hmdma->LastLinkedListNodeAddress   = 0;
 80075ec:	e9c0 3317 	strd	r3, r3, [r0, #92]	; 0x5c
  return HAL_OK;
 80075f0:	4618      	mov	r0, r3
 80075f2:	4770      	bx	lr
    return HAL_ERROR;
 80075f4:	2001      	movs	r0, #1
}
 80075f6:	4770      	bx	lr

080075f8 <HAL_PWREx_ConfigSupply>:
  *         PWR_SMPS_2V5_SUPPLIES_EXT are used only for lines that supports SMPS
  *         regulator.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_PWREx_ConfigSupply (uint32_t SupplySource)
{
 80075f8:	b570      	push	{r4, r5, r6, lr}

  /* Check if supply source was configured */
#if defined (PWR_FLAG_SCUEN)
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
#else
  if ((PWR->CR3 & (PWR_CR3_SMPSEN | PWR_CR3_LDOEN | PWR_CR3_BYPASS)) != (PWR_CR3_SMPSEN | PWR_CR3_LDOEN))
 80075fa:	4d1c      	ldr	r5, [pc, #112]	; (800766c <HAL_PWREx_ConfigSupply+0x74>)
{
 80075fc:	4604      	mov	r4, r0
  if ((PWR->CR3 & (PWR_CR3_SMPSEN | PWR_CR3_LDOEN | PWR_CR3_BYPASS)) != (PWR_CR3_SMPSEN | PWR_CR3_LDOEN))
 80075fe:	68eb      	ldr	r3, [r5, #12]
 8007600:	f003 0307 	and.w	r3, r3, #7
 8007604:	2b06      	cmp	r3, #6
 8007606:	d006      	beq.n	8007616 <HAL_PWREx_ConfigSupply+0x1e>
#endif /* defined (PWR_FLAG_SCUEN) */
  {
    /* Check supply configuration */
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
 8007608:	68e8      	ldr	r0, [r5, #12]
 800760a:	f000 003f 	and.w	r0, r0, #63	; 0x3f
    {
      /* Supply configuration update locked, can't apply a new supply config */
      return HAL_ERROR;
 800760e:	1b00      	subs	r0, r0, r4
 8007610:	bf18      	it	ne
 8007612:	2001      	movne	r0, #1
    }
  }
#endif /* defined (SMPS) */

  return HAL_OK;
}
 8007614:	bd70      	pop	{r4, r5, r6, pc}
  MODIFY_REG (PWR->CR3, PWR_SUPPLY_CONFIG_MASK, SupplySource);
 8007616:	68eb      	ldr	r3, [r5, #12]
 8007618:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800761c:	4303      	orrs	r3, r0
 800761e:	60eb      	str	r3, [r5, #12]
  tickstart = HAL_GetTick ();
 8007620:	f7fe f9ec 	bl	80059fc <HAL_GetTick>
 8007624:	4606      	mov	r6, r0
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
 8007626:	686b      	ldr	r3, [r5, #4]
 8007628:	049a      	lsls	r2, r3, #18
 800762a:	d508      	bpl.n	800763e <HAL_PWREx_ConfigSupply+0x46>
      (SupplySource == PWR_SMPS_2V5_SUPPLIES_EXT_AND_LDO) ||
 800762c:	f1a4 031d 	sub.w	r3, r4, #29
 8007630:	2b01      	cmp	r3, #1
 8007632:	d90c      	bls.n	800764e <HAL_PWREx_ConfigSupply+0x56>
      (SupplySource == PWR_SMPS_1V8_SUPPLIES_EXT)         ||
 8007634:	3c2d      	subs	r4, #45	; 0x2d
 8007636:	2c01      	cmp	r4, #1
 8007638:	d909      	bls.n	800764e <HAL_PWREx_ConfigSupply+0x56>
  return HAL_OK;
 800763a:	2000      	movs	r0, #0
 800763c:	e7ea      	b.n	8007614 <HAL_PWREx_ConfigSupply+0x1c>
    if ((HAL_GetTick () - tickstart) > PWR_FLAG_SETTING_DELAY)
 800763e:	f7fe f9dd 	bl	80059fc <HAL_GetTick>
 8007642:	1b80      	subs	r0, r0, r6
 8007644:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8007648:	d9ed      	bls.n	8007626 <HAL_PWREx_ConfigSupply+0x2e>
      return HAL_ERROR;
 800764a:	2001      	movs	r0, #1
 800764c:	e7e2      	b.n	8007614 <HAL_PWREx_ConfigSupply+0x1c>
    tickstart = HAL_GetTick ();
 800764e:	f7fe f9d5 	bl	80059fc <HAL_GetTick>
    while (__HAL_PWR_GET_FLAG (PWR_FLAG_SMPSEXTRDY) == 0U)
 8007652:	4d06      	ldr	r5, [pc, #24]	; (800766c <HAL_PWREx_ConfigSupply+0x74>)
    tickstart = HAL_GetTick ();
 8007654:	4604      	mov	r4, r0
    while (__HAL_PWR_GET_FLAG (PWR_FLAG_SMPSEXTRDY) == 0U)
 8007656:	68eb      	ldr	r3, [r5, #12]
 8007658:	03db      	lsls	r3, r3, #15
 800765a:	d4ee      	bmi.n	800763a <HAL_PWREx_ConfigSupply+0x42>
      if ((HAL_GetTick () - tickstart) > PWR_FLAG_SETTING_DELAY)
 800765c:	f7fe f9ce 	bl	80059fc <HAL_GetTick>
 8007660:	1b00      	subs	r0, r0, r4
 8007662:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8007666:	d9f6      	bls.n	8007656 <HAL_PWREx_ConfigSupply+0x5e>
 8007668:	e7ef      	b.n	800764a <HAL_PWREx_ConfigSupply+0x52>
 800766a:	bf00      	nop
 800766c:	58024800 	.word	0x58024800

08007670 <QSPI_Config>:
  *            @arg QSPI_FUNCTIONAL_MODE_AUTO_POLLING: Automatic polling mode
  *            @arg QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED: Memory-mapped mode
  * @retval None
  */
static void QSPI_Config(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, uint32_t FunctionalMode)
{
 8007670:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  assert_param(IS_QSPI_FUNCTIONAL_MODE(FunctionalMode));

  if ((cmd->DataMode != QSPI_DATA_NONE) && (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED))
 8007674:	6a4e      	ldr	r6, [r1, #36]	; 0x24
 8007676:	b136      	cbz	r6, 8007686 <QSPI_Config+0x16>
 8007678:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
 800767c:	d003      	beq.n	8007686 <QSPI_Config+0x16>
  {
    /* Configure QSPI: DLR register with the number of data to read or write */
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 800767e:	6a8b      	ldr	r3, [r1, #40]	; 0x28
 8007680:	6804      	ldr	r4, [r0, #0]
 8007682:	3b01      	subs	r3, #1
 8007684:	6123      	str	r3, [r4, #16]
  }

  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 8007686:	f8d1 9018 	ldr.w	r9, [r1, #24]
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
    {
      /* Configure QSPI: ABR register with alternate bytes value */
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);

      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800768a:	e9d1 7507 	ldrd	r7, r5, [r1, #28]
  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 800768e:	f1b9 0f00 	cmp.w	r9, #0
 8007692:	d04f      	beq.n	8007734 <QSPI_Config+0xc4>
      {
        /*---- Command with instruction, address and alternate bytes ----*/
        /* Configure QSPI: CCR register with all communications parameters */
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8007694:	694b      	ldr	r3, [r1, #20]
 8007696:	ea46 0909 	orr.w	r9, r6, r9
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 800769a:	6800      	ldr	r0, [r0, #0]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800769c:	f8d1 a000 	ldr.w	sl, [r1]
 80076a0:	ea4f 4c83 	mov.w	ip, r3, lsl #18
 80076a4:	f8d1 e034 	ldr.w	lr, [r1, #52]	; 0x34
 80076a8:	ea49 0902 	orr.w	r9, r9, r2
 80076ac:	e9d1 480b 	ldrd	r4, r8, [r1, #44]	; 0x2c
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 80076b0:	b335      	cbz	r5, 8007700 <QSPI_Config+0x90>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 80076b2:	688b      	ldr	r3, [r1, #8]
 80076b4:	ea49 0505 	orr.w	r5, r9, r5
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80076b8:	690e      	ldr	r6, [r1, #16]
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 80076ba:	61c3      	str	r3, [r0, #28]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 80076bc:	b19f      	cbz	r7, 80076e6 <QSPI_Config+0x76>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80076be:	ea4a 0307 	orr.w	r3, sl, r7
 80076c2:	4323      	orrs	r3, r4
 80076c4:	68cc      	ldr	r4, [r1, #12]
 80076c6:	ea43 0308 	orr.w	r3, r3, r8
 80076ca:	ea43 030e 	orr.w	r3, r3, lr
 80076ce:	4333      	orrs	r3, r6
 80076d0:	4323      	orrs	r3, r4
 80076d2:	ea43 030c 	orr.w	r3, r3, ip
 80076d6:	432b      	orrs	r3, r5
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
                                         cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos) |
                                         cmd->AlternateByteMode | cmd->AddressSize |
                                         cmd->AddressMode | cmd->InstructionMode | FunctionalMode));

        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 80076d8:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80076dc:	6143      	str	r3, [r0, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 80076de:	d00d      	beq.n	80076fc <QSPI_Config+0x8c>
        {
          /* Configure QSPI: AR register with address value */
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 80076e0:	684b      	ldr	r3, [r1, #4]
 80076e2:	6183      	str	r3, [r0, #24]
 80076e4:	e00a      	b.n	80076fc <QSPI_Config+0x8c>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80076e6:	ea4a 0304 	orr.w	r3, sl, r4
 80076ea:	ea43 0308 	orr.w	r3, r3, r8
 80076ee:	ea43 030e 	orr.w	r3, r3, lr
 80076f2:	4333      	orrs	r3, r6
 80076f4:	ea43 030c 	orr.w	r3, r3, ip
 80076f8:	432b      	orrs	r3, r5
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80076fa:	6143      	str	r3, [r0, #20]
                                           cmd->InstructionMode | FunctionalMode));
        }
      }
    }
  }
}
 80076fc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8007700:	b16f      	cbz	r7, 800771e <QSPI_Config+0xae>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8007702:	ea4a 0307 	orr.w	r3, sl, r7
 8007706:	4323      	orrs	r3, r4
 8007708:	68cc      	ldr	r4, [r1, #12]
 800770a:	ea43 0308 	orr.w	r3, r3, r8
 800770e:	ea43 030e 	orr.w	r3, r3, lr
 8007712:	4323      	orrs	r3, r4
 8007714:	ea43 030c 	orr.w	r3, r3, ip
 8007718:	ea43 0309 	orr.w	r3, r3, r9
 800771c:	e7dc      	b.n	80076d8 <QSPI_Config+0x68>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800771e:	ea4a 0304 	orr.w	r3, sl, r4
 8007722:	ea43 0308 	orr.w	r3, r3, r8
 8007726:	ea43 030e 	orr.w	r3, r3, lr
 800772a:	ea43 030c 	orr.w	r3, r3, ip
 800772e:	ea43 0309 	orr.w	r3, r3, r9
 8007732:	e7e2      	b.n	80076fa <QSPI_Config+0x8a>
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 8007734:	b365      	cbz	r5, 8007790 <QSPI_Config+0x120>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 8007736:	6804      	ldr	r4, [r0, #0]
 8007738:	688b      	ldr	r3, [r1, #8]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800773a:	6908      	ldr	r0, [r1, #16]
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 800773c:	61e3      	str	r3, [r4, #28]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800773e:	ea46 0305 	orr.w	r3, r6, r5
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8007742:	694e      	ldr	r6, [r1, #20]
 8007744:	ea43 0502 	orr.w	r5, r3, r2
 8007748:	f8d1 c034 	ldr.w	ip, [r1, #52]	; 0x34
 800774c:	04b6      	lsls	r6, r6, #18
 800774e:	e9d1 830b 	ldrd	r8, r3, [r1, #44]	; 0x2c
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8007752:	b1a7      	cbz	r7, 800777e <QSPI_Config+0x10e>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8007754:	4338      	orrs	r0, r7
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8007756:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800775a:	ea40 0008 	orr.w	r0, r0, r8
 800775e:	ea43 0300 	orr.w	r3, r3, r0
 8007762:	68c8      	ldr	r0, [r1, #12]
 8007764:	ea43 030c 	orr.w	r3, r3, ip
 8007768:	ea43 0300 	orr.w	r3, r3, r0
 800776c:	ea43 0306 	orr.w	r3, r3, r6
 8007770:	ea43 0305 	orr.w	r3, r3, r5
 8007774:	6163      	str	r3, [r4, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8007776:	d0c1      	beq.n	80076fc <QSPI_Config+0x8c>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 8007778:	684b      	ldr	r3, [r1, #4]
 800777a:	61a3      	str	r3, [r4, #24]
 800777c:	e7be      	b.n	80076fc <QSPI_Config+0x8c>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800777e:	ea40 0008 	orr.w	r0, r0, r8
 8007782:	4303      	orrs	r3, r0
 8007784:	ea43 030c 	orr.w	r3, r3, ip
 8007788:	4333      	orrs	r3, r6
 800778a:	432b      	orrs	r3, r5
 800778c:	6163      	str	r3, [r4, #20]
 800778e:	e7b5      	b.n	80076fc <QSPI_Config+0x8c>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8007790:	b17f      	cbz	r7, 80077b2 <QSPI_Config+0x142>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8007792:	ea46 0307 	orr.w	r3, r6, r7
 8007796:	6acc      	ldr	r4, [r1, #44]	; 0x2c
 8007798:	6800      	ldr	r0, [r0, #0]
 800779a:	4313      	orrs	r3, r2
 800779c:	4323      	orrs	r3, r4
 800779e:	6b0c      	ldr	r4, [r1, #48]	; 0x30
 80077a0:	4323      	orrs	r3, r4
 80077a2:	6b4c      	ldr	r4, [r1, #52]	; 0x34
 80077a4:	4323      	orrs	r3, r4
 80077a6:	68cc      	ldr	r4, [r1, #12]
 80077a8:	4323      	orrs	r3, r4
 80077aa:	694c      	ldr	r4, [r1, #20]
 80077ac:	ea43 4384 	orr.w	r3, r3, r4, lsl #18
 80077b0:	e792      	b.n	80076d8 <QSPI_Config+0x68>
        if (cmd->DataMode != QSPI_DATA_NONE)
 80077b2:	2e00      	cmp	r6, #0
 80077b4:	d0a2      	beq.n	80076fc <QSPI_Config+0x8c>
          WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80077b6:	6acb      	ldr	r3, [r1, #44]	; 0x2c
 80077b8:	6800      	ldr	r0, [r0, #0]
 80077ba:	4333      	orrs	r3, r6
 80077bc:	6b0e      	ldr	r6, [r1, #48]	; 0x30
 80077be:	431a      	orrs	r2, r3
 80077c0:	694b      	ldr	r3, [r1, #20]
 80077c2:	4332      	orrs	r2, r6
 80077c4:	6b4e      	ldr	r6, [r1, #52]	; 0x34
 80077c6:	4332      	orrs	r2, r6
 80077c8:	ea42 4283 	orr.w	r2, r2, r3, lsl #18
 80077cc:	6142      	str	r2, [r0, #20]
}
 80077ce:	e795      	b.n	80076fc <QSPI_Config+0x8c>

080077d0 <QSPI_WaitFlagStateUntilTimeout>:
{
 80077d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80077d4:	f8dd 8018 	ldr.w	r8, [sp, #24]
 80077d8:	4604      	mov	r4, r0
 80077da:	460e      	mov	r6, r1
 80077dc:	4615      	mov	r5, r2
 80077de:	461f      	mov	r7, r3
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 80077e0:	6822      	ldr	r2, [r4, #0]
 80077e2:	6893      	ldr	r3, [r2, #8]
 80077e4:	4233      	tst	r3, r6
 80077e6:	bf14      	ite	ne
 80077e8:	2301      	movne	r3, #1
 80077ea:	2300      	moveq	r3, #0
 80077ec:	42ab      	cmp	r3, r5
 80077ee:	d101      	bne.n	80077f4 <QSPI_WaitFlagStateUntilTimeout+0x24>
  return HAL_OK;
 80077f0:	2000      	movs	r0, #0
 80077f2:	e012      	b.n	800781a <QSPI_WaitFlagStateUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
 80077f4:	f1b8 3fff 	cmp.w	r8, #4294967295
 80077f8:	d0f3      	beq.n	80077e2 <QSPI_WaitFlagStateUntilTimeout+0x12>
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80077fa:	f7fe f8ff 	bl	80059fc <HAL_GetTick>
 80077fe:	1bc0      	subs	r0, r0, r7
 8007800:	4540      	cmp	r0, r8
 8007802:	d802      	bhi.n	800780a <QSPI_WaitFlagStateUntilTimeout+0x3a>
 8007804:	f1b8 0f00 	cmp.w	r8, #0
 8007808:	d1ea      	bne.n	80077e0 <QSPI_WaitFlagStateUntilTimeout+0x10>
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 800780a:	2304      	movs	r3, #4
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 800780c:	2001      	movs	r0, #1
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 800780e:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 8007812:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8007814:	f043 0301 	orr.w	r3, r3, #1
 8007818:	6463      	str	r3, [r4, #68]	; 0x44
}
 800781a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08007820 <HAL_QSPI_Init>:
{
 8007820:	b530      	push	{r4, r5, lr}
 8007822:	4604      	mov	r4, r0
 8007824:	b085      	sub	sp, #20
  uint32_t tickstart = HAL_GetTick();
 8007826:	f7fe f8e9 	bl	80059fc <HAL_GetTick>
 800782a:	4603      	mov	r3, r0
  if(hqspi == NULL)
 800782c:	2c00      	cmp	r4, #0
 800782e:	d040      	beq.n	80078b2 <HAL_QSPI_Init+0x92>
  if(hqspi->State == HAL_QSPI_STATE_RESET)
 8007830:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8007834:	b93a      	cbnz	r2, 8007846 <HAL_QSPI_Init+0x26>
 8007836:	9003      	str	r0, [sp, #12]
    HAL_QSPI_MspInit(hqspi);
 8007838:	4620      	mov	r0, r4
 800783a:	f7f9 fc39 	bl	80010b0 <HAL_QSPI_MspInit>
  hqspi->Timeout = Timeout;
 800783e:	f241 3288 	movw	r2, #5000	; 0x1388
 8007842:	9b03      	ldr	r3, [sp, #12]
 8007844:	64a2      	str	r2, [r4, #72]	; 0x48
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 8007846:	6820      	ldr	r0, [r4, #0]
 8007848:	68a1      	ldr	r1, [r4, #8]
 800784a:	6802      	ldr	r2, [r0, #0]
 800784c:	3901      	subs	r1, #1
 800784e:	f422 6270 	bic.w	r2, r2, #3840	; 0xf00
 8007852:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8007856:	2120      	movs	r1, #32
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 8007858:	6002      	str	r2, [r0, #0]
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 800785a:	4620      	mov	r0, r4
 800785c:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800785e:	9200      	str	r2, [sp, #0]
 8007860:	2200      	movs	r2, #0
 8007862:	f7ff ffb5 	bl	80077d0 <QSPI_WaitFlagStateUntilTimeout>
  if(status == HAL_OK)
 8007866:	bb10      	cbnz	r0, 80078ae <HAL_QSPI_Init+0x8e>
    MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PRESCALER | QUADSPI_CR_SSHIFT | QUADSPI_CR_FSEL | QUADSPI_CR_DFM),
 8007868:	6822      	ldr	r2, [r4, #0]
 800786a:	69e5      	ldr	r5, [r4, #28]
 800786c:	68e3      	ldr	r3, [r4, #12]
 800786e:	6811      	ldr	r1, [r2, #0]
 8007870:	432b      	orrs	r3, r5
 8007872:	6a25      	ldr	r5, [r4, #32]
 8007874:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8007878:	432b      	orrs	r3, r5
 800787a:	6865      	ldr	r5, [r4, #4]
 800787c:	f021 01d0 	bic.w	r1, r1, #208	; 0xd0
 8007880:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
 8007884:	430b      	orrs	r3, r1
 8007886:	6013      	str	r3, [r2, #0]
    MODIFY_REG(hqspi->Instance->DCR, (QUADSPI_DCR_FSIZE | QUADSPI_DCR_CSHT | QUADSPI_DCR_CKMODE),
 8007888:	6855      	ldr	r5, [r2, #4]
 800788a:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
 800788e:	430b      	orrs	r3, r1
 8007890:	6921      	ldr	r1, [r4, #16]
 8007892:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8007896:	4908      	ldr	r1, [pc, #32]	; (80078b8 <HAL_QSPI_Init+0x98>)
 8007898:	4029      	ands	r1, r5
 800789a:	430b      	orrs	r3, r1
 800789c:	6053      	str	r3, [r2, #4]
    __HAL_QSPI_ENABLE(hqspi);
 800789e:	6813      	ldr	r3, [r2, #0]
 80078a0:	f043 0301 	orr.w	r3, r3, #1
 80078a4:	6013      	str	r3, [r2, #0]
    hqspi->State = HAL_QSPI_STATE_READY;
 80078a6:	2301      	movs	r3, #1
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80078a8:	6460      	str	r0, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_READY;
 80078aa:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
}
 80078ae:	b005      	add	sp, #20
 80078b0:	bd30      	pop	{r4, r5, pc}
    return HAL_ERROR;
 80078b2:	2001      	movs	r0, #1
 80078b4:	e7fb      	b.n	80078ae <HAL_QSPI_Init+0x8e>
 80078b6:	bf00      	nop
 80078b8:	ffe0f8fe 	.word	0xffe0f8fe

080078bc <HAL_QSPI_Command>:
{
 80078bc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80078c0:	4604      	mov	r4, r0
 80078c2:	b085      	sub	sp, #20
 80078c4:	4617      	mov	r7, r2
 80078c6:	4689      	mov	r9, r1
  uint32_t tickstart = HAL_GetTick();
 80078c8:	f7fe f898 	bl	80059fc <HAL_GetTick>
  __HAL_LOCK(hqspi);
 80078cc:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
  uint32_t tickstart = HAL_GetTick();
 80078d0:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 80078d2:	2a01      	cmp	r2, #1
 80078d4:	d033      	beq.n	800793e <HAL_QSPI_Command+0x82>
 80078d6:	2201      	movs	r2, #1
 80078d8:	2602      	movs	r6, #2
 80078da:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 80078de:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 80078e2:	2a01      	cmp	r2, #1
 80078e4:	fa5f f882 	uxtb.w	r8, r2
 80078e8:	d127      	bne.n	800793a <HAL_QSPI_Command+0x7e>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80078ea:	2200      	movs	r2, #0
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 80078ec:	9003      	str	r0, [sp, #12]
 80078ee:	2120      	movs	r1, #32
 80078f0:	4620      	mov	r0, r4
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80078f2:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 80078f4:	9700      	str	r7, [sp, #0]
    hqspi->State = HAL_QSPI_STATE_BUSY;
 80078f6:	f884 6041 	strb.w	r6, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 80078fa:	f7ff ff69 	bl	80077d0 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 80078fe:	4605      	mov	r5, r0
 8007900:	b9a0      	cbnz	r0, 800792c <HAL_QSPI_Command+0x70>
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 8007902:	4602      	mov	r2, r0
 8007904:	4649      	mov	r1, r9
 8007906:	4620      	mov	r0, r4
 8007908:	f7ff feb2 	bl	8007670 <QSPI_Config>
      if (cmd->DataMode == QSPI_DATA_NONE)
 800790c:	f8d9 2024 	ldr.w	r2, [r9, #36]	; 0x24
 8007910:	9b03      	ldr	r3, [sp, #12]
 8007912:	b94a      	cbnz	r2, 8007928 <HAL_QSPI_Command+0x6c>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8007914:	4642      	mov	r2, r8
 8007916:	4631      	mov	r1, r6
 8007918:	4620      	mov	r0, r4
 800791a:	9700      	str	r7, [sp, #0]
 800791c:	f7ff ff58 	bl	80077d0 <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 8007920:	4605      	mov	r5, r0
 8007922:	b918      	cbnz	r0, 800792c <HAL_QSPI_Command+0x70>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8007924:	6823      	ldr	r3, [r4, #0]
 8007926:	60de      	str	r6, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 8007928:	f884 8041 	strb.w	r8, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800792c:	2300      	movs	r3, #0
 800792e:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8007932:	4628      	mov	r0, r5
 8007934:	b005      	add	sp, #20
 8007936:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    status = HAL_BUSY;
 800793a:	4635      	mov	r5, r6
 800793c:	e7f6      	b.n	800792c <HAL_QSPI_Command+0x70>
  __HAL_LOCK(hqspi);
 800793e:	2502      	movs	r5, #2
 8007940:	e7f7      	b.n	8007932 <HAL_QSPI_Command+0x76>

08007942 <HAL_QSPI_Transmit>:
{
 8007942:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007944:	4604      	mov	r4, r0
 8007946:	b085      	sub	sp, #20
 8007948:	4616      	mov	r6, r2
 800794a:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 800794c:	f7fe f856 	bl	80059fc <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8007950:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
  uint32_t tickstart = HAL_GetTick();
 8007954:	4603      	mov	r3, r0
  __IO uint32_t *data_reg = &hqspi->Instance->DR;
 8007956:	6825      	ldr	r5, [r4, #0]
  __HAL_LOCK(hqspi);
 8007958:	2a01      	cmp	r2, #1
 800795a:	d049      	beq.n	80079f0 <HAL_QSPI_Transmit+0xae>
 800795c:	2201      	movs	r2, #1
 800795e:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8007962:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8007966:	2a01      	cmp	r2, #1
 8007968:	b2d0      	uxtb	r0, r2
 800796a:	d13f      	bne.n	80079ec <HAL_QSPI_Transmit+0xaa>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800796c:	2200      	movs	r2, #0
 800796e:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 8007970:	2f00      	cmp	r7, #0
 8007972:	d036      	beq.n	80079e2 <HAL_QSPI_Transmit+0xa0>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_TX;
 8007974:	2212      	movs	r2, #18
 8007976:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->TxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 800797a:	692a      	ldr	r2, [r5, #16]
 800797c:	3201      	adds	r2, #1
 800797e:	62e2      	str	r2, [r4, #44]	; 0x2c
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8007980:	692a      	ldr	r2, [r5, #16]
      hqspi->pTxBuffPtr = pData;
 8007982:	6267      	str	r7, [r4, #36]	; 0x24
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8007984:	3201      	adds	r2, #1
 8007986:	62a2      	str	r2, [r4, #40]	; 0x28
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 8007988:	696a      	ldr	r2, [r5, #20]
 800798a:	f022 6240 	bic.w	r2, r2, #201326592	; 0xc000000
 800798e:	616a      	str	r2, [r5, #20]
      while(hqspi->TxXferCount > 0U)
 8007990:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8007992:	b98a      	cbnz	r2, 80079b8 <HAL_QSPI_Transmit+0x76>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8007994:	2201      	movs	r2, #1
 8007996:	2102      	movs	r1, #2
 8007998:	4620      	mov	r0, r4
 800799a:	9600      	str	r6, [sp, #0]
 800799c:	f7ff ff18 	bl	80077d0 <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 80079a0:	b910      	cbnz	r0, 80079a8 <HAL_QSPI_Transmit+0x66>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 80079a2:	6823      	ldr	r3, [r4, #0]
 80079a4:	2202      	movs	r2, #2
 80079a6:	60da      	str	r2, [r3, #12]
      hqspi->State = HAL_QSPI_STATE_READY;
 80079a8:	2301      	movs	r3, #1
 80079aa:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 80079ae:	2300      	movs	r3, #0
 80079b0:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 80079b4:	b005      	add	sp, #20
 80079b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_FT, SET, tickstart, Timeout);
 80079b8:	2201      	movs	r2, #1
 80079ba:	2104      	movs	r1, #4
 80079bc:	4620      	mov	r0, r4
 80079be:	9600      	str	r6, [sp, #0]
 80079c0:	9303      	str	r3, [sp, #12]
 80079c2:	f7ff ff05 	bl	80077d0 <QSPI_WaitFlagStateUntilTimeout>
        if (status != HAL_OK)
 80079c6:	2800      	cmp	r0, #0
 80079c8:	d1ee      	bne.n	80079a8 <HAL_QSPI_Transmit+0x66>
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 80079ca:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 80079cc:	9b03      	ldr	r3, [sp, #12]
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 80079ce:	7812      	ldrb	r2, [r2, #0]
 80079d0:	f885 2020 	strb.w	r2, [r5, #32]
        hqspi->pTxBuffPtr++;
 80079d4:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80079d6:	3201      	adds	r2, #1
 80079d8:	6262      	str	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 80079da:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80079dc:	3a01      	subs	r2, #1
 80079de:	62e2      	str	r2, [r4, #44]	; 0x2c
 80079e0:	e7d6      	b.n	8007990 <HAL_QSPI_Transmit+0x4e>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 80079e2:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80079e4:	f043 0308 	orr.w	r3, r3, #8
 80079e8:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 80079ea:	e7e0      	b.n	80079ae <HAL_QSPI_Transmit+0x6c>
    status = HAL_BUSY;
 80079ec:	2002      	movs	r0, #2
 80079ee:	e7de      	b.n	80079ae <HAL_QSPI_Transmit+0x6c>
  __HAL_LOCK(hqspi);
 80079f0:	2002      	movs	r0, #2
 80079f2:	e7df      	b.n	80079b4 <HAL_QSPI_Transmit+0x72>

080079f4 <HAL_QSPI_Receive>:
{
 80079f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80079f6:	4604      	mov	r4, r0
 80079f8:	b085      	sub	sp, #20
 80079fa:	4616      	mov	r6, r2
 80079fc:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 80079fe:	f7fd fffd 	bl	80059fc <HAL_GetTick>
  uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
 8007a02:	6825      	ldr	r5, [r4, #0]
  uint32_t tickstart = HAL_GetTick();
 8007a04:	4603      	mov	r3, r0
  uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
 8007a06:	f8d5 c018 	ldr.w	ip, [r5, #24]
  __HAL_LOCK(hqspi);
 8007a0a:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8007a0e:	2a01      	cmp	r2, #1
 8007a10:	d04d      	beq.n	8007aae <HAL_QSPI_Receive+0xba>
 8007a12:	2201      	movs	r2, #1
 8007a14:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8007a18:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8007a1c:	2a01      	cmp	r2, #1
 8007a1e:	b2d0      	uxtb	r0, r2
 8007a20:	d143      	bne.n	8007aaa <HAL_QSPI_Receive+0xb6>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8007a22:	2200      	movs	r2, #0
 8007a24:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 8007a26:	2f00      	cmp	r7, #0
 8007a28:	d03a      	beq.n	8007aa0 <HAL_QSPI_Receive+0xac>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_RX;
 8007a2a:	2222      	movs	r2, #34	; 0x22
 8007a2c:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->RxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 8007a30:	692a      	ldr	r2, [r5, #16]
 8007a32:	3201      	adds	r2, #1
 8007a34:	63a2      	str	r2, [r4, #56]	; 0x38
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8007a36:	692a      	ldr	r2, [r5, #16]
      hqspi->pRxBuffPtr = pData;
 8007a38:	6327      	str	r7, [r4, #48]	; 0x30
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8007a3a:	3201      	adds	r2, #1
 8007a3c:	6362      	str	r2, [r4, #52]	; 0x34
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 8007a3e:	6969      	ldr	r1, [r5, #20]
 8007a40:	f021 6140 	bic.w	r1, r1, #201326592	; 0xc000000
 8007a44:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
 8007a48:	6169      	str	r1, [r5, #20]
      WRITE_REG(hqspi->Instance->AR, addr_reg);
 8007a4a:	f8c5 c018 	str.w	ip, [r5, #24]
      while(hqspi->RxXferCount > 0U)
 8007a4e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8007a50:	b98a      	cbnz	r2, 8007a76 <HAL_QSPI_Receive+0x82>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8007a52:	2201      	movs	r2, #1
 8007a54:	2102      	movs	r1, #2
 8007a56:	4620      	mov	r0, r4
 8007a58:	9600      	str	r6, [sp, #0]
 8007a5a:	f7ff feb9 	bl	80077d0 <QSPI_WaitFlagStateUntilTimeout>
        if  (status == HAL_OK)
 8007a5e:	b910      	cbnz	r0, 8007a66 <HAL_QSPI_Receive+0x72>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8007a60:	6823      	ldr	r3, [r4, #0]
 8007a62:	2202      	movs	r2, #2
 8007a64:	60da      	str	r2, [r3, #12]
      hqspi->State = HAL_QSPI_STATE_READY;
 8007a66:	2301      	movs	r3, #1
 8007a68:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8007a6c:	2300      	movs	r3, #0
 8007a6e:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8007a72:	b005      	add	sp, #20
 8007a74:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, (QSPI_FLAG_FT | QSPI_FLAG_TC), SET, tickstart, Timeout);
 8007a76:	2201      	movs	r2, #1
 8007a78:	2106      	movs	r1, #6
 8007a7a:	4620      	mov	r0, r4
 8007a7c:	9600      	str	r6, [sp, #0]
 8007a7e:	9303      	str	r3, [sp, #12]
 8007a80:	f7ff fea6 	bl	80077d0 <QSPI_WaitFlagStateUntilTimeout>
        if  (status != HAL_OK)
 8007a84:	2800      	cmp	r0, #0
 8007a86:	d1ee      	bne.n	8007a66 <HAL_QSPI_Receive+0x72>
        *hqspi->pRxBuffPtr = *((__IO uint8_t *)data_reg);
 8007a88:	f895 1020 	ldrb.w	r1, [r5, #32]
 8007a8c:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 8007a8e:	9b03      	ldr	r3, [sp, #12]
        *hqspi->pRxBuffPtr = *((__IO uint8_t *)data_reg);
 8007a90:	7011      	strb	r1, [r2, #0]
        hqspi->pRxBuffPtr++;
 8007a92:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8007a94:	3201      	adds	r2, #1
 8007a96:	6322      	str	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 8007a98:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8007a9a:	3a01      	subs	r2, #1
 8007a9c:	63a2      	str	r2, [r4, #56]	; 0x38
 8007a9e:	e7d6      	b.n	8007a4e <HAL_QSPI_Receive+0x5a>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 8007aa0:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8007aa2:	f043 0308 	orr.w	r3, r3, #8
 8007aa6:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 8007aa8:	e7e0      	b.n	8007a6c <HAL_QSPI_Receive+0x78>
    status = HAL_BUSY;
 8007aaa:	2002      	movs	r0, #2
 8007aac:	e7de      	b.n	8007a6c <HAL_QSPI_Receive+0x78>
  __HAL_LOCK(hqspi);
 8007aae:	2002      	movs	r0, #2
 8007ab0:	e7df      	b.n	8007a72 <HAL_QSPI_Receive+0x7e>

08007ab2 <HAL_QSPI_AutoPolling>:
{
 8007ab2:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8007ab6:	4604      	mov	r4, r0
 8007ab8:	4615      	mov	r5, r2
 8007aba:	461e      	mov	r6, r3
 8007abc:	4688      	mov	r8, r1
  uint32_t tickstart = HAL_GetTick();
 8007abe:	f7fd ff9d 	bl	80059fc <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8007ac2:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
  uint32_t tickstart = HAL_GetTick();
 8007ac6:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8007ac8:	2a01      	cmp	r2, #1
 8007aca:	d040      	beq.n	8007b4e <HAL_QSPI_AutoPolling+0x9c>
 8007acc:	2201      	movs	r2, #1
 8007ace:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8007ad2:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8007ad6:	2a01      	cmp	r2, #1
 8007ad8:	b2d7      	uxtb	r7, r2
 8007ada:	d136      	bne.n	8007b4a <HAL_QSPI_AutoPolling+0x98>
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 8007adc:	2142      	movs	r1, #66	; 0x42
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8007ade:	2200      	movs	r2, #0
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8007ae0:	9003      	str	r0, [sp, #12]
 8007ae2:	4620      	mov	r0, r4
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8007ae4:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8007ae6:	9600      	str	r6, [sp, #0]
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 8007ae8:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8007aec:	2120      	movs	r1, #32
 8007aee:	f7ff fe6f 	bl	80077d0 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8007af2:	bb20      	cbnz	r0, 8007b3e <HAL_QSPI_AutoPolling+0x8c>
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 8007af4:	6821      	ldr	r1, [r4, #0]
 8007af6:	682a      	ldr	r2, [r5, #0]
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 8007af8:	6928      	ldr	r0, [r5, #16]
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 8007afa:	628a      	str	r2, [r1, #40]	; 0x28
      WRITE_REG(hqspi->Instance->PSMKR, cfg->Mask);
 8007afc:	686a      	ldr	r2, [r5, #4]
 8007afe:	624a      	str	r2, [r1, #36]	; 0x24
      WRITE_REG(hqspi->Instance->PIR, cfg->Interval);
 8007b00:	68aa      	ldr	r2, [r5, #8]
 8007b02:	62ca      	str	r2, [r1, #44]	; 0x2c
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 8007b04:	680a      	ldr	r2, [r1, #0]
 8007b06:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 8007b0a:	4302      	orrs	r2, r0
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 8007b0c:	4620      	mov	r0, r4
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 8007b0e:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8007b12:	600a      	str	r2, [r1, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 8007b14:	4641      	mov	r1, r8
      cmd->NbData = cfg->StatusBytesSize;
 8007b16:	68ea      	ldr	r2, [r5, #12]
 8007b18:	f8c8 2028 	str.w	r2, [r8, #40]	; 0x28
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 8007b1c:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8007b20:	f7ff fda6 	bl	8007670 <QSPI_Config>
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_SM, SET, tickstart, Timeout);
 8007b24:	9b03      	ldr	r3, [sp, #12]
 8007b26:	463a      	mov	r2, r7
 8007b28:	2108      	movs	r1, #8
 8007b2a:	4620      	mov	r0, r4
 8007b2c:	9600      	str	r6, [sp, #0]
 8007b2e:	f7ff fe4f 	bl	80077d0 <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 8007b32:	b920      	cbnz	r0, 8007b3e <HAL_QSPI_AutoPolling+0x8c>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_SM);
 8007b34:	6823      	ldr	r3, [r4, #0]
 8007b36:	2208      	movs	r2, #8
 8007b38:	60da      	str	r2, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 8007b3a:	f884 7041 	strb.w	r7, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8007b3e:	2300      	movs	r3, #0
 8007b40:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8007b44:	b004      	add	sp, #16
 8007b46:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    status = HAL_BUSY;
 8007b4a:	2002      	movs	r0, #2
 8007b4c:	e7f7      	b.n	8007b3e <HAL_QSPI_AutoPolling+0x8c>
  __HAL_LOCK(hqspi);
 8007b4e:	2002      	movs	r0, #2
 8007b50:	e7f8      	b.n	8007b44 <HAL_QSPI_AutoPolling+0x92>

08007b52 <HAL_QSPI_MemoryMapped>:
{
 8007b52:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007b54:	4604      	mov	r4, r0
 8007b56:	4616      	mov	r6, r2
 8007b58:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 8007b5a:	f7fd ff4f 	bl	80059fc <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8007b5e:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
  uint32_t tickstart = HAL_GetTick();
 8007b62:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8007b64:	2a01      	cmp	r2, #1
 8007b66:	d033      	beq.n	8007bd0 <HAL_QSPI_MemoryMapped+0x7e>
 8007b68:	2201      	movs	r2, #1
 8007b6a:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8007b6e:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8007b72:	2a01      	cmp	r2, #1
 8007b74:	d12a      	bne.n	8007bcc <HAL_QSPI_MemoryMapped+0x7a>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8007b76:	2200      	movs	r2, #0
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 8007b78:	2182      	movs	r1, #130	; 0x82
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8007b7a:	4620      	mov	r0, r4
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8007b7c:	6462      	str	r2, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 8007b7e:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8007b82:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8007b84:	9100      	str	r1, [sp, #0]
 8007b86:	2120      	movs	r1, #32
 8007b88:	f7ff fe22 	bl	80077d0 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8007b8c:	4605      	mov	r5, r0
 8007b8e:	b9b8      	cbnz	r0, 8007bc0 <HAL_QSPI_MemoryMapped+0x6e>
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 8007b90:	6823      	ldr	r3, [r4, #0]
 8007b92:	6872      	ldr	r2, [r6, #4]
 8007b94:	6818      	ldr	r0, [r3, #0]
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 8007b96:	2a08      	cmp	r2, #8
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 8007b98:	f020 0008 	bic.w	r0, r0, #8
 8007b9c:	ea40 0002 	orr.w	r0, r0, r2
 8007ba0:	6018      	str	r0, [r3, #0]
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 8007ba2:	d107      	bne.n	8007bb4 <HAL_QSPI_MemoryMapped+0x62>
        WRITE_REG(hqspi->Instance->LPTR, cfg->TimeOutPeriod);
 8007ba4:	6832      	ldr	r2, [r6, #0]
 8007ba6:	631a      	str	r2, [r3, #48]	; 0x30
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TO);
 8007ba8:	2210      	movs	r2, #16
 8007baa:	60da      	str	r2, [r3, #12]
        __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TO);
 8007bac:	681a      	ldr	r2, [r3, #0]
 8007bae:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8007bb2:	601a      	str	r2, [r3, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED);
 8007bb4:	f04f 6240 	mov.w	r2, #201326592	; 0xc000000
 8007bb8:	4639      	mov	r1, r7
 8007bba:	4620      	mov	r0, r4
 8007bbc:	f7ff fd58 	bl	8007670 <QSPI_Config>
  __HAL_UNLOCK(hqspi);
 8007bc0:	2300      	movs	r3, #0
 8007bc2:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8007bc6:	4628      	mov	r0, r5
 8007bc8:	b003      	add	sp, #12
 8007bca:	bdf0      	pop	{r4, r5, r6, r7, pc}
    status = HAL_BUSY;
 8007bcc:	2502      	movs	r5, #2
 8007bce:	e7f7      	b.n	8007bc0 <HAL_QSPI_MemoryMapped+0x6e>
  __HAL_LOCK(hqspi);
 8007bd0:	2502      	movs	r5, #2
 8007bd2:	e7f8      	b.n	8007bc6 <HAL_QSPI_MemoryMapped+0x74>

08007bd4 <HAL_RCC_OscConfig>:
  *         supported by this function. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8007bd4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  uint32_t tickstart;
  uint32_t temp1_pllckcfg, temp2_pllckcfg;

    /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8007bd6:	4604      	mov	r4, r0
 8007bd8:	b908      	cbnz	r0, 8007bde <HAL_RCC_OscConfig+0xa>
         (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
         ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
         ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
         ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct->PLL.PLLR - 1U)))
      {
        return HAL_ERROR;
 8007bda:	2001      	movs	r0, #1
 8007bdc:	e08b      	b.n	8007cf6 <HAL_RCC_OscConfig+0x122>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8007bde:	6803      	ldr	r3, [r0, #0]
 8007be0:	07df      	lsls	r7, r3, #31
 8007be2:	d45e      	bmi.n	8007ca2 <HAL_RCC_OscConfig+0xce>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8007be4:	6823      	ldr	r3, [r4, #0]
 8007be6:	079e      	lsls	r6, r3, #30
 8007be8:	f100 80af 	bmi.w	8007d4a <HAL_RCC_OscConfig+0x176>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
 8007bec:	6823      	ldr	r3, [r4, #0]
 8007bee:	06da      	lsls	r2, r3, #27
 8007bf0:	d527      	bpl.n	8007c42 <HAL_RCC_OscConfig+0x6e>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8007bf2:	4b9e      	ldr	r3, [pc, #632]	; (8007e6c <HAL_RCC_OscConfig+0x298>)
 8007bf4:	691a      	ldr	r2, [r3, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
 8007bf6:	6a99      	ldr	r1, [r3, #40]	; 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8007bf8:	f002 0238 	and.w	r2, r2, #56	; 0x38
    if((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
 8007bfc:	2a08      	cmp	r2, #8
 8007bfe:	d007      	beq.n	8007c10 <HAL_RCC_OscConfig+0x3c>
 8007c00:	2a18      	cmp	r2, #24
 8007c02:	f040 8107 	bne.w	8007e14 <HAL_RCC_OscConfig+0x240>
 8007c06:	f001 0203 	and.w	r2, r1, #3
 8007c0a:	2a01      	cmp	r2, #1
 8007c0c:	f040 8102 	bne.w	8007e14 <HAL_RCC_OscConfig+0x240>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
 8007c10:	681b      	ldr	r3, [r3, #0]
 8007c12:	05db      	lsls	r3, r3, #23
 8007c14:	d502      	bpl.n	8007c1c <HAL_RCC_OscConfig+0x48>
 8007c16:	69e3      	ldr	r3, [r4, #28]
 8007c18:	2b80      	cmp	r3, #128	; 0x80
 8007c1a:	d1de      	bne.n	8007bda <HAL_RCC_OscConfig+0x6>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
 8007c1c:	f7fd ff06 	bl	8005a2c <HAL_GetREVID>
 8007c20:	f241 0303 	movw	r3, #4099	; 0x1003
 8007c24:	6a21      	ldr	r1, [r4, #32]
 8007c26:	4298      	cmp	r0, r3
 8007c28:	4b90      	ldr	r3, [pc, #576]	; (8007e6c <HAL_RCC_OscConfig+0x298>)
 8007c2a:	f200 80ec 	bhi.w	8007e06 <HAL_RCC_OscConfig+0x232>
 8007c2e:	685a      	ldr	r2, [r3, #4]
 8007c30:	2920      	cmp	r1, #32
 8007c32:	f022 42f8 	bic.w	r2, r2, #2080374784	; 0x7c000000
 8007c36:	bf0c      	ite	eq
 8007c38:	f042 4280 	orreq.w	r2, r2, #1073741824	; 0x40000000
 8007c3c:	ea42 6281 	orrne.w	r2, r2, r1, lsl #26
 8007c40:	605a      	str	r2, [r3, #4]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8007c42:	6823      	ldr	r3, [r4, #0]
 8007c44:	0719      	lsls	r1, r3, #28
 8007c46:	f100 8127 	bmi.w	8007e98 <HAL_RCC_OscConfig+0x2c4>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 8007c4a:	6823      	ldr	r3, [r4, #0]
 8007c4c:	069a      	lsls	r2, r3, #26
 8007c4e:	f100 8148 	bmi.w	8007ee2 <HAL_RCC_OscConfig+0x30e>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8007c52:	6823      	ldr	r3, [r4, #0]
 8007c54:	075d      	lsls	r5, r3, #29
 8007c56:	d51e      	bpl.n	8007c96 <HAL_RCC_OscConfig+0xc2>
    PWR->CR1 |= PWR_CR1_DBP;
 8007c58:	4d85      	ldr	r5, [pc, #532]	; (8007e70 <HAL_RCC_OscConfig+0x29c>)
 8007c5a:	682b      	ldr	r3, [r5, #0]
 8007c5c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8007c60:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 8007c62:	f7fd fecb 	bl	80059fc <HAL_GetTick>
 8007c66:	4606      	mov	r6, r0
    while((PWR->CR1 & PWR_CR1_DBP) == 0U)
 8007c68:	682b      	ldr	r3, [r5, #0]
 8007c6a:	05da      	lsls	r2, r3, #23
 8007c6c:	f140 815e 	bpl.w	8007f2c <HAL_RCC_OscConfig+0x358>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8007c70:	68a3      	ldr	r3, [r4, #8]
 8007c72:	4d7e      	ldr	r5, [pc, #504]	; (8007e6c <HAL_RCC_OscConfig+0x298>)
 8007c74:	2b01      	cmp	r3, #1
 8007c76:	f040 8160 	bne.w	8007f3a <HAL_RCC_OscConfig+0x366>
 8007c7a:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007c7c:	f043 0301 	orr.w	r3, r3, #1
 8007c80:	672b      	str	r3, [r5, #112]	; 0x70
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007c82:	f241 3788 	movw	r7, #5000	; 0x1388
      tickstart = HAL_GetTick();
 8007c86:	f7fd feb9 	bl	80059fc <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8007c8a:	4e78      	ldr	r6, [pc, #480]	; (8007e6c <HAL_RCC_OscConfig+0x298>)
      tickstart = HAL_GetTick();
 8007c8c:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8007c8e:	6f33      	ldr	r3, [r6, #112]	; 0x70
 8007c90:	079b      	lsls	r3, r3, #30
 8007c92:	f140 8178 	bpl.w	8007f86 <HAL_RCC_OscConfig+0x3b2>
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8007c96:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8007c98:	2800      	cmp	r0, #0
 8007c9a:	f040 817b 	bne.w	8007f94 <HAL_RCC_OscConfig+0x3c0>
      }
    }
  }
  return HAL_OK;
 8007c9e:	2000      	movs	r0, #0
 8007ca0:	e029      	b.n	8007cf6 <HAL_RCC_OscConfig+0x122>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8007ca2:	4b72      	ldr	r3, [pc, #456]	; (8007e6c <HAL_RCC_OscConfig+0x298>)
 8007ca4:	691a      	ldr	r2, [r3, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
 8007ca6:	6a99      	ldr	r1, [r3, #40]	; 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8007ca8:	f002 0238 	and.w	r2, r2, #56	; 0x38
    if((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
 8007cac:	2a10      	cmp	r2, #16
 8007cae:	d005      	beq.n	8007cbc <HAL_RCC_OscConfig+0xe8>
 8007cb0:	2a18      	cmp	r2, #24
 8007cb2:	d10a      	bne.n	8007cca <HAL_RCC_OscConfig+0xf6>
 8007cb4:	f001 0203 	and.w	r2, r1, #3
 8007cb8:	2a02      	cmp	r2, #2
 8007cba:	d106      	bne.n	8007cca <HAL_RCC_OscConfig+0xf6>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8007cbc:	681b      	ldr	r3, [r3, #0]
 8007cbe:	039d      	lsls	r5, r3, #14
 8007cc0:	d590      	bpl.n	8007be4 <HAL_RCC_OscConfig+0x10>
 8007cc2:	6863      	ldr	r3, [r4, #4]
 8007cc4:	2b00      	cmp	r3, #0
 8007cc6:	d18d      	bne.n	8007be4 <HAL_RCC_OscConfig+0x10>
 8007cc8:	e787      	b.n	8007bda <HAL_RCC_OscConfig+0x6>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8007cca:	6862      	ldr	r2, [r4, #4]
 8007ccc:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8007cd0:	d112      	bne.n	8007cf8 <HAL_RCC_OscConfig+0x124>
 8007cd2:	681a      	ldr	r2, [r3, #0]
 8007cd4:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8007cd8:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8007cda:	f7fd fe8f 	bl	80059fc <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 8007cde:	4e63      	ldr	r6, [pc, #396]	; (8007e6c <HAL_RCC_OscConfig+0x298>)
        tickstart = HAL_GetTick();
 8007ce0:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 8007ce2:	6833      	ldr	r3, [r6, #0]
 8007ce4:	0398      	lsls	r0, r3, #14
 8007ce6:	f53f af7d 	bmi.w	8007be4 <HAL_RCC_OscConfig+0x10>
          if((uint32_t) (HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8007cea:	f7fd fe87 	bl	80059fc <HAL_GetTick>
 8007cee:	1b40      	subs	r0, r0, r5
 8007cf0:	2864      	cmp	r0, #100	; 0x64
 8007cf2:	d9f6      	bls.n	8007ce2 <HAL_RCC_OscConfig+0x10e>
            return HAL_TIMEOUT;
 8007cf4:	2003      	movs	r0, #3
}
 8007cf6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8007cf8:	4d5c      	ldr	r5, [pc, #368]	; (8007e6c <HAL_RCC_OscConfig+0x298>)
 8007cfa:	682b      	ldr	r3, [r5, #0]
 8007cfc:	b99a      	cbnz	r2, 8007d26 <HAL_RCC_OscConfig+0x152>
 8007cfe:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8007d02:	602b      	str	r3, [r5, #0]
 8007d04:	682b      	ldr	r3, [r5, #0]
 8007d06:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8007d0a:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8007d0c:	f7fd fe76 	bl	80059fc <HAL_GetTick>
 8007d10:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
 8007d12:	682b      	ldr	r3, [r5, #0]
 8007d14:	0399      	lsls	r1, r3, #14
 8007d16:	f57f af65 	bpl.w	8007be4 <HAL_RCC_OscConfig+0x10>
          if((uint32_t) (HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8007d1a:	f7fd fe6f 	bl	80059fc <HAL_GetTick>
 8007d1e:	1b80      	subs	r0, r0, r6
 8007d20:	2864      	cmp	r0, #100	; 0x64
 8007d22:	d9f6      	bls.n	8007d12 <HAL_RCC_OscConfig+0x13e>
 8007d24:	e7e6      	b.n	8007cf4 <HAL_RCC_OscConfig+0x120>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8007d26:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 8007d2a:	d107      	bne.n	8007d3c <HAL_RCC_OscConfig+0x168>
 8007d2c:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8007d30:	602b      	str	r3, [r5, #0]
 8007d32:	682b      	ldr	r3, [r5, #0]
 8007d34:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8007d38:	602b      	str	r3, [r5, #0]
 8007d3a:	e7ce      	b.n	8007cda <HAL_RCC_OscConfig+0x106>
 8007d3c:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8007d40:	602b      	str	r3, [r5, #0]
 8007d42:	682b      	ldr	r3, [r5, #0]
 8007d44:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8007d48:	e7f6      	b.n	8007d38 <HAL_RCC_OscConfig+0x164>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8007d4a:	4b48      	ldr	r3, [pc, #288]	; (8007e6c <HAL_RCC_OscConfig+0x298>)
 8007d4c:	68e1      	ldr	r1, [r4, #12]
 8007d4e:	691a      	ldr	r2, [r3, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
 8007d50:	6a98      	ldr	r0, [r3, #40]	; 0x28
    if((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
 8007d52:	f012 0238 	ands.w	r2, r2, #56	; 0x38
 8007d56:	d003      	beq.n	8007d60 <HAL_RCC_OscConfig+0x18c>
 8007d58:	2a18      	cmp	r2, #24
 8007d5a:	d12b      	bne.n	8007db4 <HAL_RCC_OscConfig+0x1e0>
 8007d5c:	0782      	lsls	r2, r0, #30
 8007d5e:	d129      	bne.n	8007db4 <HAL_RCC_OscConfig+0x1e0>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
 8007d60:	681b      	ldr	r3, [r3, #0]
 8007d62:	075b      	lsls	r3, r3, #29
 8007d64:	d502      	bpl.n	8007d6c <HAL_RCC_OscConfig+0x198>
 8007d66:	2900      	cmp	r1, #0
 8007d68:	f43f af37 	beq.w	8007bda <HAL_RCC_OscConfig+0x6>
          __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
 8007d6c:	4d3f      	ldr	r5, [pc, #252]	; (8007e6c <HAL_RCC_OscConfig+0x298>)
 8007d6e:	682a      	ldr	r2, [r5, #0]
 8007d70:	f022 0219 	bic.w	r2, r2, #25
 8007d74:	430a      	orrs	r2, r1
 8007d76:	602a      	str	r2, [r5, #0]
          tickstart = HAL_GetTick();
 8007d78:	f7fd fe40 	bl	80059fc <HAL_GetTick>
 8007d7c:	4606      	mov	r6, r0
          while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8007d7e:	682b      	ldr	r3, [r5, #0]
 8007d80:	075f      	lsls	r7, r3, #29
 8007d82:	d511      	bpl.n	8007da8 <HAL_RCC_OscConfig+0x1d4>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8007d84:	f7fd fe52 	bl	8005a2c <HAL_GetREVID>
 8007d88:	f241 0303 	movw	r3, #4099	; 0x1003
 8007d8c:	6922      	ldr	r2, [r4, #16]
 8007d8e:	4298      	cmp	r0, r3
 8007d90:	686b      	ldr	r3, [r5, #4]
 8007d92:	d822      	bhi.n	8007dda <HAL_RCC_OscConfig+0x206>
 8007d94:	f423 337c 	bic.w	r3, r3, #258048	; 0x3f000
 8007d98:	2a40      	cmp	r2, #64	; 0x40
 8007d9a:	bf0c      	ite	eq
 8007d9c:	f443 3300 	orreq.w	r3, r3, #131072	; 0x20000
 8007da0:	ea43 3302 	orrne.w	r3, r3, r2, lsl #12
 8007da4:	606b      	str	r3, [r5, #4]
 8007da6:	e721      	b.n	8007bec <HAL_RCC_OscConfig+0x18>
            if((uint32_t) (HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8007da8:	f7fd fe28 	bl	80059fc <HAL_GetTick>
 8007dac:	1b80      	subs	r0, r0, r6
 8007dae:	2802      	cmp	r0, #2
 8007db0:	d9e5      	bls.n	8007d7e <HAL_RCC_OscConfig+0x1aa>
 8007db2:	e79f      	b.n	8007cf4 <HAL_RCC_OscConfig+0x120>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
 8007db4:	681a      	ldr	r2, [r3, #0]
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8007db6:	b1a9      	cbz	r1, 8007de4 <HAL_RCC_OscConfig+0x210>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
 8007db8:	f022 0219 	bic.w	r2, r2, #25
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8007dbc:	4d2b      	ldr	r5, [pc, #172]	; (8007e6c <HAL_RCC_OscConfig+0x298>)
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
 8007dbe:	430a      	orrs	r2, r1
 8007dc0:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8007dc2:	f7fd fe1b 	bl	80059fc <HAL_GetTick>
 8007dc6:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8007dc8:	682b      	ldr	r3, [r5, #0]
 8007dca:	0758      	lsls	r0, r3, #29
 8007dcc:	d4da      	bmi.n	8007d84 <HAL_RCC_OscConfig+0x1b0>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8007dce:	f7fd fe15 	bl	80059fc <HAL_GetTick>
 8007dd2:	1b80      	subs	r0, r0, r6
 8007dd4:	2802      	cmp	r0, #2
 8007dd6:	d9f7      	bls.n	8007dc8 <HAL_RCC_OscConfig+0x1f4>
 8007dd8:	e78c      	b.n	8007cf4 <HAL_RCC_OscConfig+0x120>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8007dda:	f023 43fe 	bic.w	r3, r3, #2130706432	; 0x7f000000
 8007dde:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8007de2:	e7df      	b.n	8007da4 <HAL_RCC_OscConfig+0x1d0>
        __HAL_RCC_HSI_DISABLE();
 8007de4:	f022 0201 	bic.w	r2, r2, #1
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
 8007de8:	4e20      	ldr	r6, [pc, #128]	; (8007e6c <HAL_RCC_OscConfig+0x298>)
        __HAL_RCC_HSI_DISABLE();
 8007dea:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8007dec:	f7fd fe06 	bl	80059fc <HAL_GetTick>
 8007df0:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
 8007df2:	6833      	ldr	r3, [r6, #0]
 8007df4:	0759      	lsls	r1, r3, #29
 8007df6:	f57f aef9 	bpl.w	8007bec <HAL_RCC_OscConfig+0x18>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8007dfa:	f7fd fdff 	bl	80059fc <HAL_GetTick>
 8007dfe:	1b40      	subs	r0, r0, r5
 8007e00:	2802      	cmp	r0, #2
 8007e02:	d9f6      	bls.n	8007df2 <HAL_RCC_OscConfig+0x21e>
 8007e04:	e776      	b.n	8007cf4 <HAL_RCC_OscConfig+0x120>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
 8007e06:	68da      	ldr	r2, [r3, #12]
 8007e08:	f022 527c 	bic.w	r2, r2, #1056964608	; 0x3f000000
 8007e0c:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
 8007e10:	60da      	str	r2, [r3, #12]
 8007e12:	e716      	b.n	8007c42 <HAL_RCC_OscConfig+0x6e>
      if((RCC_OscInitStruct->CSIState)!= RCC_CSI_OFF)
 8007e14:	69e2      	ldr	r2, [r4, #28]
 8007e16:	b36a      	cbz	r2, 8007e74 <HAL_RCC_OscConfig+0x2a0>
        __HAL_RCC_CSI_ENABLE();
 8007e18:	681a      	ldr	r2, [r3, #0]
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
 8007e1a:	4d14      	ldr	r5, [pc, #80]	; (8007e6c <HAL_RCC_OscConfig+0x298>)
        __HAL_RCC_CSI_ENABLE();
 8007e1c:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8007e20:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8007e22:	f7fd fdeb 	bl	80059fc <HAL_GetTick>
 8007e26:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
 8007e28:	682b      	ldr	r3, [r5, #0]
 8007e2a:	05df      	lsls	r7, r3, #23
 8007e2c:	d511      	bpl.n	8007e52 <HAL_RCC_OscConfig+0x27e>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
 8007e2e:	f7fd fdfd 	bl	8005a2c <HAL_GetREVID>
 8007e32:	f241 0303 	movw	r3, #4099	; 0x1003
 8007e36:	6a22      	ldr	r2, [r4, #32]
 8007e38:	4298      	cmp	r0, r3
 8007e3a:	d810      	bhi.n	8007e5e <HAL_RCC_OscConfig+0x28a>
 8007e3c:	686b      	ldr	r3, [r5, #4]
 8007e3e:	2a20      	cmp	r2, #32
 8007e40:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
 8007e44:	bf0c      	ite	eq
 8007e46:	f043 4380 	orreq.w	r3, r3, #1073741824	; 0x40000000
 8007e4a:	ea43 6382 	orrne.w	r3, r3, r2, lsl #26
 8007e4e:	606b      	str	r3, [r5, #4]
 8007e50:	e6f7      	b.n	8007c42 <HAL_RCC_OscConfig+0x6e>
          if((HAL_GetTick() - tickstart ) > CSI_TIMEOUT_VALUE)
 8007e52:	f7fd fdd3 	bl	80059fc <HAL_GetTick>
 8007e56:	1b80      	subs	r0, r0, r6
 8007e58:	2802      	cmp	r0, #2
 8007e5a:	d9e5      	bls.n	8007e28 <HAL_RCC_OscConfig+0x254>
 8007e5c:	e74a      	b.n	8007cf4 <HAL_RCC_OscConfig+0x120>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
 8007e5e:	68eb      	ldr	r3, [r5, #12]
 8007e60:	f023 537c 	bic.w	r3, r3, #1056964608	; 0x3f000000
 8007e64:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8007e68:	60eb      	str	r3, [r5, #12]
 8007e6a:	e6ea      	b.n	8007c42 <HAL_RCC_OscConfig+0x6e>
 8007e6c:	58024400 	.word	0x58024400
 8007e70:	58024800 	.word	0x58024800
        __HAL_RCC_CSI_DISABLE();
 8007e74:	681a      	ldr	r2, [r3, #0]
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
 8007e76:	4e9f      	ldr	r6, [pc, #636]	; (80080f4 <HAL_RCC_OscConfig+0x520>)
        __HAL_RCC_CSI_DISABLE();
 8007e78:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8007e7c:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8007e7e:	f7fd fdbd 	bl	80059fc <HAL_GetTick>
 8007e82:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
 8007e84:	6833      	ldr	r3, [r6, #0]
 8007e86:	05d8      	lsls	r0, r3, #23
 8007e88:	f57f aedb 	bpl.w	8007c42 <HAL_RCC_OscConfig+0x6e>
          if((HAL_GetTick() - tickstart ) > CSI_TIMEOUT_VALUE)
 8007e8c:	f7fd fdb6 	bl	80059fc <HAL_GetTick>
 8007e90:	1b40      	subs	r0, r0, r5
 8007e92:	2802      	cmp	r0, #2
 8007e94:	d9f6      	bls.n	8007e84 <HAL_RCC_OscConfig+0x2b0>
 8007e96:	e72d      	b.n	8007cf4 <HAL_RCC_OscConfig+0x120>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 8007e98:	6963      	ldr	r3, [r4, #20]
 8007e9a:	4d96      	ldr	r5, [pc, #600]	; (80080f4 <HAL_RCC_OscConfig+0x520>)
 8007e9c:	b183      	cbz	r3, 8007ec0 <HAL_RCC_OscConfig+0x2ec>
      __HAL_RCC_LSI_ENABLE();
 8007e9e:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8007ea0:	f043 0301 	orr.w	r3, r3, #1
 8007ea4:	676b      	str	r3, [r5, #116]	; 0x74
      tickstart = HAL_GetTick();
 8007ea6:	f7fd fda9 	bl	80059fc <HAL_GetTick>
 8007eaa:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
 8007eac:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8007eae:	079b      	lsls	r3, r3, #30
 8007eb0:	f53f aecb 	bmi.w	8007c4a <HAL_RCC_OscConfig+0x76>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8007eb4:	f7fd fda2 	bl	80059fc <HAL_GetTick>
 8007eb8:	1b80      	subs	r0, r0, r6
 8007eba:	2802      	cmp	r0, #2
 8007ebc:	d9f6      	bls.n	8007eac <HAL_RCC_OscConfig+0x2d8>
 8007ebe:	e719      	b.n	8007cf4 <HAL_RCC_OscConfig+0x120>
      __HAL_RCC_LSI_DISABLE();
 8007ec0:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8007ec2:	f023 0301 	bic.w	r3, r3, #1
 8007ec6:	676b      	str	r3, [r5, #116]	; 0x74
      tickstart = HAL_GetTick();
 8007ec8:	f7fd fd98 	bl	80059fc <HAL_GetTick>
 8007ecc:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
 8007ece:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8007ed0:	079f      	lsls	r7, r3, #30
 8007ed2:	f57f aeba 	bpl.w	8007c4a <HAL_RCC_OscConfig+0x76>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8007ed6:	f7fd fd91 	bl	80059fc <HAL_GetTick>
 8007eda:	1b80      	subs	r0, r0, r6
 8007edc:	2802      	cmp	r0, #2
 8007ede:	d9f6      	bls.n	8007ece <HAL_RCC_OscConfig+0x2fa>
 8007ee0:	e708      	b.n	8007cf4 <HAL_RCC_OscConfig+0x120>
    if((RCC_OscInitStruct->HSI48State)!= RCC_HSI48_OFF)
 8007ee2:	69a3      	ldr	r3, [r4, #24]
 8007ee4:	4d83      	ldr	r5, [pc, #524]	; (80080f4 <HAL_RCC_OscConfig+0x520>)
 8007ee6:	b183      	cbz	r3, 8007f0a <HAL_RCC_OscConfig+0x336>
      __HAL_RCC_HSI48_ENABLE();
 8007ee8:	682b      	ldr	r3, [r5, #0]
 8007eea:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8007eee:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8007ef0:	f7fd fd84 	bl	80059fc <HAL_GetTick>
 8007ef4:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
 8007ef6:	682b      	ldr	r3, [r5, #0]
 8007ef8:	0498      	lsls	r0, r3, #18
 8007efa:	f53f aeaa 	bmi.w	8007c52 <HAL_RCC_OscConfig+0x7e>
        if((HAL_GetTick() - tickstart ) > HSI48_TIMEOUT_VALUE)
 8007efe:	f7fd fd7d 	bl	80059fc <HAL_GetTick>
 8007f02:	1b80      	subs	r0, r0, r6
 8007f04:	2802      	cmp	r0, #2
 8007f06:	d9f6      	bls.n	8007ef6 <HAL_RCC_OscConfig+0x322>
 8007f08:	e6f4      	b.n	8007cf4 <HAL_RCC_OscConfig+0x120>
      __HAL_RCC_HSI48_DISABLE();
 8007f0a:	682b      	ldr	r3, [r5, #0]
 8007f0c:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8007f10:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8007f12:	f7fd fd73 	bl	80059fc <HAL_GetTick>
 8007f16:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
 8007f18:	682b      	ldr	r3, [r5, #0]
 8007f1a:	0499      	lsls	r1, r3, #18
 8007f1c:	f57f ae99 	bpl.w	8007c52 <HAL_RCC_OscConfig+0x7e>
        if((HAL_GetTick() - tickstart ) > HSI48_TIMEOUT_VALUE)
 8007f20:	f7fd fd6c 	bl	80059fc <HAL_GetTick>
 8007f24:	1b80      	subs	r0, r0, r6
 8007f26:	2802      	cmp	r0, #2
 8007f28:	d9f6      	bls.n	8007f18 <HAL_RCC_OscConfig+0x344>
 8007f2a:	e6e3      	b.n	8007cf4 <HAL_RCC_OscConfig+0x120>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 8007f2c:	f7fd fd66 	bl	80059fc <HAL_GetTick>
 8007f30:	1b80      	subs	r0, r0, r6
 8007f32:	2864      	cmp	r0, #100	; 0x64
 8007f34:	f67f ae98 	bls.w	8007c68 <HAL_RCC_OscConfig+0x94>
 8007f38:	e6dc      	b.n	8007cf4 <HAL_RCC_OscConfig+0x120>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8007f3a:	b9b3      	cbnz	r3, 8007f6a <HAL_RCC_OscConfig+0x396>
 8007f3c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007f3e:	f241 3788 	movw	r7, #5000	; 0x1388
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8007f42:	f023 0301 	bic.w	r3, r3, #1
 8007f46:	672b      	str	r3, [r5, #112]	; 0x70
 8007f48:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007f4a:	f023 0304 	bic.w	r3, r3, #4
 8007f4e:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 8007f50:	f7fd fd54 	bl	80059fc <HAL_GetTick>
 8007f54:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
 8007f56:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007f58:	0798      	lsls	r0, r3, #30
 8007f5a:	f57f ae9c 	bpl.w	8007c96 <HAL_RCC_OscConfig+0xc2>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007f5e:	f7fd fd4d 	bl	80059fc <HAL_GetTick>
 8007f62:	1b80      	subs	r0, r0, r6
 8007f64:	42b8      	cmp	r0, r7
 8007f66:	d9f6      	bls.n	8007f56 <HAL_RCC_OscConfig+0x382>
 8007f68:	e6c4      	b.n	8007cf4 <HAL_RCC_OscConfig+0x120>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8007f6a:	2b05      	cmp	r3, #5
 8007f6c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007f6e:	d103      	bne.n	8007f78 <HAL_RCC_OscConfig+0x3a4>
 8007f70:	f043 0304 	orr.w	r3, r3, #4
 8007f74:	672b      	str	r3, [r5, #112]	; 0x70
 8007f76:	e680      	b.n	8007c7a <HAL_RCC_OscConfig+0xa6>
 8007f78:	f023 0301 	bic.w	r3, r3, #1
 8007f7c:	672b      	str	r3, [r5, #112]	; 0x70
 8007f7e:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007f80:	f023 0304 	bic.w	r3, r3, #4
 8007f84:	e67c      	b.n	8007c80 <HAL_RCC_OscConfig+0xac>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007f86:	f7fd fd39 	bl	80059fc <HAL_GetTick>
 8007f8a:	1b40      	subs	r0, r0, r5
 8007f8c:	42b8      	cmp	r0, r7
 8007f8e:	f67f ae7e 	bls.w	8007c8e <HAL_RCC_OscConfig+0xba>
 8007f92:	e6af      	b.n	8007cf4 <HAL_RCC_OscConfig+0x120>
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL1)
 8007f94:	4d57      	ldr	r5, [pc, #348]	; (80080f4 <HAL_RCC_OscConfig+0x520>)
 8007f96:	692b      	ldr	r3, [r5, #16]
 8007f98:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8007f9c:	2b18      	cmp	r3, #24
 8007f9e:	d07a      	beq.n	8008096 <HAL_RCC_OscConfig+0x4c2>
        __HAL_RCC_PLL_DISABLE();
 8007fa0:	682b      	ldr	r3, [r5, #0]
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8007fa2:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 8007fa4:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8007fa8:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8007faa:	d167      	bne.n	800807c <HAL_RCC_OscConfig+0x4a8>
        tickstart = HAL_GetTick();
 8007fac:	f7fd fd26 	bl	80059fc <HAL_GetTick>
 8007fb0:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
 8007fb2:	682b      	ldr	r3, [r5, #0]
 8007fb4:	0199      	lsls	r1, r3, #6
 8007fb6:	d45b      	bmi.n	8008070 <HAL_RCC_OscConfig+0x49c>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8007fb8:	6aab      	ldr	r3, [r5, #40]	; 0x28
 8007fba:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8007fbc:	f423 737c 	bic.w	r3, r3, #1008	; 0x3f0
 8007fc0:	f023 0303 	bic.w	r3, r3, #3
 8007fc4:	4313      	orrs	r3, r2
 8007fc6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8007fc8:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
 8007fcc:	62ab      	str	r3, [r5, #40]	; 0x28
 8007fce:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007fd0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8007fd2:	3b01      	subs	r3, #1
 8007fd4:	3a01      	subs	r2, #1
 8007fd6:	025b      	lsls	r3, r3, #9
 8007fd8:	0412      	lsls	r2, r2, #16
 8007fda:	b29b      	uxth	r3, r3
 8007fdc:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
 8007fe0:	4313      	orrs	r3, r2
 8007fe2:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8007fe4:	3a01      	subs	r2, #1
 8007fe6:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8007fea:	4313      	orrs	r3, r2
 8007fec:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8007fee:	3a01      	subs	r2, #1
 8007ff0:	0612      	lsls	r2, r2, #24
 8007ff2:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
 8007ff6:	4313      	orrs	r3, r2
 8007ff8:	632b      	str	r3, [r5, #48]	; 0x30
         __HAL_RCC_PLLFRACN_DISABLE();
 8007ffa:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8007ffc:	f023 0301 	bic.w	r3, r3, #1
 8008000:	62eb      	str	r3, [r5, #44]	; 0x2c
         __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
 8008002:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8008004:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8008006:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800800a:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800800e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8008012:	636b      	str	r3, [r5, #52]	; 0x34
        __HAL_RCC_PLL_VCIRANGE(RCC_OscInitStruct->PLL.PLLRGE) ;
 8008014:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8008016:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8008018:	f023 030c 	bic.w	r3, r3, #12
 800801c:	4313      	orrs	r3, r2
 800801e:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLL_VCORANGE(RCC_OscInitStruct->PLL.PLLVCOSEL) ;
 8008020:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8008022:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8008024:	f023 0302 	bic.w	r3, r3, #2
 8008028:	4313      	orrs	r3, r2
 800802a:	62eb      	str	r3, [r5, #44]	; 0x2c
         __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 800802c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800802e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8008032:	62eb      	str	r3, [r5, #44]	; 0x2c
         __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8008034:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8008036:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800803a:	62eb      	str	r3, [r5, #44]	; 0x2c
         __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
 800803c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800803e:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8008042:	62eb      	str	r3, [r5, #44]	; 0x2c
         __HAL_RCC_PLLFRACN_ENABLE();
 8008044:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8008046:	f043 0301 	orr.w	r3, r3, #1
 800804a:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLL_ENABLE();
 800804c:	682b      	ldr	r3, [r5, #0]
 800804e:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8008052:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8008054:	f7fd fcd2 	bl	80059fc <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 8008058:	4d26      	ldr	r5, [pc, #152]	; (80080f4 <HAL_RCC_OscConfig+0x520>)
        tickstart = HAL_GetTick();
 800805a:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 800805c:	682b      	ldr	r3, [r5, #0]
 800805e:	019a      	lsls	r2, r3, #6
 8008060:	f53f ae1d 	bmi.w	8007c9e <HAL_RCC_OscConfig+0xca>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8008064:	f7fd fcca 	bl	80059fc <HAL_GetTick>
 8008068:	1b00      	subs	r0, r0, r4
 800806a:	2802      	cmp	r0, #2
 800806c:	d9f6      	bls.n	800805c <HAL_RCC_OscConfig+0x488>
 800806e:	e641      	b.n	8007cf4 <HAL_RCC_OscConfig+0x120>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8008070:	f7fd fcc4 	bl	80059fc <HAL_GetTick>
 8008074:	1b80      	subs	r0, r0, r6
 8008076:	2802      	cmp	r0, #2
 8008078:	d99b      	bls.n	8007fb2 <HAL_RCC_OscConfig+0x3de>
 800807a:	e63b      	b.n	8007cf4 <HAL_RCC_OscConfig+0x120>
        tickstart = HAL_GetTick();
 800807c:	f7fd fcbe 	bl	80059fc <HAL_GetTick>
 8008080:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
 8008082:	682b      	ldr	r3, [r5, #0]
 8008084:	019b      	lsls	r3, r3, #6
 8008086:	f57f ae0a 	bpl.w	8007c9e <HAL_RCC_OscConfig+0xca>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800808a:	f7fd fcb7 	bl	80059fc <HAL_GetTick>
 800808e:	1b00      	subs	r0, r0, r4
 8008090:	2802      	cmp	r0, #2
 8008092:	d9f6      	bls.n	8008082 <HAL_RCC_OscConfig+0x4ae>
 8008094:	e62e      	b.n	8007cf4 <HAL_RCC_OscConfig+0x120>
      if(((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8008096:	2801      	cmp	r0, #1
      temp1_pllckcfg = RCC->PLLCKSELR;
 8008098:	6aaa      	ldr	r2, [r5, #40]	; 0x28
      temp2_pllckcfg = RCC->PLL1DIVR;
 800809a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
      if(((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800809c:	f43f ae2b 	beq.w	8007cf6 <HAL_RCC_OscConfig+0x122>
	 (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80080a0:	f002 0103 	and.w	r1, r2, #3
      if(((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 80080a4:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80080a6:	4281      	cmp	r1, r0
 80080a8:	f47f ad97 	bne.w	8007bda <HAL_RCC_OscConfig+0x6>
         ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
 80080ac:	f3c2 1205 	ubfx	r2, r2, #4, #6
	 (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80080b0:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80080b2:	428a      	cmp	r2, r1
 80080b4:	f47f ad91 	bne.w	8007bda <HAL_RCC_OscConfig+0x6>
         (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
 80080b8:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80080ba:	f3c3 0108 	ubfx	r1, r3, #0, #9
 80080be:	3a01      	subs	r2, #1
         ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
 80080c0:	4291      	cmp	r1, r2
 80080c2:	f47f ad8a 	bne.w	8007bda <HAL_RCC_OscConfig+0x6>
         ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
 80080c6:	6b62      	ldr	r2, [r4, #52]	; 0x34
 80080c8:	f3c3 2146 	ubfx	r1, r3, #9, #7
 80080cc:	3a01      	subs	r2, #1
         (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
 80080ce:	4291      	cmp	r1, r2
 80080d0:	f47f ad83 	bne.w	8007bda <HAL_RCC_OscConfig+0x6>
         ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
 80080d4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80080d6:	f3c3 4106 	ubfx	r1, r3, #16, #7
 80080da:	3a01      	subs	r2, #1
         ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
 80080dc:	4291      	cmp	r1, r2
 80080de:	f47f ad7c 	bne.w	8007bda <HAL_RCC_OscConfig+0x6>
         ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct->PLL.PLLR - 1U)))
 80080e2:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 80080e4:	f3c3 6306 	ubfx	r3, r3, #24, #7
 80080e8:	3801      	subs	r0, #1
  return HAL_OK;
 80080ea:	1a18      	subs	r0, r3, r0
 80080ec:	bf18      	it	ne
 80080ee:	2001      	movne	r0, #1
 80080f0:	e601      	b.n	8007cf6 <HAL_RCC_OscConfig+0x122>
 80080f2:	bf00      	nop
 80080f4:	58024400 	.word	0x58024400

080080f8 <HAL_RCC_MCOConfig>:
  *          This parameter can be one of the following values:
  *            @arg RCC_MCODIV_1 up to RCC_MCODIV_15  : divider applied to MCOx clock
  * @retval None
  */
void HAL_RCC_MCOConfig(uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
{
 80080f8:	b570      	push	{r4, r5, r6, lr}
 80080fa:	4c23      	ldr	r4, [pc, #140]	; (8008188 <HAL_RCC_MCOConfig+0x90>)
 80080fc:	b088      	sub	sp, #32
 80080fe:	460e      	mov	r6, r1
 8008100:	4615      	mov	r5, r2
  if(RCC_MCOx == RCC_MCO1)
  {
    assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));

    /* MCO1 Clock Enable */
    MCO1_CLK_ENABLE();
 8008102:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
  if(RCC_MCOx == RCC_MCO1)
 8008106:	b9f8      	cbnz	r0, 8008148 <HAL_RCC_MCOConfig+0x50>
    MCO1_CLK_ENABLE();
 8008108:	f043 0301 	orr.w	r3, r3, #1

    /* Configure the MCO1 pin in alternate function mode */
    GPIO_InitStruct.Pin = MCO1_PIN;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800810c:	f44f 7c80 	mov.w	ip, #256	; 0x100
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
    HAL_GPIO_Init(MCO1_GPIO_PORT, &GPIO_InitStruct);
 8008110:	a903      	add	r1, sp, #12
    MCO1_CLK_ENABLE();
 8008112:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
 8008116:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
    GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 800811a:	9007      	str	r0, [sp, #28]
    MCO1_CLK_ENABLE();
 800811c:	f003 0301 	and.w	r3, r3, #1
 8008120:	9301      	str	r3, [sp, #4]
 8008122:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8008124:	2302      	movs	r3, #2
 8008126:	e9cd c303 	strd	ip, r3, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800812a:	2303      	movs	r3, #3
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800812c:	e9cd 0305 	strd	r0, r3, [sp, #20]
    HAL_GPIO_Init(MCO1_GPIO_PORT, &GPIO_InitStruct);
 8008130:	4816      	ldr	r0, [pc, #88]	; (800818c <HAL_RCC_MCOConfig+0x94>)
 8008132:	f7fe faa7 	bl	8006684 <HAL_GPIO_Init>

    /* Mask MCO1 and MCO1PRE[3:0] bits then Select MCO1 clock source and pre-scaler */
    MODIFY_REG(RCC->CFGR, (RCC_CFGR_MCO1 | RCC_CFGR_MCO1PRE), (RCC_MCOSource | RCC_MCODiv));
 8008136:	6923      	ldr	r3, [r4, #16]
 8008138:	f023 73fe 	bic.w	r3, r3, #33292288	; 0x1fc0000
 800813c:	ea43 0106 	orr.w	r1, r3, r6
 8008140:	4329      	orrs	r1, r5
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
    HAL_GPIO_Init(MCO2_GPIO_PORT, &GPIO_InitStruct);

    /* Mask MCO2 and MCO2PRE[3:0] bits then Select MCO2 clock source and pre-scaler */
    MODIFY_REG(RCC->CFGR, (RCC_CFGR_MCO2 | RCC_CFGR_MCO2PRE), (RCC_MCOSource | (RCC_MCODiv << 7U)));
 8008142:	6121      	str	r1, [r4, #16]
  }
}
 8008144:	b008      	add	sp, #32
 8008146:	bd70      	pop	{r4, r5, r6, pc}
    MCO2_CLK_ENABLE();
 8008148:	f043 0304 	orr.w	r3, r3, #4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800814c:	f44f 7200 	mov.w	r2, #512	; 0x200
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8008150:	2103      	movs	r1, #3
    HAL_GPIO_Init(MCO2_GPIO_PORT, &GPIO_InitStruct);
 8008152:	480f      	ldr	r0, [pc, #60]	; (8008190 <HAL_RCC_MCOConfig+0x98>)
    MCO2_CLK_ENABLE();
 8008154:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
 8008158:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
 800815c:	f003 0304 	and.w	r3, r3, #4
 8008160:	9302      	str	r3, [sp, #8]
 8008162:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8008164:	2302      	movs	r3, #2
 8008166:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800816a:	2300      	movs	r3, #0
 800816c:	e9cd 3105 	strd	r3, r1, [sp, #20]
    HAL_GPIO_Init(MCO2_GPIO_PORT, &GPIO_InitStruct);
 8008170:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 8008172:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(MCO2_GPIO_PORT, &GPIO_InitStruct);
 8008174:	f7fe fa86 	bl	8006684 <HAL_GPIO_Init>
    MODIFY_REG(RCC->CFGR, (RCC_CFGR_MCO2 | RCC_CFGR_MCO2PRE), (RCC_MCOSource | (RCC_MCODiv << 7U)));
 8008178:	6923      	ldr	r3, [r4, #16]
 800817a:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
 800817e:	ea43 0106 	orr.w	r1, r3, r6
 8008182:	ea41 11c5 	orr.w	r1, r1, r5, lsl #7
 8008186:	e7dc      	b.n	8008142 <HAL_RCC_MCOConfig+0x4a>
 8008188:	58024400 	.word	0x58024400
 800818c:	58020000 	.word	0x58020000
 8008190:	58020800 	.word	0x58020800

08008194 <HAL_RCC_GetSysClockFreq>:
  float_t fracn1, pllvco;
  uint32_t sysclockfreq;

  /* Get SYSCLK source -------------------------------------------------------*/

  switch (RCC->CFGR & RCC_CFGR_SWS)
 8008194:	4b48      	ldr	r3, [pc, #288]	; (80082b8 <HAL_RCC_GetSysClockFreq+0x124>)
 8008196:	691a      	ldr	r2, [r3, #16]
 8008198:	f002 0238 	and.w	r2, r2, #56	; 0x38
 800819c:	2a10      	cmp	r2, #16
{
 800819e:	b530      	push	{r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80081a0:	f000 8086 	beq.w	80082b0 <HAL_RCC_GetSysClockFreq+0x11c>
 80081a4:	2a18      	cmp	r2, #24
 80081a6:	d00c      	beq.n	80081c2 <HAL_RCC_GetSysClockFreq+0x2e>
 80081a8:	2a00      	cmp	r2, #0
 80081aa:	f040 8083 	bne.w	80082b4 <HAL_RCC_GetSysClockFreq+0x120>
  {
  case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */

   if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 80081ae:	681a      	ldr	r2, [r3, #0]
 80081b0:	4842      	ldr	r0, [pc, #264]	; (80082bc <HAL_RCC_GetSysClockFreq+0x128>)
 80081b2:	f012 0f20 	tst.w	r2, #32
 80081b6:	d003      	beq.n	80081c0 <HAL_RCC_GetSysClockFreq+0x2c>
      {
        sysclockfreq = (uint32_t) (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER()>> 3));
 80081b8:	681b      	ldr	r3, [r3, #0]
 80081ba:	f3c3 03c1 	ubfx	r3, r3, #3, #2
 80081be:	40d8      	lsrs	r0, r3
    sysclockfreq = CSI_VALUE;
    break;
  }

  return sysclockfreq;
}
 80081c0:	bd30      	pop	{r4, r5, pc}
    pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 80081c2:	6a99      	ldr	r1, [r3, #40]	; 0x28
    pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> 4)  ;
 80081c4:	6a9d      	ldr	r5, [r3, #40]	; 0x28
    pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN)>>RCC_PLLCFGR_PLL1FRACEN_Pos);
 80081c6:	6adc      	ldr	r4, [r3, #44]	; 0x2c
    if (pllm != 0U)
 80081c8:	f415 7f7c 	tst.w	r5, #1008	; 0x3f0
    pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> 4)  ;
 80081cc:	f3c5 1005 	ubfx	r0, r5, #4, #6
    fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
 80081d0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    if (pllm != 0U)
 80081d2:	d0f5      	beq.n	80081c0 <HAL_RCC_GetSysClockFreq+0x2c>
    fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
 80081d4:	f3c2 02cc 	ubfx	r2, r2, #3, #13
    pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN)>>RCC_PLLCFGR_PLL1FRACEN_Pos);
 80081d8:	f004 0401 	and.w	r4, r4, #1
          pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
 80081dc:	ee07 0a90 	vmov	s15, r0
    pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 80081e0:	f001 0103 	and.w	r1, r1, #3
    fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
 80081e4:	4362      	muls	r2, r4
 80081e6:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
          pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
 80081ea:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 80081ee:	2901      	cmp	r1, #1
    fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
 80081f0:	ee07 2a90 	vmov	s15, r2
          pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
 80081f4:	eefa 7ae9 	vcvt.f32.s32	s15, s15, #13
 80081f8:	d04c      	beq.n	8008294 <HAL_RCC_GetSysClockFreq+0x100>
 80081fa:	2902      	cmp	r1, #2
 80081fc:	d03c      	beq.n	8008278 <HAL_RCC_GetSysClockFreq+0xe4>
 80081fe:	2900      	cmp	r1, #0
 8008200:	d148      	bne.n	8008294 <HAL_RCC_GetSysClockFreq+0x100>
       if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 8008202:	681a      	ldr	r2, [r3, #0]
 8008204:	0692      	lsls	r2, r2, #26
 8008206:	d527      	bpl.n	8008258 <HAL_RCC_GetSysClockFreq+0xc4>
          hsivalue= (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER()>> 3));
 8008208:	6819      	ldr	r1, [r3, #0]
 800820a:	4a2c      	ldr	r2, [pc, #176]	; (80082bc <HAL_RCC_GetSysClockFreq+0x128>)
 800820c:	f3c1 01c1 	ubfx	r1, r1, #3, #2
          pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
 8008210:	6b1b      	ldr	r3, [r3, #48]	; 0x30
          hsivalue= (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER()>> 3));
 8008212:	40ca      	lsrs	r2, r1
          pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
 8008214:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8008218:	ee07 2a10 	vmov	s14, r2
 800821c:	eef8 5ac7 	vcvt.f32.s32	s11, s14
 8008220:	ee85 7aa6 	vdiv.f32	s14, s11, s13
 8008224:	ee06 3a90 	vmov	s13, r3
 8008228:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800822c:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8008230:	ee77 7a86 	vadd.f32	s15, s15, s12
      pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >>9) + 1U ) ;
 8008234:	4b20      	ldr	r3, [pc, #128]	; (80082b8 <HAL_RCC_GetSysClockFreq+0x124>)
        pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
 8008236:	ee67 7a87 	vmul.f32	s15, s15, s14
      pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >>9) + 1U ) ;
 800823a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800823c:	f3c3 2346 	ubfx	r3, r3, #9, #7
 8008240:	3301      	adds	r3, #1
      sysclockfreq =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
 8008242:	ee07 3a10 	vmov	s14, r3
 8008246:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800824a:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800824e:	eefc 7ac7 	vcvt.u32.f32	s15, s14
 8008252:	ee17 0a90 	vmov	r0, s15
 8008256:	e7b3      	b.n	80081c0 <HAL_RCC_GetSysClockFreq+0x2c>
          pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
 8008258:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800825a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800825e:	ee07 3a10 	vmov	s14, r3
 8008262:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8008266:	ee77 7a27 	vadd.f32	s15, s14, s15
 800826a:	ee77 7a86 	vadd.f32	s15, s15, s12
 800826e:	ed9f 6a14 	vldr	s12, [pc, #80]	; 80082c0 <HAL_RCC_GetSysClockFreq+0x12c>
        pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
 8008272:	ee86 7a26 	vdiv.f32	s14, s12, s13
 8008276:	e7dd      	b.n	8008234 <HAL_RCC_GetSysClockFreq+0xa0>
        pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
 8008278:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800827a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800827e:	ee07 3a10 	vmov	s14, r3
 8008282:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8008286:	ee77 7a27 	vadd.f32	s15, s14, s15
 800828a:	ee77 7a86 	vadd.f32	s15, s15, s12
 800828e:	ed9f 6a0d 	vldr	s12, [pc, #52]	; 80082c4 <HAL_RCC_GetSysClockFreq+0x130>
 8008292:	e7ee      	b.n	8008272 <HAL_RCC_GetSysClockFreq+0xde>
        pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
 8008294:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008296:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800829a:	ee07 3a10 	vmov	s14, r3
 800829e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80082a2:	ee77 7a27 	vadd.f32	s15, s14, s15
 80082a6:	ee77 7a86 	vadd.f32	s15, s15, s12
 80082aa:	ed9f 6a07 	vldr	s12, [pc, #28]	; 80082c8 <HAL_RCC_GetSysClockFreq+0x134>
 80082ae:	e7e0      	b.n	8008272 <HAL_RCC_GetSysClockFreq+0xde>
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80082b0:	4806      	ldr	r0, [pc, #24]	; (80082cc <HAL_RCC_GetSysClockFreq+0x138>)
 80082b2:	e785      	b.n	80081c0 <HAL_RCC_GetSysClockFreq+0x2c>
    sysclockfreq = CSI_VALUE;
 80082b4:	4806      	ldr	r0, [pc, #24]	; (80082d0 <HAL_RCC_GetSysClockFreq+0x13c>)
 80082b6:	e783      	b.n	80081c0 <HAL_RCC_GetSysClockFreq+0x2c>
 80082b8:	58024400 	.word	0x58024400
 80082bc:	03d09000 	.word	0x03d09000
 80082c0:	4c742400 	.word	0x4c742400
 80082c4:	4bbebc20 	.word	0x4bbebc20
 80082c8:	4a742400 	.word	0x4a742400
 80082cc:	017d7840 	.word	0x017d7840
 80082d0:	003d0900 	.word	0x003d0900

080082d4 <HAL_RCC_ClockConfig>:
{
 80082d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80082d8:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 80082da:	4604      	mov	r4, r0
 80082dc:	b910      	cbnz	r0, 80082e4 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 80082de:	2001      	movs	r0, #1
}
 80082e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 80082e4:	4a88      	ldr	r2, [pc, #544]	; (8008508 <HAL_RCC_ClockConfig+0x234>)
 80082e6:	6813      	ldr	r3, [r2, #0]
 80082e8:	f003 030f 	and.w	r3, r3, #15
 80082ec:	428b      	cmp	r3, r1
 80082ee:	f0c0 8093 	bcc.w	8008418 <HAL_RCC_ClockConfig+0x144>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
 80082f2:	6823      	ldr	r3, [r4, #0]
 80082f4:	075f      	lsls	r7, r3, #29
 80082f6:	f100 809b 	bmi.w	8008430 <HAL_RCC_ClockConfig+0x15c>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80082fa:	071e      	lsls	r6, r3, #28
 80082fc:	d50b      	bpl.n	8008316 <HAL_RCC_ClockConfig+0x42>
    if((RCC_ClkInitStruct->APB1CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
 80082fe:	4983      	ldr	r1, [pc, #524]	; (800850c <HAL_RCC_ClockConfig+0x238>)
 8008300:	6966      	ldr	r6, [r4, #20]
 8008302:	69c8      	ldr	r0, [r1, #28]
 8008304:	f000 0070 	and.w	r0, r0, #112	; 0x70
 8008308:	4286      	cmp	r6, r0
 800830a:	d904      	bls.n	8008316 <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
 800830c:	69ca      	ldr	r2, [r1, #28]
 800830e:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8008312:	4332      	orrs	r2, r6
 8008314:	61ca      	str	r2, [r1, #28]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8008316:	06d8      	lsls	r0, r3, #27
 8008318:	d50b      	bpl.n	8008332 <HAL_RCC_ClockConfig+0x5e>
    if((RCC_ClkInitStruct->APB2CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
 800831a:	497c      	ldr	r1, [pc, #496]	; (800850c <HAL_RCC_ClockConfig+0x238>)
 800831c:	69a6      	ldr	r6, [r4, #24]
 800831e:	69c8      	ldr	r0, [r1, #28]
 8008320:	f400 60e0 	and.w	r0, r0, #1792	; 0x700
 8008324:	4286      	cmp	r6, r0
 8008326:	d904      	bls.n	8008332 <HAL_RCC_ClockConfig+0x5e>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
 8008328:	69ca      	ldr	r2, [r1, #28]
 800832a:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800832e:	4332      	orrs	r2, r6
 8008330:	61ca      	str	r2, [r1, #28]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
 8008332:	0699      	lsls	r1, r3, #26
 8008334:	d50b      	bpl.n	800834e <HAL_RCC_ClockConfig+0x7a>
    if((RCC_ClkInitStruct->APB4CLKDivider) > (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
 8008336:	4975      	ldr	r1, [pc, #468]	; (800850c <HAL_RCC_ClockConfig+0x238>)
 8008338:	69e6      	ldr	r6, [r4, #28]
 800833a:	6a08      	ldr	r0, [r1, #32]
 800833c:	f000 0070 	and.w	r0, r0, #112	; 0x70
 8008340:	4286      	cmp	r6, r0
 8008342:	d904      	bls.n	800834e <HAL_RCC_ClockConfig+0x7a>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider) );
 8008344:	6a0a      	ldr	r2, [r1, #32]
 8008346:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 800834a:	4332      	orrs	r2, r6
 800834c:	620a      	str	r2, [r1, #32]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800834e:	079a      	lsls	r2, r3, #30
 8008350:	d50b      	bpl.n	800836a <HAL_RCC_ClockConfig+0x96>
    if((RCC_ClkInitStruct->AHBCLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_HPRE))
 8008352:	496e      	ldr	r1, [pc, #440]	; (800850c <HAL_RCC_ClockConfig+0x238>)
 8008354:	68e6      	ldr	r6, [r4, #12]
 8008356:	6988      	ldr	r0, [r1, #24]
 8008358:	f000 000f 	and.w	r0, r0, #15
 800835c:	4286      	cmp	r6, r0
 800835e:	d904      	bls.n	800836a <HAL_RCC_ClockConfig+0x96>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8008360:	698a      	ldr	r2, [r1, #24]
 8008362:	f022 020f 	bic.w	r2, r2, #15
 8008366:	4332      	orrs	r2, r6
 8008368:	618a      	str	r2, [r1, #24]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800836a:	07df      	lsls	r7, r3, #31
 800836c:	d46e      	bmi.n	800844c <HAL_RCC_ClockConfig+0x178>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800836e:	6823      	ldr	r3, [r4, #0]
 8008370:	079e      	lsls	r6, r3, #30
 8008372:	f100 80a1 	bmi.w	80084b8 <HAL_RCC_ClockConfig+0x1e4>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8008376:	4964      	ldr	r1, [pc, #400]	; (8008508 <HAL_RCC_ClockConfig+0x234>)
 8008378:	680a      	ldr	r2, [r1, #0]
 800837a:	f002 020f 	and.w	r2, r2, #15
 800837e:	42aa      	cmp	r2, r5
 8008380:	f200 80a8 	bhi.w	80084d4 <HAL_RCC_ClockConfig+0x200>
 if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
 8008384:	0758      	lsls	r0, r3, #29
 8008386:	f100 80b1 	bmi.w	80084ec <HAL_RCC_ClockConfig+0x218>
 if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800838a:	0719      	lsls	r1, r3, #28
 800838c:	d50b      	bpl.n	80083a6 <HAL_RCC_ClockConfig+0xd2>
   if((RCC_ClkInitStruct->APB1CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
 800838e:	495f      	ldr	r1, [pc, #380]	; (800850c <HAL_RCC_ClockConfig+0x238>)
 8008390:	6965      	ldr	r5, [r4, #20]
 8008392:	69c8      	ldr	r0, [r1, #28]
 8008394:	f000 0070 	and.w	r0, r0, #112	; 0x70
 8008398:	4285      	cmp	r5, r0
 800839a:	d204      	bcs.n	80083a6 <HAL_RCC_ClockConfig+0xd2>
     MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
 800839c:	69ca      	ldr	r2, [r1, #28]
 800839e:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 80083a2:	432a      	orrs	r2, r5
 80083a4:	61ca      	str	r2, [r1, #28]
 if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80083a6:	06da      	lsls	r2, r3, #27
 80083a8:	d50b      	bpl.n	80083c2 <HAL_RCC_ClockConfig+0xee>
   if((RCC_ClkInitStruct->APB2CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
 80083aa:	4958      	ldr	r1, [pc, #352]	; (800850c <HAL_RCC_ClockConfig+0x238>)
 80083ac:	69a5      	ldr	r5, [r4, #24]
 80083ae:	69c8      	ldr	r0, [r1, #28]
 80083b0:	f400 60e0 	and.w	r0, r0, #1792	; 0x700
 80083b4:	4285      	cmp	r5, r0
 80083b6:	d204      	bcs.n	80083c2 <HAL_RCC_ClockConfig+0xee>
     MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
 80083b8:	69ca      	ldr	r2, [r1, #28]
 80083ba:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 80083be:	432a      	orrs	r2, r5
 80083c0:	61ca      	str	r2, [r1, #28]
 if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
 80083c2:	069b      	lsls	r3, r3, #26
 80083c4:	d50b      	bpl.n	80083de <HAL_RCC_ClockConfig+0x10a>
   if((RCC_ClkInitStruct->APB4CLKDivider) < (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
 80083c6:	4a51      	ldr	r2, [pc, #324]	; (800850c <HAL_RCC_ClockConfig+0x238>)
 80083c8:	69e0      	ldr	r0, [r4, #28]
 80083ca:	6a11      	ldr	r1, [r2, #32]
 80083cc:	f001 0170 	and.w	r1, r1, #112	; 0x70
 80083d0:	4288      	cmp	r0, r1
 80083d2:	d204      	bcs.n	80083de <HAL_RCC_ClockConfig+0x10a>
     MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider) );
 80083d4:	6a13      	ldr	r3, [r2, #32]
 80083d6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80083da:	4303      	orrs	r3, r0
 80083dc:	6213      	str	r3, [r2, #32]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
 80083de:	f7ff fed9 	bl	8008194 <HAL_RCC_GetSysClockFreq>
 80083e2:	494a      	ldr	r1, [pc, #296]	; (800850c <HAL_RCC_ClockConfig+0x238>)
 80083e4:	4a4a      	ldr	r2, [pc, #296]	; (8008510 <HAL_RCC_ClockConfig+0x23c>)
 80083e6:	698b      	ldr	r3, [r1, #24]
 80083e8:	f3c3 2303 	ubfx	r3, r3, #8, #4
 80083ec:	5cd3      	ldrb	r3, [r2, r3]
 80083ee:	f003 031f 	and.w	r3, r3, #31
 80083f2:	40d8      	lsrs	r0, r3
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
 80083f4:	698b      	ldr	r3, [r1, #24]
 80083f6:	f003 030f 	and.w	r3, r3, #15
 80083fa:	5cd3      	ldrb	r3, [r2, r3]
 80083fc:	4a45      	ldr	r2, [pc, #276]	; (8008514 <HAL_RCC_ClockConfig+0x240>)
 80083fe:	f003 031f 	and.w	r3, r3, #31
 8008402:	fa20 f303 	lsr.w	r3, r0, r3
 8008406:	6013      	str	r3, [r2, #0]
  SystemCoreClock = common_system_clock;
 8008408:	4b43      	ldr	r3, [pc, #268]	; (8008518 <HAL_RCC_ClockConfig+0x244>)
 800840a:	6018      	str	r0, [r3, #0]
  halstatus = HAL_InitTick (uwTickPrio);
 800840c:	4b43      	ldr	r3, [pc, #268]	; (800851c <HAL_RCC_ClockConfig+0x248>)
}
 800840e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  halstatus = HAL_InitTick (uwTickPrio);
 8008412:	6818      	ldr	r0, [r3, #0]
 8008414:	f7f8 bfde 	b.w	80013d4 <HAL_InitTick>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8008418:	6813      	ldr	r3, [r2, #0]
 800841a:	f023 030f 	bic.w	r3, r3, #15
 800841e:	430b      	orrs	r3, r1
 8008420:	6013      	str	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8008422:	6813      	ldr	r3, [r2, #0]
 8008424:	f003 030f 	and.w	r3, r3, #15
 8008428:	428b      	cmp	r3, r1
 800842a:	f47f af58 	bne.w	80082de <HAL_RCC_ClockConfig+0xa>
 800842e:	e760      	b.n	80082f2 <HAL_RCC_ClockConfig+0x1e>
    if((RCC_ClkInitStruct->APB3CLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
 8008430:	4936      	ldr	r1, [pc, #216]	; (800850c <HAL_RCC_ClockConfig+0x238>)
 8008432:	6926      	ldr	r6, [r4, #16]
 8008434:	6988      	ldr	r0, [r1, #24]
 8008436:	f000 0070 	and.w	r0, r0, #112	; 0x70
 800843a:	4286      	cmp	r6, r0
 800843c:	f67f af5d 	bls.w	80082fa <HAL_RCC_ClockConfig+0x26>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
 8008440:	698a      	ldr	r2, [r1, #24]
 8008442:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8008446:	4332      	orrs	r2, r6
 8008448:	618a      	str	r2, [r1, #24]
 800844a:	e756      	b.n	80082fa <HAL_RCC_ClockConfig+0x26>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1CPRE, RCC_ClkInitStruct->SYSCLKDivider);
 800844c:	4b2f      	ldr	r3, [pc, #188]	; (800850c <HAL_RCC_ClockConfig+0x238>)
 800844e:	68a1      	ldr	r1, [r4, #8]
 8008450:	699a      	ldr	r2, [r3, #24]
 8008452:	f422 6270 	bic.w	r2, r2, #3840	; 0xf00
 8008456:	430a      	orrs	r2, r1
 8008458:	619a      	str	r2, [r3, #24]
      if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800845a:	6862      	ldr	r2, [r4, #4]
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 800845c:	681b      	ldr	r3, [r3, #0]
      if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800845e:	2a02      	cmp	r2, #2
 8008460:	d11d      	bne.n	800849e <HAL_RCC_ClockConfig+0x1ca>
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 8008462:	f413 3f00 	tst.w	r3, #131072	; 0x20000
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8008466:	f43f af3a 	beq.w	80082de <HAL_RCC_ClockConfig+0xa>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
 800846a:	4e28      	ldr	r6, [pc, #160]	; (800850c <HAL_RCC_ClockConfig+0x238>)
          if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 800846c:	f241 3888 	movw	r8, #5000	; 0x1388
      MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
 8008470:	6933      	ldr	r3, [r6, #16]
 8008472:	f023 0307 	bic.w	r3, r3, #7
 8008476:	4313      	orrs	r3, r2
 8008478:	6133      	str	r3, [r6, #16]
      tickstart = HAL_GetTick();
 800847a:	f7fd fabf 	bl	80059fc <HAL_GetTick>
 800847e:	4607      	mov	r7, r0
        while (__HAL_RCC_GET_SYSCLK_SOURCE() !=  (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8008480:	6933      	ldr	r3, [r6, #16]
 8008482:	6862      	ldr	r2, [r4, #4]
 8008484:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8008488:	ebb3 0fc2 	cmp.w	r3, r2, lsl #3
 800848c:	f43f af6f 	beq.w	800836e <HAL_RCC_ClockConfig+0x9a>
          if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8008490:	f7fd fab4 	bl	80059fc <HAL_GetTick>
 8008494:	1bc0      	subs	r0, r0, r7
 8008496:	4540      	cmp	r0, r8
 8008498:	d9f2      	bls.n	8008480 <HAL_RCC_ClockConfig+0x1ac>
            return HAL_TIMEOUT;
 800849a:	2003      	movs	r0, #3
 800849c:	e720      	b.n	80082e0 <HAL_RCC_ClockConfig+0xc>
      else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 800849e:	2a03      	cmp	r2, #3
 80084a0:	d102      	bne.n	80084a8 <HAL_RCC_ClockConfig+0x1d4>
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 80084a2:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 80084a6:	e7de      	b.n	8008466 <HAL_RCC_ClockConfig+0x192>
      else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_CSI)
 80084a8:	2a01      	cmp	r2, #1
 80084aa:	d102      	bne.n	80084b2 <HAL_RCC_ClockConfig+0x1de>
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
 80084ac:	f413 7f80 	tst.w	r3, #256	; 0x100
 80084b0:	e7d9      	b.n	8008466 <HAL_RCC_ClockConfig+0x192>
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 80084b2:	f013 0f04 	tst.w	r3, #4
 80084b6:	e7d6      	b.n	8008466 <HAL_RCC_ClockConfig+0x192>
    if((RCC_ClkInitStruct->AHBCLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_HPRE))
 80084b8:	4914      	ldr	r1, [pc, #80]	; (800850c <HAL_RCC_ClockConfig+0x238>)
 80084ba:	68e6      	ldr	r6, [r4, #12]
 80084bc:	6988      	ldr	r0, [r1, #24]
 80084be:	f000 000f 	and.w	r0, r0, #15
 80084c2:	4286      	cmp	r6, r0
 80084c4:	f4bf af57 	bcs.w	8008376 <HAL_RCC_ClockConfig+0xa2>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 80084c8:	698a      	ldr	r2, [r1, #24]
 80084ca:	f022 020f 	bic.w	r2, r2, #15
 80084ce:	4332      	orrs	r2, r6
 80084d0:	618a      	str	r2, [r1, #24]
 80084d2:	e750      	b.n	8008376 <HAL_RCC_ClockConfig+0xa2>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80084d4:	680a      	ldr	r2, [r1, #0]
 80084d6:	f022 020f 	bic.w	r2, r2, #15
 80084da:	432a      	orrs	r2, r5
 80084dc:	600a      	str	r2, [r1, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 80084de:	680a      	ldr	r2, [r1, #0]
 80084e0:	f002 020f 	and.w	r2, r2, #15
 80084e4:	42aa      	cmp	r2, r5
 80084e6:	f47f aefa 	bne.w	80082de <HAL_RCC_ClockConfig+0xa>
 80084ea:	e74b      	b.n	8008384 <HAL_RCC_ClockConfig+0xb0>
   if((RCC_ClkInitStruct->APB3CLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
 80084ec:	4907      	ldr	r1, [pc, #28]	; (800850c <HAL_RCC_ClockConfig+0x238>)
 80084ee:	6925      	ldr	r5, [r4, #16]
 80084f0:	6988      	ldr	r0, [r1, #24]
 80084f2:	f000 0070 	and.w	r0, r0, #112	; 0x70
 80084f6:	4285      	cmp	r5, r0
 80084f8:	f4bf af47 	bcs.w	800838a <HAL_RCC_ClockConfig+0xb6>
     MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
 80084fc:	698a      	ldr	r2, [r1, #24]
 80084fe:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8008502:	432a      	orrs	r2, r5
 8008504:	618a      	str	r2, [r1, #24]
 8008506:	e740      	b.n	800838a <HAL_RCC_ClockConfig+0xb6>
 8008508:	52002000 	.word	0x52002000
 800850c:	58024400 	.word	0x58024400
 8008510:	08022590 	.word	0x08022590
 8008514:	2400004c 	.word	0x2400004c
 8008518:	24000048 	.word	0x24000048
 800851c:	24000054 	.word	0x24000054

08008520 <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemD2Clock CMSIS variable is used to store System domain2 Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 8008520:	b510      	push	{r4, lr}
uint32_t common_system_clock;

#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
 8008522:	4c0c      	ldr	r4, [pc, #48]	; (8008554 <HAL_RCC_GetHCLKFreq+0x34>)
 8008524:	f7ff fe36 	bl	8008194 <HAL_RCC_GetSysClockFreq>
 8008528:	490b      	ldr	r1, [pc, #44]	; (8008558 <HAL_RCC_GetHCLKFreq+0x38>)
 800852a:	69a3      	ldr	r3, [r4, #24]
 800852c:	f3c3 2303 	ubfx	r3, r3, #8, #4
 8008530:	5cca      	ldrb	r2, [r1, r3]
#else
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos] & 0x1FU);
#endif

#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
 8008532:	69a3      	ldr	r3, [r4, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
 8008534:	f002 021f 	and.w	r2, r2, #31
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
 8008538:	f003 030f 	and.w	r3, r3, #15
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
 800853c:	fa20 f202 	lsr.w	r2, r0, r2
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
 8008540:	5ccb      	ldrb	r3, [r1, r3]
 8008542:	f003 031f 	and.w	r3, r3, #31
 8008546:	fa22 f003 	lsr.w	r0, r2, r3
 800854a:	4b04      	ldr	r3, [pc, #16]	; (800855c <HAL_RCC_GetHCLKFreq+0x3c>)
 800854c:	6018      	str	r0, [r3, #0]
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
 800854e:	4b04      	ldr	r3, [pc, #16]	; (8008560 <HAL_RCC_GetHCLKFreq+0x40>)
 8008550:	601a      	str	r2, [r3, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  return SystemD2Clock;
}
 8008552:	bd10      	pop	{r4, pc}
 8008554:	58024400 	.word	0x58024400
 8008558:	08022590 	.word	0x08022590
 800855c:	2400004c 	.word	0x2400004c
 8008560:	24000048 	.word	0x24000048

08008564 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 8008564:	b508      	push	{r3, lr}
#if defined (RCC_D2CFGR_D2PPRE1)
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1)>> RCC_D2CFGR_D2PPRE1_Pos]) & 0x1FU));
 8008566:	f7ff ffdb 	bl	8008520 <HAL_RCC_GetHCLKFreq>
 800856a:	4b05      	ldr	r3, [pc, #20]	; (8008580 <HAL_RCC_GetPCLK1Freq+0x1c>)
 800856c:	4a05      	ldr	r2, [pc, #20]	; (8008584 <HAL_RCC_GetPCLK1Freq+0x20>)
 800856e:	69db      	ldr	r3, [r3, #28]
 8008570:	f3c3 1302 	ubfx	r3, r3, #4, #3
 8008574:	5cd3      	ldrb	r3, [r2, r3]
 8008576:	f003 031f 	and.w	r3, r3, #31
#else
 /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1)>> RCC_CDCFGR2_CDPPRE1_Pos]) & 0x1FU));
#endif
}
 800857a:	40d8      	lsrs	r0, r3
 800857c:	bd08      	pop	{r3, pc}
 800857e:	bf00      	nop
 8008580:	58024400 	.word	0x58024400
 8008584:	08022590 	.word	0x08022590

08008588 <HAL_RCC_GetPCLK2Freq>:
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
 8008588:	b508      	push	{r3, lr}
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
#if defined(RCC_D2CFGR_D2PPRE2)
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2)>> RCC_D2CFGR_D2PPRE2_Pos]) & 0x1FU));
 800858a:	f7ff ffc9 	bl	8008520 <HAL_RCC_GetHCLKFreq>
 800858e:	4b05      	ldr	r3, [pc, #20]	; (80085a4 <HAL_RCC_GetPCLK2Freq+0x1c>)
 8008590:	4a05      	ldr	r2, [pc, #20]	; (80085a8 <HAL_RCC_GetPCLK2Freq+0x20>)
 8008592:	69db      	ldr	r3, [r3, #28]
 8008594:	f3c3 2302 	ubfx	r3, r3, #8, #3
 8008598:	5cd3      	ldrb	r3, [r2, r3]
 800859a:	f003 031f 	and.w	r3, r3, #31
#else
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE2)>> RCC_CDCFGR2_CDPPRE2_Pos]) & 0x1FU));
#endif
}
 800859e:	40d8      	lsrs	r0, r3
 80085a0:	bd08      	pop	{r3, pc}
 80085a2:	bf00      	nop
 80085a4:	58024400 	.word	0x58024400
 80085a8:	08022590 	.word	0x08022590

080085ac <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
 80085ac:	233f      	movs	r3, #63	; 0x3f
 80085ae:	6003      	str	r3, [r0, #0]
                                 RCC_CLOCKTYPE_PCLK2 |  RCC_CLOCKTYPE_D3PCLK1  ;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 80085b0:	4b11      	ldr	r3, [pc, #68]	; (80085f8 <HAL_RCC_GetClockConfig+0x4c>)
 80085b2:	691a      	ldr	r2, [r3, #16]
 80085b4:	f002 0207 	and.w	r2, r2, #7
 80085b8:	6042      	str	r2, [r0, #4]

#if defined(RCC_D1CFGR_D1CPRE)
  /* Get the SYSCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1CPRE);
 80085ba:	699a      	ldr	r2, [r3, #24]
 80085bc:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
 80085c0:	6082      	str	r2, [r0, #8]

  /* Get the D1HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_HPRE);
 80085c2:	699a      	ldr	r2, [r3, #24]
 80085c4:	f002 020f 	and.w	r2, r2, #15
 80085c8:	60c2      	str	r2, [r0, #12]

  /* Get the APB3 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB3CLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1PPRE);
 80085ca:	699a      	ldr	r2, [r3, #24]
 80085cc:	f002 0270 	and.w	r2, r2, #112	; 0x70
 80085d0:	6102      	str	r2, [r0, #16]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1);
 80085d2:	69da      	ldr	r2, [r3, #28]
 80085d4:	f002 0270 	and.w	r2, r2, #112	; 0x70
 80085d8:	6142      	str	r2, [r0, #20]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2);
 80085da:	69da      	ldr	r2, [r3, #28]
 80085dc:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
 80085e0:	6182      	str	r2, [r0, #24]

  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
 80085e2:	6a1b      	ldr	r3, [r3, #32]
 80085e4:	f003 0370 	and.w	r3, r3, #112	; 0x70
 80085e8:	61c3      	str	r3, [r0, #28]
  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->SRDCFGR & RCC_SRDCFGR_SRDPPRE);
#endif

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 80085ea:	4b04      	ldr	r3, [pc, #16]	; (80085fc <HAL_RCC_GetClockConfig+0x50>)
 80085ec:	681b      	ldr	r3, [r3, #0]
 80085ee:	f003 030f 	and.w	r3, r3, #15
 80085f2:	600b      	str	r3, [r1, #0]
}
 80085f4:	4770      	bx	lr
 80085f6:	bf00      	nop
 80085f8:	58024400 	.word	0x58024400
 80085fc:	52002000 	.word	0x52002000

08008600 <RCCEx_PLL2_Config>:
  * @note   PLL2 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL2_Config(RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
{
 8008600:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  assert_param(IS_RCC_PLL2RGE_VALUE(pll2->PLL2RGE));
  assert_param(IS_RCC_PLL2VCO_VALUE(pll2->PLL2VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll2->PLL2FRACN));

  /* Check that PLL2 OSC clock source is already set */
  if(__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
 8008602:	4c3a      	ldr	r4, [pc, #232]	; (80086ec <RCCEx_PLL2_Config+0xec>)
{
 8008604:	4606      	mov	r6, r0
 8008606:	460d      	mov	r5, r1
  if(__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
 8008608:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800860a:	f003 0303 	and.w	r3, r3, #3
 800860e:	2b03      	cmp	r3, #3
 8008610:	d069      	beq.n	80086e6 <RCCEx_PLL2_Config+0xe6>


  else
  {
    /* Disable  PLL2. */
    __HAL_RCC_PLL2_DISABLE();
 8008612:	6823      	ldr	r3, [r4, #0]
 8008614:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8008618:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 800861a:	f7fd f9ef 	bl	80059fc <HAL_GetTick>
 800861e:	4607      	mov	r7, r0

    /* Wait till PLL is disabled */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
 8008620:	6823      	ldr	r3, [r4, #0]
 8008622:	011a      	lsls	r2, r3, #4
 8008624:	d44b      	bmi.n	80086be <RCCEx_PLL2_Config+0xbe>
        return HAL_TIMEOUT;
      }
    }

    /* Configure PLL2 multiplication and division factors. */
    __HAL_RCC_PLL2_CONFIG(pll2->PLL2M,
 8008626:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8008628:	6832      	ldr	r2, [r6, #0]
 800862a:	f423 337c 	bic.w	r3, r3, #258048	; 0x3f000
 800862e:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
 8008632:	62a3      	str	r3, [r4, #40]	; 0x28
 8008634:	68b3      	ldr	r3, [r6, #8]
 8008636:	68f2      	ldr	r2, [r6, #12]
 8008638:	3b01      	subs	r3, #1
 800863a:	3a01      	subs	r2, #1
 800863c:	025b      	lsls	r3, r3, #9
 800863e:	0412      	lsls	r2, r2, #16
 8008640:	b29b      	uxth	r3, r3
 8008642:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
 8008646:	4313      	orrs	r3, r2
 8008648:	6872      	ldr	r2, [r6, #4]
 800864a:	3a01      	subs	r2, #1
 800864c:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8008650:	4313      	orrs	r3, r2
 8008652:	6932      	ldr	r2, [r6, #16]
 8008654:	3a01      	subs	r2, #1
 8008656:	0612      	lsls	r2, r2, #24
 8008658:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
 800865c:	4313      	orrs	r3, r2
 800865e:	63a3      	str	r3, [r4, #56]	; 0x38
                          pll2->PLL2P,
                          pll2->PLL2Q,
                          pll2->PLL2R);

    /* Select PLL2 input reference frequency range: VCI */
    __HAL_RCC_PLL2_VCIRANGE(pll2->PLL2RGE) ;
 8008660:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008662:	6972      	ldr	r2, [r6, #20]
 8008664:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 8008668:	4313      	orrs	r3, r2
 800866a:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Select PLL2 output frequency range : VCO */
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
 800866c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800866e:	69b2      	ldr	r2, [r6, #24]
 8008670:	f023 0320 	bic.w	r3, r3, #32
 8008674:	4313      	orrs	r3, r2
 8008676:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Disable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_DISABLE();
 8008678:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800867a:	f023 0310 	bic.w	r3, r3, #16
 800867e:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Configures PLL2 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
 8008680:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008682:	69f2      	ldr	r2, [r6, #28]
 8008684:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8008688:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800868c:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8008690:	63e3      	str	r3, [r4, #60]	; 0x3c

    /* Enable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_ENABLE();
 8008692:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008694:	f043 0310 	orr.w	r3, r3, #16
 8008698:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Enable the PLL2 clock output */
    if(Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
 800869a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    if(Divider == DIVIDER_P_UPDATE)
 800869c:	b9b5      	cbnz	r5, 80086cc <RCCEx_PLL2_Config+0xcc>
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
 800869e:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVQ);
    }
    else
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVR);
 80086a2:	62e3      	str	r3, [r4, #44]	; 0x2c
    }

    /* Enable  PLL2. */
    __HAL_RCC_PLL2_ENABLE();
 80086a4:	4c11      	ldr	r4, [pc, #68]	; (80086ec <RCCEx_PLL2_Config+0xec>)
 80086a6:	6823      	ldr	r3, [r4, #0]
 80086a8:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 80086ac:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 80086ae:	f7fd f9a5 	bl	80059fc <HAL_GetTick>
 80086b2:	4605      	mov	r5, r0

    /* Wait till PLL2 is ready */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
 80086b4:	6823      	ldr	r3, [r4, #0]
 80086b6:	011b      	lsls	r3, r3, #4
 80086b8:	d50f      	bpl.n	80086da <RCCEx_PLL2_Config+0xda>
    }

  }


  return status;
 80086ba:	2000      	movs	r0, #0
 80086bc:	e005      	b.n	80086ca <RCCEx_PLL2_Config+0xca>
      if( (HAL_GetTick() - tickstart ) > PLL2_TIMEOUT_VALUE)
 80086be:	f7fd f99d 	bl	80059fc <HAL_GetTick>
 80086c2:	1bc0      	subs	r0, r0, r7
 80086c4:	2802      	cmp	r0, #2
 80086c6:	d9ab      	bls.n	8008620 <RCCEx_PLL2_Config+0x20>
        return HAL_TIMEOUT;
 80086c8:	2003      	movs	r0, #3
}
 80086ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    else if(Divider == DIVIDER_Q_UPDATE)
 80086cc:	2d01      	cmp	r5, #1
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVQ);
 80086ce:	bf0c      	ite	eq
 80086d0:	f443 1380 	orreq.w	r3, r3, #1048576	; 0x100000
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVR);
 80086d4:	f443 1300 	orrne.w	r3, r3, #2097152	; 0x200000
 80086d8:	e7e3      	b.n	80086a2 <RCCEx_PLL2_Config+0xa2>
      if( (HAL_GetTick() - tickstart ) > PLL2_TIMEOUT_VALUE)
 80086da:	f7fd f98f 	bl	80059fc <HAL_GetTick>
 80086de:	1b40      	subs	r0, r0, r5
 80086e0:	2802      	cmp	r0, #2
 80086e2:	d9e7      	bls.n	80086b4 <RCCEx_PLL2_Config+0xb4>
 80086e4:	e7f0      	b.n	80086c8 <RCCEx_PLL2_Config+0xc8>
    return HAL_ERROR;
 80086e6:	2001      	movs	r0, #1
 80086e8:	e7ef      	b.n	80086ca <RCCEx_PLL2_Config+0xca>
 80086ea:	bf00      	nop
 80086ec:	58024400 	.word	0x58024400

080086f0 <RCCEx_PLL3_Config>:
  * @note   PLL3 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL3_Config(RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
{
 80086f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  assert_param(IS_RCC_PLL3RGE_VALUE(pll3->PLL3RGE));
  assert_param(IS_RCC_PLL3VCO_VALUE(pll3->PLL3VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll3->PLL3FRACN));

  /* Check that PLL3 OSC clock source is already set */
  if(__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
 80086f2:	4c3a      	ldr	r4, [pc, #232]	; (80087dc <RCCEx_PLL3_Config+0xec>)
{
 80086f4:	4606      	mov	r6, r0
 80086f6:	460d      	mov	r5, r1
  if(__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
 80086f8:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80086fa:	f003 0303 	and.w	r3, r3, #3
 80086fe:	2b03      	cmp	r3, #3
 8008700:	d069      	beq.n	80087d6 <RCCEx_PLL3_Config+0xe6>


  else
  {
    /* Disable  PLL3. */
    __HAL_RCC_PLL3_DISABLE();
 8008702:	6823      	ldr	r3, [r4, #0]
 8008704:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8008708:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 800870a:	f7fd f977 	bl	80059fc <HAL_GetTick>
 800870e:	4607      	mov	r7, r0
    /* Wait till PLL3 is ready */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
 8008710:	6823      	ldr	r3, [r4, #0]
 8008712:	009a      	lsls	r2, r3, #2
 8008714:	d44b      	bmi.n	80087ae <RCCEx_PLL3_Config+0xbe>
        return HAL_TIMEOUT;
      }
    }

    /* Configure the PLL3  multiplication and division factors. */
    __HAL_RCC_PLL3_CONFIG(pll3->PLL3M,
 8008716:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8008718:	6832      	ldr	r2, [r6, #0]
 800871a:	f023 737c 	bic.w	r3, r3, #66060288	; 0x3f00000
 800871e:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 8008722:	62a3      	str	r3, [r4, #40]	; 0x28
 8008724:	68b3      	ldr	r3, [r6, #8]
 8008726:	68f2      	ldr	r2, [r6, #12]
 8008728:	3b01      	subs	r3, #1
 800872a:	3a01      	subs	r2, #1
 800872c:	025b      	lsls	r3, r3, #9
 800872e:	0412      	lsls	r2, r2, #16
 8008730:	b29b      	uxth	r3, r3
 8008732:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
 8008736:	4313      	orrs	r3, r2
 8008738:	6872      	ldr	r2, [r6, #4]
 800873a:	3a01      	subs	r2, #1
 800873c:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8008740:	4313      	orrs	r3, r2
 8008742:	6932      	ldr	r2, [r6, #16]
 8008744:	3a01      	subs	r2, #1
 8008746:	0612      	lsls	r2, r2, #24
 8008748:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
 800874c:	4313      	orrs	r3, r2
 800874e:	6423      	str	r3, [r4, #64]	; 0x40
                          pll3->PLL3P,
                          pll3->PLL3Q,
                          pll3->PLL3R);

    /* Select PLL3 input reference frequency range: VCI */
    __HAL_RCC_PLL3_VCIRANGE(pll3->PLL3RGE) ;
 8008750:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008752:	6972      	ldr	r2, [r6, #20]
 8008754:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
 8008758:	4313      	orrs	r3, r2
 800875a:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Select PLL3 output frequency range : VCO */
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
 800875c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800875e:	69b2      	ldr	r2, [r6, #24]
 8008760:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8008764:	4313      	orrs	r3, r2
 8008766:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Disable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_DISABLE();
 8008768:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800876a:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800876e:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Configures PLL3 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
 8008770:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8008772:	69f2      	ldr	r2, [r6, #28]
 8008774:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8008778:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800877c:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8008780:	6463      	str	r3, [r4, #68]	; 0x44

    /* Enable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_ENABLE();
 8008782:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008784:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8008788:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Enable the PLL3 clock output */
    if(Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
 800878a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    if(Divider == DIVIDER_P_UPDATE)
 800878c:	b9b5      	cbnz	r5, 80087bc <RCCEx_PLL3_Config+0xcc>
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
 800878e:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVQ);
    }
    else
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVR);
 8008792:	62e3      	str	r3, [r4, #44]	; 0x2c
    }

    /* Enable  PLL3. */
    __HAL_RCC_PLL3_ENABLE();
 8008794:	4c11      	ldr	r4, [pc, #68]	; (80087dc <RCCEx_PLL3_Config+0xec>)
 8008796:	6823      	ldr	r3, [r4, #0]
 8008798:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800879c:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 800879e:	f7fd f92d 	bl	80059fc <HAL_GetTick>
 80087a2:	4605      	mov	r5, r0

    /* Wait till PLL3 is ready */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
 80087a4:	6823      	ldr	r3, [r4, #0]
 80087a6:	009b      	lsls	r3, r3, #2
 80087a8:	d50f      	bpl.n	80087ca <RCCEx_PLL3_Config+0xda>
    }

  }


  return status;
 80087aa:	2000      	movs	r0, #0
 80087ac:	e005      	b.n	80087ba <RCCEx_PLL3_Config+0xca>
      if( (HAL_GetTick() - tickstart ) > PLL3_TIMEOUT_VALUE)
 80087ae:	f7fd f925 	bl	80059fc <HAL_GetTick>
 80087b2:	1bc0      	subs	r0, r0, r7
 80087b4:	2802      	cmp	r0, #2
 80087b6:	d9ab      	bls.n	8008710 <RCCEx_PLL3_Config+0x20>
        return HAL_TIMEOUT;
 80087b8:	2003      	movs	r0, #3
}
 80087ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    else if(Divider == DIVIDER_Q_UPDATE)
 80087bc:	2d01      	cmp	r5, #1
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVQ);
 80087be:	bf0c      	ite	eq
 80087c0:	f443 0300 	orreq.w	r3, r3, #8388608	; 0x800000
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVR);
 80087c4:	f043 7380 	orrne.w	r3, r3, #16777216	; 0x1000000
 80087c8:	e7e3      	b.n	8008792 <RCCEx_PLL3_Config+0xa2>
      if( (HAL_GetTick() - tickstart ) > PLL3_TIMEOUT_VALUE)
 80087ca:	f7fd f917 	bl	80059fc <HAL_GetTick>
 80087ce:	1b40      	subs	r0, r0, r5
 80087d0:	2802      	cmp	r0, #2
 80087d2:	d9e7      	bls.n	80087a4 <RCCEx_PLL3_Config+0xb4>
 80087d4:	e7f0      	b.n	80087b8 <RCCEx_PLL3_Config+0xc8>
    return HAL_ERROR;
 80087d6:	2001      	movs	r0, #1
 80087d8:	e7ef      	b.n	80087ba <RCCEx_PLL3_Config+0xca>
 80087da:	bf00      	nop
 80087dc:	58024400 	.word	0x58024400

080087e0 <HAL_RCCEx_PeriphCLKConfig>:
{
 80087e0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 80087e4:	6806      	ldr	r6, [r0, #0]
{
 80087e6:	4605      	mov	r5, r0
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 80087e8:	f016 6600 	ands.w	r6, r6, #134217728	; 0x8000000
 80087ec:	d009      	beq.n	8008802 <HAL_RCCEx_PeriphCLKConfig+0x22>
    switch(PeriphClkInit->SpdifrxClockSelection)
 80087ee:	6e83      	ldr	r3, [r0, #104]	; 0x68
 80087f0:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 80087f4:	d02e      	beq.n	8008854 <HAL_RCCEx_PeriphCLKConfig+0x74>
 80087f6:	d813      	bhi.n	8008820 <HAL_RCCEx_PeriphCLKConfig+0x40>
 80087f8:	b1f3      	cbz	r3, 8008838 <HAL_RCCEx_PeriphCLKConfig+0x58>
 80087fa:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 80087fe:	d021      	beq.n	8008844 <HAL_RCCEx_PeriphCLKConfig+0x64>
 8008800:	2601      	movs	r6, #1
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
 8008802:	682b      	ldr	r3, [r5, #0]
 8008804:	05db      	lsls	r3, r3, #23
 8008806:	f140 8102 	bpl.w	8008a0e <HAL_RCCEx_PeriphCLKConfig+0x22e>
    switch(PeriphClkInit->Sai1ClockSelection)
 800880a:	6dab      	ldr	r3, [r5, #88]	; 0x58
 800880c:	2b04      	cmp	r3, #4
 800880e:	f200 80fd 	bhi.w	8008a0c <HAL_RCCEx_PeriphCLKConfig+0x22c>
 8008812:	e8df f013 	tbh	[pc, r3, lsl #1]
 8008816:	0024      	.short	0x0024
 8008818:	00f5002b 	.word	0x00f5002b
 800881c:	00290029 	.word	0x00290029
    switch(PeriphClkInit->SpdifrxClockSelection)
 8008820:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 8008824:	d1ec      	bne.n	8008800 <HAL_RCCEx_PeriphCLKConfig+0x20>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
 8008826:	4aa8      	ldr	r2, [pc, #672]	; (8008ac8 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8008828:	2600      	movs	r6, #0
 800882a:	6ea9      	ldr	r1, [r5, #104]	; 0x68
 800882c:	6d13      	ldr	r3, [r2, #80]	; 0x50
 800882e:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 8008832:	430b      	orrs	r3, r1
 8008834:	6513      	str	r3, [r2, #80]	; 0x50
 8008836:	e7e4      	b.n	8008802 <HAL_RCCEx_PeriphCLKConfig+0x22>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8008838:	4aa3      	ldr	r2, [pc, #652]	; (8008ac8 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 800883a:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 800883c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8008840:	62d3      	str	r3, [r2, #44]	; 0x2c
    if(ret == HAL_OK)
 8008842:	e7f0      	b.n	8008826 <HAL_RCCEx_PeriphCLKConfig+0x46>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_R_UPDATE);
 8008844:	2102      	movs	r1, #2
 8008846:	3004      	adds	r0, #4
 8008848:	f7ff feda 	bl	8008600 <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE);
 800884c:	4606      	mov	r6, r0
    if(ret == HAL_OK)
 800884e:	2800      	cmp	r0, #0
 8008850:	d1d7      	bne.n	8008802 <HAL_RCCEx_PeriphCLKConfig+0x22>
 8008852:	e7e8      	b.n	8008826 <HAL_RCCEx_PeriphCLKConfig+0x46>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE);
 8008854:	2102      	movs	r1, #2
 8008856:	3024      	adds	r0, #36	; 0x24
 8008858:	f7ff ff4a 	bl	80086f0 <RCCEx_PLL3_Config>
 800885c:	e7f6      	b.n	800884c <HAL_RCCEx_PeriphCLKConfig+0x6c>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 800885e:	4a9a      	ldr	r2, [pc, #616]	; (8008ac8 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8008860:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8008862:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8008866:	62d3      	str	r3, [r2, #44]	; 0x2c
    switch(PeriphClkInit->Sai1ClockSelection)
 8008868:	4634      	mov	r4, r6
 800886a:	e004      	b.n	8008876 <HAL_RCCEx_PeriphCLKConfig+0x96>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_P_UPDATE);
 800886c:	2100      	movs	r1, #0
 800886e:	1d28      	adds	r0, r5, #4
 8008870:	f7ff fec6 	bl	8008600 <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_P_UPDATE);
 8008874:	4604      	mov	r4, r0
    if(ret == HAL_OK)
 8008876:	2c00      	cmp	r4, #0
 8008878:	f040 80cb 	bne.w	8008a12 <HAL_RCCEx_PeriphCLKConfig+0x232>
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 800887c:	4a92      	ldr	r2, [pc, #584]	; (8008ac8 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 800887e:	6da9      	ldr	r1, [r5, #88]	; 0x58
 8008880:	6d13      	ldr	r3, [r2, #80]	; 0x50
 8008882:	f023 0307 	bic.w	r3, r3, #7
 8008886:	430b      	orrs	r3, r1
 8008888:	6513      	str	r3, [r2, #80]	; 0x50
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
 800888a:	682b      	ldr	r3, [r5, #0]
 800888c:	059f      	lsls	r7, r3, #22
 800888e:	d50d      	bpl.n	80088ac <HAL_RCCEx_PeriphCLKConfig+0xcc>
    switch(PeriphClkInit->Sai23ClockSelection)
 8008890:	6deb      	ldr	r3, [r5, #92]	; 0x5c
 8008892:	2b80      	cmp	r3, #128	; 0x80
 8008894:	f000 80da 	beq.w	8008a4c <HAL_RCCEx_PeriphCLKConfig+0x26c>
 8008898:	f200 80bd 	bhi.w	8008a16 <HAL_RCCEx_PeriphCLKConfig+0x236>
 800889c:	2b00      	cmp	r3, #0
 800889e:	f000 80c9 	beq.w	8008a34 <HAL_RCCEx_PeriphCLKConfig+0x254>
 80088a2:	2b40      	cmp	r3, #64	; 0x40
 80088a4:	f000 80cc 	beq.w	8008a40 <HAL_RCCEx_PeriphCLKConfig+0x260>
 80088a8:	2601      	movs	r6, #1
 80088aa:	4634      	mov	r4, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
 80088ac:	682b      	ldr	r3, [r5, #0]
 80088ae:	0558      	lsls	r0, r3, #21
 80088b0:	d510      	bpl.n	80088d4 <HAL_RCCEx_PeriphCLKConfig+0xf4>
    switch(PeriphClkInit->Sai4AClockSelection)
 80088b2:	f8d5 30a8 	ldr.w	r3, [r5, #168]	; 0xa8
 80088b6:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 80088ba:	f000 80ec 	beq.w	8008a96 <HAL_RCCEx_PeriphCLKConfig+0x2b6>
 80088be:	f200 80cd 	bhi.w	8008a5c <HAL_RCCEx_PeriphCLKConfig+0x27c>
 80088c2:	2b00      	cmp	r3, #0
 80088c4:	f000 80db 	beq.w	8008a7e <HAL_RCCEx_PeriphCLKConfig+0x29e>
 80088c8:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 80088cc:	f000 80dd 	beq.w	8008a8a <HAL_RCCEx_PeriphCLKConfig+0x2aa>
 80088d0:	2601      	movs	r6, #1
 80088d2:	4634      	mov	r4, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
 80088d4:	682b      	ldr	r3, [r5, #0]
 80088d6:	0519      	lsls	r1, r3, #20
 80088d8:	d510      	bpl.n	80088fc <HAL_RCCEx_PeriphCLKConfig+0x11c>
    switch(PeriphClkInit->Sai4BClockSelection)
 80088da:	f8d5 30ac 	ldr.w	r3, [r5, #172]	; 0xac
 80088de:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 80088e2:	f000 80ff 	beq.w	8008ae4 <HAL_RCCEx_PeriphCLKConfig+0x304>
 80088e6:	f200 80de 	bhi.w	8008aa6 <HAL_RCCEx_PeriphCLKConfig+0x2c6>
 80088ea:	2b00      	cmp	r3, #0
 80088ec:	f000 80ee 	beq.w	8008acc <HAL_RCCEx_PeriphCLKConfig+0x2ec>
 80088f0:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80088f4:	f000 80f0 	beq.w	8008ad8 <HAL_RCCEx_PeriphCLKConfig+0x2f8>
 80088f8:	2601      	movs	r6, #1
 80088fa:	4634      	mov	r4, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
 80088fc:	682b      	ldr	r3, [r5, #0]
 80088fe:	019a      	lsls	r2, r3, #6
 8008900:	d50d      	bpl.n	800891e <HAL_RCCEx_PeriphCLKConfig+0x13e>
    switch(PeriphClkInit->QspiClockSelection)
 8008902:	6cab      	ldr	r3, [r5, #72]	; 0x48
 8008904:	2b20      	cmp	r3, #32
 8008906:	f000 8107 	beq.w	8008b18 <HAL_RCCEx_PeriphCLKConfig+0x338>
 800890a:	f200 80f3 	bhi.w	8008af4 <HAL_RCCEx_PeriphCLKConfig+0x314>
 800890e:	2b00      	cmp	r3, #0
 8008910:	f000 80f3 	beq.w	8008afa <HAL_RCCEx_PeriphCLKConfig+0x31a>
 8008914:	2b10      	cmp	r3, #16
 8008916:	f000 80f9 	beq.w	8008b0c <HAL_RCCEx_PeriphCLKConfig+0x32c>
 800891a:	2601      	movs	r6, #1
 800891c:	4634      	mov	r4, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
 800891e:	682b      	ldr	r3, [r5, #0]
 8008920:	04db      	lsls	r3, r3, #19
 8008922:	d50f      	bpl.n	8008944 <HAL_RCCEx_PeriphCLKConfig+0x164>
    switch(PeriphClkInit->Spi123ClockSelection)
 8008924:	6e2b      	ldr	r3, [r5, #96]	; 0x60
 8008926:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800892a:	f000 8119 	beq.w	8008b60 <HAL_RCCEx_PeriphCLKConfig+0x380>
 800892e:	f200 80fb 	bhi.w	8008b28 <HAL_RCCEx_PeriphCLKConfig+0x348>
 8008932:	2b00      	cmp	r3, #0
 8008934:	f000 8108 	beq.w	8008b48 <HAL_RCCEx_PeriphCLKConfig+0x368>
 8008938:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800893c:	f000 810a 	beq.w	8008b54 <HAL_RCCEx_PeriphCLKConfig+0x374>
 8008940:	2601      	movs	r6, #1
 8008942:	4634      	mov	r4, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
 8008944:	682b      	ldr	r3, [r5, #0]
 8008946:	049f      	lsls	r7, r3, #18
 8008948:	d50f      	bpl.n	800896a <HAL_RCCEx_PeriphCLKConfig+0x18a>
    switch(PeriphClkInit->Spi45ClockSelection)
 800894a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800894c:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8008950:	f000 8126 	beq.w	8008ba0 <HAL_RCCEx_PeriphCLKConfig+0x3c0>
 8008954:	f200 810c 	bhi.w	8008b70 <HAL_RCCEx_PeriphCLKConfig+0x390>
 8008958:	2b00      	cmp	r3, #0
 800895a:	f000 8112 	beq.w	8008b82 <HAL_RCCEx_PeriphCLKConfig+0x3a2>
 800895e:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8008962:	f000 8117 	beq.w	8008b94 <HAL_RCCEx_PeriphCLKConfig+0x3b4>
 8008966:	2601      	movs	r6, #1
 8008968:	4634      	mov	r4, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
 800896a:	682b      	ldr	r3, [r5, #0]
 800896c:	0458      	lsls	r0, r3, #17
 800896e:	d510      	bpl.n	8008992 <HAL_RCCEx_PeriphCLKConfig+0x1b2>
    switch(PeriphClkInit->Spi6ClockSelection)
 8008970:	f8d5 30b0 	ldr.w	r3, [r5, #176]	; 0xb0
 8008974:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8008978:	f000 8133 	beq.w	8008be2 <HAL_RCCEx_PeriphCLKConfig+0x402>
 800897c:	f200 8118 	bhi.w	8008bb0 <HAL_RCCEx_PeriphCLKConfig+0x3d0>
 8008980:	2b00      	cmp	r3, #0
 8008982:	f000 811e 	beq.w	8008bc2 <HAL_RCCEx_PeriphCLKConfig+0x3e2>
 8008986:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 800898a:	f000 8124 	beq.w	8008bd6 <HAL_RCCEx_PeriphCLKConfig+0x3f6>
 800898e:	2601      	movs	r6, #1
 8008990:	4634      	mov	r4, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DSI) == RCC_PERIPHCLK_DSI)
 8008992:	682b      	ldr	r3, [r5, #0]
 8008994:	0159      	lsls	r1, r3, #5
 8008996:	d514      	bpl.n	80089c2 <HAL_RCCEx_PeriphCLKConfig+0x1e2>
    switch(PeriphClkInit->DsiClockSelection)
 8008998:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
 800899a:	b143      	cbz	r3, 80089ae <HAL_RCCEx_PeriphCLKConfig+0x1ce>
 800899c:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80089a0:	f040 8127 	bne.w	8008bf2 <HAL_RCCEx_PeriphCLKConfig+0x412>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_Q_UPDATE);
 80089a4:	2101      	movs	r1, #1
 80089a6:	1d28      	adds	r0, r5, #4
 80089a8:	f7ff fe2a 	bl	8008600 <RCCEx_PLL2_Config>
 80089ac:	4604      	mov	r4, r0
    if(ret == HAL_OK)
 80089ae:	2c00      	cmp	r4, #0
 80089b0:	f040 8122 	bne.w	8008bf8 <HAL_RCCEx_PeriphCLKConfig+0x418>
      __HAL_RCC_DSI_CONFIG(PeriphClkInit->DsiClockSelection);
 80089b4:	4a44      	ldr	r2, [pc, #272]	; (8008ac8 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 80089b6:	6ce9      	ldr	r1, [r5, #76]	; 0x4c
 80089b8:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 80089ba:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80089be:	430b      	orrs	r3, r1
 80089c0:	64d3      	str	r3, [r2, #76]	; 0x4c
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
 80089c2:	682b      	ldr	r3, [r5, #0]
 80089c4:	041a      	lsls	r2, r3, #16
 80089c6:	d50d      	bpl.n	80089e4 <HAL_RCCEx_PeriphCLKConfig+0x204>
    switch(PeriphClkInit->FdcanClockSelection)
 80089c8:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80089ca:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 80089ce:	f000 8115 	beq.w	8008bfc <HAL_RCCEx_PeriphCLKConfig+0x41c>
 80089d2:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80089d6:	f000 811f 	beq.w	8008c18 <HAL_RCCEx_PeriphCLKConfig+0x438>
 80089da:	2b00      	cmp	r3, #0
 80089dc:	f000 8113 	beq.w	8008c06 <HAL_RCCEx_PeriphCLKConfig+0x426>
 80089e0:	2601      	movs	r6, #1
 80089e2:	4634      	mov	r4, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
 80089e4:	682b      	ldr	r3, [r5, #0]
 80089e6:	01db      	lsls	r3, r3, #7
 80089e8:	f140 812c 	bpl.w	8008c44 <HAL_RCCEx_PeriphCLKConfig+0x464>
    switch(PeriphClkInit->FmcClockSelection)
 80089ec:	6c6b      	ldr	r3, [r5, #68]	; 0x44
 80089ee:	2b03      	cmp	r3, #3
 80089f0:	f200 816c 	bhi.w	8008ccc <HAL_RCCEx_PeriphCLKConfig+0x4ec>
 80089f4:	e8df f013 	tbh	[pc, r3, lsl #1]
 80089f8:	0118011d 	.word	0x0118011d
 80089fc:	011d0164 	.word	0x011d0164
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_P_UPDATE);
 8008a00:	2100      	movs	r1, #0
 8008a02:	f105 0024 	add.w	r0, r5, #36	; 0x24
 8008a06:	f7ff fe73 	bl	80086f0 <RCCEx_PLL3_Config>
 8008a0a:	e733      	b.n	8008874 <HAL_RCCEx_PeriphCLKConfig+0x94>
    switch(PeriphClkInit->Sai1ClockSelection)
 8008a0c:	2601      	movs	r6, #1
 8008a0e:	4634      	mov	r4, r6
 8008a10:	e73b      	b.n	800888a <HAL_RCCEx_PeriphCLKConfig+0xaa>
 8008a12:	4626      	mov	r6, r4
 8008a14:	e739      	b.n	800888a <HAL_RCCEx_PeriphCLKConfig+0xaa>
    switch(PeriphClkInit->Sai23ClockSelection)
 8008a16:	2bc0      	cmp	r3, #192	; 0xc0
 8008a18:	d003      	beq.n	8008a22 <HAL_RCCEx_PeriphCLKConfig+0x242>
 8008a1a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8008a1e:	f47f af43 	bne.w	80088a8 <HAL_RCCEx_PeriphCLKConfig+0xc8>
    if(ret == HAL_OK)
 8008a22:	b9cc      	cbnz	r4, 8008a58 <HAL_RCCEx_PeriphCLKConfig+0x278>
      __HAL_RCC_SAI23_CONFIG(PeriphClkInit->Sai23ClockSelection);
 8008a24:	4a28      	ldr	r2, [pc, #160]	; (8008ac8 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8008a26:	6de9      	ldr	r1, [r5, #92]	; 0x5c
 8008a28:	6d13      	ldr	r3, [r2, #80]	; 0x50
 8008a2a:	f423 73e0 	bic.w	r3, r3, #448	; 0x1c0
 8008a2e:	430b      	orrs	r3, r1
 8008a30:	6513      	str	r3, [r2, #80]	; 0x50
 8008a32:	e73b      	b.n	80088ac <HAL_RCCEx_PeriphCLKConfig+0xcc>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8008a34:	4a24      	ldr	r2, [pc, #144]	; (8008ac8 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8008a36:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8008a38:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8008a3c:	62d3      	str	r3, [r2, #44]	; 0x2c
      break;
 8008a3e:	e7f0      	b.n	8008a22 <HAL_RCCEx_PeriphCLKConfig+0x242>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_P_UPDATE);
 8008a40:	2100      	movs	r1, #0
 8008a42:	1d28      	adds	r0, r5, #4
 8008a44:	f7ff fddc 	bl	8008600 <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_P_UPDATE);
 8008a48:	4604      	mov	r4, r0
      break;
 8008a4a:	e7ea      	b.n	8008a22 <HAL_RCCEx_PeriphCLKConfig+0x242>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_P_UPDATE);
 8008a4c:	2100      	movs	r1, #0
 8008a4e:	f105 0024 	add.w	r0, r5, #36	; 0x24
 8008a52:	f7ff fe4d 	bl	80086f0 <RCCEx_PLL3_Config>
 8008a56:	e7f7      	b.n	8008a48 <HAL_RCCEx_PeriphCLKConfig+0x268>
 8008a58:	4626      	mov	r6, r4
 8008a5a:	e727      	b.n	80088ac <HAL_RCCEx_PeriphCLKConfig+0xcc>
    switch(PeriphClkInit->Sai4AClockSelection)
 8008a5c:	f5b3 0fc0 	cmp.w	r3, #6291456	; 0x600000
 8008a60:	d003      	beq.n	8008a6a <HAL_RCCEx_PeriphCLKConfig+0x28a>
 8008a62:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 8008a66:	f47f af33 	bne.w	80088d0 <HAL_RCCEx_PeriphCLKConfig+0xf0>
    if(ret == HAL_OK)
 8008a6a:	b9d4      	cbnz	r4, 8008aa2 <HAL_RCCEx_PeriphCLKConfig+0x2c2>
      __HAL_RCC_SAI4A_CONFIG(PeriphClkInit->Sai4AClockSelection);
 8008a6c:	4a16      	ldr	r2, [pc, #88]	; (8008ac8 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8008a6e:	f8d5 10a8 	ldr.w	r1, [r5, #168]	; 0xa8
 8008a72:	6d93      	ldr	r3, [r2, #88]	; 0x58
 8008a74:	f423 0360 	bic.w	r3, r3, #14680064	; 0xe00000
 8008a78:	430b      	orrs	r3, r1
 8008a7a:	6593      	str	r3, [r2, #88]	; 0x58
 8008a7c:	e72a      	b.n	80088d4 <HAL_RCCEx_PeriphCLKConfig+0xf4>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8008a7e:	4a12      	ldr	r2, [pc, #72]	; (8008ac8 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8008a80:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8008a82:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8008a86:	62d3      	str	r3, [r2, #44]	; 0x2c
      break;
 8008a88:	e7ef      	b.n	8008a6a <HAL_RCCEx_PeriphCLKConfig+0x28a>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_P_UPDATE);
 8008a8a:	2100      	movs	r1, #0
 8008a8c:	1d28      	adds	r0, r5, #4
 8008a8e:	f7ff fdb7 	bl	8008600 <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_P_UPDATE);
 8008a92:	4604      	mov	r4, r0
      break;
 8008a94:	e7e9      	b.n	8008a6a <HAL_RCCEx_PeriphCLKConfig+0x28a>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_P_UPDATE);
 8008a96:	2100      	movs	r1, #0
 8008a98:	f105 0024 	add.w	r0, r5, #36	; 0x24
 8008a9c:	f7ff fe28 	bl	80086f0 <RCCEx_PLL3_Config>
 8008aa0:	e7f7      	b.n	8008a92 <HAL_RCCEx_PeriphCLKConfig+0x2b2>
 8008aa2:	4626      	mov	r6, r4
 8008aa4:	e716      	b.n	80088d4 <HAL_RCCEx_PeriphCLKConfig+0xf4>
    switch(PeriphClkInit->Sai4BClockSelection)
 8008aa6:	f1b3 7f40 	cmp.w	r3, #50331648	; 0x3000000
 8008aaa:	d003      	beq.n	8008ab4 <HAL_RCCEx_PeriphCLKConfig+0x2d4>
 8008aac:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 8008ab0:	f47f af22 	bne.w	80088f8 <HAL_RCCEx_PeriphCLKConfig+0x118>
    if(ret == HAL_OK)
 8008ab4:	b9e4      	cbnz	r4, 8008af0 <HAL_RCCEx_PeriphCLKConfig+0x310>
      __HAL_RCC_SAI4B_CONFIG(PeriphClkInit->Sai4BClockSelection);
 8008ab6:	4a04      	ldr	r2, [pc, #16]	; (8008ac8 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8008ab8:	f8d5 10ac 	ldr.w	r1, [r5, #172]	; 0xac
 8008abc:	6d93      	ldr	r3, [r2, #88]	; 0x58
 8008abe:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 8008ac2:	430b      	orrs	r3, r1
 8008ac4:	6593      	str	r3, [r2, #88]	; 0x58
 8008ac6:	e719      	b.n	80088fc <HAL_RCCEx_PeriphCLKConfig+0x11c>
 8008ac8:	58024400 	.word	0x58024400
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8008acc:	4a9d      	ldr	r2, [pc, #628]	; (8008d44 <HAL_RCCEx_PeriphCLKConfig+0x564>)
 8008ace:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8008ad0:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8008ad4:	62d3      	str	r3, [r2, #44]	; 0x2c
      break;
 8008ad6:	e7ed      	b.n	8008ab4 <HAL_RCCEx_PeriphCLKConfig+0x2d4>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_P_UPDATE);
 8008ad8:	2100      	movs	r1, #0
 8008ada:	1d28      	adds	r0, r5, #4
 8008adc:	f7ff fd90 	bl	8008600 <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 8008ae0:	4604      	mov	r4, r0
      break;
 8008ae2:	e7e7      	b.n	8008ab4 <HAL_RCCEx_PeriphCLKConfig+0x2d4>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 8008ae4:	2100      	movs	r1, #0
 8008ae6:	f105 0024 	add.w	r0, r5, #36	; 0x24
 8008aea:	f7ff fe01 	bl	80086f0 <RCCEx_PLL3_Config>
 8008aee:	e7f7      	b.n	8008ae0 <HAL_RCCEx_PeriphCLKConfig+0x300>
 8008af0:	4626      	mov	r6, r4
 8008af2:	e703      	b.n	80088fc <HAL_RCCEx_PeriphCLKConfig+0x11c>
    switch(PeriphClkInit->QspiClockSelection)
 8008af4:	2b30      	cmp	r3, #48	; 0x30
 8008af6:	f47f af10 	bne.w	800891a <HAL_RCCEx_PeriphCLKConfig+0x13a>
    if(ret == HAL_OK)
 8008afa:	b99c      	cbnz	r4, 8008b24 <HAL_RCCEx_PeriphCLKConfig+0x344>
      __HAL_RCC_QSPI_CONFIG(PeriphClkInit->QspiClockSelection);
 8008afc:	4a91      	ldr	r2, [pc, #580]	; (8008d44 <HAL_RCCEx_PeriphCLKConfig+0x564>)
 8008afe:	6ca9      	ldr	r1, [r5, #72]	; 0x48
 8008b00:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8008b02:	f023 0330 	bic.w	r3, r3, #48	; 0x30
 8008b06:	430b      	orrs	r3, r1
 8008b08:	64d3      	str	r3, [r2, #76]	; 0x4c
 8008b0a:	e708      	b.n	800891e <HAL_RCCEx_PeriphCLKConfig+0x13e>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8008b0c:	4a8d      	ldr	r2, [pc, #564]	; (8008d44 <HAL_RCCEx_PeriphCLKConfig+0x564>)
 8008b0e:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8008b10:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8008b14:	62d3      	str	r3, [r2, #44]	; 0x2c
      break;
 8008b16:	e7f0      	b.n	8008afa <HAL_RCCEx_PeriphCLKConfig+0x31a>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_R_UPDATE);
 8008b18:	2102      	movs	r1, #2
 8008b1a:	1d28      	adds	r0, r5, #4
 8008b1c:	f7ff fd70 	bl	8008600 <RCCEx_PLL2_Config>
 8008b20:	4604      	mov	r4, r0
      break;
 8008b22:	e7ea      	b.n	8008afa <HAL_RCCEx_PeriphCLKConfig+0x31a>
 8008b24:	4626      	mov	r6, r4
 8008b26:	e6fa      	b.n	800891e <HAL_RCCEx_PeriphCLKConfig+0x13e>
    switch(PeriphClkInit->Spi123ClockSelection)
 8008b28:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 8008b2c:	d003      	beq.n	8008b36 <HAL_RCCEx_PeriphCLKConfig+0x356>
 8008b2e:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8008b32:	f47f af05 	bne.w	8008940 <HAL_RCCEx_PeriphCLKConfig+0x160>
    if(ret == HAL_OK)
 8008b36:	b9cc      	cbnz	r4, 8008b6c <HAL_RCCEx_PeriphCLKConfig+0x38c>
      __HAL_RCC_SPI123_CONFIG(PeriphClkInit->Spi123ClockSelection);
 8008b38:	4a82      	ldr	r2, [pc, #520]	; (8008d44 <HAL_RCCEx_PeriphCLKConfig+0x564>)
 8008b3a:	6e29      	ldr	r1, [r5, #96]	; 0x60
 8008b3c:	6d13      	ldr	r3, [r2, #80]	; 0x50
 8008b3e:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8008b42:	430b      	orrs	r3, r1
 8008b44:	6513      	str	r3, [r2, #80]	; 0x50
 8008b46:	e6fd      	b.n	8008944 <HAL_RCCEx_PeriphCLKConfig+0x164>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8008b48:	4a7e      	ldr	r2, [pc, #504]	; (8008d44 <HAL_RCCEx_PeriphCLKConfig+0x564>)
 8008b4a:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8008b4c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8008b50:	62d3      	str	r3, [r2, #44]	; 0x2c
      break;
 8008b52:	e7f0      	b.n	8008b36 <HAL_RCCEx_PeriphCLKConfig+0x356>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_P_UPDATE);
 8008b54:	2100      	movs	r1, #0
 8008b56:	1d28      	adds	r0, r5, #4
 8008b58:	f7ff fd52 	bl	8008600 <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_P_UPDATE);
 8008b5c:	4604      	mov	r4, r0
      break;
 8008b5e:	e7ea      	b.n	8008b36 <HAL_RCCEx_PeriphCLKConfig+0x356>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_P_UPDATE);
 8008b60:	2100      	movs	r1, #0
 8008b62:	f105 0024 	add.w	r0, r5, #36	; 0x24
 8008b66:	f7ff fdc3 	bl	80086f0 <RCCEx_PLL3_Config>
 8008b6a:	e7f7      	b.n	8008b5c <HAL_RCCEx_PeriphCLKConfig+0x37c>
 8008b6c:	4626      	mov	r6, r4
 8008b6e:	e6e9      	b.n	8008944 <HAL_RCCEx_PeriphCLKConfig+0x164>
    switch(PeriphClkInit->Spi45ClockSelection)
 8008b70:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
 8008b74:	f5b2 2f80 	cmp.w	r2, #262144	; 0x40000
 8008b78:	d003      	beq.n	8008b82 <HAL_RCCEx_PeriphCLKConfig+0x3a2>
 8008b7a:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 8008b7e:	f47f aef2 	bne.w	8008966 <HAL_RCCEx_PeriphCLKConfig+0x186>
    if(ret == HAL_OK)
 8008b82:	b99c      	cbnz	r4, 8008bac <HAL_RCCEx_PeriphCLKConfig+0x3cc>
      __HAL_RCC_SPI45_CONFIG(PeriphClkInit->Spi45ClockSelection);
 8008b84:	4a6f      	ldr	r2, [pc, #444]	; (8008d44 <HAL_RCCEx_PeriphCLKConfig+0x564>)
 8008b86:	6e69      	ldr	r1, [r5, #100]	; 0x64
 8008b88:	6d13      	ldr	r3, [r2, #80]	; 0x50
 8008b8a:	f423 23e0 	bic.w	r3, r3, #458752	; 0x70000
 8008b8e:	430b      	orrs	r3, r1
 8008b90:	6513      	str	r3, [r2, #80]	; 0x50
 8008b92:	e6ea      	b.n	800896a <HAL_RCCEx_PeriphCLKConfig+0x18a>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_Q_UPDATE);
 8008b94:	2101      	movs	r1, #1
 8008b96:	1d28      	adds	r0, r5, #4
 8008b98:	f7ff fd32 	bl	8008600 <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
 8008b9c:	4604      	mov	r4, r0
      break;
 8008b9e:	e7f0      	b.n	8008b82 <HAL_RCCEx_PeriphCLKConfig+0x3a2>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
 8008ba0:	2101      	movs	r1, #1
 8008ba2:	f105 0024 	add.w	r0, r5, #36	; 0x24
 8008ba6:	f7ff fda3 	bl	80086f0 <RCCEx_PLL3_Config>
 8008baa:	e7f7      	b.n	8008b9c <HAL_RCCEx_PeriphCLKConfig+0x3bc>
 8008bac:	4626      	mov	r6, r4
 8008bae:	e6dc      	b.n	800896a <HAL_RCCEx_PeriphCLKConfig+0x18a>
    switch(PeriphClkInit->Spi6ClockSelection)
 8008bb0:	f023 5280 	bic.w	r2, r3, #268435456	; 0x10000000
 8008bb4:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 8008bb8:	d003      	beq.n	8008bc2 <HAL_RCCEx_PeriphCLKConfig+0x3e2>
 8008bba:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 8008bbe:	f47f aee6 	bne.w	800898e <HAL_RCCEx_PeriphCLKConfig+0x1ae>
    if(ret == HAL_OK)
 8008bc2:	b9a4      	cbnz	r4, 8008bee <HAL_RCCEx_PeriphCLKConfig+0x40e>
      __HAL_RCC_SPI6_CONFIG(PeriphClkInit->Spi6ClockSelection);
 8008bc4:	4a5f      	ldr	r2, [pc, #380]	; (8008d44 <HAL_RCCEx_PeriphCLKConfig+0x564>)
 8008bc6:	f8d5 10b0 	ldr.w	r1, [r5, #176]	; 0xb0
 8008bca:	6d93      	ldr	r3, [r2, #88]	; 0x58
 8008bcc:	f023 43e0 	bic.w	r3, r3, #1879048192	; 0x70000000
 8008bd0:	430b      	orrs	r3, r1
 8008bd2:	6593      	str	r3, [r2, #88]	; 0x58
 8008bd4:	e6dd      	b.n	8008992 <HAL_RCCEx_PeriphCLKConfig+0x1b2>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_Q_UPDATE);
 8008bd6:	2101      	movs	r1, #1
 8008bd8:	1d28      	adds	r0, r5, #4
 8008bda:	f7ff fd11 	bl	8008600 <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
 8008bde:	4604      	mov	r4, r0
      break;
 8008be0:	e7ef      	b.n	8008bc2 <HAL_RCCEx_PeriphCLKConfig+0x3e2>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
 8008be2:	2101      	movs	r1, #1
 8008be4:	f105 0024 	add.w	r0, r5, #36	; 0x24
 8008be8:	f7ff fd82 	bl	80086f0 <RCCEx_PLL3_Config>
 8008bec:	e7f7      	b.n	8008bde <HAL_RCCEx_PeriphCLKConfig+0x3fe>
 8008bee:	4626      	mov	r6, r4
 8008bf0:	e6cf      	b.n	8008992 <HAL_RCCEx_PeriphCLKConfig+0x1b2>
    switch(PeriphClkInit->DsiClockSelection)
 8008bf2:	2601      	movs	r6, #1
 8008bf4:	4634      	mov	r4, r6
 8008bf6:	e6e4      	b.n	80089c2 <HAL_RCCEx_PeriphCLKConfig+0x1e2>
 8008bf8:	4626      	mov	r6, r4
 8008bfa:	e6e2      	b.n	80089c2 <HAL_RCCEx_PeriphCLKConfig+0x1e2>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8008bfc:	4a51      	ldr	r2, [pc, #324]	; (8008d44 <HAL_RCCEx_PeriphCLKConfig+0x564>)
 8008bfe:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8008c00:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8008c04:	62d3      	str	r3, [r2, #44]	; 0x2c
    if(ret == HAL_OK)
 8008c06:	b96c      	cbnz	r4, 8008c24 <HAL_RCCEx_PeriphCLKConfig+0x444>
      __HAL_RCC_FDCAN_CONFIG(PeriphClkInit->FdcanClockSelection);
 8008c08:	4a4e      	ldr	r2, [pc, #312]	; (8008d44 <HAL_RCCEx_PeriphCLKConfig+0x564>)
 8008c0a:	6f29      	ldr	r1, [r5, #112]	; 0x70
 8008c0c:	6d13      	ldr	r3, [r2, #80]	; 0x50
 8008c0e:	f023 5340 	bic.w	r3, r3, #805306368	; 0x30000000
 8008c12:	430b      	orrs	r3, r1
 8008c14:	6513      	str	r3, [r2, #80]	; 0x50
 8008c16:	e6e5      	b.n	80089e4 <HAL_RCCEx_PeriphCLKConfig+0x204>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_Q_UPDATE);
 8008c18:	2101      	movs	r1, #1
 8008c1a:	1d28      	adds	r0, r5, #4
 8008c1c:	f7ff fcf0 	bl	8008600 <RCCEx_PLL2_Config>
 8008c20:	4604      	mov	r4, r0
      break;
 8008c22:	e7f0      	b.n	8008c06 <HAL_RCCEx_PeriphCLKConfig+0x426>
 8008c24:	4626      	mov	r6, r4
 8008c26:	e6dd      	b.n	80089e4 <HAL_RCCEx_PeriphCLKConfig+0x204>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8008c28:	4a46      	ldr	r2, [pc, #280]	; (8008d44 <HAL_RCCEx_PeriphCLKConfig+0x564>)
 8008c2a:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8008c2c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8008c30:	62d3      	str	r3, [r2, #44]	; 0x2c
    if(ret == HAL_OK)
 8008c32:	2c00      	cmp	r4, #0
 8008c34:	d14d      	bne.n	8008cd2 <HAL_RCCEx_PeriphCLKConfig+0x4f2>
      __HAL_RCC_FMC_CONFIG(PeriphClkInit->FmcClockSelection);
 8008c36:	4a43      	ldr	r2, [pc, #268]	; (8008d44 <HAL_RCCEx_PeriphCLKConfig+0x564>)
 8008c38:	6c69      	ldr	r1, [r5, #68]	; 0x44
 8008c3a:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8008c3c:	f023 0303 	bic.w	r3, r3, #3
 8008c40:	430b      	orrs	r3, r1
 8008c42:	64d3      	str	r3, [r2, #76]	; 0x4c
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
 8008c44:	682b      	ldr	r3, [r5, #0]
 8008c46:	025f      	lsls	r7, r3, #9
 8008c48:	d54d      	bpl.n	8008ce6 <HAL_RCCEx_PeriphCLKConfig+0x506>
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
 8008c4a:	4f3f      	ldr	r7, [pc, #252]	; (8008d48 <HAL_RCCEx_PeriphCLKConfig+0x568>)
 8008c4c:	683b      	ldr	r3, [r7, #0]
 8008c4e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8008c52:	603b      	str	r3, [r7, #0]
    tickstart = HAL_GetTick();
 8008c54:	f7fc fed2 	bl	80059fc <HAL_GetTick>
 8008c58:	4680      	mov	r8, r0
    while((PWR->CR1 & PWR_CR1_DBP) == 0U)
 8008c5a:	683b      	ldr	r3, [r7, #0]
 8008c5c:	05d8      	lsls	r0, r3, #23
 8008c5e:	d53a      	bpl.n	8008cd6 <HAL_RCCEx_PeriphCLKConfig+0x4f6>
    if(ret == HAL_OK)
 8008c60:	2c00      	cmp	r4, #0
 8008c62:	d16d      	bne.n	8008d40 <HAL_RCCEx_PeriphCLKConfig+0x560>
      if((RCC->BDCR & RCC_BDCR_RTCSEL) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL))
 8008c64:	4b37      	ldr	r3, [pc, #220]	; (8008d44 <HAL_RCCEx_PeriphCLKConfig+0x564>)
 8008c66:	f8d5 00b4 	ldr.w	r0, [r5, #180]	; 0xb4
 8008c6a:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8008c6c:	4042      	eors	r2, r0
 8008c6e:	f412 7f40 	tst.w	r2, #768	; 0x300
 8008c72:	d00b      	beq.n	8008c8c <HAL_RCCEx_PeriphCLKConfig+0x4ac>
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8008c74:	6f1a      	ldr	r2, [r3, #112]	; 0x70
        __HAL_RCC_BACKUPRESET_FORCE();
 8008c76:	6f19      	ldr	r1, [r3, #112]	; 0x70
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8008c78:	f422 7240 	bic.w	r2, r2, #768	; 0x300
        __HAL_RCC_BACKUPRESET_FORCE();
 8008c7c:	f441 3180 	orr.w	r1, r1, #65536	; 0x10000
 8008c80:	6719      	str	r1, [r3, #112]	; 0x70
        __HAL_RCC_BACKUPRESET_RELEASE();
 8008c82:	6f19      	ldr	r1, [r3, #112]	; 0x70
 8008c84:	f421 3180 	bic.w	r1, r1, #65536	; 0x10000
 8008c88:	6719      	str	r1, [r3, #112]	; 0x70
        RCC->BDCR = tmpreg;
 8008c8a:	671a      	str	r2, [r3, #112]	; 0x70
      if(PeriphClkInit->RTCClockSelection == RCC_RTCCLKSOURCE_LSE)
 8008c8c:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8008c90:	d041      	beq.n	8008d16 <HAL_RCCEx_PeriphCLKConfig+0x536>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8008c92:	f8d5 30b4 	ldr.w	r3, [r5, #180]	; 0xb4
 8008c96:	492b      	ldr	r1, [pc, #172]	; (8008d44 <HAL_RCCEx_PeriphCLKConfig+0x564>)
 8008c98:	f403 7240 	and.w	r2, r3, #768	; 0x300
 8008c9c:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 8008ca0:	d14a      	bne.n	8008d38 <HAL_RCCEx_PeriphCLKConfig+0x558>
 8008ca2:	6908      	ldr	r0, [r1, #16]
 8008ca4:	4a29      	ldr	r2, [pc, #164]	; (8008d4c <HAL_RCCEx_PeriphCLKConfig+0x56c>)
 8008ca6:	f420 507c 	bic.w	r0, r0, #16128	; 0x3f00
 8008caa:	ea02 1213 	and.w	r2, r2, r3, lsr #4
 8008cae:	4302      	orrs	r2, r0
 8008cb0:	610a      	str	r2, [r1, #16]
 8008cb2:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8008cb6:	4a23      	ldr	r2, [pc, #140]	; (8008d44 <HAL_RCCEx_PeriphCLKConfig+0x564>)
 8008cb8:	6f11      	ldr	r1, [r2, #112]	; 0x70
 8008cba:	430b      	orrs	r3, r1
 8008cbc:	6713      	str	r3, [r2, #112]	; 0x70
 8008cbe:	e012      	b.n	8008ce6 <HAL_RCCEx_PeriphCLKConfig+0x506>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_R_UPDATE);
 8008cc0:	2102      	movs	r1, #2
 8008cc2:	1d28      	adds	r0, r5, #4
 8008cc4:	f7ff fc9c 	bl	8008600 <RCCEx_PLL2_Config>
 8008cc8:	4604      	mov	r4, r0
      break;
 8008cca:	e7b2      	b.n	8008c32 <HAL_RCCEx_PeriphCLKConfig+0x452>
    switch(PeriphClkInit->FmcClockSelection)
 8008ccc:	2601      	movs	r6, #1
 8008cce:	4634      	mov	r4, r6
 8008cd0:	e7b8      	b.n	8008c44 <HAL_RCCEx_PeriphCLKConfig+0x464>
 8008cd2:	4626      	mov	r6, r4
 8008cd4:	e7b6      	b.n	8008c44 <HAL_RCCEx_PeriphCLKConfig+0x464>
      if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8008cd6:	f7fc fe91 	bl	80059fc <HAL_GetTick>
 8008cda:	eba0 0008 	sub.w	r0, r0, r8
 8008cde:	2864      	cmp	r0, #100	; 0x64
 8008ce0:	d9bb      	bls.n	8008c5a <HAL_RCCEx_PeriphCLKConfig+0x47a>
        ret = HAL_TIMEOUT;
 8008ce2:	2603      	movs	r6, #3
 8008ce4:	4634      	mov	r4, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
 8008ce6:	682b      	ldr	r3, [r5, #0]
 8008ce8:	07da      	lsls	r2, r3, #31
 8008cea:	d509      	bpl.n	8008d00 <HAL_RCCEx_PeriphCLKConfig+0x520>
    switch(PeriphClkInit->Usart16ClockSelection)
 8008cec:	6feb      	ldr	r3, [r5, #124]	; 0x7c
 8008cee:	2b10      	cmp	r3, #16
 8008cf0:	d043      	beq.n	8008d7a <HAL_RCCEx_PeriphCLKConfig+0x59a>
 8008cf2:	d82d      	bhi.n	8008d50 <HAL_RCCEx_PeriphCLKConfig+0x570>
 8008cf4:	2b00      	cmp	r3, #0
 8008cf6:	d031      	beq.n	8008d5c <HAL_RCCEx_PeriphCLKConfig+0x57c>
 8008cf8:	2b08      	cmp	r3, #8
 8008cfa:	d038      	beq.n	8008d6e <HAL_RCCEx_PeriphCLKConfig+0x58e>
 8008cfc:	2601      	movs	r6, #1
 8008cfe:	4634      	mov	r4, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
 8008d00:	682b      	ldr	r3, [r5, #0]
 8008d02:	079b      	lsls	r3, r3, #30
 8008d04:	d54e      	bpl.n	8008da4 <HAL_RCCEx_PeriphCLKConfig+0x5c4>
    switch(PeriphClkInit->Usart234578ClockSelection)
 8008d06:	6fab      	ldr	r3, [r5, #120]	; 0x78
 8008d08:	2b05      	cmp	r3, #5
 8008d0a:	d861      	bhi.n	8008dd0 <HAL_RCCEx_PeriphCLKConfig+0x5f0>
 8008d0c:	e8df f003 	tbb	[pc, r3]
 8008d10:	425a3d42 	.word	0x425a3d42
 8008d14:	4242      	.short	0x4242
        tickstart = HAL_GetTick();
 8008d16:	f7fc fe71 	bl	80059fc <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8008d1a:	f8df 8028 	ldr.w	r8, [pc, #40]	; 8008d44 <HAL_RCCEx_PeriphCLKConfig+0x564>
        tickstart = HAL_GetTick();
 8008d1e:	4607      	mov	r7, r0
          if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8008d20:	f241 3988 	movw	r9, #5000	; 0x1388
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8008d24:	f8d8 3070 	ldr.w	r3, [r8, #112]	; 0x70
 8008d28:	0799      	lsls	r1, r3, #30
 8008d2a:	d4b2      	bmi.n	8008c92 <HAL_RCCEx_PeriphCLKConfig+0x4b2>
          if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8008d2c:	f7fc fe66 	bl	80059fc <HAL_GetTick>
 8008d30:	1bc0      	subs	r0, r0, r7
 8008d32:	4548      	cmp	r0, r9
 8008d34:	d9f6      	bls.n	8008d24 <HAL_RCCEx_PeriphCLKConfig+0x544>
 8008d36:	e7d4      	b.n	8008ce2 <HAL_RCCEx_PeriphCLKConfig+0x502>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8008d38:	690a      	ldr	r2, [r1, #16]
 8008d3a:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
 8008d3e:	e7b7      	b.n	8008cb0 <HAL_RCCEx_PeriphCLKConfig+0x4d0>
 8008d40:	4626      	mov	r6, r4
 8008d42:	e7d0      	b.n	8008ce6 <HAL_RCCEx_PeriphCLKConfig+0x506>
 8008d44:	58024400 	.word	0x58024400
 8008d48:	58024800 	.word	0x58024800
 8008d4c:	00ffffcf 	.word	0x00ffffcf
    switch(PeriphClkInit->Usart16ClockSelection)
 8008d50:	f023 0208 	bic.w	r2, r3, #8
 8008d54:	2a20      	cmp	r2, #32
 8008d56:	d001      	beq.n	8008d5c <HAL_RCCEx_PeriphCLKConfig+0x57c>
 8008d58:	2b18      	cmp	r3, #24
 8008d5a:	d1cf      	bne.n	8008cfc <HAL_RCCEx_PeriphCLKConfig+0x51c>
    if(ret == HAL_OK)
 8008d5c:	b99c      	cbnz	r4, 8008d86 <HAL_RCCEx_PeriphCLKConfig+0x5a6>
      __HAL_RCC_USART16_CONFIG(PeriphClkInit->Usart16ClockSelection);
 8008d5e:	4a1f      	ldr	r2, [pc, #124]	; (8008ddc <HAL_RCCEx_PeriphCLKConfig+0x5fc>)
 8008d60:	6fe9      	ldr	r1, [r5, #124]	; 0x7c
 8008d62:	6d53      	ldr	r3, [r2, #84]	; 0x54
 8008d64:	f023 0338 	bic.w	r3, r3, #56	; 0x38
 8008d68:	430b      	orrs	r3, r1
 8008d6a:	6553      	str	r3, [r2, #84]	; 0x54
 8008d6c:	e7c8      	b.n	8008d00 <HAL_RCCEx_PeriphCLKConfig+0x520>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_Q_UPDATE);
 8008d6e:	2101      	movs	r1, #1
 8008d70:	1d28      	adds	r0, r5, #4
 8008d72:	f7ff fc45 	bl	8008600 <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
 8008d76:	4604      	mov	r4, r0
      break;
 8008d78:	e7f0      	b.n	8008d5c <HAL_RCCEx_PeriphCLKConfig+0x57c>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
 8008d7a:	2101      	movs	r1, #1
 8008d7c:	f105 0024 	add.w	r0, r5, #36	; 0x24
 8008d80:	f7ff fcb6 	bl	80086f0 <RCCEx_PLL3_Config>
 8008d84:	e7f7      	b.n	8008d76 <HAL_RCCEx_PeriphCLKConfig+0x596>
 8008d86:	4626      	mov	r6, r4
 8008d88:	e7ba      	b.n	8008d00 <HAL_RCCEx_PeriphCLKConfig+0x520>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_Q_UPDATE);
 8008d8a:	2101      	movs	r1, #1
 8008d8c:	1d28      	adds	r0, r5, #4
 8008d8e:	f7ff fc37 	bl	8008600 <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
 8008d92:	4604      	mov	r4, r0
    if(ret == HAL_OK)
 8008d94:	b9fc      	cbnz	r4, 8008dd6 <HAL_RCCEx_PeriphCLKConfig+0x5f6>
      __HAL_RCC_USART234578_CONFIG(PeriphClkInit->Usart234578ClockSelection);
 8008d96:	4a11      	ldr	r2, [pc, #68]	; (8008ddc <HAL_RCCEx_PeriphCLKConfig+0x5fc>)
 8008d98:	6fa9      	ldr	r1, [r5, #120]	; 0x78
 8008d9a:	6d53      	ldr	r3, [r2, #84]	; 0x54
 8008d9c:	f023 0307 	bic.w	r3, r3, #7
 8008da0:	430b      	orrs	r3, r1
 8008da2:	6553      	str	r3, [r2, #84]	; 0x54
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
 8008da4:	682b      	ldr	r3, [r5, #0]
 8008da6:	075f      	lsls	r7, r3, #29
 8008da8:	d52a      	bpl.n	8008e00 <HAL_RCCEx_PeriphCLKConfig+0x620>
    switch(PeriphClkInit->Lpuart1ClockSelection)
 8008daa:	f8d5 3094 	ldr.w	r3, [r5, #148]	; 0x94
 8008dae:	2b05      	cmp	r3, #5
 8008db0:	f200 813d 	bhi.w	800902e <HAL_RCCEx_PeriphCLKConfig+0x84e>
 8008db4:	e8df f013 	tbh	[pc, r3, lsl #1]
 8008db8:	00140019 	.word	0x00140019
 8008dbc:	00190135 	.word	0x00190135
 8008dc0:	00190019 	.word	0x00190019
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
 8008dc4:	2101      	movs	r1, #1
 8008dc6:	f105 0024 	add.w	r0, r5, #36	; 0x24
 8008dca:	f7ff fc91 	bl	80086f0 <RCCEx_PLL3_Config>
 8008dce:	e7e0      	b.n	8008d92 <HAL_RCCEx_PeriphCLKConfig+0x5b2>
    switch(PeriphClkInit->Usart234578ClockSelection)
 8008dd0:	2601      	movs	r6, #1
 8008dd2:	4634      	mov	r4, r6
 8008dd4:	e7e6      	b.n	8008da4 <HAL_RCCEx_PeriphCLKConfig+0x5c4>
 8008dd6:	4626      	mov	r6, r4
 8008dd8:	e7e4      	b.n	8008da4 <HAL_RCCEx_PeriphCLKConfig+0x5c4>
 8008dda:	bf00      	nop
 8008ddc:	58024400 	.word	0x58024400
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_Q_UPDATE);
 8008de0:	2101      	movs	r1, #1
 8008de2:	1d28      	adds	r0, r5, #4
 8008de4:	f7ff fc0c 	bl	8008600 <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
 8008de8:	4604      	mov	r4, r0
    if(ret == HAL_OK)
 8008dea:	2c00      	cmp	r4, #0
 8008dec:	f040 8122 	bne.w	8009034 <HAL_RCCEx_PeriphCLKConfig+0x854>
      __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
 8008df0:	4aab      	ldr	r2, [pc, #684]	; (80090a0 <HAL_RCCEx_PeriphCLKConfig+0x8c0>)
 8008df2:	f8d5 1094 	ldr.w	r1, [r5, #148]	; 0x94
 8008df6:	6d93      	ldr	r3, [r2, #88]	; 0x58
 8008df8:	f023 0307 	bic.w	r3, r3, #7
 8008dfc:	430b      	orrs	r3, r1
 8008dfe:	6593      	str	r3, [r2, #88]	; 0x58
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
 8008e00:	682b      	ldr	r3, [r5, #0]
 8008e02:	0698      	lsls	r0, r3, #26
 8008e04:	d510      	bpl.n	8008e28 <HAL_RCCEx_PeriphCLKConfig+0x648>
    switch(PeriphClkInit->Lptim1ClockSelection)
 8008e06:	f8d5 3090 	ldr.w	r3, [r5, #144]	; 0x90
 8008e0a:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8008e0e:	f000 812c 	beq.w	800906a <HAL_RCCEx_PeriphCLKConfig+0x88a>
 8008e12:	f200 8111 	bhi.w	8009038 <HAL_RCCEx_PeriphCLKConfig+0x858>
 8008e16:	2b00      	cmp	r3, #0
 8008e18:	f000 8117 	beq.w	800904a <HAL_RCCEx_PeriphCLKConfig+0x86a>
 8008e1c:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8008e20:	f000 811d 	beq.w	800905e <HAL_RCCEx_PeriphCLKConfig+0x87e>
 8008e24:	2601      	movs	r6, #1
 8008e26:	4634      	mov	r4, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
 8008e28:	682b      	ldr	r3, [r5, #0]
 8008e2a:	0659      	lsls	r1, r3, #25
 8008e2c:	d510      	bpl.n	8008e50 <HAL_RCCEx_PeriphCLKConfig+0x670>
    switch(PeriphClkInit->Lptim2ClockSelection)
 8008e2e:	f8d5 309c 	ldr.w	r3, [r5, #156]	; 0x9c
 8008e32:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8008e36:	f000 813b 	beq.w	80090b0 <HAL_RCCEx_PeriphCLKConfig+0x8d0>
 8008e3a:	f200 811e 	bhi.w	800907a <HAL_RCCEx_PeriphCLKConfig+0x89a>
 8008e3e:	2b00      	cmp	r3, #0
 8008e40:	f000 8124 	beq.w	800908c <HAL_RCCEx_PeriphCLKConfig+0x8ac>
 8008e44:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8008e48:	f000 812c 	beq.w	80090a4 <HAL_RCCEx_PeriphCLKConfig+0x8c4>
 8008e4c:	2601      	movs	r6, #1
 8008e4e:	4634      	mov	r4, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
 8008e50:	682b      	ldr	r3, [r5, #0]
 8008e52:	061a      	lsls	r2, r3, #24
 8008e54:	d510      	bpl.n	8008e78 <HAL_RCCEx_PeriphCLKConfig+0x698>
    switch(PeriphClkInit->Lptim345ClockSelection)
 8008e56:	f8d5 30a0 	ldr.w	r3, [r5, #160]	; 0xa0
 8008e5a:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8008e5e:	f000 8148 	beq.w	80090f2 <HAL_RCCEx_PeriphCLKConfig+0x912>
 8008e62:	f200 812d 	bhi.w	80090c0 <HAL_RCCEx_PeriphCLKConfig+0x8e0>
 8008e66:	2b00      	cmp	r3, #0
 8008e68:	f000 8133 	beq.w	80090d2 <HAL_RCCEx_PeriphCLKConfig+0x8f2>
 8008e6c:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8008e70:	f000 8139 	beq.w	80090e6 <HAL_RCCEx_PeriphCLKConfig+0x906>
 8008e74:	2601      	movs	r6, #1
 8008e76:	4634      	mov	r4, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
 8008e78:	682b      	ldr	r3, [r5, #0]
 8008e7a:	071b      	lsls	r3, r3, #28
 8008e7c:	d514      	bpl.n	8008ea8 <HAL_RCCEx_PeriphCLKConfig+0x6c8>
    if ((PeriphClkInit->I2c123ClockSelection )== RCC_I2C123CLKSOURCE_PLL3 )
 8008e7e:	f8d5 3084 	ldr.w	r3, [r5, #132]	; 0x84
 8008e82:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8008e86:	d107      	bne.n	8008e98 <HAL_RCCEx_PeriphCLKConfig+0x6b8>
        if(RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE)!= HAL_OK)
 8008e88:	2102      	movs	r1, #2
 8008e8a:	f105 0024 	add.w	r0, r5, #36	; 0x24
 8008e8e:	f7ff fc2f 	bl	80086f0 <RCCEx_PLL3_Config>
          status = HAL_ERROR;
 8008e92:	2800      	cmp	r0, #0
 8008e94:	bf18      	it	ne
 8008e96:	2601      	movne	r6, #1
      __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
 8008e98:	4a81      	ldr	r2, [pc, #516]	; (80090a0 <HAL_RCCEx_PeriphCLKConfig+0x8c0>)
 8008e9a:	f8d5 1084 	ldr.w	r1, [r5, #132]	; 0x84
 8008e9e:	6d53      	ldr	r3, [r2, #84]	; 0x54
 8008ea0:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8008ea4:	430b      	orrs	r3, r1
 8008ea6:	6553      	str	r3, [r2, #84]	; 0x54
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
 8008ea8:	682b      	ldr	r3, [r5, #0]
 8008eaa:	06df      	lsls	r7, r3, #27
 8008eac:	d514      	bpl.n	8008ed8 <HAL_RCCEx_PeriphCLKConfig+0x6f8>
    if ((PeriphClkInit->I2c4ClockSelection) == RCC_I2C4CLKSOURCE_PLL3 )
 8008eae:	f8d5 3098 	ldr.w	r3, [r5, #152]	; 0x98
 8008eb2:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8008eb6:	d107      	bne.n	8008ec8 <HAL_RCCEx_PeriphCLKConfig+0x6e8>
      if(RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE)!= HAL_OK)
 8008eb8:	2102      	movs	r1, #2
 8008eba:	f105 0024 	add.w	r0, r5, #36	; 0x24
 8008ebe:	f7ff fc17 	bl	80086f0 <RCCEx_PLL3_Config>
        status = HAL_ERROR;
 8008ec2:	2800      	cmp	r0, #0
 8008ec4:	bf18      	it	ne
 8008ec6:	2601      	movne	r6, #1
      __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
 8008ec8:	4a75      	ldr	r2, [pc, #468]	; (80090a0 <HAL_RCCEx_PeriphCLKConfig+0x8c0>)
 8008eca:	f8d5 1098 	ldr.w	r1, [r5, #152]	; 0x98
 8008ece:	6d93      	ldr	r3, [r2, #88]	; 0x58
 8008ed0:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8008ed4:	430b      	orrs	r3, r1
 8008ed6:	6593      	str	r3, [r2, #88]	; 0x58
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
 8008ed8:	682b      	ldr	r3, [r5, #0]
 8008eda:	0318      	lsls	r0, r3, #12
 8008edc:	d51a      	bpl.n	8008f14 <HAL_RCCEx_PeriphCLKConfig+0x734>
    switch(PeriphClkInit->AdcClockSelection)
 8008ede:	f8d5 10a4 	ldr.w	r1, [r5, #164]	; 0xa4
 8008ee2:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 8008ee6:	f000 810c 	beq.w	8009102 <HAL_RCCEx_PeriphCLKConfig+0x922>
 8008eea:	f5b1 3f00 	cmp.w	r1, #131072	; 0x20000
 8008eee:	d006      	beq.n	8008efe <HAL_RCCEx_PeriphCLKConfig+0x71e>
 8008ef0:	2900      	cmp	r1, #0
 8008ef2:	f040 810c 	bne.w	800910e <HAL_RCCEx_PeriphCLKConfig+0x92e>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_P_UPDATE);
 8008ef6:	1d28      	adds	r0, r5, #4
 8008ef8:	f7ff fb82 	bl	8008600 <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE);
 8008efc:	4604      	mov	r4, r0
    if(ret == HAL_OK)
 8008efe:	2c00      	cmp	r4, #0
 8008f00:	f040 8108 	bne.w	8009114 <HAL_RCCEx_PeriphCLKConfig+0x934>
      __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
 8008f04:	4a66      	ldr	r2, [pc, #408]	; (80090a0 <HAL_RCCEx_PeriphCLKConfig+0x8c0>)
 8008f06:	f8d5 10a4 	ldr.w	r1, [r5, #164]	; 0xa4
 8008f0a:	6d93      	ldr	r3, [r2, #88]	; 0x58
 8008f0c:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8008f10:	430b      	orrs	r3, r1
 8008f12:	6593      	str	r3, [r2, #88]	; 0x58
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
 8008f14:	682b      	ldr	r3, [r5, #0]
 8008f16:	0359      	lsls	r1, r3, #13
 8008f18:	d51c      	bpl.n	8008f54 <HAL_RCCEx_PeriphCLKConfig+0x774>
    switch(PeriphClkInit->UsbClockSelection)
 8008f1a:	f8d5 3088 	ldr.w	r3, [r5, #136]	; 0x88
 8008f1e:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8008f22:	f000 80f9 	beq.w	8009118 <HAL_RCCEx_PeriphCLKConfig+0x938>
 8008f26:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 8008f2a:	d008      	beq.n	8008f3e <HAL_RCCEx_PeriphCLKConfig+0x75e>
 8008f2c:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8008f30:	f040 80f9 	bne.w	8009126 <HAL_RCCEx_PeriphCLKConfig+0x946>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8008f34:	4a5a      	ldr	r2, [pc, #360]	; (80090a0 <HAL_RCCEx_PeriphCLKConfig+0x8c0>)
 8008f36:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8008f38:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8008f3c:	62d3      	str	r3, [r2, #44]	; 0x2c
    if(ret == HAL_OK)
 8008f3e:	2c00      	cmp	r4, #0
 8008f40:	f040 80f4 	bne.w	800912c <HAL_RCCEx_PeriphCLKConfig+0x94c>
      __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
 8008f44:	4a56      	ldr	r2, [pc, #344]	; (80090a0 <HAL_RCCEx_PeriphCLKConfig+0x8c0>)
 8008f46:	f8d5 1088 	ldr.w	r1, [r5, #136]	; 0x88
 8008f4a:	6d53      	ldr	r3, [r2, #84]	; 0x54
 8008f4c:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 8008f50:	430b      	orrs	r3, r1
 8008f52:	6553      	str	r3, [r2, #84]	; 0x54
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
 8008f54:	682b      	ldr	r3, [r5, #0]
 8008f56:	03da      	lsls	r2, r3, #15
 8008f58:	d509      	bpl.n	8008f6e <HAL_RCCEx_PeriphCLKConfig+0x78e>
    switch(PeriphClkInit->SdmmcClockSelection)
 8008f5a:	6d2b      	ldr	r3, [r5, #80]	; 0x50
 8008f5c:	2b00      	cmp	r3, #0
 8008f5e:	f000 80e7 	beq.w	8009130 <HAL_RCCEx_PeriphCLKConfig+0x950>
 8008f62:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8008f66:	f000 80f1 	beq.w	800914c <HAL_RCCEx_PeriphCLKConfig+0x96c>
 8008f6a:	2601      	movs	r6, #1
 8008f6c:	4634      	mov	r4, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
 8008f6e:	682b      	ldr	r3, [r5, #0]
 8008f70:	009b      	lsls	r3, r3, #2
 8008f72:	d507      	bpl.n	8008f84 <HAL_RCCEx_PeriphCLKConfig+0x7a4>
    if(RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE)!=HAL_OK)
 8008f74:	2102      	movs	r1, #2
 8008f76:	f105 0024 	add.w	r0, r5, #36	; 0x24
 8008f7a:	f7ff fbb9 	bl	80086f0 <RCCEx_PLL3_Config>
      status=HAL_ERROR;
 8008f7e:	2800      	cmp	r0, #0
 8008f80:	bf18      	it	ne
 8008f82:	2601      	movne	r6, #1
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
 8008f84:	682b      	ldr	r3, [r5, #0]
 8008f86:	039f      	lsls	r7, r3, #14
 8008f88:	d50b      	bpl.n	8008fa2 <HAL_RCCEx_PeriphCLKConfig+0x7c2>
    switch(PeriphClkInit->RngClockSelection)
 8008f8a:	f8d5 1080 	ldr.w	r1, [r5, #128]	; 0x80
 8008f8e:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 8008f92:	f000 80f1 	beq.w	8009178 <HAL_RCCEx_PeriphCLKConfig+0x998>
 8008f96:	f200 80e1 	bhi.w	800915c <HAL_RCCEx_PeriphCLKConfig+0x97c>
 8008f9a:	2900      	cmp	r1, #0
 8008f9c:	f000 80e4 	beq.w	8009168 <HAL_RCCEx_PeriphCLKConfig+0x988>
 8008fa0:	2601      	movs	r6, #1
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SWPMI1) == RCC_PERIPHCLK_SWPMI1)
 8008fa2:	02dc      	lsls	r4, r3, #11
 8008fa4:	d506      	bpl.n	8008fb4 <HAL_RCCEx_PeriphCLKConfig+0x7d4>
    __HAL_RCC_SWPMI1_CONFIG(PeriphClkInit->Swpmi1ClockSelection);
 8008fa6:	493e      	ldr	r1, [pc, #248]	; (80090a0 <HAL_RCCEx_PeriphCLKConfig+0x8c0>)
 8008fa8:	6f68      	ldr	r0, [r5, #116]	; 0x74
 8008faa:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 8008fac:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
 8008fb0:	4302      	orrs	r2, r0
 8008fb2:	650a      	str	r2, [r1, #80]	; 0x50
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_HRTIM1) == RCC_PERIPHCLK_HRTIM1)
 8008fb4:	00d8      	lsls	r0, r3, #3
 8008fb6:	d507      	bpl.n	8008fc8 <HAL_RCCEx_PeriphCLKConfig+0x7e8>
    __HAL_RCC_HRTIM1_CONFIG(PeriphClkInit->Hrtim1ClockSelection);
 8008fb8:	4939      	ldr	r1, [pc, #228]	; (80090a0 <HAL_RCCEx_PeriphCLKConfig+0x8c0>)
 8008fba:	f8d5 00b8 	ldr.w	r0, [r5, #184]	; 0xb8
 8008fbe:	690a      	ldr	r2, [r1, #16]
 8008fc0:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 8008fc4:	4302      	orrs	r2, r0
 8008fc6:	610a      	str	r2, [r1, #16]
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
 8008fc8:	0299      	lsls	r1, r3, #10
 8008fca:	d506      	bpl.n	8008fda <HAL_RCCEx_PeriphCLKConfig+0x7fa>
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
 8008fcc:	4934      	ldr	r1, [pc, #208]	; (80090a0 <HAL_RCCEx_PeriphCLKConfig+0x8c0>)
 8008fce:	6ee8      	ldr	r0, [r5, #108]	; 0x6c
 8008fd0:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 8008fd2:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 8008fd6:	4302      	orrs	r2, r0
 8008fd8:	650a      	str	r2, [r1, #80]	; 0x50
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == RCC_PERIPHCLK_TIM)
 8008fda:	005a      	lsls	r2, r3, #1
 8008fdc:	d509      	bpl.n	8008ff2 <HAL_RCCEx_PeriphCLKConfig+0x812>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8008fde:	4a30      	ldr	r2, [pc, #192]	; (80090a0 <HAL_RCCEx_PeriphCLKConfig+0x8c0>)
 8008fe0:	6911      	ldr	r1, [r2, #16]
 8008fe2:	f421 4100 	bic.w	r1, r1, #32768	; 0x8000
 8008fe6:	6111      	str	r1, [r2, #16]
 8008fe8:	6911      	ldr	r1, [r2, #16]
 8008fea:	f8d5 00bc 	ldr.w	r0, [r5, #188]	; 0xbc
 8008fee:	4301      	orrs	r1, r0
 8008ff0:	6111      	str	r1, [r2, #16]
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CKPER) == RCC_PERIPHCLK_CKPER)
 8008ff2:	2b00      	cmp	r3, #0
 8008ff4:	da06      	bge.n	8009004 <HAL_RCCEx_PeriphCLKConfig+0x824>
    __HAL_RCC_CLKP_CONFIG(PeriphClkInit->CkperClockSelection);
 8008ff6:	492a      	ldr	r1, [pc, #168]	; (80090a0 <HAL_RCCEx_PeriphCLKConfig+0x8c0>)
 8008ff8:	6d68      	ldr	r0, [r5, #84]	; 0x54
 8008ffa:	6cca      	ldr	r2, [r1, #76]	; 0x4c
 8008ffc:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8009000:	4302      	orrs	r2, r0
 8009002:	64ca      	str	r2, [r1, #76]	; 0x4c
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
 8009004:	021b      	lsls	r3, r3, #8
 8009006:	d507      	bpl.n	8009018 <HAL_RCCEx_PeriphCLKConfig+0x838>
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
 8009008:	4a25      	ldr	r2, [pc, #148]	; (80090a0 <HAL_RCCEx_PeriphCLKConfig+0x8c0>)
 800900a:	f8d5 108c 	ldr.w	r1, [r5, #140]	; 0x8c
 800900e:	6d53      	ldr	r3, [r2, #84]	; 0x54
 8009010:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 8009014:	430b      	orrs	r3, r1
 8009016:	6553      	str	r3, [r2, #84]	; 0x54
}
 8009018:	1e30      	subs	r0, r6, #0
 800901a:	bf18      	it	ne
 800901c:	2001      	movne	r0, #1
 800901e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
 8009022:	2101      	movs	r1, #1
 8009024:	f105 0024 	add.w	r0, r5, #36	; 0x24
 8009028:	f7ff fb62 	bl	80086f0 <RCCEx_PLL3_Config>
 800902c:	e6dc      	b.n	8008de8 <HAL_RCCEx_PeriphCLKConfig+0x608>
    switch(PeriphClkInit->Lpuart1ClockSelection)
 800902e:	2601      	movs	r6, #1
 8009030:	4634      	mov	r4, r6
 8009032:	e6e5      	b.n	8008e00 <HAL_RCCEx_PeriphCLKConfig+0x620>
 8009034:	4626      	mov	r6, r4
 8009036:	e6e3      	b.n	8008e00 <HAL_RCCEx_PeriphCLKConfig+0x620>
    switch(PeriphClkInit->Lptim1ClockSelection)
 8009038:	f023 5280 	bic.w	r2, r3, #268435456	; 0x10000000
 800903c:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 8009040:	d003      	beq.n	800904a <HAL_RCCEx_PeriphCLKConfig+0x86a>
 8009042:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 8009046:	f47f aeed 	bne.w	8008e24 <HAL_RCCEx_PeriphCLKConfig+0x644>
    if(ret == HAL_OK)
 800904a:	b9a4      	cbnz	r4, 8009076 <HAL_RCCEx_PeriphCLKConfig+0x896>
      __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
 800904c:	4a14      	ldr	r2, [pc, #80]	; (80090a0 <HAL_RCCEx_PeriphCLKConfig+0x8c0>)
 800904e:	f8d5 1090 	ldr.w	r1, [r5, #144]	; 0x90
 8009052:	6d53      	ldr	r3, [r2, #84]	; 0x54
 8009054:	f023 43e0 	bic.w	r3, r3, #1879048192	; 0x70000000
 8009058:	430b      	orrs	r3, r1
 800905a:	6553      	str	r3, [r2, #84]	; 0x54
 800905c:	e6e4      	b.n	8008e28 <HAL_RCCEx_PeriphCLKConfig+0x648>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_P_UPDATE);
 800905e:	2100      	movs	r1, #0
 8009060:	1d28      	adds	r0, r5, #4
 8009062:	f7ff facd 	bl	8008600 <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE);
 8009066:	4604      	mov	r4, r0
      break;
 8009068:	e7ef      	b.n	800904a <HAL_RCCEx_PeriphCLKConfig+0x86a>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE);
 800906a:	2102      	movs	r1, #2
 800906c:	f105 0024 	add.w	r0, r5, #36	; 0x24
 8009070:	f7ff fb3e 	bl	80086f0 <RCCEx_PLL3_Config>
 8009074:	e7f7      	b.n	8009066 <HAL_RCCEx_PeriphCLKConfig+0x886>
 8009076:	4626      	mov	r6, r4
 8009078:	e6d6      	b.n	8008e28 <HAL_RCCEx_PeriphCLKConfig+0x648>
    switch(PeriphClkInit->Lptim2ClockSelection)
 800907a:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 800907e:	f5b2 5f80 	cmp.w	r2, #4096	; 0x1000
 8009082:	d003      	beq.n	800908c <HAL_RCCEx_PeriphCLKConfig+0x8ac>
 8009084:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 8009088:	f47f aee0 	bne.w	8008e4c <HAL_RCCEx_PeriphCLKConfig+0x66c>
    if(ret == HAL_OK)
 800908c:	b9b4      	cbnz	r4, 80090bc <HAL_RCCEx_PeriphCLKConfig+0x8dc>
      __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
 800908e:	4a04      	ldr	r2, [pc, #16]	; (80090a0 <HAL_RCCEx_PeriphCLKConfig+0x8c0>)
 8009090:	f8d5 109c 	ldr.w	r1, [r5, #156]	; 0x9c
 8009094:	6d93      	ldr	r3, [r2, #88]	; 0x58
 8009096:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 800909a:	430b      	orrs	r3, r1
 800909c:	6593      	str	r3, [r2, #88]	; 0x58
 800909e:	e6d7      	b.n	8008e50 <HAL_RCCEx_PeriphCLKConfig+0x670>
 80090a0:	58024400 	.word	0x58024400
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_P_UPDATE);
 80090a4:	2100      	movs	r1, #0
 80090a6:	1d28      	adds	r0, r5, #4
 80090a8:	f7ff faaa 	bl	8008600 <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE);
 80090ac:	4604      	mov	r4, r0
      break;
 80090ae:	e7ed      	b.n	800908c <HAL_RCCEx_PeriphCLKConfig+0x8ac>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE);
 80090b0:	2102      	movs	r1, #2
 80090b2:	f105 0024 	add.w	r0, r5, #36	; 0x24
 80090b6:	f7ff fb1b 	bl	80086f0 <RCCEx_PLL3_Config>
 80090ba:	e7f7      	b.n	80090ac <HAL_RCCEx_PeriphCLKConfig+0x8cc>
 80090bc:	4626      	mov	r6, r4
 80090be:	e6c7      	b.n	8008e50 <HAL_RCCEx_PeriphCLKConfig+0x670>
    switch(PeriphClkInit->Lptim345ClockSelection)
 80090c0:	f423 5200 	bic.w	r2, r3, #8192	; 0x2000
 80090c4:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 80090c8:	d003      	beq.n	80090d2 <HAL_RCCEx_PeriphCLKConfig+0x8f2>
 80090ca:	f5b3 4fc0 	cmp.w	r3, #24576	; 0x6000
 80090ce:	f47f aed1 	bne.w	8008e74 <HAL_RCCEx_PeriphCLKConfig+0x694>
    if(ret == HAL_OK)
 80090d2:	b9a4      	cbnz	r4, 80090fe <HAL_RCCEx_PeriphCLKConfig+0x91e>
      __HAL_RCC_LPTIM345_CONFIG(PeriphClkInit->Lptim345ClockSelection);
 80090d4:	4a2c      	ldr	r2, [pc, #176]	; (8009188 <HAL_RCCEx_PeriphCLKConfig+0x9a8>)
 80090d6:	f8d5 10a0 	ldr.w	r1, [r5, #160]	; 0xa0
 80090da:	6d93      	ldr	r3, [r2, #88]	; 0x58
 80090dc:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 80090e0:	430b      	orrs	r3, r1
 80090e2:	6593      	str	r3, [r2, #88]	; 0x58
 80090e4:	e6c8      	b.n	8008e78 <HAL_RCCEx_PeriphCLKConfig+0x698>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_P_UPDATE);
 80090e6:	2100      	movs	r1, #0
 80090e8:	1d28      	adds	r0, r5, #4
 80090ea:	f7ff fa89 	bl	8008600 <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE);
 80090ee:	4604      	mov	r4, r0
      break;
 80090f0:	e7ef      	b.n	80090d2 <HAL_RCCEx_PeriphCLKConfig+0x8f2>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE);
 80090f2:	2102      	movs	r1, #2
 80090f4:	f105 0024 	add.w	r0, r5, #36	; 0x24
 80090f8:	f7ff fafa 	bl	80086f0 <RCCEx_PLL3_Config>
 80090fc:	e7f7      	b.n	80090ee <HAL_RCCEx_PeriphCLKConfig+0x90e>
 80090fe:	4626      	mov	r6, r4
 8009100:	e6ba      	b.n	8008e78 <HAL_RCCEx_PeriphCLKConfig+0x698>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE);
 8009102:	2102      	movs	r1, #2
 8009104:	f105 0024 	add.w	r0, r5, #36	; 0x24
 8009108:	f7ff faf2 	bl	80086f0 <RCCEx_PLL3_Config>
 800910c:	e6f6      	b.n	8008efc <HAL_RCCEx_PeriphCLKConfig+0x71c>
    switch(PeriphClkInit->AdcClockSelection)
 800910e:	2601      	movs	r6, #1
 8009110:	4634      	mov	r4, r6
 8009112:	e6ff      	b.n	8008f14 <HAL_RCCEx_PeriphCLKConfig+0x734>
 8009114:	4626      	mov	r6, r4
 8009116:	e6fd      	b.n	8008f14 <HAL_RCCEx_PeriphCLKConfig+0x734>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
 8009118:	2101      	movs	r1, #1
 800911a:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800911e:	f7ff fae7 	bl	80086f0 <RCCEx_PLL3_Config>
 8009122:	4604      	mov	r4, r0
      break;
 8009124:	e70b      	b.n	8008f3e <HAL_RCCEx_PeriphCLKConfig+0x75e>
    switch(PeriphClkInit->UsbClockSelection)
 8009126:	2601      	movs	r6, #1
 8009128:	4634      	mov	r4, r6
 800912a:	e713      	b.n	8008f54 <HAL_RCCEx_PeriphCLKConfig+0x774>
 800912c:	4626      	mov	r6, r4
 800912e:	e711      	b.n	8008f54 <HAL_RCCEx_PeriphCLKConfig+0x774>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8009130:	4a15      	ldr	r2, [pc, #84]	; (8009188 <HAL_RCCEx_PeriphCLKConfig+0x9a8>)
 8009132:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8009134:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8009138:	62d3      	str	r3, [r2, #44]	; 0x2c
    if(ret == HAL_OK)
 800913a:	b96c      	cbnz	r4, 8009158 <HAL_RCCEx_PeriphCLKConfig+0x978>
      __HAL_RCC_SDMMC_CONFIG(PeriphClkInit->SdmmcClockSelection);
 800913c:	4a12      	ldr	r2, [pc, #72]	; (8009188 <HAL_RCCEx_PeriphCLKConfig+0x9a8>)
 800913e:	6d29      	ldr	r1, [r5, #80]	; 0x50
 8009140:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8009142:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8009146:	430b      	orrs	r3, r1
 8009148:	64d3      	str	r3, [r2, #76]	; 0x4c
 800914a:	e710      	b.n	8008f6e <HAL_RCCEx_PeriphCLKConfig+0x78e>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_R_UPDATE);
 800914c:	2102      	movs	r1, #2
 800914e:	1d28      	adds	r0, r5, #4
 8009150:	f7ff fa56 	bl	8008600 <RCCEx_PLL2_Config>
 8009154:	4604      	mov	r4, r0
      break;
 8009156:	e7f0      	b.n	800913a <HAL_RCCEx_PeriphCLKConfig+0x95a>
 8009158:	4626      	mov	r6, r4
 800915a:	e708      	b.n	8008f6e <HAL_RCCEx_PeriphCLKConfig+0x78e>
    switch(PeriphClkInit->RngClockSelection)
 800915c:	f421 7280 	bic.w	r2, r1, #256	; 0x100
 8009160:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 8009164:	f47f af1c 	bne.w	8008fa0 <HAL_RCCEx_PeriphCLKConfig+0x7c0>
    if(ret == HAL_OK)
 8009168:	b964      	cbnz	r4, 8009184 <HAL_RCCEx_PeriphCLKConfig+0x9a4>
      __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
 800916a:	4807      	ldr	r0, [pc, #28]	; (8009188 <HAL_RCCEx_PeriphCLKConfig+0x9a8>)
 800916c:	6d42      	ldr	r2, [r0, #84]	; 0x54
 800916e:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8009172:	430a      	orrs	r2, r1
 8009174:	6542      	str	r2, [r0, #84]	; 0x54
 8009176:	e714      	b.n	8008fa2 <HAL_RCCEx_PeriphCLKConfig+0x7c2>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8009178:	4803      	ldr	r0, [pc, #12]	; (8009188 <HAL_RCCEx_PeriphCLKConfig+0x9a8>)
 800917a:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 800917c:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8009180:	62c2      	str	r2, [r0, #44]	; 0x2c
      break;
 8009182:	e7f1      	b.n	8009168 <HAL_RCCEx_PeriphCLKConfig+0x988>
 8009184:	4626      	mov	r6, r4
 8009186:	e70c      	b.n	8008fa2 <HAL_RCCEx_PeriphCLKConfig+0x7c2>
 8009188:	58024400 	.word	0x58024400

0800918c <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 800918c:	b538      	push	{r3, r4, r5, lr}
 800918e:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 8009190:	4604      	mov	r4, r0
 8009192:	b1f0      	cbz	r0, 80091d2 <HAL_SDRAM_Init+0x46>
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 8009194:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8009198:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800919c:	b91b      	cbnz	r3, 80091a6 <HAL_SDRAM_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 800919e:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 80091a2:	f7f8 f847 	bl	8001234 <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 80091a6:	2302      	movs	r3, #2

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 80091a8:	1d21      	adds	r1, r4, #4
 80091aa:	6820      	ldr	r0, [r4, #0]
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 80091ac:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 80091b0:	f000 fa1f 	bl	80095f2 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 80091b4:	6862      	ldr	r2, [r4, #4]
 80091b6:	4629      	mov	r1, r5
 80091b8:	6820      	ldr	r0, [r4, #0]
 80091ba:	f000 fa55 	bl	8009668 <FMC_SDRAM_Timing_Init>

  /* Enable FMC Peripheral */
  __FMC_ENABLE();
 80091be:	4a06      	ldr	r2, [pc, #24]	; (80091d8 <HAL_SDRAM_Init+0x4c>)
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;

  return HAL_OK;
 80091c0:	2000      	movs	r0, #0
  __FMC_ENABLE();
 80091c2:	6813      	ldr	r3, [r2, #0]
 80091c4:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 80091c8:	6013      	str	r3, [r2, #0]
  hsdram->State = HAL_SDRAM_STATE_READY;
 80091ca:	2301      	movs	r3, #1
 80091cc:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
}
 80091d0:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80091d2:	2001      	movs	r0, #1
 80091d4:	e7fc      	b.n	80091d0 <HAL_SDRAM_Init+0x44>
 80091d6:	bf00      	nop
 80091d8:	52004000 	.word	0x52004000

080091dc <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
 80091dc:	b510      	push	{r4, lr}
 80091de:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
 80091e0:	f7f8 f8b4 	bl	800134c <HAL_SDRAM_MspDeInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */

  /* Configure the SDRAM registers with their reset values */
  (void)FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
 80091e4:	e9d4 0100 	ldrd	r0, r1, [r4]
 80091e8:	f000 fa74 	bl	80096d4 <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
 80091ec:	2000      	movs	r0, #0
 80091ee:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
 80091f2:	f884 002d 	strb.w	r0, [r4, #45]	; 0x2d

  return HAL_OK;
}
 80091f6:	bd10      	pop	{r4, pc}

080091f8 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 80091f8:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 80091fa:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
{
 80091fe:	4605      	mov	r5, r0
 8009200:	460e      	mov	r6, r1

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 8009202:	2b02      	cmp	r3, #2
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8009204:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 8009206:	d010      	beq.n	800922a <HAL_SDRAM_SendCommand+0x32>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 8009208:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 800920c:	2c01      	cmp	r4, #1
 800920e:	d110      	bne.n	8009232 <HAL_SDRAM_SendCommand+0x3a>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8009210:	2302      	movs	r3, #2

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8009212:	6828      	ldr	r0, [r5, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8009214:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8009218:	f000 fa6b 	bl	80096f2 <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800921c:	6833      	ldr	r3, [r6, #0]
 800921e:	2b02      	cmp	r3, #2
 8009220:	d104      	bne.n	800922c <HAL_SDRAM_SendCommand+0x34>
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8009222:	2305      	movs	r3, #5
 8009224:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8009228:	2000      	movs	r0, #0
}
 800922a:	bd70      	pop	{r4, r5, r6, pc}
      hsdram->State = HAL_SDRAM_STATE_READY;
 800922c:	f885 402c 	strb.w	r4, [r5, #44]	; 0x2c
 8009230:	e7fa      	b.n	8009228 <HAL_SDRAM_SendCommand+0x30>
    return HAL_ERROR;
 8009232:	2001      	movs	r0, #1
 8009234:	e7f9      	b.n	800922a <HAL_SDRAM_SendCommand+0x32>

08009236 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8009236:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 8009238:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
{
 800923c:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800923e:	2b02      	cmp	r3, #2
 8009240:	b2d8      	uxtb	r0, r3
 8009242:	d00d      	beq.n	8009260 <HAL_SDRAM_ProgramRefreshRate+0x2a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 8009244:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8009248:	2b01      	cmp	r3, #1
 800924a:	b2dd      	uxtb	r5, r3
 800924c:	d109      	bne.n	8009262 <HAL_SDRAM_ProgramRefreshRate+0x2c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800924e:	2302      	movs	r3, #2

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8009250:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8009252:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8009256:	f000 fa5e 	bl	8009716 <FMC_SDRAM_ProgramRefreshRate>
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 800925a:	2000      	movs	r0, #0
    hsdram->State = HAL_SDRAM_STATE_READY;
 800925c:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
}
 8009260:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8009262:	2001      	movs	r0, #1
 8009264:	e7fc      	b.n	8009260 <HAL_SDRAM_ProgramRefreshRate+0x2a>

08009266 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 8009266:	4770      	bx	lr

08009268 <HAL_TIM_Base_Start>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 8009268:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800926c:	2b01      	cmp	r3, #1
 800926e:	d12f      	bne.n	80092d0 <HAL_TIM_Base_Start+0x68>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8009270:	2302      	movs	r3, #2

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8009272:	4a18      	ldr	r2, [pc, #96]	; (80092d4 <HAL_TIM_Base_Start+0x6c>)
  htim->State = HAL_TIM_STATE_BUSY;
 8009274:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8009278:	6803      	ldr	r3, [r0, #0]
 800927a:	4293      	cmp	r3, r2
 800927c:	d01a      	beq.n	80092b4 <HAL_TIM_Base_Start+0x4c>
 800927e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8009282:	d017      	beq.n	80092b4 <HAL_TIM_Base_Start+0x4c>
 8009284:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8009288:	4293      	cmp	r3, r2
 800928a:	d013      	beq.n	80092b4 <HAL_TIM_Base_Start+0x4c>
 800928c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8009290:	4293      	cmp	r3, r2
 8009292:	d00f      	beq.n	80092b4 <HAL_TIM_Base_Start+0x4c>
 8009294:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8009298:	4293      	cmp	r3, r2
 800929a:	d00b      	beq.n	80092b4 <HAL_TIM_Base_Start+0x4c>
 800929c:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 80092a0:	4293      	cmp	r3, r2
 80092a2:	d007      	beq.n	80092b4 <HAL_TIM_Base_Start+0x4c>
 80092a4:	f5a2 426c 	sub.w	r2, r2, #60416	; 0xec00
 80092a8:	4293      	cmp	r3, r2
 80092aa:	d003      	beq.n	80092b4 <HAL_TIM_Base_Start+0x4c>
 80092ac:	f502 3294 	add.w	r2, r2, #75776	; 0x12800
 80092b0:	4293      	cmp	r3, r2
 80092b2:	d107      	bne.n	80092c4 <HAL_TIM_Base_Start+0x5c>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 80092b4:	6899      	ldr	r1, [r3, #8]
 80092b6:	4a08      	ldr	r2, [pc, #32]	; (80092d8 <HAL_TIM_Base_Start+0x70>)
 80092b8:	400a      	ands	r2, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 80092ba:	2a06      	cmp	r2, #6
 80092bc:	d006      	beq.n	80092cc <HAL_TIM_Base_Start+0x64>
 80092be:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 80092c2:	d003      	beq.n	80092cc <HAL_TIM_Base_Start+0x64>
      __HAL_TIM_ENABLE(htim);
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 80092c4:	681a      	ldr	r2, [r3, #0]
 80092c6:	f042 0201 	orr.w	r2, r2, #1
 80092ca:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 80092cc:	2000      	movs	r0, #0
}
 80092ce:	4770      	bx	lr
    return HAL_ERROR;
 80092d0:	2001      	movs	r0, #1
 80092d2:	4770      	bx	lr
 80092d4:	40010000 	.word	0x40010000
 80092d8:	00010007 	.word	0x00010007

080092dc <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 80092dc:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80092e0:	2b01      	cmp	r3, #1
 80092e2:	d133      	bne.n	800934c <HAL_TIM_Base_Start_IT+0x70>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 80092e4:	2302      	movs	r3, #2
 80092e6:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 80092ea:	6803      	ldr	r3, [r0, #0]
 80092ec:	68da      	ldr	r2, [r3, #12]
 80092ee:	f042 0201 	orr.w	r2, r2, #1
 80092f2:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 80092f4:	4a16      	ldr	r2, [pc, #88]	; (8009350 <HAL_TIM_Base_Start_IT+0x74>)
 80092f6:	4293      	cmp	r3, r2
 80092f8:	d01a      	beq.n	8009330 <HAL_TIM_Base_Start_IT+0x54>
 80092fa:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80092fe:	d017      	beq.n	8009330 <HAL_TIM_Base_Start_IT+0x54>
 8009300:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8009304:	4293      	cmp	r3, r2
 8009306:	d013      	beq.n	8009330 <HAL_TIM_Base_Start_IT+0x54>
 8009308:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800930c:	4293      	cmp	r3, r2
 800930e:	d00f      	beq.n	8009330 <HAL_TIM_Base_Start_IT+0x54>
 8009310:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8009314:	4293      	cmp	r3, r2
 8009316:	d00b      	beq.n	8009330 <HAL_TIM_Base_Start_IT+0x54>
 8009318:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800931c:	4293      	cmp	r3, r2
 800931e:	d007      	beq.n	8009330 <HAL_TIM_Base_Start_IT+0x54>
 8009320:	f5a2 426c 	sub.w	r2, r2, #60416	; 0xec00
 8009324:	4293      	cmp	r3, r2
 8009326:	d003      	beq.n	8009330 <HAL_TIM_Base_Start_IT+0x54>
 8009328:	f502 3294 	add.w	r2, r2, #75776	; 0x12800
 800932c:	4293      	cmp	r3, r2
 800932e:	d107      	bne.n	8009340 <HAL_TIM_Base_Start_IT+0x64>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8009330:	6899      	ldr	r1, [r3, #8]
 8009332:	4a08      	ldr	r2, [pc, #32]	; (8009354 <HAL_TIM_Base_Start_IT+0x78>)
 8009334:	400a      	ands	r2, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8009336:	2a06      	cmp	r2, #6
 8009338:	d006      	beq.n	8009348 <HAL_TIM_Base_Start_IT+0x6c>
 800933a:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 800933e:	d003      	beq.n	8009348 <HAL_TIM_Base_Start_IT+0x6c>
      __HAL_TIM_ENABLE(htim);
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 8009340:	681a      	ldr	r2, [r3, #0]
 8009342:	f042 0201 	orr.w	r2, r2, #1
 8009346:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 8009348:	2000      	movs	r0, #0
}
 800934a:	4770      	bx	lr
    return HAL_ERROR;
 800934c:	2001      	movs	r0, #1
 800934e:	4770      	bx	lr
 8009350:	40010000 	.word	0x40010000
 8009354:	00010007 	.word	0x00010007

08009358 <HAL_TIM_OC_DelayElapsedCallback>:
 8009358:	4770      	bx	lr

0800935a <HAL_TIM_IC_CaptureCallback>:
 800935a:	4770      	bx	lr

0800935c <HAL_TIM_PWM_PulseFinishedCallback>:
 800935c:	4770      	bx	lr

0800935e <HAL_TIM_TriggerCallback>:
 800935e:	4770      	bx	lr

08009360 <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8009360:	6803      	ldr	r3, [r0, #0]
 8009362:	691a      	ldr	r2, [r3, #16]
 8009364:	0791      	lsls	r1, r2, #30
{
 8009366:	b510      	push	{r4, lr}
 8009368:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800936a:	d50f      	bpl.n	800938c <HAL_TIM_IRQHandler+0x2c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800936c:	68da      	ldr	r2, [r3, #12]
 800936e:	0792      	lsls	r2, r2, #30
 8009370:	d50c      	bpl.n	800938c <HAL_TIM_IRQHandler+0x2c>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 8009372:	f06f 0202 	mvn.w	r2, #2
 8009376:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8009378:	2201      	movs	r2, #1
 800937a:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800937c:	699b      	ldr	r3, [r3, #24]
 800937e:	0799      	lsls	r1, r3, #30
 8009380:	f000 8085 	beq.w	800948e <HAL_TIM_IRQHandler+0x12e>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 8009384:	f7ff ffe9 	bl	800935a <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8009388:	2300      	movs	r3, #0
 800938a:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800938c:	6823      	ldr	r3, [r4, #0]
 800938e:	691a      	ldr	r2, [r3, #16]
 8009390:	0752      	lsls	r2, r2, #29
 8009392:	d510      	bpl.n	80093b6 <HAL_TIM_IRQHandler+0x56>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 8009394:	68da      	ldr	r2, [r3, #12]
 8009396:	0750      	lsls	r0, r2, #29
 8009398:	d50d      	bpl.n	80093b6 <HAL_TIM_IRQHandler+0x56>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800939a:	f06f 0204 	mvn.w	r2, #4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800939e:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 80093a0:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 80093a2:	2202      	movs	r2, #2
 80093a4:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80093a6:	699b      	ldr	r3, [r3, #24]
 80093a8:	f413 7f40 	tst.w	r3, #768	; 0x300
 80093ac:	d075      	beq.n	800949a <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_IC_CaptureCallback(htim);
 80093ae:	f7ff ffd4 	bl	800935a <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80093b2:	2300      	movs	r3, #0
 80093b4:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 80093b6:	6823      	ldr	r3, [r4, #0]
 80093b8:	691a      	ldr	r2, [r3, #16]
 80093ba:	0711      	lsls	r1, r2, #28
 80093bc:	d50f      	bpl.n	80093de <HAL_TIM_IRQHandler+0x7e>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 80093be:	68da      	ldr	r2, [r3, #12]
 80093c0:	0712      	lsls	r2, r2, #28
 80093c2:	d50c      	bpl.n	80093de <HAL_TIM_IRQHandler+0x7e>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 80093c4:	f06f 0208 	mvn.w	r2, #8
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80093c8:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 80093ca:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 80093cc:	2204      	movs	r2, #4
 80093ce:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80093d0:	69db      	ldr	r3, [r3, #28]
 80093d2:	079b      	lsls	r3, r3, #30
 80093d4:	d067      	beq.n	80094a6 <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 80093d6:	f7ff ffc0 	bl	800935a <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80093da:	2300      	movs	r3, #0
 80093dc:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 80093de:	6823      	ldr	r3, [r4, #0]
 80093e0:	691a      	ldr	r2, [r3, #16]
 80093e2:	06d0      	lsls	r0, r2, #27
 80093e4:	d510      	bpl.n	8009408 <HAL_TIM_IRQHandler+0xa8>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 80093e6:	68da      	ldr	r2, [r3, #12]
 80093e8:	06d1      	lsls	r1, r2, #27
 80093ea:	d50d      	bpl.n	8009408 <HAL_TIM_IRQHandler+0xa8>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 80093ec:	f06f 0210 	mvn.w	r2, #16
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80093f0:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 80093f2:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 80093f4:	2208      	movs	r2, #8
 80093f6:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80093f8:	69db      	ldr	r3, [r3, #28]
 80093fa:	f413 7f40 	tst.w	r3, #768	; 0x300
 80093fe:	d058      	beq.n	80094b2 <HAL_TIM_IRQHandler+0x152>
        HAL_TIM_IC_CaptureCallback(htim);
 8009400:	f7ff ffab 	bl	800935a <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8009404:	2300      	movs	r3, #0
 8009406:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 8009408:	6823      	ldr	r3, [r4, #0]
 800940a:	691a      	ldr	r2, [r3, #16]
 800940c:	07d2      	lsls	r2, r2, #31
 800940e:	d508      	bpl.n	8009422 <HAL_TIM_IRQHandler+0xc2>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 8009410:	68da      	ldr	r2, [r3, #12]
 8009412:	07d0      	lsls	r0, r2, #31
 8009414:	d505      	bpl.n	8009422 <HAL_TIM_IRQHandler+0xc2>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 8009416:	f06f 0201 	mvn.w	r2, #1
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 800941a:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800941c:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800941e:	f7f7 fd5d 	bl	8000edc <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 8009422:	6823      	ldr	r3, [r4, #0]
 8009424:	691a      	ldr	r2, [r3, #16]
 8009426:	0611      	lsls	r1, r2, #24
 8009428:	d508      	bpl.n	800943c <HAL_TIM_IRQHandler+0xdc>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800942a:	68da      	ldr	r2, [r3, #12]
 800942c:	0612      	lsls	r2, r2, #24
 800942e:	d505      	bpl.n	800943c <HAL_TIM_IRQHandler+0xdc>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8009430:	f06f 0280 	mvn.w	r2, #128	; 0x80
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 8009434:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8009436:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 8009438:	f000 f8d9 	bl	80095ee <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break2 input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK2) != RESET)
 800943c:	6823      	ldr	r3, [r4, #0]
 800943e:	691a      	ldr	r2, [r3, #16]
 8009440:	05d0      	lsls	r0, r2, #23
 8009442:	d508      	bpl.n	8009456 <HAL_TIM_IRQHandler+0xf6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8009444:	68da      	ldr	r2, [r3, #12]
 8009446:	0611      	lsls	r1, r2, #24
 8009448:	d505      	bpl.n	8009456 <HAL_TIM_IRQHandler+0xf6>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
 800944a:	f46f 7280 	mvn.w	r2, #256	; 0x100
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->Break2Callback(htim);
#else
      HAL_TIMEx_Break2Callback(htim);
 800944e:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
 8009450:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_Break2Callback(htim);
 8009452:	f000 f8cd 	bl	80095f0 <HAL_TIMEx_Break2Callback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 8009456:	6823      	ldr	r3, [r4, #0]
 8009458:	691a      	ldr	r2, [r3, #16]
 800945a:	0652      	lsls	r2, r2, #25
 800945c:	d508      	bpl.n	8009470 <HAL_TIM_IRQHandler+0x110>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800945e:	68da      	ldr	r2, [r3, #12]
 8009460:	0650      	lsls	r0, r2, #25
 8009462:	d505      	bpl.n	8009470 <HAL_TIM_IRQHandler+0x110>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8009464:	f06f 0240 	mvn.w	r2, #64	; 0x40
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 8009468:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800946a:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800946c:	f7ff ff77 	bl	800935e <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 8009470:	6823      	ldr	r3, [r4, #0]
 8009472:	691a      	ldr	r2, [r3, #16]
 8009474:	0691      	lsls	r1, r2, #26
 8009476:	d522      	bpl.n	80094be <HAL_TIM_IRQHandler+0x15e>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 8009478:	68da      	ldr	r2, [r3, #12]
 800947a:	0692      	lsls	r2, r2, #26
 800947c:	d51f      	bpl.n	80094be <HAL_TIM_IRQHandler+0x15e>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800947e:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 8009482:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8009484:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 8009486:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800948a:	f000 b8af 	b.w	80095ec <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800948e:	f7ff ff63 	bl	8009358 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8009492:	4620      	mov	r0, r4
 8009494:	f7ff ff62 	bl	800935c <HAL_TIM_PWM_PulseFinishedCallback>
 8009498:	e776      	b.n	8009388 <HAL_TIM_IRQHandler+0x28>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800949a:	f7ff ff5d 	bl	8009358 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800949e:	4620      	mov	r0, r4
 80094a0:	f7ff ff5c 	bl	800935c <HAL_TIM_PWM_PulseFinishedCallback>
 80094a4:	e785      	b.n	80093b2 <HAL_TIM_IRQHandler+0x52>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80094a6:	f7ff ff57 	bl	8009358 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80094aa:	4620      	mov	r0, r4
 80094ac:	f7ff ff56 	bl	800935c <HAL_TIM_PWM_PulseFinishedCallback>
 80094b0:	e793      	b.n	80093da <HAL_TIM_IRQHandler+0x7a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80094b2:	f7ff ff51 	bl	8009358 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80094b6:	4620      	mov	r0, r4
 80094b8:	f7ff ff50 	bl	800935c <HAL_TIM_PWM_PulseFinishedCallback>
 80094bc:	e7a2      	b.n	8009404 <HAL_TIM_IRQHandler+0xa4>
}
 80094be:	bd10      	pop	{r4, pc}

080094c0 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80094c0:	4a30      	ldr	r2, [pc, #192]	; (8009584 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 80094c2:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80094c4:	4290      	cmp	r0, r2
 80094c6:	d012      	beq.n	80094ee <TIM_Base_SetConfig+0x2e>
 80094c8:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80094cc:	d00f      	beq.n	80094ee <TIM_Base_SetConfig+0x2e>
 80094ce:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 80094d2:	4290      	cmp	r0, r2
 80094d4:	d00b      	beq.n	80094ee <TIM_Base_SetConfig+0x2e>
 80094d6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80094da:	4290      	cmp	r0, r2
 80094dc:	d007      	beq.n	80094ee <TIM_Base_SetConfig+0x2e>
 80094de:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80094e2:	4290      	cmp	r0, r2
 80094e4:	d003      	beq.n	80094ee <TIM_Base_SetConfig+0x2e>
 80094e6:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 80094ea:	4290      	cmp	r0, r2
 80094ec:	d119      	bne.n	8009522 <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 80094ee:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 80094f0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 80094f4:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 80094f6:	4a23      	ldr	r2, [pc, #140]	; (8009584 <TIM_Base_SetConfig+0xc4>)
 80094f8:	4290      	cmp	r0, r2
 80094fa:	d01d      	beq.n	8009538 <TIM_Base_SetConfig+0x78>
 80094fc:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8009500:	d01a      	beq.n	8009538 <TIM_Base_SetConfig+0x78>
 8009502:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8009506:	4290      	cmp	r0, r2
 8009508:	d016      	beq.n	8009538 <TIM_Base_SetConfig+0x78>
 800950a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800950e:	4290      	cmp	r0, r2
 8009510:	d012      	beq.n	8009538 <TIM_Base_SetConfig+0x78>
 8009512:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8009516:	4290      	cmp	r0, r2
 8009518:	d00e      	beq.n	8009538 <TIM_Base_SetConfig+0x78>
 800951a:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800951e:	4290      	cmp	r0, r2
 8009520:	d00a      	beq.n	8009538 <TIM_Base_SetConfig+0x78>
 8009522:	4a19      	ldr	r2, [pc, #100]	; (8009588 <TIM_Base_SetConfig+0xc8>)
 8009524:	4290      	cmp	r0, r2
 8009526:	d007      	beq.n	8009538 <TIM_Base_SetConfig+0x78>
 8009528:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800952c:	4290      	cmp	r0, r2
 800952e:	d003      	beq.n	8009538 <TIM_Base_SetConfig+0x78>
 8009530:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8009534:	4290      	cmp	r0, r2
 8009536:	d103      	bne.n	8009540 <TIM_Base_SetConfig+0x80>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 8009538:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800953c:	68ca      	ldr	r2, [r1, #12]
 800953e:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8009540:	694a      	ldr	r2, [r1, #20]
 8009542:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8009546:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 8009548:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800954a:	688b      	ldr	r3, [r1, #8]
 800954c:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800954e:	680b      	ldr	r3, [r1, #0]
 8009550:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8009552:	4b0c      	ldr	r3, [pc, #48]	; (8009584 <TIM_Base_SetConfig+0xc4>)
 8009554:	4298      	cmp	r0, r3
 8009556:	d00f      	beq.n	8009578 <TIM_Base_SetConfig+0xb8>
 8009558:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800955c:	4298      	cmp	r0, r3
 800955e:	d00b      	beq.n	8009578 <TIM_Base_SetConfig+0xb8>
 8009560:	f503 5370 	add.w	r3, r3, #15360	; 0x3c00
 8009564:	4298      	cmp	r0, r3
 8009566:	d007      	beq.n	8009578 <TIM_Base_SetConfig+0xb8>
 8009568:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800956c:	4298      	cmp	r0, r3
 800956e:	d003      	beq.n	8009578 <TIM_Base_SetConfig+0xb8>
 8009570:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8009574:	4298      	cmp	r0, r3
 8009576:	d101      	bne.n	800957c <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8009578:	690b      	ldr	r3, [r1, #16]
 800957a:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800957c:	2301      	movs	r3, #1
 800957e:	6143      	str	r3, [r0, #20]
}
 8009580:	4770      	bx	lr
 8009582:	bf00      	nop
 8009584:	40010000 	.word	0x40010000
 8009588:	40014000 	.word	0x40014000

0800958c <HAL_TIM_Base_Init>:
{
 800958c:	b510      	push	{r4, lr}
  if (htim == NULL)
 800958e:	4604      	mov	r4, r0
 8009590:	b350      	cbz	r0, 80095e8 <HAL_TIM_Base_Init+0x5c>
  if (htim->State == HAL_TIM_STATE_RESET)
 8009592:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8009596:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800959a:	b91b      	cbnz	r3, 80095a4 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 800959c:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 80095a0:	f7ff fe61 	bl	8009266 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 80095a4:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80095a6:	6820      	ldr	r0, [r4, #0]
 80095a8:	1d21      	adds	r1, r4, #4
  htim->State = HAL_TIM_STATE_BUSY;
 80095aa:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80095ae:	f7ff ff87 	bl	80094c0 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 80095b2:	2301      	movs	r3, #1
  return HAL_OK;
 80095b4:	2000      	movs	r0, #0
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 80095b6:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80095ba:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 80095be:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 80095c2:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 80095c6:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
 80095ca:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80095ce:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80095d2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 80095d6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80095da:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
 80095de:	f884 3047 	strb.w	r3, [r4, #71]	; 0x47
  htim->State = HAL_TIM_STATE_READY;
 80095e2:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
 80095e6:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80095e8:	2001      	movs	r0, #1
 80095ea:	e7fc      	b.n	80095e6 <HAL_TIM_Base_Init+0x5a>

080095ec <HAL_TIMEx_CommutCallback>:
 80095ec:	4770      	bx	lr

080095ee <HAL_TIMEx_BreakCallback>:
 80095ee:	4770      	bx	lr

080095f0 <HAL_TIMEx_Break2Callback>:
 80095f0:	4770      	bx	lr

080095f2 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 80095f2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
 80095f6:	680a      	ldr	r2, [r1, #0]
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 80095f8:	f8d1 9024 	ldr.w	r9, [r1, #36]	; 0x24
 80095fc:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
 8009600:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
 8009604:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
 8009608:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
 800960c:	4323      	orrs	r3, r4
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800960e:	b9a2      	cbnz	r2, 800963a <FMC_SDRAM_Init+0x48>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8009610:	ea43 0209 	orr.w	r2, r3, r9
 8009614:	6801      	ldr	r1, [r0, #0]
 8009616:	432a      	orrs	r2, r5
 8009618:	f421 41ff 	bic.w	r1, r1, #32640	; 0x7f80
 800961c:	ea42 0308 	orr.w	r3, r2, r8
 8009620:	f021 017f 	bic.w	r1, r1, #127	; 0x7f
 8009624:	ea43 030e 	orr.w	r3, r3, lr
 8009628:	ea43 030c 	orr.w	r3, r3, ip
 800962c:	433b      	orrs	r3, r7
 800962e:	4333      	orrs	r3, r6
 8009630:	430b      	orrs	r3, r1
 8009632:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 8009634:	2000      	movs	r0, #0
 8009636:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800963a:	6802      	ldr	r2, [r0, #0]
 800963c:	ea43 0309 	orr.w	r3, r3, r9
 8009640:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
 8009644:	4313      	orrs	r3, r2
 8009646:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 8009648:	ea45 0308 	orr.w	r3, r5, r8
 800964c:	6842      	ldr	r2, [r0, #4]
 800964e:	ea43 030e 	orr.w	r3, r3, lr
 8009652:	f422 42ff 	bic.w	r2, r2, #32640	; 0x7f80
 8009656:	ea43 030c 	orr.w	r3, r3, ip
 800965a:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
 800965e:	433b      	orrs	r3, r7
 8009660:	4333      	orrs	r3, r6
 8009662:	4313      	orrs	r3, r2
 8009664:	6043      	str	r3, [r0, #4]
 8009666:	e7e5      	b.n	8009634 <FMC_SDRAM_Init+0x42>

08009668 <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8009668:	68cb      	ldr	r3, [r1, #12]
 800966a:	f103 3cff 	add.w	ip, r3, #4294967295
 800966e:	694b      	ldr	r3, [r1, #20]
{
 8009670:	b5f0      	push	{r4, r5, r6, r7, lr}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8009672:	3b01      	subs	r3, #1
 8009674:	680f      	ldr	r7, [r1, #0]
 8009676:	684c      	ldr	r4, [r1, #4]
 8009678:	688e      	ldr	r6, [r1, #8]
 800967a:	051b      	lsls	r3, r3, #20
 800967c:	690d      	ldr	r5, [r1, #16]
 800967e:	3c01      	subs	r4, #1
 8009680:	6989      	ldr	r1, [r1, #24]
 8009682:	3e01      	subs	r6, #1
 8009684:	3d01      	subs	r5, #1
 8009686:	3f01      	subs	r7, #1
 8009688:	3901      	subs	r1, #1
 800968a:	0124      	lsls	r4, r4, #4
 800968c:	0236      	lsls	r6, r6, #8
 800968e:	042d      	lsls	r5, r5, #16
 8009690:	0609      	lsls	r1, r1, #24
 8009692:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
  if (Bank == FMC_SDRAM_BANK1)
 8009696:	b95a      	cbnz	r2, 80096b0 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8009698:	433b      	orrs	r3, r7
 800969a:	6882      	ldr	r2, [r0, #8]
 800969c:	4323      	orrs	r3, r4
 800969e:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
 80096a2:	4333      	orrs	r3, r6
 80096a4:	432b      	orrs	r3, r5
 80096a6:	430b      	orrs	r3, r1
 80096a8:	4313      	orrs	r3, r2
 80096aa:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTRx_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTRx_TRCD_Pos)));
  }

  return HAL_OK;
}
 80096ac:	2000      	movs	r0, #0
 80096ae:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 80096b0:	6882      	ldr	r2, [r0, #8]
 80096b2:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 80096b6:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
 80096ba:	431a      	orrs	r2, r3
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 80096bc:	ea44 0306 	orr.w	r3, r4, r6
 80096c0:	433b      	orrs	r3, r7
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 80096c2:	6082      	str	r2, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 80096c4:	68c2      	ldr	r2, [r0, #12]
 80096c6:	432b      	orrs	r3, r5
 80096c8:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
 80096cc:	430b      	orrs	r3, r1
 80096ce:	4313      	orrs	r3, r2
 80096d0:	60c3      	str	r3, [r0, #12]
 80096d2:	e7eb      	b.n	80096ac <FMC_SDRAM_Timing_Init+0x44>

080096d4 <FMC_SDRAM_DeInit>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
 80096d4:	f44f 7234 	mov.w	r2, #720	; 0x2d0
 80096d8:	eb00 0381 	add.w	r3, r0, r1, lsl #2
 80096dc:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
  Device->SDTR[Bank] = 0x0FFFFFFFU;
 80096e0:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
 80096e4:	609a      	str	r2, [r3, #8]
  Device->SDCMR      = 0x00000000U;
 80096e6:	2300      	movs	r3, #0
 80096e8:	6103      	str	r3, [r0, #16]
  Device->SDRTR      = 0x00000000U;
 80096ea:	6143      	str	r3, [r0, #20]
  Device->SDSR       = 0x00000000U;
 80096ec:	6183      	str	r3, [r0, #24]

  return HAL_OK;
}
 80096ee:	4618      	mov	r0, r3
 80096f0:	4770      	bx	lr

080096f2 <FMC_SDRAM_SendCommand>:
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 80096f2:	6902      	ldr	r2, [r0, #16]
{
 80096f4:	b510      	push	{r4, lr}
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 80096f6:	e9d1 3400 	ldrd	r3, r4, [r1]
 80096fa:	0d92      	lsrs	r2, r2, #22
 80096fc:	4323      	orrs	r3, r4
 80096fe:	68cc      	ldr	r4, [r1, #12]
 8009700:	0592      	lsls	r2, r2, #22
 8009702:	ea43 2344 	orr.w	r3, r3, r4, lsl #9
 8009706:	4313      	orrs	r3, r2
 8009708:	688a      	ldr	r2, [r1, #8]
 800970a:	3a01      	subs	r2, #1
 800970c:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8009710:	6103      	str	r3, [r0, #16]
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Timeout);
  return HAL_OK;
}
 8009712:	2000      	movs	r0, #0
 8009714:	bd10      	pop	{r4, pc}

08009716 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 8009716:	6943      	ldr	r3, [r0, #20]
 8009718:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 800971c:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 8009720:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 8009724:	6141      	str	r1, [r0, #20]

  return HAL_OK;
}
 8009726:	2000      	movs	r0, #0
 8009728:	4770      	bx	lr

0800972a <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800972a:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800972c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009730:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 8009732:	f001 fe09 	bl	800b348 <xTaskGetSchedulerState>
 8009736:	2801      	cmp	r0, #1
 8009738:	d003      	beq.n	8009742 <SysTick_Handler+0x18>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800973a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800973e:	f000 bbd1 	b.w	8009ee4 <xPortSysTickHandler>
}
 8009742:	bd08      	pop	{r3, pc}

08009744 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8009744:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8009748:	b92b      	cbnz	r3, 8009756 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800974a:	4b06      	ldr	r3, [pc, #24]	; (8009764 <osKernelInitialize+0x20>)
 800974c:	6818      	ldr	r0, [r3, #0]
 800974e:	b928      	cbnz	r0, 800975c <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8009750:	2201      	movs	r2, #1
 8009752:	601a      	str	r2, [r3, #0]
      stat = osOK;
 8009754:	4770      	bx	lr
    stat = osErrorISR;
 8009756:	f06f 0005 	mvn.w	r0, #5
 800975a:	4770      	bx	lr
    } else {
      stat = osError;
 800975c:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 8009760:	4770      	bx	lr
 8009762:	bf00      	nop
 8009764:	2400557c 	.word	0x2400557c

08009768 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8009768:	b510      	push	{r4, lr}
 800976a:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800976e:	b95c      	cbnz	r4, 8009788 <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 8009770:	4b08      	ldr	r3, [pc, #32]	; (8009794 <osKernelStart+0x2c>)
 8009772:	681a      	ldr	r2, [r3, #0]
 8009774:	2a01      	cmp	r2, #1
 8009776:	d10a      	bne.n	800978e <osKernelStart+0x26>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009778:	4a07      	ldr	r2, [pc, #28]	; (8009798 <osKernelStart+0x30>)
 800977a:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800977c:	2202      	movs	r2, #2
 800977e:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 8009780:	f001 fc86 	bl	800b090 <vTaskStartScheduler>
      stat = osOK;
 8009784:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 8009786:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8009788:	f06f 0005 	mvn.w	r0, #5
 800978c:	e7fb      	b.n	8009786 <osKernelStart+0x1e>
      stat = osError;
 800978e:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 8009792:	e7f8      	b.n	8009786 <osKernelStart+0x1e>
 8009794:	2400557c 	.word	0x2400557c
 8009798:	e000ed00 	.word	0xe000ed00

0800979c <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800979c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800979e:	4614      	mov	r4, r2
 80097a0:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 80097a2:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 80097a4:	460b      	mov	r3, r1
  hTask = NULL;
 80097a6:	9205      	str	r2, [sp, #20]
 80097a8:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 80097ac:	b9d2      	cbnz	r2, 80097e4 <osThreadNew+0x48>
 80097ae:	b1c8      	cbz	r0, 80097e4 <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 80097b0:	2c00      	cmp	r4, #0
 80097b2:	d02f      	beq.n	8009814 <osThreadNew+0x78>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 80097b4:	69a5      	ldr	r5, [r4, #24]
 80097b6:	2d00      	cmp	r5, #0
 80097b8:	bf08      	it	eq
 80097ba:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 80097bc:	1e69      	subs	r1, r5, #1
 80097be:	46ac      	mov	ip, r5
 80097c0:	2937      	cmp	r1, #55	; 0x37
 80097c2:	d82b      	bhi.n	800981c <osThreadNew+0x80>
 80097c4:	6861      	ldr	r1, [r4, #4]
 80097c6:	07c9      	lsls	r1, r1, #31
 80097c8:	d428      	bmi.n	800981c <osThreadNew+0x80>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 80097ca:	6966      	ldr	r6, [r4, #20]
 80097cc:	b16e      	cbz	r6, 80097ea <osThreadNew+0x4e>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 80097ce:	08b2      	lsrs	r2, r6, #2
      if (attr->name != NULL) {
 80097d0:	6821      	ldr	r1, [r4, #0]
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 80097d2:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
 80097d6:	b157      	cbz	r7, 80097ee <osThreadNew+0x52>
 80097d8:	f1be 0f5f 	cmp.w	lr, #95	; 0x5f
 80097dc:	d902      	bls.n	80097e4 <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 80097de:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 80097e0:	b104      	cbz	r4, 80097e4 <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 80097e2:	b9ee      	cbnz	r6, 8009820 <osThreadNew+0x84>
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 80097e4:	9805      	ldr	r0, [sp, #20]
}
 80097e6:	b007      	add	sp, #28
 80097e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 80097ea:	2280      	movs	r2, #128	; 0x80
 80097ec:	e7f0      	b.n	80097d0 <osThreadNew+0x34>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 80097ee:	f1be 0f00 	cmp.w	lr, #0
 80097f2:	d1f7      	bne.n	80097e4 <osThreadNew+0x48>
      if (mem == 0) {
 80097f4:	6924      	ldr	r4, [r4, #16]
 80097f6:	2c00      	cmp	r4, #0
 80097f8:	d1f4      	bne.n	80097e4 <osThreadNew+0x48>
 80097fa:	460c      	mov	r4, r1
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 80097fc:	a905      	add	r1, sp, #20
 80097fe:	b292      	uxth	r2, r2
 8009800:	e9cd c100 	strd	ip, r1, [sp]
 8009804:	4621      	mov	r1, r4
 8009806:	f001 fae2 	bl	800adce <xTaskCreate>
 800980a:	2801      	cmp	r0, #1
            hTask = NULL;
 800980c:	bf1c      	itt	ne
 800980e:	2300      	movne	r3, #0
 8009810:	9305      	strne	r3, [sp, #20]
 8009812:	e7e7      	b.n	80097e4 <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;
 8009814:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 8009818:	2280      	movs	r2, #128	; 0x80
 800981a:	e7ef      	b.n	80097fc <osThreadNew+0x60>
        return (NULL);
 800981c:	4610      	mov	r0, r2
 800981e:	e7e2      	b.n	80097e6 <osThreadNew+0x4a>
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8009820:	e9cd 4701 	strd	r4, r7, [sp, #4]
 8009824:	9500      	str	r5, [sp, #0]
 8009826:	f001 fa9a 	bl	800ad5e <xTaskCreateStatic>
 800982a:	9005      	str	r0, [sp, #20]
 800982c:	e7da      	b.n	80097e4 <osThreadNew+0x48>

0800982e <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800982e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009830:	4604      	mov	r4, r0
 8009832:	460e      	mov	r6, r1
 8009834:	4615      	mov	r5, r2
 8009836:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800983a:	b11a      	cbz	r2, 8009844 <osSemaphoreNew+0x16>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 800983c:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800983e:	4620      	mov	r0, r4
 8009840:	b003      	add	sp, #12
 8009842:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8009844:	2800      	cmp	r0, #0
 8009846:	d0f9      	beq.n	800983c <osSemaphoreNew+0xe>
 8009848:	4288      	cmp	r0, r1
 800984a:	d3f7      	bcc.n	800983c <osSemaphoreNew+0xe>
    if (attr != NULL) {
 800984c:	b1e5      	cbz	r5, 8009888 <osSemaphoreNew+0x5a>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800984e:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 8009852:	b1bb      	cbz	r3, 8009884 <osSemaphoreNew+0x56>
 8009854:	2f4f      	cmp	r7, #79	; 0x4f
 8009856:	d9f1      	bls.n	800983c <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 8009858:	2801      	cmp	r0, #1
 800985a:	d12a      	bne.n	80098b2 <osSemaphoreNew+0x84>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800985c:	2103      	movs	r1, #3
 800985e:	9100      	str	r1, [sp, #0]
 8009860:	4611      	mov	r1, r2
 8009862:	f000 fce7 	bl	800a234 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 8009866:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8009868:	2800      	cmp	r0, #0
 800986a:	d0e7      	beq.n	800983c <osSemaphoreNew+0xe>
 800986c:	b1de      	cbz	r6, 80098a6 <osSemaphoreNew+0x78>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800986e:	2300      	movs	r3, #0
 8009870:	461a      	mov	r2, r3
 8009872:	4619      	mov	r1, r3
 8009874:	f000 fd93 	bl	800a39e <xQueueGenericSend>
 8009878:	2801      	cmp	r0, #1
 800987a:	d014      	beq.n	80098a6 <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800987c:	4620      	mov	r0, r4
 800987e:	f001 f8cf 	bl	800aa20 <vQueueDelete>
 8009882:	e7db      	b.n	800983c <osSemaphoreNew+0xe>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8009884:	2f00      	cmp	r7, #0
 8009886:	d1d9      	bne.n	800983c <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 8009888:	2c01      	cmp	r4, #1
 800988a:	d105      	bne.n	8009898 <osSemaphoreNew+0x6a>
            hSemaphore = xSemaphoreCreateBinary();
 800988c:	2203      	movs	r2, #3
 800988e:	2100      	movs	r1, #0
 8009890:	4620      	mov	r0, r4
 8009892:	f000 fd1d 	bl	800a2d0 <xQueueGenericCreate>
 8009896:	e7e6      	b.n	8009866 <osSemaphoreNew+0x38>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8009898:	4620      	mov	r0, r4
 800989a:	4631      	mov	r1, r6
 800989c:	f000 fd61 	bl	800a362 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 80098a0:	4604      	mov	r4, r0
 80098a2:	2800      	cmp	r0, #0
 80098a4:	d0ca      	beq.n	800983c <osSemaphoreNew+0xe>
        if (attr != NULL) {
 80098a6:	b955      	cbnz	r5, 80098be <osSemaphoreNew+0x90>
        vQueueAddToRegistry (hSemaphore, name);
 80098a8:	4629      	mov	r1, r5
 80098aa:	4620      	mov	r0, r4
 80098ac:	f001 f892 	bl	800a9d4 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 80098b0:	e7c5      	b.n	800983e <osSemaphoreNew+0x10>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 80098b2:	461a      	mov	r2, r3
 80098b4:	f000 fd33 	bl	800a31e <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 80098b8:	4604      	mov	r4, r0
 80098ba:	2800      	cmp	r0, #0
 80098bc:	d0be      	beq.n	800983c <osSemaphoreNew+0xe>
          name = attr->name;
 80098be:	682d      	ldr	r5, [r5, #0]
 80098c0:	e7f2      	b.n	80098a8 <osSemaphoreNew+0x7a>

080098c2 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 80098c2:	b513      	push	{r0, r1, r4, lr}
 80098c4:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 80098c6:	b308      	cbz	r0, 800990c <osSemaphoreAcquire+0x4a>
 80098c8:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 80098cc:	b1b3      	cbz	r3, 80098fc <osSemaphoreAcquire+0x3a>
    if (timeout != 0U) {
 80098ce:	b9e9      	cbnz	r1, 800990c <osSemaphoreAcquire+0x4a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 80098d0:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 80098d2:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 80098d4:	f001 f82e 	bl	800a934 <xQueueReceiveFromISR>
 80098d8:	2801      	cmp	r0, #1
 80098da:	d114      	bne.n	8009906 <osSemaphoreAcquire+0x44>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 80098dc:	9b01      	ldr	r3, [sp, #4]
 80098de:	b913      	cbnz	r3, 80098e6 <osSemaphoreAcquire+0x24>
  stat = osOK;
 80098e0:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 80098e2:	b002      	add	sp, #8
 80098e4:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 80098e6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80098ea:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80098ee:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80098f2:	f3bf 8f4f 	dsb	sy
 80098f6:	f3bf 8f6f 	isb	sy
 80098fa:	e7f1      	b.n	80098e0 <osSemaphoreAcquire+0x1e>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 80098fc:	f000 ff57 	bl	800a7ae <xQueueSemaphoreTake>
 8009900:	2801      	cmp	r0, #1
 8009902:	d0ed      	beq.n	80098e0 <osSemaphoreAcquire+0x1e>
      if (timeout != 0U) {
 8009904:	b92c      	cbnz	r4, 8009912 <osSemaphoreAcquire+0x50>
        stat = osErrorResource;
 8009906:	f06f 0002 	mvn.w	r0, #2
 800990a:	e7ea      	b.n	80098e2 <osSemaphoreAcquire+0x20>
    stat = osErrorParameter;
 800990c:	f06f 0003 	mvn.w	r0, #3
 8009910:	e7e7      	b.n	80098e2 <osSemaphoreAcquire+0x20>
        stat = osErrorTimeout;
 8009912:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8009916:	e7e4      	b.n	80098e2 <osSemaphoreAcquire+0x20>

08009918 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8009918:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800991a:	b310      	cbz	r0, 8009962 <osSemaphoreRelease+0x4a>
 800991c:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8009920:	b1b3      	cbz	r3, 8009950 <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 8009922:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8009924:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 8009926:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8009928:	f000 fe4e 	bl	800a5c8 <xQueueGiveFromISR>
 800992c:	2801      	cmp	r0, #1
 800992e:	d115      	bne.n	800995c <osSemaphoreRelease+0x44>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 8009930:	9b01      	ldr	r3, [sp, #4]
 8009932:	b913      	cbnz	r3, 800993a <osSemaphoreRelease+0x22>
  stat = osOK;
 8009934:	2000      	movs	r0, #0
      stat = osErrorResource;
    }
  }

  return (stat);
}
 8009936:	b002      	add	sp, #8
 8009938:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 800993a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800993e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009942:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009946:	f3bf 8f4f 	dsb	sy
 800994a:	f3bf 8f6f 	isb	sy
 800994e:	e7f1      	b.n	8009934 <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8009950:	461a      	mov	r2, r3
 8009952:	4619      	mov	r1, r3
 8009954:	f000 fd23 	bl	800a39e <xQueueGenericSend>
 8009958:	2801      	cmp	r0, #1
 800995a:	d0eb      	beq.n	8009934 <osSemaphoreRelease+0x1c>
      stat = osErrorResource;
 800995c:	f06f 0002 	mvn.w	r0, #2
 8009960:	e7e9      	b.n	8009936 <osSemaphoreRelease+0x1e>
    stat = osErrorParameter;
 8009962:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8009966:	e7e6      	b.n	8009936 <osSemaphoreRelease+0x1e>

08009968 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8009968:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800996a:	4605      	mov	r5, r0
 800996c:	460e      	mov	r6, r1
 800996e:	4614      	mov	r4, r2
 8009970:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8009974:	b11f      	cbz	r7, 800997e <osMessageQueueNew+0x16>
  hQueue = NULL;
 8009976:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 8009978:	4628      	mov	r0, r5
 800997a:	b003      	add	sp, #12
 800997c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800997e:	2800      	cmp	r0, #0
 8009980:	d0f9      	beq.n	8009976 <osMessageQueueNew+0xe>
 8009982:	2900      	cmp	r1, #0
 8009984:	d0f7      	beq.n	8009976 <osMessageQueueNew+0xe>
    if (attr != NULL) {
 8009986:	b1da      	cbz	r2, 80099c0 <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8009988:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 800998c:	b183      	cbz	r3, 80099b0 <osMessageQueueNew+0x48>
 800998e:	2a4f      	cmp	r2, #79	; 0x4f
 8009990:	d9f1      	bls.n	8009976 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8009992:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8009994:	2a00      	cmp	r2, #0
 8009996:	d0ee      	beq.n	8009976 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8009998:	434d      	muls	r5, r1
 800999a:	6966      	ldr	r6, [r4, #20]
 800999c:	42ae      	cmp	r6, r5
 800999e:	d3ea      	bcc.n	8009976 <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 80099a0:	9700      	str	r7, [sp, #0]
 80099a2:	f000 fc47 	bl	800a234 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 80099a6:	4605      	mov	r5, r0
 80099a8:	2800      	cmp	r0, #0
 80099aa:	d0e4      	beq.n	8009976 <osMessageQueueNew+0xe>
        name = attr->name;
 80099ac:	6824      	ldr	r4, [r4, #0]
 80099ae:	e011      	b.n	80099d4 <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 80099b0:	2a00      	cmp	r2, #0
 80099b2:	d1e0      	bne.n	8009976 <osMessageQueueNew+0xe>
 80099b4:	6923      	ldr	r3, [r4, #16]
 80099b6:	2b00      	cmp	r3, #0
 80099b8:	d1dd      	bne.n	8009976 <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 80099ba:	6963      	ldr	r3, [r4, #20]
 80099bc:	2b00      	cmp	r3, #0
 80099be:	d1da      	bne.n	8009976 <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 80099c0:	4628      	mov	r0, r5
 80099c2:	2200      	movs	r2, #0
 80099c4:	4631      	mov	r1, r6
 80099c6:	f000 fc83 	bl	800a2d0 <xQueueGenericCreate>
    if (hQueue != NULL) {
 80099ca:	4605      	mov	r5, r0
 80099cc:	2800      	cmp	r0, #0
 80099ce:	d0d2      	beq.n	8009976 <osMessageQueueNew+0xe>
      if (attr != NULL) {
 80099d0:	2c00      	cmp	r4, #0
 80099d2:	d1eb      	bne.n	80099ac <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 80099d4:	4621      	mov	r1, r4
 80099d6:	4628      	mov	r0, r5
 80099d8:	f000 fffc 	bl	800a9d4 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 80099dc:	e7cc      	b.n	8009978 <osMessageQueueNew+0x10>

080099de <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 80099de:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80099e0:	461c      	mov	r4, r3
 80099e2:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 80099e6:	b1c6      	cbz	r6, 8009a1a <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80099e8:	b318      	cbz	r0, 8009a32 <osMessageQueuePut+0x54>
 80099ea:	b311      	cbz	r1, 8009a32 <osMessageQueuePut+0x54>
 80099ec:	bb0b      	cbnz	r3, 8009a32 <osMessageQueuePut+0x54>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 80099ee:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 80099f0:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 80099f2:	f000 fd87 	bl	800a504 <xQueueGenericSendFromISR>
 80099f6:	2801      	cmp	r0, #1
 80099f8:	d118      	bne.n	8009a2c <osMessageQueuePut+0x4e>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 80099fa:	9b01      	ldr	r3, [sp, #4]
 80099fc:	b913      	cbnz	r3, 8009a04 <osMessageQueuePut+0x26>
  stat = osOK;
 80099fe:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 8009a00:	b002      	add	sp, #8
 8009a02:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 8009a04:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009a08:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009a0c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009a10:	f3bf 8f4f 	dsb	sy
 8009a14:	f3bf 8f6f 	isb	sy
 8009a18:	e7f1      	b.n	80099fe <osMessageQueuePut+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8009a1a:	b150      	cbz	r0, 8009a32 <osMessageQueuePut+0x54>
 8009a1c:	b149      	cbz	r1, 8009a32 <osMessageQueuePut+0x54>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8009a1e:	4633      	mov	r3, r6
 8009a20:	4622      	mov	r2, r4
 8009a22:	f000 fcbc 	bl	800a39e <xQueueGenericSend>
 8009a26:	2801      	cmp	r0, #1
 8009a28:	d0e9      	beq.n	80099fe <osMessageQueuePut+0x20>
        if (timeout != 0U) {
 8009a2a:	b92c      	cbnz	r4, 8009a38 <osMessageQueuePut+0x5a>
          stat = osErrorResource;
 8009a2c:	f06f 0002 	mvn.w	r0, #2
 8009a30:	e7e6      	b.n	8009a00 <osMessageQueuePut+0x22>
      stat = osErrorParameter;
 8009a32:	f06f 0003 	mvn.w	r0, #3
 8009a36:	e7e3      	b.n	8009a00 <osMessageQueuePut+0x22>
          stat = osErrorTimeout;
 8009a38:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8009a3c:	e7e0      	b.n	8009a00 <osMessageQueuePut+0x22>

08009a3e <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8009a3e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009a40:	461c      	mov	r4, r3
 8009a42:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8009a46:	b1c3      	cbz	r3, 8009a7a <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8009a48:	b310      	cbz	r0, 8009a90 <osMessageQueueGet+0x52>
 8009a4a:	b309      	cbz	r1, 8009a90 <osMessageQueueGet+0x52>
 8009a4c:	bb04      	cbnz	r4, 8009a90 <osMessageQueueGet+0x52>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8009a4e:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8009a50:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8009a52:	f000 ff6f 	bl	800a934 <xQueueReceiveFromISR>
 8009a56:	2801      	cmp	r0, #1
 8009a58:	d117      	bne.n	8009a8a <osMessageQueueGet+0x4c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 8009a5a:	9b01      	ldr	r3, [sp, #4]
 8009a5c:	b913      	cbnz	r3, 8009a64 <osMessageQueueGet+0x26>
  stat = osOK;
 8009a5e:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 8009a60:	b003      	add	sp, #12
 8009a62:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 8009a64:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009a68:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009a6c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009a70:	f3bf 8f4f 	dsb	sy
 8009a74:	f3bf 8f6f 	isb	sy
 8009a78:	e7f1      	b.n	8009a5e <osMessageQueueGet+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8009a7a:	b148      	cbz	r0, 8009a90 <osMessageQueueGet+0x52>
 8009a7c:	b141      	cbz	r1, 8009a90 <osMessageQueueGet+0x52>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8009a7e:	4622      	mov	r2, r4
 8009a80:	f000 fdf6 	bl	800a670 <xQueueReceive>
 8009a84:	2801      	cmp	r0, #1
 8009a86:	d0ea      	beq.n	8009a5e <osMessageQueueGet+0x20>
        if (timeout != 0U) {
 8009a88:	b92c      	cbnz	r4, 8009a96 <osMessageQueueGet+0x58>
          stat = osErrorResource;
 8009a8a:	f06f 0002 	mvn.w	r0, #2
 8009a8e:	e7e7      	b.n	8009a60 <osMessageQueueGet+0x22>
      stat = osErrorParameter;
 8009a90:	f06f 0003 	mvn.w	r0, #3
 8009a94:	e7e4      	b.n	8009a60 <osMessageQueueGet+0x22>
          stat = osErrorTimeout;
 8009a96:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8009a9a:	e7e1      	b.n	8009a60 <osMessageQueueGet+0x22>

08009a9c <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 8009a9c:	4b03      	ldr	r3, [pc, #12]	; (8009aac <vApplicationGetIdleTaskMemory+0x10>)
 8009a9e:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8009aa0:	4b03      	ldr	r3, [pc, #12]	; (8009ab0 <vApplicationGetIdleTaskMemory+0x14>)
 8009aa2:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8009aa4:	2380      	movs	r3, #128	; 0x80
 8009aa6:	6013      	str	r3, [r2, #0]
}
 8009aa8:	4770      	bx	lr
 8009aaa:	bf00      	nop
 8009aac:	2400551c 	.word	0x2400551c
 8009ab0:	2400531c 	.word	0x2400531c

08009ab4 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8009ab4:	4b03      	ldr	r3, [pc, #12]	; (8009ac4 <vApplicationGetTimerTaskMemory+0x10>)
 8009ab6:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8009ab8:	4b03      	ldr	r3, [pc, #12]	; (8009ac8 <vApplicationGetTimerTaskMemory+0x14>)
 8009aba:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8009abc:	f44f 7380 	mov.w	r3, #256	; 0x100
 8009ac0:	6013      	str	r3, [r2, #0]
}
 8009ac2:	4770      	bx	lr
 8009ac4:	24005980 	.word	0x24005980
 8009ac8:	24005580 	.word	0x24005580

08009acc <prvInsertBlockIntoFreeList>:
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8009acc:	4b0f      	ldr	r3, [pc, #60]	; (8009b0c <prvInsertBlockIntoFreeList+0x40>)
{
 8009ace:	b510      	push	{r4, lr}
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8009ad0:	461a      	mov	r2, r3
 8009ad2:	681b      	ldr	r3, [r3, #0]
 8009ad4:	4283      	cmp	r3, r0
 8009ad6:	d3fb      	bcc.n	8009ad0 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 8009ad8:	6854      	ldr	r4, [r2, #4]
 8009ada:	1911      	adds	r1, r2, r4
 8009adc:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8009ade:	bf01      	itttt	eq
 8009ae0:	6841      	ldreq	r1, [r0, #4]
 8009ae2:	4610      	moveq	r0, r2
 8009ae4:	1909      	addeq	r1, r1, r4
 8009ae6:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8009ae8:	6844      	ldr	r4, [r0, #4]
 8009aea:	1901      	adds	r1, r0, r4
 8009aec:	428b      	cmp	r3, r1
 8009aee:	d107      	bne.n	8009b00 <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8009af0:	4907      	ldr	r1, [pc, #28]	; (8009b10 <prvInsertBlockIntoFreeList+0x44>)
 8009af2:	6809      	ldr	r1, [r1, #0]
 8009af4:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8009af6:	bf1f      	itttt	ne
 8009af8:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 8009afa:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8009afc:	1909      	addne	r1, r1, r4
 8009afe:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8009b00:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 8009b02:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8009b04:	bf18      	it	ne
 8009b06:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8009b08:	bd10      	pop	{r4, pc}
 8009b0a:	bf00      	nop
 8009b0c:	2400d9f8 	.word	0x2400d9f8
 8009b10:	240059e0 	.word	0x240059e0

08009b14 <pvPortMalloc>:
{
 8009b14:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009b18:	4604      	mov	r4, r0
	vTaskSuspendAll();
 8009b1a:	f001 f985 	bl	800ae28 <vTaskSuspendAll>
		if( pxEnd == NULL )
 8009b1e:	4842      	ldr	r0, [pc, #264]	; (8009c28 <pvPortMalloc+0x114>)
 8009b20:	4d42      	ldr	r5, [pc, #264]	; (8009c2c <pvPortMalloc+0x118>)
 8009b22:	6803      	ldr	r3, [r0, #0]
 8009b24:	bb0b      	cbnz	r3, 8009b6a <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 8009b26:	4942      	ldr	r1, [pc, #264]	; (8009c30 <pvPortMalloc+0x11c>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8009b28:	074e      	lsls	r6, r1, #29
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8009b2a:	4e42      	ldr	r6, [pc, #264]	; (8009c34 <pvPortMalloc+0x120>)
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 8009b2c:	bf1b      	ittet	ne
 8009b2e:	1dcb      	addne	r3, r1, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 8009b30:	f501 4200 	addne.w	r2, r1, #32768	; 0x8000
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 8009b34:	f44f 4200 	moveq.w	r2, #32768	; 0x8000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8009b38:	f023 0307 	bicne.w	r3, r3, #7
 8009b3c:	bf1c      	itt	ne
 8009b3e:	4619      	movne	r1, r3
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 8009b40:	1ad2      	subne	r2, r2, r3
	xStart.xBlockSize = ( size_t ) 0;
 8009b42:	2300      	movs	r3, #0
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 8009b44:	440a      	add	r2, r1
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8009b46:	6031      	str	r1, [r6, #0]
	xStart.xBlockSize = ( size_t ) 0;
 8009b48:	6073      	str	r3, [r6, #4]
	uxAddress -= xHeapStructSize;
 8009b4a:	3a08      	subs	r2, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8009b4c:	f022 0207 	bic.w	r2, r2, #7
	pxEnd->pxNextFreeBlock = NULL;
 8009b50:	e9c2 3300 	strd	r3, r3, [r2]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8009b54:	1a53      	subs	r3, r2, r1
	pxEnd = ( void * ) uxAddress;
 8009b56:	6002      	str	r2, [r0, #0]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 8009b58:	e9c1 2300 	strd	r2, r3, [r1]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8009b5c:	4a36      	ldr	r2, [pc, #216]	; (8009c38 <pvPortMalloc+0x124>)
 8009b5e:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8009b60:	4a36      	ldr	r2, [pc, #216]	; (8009c3c <pvPortMalloc+0x128>)
 8009b62:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8009b64:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8009b68:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 8009b6a:	682f      	ldr	r7, [r5, #0]
 8009b6c:	4227      	tst	r7, r4
 8009b6e:	d155      	bne.n	8009c1c <pvPortMalloc+0x108>
			if( xWantedSize > 0 )
 8009b70:	2c00      	cmp	r4, #0
 8009b72:	d046      	beq.n	8009c02 <pvPortMalloc+0xee>
				xWantedSize += xHeapStructSize;
 8009b74:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8009b78:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 8009b7a:	bf1c      	itt	ne
 8009b7c:	f023 0307 	bicne.w	r3, r3, #7
 8009b80:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 8009b82:	2b00      	cmp	r3, #0
 8009b84:	d04a      	beq.n	8009c1c <pvPortMalloc+0x108>
 8009b86:	4c2d      	ldr	r4, [pc, #180]	; (8009c3c <pvPortMalloc+0x128>)
 8009b88:	6826      	ldr	r6, [r4, #0]
 8009b8a:	429e      	cmp	r6, r3
 8009b8c:	d346      	bcc.n	8009c1c <pvPortMalloc+0x108>
				pxBlock = xStart.pxNextFreeBlock;
 8009b8e:	4a29      	ldr	r2, [pc, #164]	; (8009c34 <pvPortMalloc+0x120>)
 8009b90:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 8009b92:	6869      	ldr	r1, [r5, #4]
 8009b94:	4299      	cmp	r1, r3
 8009b96:	d204      	bcs.n	8009ba2 <pvPortMalloc+0x8e>
 8009b98:	f8d5 c000 	ldr.w	ip, [r5]
 8009b9c:	f1bc 0f00 	cmp.w	ip, #0
 8009ba0:	d115      	bne.n	8009bce <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 8009ba2:	6800      	ldr	r0, [r0, #0]
 8009ba4:	42a8      	cmp	r0, r5
 8009ba6:	d039      	beq.n	8009c1c <pvPortMalloc+0x108>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8009ba8:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8009baa:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8009bac:	f8d2 8000 	ldr.w	r8, [r2]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8009bb0:	2910      	cmp	r1, #16
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8009bb2:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8009bb4:	d912      	bls.n	8009bdc <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 8009bb6:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 8009bb8:	0742      	lsls	r2, r0, #29
 8009bba:	d00b      	beq.n	8009bd4 <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 8009bbc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009bc0:	f383 8811 	msr	BASEPRI, r3
 8009bc4:	f3bf 8f6f 	isb	sy
 8009bc8:	f3bf 8f4f 	dsb	sy
 8009bcc:	e7fe      	b.n	8009bcc <pvPortMalloc+0xb8>
 8009bce:	462a      	mov	r2, r5
 8009bd0:	4665      	mov	r5, ip
 8009bd2:	e7de      	b.n	8009b92 <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 8009bd4:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 8009bd6:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 8009bd8:	f7ff ff78 	bl	8009acc <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8009bdc:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8009bde:	4916      	ldr	r1, [pc, #88]	; (8009c38 <pvPortMalloc+0x124>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8009be0:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8009be2:	431f      	orrs	r7, r3
					xNumberOfSuccessfulAllocations++;
 8009be4:	4a16      	ldr	r2, [pc, #88]	; (8009c40 <pvPortMalloc+0x12c>)
					pxBlock->pxNextFreeBlock = NULL;
 8009be6:	2300      	movs	r3, #0
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8009be8:	6808      	ldr	r0, [r1, #0]
					pxBlock->pxNextFreeBlock = NULL;
 8009bea:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 8009bec:	6813      	ldr	r3, [r2, #0]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8009bee:	4286      	cmp	r6, r0
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8009bf0:	6026      	str	r6, [r4, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8009bf2:	f108 0408 	add.w	r4, r8, #8
					xNumberOfSuccessfulAllocations++;
 8009bf6:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8009bfa:	bf38      	it	cc
 8009bfc:	600e      	strcc	r6, [r1, #0]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8009bfe:	606f      	str	r7, [r5, #4]
					xNumberOfSuccessfulAllocations++;
 8009c00:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 8009c02:	f001 f9b5 	bl	800af70 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 8009c06:	0763      	lsls	r3, r4, #29
 8009c08:	d00a      	beq.n	8009c20 <pvPortMalloc+0x10c>
 8009c0a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009c0e:	f383 8811 	msr	BASEPRI, r3
 8009c12:	f3bf 8f6f 	isb	sy
 8009c16:	f3bf 8f4f 	dsb	sy
 8009c1a:	e7fe      	b.n	8009c1a <pvPortMalloc+0x106>
void *pvReturn = NULL;
 8009c1c:	2400      	movs	r4, #0
 8009c1e:	e7f0      	b.n	8009c02 <pvPortMalloc+0xee>
}
 8009c20:	4620      	mov	r0, r4
 8009c22:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009c26:	bf00      	nop
 8009c28:	240059e0 	.word	0x240059e0
 8009c2c:	2400d9e4 	.word	0x2400d9e4
 8009c30:	240059e4 	.word	0x240059e4
 8009c34:	2400d9f8 	.word	0x2400d9f8
 8009c38:	2400d9ec 	.word	0x2400d9ec
 8009c3c:	2400d9e8 	.word	0x2400d9e8
 8009c40:	2400d9f0 	.word	0x2400d9f0

08009c44 <vPortFree>:
{
 8009c44:	b510      	push	{r4, lr}
	if( pv != NULL )
 8009c46:	4604      	mov	r4, r0
 8009c48:	b390      	cbz	r0, 8009cb0 <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8009c4a:	4a1a      	ldr	r2, [pc, #104]	; (8009cb4 <vPortFree+0x70>)
 8009c4c:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8009c50:	6812      	ldr	r2, [r2, #0]
 8009c52:	4213      	tst	r3, r2
 8009c54:	d108      	bne.n	8009c68 <vPortFree+0x24>
 8009c56:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009c5a:	f383 8811 	msr	BASEPRI, r3
 8009c5e:	f3bf 8f6f 	isb	sy
 8009c62:	f3bf 8f4f 	dsb	sy
 8009c66:	e7fe      	b.n	8009c66 <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8009c68:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8009c6c:	b141      	cbz	r1, 8009c80 <vPortFree+0x3c>
 8009c6e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009c72:	f383 8811 	msr	BASEPRI, r3
 8009c76:	f3bf 8f6f 	isb	sy
 8009c7a:	f3bf 8f4f 	dsb	sy
 8009c7e:	e7fe      	b.n	8009c7e <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8009c80:	ea23 0302 	bic.w	r3, r3, r2
 8009c84:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 8009c88:	f001 f8ce 	bl	800ae28 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8009c8c:	4a0a      	ldr	r2, [pc, #40]	; (8009cb8 <vPortFree+0x74>)
 8009c8e:	f854 3c04 	ldr.w	r3, [r4, #-4]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8009c92:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 8009c96:	6811      	ldr	r1, [r2, #0]
 8009c98:	440b      	add	r3, r1
 8009c9a:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8009c9c:	f7ff ff16 	bl	8009acc <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 8009ca0:	4a06      	ldr	r2, [pc, #24]	; (8009cbc <vPortFree+0x78>)
 8009ca2:	6813      	ldr	r3, [r2, #0]
 8009ca4:	3301      	adds	r3, #1
}
 8009ca6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 8009caa:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 8009cac:	f001 b960 	b.w	800af70 <xTaskResumeAll>
}
 8009cb0:	bd10      	pop	{r4, pc}
 8009cb2:	bf00      	nop
 8009cb4:	2400d9e4 	.word	0x2400d9e4
 8009cb8:	2400d9e8 	.word	0x2400d9e8
 8009cbc:	2400d9f4 	.word	0x2400d9f4

08009cc0 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8009cc0:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 8009cc4:	f04f 32ff 	mov.w	r2, #4294967295
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8009cc8:	6043      	str	r3, [r0, #4]

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8009cca:	6103      	str	r3, [r0, #16]
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8009ccc:	e9c0 2302 	strd	r2, r3, [r0, #8]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8009cd0:	2300      	movs	r3, #0
 8009cd2:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8009cd4:	4770      	bx	lr

08009cd6 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 8009cd6:	2300      	movs	r3, #0
 8009cd8:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 8009cda:	4770      	bx	lr

08009cdc <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 8009cdc:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8009cde:	689a      	ldr	r2, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 8009ce0:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8009ce2:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8009ce4:	689a      	ldr	r2, [r3, #8]
 8009ce6:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 8009ce8:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8009cea:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8009cec:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8009cee:	3301      	adds	r3, #1
 8009cf0:	6003      	str	r3, [r0, #0]
}
 8009cf2:	4770      	bx	lr

08009cf4 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 8009cf4:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8009cf6:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 8009cf8:	1c63      	adds	r3, r4, #1
 8009cfa:	d10a      	bne.n	8009d12 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 8009cfc:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 8009cfe:	685a      	ldr	r2, [r3, #4]
 8009d00:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8009d02:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 8009d04:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 8009d06:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8009d08:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8009d0a:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8009d0c:	3301      	adds	r3, #1
 8009d0e:	6003      	str	r3, [r0, #0]
}
 8009d10:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8009d12:	f100 0208 	add.w	r2, r0, #8
 8009d16:	4613      	mov	r3, r2
 8009d18:	6852      	ldr	r2, [r2, #4]
 8009d1a:	6815      	ldr	r5, [r2, #0]
 8009d1c:	42a5      	cmp	r5, r4
 8009d1e:	d9fa      	bls.n	8009d16 <vListInsert+0x22>
 8009d20:	e7ed      	b.n	8009cfe <vListInsert+0xa>

08009d22 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 8009d22:	6903      	ldr	r3, [r0, #16]

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8009d24:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
 8009d28:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8009d2a:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8009d2c:	6859      	ldr	r1, [r3, #4]
 8009d2e:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8009d30:	bf08      	it	eq
 8009d32:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8009d34:	2200      	movs	r2, #0
 8009d36:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 8009d38:	681a      	ldr	r2, [r3, #0]
 8009d3a:	3a01      	subs	r2, #1
 8009d3c:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 8009d3e:	6818      	ldr	r0, [r3, #0]
}
 8009d40:	4770      	bx	lr
	...

08009d44 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8009d44:	4808      	ldr	r0, [pc, #32]	; (8009d68 <prvPortStartFirstTask+0x24>)
 8009d46:	6800      	ldr	r0, [r0, #0]
 8009d48:	6800      	ldr	r0, [r0, #0]
 8009d4a:	f380 8808 	msr	MSP, r0
 8009d4e:	f04f 0000 	mov.w	r0, #0
 8009d52:	f380 8814 	msr	CONTROL, r0
 8009d56:	b662      	cpsie	i
 8009d58:	b661      	cpsie	f
 8009d5a:	f3bf 8f4f 	dsb	sy
 8009d5e:	f3bf 8f6f 	isb	sy
 8009d62:	df00      	svc	0
 8009d64:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 8009d66:	0000      	.short	0x0000
 8009d68:	e000ed08 	.word	0xe000ed08

08009d6c <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8009d6c:	f8df 000c 	ldr.w	r0, [pc, #12]	; 8009d7c <vPortEnableVFP+0x10>
 8009d70:	6801      	ldr	r1, [r0, #0]
 8009d72:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8009d76:	6001      	str	r1, [r0, #0]
 8009d78:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 8009d7a:	0000      	.short	0x0000
 8009d7c:	e000ed88 	.word	0xe000ed88

08009d80 <prvTaskExitError>:
volatile uint32_t ulDummy = 0;
 8009d80:	2300      	movs	r3, #0
{
 8009d82:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 8009d84:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 8009d86:	4b0d      	ldr	r3, [pc, #52]	; (8009dbc <prvTaskExitError+0x3c>)
 8009d88:	681b      	ldr	r3, [r3, #0]
 8009d8a:	3301      	adds	r3, #1
 8009d8c:	d008      	beq.n	8009da0 <prvTaskExitError+0x20>
 8009d8e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009d92:	f383 8811 	msr	BASEPRI, r3
 8009d96:	f3bf 8f6f 	isb	sy
 8009d9a:	f3bf 8f4f 	dsb	sy
 8009d9e:	e7fe      	b.n	8009d9e <prvTaskExitError+0x1e>
 8009da0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009da4:	f383 8811 	msr	BASEPRI, r3
 8009da8:	f3bf 8f6f 	isb	sy
 8009dac:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 8009db0:	9b01      	ldr	r3, [sp, #4]
 8009db2:	2b00      	cmp	r3, #0
 8009db4:	d0fc      	beq.n	8009db0 <prvTaskExitError+0x30>
}
 8009db6:	b002      	add	sp, #8
 8009db8:	4770      	bx	lr
 8009dba:	bf00      	nop
 8009dbc:	24000058 	.word	0x24000058

08009dc0 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8009dc0:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8009dc4:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 8009dc8:	f840 2c20 	str.w	r2, [r0, #-32]
}
 8009dcc:	3844      	subs	r0, #68	; 0x44
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8009dce:	6403      	str	r3, [r0, #64]	; 0x40
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8009dd0:	4b03      	ldr	r3, [pc, #12]	; (8009de0 <pxPortInitialiseStack+0x20>)
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8009dd2:	63c1      	str	r1, [r0, #60]	; 0x3c
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8009dd4:	6383      	str	r3, [r0, #56]	; 0x38
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8009dd6:	f06f 0302 	mvn.w	r3, #2
 8009dda:	6203      	str	r3, [r0, #32]
}
 8009ddc:	4770      	bx	lr
 8009dde:	bf00      	nop
 8009de0:	08009d81 	.word	0x08009d81
	...

08009df0 <SVC_Handler>:
	__asm volatile (
 8009df0:	4b07      	ldr	r3, [pc, #28]	; (8009e10 <pxCurrentTCBConst2>)
 8009df2:	6819      	ldr	r1, [r3, #0]
 8009df4:	6808      	ldr	r0, [r1, #0]
 8009df6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009dfa:	f380 8809 	msr	PSP, r0
 8009dfe:	f3bf 8f6f 	isb	sy
 8009e02:	f04f 0000 	mov.w	r0, #0
 8009e06:	f380 8811 	msr	BASEPRI, r0
 8009e0a:	4770      	bx	lr
 8009e0c:	f3af 8000 	nop.w

08009e10 <pxCurrentTCBConst2>:
 8009e10:	2400da48 	.word	0x2400da48

08009e14 <vPortEnterCritical>:
 8009e14:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009e18:	f383 8811 	msr	BASEPRI, r3
 8009e1c:	f3bf 8f6f 	isb	sy
 8009e20:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8009e24:	4a0a      	ldr	r2, [pc, #40]	; (8009e50 <vPortEnterCritical+0x3c>)
 8009e26:	6813      	ldr	r3, [r2, #0]
 8009e28:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 8009e2a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 8009e2c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 8009e2e:	d10e      	bne.n	8009e4e <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8009e30:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009e34:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 8009e38:	b2db      	uxtb	r3, r3
 8009e3a:	b143      	cbz	r3, 8009e4e <vPortEnterCritical+0x3a>
 8009e3c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009e40:	f383 8811 	msr	BASEPRI, r3
 8009e44:	f3bf 8f6f 	isb	sy
 8009e48:	f3bf 8f4f 	dsb	sy
 8009e4c:	e7fe      	b.n	8009e4c <vPortEnterCritical+0x38>
}
 8009e4e:	4770      	bx	lr
 8009e50:	24000058 	.word	0x24000058

08009e54 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8009e54:	4a08      	ldr	r2, [pc, #32]	; (8009e78 <vPortExitCritical+0x24>)
 8009e56:	6813      	ldr	r3, [r2, #0]
 8009e58:	b943      	cbnz	r3, 8009e6c <vPortExitCritical+0x18>
 8009e5a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009e5e:	f383 8811 	msr	BASEPRI, r3
 8009e62:	f3bf 8f6f 	isb	sy
 8009e66:	f3bf 8f4f 	dsb	sy
 8009e6a:	e7fe      	b.n	8009e6a <vPortExitCritical+0x16>
	uxCriticalNesting--;
 8009e6c:	3b01      	subs	r3, #1
 8009e6e:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8009e70:	b90b      	cbnz	r3, 8009e76 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8009e72:	f383 8811 	msr	BASEPRI, r3
}
 8009e76:	4770      	bx	lr
 8009e78:	24000058 	.word	0x24000058
 8009e7c:	00000000 	.word	0x00000000

08009e80 <PendSV_Handler>:
	__asm volatile
 8009e80:	f3ef 8009 	mrs	r0, PSP
 8009e84:	f3bf 8f6f 	isb	sy
 8009e88:	4b15      	ldr	r3, [pc, #84]	; (8009ee0 <pxCurrentTCBConst>)
 8009e8a:	681a      	ldr	r2, [r3, #0]
 8009e8c:	f01e 0f10 	tst.w	lr, #16
 8009e90:	bf08      	it	eq
 8009e92:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8009e96:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009e9a:	6010      	str	r0, [r2, #0]
 8009e9c:	e92d 0009 	stmdb	sp!, {r0, r3}
 8009ea0:	f04f 0050 	mov.w	r0, #80	; 0x50
 8009ea4:	f380 8811 	msr	BASEPRI, r0
 8009ea8:	f3bf 8f4f 	dsb	sy
 8009eac:	f3bf 8f6f 	isb	sy
 8009eb0:	f001 f93c 	bl	800b12c <vTaskSwitchContext>
 8009eb4:	f04f 0000 	mov.w	r0, #0
 8009eb8:	f380 8811 	msr	BASEPRI, r0
 8009ebc:	bc09      	pop	{r0, r3}
 8009ebe:	6819      	ldr	r1, [r3, #0]
 8009ec0:	6808      	ldr	r0, [r1, #0]
 8009ec2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009ec6:	f01e 0f10 	tst.w	lr, #16
 8009eca:	bf08      	it	eq
 8009ecc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8009ed0:	f380 8809 	msr	PSP, r0
 8009ed4:	f3bf 8f6f 	isb	sy
 8009ed8:	4770      	bx	lr
 8009eda:	bf00      	nop
 8009edc:	f3af 8000 	nop.w

08009ee0 <pxCurrentTCBConst>:
 8009ee0:	2400da48 	.word	0x2400da48

08009ee4 <xPortSysTickHandler>:
{
 8009ee4:	b508      	push	{r3, lr}
	__asm volatile
 8009ee6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009eea:	f383 8811 	msr	BASEPRI, r3
 8009eee:	f3bf 8f6f 	isb	sy
 8009ef2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8009ef6:	f000 ffa5 	bl	800ae44 <xTaskIncrementTick>
 8009efa:	b128      	cbz	r0, 8009f08 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 8009efc:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009f00:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009f04:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 8009f08:	2300      	movs	r3, #0
 8009f0a:	f383 8811 	msr	BASEPRI, r3
}
 8009f0e:	bd08      	pop	{r3, pc}

08009f10 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8009f10:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8009f14:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8009f16:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8009f1a:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8009f1c:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8009f1e:	4b04      	ldr	r3, [pc, #16]	; (8009f30 <vPortSetupTimerInterrupt+0x20>)
 8009f20:	681b      	ldr	r3, [r3, #0]
 8009f22:	fbb3 f3f1 	udiv	r3, r3, r1
 8009f26:	3b01      	subs	r3, #1
 8009f28:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 8009f2a:	2307      	movs	r3, #7
 8009f2c:	6113      	str	r3, [r2, #16]
}
 8009f2e:	4770      	bx	lr
 8009f30:	24000048 	.word	0x24000048

08009f34 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8009f34:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
{
 8009f38:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8009f3a:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 8009f3e:	4a3a      	ldr	r2, [pc, #232]	; (800a028 <xPortStartScheduler+0xf4>)
 8009f40:	4291      	cmp	r1, r2
 8009f42:	d108      	bne.n	8009f56 <xPortStartScheduler+0x22>
	__asm volatile
 8009f44:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009f48:	f383 8811 	msr	BASEPRI, r3
 8009f4c:	f3bf 8f6f 	isb	sy
 8009f50:	f3bf 8f4f 	dsb	sy
 8009f54:	e7fe      	b.n	8009f54 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8009f56:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 8009f5a:	4b34      	ldr	r3, [pc, #208]	; (800a02c <xPortStartScheduler+0xf8>)
 8009f5c:	429a      	cmp	r2, r3
 8009f5e:	d108      	bne.n	8009f72 <xPortStartScheduler+0x3e>
 8009f60:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009f64:	f383 8811 	msr	BASEPRI, r3
 8009f68:	f3bf 8f6f 	isb	sy
 8009f6c:	f3bf 8f4f 	dsb	sy
 8009f70:	e7fe      	b.n	8009f70 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8009f72:	4b2f      	ldr	r3, [pc, #188]	; (800a030 <xPortStartScheduler+0xfc>)
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8009f74:	2100      	movs	r1, #0
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8009f76:	781a      	ldrb	r2, [r3, #0]
 8009f78:	b2d2      	uxtb	r2, r2
 8009f7a:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 8009f7c:	22ff      	movs	r2, #255	; 0xff
 8009f7e:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8009f80:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8009f82:	4a2c      	ldr	r2, [pc, #176]	; (800a034 <xPortStartScheduler+0x100>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8009f84:	b2db      	uxtb	r3, r3
 8009f86:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8009f8a:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8009f8e:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8009f92:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8009f94:	2307      	movs	r3, #7
 8009f96:	4a28      	ldr	r2, [pc, #160]	; (800a038 <xPortStartScheduler+0x104>)
 8009f98:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8009f9a:	f89d 0003 	ldrb.w	r0, [sp, #3]
 8009f9e:	1e5c      	subs	r4, r3, #1
 8009fa0:	0600      	lsls	r0, r0, #24
 8009fa2:	d40c      	bmi.n	8009fbe <xPortStartScheduler+0x8a>
 8009fa4:	b111      	cbz	r1, 8009fac <xPortStartScheduler+0x78>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8009fa6:	2b03      	cmp	r3, #3
 8009fa8:	6013      	str	r3, [r2, #0]
 8009faa:	d011      	beq.n	8009fd0 <xPortStartScheduler+0x9c>
 8009fac:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009fb0:	f383 8811 	msr	BASEPRI, r3
 8009fb4:	f3bf 8f6f 	isb	sy
 8009fb8:	f3bf 8f4f 	dsb	sy
 8009fbc:	e7fe      	b.n	8009fbc <xPortStartScheduler+0x88>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 8009fbe:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8009fc2:	2101      	movs	r1, #1
 8009fc4:	005b      	lsls	r3, r3, #1
 8009fc6:	b2db      	uxtb	r3, r3
 8009fc8:	f88d 3003 	strb.w	r3, [sp, #3]
 8009fcc:	4623      	mov	r3, r4
 8009fce:	e7e4      	b.n	8009f9a <xPortStartScheduler+0x66>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8009fd0:	f44f 7340 	mov.w	r3, #768	; 0x300
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8009fd4:	f04f 24e0 	mov.w	r4, #3758153728	; 0xe000e000
	uxCriticalNesting = 0;
 8009fd8:	2500      	movs	r5, #0
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8009fda:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8009fdc:	9b01      	ldr	r3, [sp, #4]
 8009fde:	4a14      	ldr	r2, [pc, #80]	; (800a030 <xPortStartScheduler+0xfc>)
 8009fe0:	b2db      	uxtb	r3, r3
 8009fe2:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8009fe4:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8009fe8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8009fec:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8009ff0:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8009ff4:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 8009ff8:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
 8009ffc:	f7ff ff88 	bl	8009f10 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800a000:	4b0e      	ldr	r3, [pc, #56]	; (800a03c <xPortStartScheduler+0x108>)
 800a002:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 800a004:	f7ff feb2 	bl	8009d6c <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800a008:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	; 0xf34
 800a00c:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800a010:	f8c4 3f34 	str.w	r3, [r4, #3892]	; 0xf34
	prvPortStartFirstTask();
 800a014:	f7ff fe96 	bl	8009d44 <prvPortStartFirstTask>
	vTaskSwitchContext();
 800a018:	f001 f888 	bl	800b12c <vTaskSwitchContext>
}
 800a01c:	4628      	mov	r0, r5
	prvTaskExitError();
 800a01e:	f7ff feaf 	bl	8009d80 <prvTaskExitError>
}
 800a022:	b003      	add	sp, #12
 800a024:	bd30      	pop	{r4, r5, pc}
 800a026:	bf00      	nop
 800a028:	410fc271 	.word	0x410fc271
 800a02c:	410fc270 	.word	0x410fc270
 800a030:	e000e400 	.word	0xe000e400
 800a034:	2400da00 	.word	0x2400da00
 800a038:	2400da04 	.word	0x2400da04
 800a03c:	24000058 	.word	0x24000058

0800a040 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800a040:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800a044:	2b0f      	cmp	r3, #15
 800a046:	d90e      	bls.n	800a066 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800a048:	4a11      	ldr	r2, [pc, #68]	; (800a090 <vPortValidateInterruptPriority+0x50>)
 800a04a:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800a04c:	4a11      	ldr	r2, [pc, #68]	; (800a094 <vPortValidateInterruptPriority+0x54>)
 800a04e:	7812      	ldrb	r2, [r2, #0]
 800a050:	429a      	cmp	r2, r3
 800a052:	d908      	bls.n	800a066 <vPortValidateInterruptPriority+0x26>
 800a054:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a058:	f383 8811 	msr	BASEPRI, r3
 800a05c:	f3bf 8f6f 	isb	sy
 800a060:	f3bf 8f4f 	dsb	sy
 800a064:	e7fe      	b.n	800a064 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800a066:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a06a:	4a0b      	ldr	r2, [pc, #44]	; (800a098 <vPortValidateInterruptPriority+0x58>)
 800a06c:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 800a070:	6812      	ldr	r2, [r2, #0]
 800a072:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800a076:	4293      	cmp	r3, r2
 800a078:	d908      	bls.n	800a08c <vPortValidateInterruptPriority+0x4c>
 800a07a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a07e:	f383 8811 	msr	BASEPRI, r3
 800a082:	f3bf 8f6f 	isb	sy
 800a086:	f3bf 8f4f 	dsb	sy
 800a08a:	e7fe      	b.n	800a08a <vPortValidateInterruptPriority+0x4a>
	}
 800a08c:	4770      	bx	lr
 800a08e:	bf00      	nop
 800a090:	e000e3f0 	.word	0xe000e3f0
 800a094:	2400da00 	.word	0x2400da00
 800a098:	2400da04 	.word	0x2400da04

0800a09c <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 800a09c:	b510      	push	{r4, lr}
 800a09e:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800a0a0:	f7ff feb8 	bl	8009e14 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800a0a4:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800a0a6:	f7ff fed5 	bl	8009e54 <vPortExitCritical>

	return xReturn;
}
 800a0aa:	fab4 f084 	clz	r0, r4
 800a0ae:	0940      	lsrs	r0, r0, #5
 800a0b0:	bd10      	pop	{r4, pc}

0800a0b2 <prvCopyDataToQueue>:
{
 800a0b2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a0b4:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800a0b6:	6c02      	ldr	r2, [r0, #64]	; 0x40
{
 800a0b8:	4604      	mov	r4, r0
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800a0ba:	6b86      	ldr	r6, [r0, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800a0bc:	b952      	cbnz	r2, 800a0d4 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800a0be:	6807      	ldr	r7, [r0, #0]
 800a0c0:	bb47      	cbnz	r7, 800a114 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800a0c2:	6880      	ldr	r0, [r0, #8]
 800a0c4:	f001 f990 	bl	800b3e8 <xTaskPriorityDisinherit>
 800a0c8:	4605      	mov	r5, r0
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800a0ca:	60a7      	str	r7, [r4, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800a0cc:	3601      	adds	r6, #1
}
 800a0ce:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800a0d0:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800a0d2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800a0d4:	b965      	cbnz	r5, 800a0f0 <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800a0d6:	6840      	ldr	r0, [r0, #4]
 800a0d8:	f015 fdfc 	bl	801fcd4 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800a0dc:	6863      	ldr	r3, [r4, #4]
 800a0de:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a0e0:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800a0e2:	68a2      	ldr	r2, [r4, #8]
 800a0e4:	4293      	cmp	r3, r2
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800a0e6:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800a0e8:	d3f0      	bcc.n	800a0cc <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800a0ea:	6823      	ldr	r3, [r4, #0]
 800a0ec:	6063      	str	r3, [r4, #4]
 800a0ee:	e7ed      	b.n	800a0cc <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800a0f0:	68c0      	ldr	r0, [r0, #12]
 800a0f2:	f015 fdef 	bl	801fcd4 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800a0f6:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a0f8:	68e3      	ldr	r3, [r4, #12]
 800a0fa:	4251      	negs	r1, r2
 800a0fc:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800a0fe:	6822      	ldr	r2, [r4, #0]
 800a100:	4293      	cmp	r3, r2
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800a102:	60e3      	str	r3, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800a104:	bf3e      	ittt	cc
 800a106:	68a3      	ldrcc	r3, [r4, #8]
 800a108:	185b      	addcc	r3, r3, r1
 800a10a:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800a10c:	2d02      	cmp	r5, #2
 800a10e:	d101      	bne.n	800a114 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800a110:	b116      	cbz	r6, 800a118 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 800a112:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 800a114:	2500      	movs	r5, #0
 800a116:	e7d9      	b.n	800a0cc <prvCopyDataToQueue+0x1a>
 800a118:	4635      	mov	r5, r6
 800a11a:	e7d7      	b.n	800a0cc <prvCopyDataToQueue+0x1a>

0800a11c <prvCopyDataFromQueue>:
{
 800a11c:	4603      	mov	r3, r0
 800a11e:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800a120:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 800a122:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800a124:	b162      	cbz	r2, 800a140 <prvCopyDataFromQueue+0x24>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800a126:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800a128:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800a12a:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800a12c:	428c      	cmp	r4, r1
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800a12e:	60dc      	str	r4, [r3, #12]
}
 800a130:	f85d 4b04 	ldr.w	r4, [sp], #4
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800a134:	bf24      	itt	cs
 800a136:	6819      	ldrcs	r1, [r3, #0]
 800a138:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800a13a:	68d9      	ldr	r1, [r3, #12]
 800a13c:	f015 bdca 	b.w	801fcd4 <memcpy>
}
 800a140:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a144:	4770      	bx	lr

0800a146 <prvUnlockQueue>:
{
 800a146:	b570      	push	{r4, r5, r6, lr}
 800a148:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800a14a:	f7ff fe63 	bl	8009e14 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800a14e:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800a152:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 800a156:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800a158:	2d00      	cmp	r5, #0
 800a15a:	dc14      	bgt.n	800a186 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 800a15c:	23ff      	movs	r3, #255	; 0xff
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800a15e:	f104 0610 	add.w	r6, r4, #16
		pxQueue->cTxLock = queueUNLOCKED;
 800a162:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800a166:	f7ff fe75 	bl	8009e54 <vPortExitCritical>
	taskENTER_CRITICAL();
 800a16a:	f7ff fe53 	bl	8009e14 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800a16e:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
 800a172:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800a174:	2d00      	cmp	r5, #0
 800a176:	dc12      	bgt.n	800a19e <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 800a178:	23ff      	movs	r3, #255	; 0xff
 800a17a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 800a17e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800a182:	f7ff be67 	b.w	8009e54 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800a186:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a188:	2b00      	cmp	r3, #0
 800a18a:	d0e7      	beq.n	800a15c <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800a18c:	4630      	mov	r0, r6
 800a18e:	f001 f849 	bl	800b224 <xTaskRemoveFromEventList>
 800a192:	b108      	cbz	r0, 800a198 <prvUnlockQueue+0x52>
						vTaskMissedYield();
 800a194:	f001 f8d2 	bl	800b33c <vTaskMissedYield>
			--cTxLock;
 800a198:	3d01      	subs	r5, #1
 800a19a:	b26d      	sxtb	r5, r5
 800a19c:	e7dc      	b.n	800a158 <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800a19e:	6923      	ldr	r3, [r4, #16]
 800a1a0:	2b00      	cmp	r3, #0
 800a1a2:	d0e9      	beq.n	800a178 <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800a1a4:	4630      	mov	r0, r6
 800a1a6:	f001 f83d 	bl	800b224 <xTaskRemoveFromEventList>
 800a1aa:	b108      	cbz	r0, 800a1b0 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 800a1ac:	f001 f8c6 	bl	800b33c <vTaskMissedYield>
				--cRxLock;
 800a1b0:	3d01      	subs	r5, #1
 800a1b2:	b26d      	sxtb	r5, r5
 800a1b4:	e7de      	b.n	800a174 <prvUnlockQueue+0x2e>

0800a1b6 <xQueueGenericReset>:
{
 800a1b6:	b538      	push	{r3, r4, r5, lr}
 800a1b8:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800a1ba:	4604      	mov	r4, r0
 800a1bc:	b940      	cbnz	r0, 800a1d0 <xQueueGenericReset+0x1a>
 800a1be:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a1c2:	f383 8811 	msr	BASEPRI, r3
 800a1c6:	f3bf 8f6f 	isb	sy
 800a1ca:	f3bf 8f4f 	dsb	sy
 800a1ce:	e7fe      	b.n	800a1ce <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 800a1d0:	f7ff fe20 	bl	8009e14 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800a1d4:	6822      	ldr	r2, [r4, #0]
 800a1d6:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800a1da:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800a1dc:	434b      	muls	r3, r1
 800a1de:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800a1e0:	1a5b      	subs	r3, r3, r1
 800a1e2:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800a1e4:	60a0      	str	r0, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800a1e6:	2000      	movs	r0, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800a1e8:	60e3      	str	r3, [r4, #12]
		pxQueue->cRxLock = queueUNLOCKED;
 800a1ea:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800a1ec:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800a1ee:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 800a1f2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 800a1f6:	b9a5      	cbnz	r5, 800a222 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800a1f8:	6923      	ldr	r3, [r4, #16]
 800a1fa:	b173      	cbz	r3, 800a21a <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800a1fc:	f104 0010 	add.w	r0, r4, #16
 800a200:	f001 f810 	bl	800b224 <xTaskRemoveFromEventList>
 800a204:	b148      	cbz	r0, 800a21a <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 800a206:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a20a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a20e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a212:	f3bf 8f4f 	dsb	sy
 800a216:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 800a21a:	f7ff fe1b 	bl	8009e54 <vPortExitCritical>
}
 800a21e:	2001      	movs	r0, #1
 800a220:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800a222:	f104 0010 	add.w	r0, r4, #16
 800a226:	f7ff fd4b 	bl	8009cc0 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800a22a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800a22e:	f7ff fd47 	bl	8009cc0 <vListInitialise>
 800a232:	e7f2      	b.n	800a21a <xQueueGenericReset+0x64>

0800a234 <xQueueGenericCreateStatic>:
	{
 800a234:	b513      	push	{r0, r1, r4, lr}
 800a236:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800a238:	b940      	cbnz	r0, 800a24c <xQueueGenericCreateStatic+0x18>
 800a23a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a23e:	f383 8811 	msr	BASEPRI, r3
 800a242:	f3bf 8f6f 	isb	sy
 800a246:	f3bf 8f4f 	dsb	sy
 800a24a:	e7fe      	b.n	800a24a <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 800a24c:	b943      	cbnz	r3, 800a260 <xQueueGenericCreateStatic+0x2c>
 800a24e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a252:	f383 8811 	msr	BASEPRI, r3
 800a256:	f3bf 8f6f 	isb	sy
 800a25a:	f3bf 8f4f 	dsb	sy
 800a25e:	e7fe      	b.n	800a25e <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800a260:	b14a      	cbz	r2, 800a276 <xQueueGenericCreateStatic+0x42>
 800a262:	b991      	cbnz	r1, 800a28a <xQueueGenericCreateStatic+0x56>
 800a264:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a268:	f383 8811 	msr	BASEPRI, r3
 800a26c:	f3bf 8f6f 	isb	sy
 800a270:	f3bf 8f4f 	dsb	sy
 800a274:	e7fe      	b.n	800a274 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800a276:	b141      	cbz	r1, 800a28a <xQueueGenericCreateStatic+0x56>
 800a278:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a27c:	f383 8811 	msr	BASEPRI, r3
 800a280:	f3bf 8f6f 	isb	sy
 800a284:	f3bf 8f4f 	dsb	sy
 800a288:	e7fe      	b.n	800a288 <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800a28a:	2350      	movs	r3, #80	; 0x50
 800a28c:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800a28e:	9b01      	ldr	r3, [sp, #4]
 800a290:	2b50      	cmp	r3, #80	; 0x50
 800a292:	d008      	beq.n	800a2a6 <xQueueGenericCreateStatic+0x72>
 800a294:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a298:	f383 8811 	msr	BASEPRI, r3
 800a29c:	f3bf 8f6f 	isb	sy
 800a2a0:	f3bf 8f4f 	dsb	sy
 800a2a4:	e7fe      	b.n	800a2a4 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 800a2a6:	2900      	cmp	r1, #0
 800a2a8:	bf08      	it	eq
 800a2aa:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800a2ac:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800a2ae:	2301      	movs	r3, #1
 800a2b0:	6022      	str	r2, [r4, #0]
 800a2b2:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	pxNewQueue->uxItemSize = uxItemSize;
 800a2b6:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800a2ba:	4619      	mov	r1, r3
 800a2bc:	4620      	mov	r0, r4
 800a2be:	f7ff ff7a 	bl	800a1b6 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 800a2c2:	f89d 3010 	ldrb.w	r3, [sp, #16]
	}
 800a2c6:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
 800a2c8:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 800a2cc:	b002      	add	sp, #8
 800a2ce:	bd10      	pop	{r4, pc}

0800a2d0 <xQueueGenericCreate>:
	{
 800a2d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a2d2:	460d      	mov	r5, r1
 800a2d4:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800a2d6:	4606      	mov	r6, r0
 800a2d8:	b940      	cbnz	r0, 800a2ec <xQueueGenericCreate+0x1c>
 800a2da:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a2de:	f383 8811 	msr	BASEPRI, r3
 800a2e2:	f3bf 8f6f 	isb	sy
 800a2e6:	f3bf 8f4f 	dsb	sy
 800a2ea:	e7fe      	b.n	800a2ea <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a2ec:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800a2ee:	3050      	adds	r0, #80	; 0x50
 800a2f0:	f7ff fc10 	bl	8009b14 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800a2f4:	4604      	mov	r4, r0
 800a2f6:	b170      	cbz	r0, 800a316 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800a2f8:	2300      	movs	r3, #0
 800a2fa:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800a2fe:	b165      	cbz	r5, 800a31a <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800a300:	f100 0350 	add.w	r3, r0, #80	; 0x50
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800a304:	2101      	movs	r1, #1
 800a306:	4620      	mov	r0, r4
 800a308:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800a30a:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800a30e:	f7ff ff52 	bl	800a1b6 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 800a312:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 800a316:	4620      	mov	r0, r4
 800a318:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a31a:	4603      	mov	r3, r0
 800a31c:	e7f2      	b.n	800a304 <xQueueGenericCreate+0x34>

0800a31e <xQueueCreateCountingSemaphoreStatic>:
	{
 800a31e:	b513      	push	{r0, r1, r4, lr}
 800a320:	4613      	mov	r3, r2
 800a322:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 800a324:	b940      	cbnz	r0, 800a338 <xQueueCreateCountingSemaphoreStatic+0x1a>
 800a326:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a32a:	f383 8811 	msr	BASEPRI, r3
 800a32e:	f3bf 8f6f 	isb	sy
 800a332:	f3bf 8f4f 	dsb	sy
 800a336:	e7fe      	b.n	800a336 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 800a338:	4288      	cmp	r0, r1
 800a33a:	d208      	bcs.n	800a34e <xQueueCreateCountingSemaphoreStatic+0x30>
 800a33c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a340:	f383 8811 	msr	BASEPRI, r3
 800a344:	f3bf 8f6f 	isb	sy
 800a348:	f3bf 8f4f 	dsb	sy
 800a34c:	e7fe      	b.n	800a34c <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800a34e:	2202      	movs	r2, #2
 800a350:	9200      	str	r2, [sp, #0]
 800a352:	2200      	movs	r2, #0
 800a354:	4611      	mov	r1, r2
 800a356:	f7ff ff6d 	bl	800a234 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 800a35a:	b100      	cbz	r0, 800a35e <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800a35c:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800a35e:	b002      	add	sp, #8
 800a360:	bd10      	pop	{r4, pc}

0800a362 <xQueueCreateCountingSemaphore>:
	{
 800a362:	b510      	push	{r4, lr}
 800a364:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 800a366:	b940      	cbnz	r0, 800a37a <xQueueCreateCountingSemaphore+0x18>
 800a368:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a36c:	f383 8811 	msr	BASEPRI, r3
 800a370:	f3bf 8f6f 	isb	sy
 800a374:	f3bf 8f4f 	dsb	sy
 800a378:	e7fe      	b.n	800a378 <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 800a37a:	4288      	cmp	r0, r1
 800a37c:	d208      	bcs.n	800a390 <xQueueCreateCountingSemaphore+0x2e>
 800a37e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a382:	f383 8811 	msr	BASEPRI, r3
 800a386:	f3bf 8f6f 	isb	sy
 800a38a:	f3bf 8f4f 	dsb	sy
 800a38e:	e7fe      	b.n	800a38e <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800a390:	2202      	movs	r2, #2
 800a392:	2100      	movs	r1, #0
 800a394:	f7ff ff9c 	bl	800a2d0 <xQueueGenericCreate>
		if( xHandle != NULL )
 800a398:	b100      	cbz	r0, 800a39c <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800a39a:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800a39c:	bd10      	pop	{r4, pc}

0800a39e <xQueueGenericSend>:
{
 800a39e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a3a2:	b085      	sub	sp, #20
 800a3a4:	4688      	mov	r8, r1
 800a3a6:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800a3a8:	4604      	mov	r4, r0
{
 800a3aa:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 800a3ac:	b940      	cbnz	r0, 800a3c0 <xQueueGenericSend+0x22>
 800a3ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a3b2:	f383 8811 	msr	BASEPRI, r3
 800a3b6:	f3bf 8f6f 	isb	sy
 800a3ba:	f3bf 8f4f 	dsb	sy
 800a3be:	e7fe      	b.n	800a3be <xQueueGenericSend+0x20>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800a3c0:	b951      	cbnz	r1, 800a3d8 <xQueueGenericSend+0x3a>
 800a3c2:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800a3c4:	b143      	cbz	r3, 800a3d8 <xQueueGenericSend+0x3a>
 800a3c6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a3ca:	f383 8811 	msr	BASEPRI, r3
 800a3ce:	f3bf 8f6f 	isb	sy
 800a3d2:	f3bf 8f4f 	dsb	sy
 800a3d6:	e7fe      	b.n	800a3d6 <xQueueGenericSend+0x38>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800a3d8:	2f02      	cmp	r7, #2
 800a3da:	d10b      	bne.n	800a3f4 <xQueueGenericSend+0x56>
 800a3dc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800a3de:	2b01      	cmp	r3, #1
 800a3e0:	d008      	beq.n	800a3f4 <xQueueGenericSend+0x56>
 800a3e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a3e6:	f383 8811 	msr	BASEPRI, r3
 800a3ea:	f3bf 8f6f 	isb	sy
 800a3ee:	f3bf 8f4f 	dsb	sy
 800a3f2:	e7fe      	b.n	800a3f2 <xQueueGenericSend+0x54>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800a3f4:	f000 ffa8 	bl	800b348 <xTaskGetSchedulerState>
 800a3f8:	4606      	mov	r6, r0
 800a3fa:	b950      	cbnz	r0, 800a412 <xQueueGenericSend+0x74>
 800a3fc:	9b01      	ldr	r3, [sp, #4]
 800a3fe:	b14b      	cbz	r3, 800a414 <xQueueGenericSend+0x76>
 800a400:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a404:	f383 8811 	msr	BASEPRI, r3
 800a408:	f3bf 8f6f 	isb	sy
 800a40c:	f3bf 8f4f 	dsb	sy
 800a410:	e7fe      	b.n	800a410 <xQueueGenericSend+0x72>
 800a412:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 800a414:	f04f 0900 	mov.w	r9, #0
 800a418:	e037      	b.n	800a48a <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 800a41a:	9d01      	ldr	r5, [sp, #4]
 800a41c:	b91d      	cbnz	r5, 800a426 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 800a41e:	f7ff fd19 	bl	8009e54 <vPortExitCritical>
			return errQUEUE_FULL;
 800a422:	2000      	movs	r0, #0
 800a424:	e052      	b.n	800a4cc <xQueueGenericSend+0x12e>
				else if( xEntryTimeSet == pdFALSE )
 800a426:	b916      	cbnz	r6, 800a42e <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800a428:	a802      	add	r0, sp, #8
 800a42a:	f000 ff3f 	bl	800b2ac <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800a42e:	f7ff fd11 	bl	8009e54 <vPortExitCritical>
		vTaskSuspendAll();
 800a432:	f000 fcf9 	bl	800ae28 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800a436:	f7ff fced 	bl	8009e14 <vPortEnterCritical>
 800a43a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800a43e:	2bff      	cmp	r3, #255	; 0xff
 800a440:	d101      	bne.n	800a446 <xQueueGenericSend+0xa8>
 800a442:	f884 9044 	strb.w	r9, [r4, #68]	; 0x44
 800a446:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800a44a:	2bff      	cmp	r3, #255	; 0xff
 800a44c:	d101      	bne.n	800a452 <xQueueGenericSend+0xb4>
 800a44e:	f884 9045 	strb.w	r9, [r4, #69]	; 0x45
 800a452:	f7ff fcff 	bl	8009e54 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800a456:	a901      	add	r1, sp, #4
 800a458:	a802      	add	r0, sp, #8
 800a45a:	f000 ff33 	bl	800b2c4 <xTaskCheckForTimeOut>
 800a45e:	2800      	cmp	r0, #0
 800a460:	d14a      	bne.n	800a4f8 <xQueueGenericSend+0x15a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800a462:	f7ff fcd7 	bl	8009e14 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800a466:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800a468:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800a46a:	429a      	cmp	r2, r3
 800a46c:	d131      	bne.n	800a4d2 <xQueueGenericSend+0x134>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800a46e:	f7ff fcf1 	bl	8009e54 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800a472:	9901      	ldr	r1, [sp, #4]
 800a474:	f104 0010 	add.w	r0, r4, #16
 800a478:	f000 fe9c 	bl	800b1b4 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800a47c:	4620      	mov	r0, r4
 800a47e:	f7ff fe62 	bl	800a146 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800a482:	f000 fd75 	bl	800af70 <xTaskResumeAll>
 800a486:	b360      	cbz	r0, 800a4e2 <xQueueGenericSend+0x144>
 800a488:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800a48a:	f7ff fcc3 	bl	8009e14 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800a48e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800a490:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800a492:	429a      	cmp	r2, r3
 800a494:	d301      	bcc.n	800a49a <xQueueGenericSend+0xfc>
 800a496:	2f02      	cmp	r7, #2
 800a498:	d1bf      	bne.n	800a41a <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800a49a:	463a      	mov	r2, r7
 800a49c:	4641      	mov	r1, r8
 800a49e:	4620      	mov	r0, r4
 800a4a0:	f7ff fe07 	bl	800a0b2 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800a4a4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a4a6:	b11b      	cbz	r3, 800a4b0 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800a4a8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800a4ac:	f000 feba 	bl	800b224 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 800a4b0:	b148      	cbz	r0, 800a4c6 <xQueueGenericSend+0x128>
						queueYIELD_IF_USING_PREEMPTION();
 800a4b2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a4b6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a4ba:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a4be:	f3bf 8f4f 	dsb	sy
 800a4c2:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800a4c6:	f7ff fcc5 	bl	8009e54 <vPortExitCritical>
				return pdPASS;
 800a4ca:	2001      	movs	r0, #1
}
 800a4cc:	b005      	add	sp, #20
 800a4ce:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 800a4d2:	f7ff fcbf 	bl	8009e54 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 800a4d6:	4620      	mov	r0, r4
 800a4d8:	f7ff fe35 	bl	800a146 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800a4dc:	f000 fd48 	bl	800af70 <xTaskResumeAll>
 800a4e0:	e7d2      	b.n	800a488 <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 800a4e2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a4e6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a4ea:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a4ee:	f3bf 8f4f 	dsb	sy
 800a4f2:	f3bf 8f6f 	isb	sy
 800a4f6:	e7c7      	b.n	800a488 <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 800a4f8:	4620      	mov	r0, r4
 800a4fa:	f7ff fe24 	bl	800a146 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800a4fe:	f000 fd37 	bl	800af70 <xTaskResumeAll>
 800a502:	e78e      	b.n	800a422 <xQueueGenericSend+0x84>

0800a504 <xQueueGenericSendFromISR>:
{
 800a504:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800a508:	4689      	mov	r9, r1
 800a50a:	4690      	mov	r8, r2
 800a50c:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800a50e:	4604      	mov	r4, r0
 800a510:	b940      	cbnz	r0, 800a524 <xQueueGenericSendFromISR+0x20>
 800a512:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a516:	f383 8811 	msr	BASEPRI, r3
 800a51a:	f3bf 8f6f 	isb	sy
 800a51e:	f3bf 8f4f 	dsb	sy
 800a522:	e7fe      	b.n	800a522 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800a524:	b951      	cbnz	r1, 800a53c <xQueueGenericSendFromISR+0x38>
 800a526:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800a528:	b143      	cbz	r3, 800a53c <xQueueGenericSendFromISR+0x38>
 800a52a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a52e:	f383 8811 	msr	BASEPRI, r3
 800a532:	f3bf 8f6f 	isb	sy
 800a536:	f3bf 8f4f 	dsb	sy
 800a53a:	e7fe      	b.n	800a53a <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800a53c:	2f02      	cmp	r7, #2
 800a53e:	d10b      	bne.n	800a558 <xQueueGenericSendFromISR+0x54>
 800a540:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800a542:	2b01      	cmp	r3, #1
 800a544:	d008      	beq.n	800a558 <xQueueGenericSendFromISR+0x54>
 800a546:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a54a:	f383 8811 	msr	BASEPRI, r3
 800a54e:	f3bf 8f6f 	isb	sy
 800a552:	f3bf 8f4f 	dsb	sy
 800a556:	e7fe      	b.n	800a556 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800a558:	f7ff fd72 	bl	800a040 <vPortValidateInterruptPriority>
	__asm volatile
 800a55c:	f3ef 8611 	mrs	r6, BASEPRI
 800a560:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a564:	f383 8811 	msr	BASEPRI, r3
 800a568:	f3bf 8f6f 	isb	sy
 800a56c:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800a570:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800a572:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800a574:	429a      	cmp	r2, r3
 800a576:	d301      	bcc.n	800a57c <xQueueGenericSendFromISR+0x78>
 800a578:	2f02      	cmp	r7, #2
 800a57a:	d123      	bne.n	800a5c4 <xQueueGenericSendFromISR+0xc0>
			const int8_t cTxLock = pxQueue->cTxLock;
 800a57c:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800a580:	463a      	mov	r2, r7
 800a582:	4649      	mov	r1, r9
 800a584:	4620      	mov	r0, r4
			const int8_t cTxLock = pxQueue->cTxLock;
 800a586:	b26d      	sxtb	r5, r5
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800a588:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800a58a:	f7ff fd92 	bl	800a0b2 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800a58e:	1c6b      	adds	r3, r5, #1
 800a590:	d113      	bne.n	800a5ba <xQueueGenericSendFromISR+0xb6>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800a592:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a594:	b90b      	cbnz	r3, 800a59a <xQueueGenericSendFromISR+0x96>
			xReturn = pdPASS;
 800a596:	2001      	movs	r0, #1
 800a598:	e00b      	b.n	800a5b2 <xQueueGenericSendFromISR+0xae>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800a59a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800a59e:	f000 fe41 	bl	800b224 <xTaskRemoveFromEventList>
 800a5a2:	2800      	cmp	r0, #0
 800a5a4:	d0f7      	beq.n	800a596 <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 800a5a6:	f1b8 0f00 	cmp.w	r8, #0
 800a5aa:	d0f4      	beq.n	800a596 <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800a5ac:	2001      	movs	r0, #1
 800a5ae:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 800a5b2:	f386 8811 	msr	BASEPRI, r6
}
 800a5b6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800a5ba:	3501      	adds	r5, #1
 800a5bc:	b26d      	sxtb	r5, r5
 800a5be:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 800a5c2:	e7e8      	b.n	800a596 <xQueueGenericSendFromISR+0x92>
			xReturn = errQUEUE_FULL;
 800a5c4:	2000      	movs	r0, #0
 800a5c6:	e7f4      	b.n	800a5b2 <xQueueGenericSendFromISR+0xae>

0800a5c8 <xQueueGiveFromISR>:
{
 800a5c8:	b570      	push	{r4, r5, r6, lr}
 800a5ca:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800a5cc:	4604      	mov	r4, r0
 800a5ce:	b940      	cbnz	r0, 800a5e2 <xQueueGiveFromISR+0x1a>
	__asm volatile
 800a5d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a5d4:	f383 8811 	msr	BASEPRI, r3
 800a5d8:	f3bf 8f6f 	isb	sy
 800a5dc:	f3bf 8f4f 	dsb	sy
 800a5e0:	e7fe      	b.n	800a5e0 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 800a5e2:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800a5e4:	b143      	cbz	r3, 800a5f8 <xQueueGiveFromISR+0x30>
 800a5e6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a5ea:	f383 8811 	msr	BASEPRI, r3
 800a5ee:	f3bf 8f6f 	isb	sy
 800a5f2:	f3bf 8f4f 	dsb	sy
 800a5f6:	e7fe      	b.n	800a5f6 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800a5f8:	6803      	ldr	r3, [r0, #0]
 800a5fa:	b953      	cbnz	r3, 800a612 <xQueueGiveFromISR+0x4a>
 800a5fc:	6883      	ldr	r3, [r0, #8]
 800a5fe:	b143      	cbz	r3, 800a612 <xQueueGiveFromISR+0x4a>
 800a600:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a604:	f383 8811 	msr	BASEPRI, r3
 800a608:	f3bf 8f6f 	isb	sy
 800a60c:	f3bf 8f4f 	dsb	sy
 800a610:	e7fe      	b.n	800a610 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800a612:	f7ff fd15 	bl	800a040 <vPortValidateInterruptPriority>
	__asm volatile
 800a616:	f3ef 8611 	mrs	r6, BASEPRI
 800a61a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a61e:	f383 8811 	msr	BASEPRI, r3
 800a622:	f3bf 8f6f 	isb	sy
 800a626:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800a62a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800a62c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800a62e:	4293      	cmp	r3, r2
 800a630:	d91c      	bls.n	800a66c <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 800a632:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800a636:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 800a638:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 800a63a:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800a63c:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 800a63e:	d110      	bne.n	800a662 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800a640:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a642:	b90b      	cbnz	r3, 800a648 <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 800a644:	2001      	movs	r0, #1
 800a646:	e009      	b.n	800a65c <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800a648:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800a64c:	f000 fdea 	bl	800b224 <xTaskRemoveFromEventList>
 800a650:	2800      	cmp	r0, #0
 800a652:	d0f7      	beq.n	800a644 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 800a654:	2d00      	cmp	r5, #0
 800a656:	d0f5      	beq.n	800a644 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800a658:	2001      	movs	r0, #1
 800a65a:	6028      	str	r0, [r5, #0]
	__asm volatile
 800a65c:	f386 8811 	msr	BASEPRI, r6
}
 800a660:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800a662:	3301      	adds	r3, #1
 800a664:	b25b      	sxtb	r3, r3
 800a666:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800a66a:	e7eb      	b.n	800a644 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 800a66c:	2000      	movs	r0, #0
 800a66e:	e7f5      	b.n	800a65c <xQueueGiveFromISR+0x94>

0800a670 <xQueueReceive>:
{
 800a670:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800a674:	460f      	mov	r7, r1
	configASSERT( ( pxQueue ) );
 800a676:	4604      	mov	r4, r0
{
 800a678:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800a67a:	b940      	cbnz	r0, 800a68e <xQueueReceive+0x1e>
	__asm volatile
 800a67c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a680:	f383 8811 	msr	BASEPRI, r3
 800a684:	f3bf 8f6f 	isb	sy
 800a688:	f3bf 8f4f 	dsb	sy
 800a68c:	e7fe      	b.n	800a68c <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800a68e:	b951      	cbnz	r1, 800a6a6 <xQueueReceive+0x36>
 800a690:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800a692:	b143      	cbz	r3, 800a6a6 <xQueueReceive+0x36>
 800a694:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a698:	f383 8811 	msr	BASEPRI, r3
 800a69c:	f3bf 8f6f 	isb	sy
 800a6a0:	f3bf 8f4f 	dsb	sy
 800a6a4:	e7fe      	b.n	800a6a4 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800a6a6:	f000 fe4f 	bl	800b348 <xTaskGetSchedulerState>
 800a6aa:	4606      	mov	r6, r0
 800a6ac:	b950      	cbnz	r0, 800a6c4 <xQueueReceive+0x54>
 800a6ae:	9b01      	ldr	r3, [sp, #4]
 800a6b0:	b14b      	cbz	r3, 800a6c6 <xQueueReceive+0x56>
 800a6b2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a6b6:	f383 8811 	msr	BASEPRI, r3
 800a6ba:	f3bf 8f6f 	isb	sy
 800a6be:	f3bf 8f4f 	dsb	sy
 800a6c2:	e7fe      	b.n	800a6c2 <xQueueReceive+0x52>
 800a6c4:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 800a6c6:	f04f 0800 	mov.w	r8, #0
 800a6ca:	e03d      	b.n	800a748 <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 800a6cc:	9d01      	ldr	r5, [sp, #4]
 800a6ce:	b91d      	cbnz	r5, 800a6d8 <xQueueReceive+0x68>
					taskEXIT_CRITICAL();
 800a6d0:	f7ff fbc0 	bl	8009e54 <vPortExitCritical>
				return errQUEUE_EMPTY;
 800a6d4:	2000      	movs	r0, #0
 800a6d6:	e056      	b.n	800a786 <xQueueReceive+0x116>
				else if( xEntryTimeSet == pdFALSE )
 800a6d8:	b916      	cbnz	r6, 800a6e0 <xQueueReceive+0x70>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800a6da:	a802      	add	r0, sp, #8
 800a6dc:	f000 fde6 	bl	800b2ac <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800a6e0:	f7ff fbb8 	bl	8009e54 <vPortExitCritical>
		vTaskSuspendAll();
 800a6e4:	f000 fba0 	bl	800ae28 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800a6e8:	f7ff fb94 	bl	8009e14 <vPortEnterCritical>
 800a6ec:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800a6f0:	2bff      	cmp	r3, #255	; 0xff
 800a6f2:	d101      	bne.n	800a6f8 <xQueueReceive+0x88>
 800a6f4:	f884 8044 	strb.w	r8, [r4, #68]	; 0x44
 800a6f8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800a6fc:	2bff      	cmp	r3, #255	; 0xff
 800a6fe:	d101      	bne.n	800a704 <xQueueReceive+0x94>
 800a700:	f884 8045 	strb.w	r8, [r4, #69]	; 0x45
 800a704:	f7ff fba6 	bl	8009e54 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800a708:	a901      	add	r1, sp, #4
 800a70a:	a802      	add	r0, sp, #8
 800a70c:	f000 fdda 	bl	800b2c4 <xTaskCheckForTimeOut>
 800a710:	2800      	cmp	r0, #0
 800a712:	d141      	bne.n	800a798 <xQueueReceive+0x128>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800a714:	4620      	mov	r0, r4
 800a716:	f7ff fcc1 	bl	800a09c <prvIsQueueEmpty>
 800a71a:	b3b8      	cbz	r0, 800a78c <xQueueReceive+0x11c>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800a71c:	9901      	ldr	r1, [sp, #4]
 800a71e:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800a722:	f000 fd47 	bl	800b1b4 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800a726:	4620      	mov	r0, r4
 800a728:	f7ff fd0d 	bl	800a146 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800a72c:	f000 fc20 	bl	800af70 <xTaskResumeAll>
 800a730:	b948      	cbnz	r0, 800a746 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 800a732:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a736:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a73a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a73e:	f3bf 8f4f 	dsb	sy
 800a742:	f3bf 8f6f 	isb	sy
 800a746:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800a748:	f7ff fb64 	bl	8009e14 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800a74c:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800a74e:	2d00      	cmp	r5, #0
 800a750:	d0bc      	beq.n	800a6cc <xQueueReceive+0x5c>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800a752:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 800a754:	4639      	mov	r1, r7
 800a756:	4620      	mov	r0, r4
 800a758:	f7ff fce0 	bl	800a11c <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800a75c:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800a75e:	6923      	ldr	r3, [r4, #16]
 800a760:	b173      	cbz	r3, 800a780 <xQueueReceive+0x110>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800a762:	f104 0010 	add.w	r0, r4, #16
 800a766:	f000 fd5d 	bl	800b224 <xTaskRemoveFromEventList>
 800a76a:	b148      	cbz	r0, 800a780 <xQueueReceive+0x110>
						queueYIELD_IF_USING_PREEMPTION();
 800a76c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a770:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a774:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a778:	f3bf 8f4f 	dsb	sy
 800a77c:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800a780:	f7ff fb68 	bl	8009e54 <vPortExitCritical>
				return pdPASS;
 800a784:	2001      	movs	r0, #1
}
 800a786:	b004      	add	sp, #16
 800a788:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 800a78c:	4620      	mov	r0, r4
 800a78e:	f7ff fcda 	bl	800a146 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800a792:	f000 fbed 	bl	800af70 <xTaskResumeAll>
 800a796:	e7d6      	b.n	800a746 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 800a798:	4620      	mov	r0, r4
 800a79a:	f7ff fcd4 	bl	800a146 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800a79e:	f000 fbe7 	bl	800af70 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800a7a2:	4620      	mov	r0, r4
 800a7a4:	f7ff fc7a 	bl	800a09c <prvIsQueueEmpty>
 800a7a8:	2800      	cmp	r0, #0
 800a7aa:	d0cc      	beq.n	800a746 <xQueueReceive+0xd6>
 800a7ac:	e792      	b.n	800a6d4 <xQueueReceive+0x64>

0800a7ae <xQueueSemaphoreTake>:
{
 800a7ae:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a7b0:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 800a7b2:	4604      	mov	r4, r0
{
 800a7b4:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800a7b6:	b940      	cbnz	r0, 800a7ca <xQueueSemaphoreTake+0x1c>
 800a7b8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a7bc:	f383 8811 	msr	BASEPRI, r3
 800a7c0:	f3bf 8f6f 	isb	sy
 800a7c4:	f3bf 8f4f 	dsb	sy
 800a7c8:	e7fe      	b.n	800a7c8 <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 800a7ca:	6c05      	ldr	r5, [r0, #64]	; 0x40
 800a7cc:	b145      	cbz	r5, 800a7e0 <xQueueSemaphoreTake+0x32>
 800a7ce:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a7d2:	f383 8811 	msr	BASEPRI, r3
 800a7d6:	f3bf 8f6f 	isb	sy
 800a7da:	f3bf 8f4f 	dsb	sy
 800a7de:	e7fe      	b.n	800a7de <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800a7e0:	f000 fdb2 	bl	800b348 <xTaskGetSchedulerState>
 800a7e4:	4606      	mov	r6, r0
 800a7e6:	b950      	cbnz	r0, 800a7fe <xQueueSemaphoreTake+0x50>
 800a7e8:	9b01      	ldr	r3, [sp, #4]
 800a7ea:	b15b      	cbz	r3, 800a804 <xQueueSemaphoreTake+0x56>
 800a7ec:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a7f0:	f383 8811 	msr	BASEPRI, r3
 800a7f4:	f3bf 8f6f 	isb	sy
 800a7f8:	f3bf 8f4f 	dsb	sy
 800a7fc:	e7fe      	b.n	800a7fc <xQueueSemaphoreTake+0x4e>
 800a7fe:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 800a800:	2700      	movs	r7, #0
 800a802:	e053      	b.n	800a8ac <xQueueSemaphoreTake+0xfe>
 800a804:	4605      	mov	r5, r0
 800a806:	e7fb      	b.n	800a800 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 800a808:	9b01      	ldr	r3, [sp, #4]
 800a80a:	b963      	cbnz	r3, 800a826 <xQueueSemaphoreTake+0x78>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800a80c:	b145      	cbz	r5, 800a820 <xQueueSemaphoreTake+0x72>
 800a80e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a812:	f383 8811 	msr	BASEPRI, r3
 800a816:	f3bf 8f6f 	isb	sy
 800a81a:	f3bf 8f4f 	dsb	sy
 800a81e:	e7fe      	b.n	800a81e <xQueueSemaphoreTake+0x70>
					taskEXIT_CRITICAL();
 800a820:	f7ff fb18 	bl	8009e54 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800a824:	e062      	b.n	800a8ec <xQueueSemaphoreTake+0x13e>
				else if( xEntryTimeSet == pdFALSE )
 800a826:	b916      	cbnz	r6, 800a82e <xQueueSemaphoreTake+0x80>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800a828:	a802      	add	r0, sp, #8
 800a82a:	f000 fd3f 	bl	800b2ac <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800a82e:	f7ff fb11 	bl	8009e54 <vPortExitCritical>
		vTaskSuspendAll();
 800a832:	f000 faf9 	bl	800ae28 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800a836:	f7ff faed 	bl	8009e14 <vPortEnterCritical>
 800a83a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800a83e:	2bff      	cmp	r3, #255	; 0xff
 800a840:	d101      	bne.n	800a846 <xQueueSemaphoreTake+0x98>
 800a842:	f884 7044 	strb.w	r7, [r4, #68]	; 0x44
 800a846:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800a84a:	2bff      	cmp	r3, #255	; 0xff
 800a84c:	d101      	bne.n	800a852 <xQueueSemaphoreTake+0xa4>
 800a84e:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 800a852:	f7ff faff 	bl	8009e54 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800a856:	a901      	add	r1, sp, #4
 800a858:	a802      	add	r0, sp, #8
 800a85a:	f000 fd33 	bl	800b2c4 <xTaskCheckForTimeOut>
 800a85e:	2800      	cmp	r0, #0
 800a860:	d14d      	bne.n	800a8fe <xQueueSemaphoreTake+0x150>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800a862:	4620      	mov	r0, r4
 800a864:	f7ff fc1a 	bl	800a09c <prvIsQueueEmpty>
 800a868:	2800      	cmp	r0, #0
 800a86a:	d042      	beq.n	800a8f2 <xQueueSemaphoreTake+0x144>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800a86c:	6823      	ldr	r3, [r4, #0]
 800a86e:	b93b      	cbnz	r3, 800a880 <xQueueSemaphoreTake+0xd2>
						taskENTER_CRITICAL();
 800a870:	f7ff fad0 	bl	8009e14 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800a874:	68a0      	ldr	r0, [r4, #8]
 800a876:	f000 fd77 	bl	800b368 <xTaskPriorityInherit>
 800a87a:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 800a87c:	f7ff faea 	bl	8009e54 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800a880:	9901      	ldr	r1, [sp, #4]
 800a882:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800a886:	f000 fc95 	bl	800b1b4 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800a88a:	4620      	mov	r0, r4
 800a88c:	f7ff fc5b 	bl	800a146 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800a890:	f000 fb6e 	bl	800af70 <xTaskResumeAll>
 800a894:	b948      	cbnz	r0, 800a8aa <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 800a896:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a89a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a89e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a8a2:	f3bf 8f4f 	dsb	sy
 800a8a6:	f3bf 8f6f 	isb	sy
 800a8aa:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800a8ac:	f7ff fab2 	bl	8009e14 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800a8b0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800a8b2:	2b00      	cmp	r3, #0
 800a8b4:	d0a8      	beq.n	800a808 <xQueueSemaphoreTake+0x5a>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800a8b6:	3b01      	subs	r3, #1
 800a8b8:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800a8ba:	6823      	ldr	r3, [r4, #0]
 800a8bc:	b913      	cbnz	r3, 800a8c4 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800a8be:	f000 fe29 	bl	800b514 <pvTaskIncrementMutexHeldCount>
 800a8c2:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800a8c4:	6923      	ldr	r3, [r4, #16]
 800a8c6:	b173      	cbz	r3, 800a8e6 <xQueueSemaphoreTake+0x138>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800a8c8:	f104 0010 	add.w	r0, r4, #16
 800a8cc:	f000 fcaa 	bl	800b224 <xTaskRemoveFromEventList>
 800a8d0:	b148      	cbz	r0, 800a8e6 <xQueueSemaphoreTake+0x138>
						queueYIELD_IF_USING_PREEMPTION();
 800a8d2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a8d6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a8da:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a8de:	f3bf 8f4f 	dsb	sy
 800a8e2:	f3bf 8f6f 	isb	sy
				return pdPASS;
 800a8e6:	2501      	movs	r5, #1
				taskEXIT_CRITICAL();
 800a8e8:	f7ff fab4 	bl	8009e54 <vPortExitCritical>
}
 800a8ec:	4628      	mov	r0, r5
 800a8ee:	b005      	add	sp, #20
 800a8f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
				prvUnlockQueue( pxQueue );
 800a8f2:	4620      	mov	r0, r4
 800a8f4:	f7ff fc27 	bl	800a146 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800a8f8:	f000 fb3a 	bl	800af70 <xTaskResumeAll>
 800a8fc:	e7d5      	b.n	800a8aa <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 800a8fe:	4620      	mov	r0, r4
 800a900:	f7ff fc21 	bl	800a146 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800a904:	f000 fb34 	bl	800af70 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800a908:	4620      	mov	r0, r4
 800a90a:	f7ff fbc7 	bl	800a09c <prvIsQueueEmpty>
 800a90e:	2800      	cmp	r0, #0
 800a910:	d0cb      	beq.n	800a8aa <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 800a912:	2d00      	cmp	r5, #0
 800a914:	d0ea      	beq.n	800a8ec <xQueueSemaphoreTake+0x13e>
						taskENTER_CRITICAL();
 800a916:	f7ff fa7d 	bl	8009e14 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800a91a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800a91c:	b119      	cbz	r1, 800a926 <xQueueSemaphoreTake+0x178>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800a91e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800a920:	6819      	ldr	r1, [r3, #0]
 800a922:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800a926:	68a0      	ldr	r0, [r4, #8]
				return errQUEUE_EMPTY;
 800a928:	2500      	movs	r5, #0
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800a92a:	f000 fda1 	bl	800b470 <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
 800a92e:	f7ff fa91 	bl	8009e54 <vPortExitCritical>
 800a932:	e7db      	b.n	800a8ec <xQueueSemaphoreTake+0x13e>

0800a934 <xQueueReceiveFromISR>:
{
 800a934:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800a938:	4689      	mov	r9, r1
 800a93a:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 800a93c:	4605      	mov	r5, r0
 800a93e:	b940      	cbnz	r0, 800a952 <xQueueReceiveFromISR+0x1e>
 800a940:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a944:	f383 8811 	msr	BASEPRI, r3
 800a948:	f3bf 8f6f 	isb	sy
 800a94c:	f3bf 8f4f 	dsb	sy
 800a950:	e7fe      	b.n	800a950 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800a952:	b951      	cbnz	r1, 800a96a <xQueueReceiveFromISR+0x36>
 800a954:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800a956:	b143      	cbz	r3, 800a96a <xQueueReceiveFromISR+0x36>
 800a958:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a95c:	f383 8811 	msr	BASEPRI, r3
 800a960:	f3bf 8f6f 	isb	sy
 800a964:	f3bf 8f4f 	dsb	sy
 800a968:	e7fe      	b.n	800a968 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800a96a:	f7ff fb69 	bl	800a040 <vPortValidateInterruptPriority>
	__asm volatile
 800a96e:	f3ef 8711 	mrs	r7, BASEPRI
 800a972:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a976:	f383 8811 	msr	BASEPRI, r3
 800a97a:	f3bf 8f6f 	isb	sy
 800a97e:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800a982:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800a984:	b31c      	cbz	r4, 800a9ce <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 800a986:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800a98a:	4649      	mov	r1, r9
 800a98c:	4628      	mov	r0, r5
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800a98e:	3c01      	subs	r4, #1
			const int8_t cRxLock = pxQueue->cRxLock;
 800a990:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800a992:	f7ff fbc3 	bl	800a11c <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800a996:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800a998:	1c73      	adds	r3, r6, #1
 800a99a:	d113      	bne.n	800a9c4 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800a99c:	692b      	ldr	r3, [r5, #16]
 800a99e:	b90b      	cbnz	r3, 800a9a4 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 800a9a0:	2001      	movs	r0, #1
 800a9a2:	e00b      	b.n	800a9bc <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800a9a4:	f105 0010 	add.w	r0, r5, #16
 800a9a8:	f000 fc3c 	bl	800b224 <xTaskRemoveFromEventList>
 800a9ac:	2800      	cmp	r0, #0
 800a9ae:	d0f7      	beq.n	800a9a0 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 800a9b0:	f1b8 0f00 	cmp.w	r8, #0
 800a9b4:	d0f4      	beq.n	800a9a0 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800a9b6:	2001      	movs	r0, #1
 800a9b8:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 800a9bc:	f387 8811 	msr	BASEPRI, r7
}
 800a9c0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800a9c4:	3601      	adds	r6, #1
 800a9c6:	b276      	sxtb	r6, r6
 800a9c8:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 800a9cc:	e7e8      	b.n	800a9a0 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 800a9ce:	4620      	mov	r0, r4
 800a9d0:	e7f4      	b.n	800a9bc <xQueueReceiveFromISR+0x88>
	...

0800a9d4 <vQueueAddToRegistry>:
	{
	UBaseType_t ux;

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800a9d4:	2300      	movs	r3, #0
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800a9d6:	4a07      	ldr	r2, [pc, #28]	; (800a9f4 <vQueueAddToRegistry+0x20>)
	{
 800a9d8:	b510      	push	{r4, lr}
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800a9da:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 800a9de:	b92c      	cbnz	r4, 800a9ec <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800a9e0:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800a9e4:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800a9e8:	6058      	str	r0, [r3, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 800a9ea:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800a9ec:	3301      	adds	r3, #1
 800a9ee:	2b08      	cmp	r3, #8
 800a9f0:	d1f3      	bne.n	800a9da <vQueueAddToRegistry+0x6>
 800a9f2:	e7fa      	b.n	800a9ea <vQueueAddToRegistry+0x16>
 800a9f4:	2400da08 	.word	0x2400da08

0800a9f8 <vQueueUnregisterQueue>:
	{
	UBaseType_t ux;

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800a9f8:	2300      	movs	r3, #0
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800a9fa:	4a08      	ldr	r2, [pc, #32]	; (800aa1c <vQueueUnregisterQueue+0x24>)
	{
 800a9fc:	b510      	push	{r4, lr}
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800a9fe:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 800aa02:	684c      	ldr	r4, [r1, #4]
 800aa04:	4284      	cmp	r4, r0
 800aa06:	d104      	bne.n	800aa12 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800aa08:	2000      	movs	r0, #0
 800aa0a:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 800aa0e:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 800aa10:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800aa12:	3301      	adds	r3, #1
 800aa14:	2b08      	cmp	r3, #8
 800aa16:	d1f2      	bne.n	800a9fe <vQueueUnregisterQueue+0x6>
 800aa18:	e7fa      	b.n	800aa10 <vQueueUnregisterQueue+0x18>
 800aa1a:	bf00      	nop
 800aa1c:	2400da08 	.word	0x2400da08

0800aa20 <vQueueDelete>:
{
 800aa20:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 800aa22:	4604      	mov	r4, r0
 800aa24:	b940      	cbnz	r0, 800aa38 <vQueueDelete+0x18>
	__asm volatile
 800aa26:	f04f 0350 	mov.w	r3, #80	; 0x50
 800aa2a:	f383 8811 	msr	BASEPRI, r3
 800aa2e:	f3bf 8f6f 	isb	sy
 800aa32:	f3bf 8f4f 	dsb	sy
 800aa36:	e7fe      	b.n	800aa36 <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 800aa38:	f7ff ffde 	bl	800a9f8 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800aa3c:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 800aa40:	b923      	cbnz	r3, 800aa4c <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 800aa42:	4620      	mov	r0, r4
}
 800aa44:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 800aa48:	f7ff b8fc 	b.w	8009c44 <vPortFree>
}
 800aa4c:	bd10      	pop	{r4, pc}

0800aa4e <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800aa4e:	b570      	push	{r4, r5, r6, lr}
 800aa50:	4604      	mov	r4, r0
 800aa52:	460d      	mov	r5, r1
 800aa54:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800aa56:	f7ff f9dd 	bl	8009e14 <vPortEnterCritical>
 800aa5a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800aa5e:	2bff      	cmp	r3, #255	; 0xff
 800aa60:	d102      	bne.n	800aa68 <vQueueWaitForMessageRestricted+0x1a>
 800aa62:	2300      	movs	r3, #0
 800aa64:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800aa68:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800aa6c:	2bff      	cmp	r3, #255	; 0xff
 800aa6e:	d102      	bne.n	800aa76 <vQueueWaitForMessageRestricted+0x28>
 800aa70:	2300      	movs	r3, #0
 800aa72:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800aa76:	f7ff f9ed 	bl	8009e54 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800aa7a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800aa7c:	b92b      	cbnz	r3, 800aa8a <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800aa7e:	4632      	mov	r2, r6
 800aa80:	4629      	mov	r1, r5
 800aa82:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800aa86:	f000 fbaf 	bl	800b1e8 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 800aa8a:	4620      	mov	r0, r4
	}
 800aa8c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 800aa90:	f7ff bb59 	b.w	800a146 <prvUnlockQueue>

0800aa94 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800aa94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800aa98:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800aa9a:	f7ff f9bb 	bl	8009e14 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800aa9e:	4b2f      	ldr	r3, [pc, #188]	; (800ab5c <prvAddNewTaskToReadyList+0xc8>)
		if( pxCurrentTCB == NULL )
 800aaa0:	4e2f      	ldr	r6, [pc, #188]	; (800ab60 <prvAddNewTaskToReadyList+0xcc>)
		uxCurrentNumberOfTasks++;
 800aaa2:	681a      	ldr	r2, [r3, #0]
 800aaa4:	4f2f      	ldr	r7, [pc, #188]	; (800ab64 <prvAddNewTaskToReadyList+0xd0>)
 800aaa6:	3201      	adds	r2, #1
 800aaa8:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 800aaaa:	6835      	ldr	r5, [r6, #0]
 800aaac:	2d00      	cmp	r5, #0
 800aaae:	d14a      	bne.n	800ab46 <prvAddNewTaskToReadyList+0xb2>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 800aab0:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800aab2:	681b      	ldr	r3, [r3, #0]
 800aab4:	2b01      	cmp	r3, #1
 800aab6:	d11f      	bne.n	800aaf8 <prvAddNewTaskToReadyList+0x64>
 800aab8:	46b8      	mov	r8, r7

static void prvInitialiseTaskLists( void )
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800aaba:	3501      	adds	r5, #1
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800aabc:	4640      	mov	r0, r8
 800aabe:	f7ff f8ff 	bl	8009cc0 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800aac2:	f108 0814 	add.w	r8, r8, #20
 800aac6:	2d38      	cmp	r5, #56	; 0x38
 800aac8:	d1f7      	bne.n	800aaba <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 800aaca:	f8df 80c0 	ldr.w	r8, [pc, #192]	; 800ab8c <prvAddNewTaskToReadyList+0xf8>
	vListInitialise( &xDelayedTaskList2 );
 800aace:	4d26      	ldr	r5, [pc, #152]	; (800ab68 <prvAddNewTaskToReadyList+0xd4>)
	vListInitialise( &xDelayedTaskList1 );
 800aad0:	4640      	mov	r0, r8
 800aad2:	f7ff f8f5 	bl	8009cc0 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800aad6:	4628      	mov	r0, r5
 800aad8:	f7ff f8f2 	bl	8009cc0 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800aadc:	4823      	ldr	r0, [pc, #140]	; (800ab6c <prvAddNewTaskToReadyList+0xd8>)
 800aade:	f7ff f8ef 	bl	8009cc0 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800aae2:	4823      	ldr	r0, [pc, #140]	; (800ab70 <prvAddNewTaskToReadyList+0xdc>)
 800aae4:	f7ff f8ec 	bl	8009cc0 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800aae8:	4822      	ldr	r0, [pc, #136]	; (800ab74 <prvAddNewTaskToReadyList+0xe0>)
 800aaea:	f7ff f8e9 	bl	8009cc0 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800aaee:	4b22      	ldr	r3, [pc, #136]	; (800ab78 <prvAddNewTaskToReadyList+0xe4>)
 800aaf0:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800aaf4:	4b21      	ldr	r3, [pc, #132]	; (800ab7c <prvAddNewTaskToReadyList+0xe8>)
 800aaf6:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 800aaf8:	4a21      	ldr	r2, [pc, #132]	; (800ab80 <prvAddNewTaskToReadyList+0xec>)
 800aafa:	6813      	ldr	r3, [r2, #0]
 800aafc:	3301      	adds	r3, #1
 800aafe:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 800ab00:	4a20      	ldr	r2, [pc, #128]	; (800ab84 <prvAddNewTaskToReadyList+0xf0>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800ab02:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800ab04:	6811      	ldr	r1, [r2, #0]
 800ab06:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800ab08:	428b      	cmp	r3, r1
 800ab0a:	d900      	bls.n	800ab0e <prvAddNewTaskToReadyList+0x7a>
 800ab0c:	6013      	str	r3, [r2, #0]
 800ab0e:	2014      	movs	r0, #20
 800ab10:	1d21      	adds	r1, r4, #4
 800ab12:	fb00 7003 	mla	r0, r0, r3, r7
 800ab16:	f7ff f8e1 	bl	8009cdc <vListInsertEnd>
	taskEXIT_CRITICAL();
 800ab1a:	f7ff f99b 	bl	8009e54 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 800ab1e:	4b1a      	ldr	r3, [pc, #104]	; (800ab88 <prvAddNewTaskToReadyList+0xf4>)
 800ab20:	681b      	ldr	r3, [r3, #0]
 800ab22:	b173      	cbz	r3, 800ab42 <prvAddNewTaskToReadyList+0xae>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800ab24:	6833      	ldr	r3, [r6, #0]
 800ab26:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800ab28:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800ab2a:	429a      	cmp	r2, r3
 800ab2c:	d209      	bcs.n	800ab42 <prvAddNewTaskToReadyList+0xae>
			taskYIELD_IF_USING_PREEMPTION();
 800ab2e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ab32:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ab36:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ab3a:	f3bf 8f4f 	dsb	sy
 800ab3e:	f3bf 8f6f 	isb	sy
}
 800ab42:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 800ab46:	4b10      	ldr	r3, [pc, #64]	; (800ab88 <prvAddNewTaskToReadyList+0xf4>)
 800ab48:	681b      	ldr	r3, [r3, #0]
 800ab4a:	2b00      	cmp	r3, #0
 800ab4c:	d1d4      	bne.n	800aaf8 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800ab4e:	6833      	ldr	r3, [r6, #0]
 800ab50:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800ab52:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800ab54:	429a      	cmp	r2, r3
 800ab56:	d8cf      	bhi.n	800aaf8 <prvAddNewTaskToReadyList+0x64>
					pxCurrentTCB = pxNewTCB;
 800ab58:	6034      	str	r4, [r6, #0]
 800ab5a:	e7cd      	b.n	800aaf8 <prvAddNewTaskToReadyList+0x64>
 800ab5c:	2400deb4 	.word	0x2400deb4
 800ab60:	2400da48 	.word	0x2400da48
 800ab64:	2400da54 	.word	0x2400da54
 800ab68:	2400dedc 	.word	0x2400dedc
 800ab6c:	2400defc 	.word	0x2400defc
 800ab70:	2400df28 	.word	0x2400df28
 800ab74:	2400df14 	.word	0x2400df14
 800ab78:	2400da4c 	.word	0x2400da4c
 800ab7c:	2400da50 	.word	0x2400da50
 800ab80:	2400dec0 	.word	0x2400dec0
 800ab84:	2400dec4 	.word	0x2400dec4
 800ab88:	2400df10 	.word	0x2400df10
 800ab8c:	2400dec8 	.word	0x2400dec8

0800ab90 <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 800ab90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800ab92:	4b15      	ldr	r3, [pc, #84]	; (800abe8 <prvAddCurrentTaskToDelayedList+0x58>)
{
 800ab94:	4604      	mov	r4, r0
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ab96:	4e15      	ldr	r6, [pc, #84]	; (800abec <prvAddCurrentTaskToDelayedList+0x5c>)
{
 800ab98:	460f      	mov	r7, r1
const TickType_t xConstTickCount = xTickCount;
 800ab9a:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ab9c:	6830      	ldr	r0, [r6, #0]
 800ab9e:	3004      	adds	r0, #4
 800aba0:	f7ff f8bf 	bl	8009d22 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800aba4:	1c63      	adds	r3, r4, #1
 800aba6:	d107      	bne.n	800abb8 <prvAddCurrentTaskToDelayedList+0x28>
 800aba8:	b137      	cbz	r7, 800abb8 <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800abaa:	6831      	ldr	r1, [r6, #0]
 800abac:	4810      	ldr	r0, [pc, #64]	; (800abf0 <prvAddCurrentTaskToDelayedList+0x60>)
 800abae:	3104      	adds	r1, #4

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 800abb0:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800abb4:	f7ff b892 	b.w	8009cdc <vListInsertEnd>
			xTimeToWake = xConstTickCount + xTicksToWait;
 800abb8:	192c      	adds	r4, r5, r4
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800abba:	6833      	ldr	r3, [r6, #0]
 800abbc:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800abbe:	d307      	bcc.n	800abd0 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800abc0:	4b0c      	ldr	r3, [pc, #48]	; (800abf4 <prvAddCurrentTaskToDelayedList+0x64>)
 800abc2:	6818      	ldr	r0, [r3, #0]
 800abc4:	6831      	ldr	r1, [r6, #0]
}
 800abc6:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800abca:	3104      	adds	r1, #4
 800abcc:	f7ff b892 	b.w	8009cf4 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800abd0:	4b09      	ldr	r3, [pc, #36]	; (800abf8 <prvAddCurrentTaskToDelayedList+0x68>)
 800abd2:	6818      	ldr	r0, [r3, #0]
 800abd4:	6831      	ldr	r1, [r6, #0]
 800abd6:	3104      	adds	r1, #4
 800abd8:	f7ff f88c 	bl	8009cf4 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800abdc:	4b07      	ldr	r3, [pc, #28]	; (800abfc <prvAddCurrentTaskToDelayedList+0x6c>)
 800abde:	681a      	ldr	r2, [r3, #0]
 800abe0:	42a2      	cmp	r2, r4
 800abe2:	d900      	bls.n	800abe6 <prvAddCurrentTaskToDelayedList+0x56>
					xNextTaskUnblockTime = xTimeToWake;
 800abe4:	601c      	str	r4, [r3, #0]
}
 800abe6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800abe8:	2400df3c 	.word	0x2400df3c
 800abec:	2400da48 	.word	0x2400da48
 800abf0:	2400df14 	.word	0x2400df14
 800abf4:	2400da50 	.word	0x2400da50
 800abf8:	2400da4c 	.word	0x2400da4c
 800abfc:	2400def0 	.word	0x2400def0

0800ac00 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800ac00:	4a06      	ldr	r2, [pc, #24]	; (800ac1c <prvResetNextTaskUnblockTime+0x1c>)
 800ac02:	6813      	ldr	r3, [r2, #0]
 800ac04:	6819      	ldr	r1, [r3, #0]
 800ac06:	4b06      	ldr	r3, [pc, #24]	; (800ac20 <prvResetNextTaskUnblockTime+0x20>)
 800ac08:	b919      	cbnz	r1, 800ac12 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 800ac0a:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800ac0e:	601a      	str	r2, [r3, #0]
}
 800ac10:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ac12:	6812      	ldr	r2, [r2, #0]
 800ac14:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800ac16:	68d2      	ldr	r2, [r2, #12]
 800ac18:	6852      	ldr	r2, [r2, #4]
 800ac1a:	e7f8      	b.n	800ac0e <prvResetNextTaskUnblockTime+0xe>
 800ac1c:	2400da4c 	.word	0x2400da4c
 800ac20:	2400def0 	.word	0x2400def0

0800ac24 <prvDeleteTCB>:
	{
 800ac24:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800ac26:	f890 305d 	ldrb.w	r3, [r0, #93]	; 0x5d
	{
 800ac2a:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800ac2c:	b93b      	cbnz	r3, 800ac3e <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 800ac2e:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800ac30:	f7ff f808 	bl	8009c44 <vPortFree>
				vPortFree( pxTCB );
 800ac34:	4620      	mov	r0, r4
	}
 800ac36:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 800ac3a:	f7ff b803 	b.w	8009c44 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800ac3e:	2b01      	cmp	r3, #1
 800ac40:	d0f9      	beq.n	800ac36 <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800ac42:	2b02      	cmp	r3, #2
 800ac44:	d008      	beq.n	800ac58 <prvDeleteTCB+0x34>
 800ac46:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ac4a:	f383 8811 	msr	BASEPRI, r3
 800ac4e:	f3bf 8f6f 	isb	sy
 800ac52:	f3bf 8f4f 	dsb	sy
 800ac56:	e7fe      	b.n	800ac56 <prvDeleteTCB+0x32>
	}
 800ac58:	bd10      	pop	{r4, pc}
	...

0800ac5c <prvIdleTask>:
{
 800ac5c:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800ac5e:	4c14      	ldr	r4, [pc, #80]	; (800acb0 <prvIdleTask+0x54>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ac60:	4f14      	ldr	r7, [pc, #80]	; (800acb4 <prvIdleTask+0x58>)
				--uxCurrentNumberOfTasks;
 800ac62:	4d15      	ldr	r5, [pc, #84]	; (800acb8 <prvIdleTask+0x5c>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800ac64:	6823      	ldr	r3, [r4, #0]
 800ac66:	b983      	cbnz	r3, 800ac8a <prvIdleTask+0x2e>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800ac68:	4b14      	ldr	r3, [pc, #80]	; (800acbc <prvIdleTask+0x60>)
 800ac6a:	681b      	ldr	r3, [r3, #0]
 800ac6c:	2b01      	cmp	r3, #1
 800ac6e:	d909      	bls.n	800ac84 <prvIdleTask+0x28>
				taskYIELD();
 800ac70:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ac74:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ac78:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ac7c:	f3bf 8f4f 	dsb	sy
 800ac80:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
 800ac84:	f7f5 fd38 	bl	80006f8 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
 800ac88:	e7eb      	b.n	800ac62 <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 800ac8a:	f7ff f8c3 	bl	8009e14 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ac8e:	68fb      	ldr	r3, [r7, #12]
 800ac90:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800ac92:	1d30      	adds	r0, r6, #4
 800ac94:	f7ff f845 	bl	8009d22 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800ac98:	682b      	ldr	r3, [r5, #0]
 800ac9a:	3b01      	subs	r3, #1
 800ac9c:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 800ac9e:	6823      	ldr	r3, [r4, #0]
 800aca0:	3b01      	subs	r3, #1
 800aca2:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 800aca4:	f7ff f8d6 	bl	8009e54 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 800aca8:	4630      	mov	r0, r6
 800acaa:	f7ff ffbb 	bl	800ac24 <prvDeleteTCB>
 800acae:	e7d9      	b.n	800ac64 <prvIdleTask+0x8>
 800acb0:	2400deb8 	.word	0x2400deb8
 800acb4:	2400df28 	.word	0x2400df28
 800acb8:	2400deb4 	.word	0x2400deb4
 800acbc:	2400da54 	.word	0x2400da54

0800acc0 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800acc0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800acc4:	ea4f 0982 	mov.w	r9, r2, lsl #2
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800acc8:	4606      	mov	r6, r0
 800acca:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800accc:	21a5      	movs	r1, #165	; 0xa5
 800acce:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800acd0:	461f      	mov	r7, r3
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800acd2:	f1a9 0904 	sub.w	r9, r9, #4
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800acd6:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800acda:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800acdc:	f015 f808 	bl	801fcf0 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800ace0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800ace2:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800ace4:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 800ace8:	b3b5      	cbz	r5, 800ad58 <prvInitialiseNewTask.constprop.0+0x98>
 800acea:	1e6b      	subs	r3, r5, #1
 800acec:	f104 0234 	add.w	r2, r4, #52	; 0x34
 800acf0:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800acf2:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800acf6:	f802 0b01 	strb.w	r0, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 800acfa:	b108      	cbz	r0, 800ad00 <prvInitialiseNewTask.constprop.0+0x40>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 800acfc:	42ab      	cmp	r3, r5
 800acfe:	d1f8      	bne.n	800acf2 <prvInitialiseNewTask.constprop.0+0x32>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800ad00:	2300      	movs	r3, #0
 800ad02:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800ad06:	9d08      	ldr	r5, [sp, #32]
		pxNewTCB->uxMutexesHeld = 0;
 800ad08:	f04f 0a00 	mov.w	sl, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800ad0c:	1d20      	adds	r0, r4, #4
 800ad0e:	2d37      	cmp	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800ad10:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
 800ad14:	bf28      	it	cs
 800ad16:	2537      	movcs	r5, #55	; 0x37
	pxNewTCB->uxPriority = uxPriority;
 800ad18:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800ad1a:	64e5      	str	r5, [r4, #76]	; 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ad1c:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800ad20:	f7fe ffd9 	bl	8009cd6 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800ad24:	f104 0018 	add.w	r0, r4, #24
 800ad28:	f7fe ffd5 	bl	8009cd6 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 800ad2c:	f8c4 a058 	str.w	sl, [r4, #88]	; 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800ad30:	463a      	mov	r2, r7
 800ad32:	4631      	mov	r1, r6
 800ad34:	4648      	mov	r0, r9
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800ad36:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ad38:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800ad3a:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800ad3c:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800ad40:	f884 a05c 	strb.w	sl, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800ad44:	f7ff f83c 	bl	8009dc0 <pxPortInitialiseStack>
 800ad48:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800ad4a:	f1b8 0f00 	cmp.w	r8, #0
 800ad4e:	d001      	beq.n	800ad54 <prvInitialiseNewTask.constprop.0+0x94>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800ad50:	f8c8 4000 	str.w	r4, [r8]
}
 800ad54:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800ad58:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800ad5c:	e7d3      	b.n	800ad06 <prvInitialiseNewTask.constprop.0+0x46>

0800ad5e <xTaskCreateStatic>:
	{
 800ad5e:	b570      	push	{r4, r5, r6, lr}
 800ad60:	b086      	sub	sp, #24
 800ad62:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800ad66:	b945      	cbnz	r5, 800ad7a <xTaskCreateStatic+0x1c>
 800ad68:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ad6c:	f383 8811 	msr	BASEPRI, r3
 800ad70:	f3bf 8f6f 	isb	sy
 800ad74:	f3bf 8f4f 	dsb	sy
 800ad78:	e7fe      	b.n	800ad78 <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 800ad7a:	b944      	cbnz	r4, 800ad8e <xTaskCreateStatic+0x30>
 800ad7c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ad80:	f383 8811 	msr	BASEPRI, r3
 800ad84:	f3bf 8f6f 	isb	sy
 800ad88:	f3bf 8f4f 	dsb	sy
 800ad8c:	e7fe      	b.n	800ad8c <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 800ad8e:	2660      	movs	r6, #96	; 0x60
 800ad90:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800ad92:	9e05      	ldr	r6, [sp, #20]
 800ad94:	2e60      	cmp	r6, #96	; 0x60
 800ad96:	d008      	beq.n	800adaa <xTaskCreateStatic+0x4c>
 800ad98:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ad9c:	f383 8811 	msr	BASEPRI, r3
 800ada0:	f3bf 8f6f 	isb	sy
 800ada4:	f3bf 8f4f 	dsb	sy
 800ada8:	e7fe      	b.n	800ada8 <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800adaa:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800adac:	2502      	movs	r5, #2
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800adae:	9e05      	ldr	r6, [sp, #20]
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800adb0:	f884 505d 	strb.w	r5, [r4, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800adb4:	ad04      	add	r5, sp, #16
 800adb6:	9402      	str	r4, [sp, #8]
 800adb8:	9501      	str	r5, [sp, #4]
 800adba:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 800adbc:	9500      	str	r5, [sp, #0]
 800adbe:	f7ff ff7f 	bl	800acc0 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800adc2:	4620      	mov	r0, r4
 800adc4:	f7ff fe66 	bl	800aa94 <prvAddNewTaskToReadyList>
	}
 800adc8:	9804      	ldr	r0, [sp, #16]
 800adca:	b006      	add	sp, #24
 800adcc:	bd70      	pop	{r4, r5, r6, pc}

0800adce <xTaskCreate>:
	{
 800adce:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800add2:	4607      	mov	r7, r0
 800add4:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800add6:	0090      	lsls	r0, r2, #2
	{
 800add8:	4688      	mov	r8, r1
 800adda:	4616      	mov	r6, r2
 800addc:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800adde:	f7fe fe99 	bl	8009b14 <pvPortMalloc>
			if( pxStack != NULL )
 800ade2:	4605      	mov	r5, r0
 800ade4:	b1e8      	cbz	r0, 800ae22 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800ade6:	2060      	movs	r0, #96	; 0x60
 800ade8:	f7fe fe94 	bl	8009b14 <pvPortMalloc>
				if( pxNewTCB != NULL )
 800adec:	4604      	mov	r4, r0
 800adee:	b1a8      	cbz	r0, 800ae1c <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800adf0:	2300      	movs	r3, #0
					pxNewTCB->pxStack = pxStack;
 800adf2:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800adf4:	4632      	mov	r2, r6
 800adf6:	4641      	mov	r1, r8
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800adf8:	f880 305d 	strb.w	r3, [r0, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800adfc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800adfe:	9002      	str	r0, [sp, #8]
 800ae00:	4638      	mov	r0, r7
 800ae02:	9301      	str	r3, [sp, #4]
 800ae04:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800ae06:	9300      	str	r3, [sp, #0]
 800ae08:	464b      	mov	r3, r9
 800ae0a:	f7ff ff59 	bl	800acc0 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800ae0e:	4620      	mov	r0, r4
 800ae10:	f7ff fe40 	bl	800aa94 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800ae14:	2001      	movs	r0, #1
	}
 800ae16:	b005      	add	sp, #20
 800ae18:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800ae1c:	4628      	mov	r0, r5
 800ae1e:	f7fe ff11 	bl	8009c44 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800ae22:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 800ae26:	e7f6      	b.n	800ae16 <xTaskCreate+0x48>

0800ae28 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800ae28:	4a02      	ldr	r2, [pc, #8]	; (800ae34 <vTaskSuspendAll+0xc>)
 800ae2a:	6813      	ldr	r3, [r2, #0]
 800ae2c:	3301      	adds	r3, #1
 800ae2e:	6013      	str	r3, [r2, #0]
}
 800ae30:	4770      	bx	lr
 800ae32:	bf00      	nop
 800ae34:	2400debc 	.word	0x2400debc

0800ae38 <xTaskGetTickCount>:
		xTicks = xTickCount;
 800ae38:	4b01      	ldr	r3, [pc, #4]	; (800ae40 <xTaskGetTickCount+0x8>)
 800ae3a:	6818      	ldr	r0, [r3, #0]
}
 800ae3c:	4770      	bx	lr
 800ae3e:	bf00      	nop
 800ae40:	2400df3c 	.word	0x2400df3c

0800ae44 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800ae44:	4b3f      	ldr	r3, [pc, #252]	; (800af44 <xTaskIncrementTick+0x100>)
 800ae46:	681b      	ldr	r3, [r3, #0]
{
 800ae48:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800ae4c:	2b00      	cmp	r3, #0
 800ae4e:	d172      	bne.n	800af36 <xTaskIncrementTick+0xf2>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800ae50:	4b3d      	ldr	r3, [pc, #244]	; (800af48 <xTaskIncrementTick+0x104>)
 800ae52:	681d      	ldr	r5, [r3, #0]
 800ae54:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 800ae56:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800ae58:	b9bd      	cbnz	r5, 800ae8a <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 800ae5a:	4b3c      	ldr	r3, [pc, #240]	; (800af4c <xTaskIncrementTick+0x108>)
 800ae5c:	681a      	ldr	r2, [r3, #0]
 800ae5e:	6812      	ldr	r2, [r2, #0]
 800ae60:	b142      	cbz	r2, 800ae74 <xTaskIncrementTick+0x30>
 800ae62:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ae66:	f383 8811 	msr	BASEPRI, r3
 800ae6a:	f3bf 8f6f 	isb	sy
 800ae6e:	f3bf 8f4f 	dsb	sy
 800ae72:	e7fe      	b.n	800ae72 <xTaskIncrementTick+0x2e>
 800ae74:	4a36      	ldr	r2, [pc, #216]	; (800af50 <xTaskIncrementTick+0x10c>)
 800ae76:	6819      	ldr	r1, [r3, #0]
 800ae78:	6810      	ldr	r0, [r2, #0]
 800ae7a:	6018      	str	r0, [r3, #0]
 800ae7c:	6011      	str	r1, [r2, #0]
 800ae7e:	4a35      	ldr	r2, [pc, #212]	; (800af54 <xTaskIncrementTick+0x110>)
 800ae80:	6813      	ldr	r3, [r2, #0]
 800ae82:	3301      	adds	r3, #1
 800ae84:	6013      	str	r3, [r2, #0]
 800ae86:	f7ff febb 	bl	800ac00 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800ae8a:	4e33      	ldr	r6, [pc, #204]	; (800af58 <xTaskIncrementTick+0x114>)
BaseType_t xSwitchRequired = pdFALSE;
 800ae8c:	2400      	movs	r4, #0
 800ae8e:	4f33      	ldr	r7, [pc, #204]	; (800af5c <xTaskIncrementTick+0x118>)
		if( xConstTickCount >= xNextTaskUnblockTime )
 800ae90:	6833      	ldr	r3, [r6, #0]
 800ae92:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 800af68 <xTaskIncrementTick+0x124>
 800ae96:	429d      	cmp	r5, r3
 800ae98:	d211      	bcs.n	800aebe <xTaskIncrementTick+0x7a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800ae9a:	f8d8 3000 	ldr.w	r3, [r8]
 800ae9e:	2214      	movs	r2, #20
 800aea0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800aea2:	4353      	muls	r3, r2
 800aea4:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 800aea6:	2b02      	cmp	r3, #2
			if( xYieldPending != pdFALSE )
 800aea8:	4b2d      	ldr	r3, [pc, #180]	; (800af60 <xTaskIncrementTick+0x11c>)
 800aeaa:	681b      	ldr	r3, [r3, #0]
				xSwitchRequired = pdTRUE;
 800aeac:	bf28      	it	cs
 800aeae:	2401      	movcs	r4, #1
				xSwitchRequired = pdTRUE;
 800aeb0:	2b00      	cmp	r3, #0
 800aeb2:	bf18      	it	ne
 800aeb4:	2401      	movne	r4, #1
}
 800aeb6:	4620      	mov	r0, r4
 800aeb8:	b003      	add	sp, #12
 800aeba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800aebe:	f8df 908c 	ldr.w	r9, [pc, #140]	; 800af4c <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 800aec2:	f8df a0a8 	ldr.w	sl, [pc, #168]	; 800af6c <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800aec6:	f8d9 3000 	ldr.w	r3, [r9]
 800aeca:	681b      	ldr	r3, [r3, #0]
 800aecc:	b91b      	cbnz	r3, 800aed6 <xTaskIncrementTick+0x92>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800aece:	f04f 33ff 	mov.w	r3, #4294967295
 800aed2:	6033      	str	r3, [r6, #0]
					break;
 800aed4:	e7e1      	b.n	800ae9a <xTaskIncrementTick+0x56>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800aed6:	f8d9 3000 	ldr.w	r3, [r9]
 800aeda:	68db      	ldr	r3, [r3, #12]
 800aedc:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800aee0:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 800aee4:	4295      	cmp	r5, r2
 800aee6:	d201      	bcs.n	800aeec <xTaskIncrementTick+0xa8>
						xNextTaskUnblockTime = xItemValue;
 800aee8:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800aeea:	e7d6      	b.n	800ae9a <xTaskIncrementTick+0x56>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800aeec:	f10b 0104 	add.w	r1, fp, #4
 800aef0:	4608      	mov	r0, r1
 800aef2:	9101      	str	r1, [sp, #4]
 800aef4:	f7fe ff15 	bl	8009d22 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800aef8:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 800aefc:	9901      	ldr	r1, [sp, #4]
 800aefe:	b122      	cbz	r2, 800af0a <xTaskIncrementTick+0xc6>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800af00:	f10b 0018 	add.w	r0, fp, #24
 800af04:	f7fe ff0d 	bl	8009d22 <uxListRemove>
 800af08:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800af0a:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 800af0e:	f8da 2000 	ldr.w	r2, [sl]
 800af12:	4290      	cmp	r0, r2
 800af14:	d901      	bls.n	800af1a <xTaskIncrementTick+0xd6>
 800af16:	f8ca 0000 	str.w	r0, [sl]
 800af1a:	2314      	movs	r3, #20
 800af1c:	fb03 7000 	mla	r0, r3, r0, r7
 800af20:	f7fe fedc 	bl	8009cdc <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800af24:	f8d8 1000 	ldr.w	r1, [r8]
 800af28:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 800af2c:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 800af2e:	429a      	cmp	r2, r3
 800af30:	bf28      	it	cs
 800af32:	2401      	movcs	r4, #1
 800af34:	e7c7      	b.n	800aec6 <xTaskIncrementTick+0x82>
		++xPendedTicks;
 800af36:	4a0b      	ldr	r2, [pc, #44]	; (800af64 <xTaskIncrementTick+0x120>)
BaseType_t xSwitchRequired = pdFALSE;
 800af38:	2400      	movs	r4, #0
		++xPendedTicks;
 800af3a:	6813      	ldr	r3, [r2, #0]
 800af3c:	3301      	adds	r3, #1
 800af3e:	6013      	str	r3, [r2, #0]
	return xSwitchRequired;
 800af40:	e7b9      	b.n	800aeb6 <xTaskIncrementTick+0x72>
 800af42:	bf00      	nop
 800af44:	2400debc 	.word	0x2400debc
 800af48:	2400df3c 	.word	0x2400df3c
 800af4c:	2400da4c 	.word	0x2400da4c
 800af50:	2400da50 	.word	0x2400da50
 800af54:	2400def4 	.word	0x2400def4
 800af58:	2400def0 	.word	0x2400def0
 800af5c:	2400da54 	.word	0x2400da54
 800af60:	2400df40 	.word	0x2400df40
 800af64:	2400def8 	.word	0x2400def8
 800af68:	2400da48 	.word	0x2400da48
 800af6c:	2400dec4 	.word	0x2400dec4

0800af70 <xTaskResumeAll>:
{
 800af70:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 800af72:	4c31      	ldr	r4, [pc, #196]	; (800b038 <xTaskResumeAll+0xc8>)
 800af74:	6823      	ldr	r3, [r4, #0]
 800af76:	b943      	cbnz	r3, 800af8a <xTaskResumeAll+0x1a>
 800af78:	f04f 0350 	mov.w	r3, #80	; 0x50
 800af7c:	f383 8811 	msr	BASEPRI, r3
 800af80:	f3bf 8f6f 	isb	sy
 800af84:	f3bf 8f4f 	dsb	sy
 800af88:	e7fe      	b.n	800af88 <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 800af8a:	f7fe ff43 	bl	8009e14 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800af8e:	6823      	ldr	r3, [r4, #0]
 800af90:	3b01      	subs	r3, #1
 800af92:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800af94:	6824      	ldr	r4, [r4, #0]
 800af96:	b12c      	cbz	r4, 800afa4 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 800af98:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800af9a:	f7fe ff5b 	bl	8009e54 <vPortExitCritical>
}
 800af9e:	4620      	mov	r0, r4
 800afa0:	b003      	add	sp, #12
 800afa2:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800afa4:	4b25      	ldr	r3, [pc, #148]	; (800b03c <xTaskResumeAll+0xcc>)
 800afa6:	681b      	ldr	r3, [r3, #0]
 800afa8:	2b00      	cmp	r3, #0
 800afaa:	d0f5      	beq.n	800af98 <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800afac:	4d24      	ldr	r5, [pc, #144]	; (800b040 <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 800afae:	4e25      	ldr	r6, [pc, #148]	; (800b044 <xTaskResumeAll+0xd4>)
 800afb0:	4f25      	ldr	r7, [pc, #148]	; (800b048 <xTaskResumeAll+0xd8>)
 800afb2:	e01e      	b.n	800aff2 <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800afb4:	68eb      	ldr	r3, [r5, #12]
 800afb6:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800afb8:	f104 0018 	add.w	r0, r4, #24
 800afbc:	f7fe feb1 	bl	8009d22 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800afc0:	1d21      	adds	r1, r4, #4
 800afc2:	4608      	mov	r0, r1
 800afc4:	9101      	str	r1, [sp, #4]
 800afc6:	f7fe feac 	bl	8009d22 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800afca:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800afcc:	6832      	ldr	r2, [r6, #0]
 800afce:	9901      	ldr	r1, [sp, #4]
 800afd0:	4293      	cmp	r3, r2
 800afd2:	d900      	bls.n	800afd6 <xTaskResumeAll+0x66>
 800afd4:	6033      	str	r3, [r6, #0]
 800afd6:	2014      	movs	r0, #20
 800afd8:	fb00 7003 	mla	r0, r0, r3, r7
 800afdc:	f7fe fe7e 	bl	8009cdc <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800afe0:	4b1a      	ldr	r3, [pc, #104]	; (800b04c <xTaskResumeAll+0xdc>)
 800afe2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800afe4:	681b      	ldr	r3, [r3, #0]
 800afe6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800afe8:	429a      	cmp	r2, r3
 800afea:	d302      	bcc.n	800aff2 <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 800afec:	4b18      	ldr	r3, [pc, #96]	; (800b050 <xTaskResumeAll+0xe0>)
 800afee:	2201      	movs	r2, #1
 800aff0:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800aff2:	682b      	ldr	r3, [r5, #0]
 800aff4:	2b00      	cmp	r3, #0
 800aff6:	d1dd      	bne.n	800afb4 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 800aff8:	b10c      	cbz	r4, 800affe <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 800affa:	f7ff fe01 	bl	800ac00 <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800affe:	4d15      	ldr	r5, [pc, #84]	; (800b054 <xTaskResumeAll+0xe4>)
 800b000:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800b002:	b144      	cbz	r4, 800b016 <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 800b004:	4e12      	ldr	r6, [pc, #72]	; (800b050 <xTaskResumeAll+0xe0>)
 800b006:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 800b008:	f7ff ff1c 	bl	800ae44 <xTaskIncrementTick>
 800b00c:	b100      	cbz	r0, 800b010 <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 800b00e:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800b010:	3c01      	subs	r4, #1
 800b012:	d1f9      	bne.n	800b008 <xTaskResumeAll+0x98>
						xPendedTicks = 0;
 800b014:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 800b016:	4b0e      	ldr	r3, [pc, #56]	; (800b050 <xTaskResumeAll+0xe0>)
 800b018:	681b      	ldr	r3, [r3, #0]
 800b01a:	2b00      	cmp	r3, #0
 800b01c:	d0bc      	beq.n	800af98 <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 800b01e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800b022:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800b026:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800b02a:	f3bf 8f4f 	dsb	sy
 800b02e:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800b032:	2401      	movs	r4, #1
 800b034:	e7b1      	b.n	800af9a <xTaskResumeAll+0x2a>
 800b036:	bf00      	nop
 800b038:	2400debc 	.word	0x2400debc
 800b03c:	2400deb4 	.word	0x2400deb4
 800b040:	2400defc 	.word	0x2400defc
 800b044:	2400dec4 	.word	0x2400dec4
 800b048:	2400da54 	.word	0x2400da54
 800b04c:	2400da48 	.word	0x2400da48
 800b050:	2400df40 	.word	0x2400df40
 800b054:	2400def8 	.word	0x2400def8

0800b058 <vTaskSetApplicationTaskTag>:
	{
 800b058:	b538      	push	{r3, r4, r5, lr}
 800b05a:	460d      	mov	r5, r1
		if( xTask == NULL )
 800b05c:	4604      	mov	r4, r0
 800b05e:	b908      	cbnz	r0, 800b064 <vTaskSetApplicationTaskTag+0xc>
			xTCB = ( TCB_t * ) pxCurrentTCB;
 800b060:	4b04      	ldr	r3, [pc, #16]	; (800b074 <vTaskSetApplicationTaskTag+0x1c>)
 800b062:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
 800b064:	f7fe fed6 	bl	8009e14 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
 800b068:	6565      	str	r5, [r4, #84]	; 0x54
	}
 800b06a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
 800b06e:	f7fe bef1 	b.w	8009e54 <vPortExitCritical>
 800b072:	bf00      	nop
 800b074:	2400da48 	.word	0x2400da48

0800b078 <xTaskCallApplicationTaskHook>:
	{
 800b078:	4603      	mov	r3, r0
 800b07a:	4608      	mov	r0, r1
		if( xTask == NULL )
 800b07c:	b90b      	cbnz	r3, 800b082 <xTaskCallApplicationTaskHook+0xa>
			xTCB = pxCurrentTCB;
 800b07e:	4b03      	ldr	r3, [pc, #12]	; (800b08c <xTaskCallApplicationTaskHook+0x14>)
 800b080:	681b      	ldr	r3, [r3, #0]
		if( xTCB->pxTaskTag != NULL )
 800b082:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800b084:	b103      	cbz	r3, 800b088 <xTaskCallApplicationTaskHook+0x10>
			xReturn = xTCB->pxTaskTag( pvParameter );
 800b086:	4718      	bx	r3
	}
 800b088:	4618      	mov	r0, r3
 800b08a:	4770      	bx	lr
 800b08c:	2400da48 	.word	0x2400da48

0800b090 <vTaskStartScheduler>:
{
 800b090:	b510      	push	{r4, lr}
 800b092:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800b094:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800b096:	aa07      	add	r2, sp, #28
 800b098:	a906      	add	r1, sp, #24
 800b09a:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800b09c:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800b0a0:	f7fe fcfc 	bl	8009a9c <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800b0a4:	9b05      	ldr	r3, [sp, #20]
 800b0a6:	9a07      	ldr	r2, [sp, #28]
 800b0a8:	9302      	str	r3, [sp, #8]
 800b0aa:	9b06      	ldr	r3, [sp, #24]
 800b0ac:	4919      	ldr	r1, [pc, #100]	; (800b114 <vTaskStartScheduler+0x84>)
 800b0ae:	481a      	ldr	r0, [pc, #104]	; (800b118 <vTaskStartScheduler+0x88>)
 800b0b0:	e9cd 4300 	strd	r4, r3, [sp]
 800b0b4:	4623      	mov	r3, r4
 800b0b6:	f7ff fe52 	bl	800ad5e <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 800b0ba:	b340      	cbz	r0, 800b10e <vTaskStartScheduler+0x7e>
			xReturn = xTimerCreateTimerTask();
 800b0bc:	f000 fa88 	bl	800b5d0 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800b0c0:	2801      	cmp	r0, #1
 800b0c2:	d119      	bne.n	800b0f8 <vTaskStartScheduler+0x68>
 800b0c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b0c8:	f383 8811 	msr	BASEPRI, r3
 800b0cc:	f3bf 8f6f 	isb	sy
 800b0d0:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 800b0d4:	f04f 32ff 	mov.w	r2, #4294967295
 800b0d8:	4b10      	ldr	r3, [pc, #64]	; (800b11c <vTaskStartScheduler+0x8c>)
		traceTASK_SWITCHED_IN();
 800b0da:	4621      	mov	r1, r4
		xNextTaskUnblockTime = portMAX_DELAY;
 800b0dc:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 800b0de:	4b10      	ldr	r3, [pc, #64]	; (800b120 <vTaskStartScheduler+0x90>)
 800b0e0:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800b0e2:	4b10      	ldr	r3, [pc, #64]	; (800b124 <vTaskStartScheduler+0x94>)
 800b0e4:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
 800b0e6:	4b10      	ldr	r3, [pc, #64]	; (800b128 <vTaskStartScheduler+0x98>)
 800b0e8:	6818      	ldr	r0, [r3, #0]
 800b0ea:	f7ff ffc5 	bl	800b078 <xTaskCallApplicationTaskHook>
}
 800b0ee:	b008      	add	sp, #32
 800b0f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 800b0f4:	f7fe bf1e 	b.w	8009f34 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800b0f8:	3001      	adds	r0, #1
 800b0fa:	d108      	bne.n	800b10e <vTaskStartScheduler+0x7e>
 800b0fc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b100:	f383 8811 	msr	BASEPRI, r3
 800b104:	f3bf 8f6f 	isb	sy
 800b108:	f3bf 8f4f 	dsb	sy
 800b10c:	e7fe      	b.n	800b10c <vTaskStartScheduler+0x7c>
}
 800b10e:	b008      	add	sp, #32
 800b110:	bd10      	pop	{r4, pc}
 800b112:	bf00      	nop
 800b114:	080225a0 	.word	0x080225a0
 800b118:	0800ac5d 	.word	0x0800ac5d
 800b11c:	2400def0 	.word	0x2400def0
 800b120:	2400df10 	.word	0x2400df10
 800b124:	2400df3c 	.word	0x2400df3c
 800b128:	2400da48 	.word	0x2400da48

0800b12c <vTaskSwitchContext>:
{
 800b12c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800b12e:	4b1c      	ldr	r3, [pc, #112]	; (800b1a0 <vTaskSwitchContext+0x74>)
 800b130:	681a      	ldr	r2, [r3, #0]
 800b132:	4b1c      	ldr	r3, [pc, #112]	; (800b1a4 <vTaskSwitchContext+0x78>)
 800b134:	b112      	cbz	r2, 800b13c <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 800b136:	2201      	movs	r2, #1
 800b138:	601a      	str	r2, [r3, #0]
}
 800b13a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		traceTASK_SWITCHED_OUT();
 800b13c:	4c1a      	ldr	r4, [pc, #104]	; (800b1a8 <vTaskSwitchContext+0x7c>)
 800b13e:	2101      	movs	r1, #1
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b140:	4e1a      	ldr	r6, [pc, #104]	; (800b1ac <vTaskSwitchContext+0x80>)
 800b142:	2714      	movs	r7, #20
		xYieldPending = pdFALSE;
 800b144:	601a      	str	r2, [r3, #0]
		traceTASK_SWITCHED_OUT();
 800b146:	6820      	ldr	r0, [r4, #0]
 800b148:	f7ff ff96 	bl	800b078 <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b14c:	6832      	ldr	r2, [r6, #0]
 800b14e:	4918      	ldr	r1, [pc, #96]	; (800b1b0 <vTaskSwitchContext+0x84>)
 800b150:	fb07 f302 	mul.w	r3, r7, r2
 800b154:	58cd      	ldr	r5, [r1, r3]
 800b156:	18c8      	adds	r0, r1, r3
 800b158:	b1ad      	cbz	r5, 800b186 <vTaskSwitchContext+0x5a>
 800b15a:	6845      	ldr	r5, [r0, #4]
 800b15c:	3308      	adds	r3, #8
 800b15e:	686d      	ldr	r5, [r5, #4]
 800b160:	440b      	add	r3, r1
 800b162:	429d      	cmp	r5, r3
 800b164:	6045      	str	r5, [r0, #4]
 800b166:	bf04      	itt	eq
 800b168:	686b      	ldreq	r3, [r5, #4]
 800b16a:	6043      	streq	r3, [r0, #4]
 800b16c:	2314      	movs	r3, #20
 800b16e:	fb03 1102 	mla	r1, r3, r2, r1
 800b172:	684b      	ldr	r3, [r1, #4]
		traceTASK_SWITCHED_IN();
 800b174:	2100      	movs	r1, #0
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b176:	68db      	ldr	r3, [r3, #12]
 800b178:	6023      	str	r3, [r4, #0]
 800b17a:	6032      	str	r2, [r6, #0]
		traceTASK_SWITCHED_IN();
 800b17c:	6820      	ldr	r0, [r4, #0]
}
 800b17e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
		traceTASK_SWITCHED_IN();
 800b182:	f7ff bf79 	b.w	800b078 <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b186:	b942      	cbnz	r2, 800b19a <vTaskSwitchContext+0x6e>
 800b188:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b18c:	f383 8811 	msr	BASEPRI, r3
 800b190:	f3bf 8f6f 	isb	sy
 800b194:	f3bf 8f4f 	dsb	sy
 800b198:	e7fe      	b.n	800b198 <vTaskSwitchContext+0x6c>
 800b19a:	3a01      	subs	r2, #1
 800b19c:	e7d8      	b.n	800b150 <vTaskSwitchContext+0x24>
 800b19e:	bf00      	nop
 800b1a0:	2400debc 	.word	0x2400debc
 800b1a4:	2400df40 	.word	0x2400df40
 800b1a8:	2400da48 	.word	0x2400da48
 800b1ac:	2400dec4 	.word	0x2400dec4
 800b1b0:	2400da54 	.word	0x2400da54

0800b1b4 <vTaskPlaceOnEventList>:
{
 800b1b4:	b510      	push	{r4, lr}
 800b1b6:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 800b1b8:	b940      	cbnz	r0, 800b1cc <vTaskPlaceOnEventList+0x18>
 800b1ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b1be:	f383 8811 	msr	BASEPRI, r3
 800b1c2:	f3bf 8f6f 	isb	sy
 800b1c6:	f3bf 8f4f 	dsb	sy
 800b1ca:	e7fe      	b.n	800b1ca <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800b1cc:	4b05      	ldr	r3, [pc, #20]	; (800b1e4 <vTaskPlaceOnEventList+0x30>)
 800b1ce:	6819      	ldr	r1, [r3, #0]
 800b1d0:	3118      	adds	r1, #24
 800b1d2:	f7fe fd8f 	bl	8009cf4 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800b1d6:	4620      	mov	r0, r4
 800b1d8:	2101      	movs	r1, #1
}
 800b1da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800b1de:	f7ff bcd7 	b.w	800ab90 <prvAddCurrentTaskToDelayedList>
 800b1e2:	bf00      	nop
 800b1e4:	2400da48 	.word	0x2400da48

0800b1e8 <vTaskPlaceOnEventListRestricted>:
	{
 800b1e8:	b538      	push	{r3, r4, r5, lr}
 800b1ea:	460d      	mov	r5, r1
 800b1ec:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 800b1ee:	b940      	cbnz	r0, 800b202 <vTaskPlaceOnEventListRestricted+0x1a>
 800b1f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b1f4:	f383 8811 	msr	BASEPRI, r3
 800b1f8:	f3bf 8f6f 	isb	sy
 800b1fc:	f3bf 8f4f 	dsb	sy
 800b200:	e7fe      	b.n	800b200 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800b202:	4b07      	ldr	r3, [pc, #28]	; (800b220 <vTaskPlaceOnEventListRestricted+0x38>)
 800b204:	6819      	ldr	r1, [r3, #0]
 800b206:	3118      	adds	r1, #24
 800b208:	f7fe fd68 	bl	8009cdc <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 800b20c:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800b20e:	4621      	mov	r1, r4
 800b210:	bf0c      	ite	eq
 800b212:	4628      	moveq	r0, r5
 800b214:	f04f 30ff 	movne.w	r0, #4294967295
	}
 800b218:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800b21c:	f7ff bcb8 	b.w	800ab90 <prvAddCurrentTaskToDelayedList>
 800b220:	2400da48 	.word	0x2400da48

0800b224 <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b224:	68c3      	ldr	r3, [r0, #12]
{
 800b226:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b228:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 800b22a:	b944      	cbnz	r4, 800b23e <xTaskRemoveFromEventList+0x1a>
 800b22c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b230:	f383 8811 	msr	BASEPRI, r3
 800b234:	f3bf 8f6f 	isb	sy
 800b238:	f3bf 8f4f 	dsb	sy
 800b23c:	e7fe      	b.n	800b23c <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800b23e:	f104 0118 	add.w	r1, r4, #24
 800b242:	4608      	mov	r0, r1
 800b244:	9101      	str	r1, [sp, #4]
 800b246:	f7fe fd6c 	bl	8009d22 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800b24a:	4b12      	ldr	r3, [pc, #72]	; (800b294 <xTaskRemoveFromEventList+0x70>)
 800b24c:	9901      	ldr	r1, [sp, #4]
 800b24e:	681b      	ldr	r3, [r3, #0]
 800b250:	b9e3      	cbnz	r3, 800b28c <xTaskRemoveFromEventList+0x68>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800b252:	1d21      	adds	r1, r4, #4
 800b254:	4608      	mov	r0, r1
 800b256:	9101      	str	r1, [sp, #4]
 800b258:	f7fe fd63 	bl	8009d22 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800b25c:	4a0e      	ldr	r2, [pc, #56]	; (800b298 <xTaskRemoveFromEventList+0x74>)
 800b25e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800b260:	6810      	ldr	r0, [r2, #0]
 800b262:	9901      	ldr	r1, [sp, #4]
 800b264:	4283      	cmp	r3, r0
 800b266:	d900      	bls.n	800b26a <xTaskRemoveFromEventList+0x46>
 800b268:	6013      	str	r3, [r2, #0]
 800b26a:	4a0c      	ldr	r2, [pc, #48]	; (800b29c <xTaskRemoveFromEventList+0x78>)
 800b26c:	2014      	movs	r0, #20
 800b26e:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800b272:	f7fe fd33 	bl	8009cdc <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800b276:	4b0a      	ldr	r3, [pc, #40]	; (800b2a0 <xTaskRemoveFromEventList+0x7c>)
 800b278:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800b27a:	681b      	ldr	r3, [r3, #0]
 800b27c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b27e:	429a      	cmp	r2, r3
 800b280:	d906      	bls.n	800b290 <xTaskRemoveFromEventList+0x6c>
		xYieldPending = pdTRUE;
 800b282:	2001      	movs	r0, #1
 800b284:	4b07      	ldr	r3, [pc, #28]	; (800b2a4 <xTaskRemoveFromEventList+0x80>)
 800b286:	6018      	str	r0, [r3, #0]
}
 800b288:	b002      	add	sp, #8
 800b28a:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800b28c:	4806      	ldr	r0, [pc, #24]	; (800b2a8 <xTaskRemoveFromEventList+0x84>)
 800b28e:	e7f0      	b.n	800b272 <xTaskRemoveFromEventList+0x4e>
		xReturn = pdFALSE;
 800b290:	2000      	movs	r0, #0
	return xReturn;
 800b292:	e7f9      	b.n	800b288 <xTaskRemoveFromEventList+0x64>
 800b294:	2400debc 	.word	0x2400debc
 800b298:	2400dec4 	.word	0x2400dec4
 800b29c:	2400da54 	.word	0x2400da54
 800b2a0:	2400da48 	.word	0x2400da48
 800b2a4:	2400df40 	.word	0x2400df40
 800b2a8:	2400defc 	.word	0x2400defc

0800b2ac <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800b2ac:	4b03      	ldr	r3, [pc, #12]	; (800b2bc <vTaskInternalSetTimeOutState+0x10>)
 800b2ae:	681b      	ldr	r3, [r3, #0]
 800b2b0:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800b2b2:	4b03      	ldr	r3, [pc, #12]	; (800b2c0 <vTaskInternalSetTimeOutState+0x14>)
 800b2b4:	681b      	ldr	r3, [r3, #0]
 800b2b6:	6043      	str	r3, [r0, #4]
}
 800b2b8:	4770      	bx	lr
 800b2ba:	bf00      	nop
 800b2bc:	2400def4 	.word	0x2400def4
 800b2c0:	2400df3c 	.word	0x2400df3c

0800b2c4 <xTaskCheckForTimeOut>:
{
 800b2c4:	b570      	push	{r4, r5, r6, lr}
 800b2c6:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 800b2c8:	4605      	mov	r5, r0
 800b2ca:	b940      	cbnz	r0, 800b2de <xTaskCheckForTimeOut+0x1a>
 800b2cc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b2d0:	f383 8811 	msr	BASEPRI, r3
 800b2d4:	f3bf 8f6f 	isb	sy
 800b2d8:	f3bf 8f4f 	dsb	sy
 800b2dc:	e7fe      	b.n	800b2dc <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 800b2de:	b941      	cbnz	r1, 800b2f2 <xTaskCheckForTimeOut+0x2e>
 800b2e0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b2e4:	f383 8811 	msr	BASEPRI, r3
 800b2e8:	f3bf 8f6f 	isb	sy
 800b2ec:	f3bf 8f4f 	dsb	sy
 800b2f0:	e7fe      	b.n	800b2f0 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 800b2f2:	f7fe fd8f 	bl	8009e14 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 800b2f6:	4b0f      	ldr	r3, [pc, #60]	; (800b334 <xTaskCheckForTimeOut+0x70>)
 800b2f8:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800b2fa:	6823      	ldr	r3, [r4, #0]
 800b2fc:	1c5a      	adds	r2, r3, #1
 800b2fe:	d010      	beq.n	800b322 <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800b300:	480d      	ldr	r0, [pc, #52]	; (800b338 <xTaskCheckForTimeOut+0x74>)
 800b302:	682e      	ldr	r6, [r5, #0]
 800b304:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800b306:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800b308:	4286      	cmp	r6, r0
 800b30a:	d001      	beq.n	800b310 <xTaskCheckForTimeOut+0x4c>
 800b30c:	428a      	cmp	r2, r1
 800b30e:	d90f      	bls.n	800b330 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800b310:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800b312:	4283      	cmp	r3, r0
 800b314:	d90a      	bls.n	800b32c <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 800b316:	1a5b      	subs	r3, r3, r1
			vTaskInternalSetTimeOutState( pxTimeOut );
 800b318:	4628      	mov	r0, r5
			*pxTicksToWait -= xElapsedTime;
 800b31a:	4413      	add	r3, r2
 800b31c:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 800b31e:	f7ff ffc5 	bl	800b2ac <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 800b322:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800b324:	f7fe fd96 	bl	8009e54 <vPortExitCritical>
}
 800b328:	4620      	mov	r0, r4
 800b32a:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 800b32c:	2300      	movs	r3, #0
 800b32e:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 800b330:	2401      	movs	r4, #1
 800b332:	e7f7      	b.n	800b324 <xTaskCheckForTimeOut+0x60>
 800b334:	2400df3c 	.word	0x2400df3c
 800b338:	2400def4 	.word	0x2400def4

0800b33c <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800b33c:	4b01      	ldr	r3, [pc, #4]	; (800b344 <vTaskMissedYield+0x8>)
 800b33e:	2201      	movs	r2, #1
 800b340:	601a      	str	r2, [r3, #0]
}
 800b342:	4770      	bx	lr
 800b344:	2400df40 	.word	0x2400df40

0800b348 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800b348:	4b05      	ldr	r3, [pc, #20]	; (800b360 <xTaskGetSchedulerState+0x18>)
 800b34a:	681b      	ldr	r3, [r3, #0]
 800b34c:	b133      	cbz	r3, 800b35c <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800b34e:	4b05      	ldr	r3, [pc, #20]	; (800b364 <xTaskGetSchedulerState+0x1c>)
 800b350:	681b      	ldr	r3, [r3, #0]
				xReturn = taskSCHEDULER_SUSPENDED;
 800b352:	2b00      	cmp	r3, #0
 800b354:	bf0c      	ite	eq
 800b356:	2002      	moveq	r0, #2
 800b358:	2000      	movne	r0, #0
 800b35a:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800b35c:	2001      	movs	r0, #1
	}
 800b35e:	4770      	bx	lr
 800b360:	2400df10 	.word	0x2400df10
 800b364:	2400debc 	.word	0x2400debc

0800b368 <xTaskPriorityInherit>:
	{
 800b368:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800b36a:	4604      	mov	r4, r0
 800b36c:	b340      	cbz	r0, 800b3c0 <xTaskPriorityInherit+0x58>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800b36e:	4d1b      	ldr	r5, [pc, #108]	; (800b3dc <xTaskPriorityInherit+0x74>)
 800b370:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800b372:	682a      	ldr	r2, [r5, #0]
 800b374:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800b376:	4293      	cmp	r3, r2
 800b378:	d228      	bcs.n	800b3cc <xTaskPriorityInherit+0x64>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800b37a:	6982      	ldr	r2, [r0, #24]
 800b37c:	2a00      	cmp	r2, #0
 800b37e:	db04      	blt.n	800b38a <xTaskPriorityInherit+0x22>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800b380:	682a      	ldr	r2, [r5, #0]
 800b382:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800b384:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
 800b388:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800b38a:	2214      	movs	r2, #20
 800b38c:	4e14      	ldr	r6, [pc, #80]	; (800b3e0 <xTaskPriorityInherit+0x78>)
 800b38e:	fb02 6303 	mla	r3, r2, r3, r6
 800b392:	6962      	ldr	r2, [r4, #20]
 800b394:	429a      	cmp	r2, r3
 800b396:	d115      	bne.n	800b3c4 <xTaskPriorityInherit+0x5c>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800b398:	1d21      	adds	r1, r4, #4
 800b39a:	4608      	mov	r0, r1
 800b39c:	9101      	str	r1, [sp, #4]
 800b39e:	f7fe fcc0 	bl	8009d22 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800b3a2:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800b3a4:	4a0f      	ldr	r2, [pc, #60]	; (800b3e4 <xTaskPriorityInherit+0x7c>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800b3a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800b3a8:	6810      	ldr	r0, [r2, #0]
 800b3aa:	9901      	ldr	r1, [sp, #4]
 800b3ac:	4283      	cmp	r3, r0
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800b3ae:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800b3b0:	d900      	bls.n	800b3b4 <xTaskPriorityInherit+0x4c>
 800b3b2:	6013      	str	r3, [r2, #0]
 800b3b4:	2014      	movs	r0, #20
 800b3b6:	fb00 6003 	mla	r0, r0, r3, r6
 800b3ba:	f7fe fc8f 	bl	8009cdc <vListInsertEnd>
				xReturn = pdTRUE;
 800b3be:	2001      	movs	r0, #1
	}
 800b3c0:	b002      	add	sp, #8
 800b3c2:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800b3c4:	682b      	ldr	r3, [r5, #0]
 800b3c6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b3c8:	62e3      	str	r3, [r4, #44]	; 0x2c
 800b3ca:	e7f8      	b.n	800b3be <xTaskPriorityInherit+0x56>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800b3cc:	682b      	ldr	r3, [r5, #0]
 800b3ce:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800b3d0:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 800b3d2:	42a0      	cmp	r0, r4
 800b3d4:	bf2c      	ite	cs
 800b3d6:	2000      	movcs	r0, #0
 800b3d8:	2001      	movcc	r0, #1
 800b3da:	e7f1      	b.n	800b3c0 <xTaskPriorityInherit+0x58>
 800b3dc:	2400da48 	.word	0x2400da48
 800b3e0:	2400da54 	.word	0x2400da54
 800b3e4:	2400dec4 	.word	0x2400dec4

0800b3e8 <xTaskPriorityDisinherit>:
	{
 800b3e8:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 800b3ea:	b910      	cbnz	r0, 800b3f2 <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 800b3ec:	2000      	movs	r0, #0
	}
 800b3ee:	b002      	add	sp, #8
 800b3f0:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 800b3f2:	4b1c      	ldr	r3, [pc, #112]	; (800b464 <xTaskPriorityDisinherit+0x7c>)
 800b3f4:	681c      	ldr	r4, [r3, #0]
 800b3f6:	4284      	cmp	r4, r0
 800b3f8:	d008      	beq.n	800b40c <xTaskPriorityDisinherit+0x24>
 800b3fa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b3fe:	f383 8811 	msr	BASEPRI, r3
 800b402:	f3bf 8f6f 	isb	sy
 800b406:	f3bf 8f4f 	dsb	sy
 800b40a:	e7fe      	b.n	800b40a <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 800b40c:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800b40e:	b943      	cbnz	r3, 800b422 <xTaskPriorityDisinherit+0x3a>
 800b410:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b414:	f383 8811 	msr	BASEPRI, r3
 800b418:	f3bf 8f6f 	isb	sy
 800b41c:	f3bf 8f4f 	dsb	sy
 800b420:	e7fe      	b.n	800b420 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800b422:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
			( pxTCB->uxMutexesHeld )--;
 800b424:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800b426:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800b428:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800b42a:	4291      	cmp	r1, r2
 800b42c:	d0de      	beq.n	800b3ec <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800b42e:	2b00      	cmp	r3, #0
 800b430:	d1dc      	bne.n	800b3ec <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800b432:	1d21      	adds	r1, r4, #4
 800b434:	4608      	mov	r0, r1
 800b436:	9101      	str	r1, [sp, #4]
 800b438:	f7fe fc73 	bl	8009d22 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800b43c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800b43e:	9901      	ldr	r1, [sp, #4]
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800b440:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800b444:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800b446:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800b448:	4a07      	ldr	r2, [pc, #28]	; (800b468 <xTaskPriorityDisinherit+0x80>)
 800b44a:	6810      	ldr	r0, [r2, #0]
 800b44c:	4283      	cmp	r3, r0
 800b44e:	d900      	bls.n	800b452 <xTaskPriorityDisinherit+0x6a>
 800b450:	6013      	str	r3, [r2, #0]
 800b452:	4a06      	ldr	r2, [pc, #24]	; (800b46c <xTaskPriorityDisinherit+0x84>)
 800b454:	2014      	movs	r0, #20
 800b456:	fb00 2003 	mla	r0, r0, r3, r2
 800b45a:	f7fe fc3f 	bl	8009cdc <vListInsertEnd>
					xReturn = pdTRUE;
 800b45e:	2001      	movs	r0, #1
		return xReturn;
 800b460:	e7c5      	b.n	800b3ee <xTaskPriorityDisinherit+0x6>
 800b462:	bf00      	nop
 800b464:	2400da48 	.word	0x2400da48
 800b468:	2400dec4 	.word	0x2400dec4
 800b46c:	2400da54 	.word	0x2400da54

0800b470 <vTaskPriorityDisinheritAfterTimeout>:
	{
 800b470:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 800b472:	4604      	mov	r4, r0
 800b474:	2800      	cmp	r0, #0
 800b476:	d044      	beq.n	800b502 <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 800b478:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800b47a:	b942      	cbnz	r2, 800b48e <vTaskPriorityDisinheritAfterTimeout+0x1e>
 800b47c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b480:	f383 8811 	msr	BASEPRI, r3
 800b484:	f3bf 8f6f 	isb	sy
 800b488:	f3bf 8f4f 	dsb	sy
 800b48c:	e7fe      	b.n	800b48c <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800b48e:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 800b490:	4299      	cmp	r1, r3
 800b492:	bf38      	it	cc
 800b494:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 800b496:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800b498:	428b      	cmp	r3, r1
 800b49a:	d032      	beq.n	800b502 <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800b49c:	2a01      	cmp	r2, #1
 800b49e:	d130      	bne.n	800b502 <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 800b4a0:	4a19      	ldr	r2, [pc, #100]	; (800b508 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 800b4a2:	6812      	ldr	r2, [r2, #0]
 800b4a4:	4282      	cmp	r2, r0
 800b4a6:	d108      	bne.n	800b4ba <vTaskPriorityDisinheritAfterTimeout+0x4a>
 800b4a8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b4ac:	f383 8811 	msr	BASEPRI, r3
 800b4b0:	f3bf 8f6f 	isb	sy
 800b4b4:	f3bf 8f4f 	dsb	sy
 800b4b8:	e7fe      	b.n	800b4b8 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800b4ba:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800b4bc:	4d13      	ldr	r5, [pc, #76]	; (800b50c <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800b4be:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800b4c0:	f04f 0214 	mov.w	r2, #20
					pxTCB->uxPriority = uxPriorityToUse;
 800b4c4:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800b4c6:	fb02 5303 	mla	r3, r2, r3, r5
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800b4ca:	bfa8      	it	ge
 800b4cc:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800b4d0:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800b4d2:	bfa8      	it	ge
 800b4d4:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800b4d6:	429a      	cmp	r2, r3
 800b4d8:	d113      	bne.n	800b502 <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800b4da:	1d01      	adds	r1, r0, #4
 800b4dc:	4608      	mov	r0, r1
 800b4de:	9101      	str	r1, [sp, #4]
 800b4e0:	f7fe fc1f 	bl	8009d22 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800b4e4:	4a0a      	ldr	r2, [pc, #40]	; (800b510 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 800b4e6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800b4e8:	6810      	ldr	r0, [r2, #0]
 800b4ea:	9901      	ldr	r1, [sp, #4]
 800b4ec:	4283      	cmp	r3, r0
 800b4ee:	d900      	bls.n	800b4f2 <vTaskPriorityDisinheritAfterTimeout+0x82>
 800b4f0:	6013      	str	r3, [r2, #0]
 800b4f2:	2014      	movs	r0, #20
 800b4f4:	fb00 5003 	mla	r0, r0, r3, r5
	}
 800b4f8:	b003      	add	sp, #12
 800b4fa:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800b4fe:	f7fe bbed 	b.w	8009cdc <vListInsertEnd>
	}
 800b502:	b003      	add	sp, #12
 800b504:	bd30      	pop	{r4, r5, pc}
 800b506:	bf00      	nop
 800b508:	2400da48 	.word	0x2400da48
 800b50c:	2400da54 	.word	0x2400da54
 800b510:	2400dec4 	.word	0x2400dec4

0800b514 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800b514:	4b04      	ldr	r3, [pc, #16]	; (800b528 <pvTaskIncrementMutexHeldCount+0x14>)
 800b516:	681a      	ldr	r2, [r3, #0]
 800b518:	b11a      	cbz	r2, 800b522 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800b51a:	6819      	ldr	r1, [r3, #0]
 800b51c:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800b51e:	3201      	adds	r2, #1
 800b520:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800b522:	6818      	ldr	r0, [r3, #0]
	}
 800b524:	4770      	bx	lr
 800b526:	bf00      	nop
 800b528:	2400da48 	.word	0x2400da48

0800b52c <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 800b52c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800b52e:	4c11      	ldr	r4, [pc, #68]	; (800b574 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 800b530:	f7fe fc70 	bl	8009e14 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800b534:	6825      	ldr	r5, [r4, #0]
 800b536:	b9bd      	cbnz	r5, 800b568 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 800b538:	4f0f      	ldr	r7, [pc, #60]	; (800b578 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 800b53a:	4e10      	ldr	r6, [pc, #64]	; (800b57c <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 800b53c:	4638      	mov	r0, r7
 800b53e:	f7fe fbbf 	bl	8009cc0 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800b542:	4630      	mov	r0, r6
 800b544:	f7fe fbbc 	bl	8009cc0 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800b548:	4b0d      	ldr	r3, [pc, #52]	; (800b580 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800b54a:	4a0e      	ldr	r2, [pc, #56]	; (800b584 <prvCheckForValidListAndQueue+0x58>)
 800b54c:	2110      	movs	r1, #16
			pxCurrentTimerList = &xActiveTimerList1;
 800b54e:	601f      	str	r7, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800b550:	200a      	movs	r0, #10
			pxOverflowTimerList = &xActiveTimerList2;
 800b552:	4b0d      	ldr	r3, [pc, #52]	; (800b588 <prvCheckForValidListAndQueue+0x5c>)
 800b554:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800b556:	4b0d      	ldr	r3, [pc, #52]	; (800b58c <prvCheckForValidListAndQueue+0x60>)
 800b558:	9500      	str	r5, [sp, #0]
 800b55a:	f7fe fe6b 	bl	800a234 <xQueueGenericCreateStatic>
 800b55e:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 800b560:	b110      	cbz	r0, 800b568 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800b562:	490b      	ldr	r1, [pc, #44]	; (800b590 <prvCheckForValidListAndQueue+0x64>)
 800b564:	f7ff fa36 	bl	800a9d4 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 800b568:	b003      	add	sp, #12
 800b56a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 800b56e:	f7fe bc71 	b.w	8009e54 <vPortExitCritical>
 800b572:	bf00      	nop
 800b574:	2400e068 	.word	0x2400e068
 800b578:	2400dfec 	.word	0x2400dfec
 800b57c:	2400e000 	.word	0x2400e000
 800b580:	2400df44 	.word	0x2400df44
 800b584:	2400df4c 	.word	0x2400df4c
 800b588:	2400df48 	.word	0x2400df48
 800b58c:	2400e018 	.word	0x2400e018
 800b590:	080225a5 	.word	0x080225a5

0800b594 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 800b594:	4291      	cmp	r1, r2
{
 800b596:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800b598:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800b59a:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 800b59c:	d80a      	bhi.n	800b5b4 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800b59e:	1ad2      	subs	r2, r2, r3
 800b5a0:	6983      	ldr	r3, [r0, #24]
 800b5a2:	429a      	cmp	r2, r3
 800b5a4:	d20d      	bcs.n	800b5c2 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800b5a6:	1d01      	adds	r1, r0, #4
 800b5a8:	4b07      	ldr	r3, [pc, #28]	; (800b5c8 <prvInsertTimerInActiveList+0x34>)
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800b5aa:	6818      	ldr	r0, [r3, #0]
 800b5ac:	f7fe fba2 	bl	8009cf4 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 800b5b0:	2000      	movs	r0, #0
}
 800b5b2:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800b5b4:	429a      	cmp	r2, r3
 800b5b6:	d201      	bcs.n	800b5bc <prvInsertTimerInActiveList+0x28>
 800b5b8:	4299      	cmp	r1, r3
 800b5ba:	d202      	bcs.n	800b5c2 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800b5bc:	1d01      	adds	r1, r0, #4
 800b5be:	4b03      	ldr	r3, [pc, #12]	; (800b5cc <prvInsertTimerInActiveList+0x38>)
 800b5c0:	e7f3      	b.n	800b5aa <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 800b5c2:	2001      	movs	r0, #1
	return xProcessTimerNow;
 800b5c4:	e7f5      	b.n	800b5b2 <prvInsertTimerInActiveList+0x1e>
 800b5c6:	bf00      	nop
 800b5c8:	2400df48 	.word	0x2400df48
 800b5cc:	2400df44 	.word	0x2400df44

0800b5d0 <xTimerCreateTimerTask>:
{
 800b5d0:	b510      	push	{r4, lr}
 800b5d2:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 800b5d4:	f7ff ffaa 	bl	800b52c <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 800b5d8:	4b12      	ldr	r3, [pc, #72]	; (800b624 <xTimerCreateTimerTask+0x54>)
 800b5da:	681b      	ldr	r3, [r3, #0]
 800b5dc:	b1b3      	cbz	r3, 800b60c <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800b5de:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800b5e0:	aa07      	add	r2, sp, #28
 800b5e2:	a906      	add	r1, sp, #24
 800b5e4:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800b5e6:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800b5ea:	f7fe fa63 	bl	8009ab4 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800b5ee:	9b05      	ldr	r3, [sp, #20]
 800b5f0:	9a07      	ldr	r2, [sp, #28]
 800b5f2:	9302      	str	r3, [sp, #8]
 800b5f4:	9b06      	ldr	r3, [sp, #24]
 800b5f6:	490c      	ldr	r1, [pc, #48]	; (800b628 <xTimerCreateTimerTask+0x58>)
 800b5f8:	9301      	str	r3, [sp, #4]
 800b5fa:	2302      	movs	r3, #2
 800b5fc:	480b      	ldr	r0, [pc, #44]	; (800b62c <xTimerCreateTimerTask+0x5c>)
 800b5fe:	9300      	str	r3, [sp, #0]
 800b600:	4623      	mov	r3, r4
 800b602:	f7ff fbac 	bl	800ad5e <xTaskCreateStatic>
 800b606:	4b0a      	ldr	r3, [pc, #40]	; (800b630 <xTimerCreateTimerTask+0x60>)
 800b608:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800b60a:	b940      	cbnz	r0, 800b61e <xTimerCreateTimerTask+0x4e>
 800b60c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b610:	f383 8811 	msr	BASEPRI, r3
 800b614:	f3bf 8f6f 	isb	sy
 800b618:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800b61c:	e7fe      	b.n	800b61c <xTimerCreateTimerTask+0x4c>
}
 800b61e:	2001      	movs	r0, #1
 800b620:	b008      	add	sp, #32
 800b622:	bd10      	pop	{r4, pc}
 800b624:	2400e068 	.word	0x2400e068
 800b628:	080225aa 	.word	0x080225aa
 800b62c:	0800b735 	.word	0x0800b735
 800b630:	2400e06c 	.word	0x2400e06c

0800b634 <xTimerGenericCommand>:
{
 800b634:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b636:	4616      	mov	r6, r2
	configASSERT( xTimer );
 800b638:	4604      	mov	r4, r0
{
 800b63a:	461a      	mov	r2, r3
	configASSERT( xTimer );
 800b63c:	b940      	cbnz	r0, 800b650 <xTimerGenericCommand+0x1c>
 800b63e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b642:	f383 8811 	msr	BASEPRI, r3
 800b646:	f3bf 8f6f 	isb	sy
 800b64a:	f3bf 8f4f 	dsb	sy
 800b64e:	e7fe      	b.n	800b64e <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 800b650:	4d0c      	ldr	r5, [pc, #48]	; (800b684 <xTimerGenericCommand+0x50>)
 800b652:	6828      	ldr	r0, [r5, #0]
 800b654:	b178      	cbz	r0, 800b676 <xTimerGenericCommand+0x42>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800b656:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800b658:	9402      	str	r4, [sp, #8]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800b65a:	e9cd 1600 	strd	r1, r6, [sp]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800b65e:	dc0c      	bgt.n	800b67a <xTimerGenericCommand+0x46>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800b660:	f7ff fe72 	bl	800b348 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800b664:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800b666:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800b668:	4669      	mov	r1, sp
 800b66a:	6828      	ldr	r0, [r5, #0]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800b66c:	bf0c      	ite	eq
 800b66e:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800b670:	461a      	movne	r2, r3
 800b672:	f7fe fe94 	bl	800a39e <xQueueGenericSend>
}
 800b676:	b004      	add	sp, #16
 800b678:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 800b67a:	2300      	movs	r3, #0
 800b67c:	4669      	mov	r1, sp
 800b67e:	f7fe ff41 	bl	800a504 <xQueueGenericSendFromISR>
 800b682:	e7f8      	b.n	800b676 <xTimerGenericCommand+0x42>
 800b684:	2400e068 	.word	0x2400e068

0800b688 <prvSampleTimeNow>:
{
 800b688:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 800b68c:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 800b730 <prvSampleTimeNow+0xa8>
{
 800b690:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 800b692:	f7ff fbd1 	bl	800ae38 <xTaskGetTickCount>
 800b696:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800b698:	f8d8 3000 	ldr.w	r3, [r8]
 800b69c:	4283      	cmp	r3, r0
 800b69e:	d940      	bls.n	800b722 <prvSampleTimeNow+0x9a>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800b6a0:	4f21      	ldr	r7, [pc, #132]	; (800b728 <prvSampleTimeNow+0xa0>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800b6a2:	f04f 0900 	mov.w	r9, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800b6a6:	683b      	ldr	r3, [r7, #0]
 800b6a8:	681a      	ldr	r2, [r3, #0]
 800b6aa:	b95a      	cbnz	r2, 800b6c4 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 800b6ac:	4a1f      	ldr	r2, [pc, #124]	; (800b72c <prvSampleTimeNow+0xa4>)
 800b6ae:	6811      	ldr	r1, [r2, #0]
	pxOverflowTimerList = pxTemp;
 800b6b0:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 800b6b2:	2301      	movs	r3, #1
	pxCurrentTimerList = pxOverflowTimerList;
 800b6b4:	6039      	str	r1, [r7, #0]
}
 800b6b6:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdFALSE;
 800b6b8:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 800b6ba:	f8c8 5000 	str.w	r5, [r8]
}
 800b6be:	b004      	add	sp, #16
 800b6c0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800b6c4:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b6c6:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800b6c8:	f8d3 a000 	ldr.w	sl, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800b6cc:	1d21      	adds	r1, r4, #4
 800b6ce:	4608      	mov	r0, r1
 800b6d0:	9103      	str	r1, [sp, #12]
 800b6d2:	f7fe fb26 	bl	8009d22 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800b6d6:	6a23      	ldr	r3, [r4, #32]
 800b6d8:	4620      	mov	r0, r4
 800b6da:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800b6dc:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800b6e0:	9903      	ldr	r1, [sp, #12]
 800b6e2:	f013 0f04 	tst.w	r3, #4
 800b6e6:	d0de      	beq.n	800b6a6 <prvSampleTimeNow+0x1e>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800b6e8:	69a3      	ldr	r3, [r4, #24]
 800b6ea:	4453      	add	r3, sl
			if( xReloadTime > xNextExpireTime )
 800b6ec:	459a      	cmp	sl, r3
 800b6ee:	d205      	bcs.n	800b6fc <prvSampleTimeNow+0x74>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800b6f0:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800b6f2:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800b6f4:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800b6f6:	f7fe fafd 	bl	8009cf4 <vListInsert>
 800b6fa:	e7d4      	b.n	800b6a6 <prvSampleTimeNow+0x1e>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800b6fc:	2300      	movs	r3, #0
 800b6fe:	4652      	mov	r2, sl
 800b700:	4620      	mov	r0, r4
 800b702:	f8cd 9000 	str.w	r9, [sp]
 800b706:	4619      	mov	r1, r3
 800b708:	f7ff ff94 	bl	800b634 <xTimerGenericCommand>
				configASSERT( xResult );
 800b70c:	2800      	cmp	r0, #0
 800b70e:	d1ca      	bne.n	800b6a6 <prvSampleTimeNow+0x1e>
 800b710:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b714:	f383 8811 	msr	BASEPRI, r3
 800b718:	f3bf 8f6f 	isb	sy
 800b71c:	f3bf 8f4f 	dsb	sy
 800b720:	e7fe      	b.n	800b720 <prvSampleTimeNow+0x98>
		*pxTimerListsWereSwitched = pdFALSE;
 800b722:	2300      	movs	r3, #0
 800b724:	e7c7      	b.n	800b6b6 <prvSampleTimeNow+0x2e>
 800b726:	bf00      	nop
 800b728:	2400df44 	.word	0x2400df44
 800b72c:	2400df48 	.word	0x2400df48
 800b730:	2400e014 	.word	0x2400e014

0800b734 <prvTimerTask>:
{
 800b734:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800b738:	4d6e      	ldr	r5, [pc, #440]	; (800b8f4 <prvTimerTask+0x1c0>)
{
 800b73a:	b089      	sub	sp, #36	; 0x24
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800b73c:	4e6e      	ldr	r6, [pc, #440]	; (800b8f8 <prvTimerTask+0x1c4>)
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800b73e:	682b      	ldr	r3, [r5, #0]
 800b740:	f8d3 8000 	ldr.w	r8, [r3]
 800b744:	f1b8 0f00 	cmp.w	r8, #0
 800b748:	d035      	beq.n	800b7b6 <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800b74a:	68db      	ldr	r3, [r3, #12]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800b74c:	2400      	movs	r4, #0
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800b74e:	f8d3 8000 	ldr.w	r8, [r3]
	vTaskSuspendAll();
 800b752:	f7ff fb69 	bl	800ae28 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800b756:	a804      	add	r0, sp, #16
 800b758:	f7ff ff96 	bl	800b688 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 800b75c:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800b75e:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 800b760:	2b00      	cmp	r3, #0
 800b762:	d169      	bne.n	800b838 <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800b764:	2c00      	cmp	r4, #0
 800b766:	d14c      	bne.n	800b802 <prvTimerTask+0xce>
 800b768:	4540      	cmp	r0, r8
 800b76a:	d350      	bcc.n	800b80e <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 800b76c:	f7ff fc00 	bl	800af70 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b770:	682b      	ldr	r3, [r5, #0]
 800b772:	68db      	ldr	r3, [r3, #12]
 800b774:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800b776:	1d38      	adds	r0, r7, #4
 800b778:	f7fe fad3 	bl	8009d22 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800b77c:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800b780:	0758      	lsls	r0, r3, #29
 800b782:	d51a      	bpl.n	800b7ba <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800b784:	69b9      	ldr	r1, [r7, #24]
 800b786:	4643      	mov	r3, r8
 800b788:	464a      	mov	r2, r9
 800b78a:	4638      	mov	r0, r7
 800b78c:	4441      	add	r1, r8
 800b78e:	f7ff ff01 	bl	800b594 <prvInsertTimerInActiveList>
 800b792:	b1b0      	cbz	r0, 800b7c2 <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800b794:	4623      	mov	r3, r4
 800b796:	4642      	mov	r2, r8
 800b798:	4621      	mov	r1, r4
 800b79a:	4638      	mov	r0, r7
 800b79c:	9400      	str	r4, [sp, #0]
 800b79e:	f7ff ff49 	bl	800b634 <xTimerGenericCommand>
			configASSERT( xResult );
 800b7a2:	b970      	cbnz	r0, 800b7c2 <prvTimerTask+0x8e>
 800b7a4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b7a8:	f383 8811 	msr	BASEPRI, r3
 800b7ac:	f3bf 8f6f 	isb	sy
 800b7b0:	f3bf 8f4f 	dsb	sy
 800b7b4:	e7fe      	b.n	800b7b4 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800b7b6:	2401      	movs	r4, #1
 800b7b8:	e7cb      	b.n	800b752 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800b7ba:	f023 0301 	bic.w	r3, r3, #1
 800b7be:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800b7c2:	6a3b      	ldr	r3, [r7, #32]
 800b7c4:	4638      	mov	r0, r7
 800b7c6:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800b7c8:	2200      	movs	r2, #0
 800b7ca:	a904      	add	r1, sp, #16
 800b7cc:	6830      	ldr	r0, [r6, #0]
 800b7ce:	f7fe ff4f 	bl	800a670 <xQueueReceive>
 800b7d2:	2800      	cmp	r0, #0
 800b7d4:	d0b3      	beq.n	800b73e <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800b7d6:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800b7d8:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800b7da:	2b00      	cmp	r3, #0
 800b7dc:	db2f      	blt.n	800b83e <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800b7de:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800b7e0:	6963      	ldr	r3, [r4, #20]
 800b7e2:	2b00      	cmp	r3, #0
 800b7e4:	d132      	bne.n	800b84c <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800b7e6:	a803      	add	r0, sp, #12
 800b7e8:	f7ff ff4e 	bl	800b688 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 800b7ec:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800b7ee:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 800b7f0:	2b09      	cmp	r3, #9
 800b7f2:	d8e9      	bhi.n	800b7c8 <prvTimerTask+0x94>
 800b7f4:	e8df f003 	tbb	[pc, r3]
 800b7f8:	572e2e2e 	.word	0x572e2e2e
 800b7fc:	2e2e765e 	.word	0x2e2e765e
 800b800:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800b802:	4b3e      	ldr	r3, [pc, #248]	; (800b8fc <prvTimerTask+0x1c8>)
 800b804:	681b      	ldr	r3, [r3, #0]
 800b806:	681c      	ldr	r4, [r3, #0]
 800b808:	fab4 f484 	clz	r4, r4
 800b80c:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800b80e:	4622      	mov	r2, r4
 800b810:	eba8 0109 	sub.w	r1, r8, r9
 800b814:	6830      	ldr	r0, [r6, #0]
 800b816:	f7ff f91a 	bl	800aa4e <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800b81a:	f7ff fba9 	bl	800af70 <xTaskResumeAll>
 800b81e:	2800      	cmp	r0, #0
 800b820:	d1d2      	bne.n	800b7c8 <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 800b822:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800b826:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800b82a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800b82e:	f3bf 8f4f 	dsb	sy
 800b832:	f3bf 8f6f 	isb	sy
 800b836:	e7c7      	b.n	800b7c8 <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 800b838:	f7ff fb9a 	bl	800af70 <xTaskResumeAll>
}
 800b83c:	e7c4      	b.n	800b7c8 <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800b83e:	9b05      	ldr	r3, [sp, #20]
 800b840:	9907      	ldr	r1, [sp, #28]
 800b842:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800b844:	9b04      	ldr	r3, [sp, #16]
 800b846:	2b00      	cmp	r3, #0
 800b848:	dbbe      	blt.n	800b7c8 <prvTimerTask+0x94>
 800b84a:	e7c8      	b.n	800b7de <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800b84c:	1d20      	adds	r0, r4, #4
 800b84e:	f7fe fa68 	bl	8009d22 <uxListRemove>
 800b852:	e7c8      	b.n	800b7e6 <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800b854:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800b858:	4620      	mov	r0, r4
 800b85a:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800b85c:	f043 0301 	orr.w	r3, r3, #1
 800b860:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800b864:	9b05      	ldr	r3, [sp, #20]
 800b866:	4419      	add	r1, r3
 800b868:	f7ff fe94 	bl	800b594 <prvInsertTimerInActiveList>
 800b86c:	2800      	cmp	r0, #0
 800b86e:	d0ab      	beq.n	800b7c8 <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800b870:	6a23      	ldr	r3, [r4, #32]
 800b872:	4620      	mov	r0, r4
 800b874:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800b876:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800b87a:	0759      	lsls	r1, r3, #29
 800b87c:	d5a4      	bpl.n	800b7c8 <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800b87e:	69a2      	ldr	r2, [r4, #24]
 800b880:	2300      	movs	r3, #0
 800b882:	9905      	ldr	r1, [sp, #20]
 800b884:	4620      	mov	r0, r4
 800b886:	9300      	str	r3, [sp, #0]
 800b888:	440a      	add	r2, r1
 800b88a:	4619      	mov	r1, r3
 800b88c:	f7ff fed2 	bl	800b634 <xTimerGenericCommand>
							configASSERT( xResult );
 800b890:	2800      	cmp	r0, #0
 800b892:	d199      	bne.n	800b7c8 <prvTimerTask+0x94>
 800b894:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b898:	f383 8811 	msr	BASEPRI, r3
 800b89c:	f3bf 8f6f 	isb	sy
 800b8a0:	f3bf 8f4f 	dsb	sy
 800b8a4:	e7fe      	b.n	800b8a4 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800b8a6:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800b8aa:	f023 0301 	bic.w	r3, r3, #1
 800b8ae:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 800b8b2:	e789      	b.n	800b7c8 <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800b8b4:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800b8b8:	f043 0301 	orr.w	r3, r3, #1
 800b8bc:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800b8c0:	9905      	ldr	r1, [sp, #20]
 800b8c2:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800b8c4:	b941      	cbnz	r1, 800b8d8 <prvTimerTask+0x1a4>
 800b8c6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b8ca:	f383 8811 	msr	BASEPRI, r3
 800b8ce:	f3bf 8f6f 	isb	sy
 800b8d2:	f3bf 8f4f 	dsb	sy
 800b8d6:	e7fe      	b.n	800b8d6 <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800b8d8:	4603      	mov	r3, r0
 800b8da:	4401      	add	r1, r0
 800b8dc:	4620      	mov	r0, r4
 800b8de:	f7ff fe59 	bl	800b594 <prvInsertTimerInActiveList>
					break;
 800b8e2:	e771      	b.n	800b7c8 <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800b8e4:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800b8e8:	079a      	lsls	r2, r3, #30
 800b8ea:	d4de      	bmi.n	800b8aa <prvTimerTask+0x176>
							vPortFree( pxTimer );
 800b8ec:	4620      	mov	r0, r4
 800b8ee:	f7fe f9a9 	bl	8009c44 <vPortFree>
 800b8f2:	e769      	b.n	800b7c8 <prvTimerTask+0x94>
 800b8f4:	2400df44 	.word	0x2400df44
 800b8f8:	2400e068 	.word	0x2400e068
 800b8fc:	2400df48 	.word	0x2400df48

0800b900 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800b900:	8880      	ldrh	r0, [r0, #4]
 800b902:	4770      	bx	lr

0800b904 <_ZN8touchgfx17AbstractPartition5clearEv>:
 800b904:	2300      	movs	r3, #0
 800b906:	8083      	strh	r3, [r0, #4]
 800b908:	4770      	bx	lr
	...

0800b90c <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800b90c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b90e:	6803      	ldr	r3, [r0, #0]
 800b910:	460e      	mov	r6, r1
 800b912:	2100      	movs	r1, #0
 800b914:	4605      	mov	r5, r0
 800b916:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b918:	4798      	blx	r3
 800b91a:	4604      	mov	r4, r0
 800b91c:	682b      	ldr	r3, [r5, #0]
 800b91e:	4628      	mov	r0, r5
 800b920:	1b34      	subs	r4, r6, r4
 800b922:	6a1b      	ldr	r3, [r3, #32]
 800b924:	b2a4      	uxth	r4, r4
 800b926:	4798      	blx	r3
 800b928:	88ab      	ldrh	r3, [r5, #4]
 800b92a:	fbb4 f4f0 	udiv	r4, r4, r0
 800b92e:	42a3      	cmp	r3, r4
 800b930:	d805      	bhi.n	800b93e <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x32>
 800b932:	4b0e      	ldr	r3, [pc, #56]	; (800b96c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x60>)
 800b934:	211d      	movs	r1, #29
 800b936:	4a0e      	ldr	r2, [pc, #56]	; (800b970 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 800b938:	480e      	ldr	r0, [pc, #56]	; (800b974 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x68>)
 800b93a:	f014 f94d 	bl	801fbd8 <__assert_func>
 800b93e:	682b      	ldr	r3, [r5, #0]
 800b940:	2100      	movs	r1, #0
 800b942:	4628      	mov	r0, r5
 800b944:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b946:	4798      	blx	r3
 800b948:	682b      	ldr	r3, [r5, #0]
 800b94a:	4607      	mov	r7, r0
 800b94c:	4628      	mov	r0, r5
 800b94e:	6a1b      	ldr	r3, [r3, #32]
 800b950:	4798      	blx	r3
 800b952:	1bf3      	subs	r3, r6, r7
 800b954:	b29b      	uxth	r3, r3
 800b956:	fbb3 f2f0 	udiv	r2, r3, r0
 800b95a:	fb02 3010 	mls	r0, r2, r0, r3
 800b95e:	b118      	cbz	r0, 800b968 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x5c>
 800b960:	4b05      	ldr	r3, [pc, #20]	; (800b978 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x6c>)
 800b962:	211e      	movs	r1, #30
 800b964:	4a02      	ldr	r2, [pc, #8]	; (800b970 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 800b966:	e7e7      	b.n	800b938 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x2c>
 800b968:	4620      	mov	r0, r4
 800b96a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b96c:	080225b2 	.word	0x080225b2
 800b970:	0802271e 	.word	0x0802271e
 800b974:	080225c7 	.word	0x080225c7
 800b978:	080225f5 	.word	0x080225f5

0800b97c <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800b97c:	b538      	push	{r3, r4, r5, lr}
 800b97e:	6803      	ldr	r3, [r0, #0]
 800b980:	460d      	mov	r5, r1
 800b982:	4604      	mov	r4, r0
 800b984:	6a1b      	ldr	r3, [r3, #32]
 800b986:	4798      	blx	r3
 800b988:	4285      	cmp	r5, r0
 800b98a:	d905      	bls.n	800b998 <_ZN8touchgfx17AbstractPartition8allocateEt+0x1c>
 800b98c:	4b0c      	ldr	r3, [pc, #48]	; (800b9c0 <_ZN8touchgfx17AbstractPartition8allocateEt+0x44>)
 800b98e:	212f      	movs	r1, #47	; 0x2f
 800b990:	4a0c      	ldr	r2, [pc, #48]	; (800b9c4 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 800b992:	480d      	ldr	r0, [pc, #52]	; (800b9c8 <_ZN8touchgfx17AbstractPartition8allocateEt+0x4c>)
 800b994:	f014 f920 	bl	801fbd8 <__assert_func>
 800b998:	6823      	ldr	r3, [r4, #0]
 800b99a:	4620      	mov	r0, r4
 800b99c:	88a5      	ldrh	r5, [r4, #4]
 800b99e:	69db      	ldr	r3, [r3, #28]
 800b9a0:	4798      	blx	r3
 800b9a2:	4285      	cmp	r5, r0
 800b9a4:	d303      	bcc.n	800b9ae <_ZN8touchgfx17AbstractPartition8allocateEt+0x32>
 800b9a6:	4b09      	ldr	r3, [pc, #36]	; (800b9cc <_ZN8touchgfx17AbstractPartition8allocateEt+0x50>)
 800b9a8:	2130      	movs	r1, #48	; 0x30
 800b9aa:	4a06      	ldr	r2, [pc, #24]	; (800b9c4 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 800b9ac:	e7f1      	b.n	800b992 <_ZN8touchgfx17AbstractPartition8allocateEt+0x16>
 800b9ae:	6823      	ldr	r3, [r4, #0]
 800b9b0:	4620      	mov	r0, r4
 800b9b2:	88a1      	ldrh	r1, [r4, #4]
 800b9b4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b9b6:	4798      	blx	r3
 800b9b8:	88a3      	ldrh	r3, [r4, #4]
 800b9ba:	3301      	adds	r3, #1
 800b9bc:	80a3      	strh	r3, [r4, #4]
 800b9be:	bd38      	pop	{r3, r4, r5, pc}
 800b9c0:	0802266f 	.word	0x0802266f
 800b9c4:	08022761 	.word	0x08022761
 800b9c8:	080225c7 	.word	0x080225c7
 800b9cc:	08022686 	.word	0x08022686

0800b9d0 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800b9d0:	b570      	push	{r4, r5, r6, lr}
 800b9d2:	6803      	ldr	r3, [r0, #0]
 800b9d4:	4616      	mov	r6, r2
 800b9d6:	4604      	mov	r4, r0
 800b9d8:	460d      	mov	r5, r1
 800b9da:	6a1b      	ldr	r3, [r3, #32]
 800b9dc:	4798      	blx	r3
 800b9de:	4286      	cmp	r6, r0
 800b9e0:	d905      	bls.n	800b9ee <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x1e>
 800b9e2:	4b06      	ldr	r3, [pc, #24]	; (800b9fc <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x2c>)
 800b9e4:	2139      	movs	r1, #57	; 0x39
 800b9e6:	4a06      	ldr	r2, [pc, #24]	; (800ba00 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x30>)
 800b9e8:	4806      	ldr	r0, [pc, #24]	; (800ba04 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x34>)
 800b9ea:	f014 f8f5 	bl	801fbd8 <__assert_func>
 800b9ee:	6823      	ldr	r3, [r4, #0]
 800b9f0:	4629      	mov	r1, r5
 800b9f2:	4620      	mov	r0, r4
 800b9f4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b9f6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b9fa:	4718      	bx	r3
 800b9fc:	0802266f 	.word	0x0802266f
 800ba00:	080226d4 	.word	0x080226d4
 800ba04:	080225c7 	.word	0x080225c7

0800ba08 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800ba08:	4770      	bx	lr
	...

0800ba0c <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800ba0c:	4a02      	ldr	r2, [pc, #8]	; (800ba18 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800ba0e:	6002      	str	r2, [r0, #0]
 800ba10:	2200      	movs	r2, #0
 800ba12:	8082      	strh	r2, [r0, #4]
 800ba14:	4770      	bx	lr
 800ba16:	bf00      	nop
 800ba18:	080226a8 	.word	0x080226a8

0800ba1c <_ZN8touchgfx9Container13getFirstChildEv>:
 800ba1c:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800ba1e:	4770      	bx	lr

0800ba20 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 800ba20:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 800ba24:	4770      	bx	lr

0800ba26 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 800ba26:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 800ba2a:	4770      	bx	lr

0800ba2c <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 800ba2c:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 800ba30:	4770      	bx	lr

0800ba32 <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 800ba32:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 800ba36:	4770      	bx	lr

0800ba38 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 800ba38:	b510      	push	{r4, lr}
 800ba3a:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800ba3e:	600c      	str	r4, [r1, #0]
 800ba40:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800ba44:	6011      	str	r1, [r2, #0]
 800ba46:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800ba4a:	801a      	strh	r2, [r3, #0]
 800ba4c:	9b02      	ldr	r3, [sp, #8]
 800ba4e:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 800ba52:	801a      	strh	r2, [r3, #0]
 800ba54:	bd10      	pop	{r4, pc}

0800ba56 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 800ba56:	b510      	push	{r4, lr}
 800ba58:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800ba5c:	600c      	str	r4, [r1, #0]
 800ba5e:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800ba62:	6011      	str	r1, [r2, #0]
 800ba64:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800ba68:	801a      	strh	r2, [r3, #0]
 800ba6a:	bd10      	pop	{r4, pc}

0800ba6c <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 800ba6c:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800ba70:	600b      	str	r3, [r1, #0]
 800ba72:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800ba76:	6013      	str	r3, [r2, #0]
 800ba78:	4770      	bx	lr

0800ba7a <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 800ba7a:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 800ba7e:	4770      	bx	lr

0800ba80 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 800ba80:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 800ba84:	4770      	bx	lr

0800ba86 <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 800ba86:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 800ba8a:	4770      	bx	lr

0800ba8c <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 800ba8c:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 800ba90:	4770      	bx	lr

0800ba92 <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 800ba92:	4770      	bx	lr

0800ba94 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 800ba94:	b510      	push	{r4, lr}
 800ba96:	6803      	ldr	r3, [r0, #0]
 800ba98:	4604      	mov	r4, r0
 800ba9a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800ba9e:	4798      	blx	r3
 800baa0:	b120      	cbz	r0, 800baac <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x18>
 800baa2:	4620      	mov	r0, r4
 800baa4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800baa8:	f000 bc36 	b.w	800c318 <_ZNK8touchgfx9Container17invalidateContentEv>
 800baac:	bd10      	pop	{r4, pc}

0800baae <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 800baae:	b510      	push	{r4, lr}
 800bab0:	4604      	mov	r4, r0
 800bab2:	21b4      	movs	r1, #180	; 0xb4
 800bab4:	f013 feb3 	bl	801f81e <_ZdlPvj>
 800bab8:	4620      	mov	r0, r4
 800baba:	bd10      	pop	{r4, pc}

0800babc <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 800babc:	b570      	push	{r4, r5, r6, lr}
 800babe:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 800bac2:	4604      	mov	r4, r0
 800bac4:	4616      	mov	r6, r2
 800bac6:	428d      	cmp	r5, r1
 800bac8:	bfb8      	it	lt
 800baca:	460d      	movlt	r5, r1
 800bacc:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800bad0:	428d      	cmp	r5, r1
 800bad2:	bfa8      	it	ge
 800bad4:	460d      	movge	r5, r1
 800bad6:	b99a      	cbnz	r2, 800bb00 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 800bad8:	6803      	ldr	r3, [r0, #0]
 800bada:	4629      	mov	r1, r5
 800badc:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800bae0:	4798      	blx	r3
 800bae2:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800bae6:	b358      	cbz	r0, 800bb40 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x84>
 800bae8:	6803      	ldr	r3, [r0, #0]
 800baea:	68db      	ldr	r3, [r3, #12]
 800baec:	4798      	blx	r3
 800baee:	b338      	cbz	r0, 800bb40 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x84>
 800baf0:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800baf4:	4621      	mov	r1, r4
 800baf6:	6803      	ldr	r3, [r0, #0]
 800baf8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bafc:	689b      	ldr	r3, [r3, #8]
 800bafe:	4718      	bx	r3
 800bb00:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800bb04:	2b00      	cmp	r3, #0
 800bb06:	dd07      	ble.n	800bb18 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5c>
 800bb08:	f005 fdb0 	bl	801166c <_ZN8touchgfx11Application11getInstanceEv>
 800bb0c:	4621      	mov	r1, r4
 800bb0e:	f005 fde5 	bl	80116dc <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>
 800bb12:	2300      	movs	r3, #0
 800bb14:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800bb18:	6823      	ldr	r3, [r4, #0]
 800bb1a:	4620      	mov	r0, r4
 800bb1c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800bb20:	4798      	blx	r3
 800bb22:	2300      	movs	r3, #0
 800bb24:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 800bb28:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 800bb2c:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 800bb30:	f005 fd9c 	bl	801166c <_ZN8touchgfx11Application11getInstanceEv>
 800bb34:	4621      	mov	r1, r4
 800bb36:	f005 fd9f 	bl	8011678 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>
 800bb3a:	2301      	movs	r3, #1
 800bb3c:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800bb40:	bd70      	pop	{r4, r5, r6, pc}

0800bb42 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 800bb42:	b510      	push	{r4, lr}
 800bb44:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800bb48:	4604      	mov	r4, r0
 800bb4a:	4299      	cmp	r1, r3
 800bb4c:	bfb8      	it	lt
 800bb4e:	4619      	movlt	r1, r3
 800bb50:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800bb54:	4299      	cmp	r1, r3
 800bb56:	bfa8      	it	ge
 800bb58:	4619      	movge	r1, r3
 800bb5a:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 800bb5e:	428b      	cmp	r3, r1
 800bb60:	d010      	beq.n	800bb84 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800bb62:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 800bb66:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 800bb6a:	b158      	cbz	r0, 800bb84 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800bb6c:	6803      	ldr	r3, [r0, #0]
 800bb6e:	68db      	ldr	r3, [r3, #12]
 800bb70:	4798      	blx	r3
 800bb72:	b138      	cbz	r0, 800bb84 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800bb74:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 800bb78:	4621      	mov	r1, r4
 800bb7a:	6803      	ldr	r3, [r0, #0]
 800bb7c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bb80:	689b      	ldr	r3, [r3, #8]
 800bb82:	4718      	bx	r3
 800bb84:	bd10      	pop	{r4, pc}
	...

0800bb88 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 800bb88:	4291      	cmp	r1, r2
 800bb8a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bb8e:	4604      	mov	r4, r0
 800bb90:	460e      	mov	r6, r1
 800bb92:	4615      	mov	r5, r2
 800bb94:	4698      	mov	r8, r3
 800bb96:	f8bd 7018 	ldrh.w	r7, [sp, #24]
 800bb9a:	db05      	blt.n	800bba8 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x20>
 800bb9c:	4b11      	ldr	r3, [pc, #68]	; (800bbe4 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x5c>)
 800bb9e:	2148      	movs	r1, #72	; 0x48
 800bba0:	4a11      	ldr	r2, [pc, #68]	; (800bbe8 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x60>)
 800bba2:	4812      	ldr	r0, [pc, #72]	; (800bbec <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x64>)
 800bba4:	f014 f818 	bl	801fbd8 <__assert_func>
 800bba8:	6803      	ldr	r3, [r0, #0]
 800bbaa:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 800bbae:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 800bbb2:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800bbb6:	4798      	blx	r3
 800bbb8:	f1b8 0f00 	cmp.w	r8, #0
 800bbbc:	d10c      	bne.n	800bbd8 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x50>
 800bbbe:	1bad      	subs	r5, r5, r6
 800bbc0:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 800bbc4:	f8b4 3090 	ldrh.w	r3, [r4, #144]	; 0x90
 800bbc8:	f8a4 7092 	strh.w	r7, [r4, #146]	; 0x92
 800bbcc:	42bb      	cmp	r3, r7
 800bbce:	d806      	bhi.n	800bbde <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x56>
 800bbd0:	4b07      	ldr	r3, [pc, #28]	; (800bbf0 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x68>)
 800bbd2:	2155      	movs	r1, #85	; 0x55
 800bbd4:	4a04      	ldr	r2, [pc, #16]	; (800bbe8 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x60>)
 800bbd6:	e7e4      	b.n	800bba2 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x1a>
 800bbd8:	f8a4 8090 	strh.w	r8, [r4, #144]	; 0x90
 800bbdc:	e7f2      	b.n	800bbc4 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x3c>
 800bbde:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bbe2:	bf00      	nop
 800bbe4:	0802279f 	.word	0x0802279f
 800bbe8:	080228f0 	.word	0x080228f0
 800bbec:	080227a9 	.word	0x080227a9
 800bbf0:	08022800 	.word	0x08022800

0800bbf4 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 800bbf4:	b570      	push	{r4, r5, r6, lr}
 800bbf6:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 800bbfa:	4604      	mov	r4, r0
 800bbfc:	b3a3      	cbz	r3, 800bc68 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x74>
 800bbfe:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 800bc02:	2100      	movs	r1, #0
 800bc04:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 800bc08:	3001      	adds	r0, #1
 800bc0a:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 800bc0e:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 800bc12:	b280      	uxth	r0, r0
 800bc14:	1ad2      	subs	r2, r2, r3
 800bc16:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 800bc1a:	b212      	sxth	r2, r2
 800bc1c:	47a8      	blx	r5
 800bc1e:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 800bc22:	6823      	ldr	r3, [r4, #0]
 800bc24:	4401      	add	r1, r0
 800bc26:	4620      	mov	r0, r4
 800bc28:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800bc2c:	4798      	blx	r3
 800bc2e:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 800bc32:	429a      	cmp	r2, r3
 800bc34:	db18      	blt.n	800bc68 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x74>
 800bc36:	2500      	movs	r5, #0
 800bc38:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800bc3c:	f005 fd16 	bl	801166c <_ZN8touchgfx11Application11getInstanceEv>
 800bc40:	4621      	mov	r1, r4
 800bc42:	f005 fd4b 	bl	80116dc <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>
 800bc46:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800bc4a:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800bc4e:	b158      	cbz	r0, 800bc68 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x74>
 800bc50:	6803      	ldr	r3, [r0, #0]
 800bc52:	68db      	ldr	r3, [r3, #12]
 800bc54:	4798      	blx	r3
 800bc56:	b138      	cbz	r0, 800bc68 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x74>
 800bc58:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800bc5c:	4621      	mov	r1, r4
 800bc5e:	6803      	ldr	r3, [r0, #0]
 800bc60:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bc64:	689b      	ldr	r3, [r3, #8]
 800bc66:	4718      	bx	r3
 800bc68:	bd70      	pop	{r4, r5, r6, pc}

0800bc6a <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 800bc6a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800bc6c:	4604      	mov	r4, r0
 800bc6e:	460d      	mov	r5, r1
 800bc70:	b1a9      	cbz	r1, 800bc9e <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 800bc72:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 800bc76:	ab01      	add	r3, sp, #4
 800bc78:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 800bc7c:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 800bc80:	1b89      	subs	r1, r1, r6
 800bc82:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 800bc86:	1a12      	subs	r2, r2, r0
 800bc88:	1a38      	subs	r0, r7, r0
 800bc8a:	f006 febb 	bl	8012a04 <_ZN8touchgfx6muldivElllRl>
 800bc8e:	4629      	mov	r1, r5
 800bc90:	ab01      	add	r3, sp, #4
 800bc92:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 800bc96:	4430      	add	r0, r6
 800bc98:	f006 feb4 	bl	8012a04 <_ZN8touchgfx6muldivElllRl>
 800bc9c:	b285      	uxth	r5, r0
 800bc9e:	4628      	mov	r0, r5
 800bca0:	b003      	add	sp, #12
 800bca2:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800bca4 <_ZN8touchgfx8DrawableC1Ev>:
 800bca4:	4a0a      	ldr	r2, [pc, #40]	; (800bcd0 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 800bca6:	6002      	str	r2, [r0, #0]
 800bca8:	2200      	movs	r2, #0
 800bcaa:	8082      	strh	r2, [r0, #4]
 800bcac:	80c2      	strh	r2, [r0, #6]
 800bcae:	8102      	strh	r2, [r0, #8]
 800bcb0:	8142      	strh	r2, [r0, #10]
 800bcb2:	8182      	strh	r2, [r0, #12]
 800bcb4:	81c2      	strh	r2, [r0, #14]
 800bcb6:	8202      	strh	r2, [r0, #16]
 800bcb8:	8242      	strh	r2, [r0, #18]
 800bcba:	61c2      	str	r2, [r0, #28]
 800bcbc:	8402      	strh	r2, [r0, #32]
 800bcbe:	8442      	strh	r2, [r0, #34]	; 0x22
 800bcc0:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800bcc4:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800bcc8:	2201      	movs	r2, #1
 800bcca:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 800bcce:	4770      	bx	lr
 800bcd0:	080241c0 	.word	0x080241c0

0800bcd4 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800bcd4:	b570      	push	{r4, r5, r6, lr}
 800bcd6:	6803      	ldr	r3, [r0, #0]
 800bcd8:	4604      	mov	r4, r0
 800bcda:	4615      	mov	r5, r2
 800bcdc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800bcde:	4798      	blx	r3
 800bce0:	6823      	ldr	r3, [r4, #0]
 800bce2:	4629      	mov	r1, r5
 800bce4:	4620      	mov	r0, r4
 800bce6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800bce8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bcec:	4718      	bx	r3

0800bcee <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 800bcee:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bcf2:	4604      	mov	r4, r0
 800bcf4:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 800bcf8:	4698      	mov	r8, r3
 800bcfa:	460e      	mov	r6, r1
 800bcfc:	4615      	mov	r5, r2
 800bcfe:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 800bd02:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 800bd06:	4619      	mov	r1, r3
 800bd08:	463a      	mov	r2, r7
 800bd0a:	3058      	adds	r0, #88	; 0x58
 800bd0c:	f7ff ffe2 	bl	800bcd4 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800bd10:	4446      	add	r6, r8
 800bd12:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800bd16:	443d      	add	r5, r7
 800bd18:	42b3      	cmp	r3, r6
 800bd1a:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800bd1e:	bfb8      	it	lt
 800bd20:	8126      	strhlt	r6, [r4, #8]
 800bd22:	42ab      	cmp	r3, r5
 800bd24:	bfb8      	it	lt
 800bd26:	8165      	strhlt	r5, [r4, #10]
 800bd28:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800bd2c <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 800bd2c:	b510      	push	{r4, lr}
 800bd2e:	4604      	mov	r4, r0
 800bd30:	302c      	adds	r0, #44	; 0x2c
 800bd32:	f003 fe78 	bl	800fa26 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800bd36:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 800bd3a:	4620      	mov	r0, r4
 800bd3c:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 800bd40:	f7ff ffc8 	bl	800bcd4 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800bd44:	bd10      	pop	{r4, pc}
	...

0800bd48 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 800bd48:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800bd4a:	4604      	mov	r4, r0
 800bd4c:	2500      	movs	r5, #0
 800bd4e:	f7ff ffa9 	bl	800bca4 <_ZN8touchgfx8DrawableC1Ev>
 800bd52:	4b24      	ldr	r3, [pc, #144]	; (800bde4 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 800bd54:	4626      	mov	r6, r4
 800bd56:	f64f 77ff 	movw	r7, #65535	; 0xffff
 800bd5a:	2226      	movs	r2, #38	; 0x26
 800bd5c:	4629      	mov	r1, r5
 800bd5e:	62a5      	str	r5, [r4, #40]	; 0x28
 800bd60:	f846 3b2c 	str.w	r3, [r6], #44
 800bd64:	4630      	mov	r0, r6
 800bd66:	f8ad 7004 	strh.w	r7, [sp, #4]
 800bd6a:	f013 ffc1 	bl	801fcf0 <memset>
 800bd6e:	4630      	mov	r0, r6
 800bd70:	f7ff ff98 	bl	800bca4 <_ZN8touchgfx8DrawableC1Ev>
 800bd74:	a902      	add	r1, sp, #8
 800bd76:	4b1c      	ldr	r3, [pc, #112]	; (800bde8 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 800bd78:	4630      	mov	r0, r6
 800bd7a:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 800bd7e:	f104 0758 	add.w	r7, r4, #88	; 0x58
 800bd82:	62e3      	str	r3, [r4, #44]	; 0x2c
 800bd84:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 800bd88:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800bd8c:	f003 fe4b 	bl	800fa26 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800bd90:	4638      	mov	r0, r7
 800bd92:	f7ff ff87 	bl	800bca4 <_ZN8touchgfx8DrawableC1Ev>
 800bd96:	4b15      	ldr	r3, [pc, #84]	; (800bdec <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 800bd98:	4629      	mov	r1, r5
 800bd9a:	4630      	mov	r0, r6
 800bd9c:	65a3      	str	r3, [r4, #88]	; 0x58
 800bd9e:	2364      	movs	r3, #100	; 0x64
 800bda0:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800bda4:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 800bda8:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 800bdac:	4b10      	ldr	r3, [pc, #64]	; (800bdf0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 800bdae:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 800bdb2:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 800bdb6:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 800bdba:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800bdbe:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 800bdc2:	f7f6 fb4b 	bl	800245c <_ZN8touchgfx8Drawable4setXEs>
 800bdc6:	4629      	mov	r1, r5
 800bdc8:	4630      	mov	r0, r6
 800bdca:	f7f6 fb49 	bl	8002460 <_ZN8touchgfx8Drawable4setYEs>
 800bdce:	4631      	mov	r1, r6
 800bdd0:	4620      	mov	r0, r4
 800bdd2:	f000 fae5 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800bdd6:	4620      	mov	r0, r4
 800bdd8:	4639      	mov	r1, r7
 800bdda:	f000 fae1 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800bdde:	4620      	mov	r0, r4
 800bde0:	b003      	add	sp, #12
 800bde2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bde4:	08022824 	.word	0x08022824
 800bde8:	08023d14 	.word	0x08023d14
 800bdec:	08022d38 	.word	0x08022d38
 800bdf0:	080130df 	.word	0x080130df

0800bdf4 <_ZN8touchgfx8TextArea8setWidthEs>:
 800bdf4:	b530      	push	{r4, r5, lr}
 800bdf6:	b085      	sub	sp, #20
 800bdf8:	6803      	ldr	r3, [r0, #0]
 800bdfa:	4604      	mov	r4, r0
 800bdfc:	8101      	strh	r1, [r0, #8]
 800bdfe:	466d      	mov	r5, sp
 800be00:	4601      	mov	r1, r0
 800be02:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800be06:	343c      	adds	r4, #60	; 0x3c
 800be08:	4628      	mov	r0, r5
 800be0a:	4798      	blx	r3
 800be0c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800be10:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800be14:	b005      	add	sp, #20
 800be16:	bd30      	pop	{r4, r5, pc}

0800be18 <_ZN8touchgfx8TextArea9setHeightEs>:
 800be18:	b530      	push	{r4, r5, lr}
 800be1a:	b085      	sub	sp, #20
 800be1c:	6803      	ldr	r3, [r0, #0]
 800be1e:	4604      	mov	r4, r0
 800be20:	8141      	strh	r1, [r0, #10]
 800be22:	466d      	mov	r5, sp
 800be24:	4601      	mov	r1, r0
 800be26:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800be2a:	343c      	adds	r4, #60	; 0x3c
 800be2c:	4628      	mov	r0, r5
 800be2e:	4798      	blx	r3
 800be30:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800be34:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800be38:	b005      	add	sp, #20
 800be3a:	bd30      	pop	{r4, r5, pc}

0800be3c <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 800be3c:	2200      	movs	r2, #0
 800be3e:	8002      	strh	r2, [r0, #0]
 800be40:	8042      	strh	r2, [r0, #2]
 800be42:	8082      	strh	r2, [r0, #4]
 800be44:	80c2      	strh	r2, [r0, #6]
 800be46:	4770      	bx	lr

0800be48 <_ZN8touchgfx8TextArea8setAlphaEh>:
 800be48:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
 800be4c:	4770      	bx	lr

0800be4e <_ZN8touchgfx8TextArea13setXBaselineYEss>:
 800be4e:	b570      	push	{r4, r5, r6, lr}
 800be50:	6803      	ldr	r3, [r0, #0]
 800be52:	4604      	mov	r4, r0
 800be54:	4615      	mov	r5, r2
 800be56:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800be58:	4798      	blx	r3
 800be5a:	6823      	ldr	r3, [r4, #0]
 800be5c:	4629      	mov	r1, r5
 800be5e:	4620      	mov	r0, r4
 800be60:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800be62:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800be66:	4718      	bx	r3

0800be68 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
 800be68:	2000      	movs	r0, #0
 800be6a:	4770      	bx	lr

0800be6c <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
 800be6c:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800be6e:	4770      	bx	lr

0800be70 <_ZN8touchgfx12DigitalClock14setDisplayModeENS0_11DisplayModeE>:
 800be70:	f880 102f 	strb.w	r1, [r0, #47]	; 0x2f
 800be74:	4770      	bx	lr

0800be76 <_ZNK8touchgfx12DigitalClock14getDisplayModeEv>:
 800be76:	f890 002f 	ldrb.w	r0, [r0, #47]	; 0x2f
 800be7a:	4770      	bx	lr

0800be7c <_ZN8touchgfx12DigitalClock8setWidthEs>:
 800be7c:	b508      	push	{r3, lr}
 800be7e:	3034      	adds	r0, #52	; 0x34
 800be80:	f820 1c2c 	strh.w	r1, [r0, #-44]
 800be84:	f7ff ffb6 	bl	800bdf4 <_ZN8touchgfx8TextArea8setWidthEs>
 800be88:	bd08      	pop	{r3, pc}

0800be8a <_ZN8touchgfx12DigitalClock9setHeightEs>:
 800be8a:	b508      	push	{r3, lr}
 800be8c:	3034      	adds	r0, #52	; 0x34
 800be8e:	f820 1c2a 	strh.w	r1, [r0, #-42]
 800be92:	f7ff ffc1 	bl	800be18 <_ZN8touchgfx8TextArea9setHeightEs>
 800be96:	bd08      	pop	{r3, pc}

0800be98 <_ZN8touchgfx12DigitalClock8setAlphaEh>:
 800be98:	f880 106a 	strb.w	r1, [r0, #106]	; 0x6a
 800be9c:	4770      	bx	lr

0800be9e <_ZNK8touchgfx12DigitalClock8getAlphaEv>:
 800be9e:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 800bea2:	4770      	bx	lr

0800bea4 <_ZNK8touchgfx12DigitalClock8getColorEv>:
 800bea4:	6e40      	ldr	r0, [r0, #100]	; 0x64
 800bea6:	4770      	bx	lr

0800bea8 <_ZN8touchgfx12DigitalClockD1Ev>:
 800bea8:	4770      	bx	lr

0800beaa <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
 800beaa:	4770      	bx	lr

0800beac <_ZN8touchgfx12DigitalClock8setColorENS_9colortypeE>:
 800beac:	6641      	str	r1, [r0, #100]	; 0x64
 800beae:	3034      	adds	r0, #52	; 0x34
 800beb0:	f003 bd3c 	b.w	800f92c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>

0800beb4 <_ZNK8touchgfx12DigitalClock12getTextWidthEv>:
 800beb4:	3034      	adds	r0, #52	; 0x34
 800beb6:	f002 bdcd 	b.w	800ea54 <_ZNK8touchgfx8TextArea12getTextWidthEv>

0800beba <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 800beba:	b510      	push	{r4, lr}
 800bebc:	4604      	mov	r4, r0
 800bebe:	214c      	movs	r1, #76	; 0x4c
 800bec0:	f013 fcad 	bl	801f81e <_ZdlPvj>
 800bec4:	4620      	mov	r0, r4
 800bec6:	bd10      	pop	{r4, pc}

0800bec8 <_ZN8touchgfx12DigitalClockD0Ev>:
 800bec8:	b510      	push	{r4, lr}
 800beca:	4604      	mov	r4, r0
 800becc:	2198      	movs	r1, #152	; 0x98
 800bece:	f013 fca6 	bl	801f81e <_ZdlPvj>
 800bed2:	4620      	mov	r0, r4
 800bed4:	bd10      	pop	{r4, pc}
	...

0800bed8 <_ZN8touchgfx8TextArea12setBaselineYEs>:
 800bed8:	b570      	push	{r4, r5, r6, lr}
 800beda:	6803      	ldr	r3, [r0, #0]
 800bedc:	4604      	mov	r4, r0
 800bede:	b28d      	uxth	r5, r1
 800bee0:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800bee2:	6b5e      	ldr	r6, [r3, #52]	; 0x34
 800bee4:	4b10      	ldr	r3, [pc, #64]	; (800bf28 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 800bee6:	681b      	ldr	r3, [r3, #0]
 800bee8:	b92b      	cbnz	r3, 800bef6 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1e>
 800beea:	4b10      	ldr	r3, [pc, #64]	; (800bf2c <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 800beec:	21ae      	movs	r1, #174	; 0xae
 800beee:	4a10      	ldr	r2, [pc, #64]	; (800bf30 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800bef0:	4810      	ldr	r0, [pc, #64]	; (800bf34 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 800bef2:	f013 fe71 	bl	801fbd8 <__assert_func>
 800bef6:	4910      	ldr	r1, [pc, #64]	; (800bf38 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 800bef8:	8809      	ldrh	r1, [r1, #0]
 800befa:	4291      	cmp	r1, r2
 800befc:	d803      	bhi.n	800bf06 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 800befe:	4b0f      	ldr	r3, [pc, #60]	; (800bf3c <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 800bf00:	21af      	movs	r1, #175	; 0xaf
 800bf02:	4a0b      	ldr	r2, [pc, #44]	; (800bf30 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800bf04:	e7f4      	b.n	800bef0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x18>
 800bf06:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800bf0a:	4b0d      	ldr	r3, [pc, #52]	; (800bf40 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 800bf0c:	681b      	ldr	r3, [r3, #0]
 800bf0e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800bf12:	6803      	ldr	r3, [r0, #0]
 800bf14:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bf16:	4798      	blx	r3
 800bf18:	1a29      	subs	r1, r5, r0
 800bf1a:	4633      	mov	r3, r6
 800bf1c:	4620      	mov	r0, r4
 800bf1e:	b209      	sxth	r1, r1
 800bf20:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bf24:	4718      	bx	r3
 800bf26:	bf00      	nop
 800bf28:	2400e0ec 	.word	0x2400e0ec
 800bf2c:	08022a30 	.word	0x08022a30
 800bf30:	08022b9c 	.word	0x08022b9c
 800bf34:	08022a72 	.word	0x08022a72
 800bf38:	2400e0f0 	.word	0x2400e0f0
 800bf3c:	08022a9b 	.word	0x08022a9b
 800bf40:	2400e0f4 	.word	0x2400e0f4

0800bf44 <_ZN8touchgfx12DigitalClock12setTypedTextENS_9TypedTextE>:
 800bf44:	b538      	push	{r3, r4, r5, lr}
 800bf46:	f100 0434 	add.w	r4, r0, #52	; 0x34
 800bf4a:	460d      	mov	r5, r1
 800bf4c:	4620      	mov	r0, r4
 800bf4e:	f003 fced 	bl	800f92c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>
 800bf52:	4620      	mov	r0, r4
 800bf54:	4629      	mov	r1, r5
 800bf56:	f003 f989 	bl	800f26c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800bf5a:	4620      	mov	r0, r4
 800bf5c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800bf60:	f003 bce4 	b.w	800f92c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>

0800bf64 <_ZN8touchgfx12DigitalClock11updateClockEv>:
 800bf64:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800bf68:	f100 0634 	add.w	r6, r0, #52	; 0x34
 800bf6c:	4604      	mov	r4, r0
 800bf6e:	4630      	mov	r0, r6
 800bf70:	f003 fcdc 	bl	800f92c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>
 800bf74:	f894 302f 	ldrb.w	r3, [r4, #47]	; 0x2f
 800bf78:	bb0b      	cbnz	r3, 800bfbe <_ZN8touchgfx12DigitalClock11updateClockEv+0x5a>
 800bf7a:	f894 3030 	ldrb.w	r3, [r4, #48]	; 0x30
 800bf7e:	4620      	mov	r0, r4
 800bf80:	4a40      	ldr	r2, [pc, #256]	; (800c084 <_ZN8touchgfx12DigitalClock11updateClockEv+0x120>)
 800bf82:	f104 0780 	add.w	r7, r4, #128	; 0x80
 800bf86:	4d40      	ldr	r5, [pc, #256]	; (800c088 <_ZN8touchgfx12DigitalClock11updateClockEv+0x124>)
 800bf88:	2b00      	cmp	r3, #0
 800bf8a:	bf08      	it	eq
 800bf8c:	4615      	moveq	r5, r2
 800bf8e:	f000 f974 	bl	800c27a <_ZNK8touchgfx13AbstractClock16getCurrentHour12Ev>
 800bf92:	4680      	mov	r8, r0
 800bf94:	4620      	mov	r0, r4
 800bf96:	f000 f983 	bl	800c2a0 <_ZNK8touchgfx13AbstractClock16getCurrentMinuteEv>
 800bf9a:	4681      	mov	r9, r0
 800bf9c:	4620      	mov	r0, r4
 800bf9e:	f000 f978 	bl	800c292 <_ZNK8touchgfx13AbstractClock12getCurrentAMEv>
 800bfa2:	2800      	cmp	r0, #0
 800bfa4:	462a      	mov	r2, r5
 800bfa6:	f04f 010c 	mov.w	r1, #12
 800bfaa:	bf14      	ite	ne
 800bfac:	2341      	movne	r3, #65	; 0x41
 800bfae:	2350      	moveq	r3, #80	; 0x50
 800bfb0:	4638      	mov	r0, r7
 800bfb2:	e9cd 9300 	strd	r9, r3, [sp]
 800bfb6:	4643      	mov	r3, r8
 800bfb8:	f008 fc1c 	bl	80147f4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800bfbc:	e017      	b.n	800bfee <_ZN8touchgfx12DigitalClock11updateClockEv+0x8a>
 800bfbe:	2b01      	cmp	r3, #1
 800bfc0:	d11b      	bne.n	800bffa <_ZN8touchgfx12DigitalClock11updateClockEv+0x96>
 800bfc2:	f894 3030 	ldrb.w	r3, [r4, #48]	; 0x30
 800bfc6:	4620      	mov	r0, r4
 800bfc8:	4a30      	ldr	r2, [pc, #192]	; (800c08c <_ZN8touchgfx12DigitalClock11updateClockEv+0x128>)
 800bfca:	4d31      	ldr	r5, [pc, #196]	; (800c090 <_ZN8touchgfx12DigitalClock11updateClockEv+0x12c>)
 800bfcc:	2b00      	cmp	r3, #0
 800bfce:	bf08      	it	eq
 800bfd0:	4615      	moveq	r5, r2
 800bfd2:	f000 f94f 	bl	800c274 <_ZNK8touchgfx13AbstractClock16getCurrentHour24Ev>
 800bfd6:	4607      	mov	r7, r0
 800bfd8:	4620      	mov	r0, r4
 800bfda:	f000 f961 	bl	800c2a0 <_ZNK8touchgfx13AbstractClock16getCurrentMinuteEv>
 800bfde:	462a      	mov	r2, r5
 800bfe0:	9000      	str	r0, [sp, #0]
 800bfe2:	463b      	mov	r3, r7
 800bfe4:	210c      	movs	r1, #12
 800bfe6:	f104 0080 	add.w	r0, r4, #128	; 0x80
 800bfea:	f008 fc03 	bl	80147f4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800bfee:	4630      	mov	r0, r6
 800bff0:	b004      	add	sp, #16
 800bff2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800bff6:	f003 bc99 	b.w	800f92c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>
 800bffa:	2b02      	cmp	r3, #2
 800bffc:	d126      	bne.n	800c04c <_ZN8touchgfx12DigitalClock11updateClockEv+0xe8>
 800bffe:	f894 3030 	ldrb.w	r3, [r4, #48]	; 0x30
 800c002:	4620      	mov	r0, r4
 800c004:	4a23      	ldr	r2, [pc, #140]	; (800c094 <_ZN8touchgfx12DigitalClock11updateClockEv+0x130>)
 800c006:	f104 0780 	add.w	r7, r4, #128	; 0x80
 800c00a:	4d23      	ldr	r5, [pc, #140]	; (800c098 <_ZN8touchgfx12DigitalClock11updateClockEv+0x134>)
 800c00c:	2b00      	cmp	r3, #0
 800c00e:	bf08      	it	eq
 800c010:	4615      	moveq	r5, r2
 800c012:	f000 f932 	bl	800c27a <_ZNK8touchgfx13AbstractClock16getCurrentHour12Ev>
 800c016:	4680      	mov	r8, r0
 800c018:	4620      	mov	r0, r4
 800c01a:	f000 f941 	bl	800c2a0 <_ZNK8touchgfx13AbstractClock16getCurrentMinuteEv>
 800c01e:	4681      	mov	r9, r0
 800c020:	4620      	mov	r0, r4
 800c022:	f000 f940 	bl	800c2a6 <_ZNK8touchgfx13AbstractClock16getCurrentSecondEv>
 800c026:	4682      	mov	sl, r0
 800c028:	4620      	mov	r0, r4
 800c02a:	f000 f932 	bl	800c292 <_ZNK8touchgfx13AbstractClock12getCurrentAMEv>
 800c02e:	2800      	cmp	r0, #0
 800c030:	f8cd 9000 	str.w	r9, [sp]
 800c034:	462a      	mov	r2, r5
 800c036:	bf14      	ite	ne
 800c038:	2341      	movne	r3, #65	; 0x41
 800c03a:	2350      	moveq	r3, #80	; 0x50
 800c03c:	210c      	movs	r1, #12
 800c03e:	4638      	mov	r0, r7
 800c040:	e9cd a301 	strd	sl, r3, [sp, #4]
 800c044:	4643      	mov	r3, r8
 800c046:	f008 fbd5 	bl	80147f4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800c04a:	e7d0      	b.n	800bfee <_ZN8touchgfx12DigitalClock11updateClockEv+0x8a>
 800c04c:	2b03      	cmp	r3, #3
 800c04e:	d1ce      	bne.n	800bfee <_ZN8touchgfx12DigitalClock11updateClockEv+0x8a>
 800c050:	f894 3030 	ldrb.w	r3, [r4, #48]	; 0x30
 800c054:	4620      	mov	r0, r4
 800c056:	4a11      	ldr	r2, [pc, #68]	; (800c09c <_ZN8touchgfx12DigitalClock11updateClockEv+0x138>)
 800c058:	4d11      	ldr	r5, [pc, #68]	; (800c0a0 <_ZN8touchgfx12DigitalClock11updateClockEv+0x13c>)
 800c05a:	2b00      	cmp	r3, #0
 800c05c:	bf08      	it	eq
 800c05e:	4615      	moveq	r5, r2
 800c060:	f000 f908 	bl	800c274 <_ZNK8touchgfx13AbstractClock16getCurrentHour24Ev>
 800c064:	4607      	mov	r7, r0
 800c066:	4620      	mov	r0, r4
 800c068:	f000 f91a 	bl	800c2a0 <_ZNK8touchgfx13AbstractClock16getCurrentMinuteEv>
 800c06c:	4680      	mov	r8, r0
 800c06e:	4620      	mov	r0, r4
 800c070:	f000 f919 	bl	800c2a6 <_ZNK8touchgfx13AbstractClock16getCurrentSecondEv>
 800c074:	463b      	mov	r3, r7
 800c076:	462a      	mov	r2, r5
 800c078:	210c      	movs	r1, #12
 800c07a:	e9cd 8000 	strd	r8, r0, [sp]
 800c07e:	f104 0080 	add.w	r0, r4, #128	; 0x80
 800c082:	e799      	b.n	800bfb8 <_ZN8touchgfx12DigitalClock11updateClockEv+0x54>
 800c084:	080229dc 	.word	0x080229dc
 800c088:	08022a06 	.word	0x08022a06
 800c08c:	080229e8 	.word	0x080229e8
 800c090:	08022a26 	.word	0x08022a26
 800c094:	08022a03 	.word	0x08022a03
 800c098:	080229f0 	.word	0x080229f0
 800c09c:	08022a23 	.word	0x08022a23
 800c0a0:	08022a14 	.word	0x08022a14

0800c0a4 <_ZNK8touchgfx12DigitalClock17invalidateContentEv>:
 800c0a4:	b510      	push	{r4, lr}
 800c0a6:	6803      	ldr	r3, [r0, #0]
 800c0a8:	4604      	mov	r4, r0
 800c0aa:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800c0ae:	4798      	blx	r3
 800c0b0:	b120      	cbz	r0, 800c0bc <_ZNK8touchgfx12DigitalClock17invalidateContentEv+0x18>
 800c0b2:	4620      	mov	r0, r4
 800c0b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c0b8:	f000 b92e 	b.w	800c318 <_ZNK8touchgfx9Container17invalidateContentEv>
 800c0bc:	bd10      	pop	{r4, pc}
	...

0800c0c0 <_ZN8touchgfx12DigitalClock12setBaselineYEs>:
 800c0c0:	4b14      	ldr	r3, [pc, #80]	; (800c114 <_ZN8touchgfx12DigitalClock12setBaselineYEs+0x54>)
 800c0c2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c0c6:	f8b0 6060 	ldrh.w	r6, [r0, #96]	; 0x60
 800c0ca:	4605      	mov	r5, r0
 800c0cc:	881b      	ldrh	r3, [r3, #0]
 800c0ce:	42b3      	cmp	r3, r6
 800c0d0:	d91e      	bls.n	800c110 <_ZN8touchgfx12DigitalClock12setBaselineYEs+0x50>
 800c0d2:	6803      	ldr	r3, [r0, #0]
 800c0d4:	b28c      	uxth	r4, r1
 800c0d6:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 800c0da:	6d9f      	ldr	r7, [r3, #88]	; 0x58
 800c0dc:	4b0e      	ldr	r3, [pc, #56]	; (800c118 <_ZN8touchgfx12DigitalClock12setBaselineYEs+0x58>)
 800c0de:	681b      	ldr	r3, [r3, #0]
 800c0e0:	b92b      	cbnz	r3, 800c0ee <_ZN8touchgfx12DigitalClock12setBaselineYEs+0x2e>
 800c0e2:	4b0e      	ldr	r3, [pc, #56]	; (800c11c <_ZN8touchgfx12DigitalClock12setBaselineYEs+0x5c>)
 800c0e4:	21ae      	movs	r1, #174	; 0xae
 800c0e6:	4a0e      	ldr	r2, [pc, #56]	; (800c120 <_ZN8touchgfx12DigitalClock12setBaselineYEs+0x60>)
 800c0e8:	480e      	ldr	r0, [pc, #56]	; (800c124 <_ZN8touchgfx12DigitalClock12setBaselineYEs+0x64>)
 800c0ea:	f013 fd75 	bl	801fbd8 <__assert_func>
 800c0ee:	f813 2016 	ldrb.w	r2, [r3, r6, lsl #1]
 800c0f2:	4b0d      	ldr	r3, [pc, #52]	; (800c128 <_ZN8touchgfx12DigitalClock12setBaselineYEs+0x68>)
 800c0f4:	681b      	ldr	r3, [r3, #0]
 800c0f6:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800c0fa:	6803      	ldr	r3, [r0, #0]
 800c0fc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c0fe:	4798      	blx	r3
 800c100:	1a22      	subs	r2, r4, r0
 800c102:	4641      	mov	r1, r8
 800c104:	4628      	mov	r0, r5
 800c106:	463b      	mov	r3, r7
 800c108:	b212      	sxth	r2, r2
 800c10a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800c10e:	4718      	bx	r3
 800c110:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c114:	2400e0f0 	.word	0x2400e0f0
 800c118:	2400e0ec 	.word	0x2400e0ec
 800c11c:	08022a30 	.word	0x08022a30
 800c120:	08022b9c 	.word	0x08022b9c
 800c124:	08022a72 	.word	0x08022a72
 800c128:	2400e0f4 	.word	0x2400e0f4

0800c12c <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:
 800c12c:	2200      	movs	r2, #0
 800c12e:	f04f 31ff 	mov.w	r1, #4294967295
 800c132:	6082      	str	r2, [r0, #8]
 800c134:	e9c0 2100 	strd	r2, r1, [r0]
 800c138:	4770      	bx	lr
	...

0800c13c <_ZN8touchgfx12DigitalClockC1Ev>:
 800c13c:	b510      	push	{r4, lr}
 800c13e:	4604      	mov	r4, r0
 800c140:	f000 f87c 	bl	800c23c <_ZN8touchgfx13AbstractClockC1Ev>
 800c144:	2201      	movs	r2, #1
 800c146:	4b21      	ldr	r3, [pc, #132]	; (800c1cc <_ZN8touchgfx12DigitalClockC1Ev+0x90>)
 800c148:	f44f 017f 	mov.w	r1, #16711680	; 0xff0000
 800c14c:	4620      	mov	r0, r4
 800c14e:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 800c152:	4a1f      	ldr	r2, [pc, #124]	; (800c1d0 <_ZN8touchgfx12DigitalClockC1Ev+0x94>)
 800c154:	6023      	str	r3, [r4, #0]
 800c156:	2303      	movs	r3, #3
 800c158:	65e2      	str	r2, [r4, #92]	; 0x5c
 800c15a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800c15e:	f884 302f 	strb.w	r3, [r4, #47]	; 0x2f
 800c162:	2300      	movs	r3, #0
 800c164:	f8a4 2060 	strh.w	r2, [r4, #96]	; 0x60
 800c168:	f8a4 2074 	strh.w	r2, [r4, #116]	; 0x74
 800c16c:	f8a4 2076 	strh.w	r2, [r4, #118]	; 0x76
 800c170:	4a18      	ldr	r2, [pc, #96]	; (800c1d4 <_ZN8touchgfx12DigitalClockC1Ev+0x98>)
 800c172:	66a1      	str	r1, [r4, #104]	; 0x68
 800c174:	f104 0134 	add.w	r1, r4, #52	; 0x34
 800c178:	6362      	str	r2, [r4, #52]	; 0x34
 800c17a:	4622      	mov	r2, r4
 800c17c:	f884 3030 	strb.w	r3, [r4, #48]	; 0x30
 800c180:	8723      	strh	r3, [r4, #56]	; 0x38
 800c182:	8763      	strh	r3, [r4, #58]	; 0x3a
 800c184:	87a3      	strh	r3, [r4, #60]	; 0x3c
 800c186:	87e3      	strh	r3, [r4, #62]	; 0x3e
 800c188:	f8a4 3040 	strh.w	r3, [r4, #64]	; 0x40
 800c18c:	f8a4 3042 	strh.w	r3, [r4, #66]	; 0x42
 800c190:	f8a4 3044 	strh.w	r3, [r4, #68]	; 0x44
 800c194:	f8a4 3046 	strh.w	r3, [r4, #70]	; 0x46
 800c198:	6523      	str	r3, [r4, #80]	; 0x50
 800c19a:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 800c19e:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 800c1a2:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 800c1a6:	6663      	str	r3, [r4, #100]	; 0x64
 800c1a8:	f884 306c 	strb.w	r3, [r4, #108]	; 0x6c
 800c1ac:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 800c1b0:	f8a4 3070 	strh.w	r3, [r4, #112]	; 0x70
 800c1b4:	f8a4 3072 	strh.w	r3, [r4, #114]	; 0x72
 800c1b8:	67a3      	str	r3, [r4, #120]	; 0x78
 800c1ba:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 800c1be:	f822 3f80 	strh.w	r3, [r2, #128]!
 800c1c2:	67e2      	str	r2, [r4, #124]	; 0x7c
 800c1c4:	f000 f8ec 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c1c8:	4620      	mov	r0, r4
 800c1ca:	bd10      	pop	{r4, pc}
 800c1cc:	08022ae4 	.word	0x08022ae4
 800c1d0:	080215f4 	.word	0x080215f4
 800c1d4:	08022954 	.word	0x08022954

0800c1d8 <_ZN8touchgfx12DigitalClock34displayLeadingZeroForHourIndicatorEb>:
 800c1d8:	f880 1030 	strb.w	r1, [r0, #48]	; 0x30
 800c1dc:	4770      	bx	lr

0800c1de <_ZN8touchgfx13AbstractClock13setTime24HourEhhh>:
 800c1de:	b470      	push	{r4, r5, r6}
 800c1e0:	2518      	movs	r5, #24
 800c1e2:	fbb1 f6f5 	udiv	r6, r1, r5
 800c1e6:	fb06 1115 	mls	r1, r6, r5, r1
 800c1ea:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
 800c1ee:	213c      	movs	r1, #60	; 0x3c
 800c1f0:	fbb2 f5f1 	udiv	r5, r2, r1
 800c1f4:	fb05 2211 	mls	r2, r5, r1, r2
 800c1f8:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
 800c1fc:	fbb3 f2f1 	udiv	r2, r3, r1
 800c200:	fb02 3311 	mls	r3, r2, r1, r3
 800c204:	f880 302e 	strb.w	r3, [r0, #46]	; 0x2e
 800c208:	6803      	ldr	r3, [r0, #0]
 800c20a:	bc70      	pop	{r4, r5, r6}
 800c20c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800c210:	4718      	bx	r3

0800c212 <_ZN8touchgfx13AbstractClock13setTime12HourEhhhb>:
 800c212:	b4f0      	push	{r4, r5, r6, r7}
 800c214:	6804      	ldr	r4, [r0, #0]
 800c216:	f89d 6010 	ldrb.w	r6, [sp, #16]
 800c21a:	f8d4 5088 	ldr.w	r5, [r4, #136]	; 0x88
 800c21e:	240c      	movs	r4, #12
 800c220:	2e00      	cmp	r6, #0
 800c222:	46ac      	mov	ip, r5
 800c224:	fbb1 f7f4 	udiv	r7, r1, r4
 800c228:	fb07 1114 	mls	r1, r7, r4, r1
 800c22c:	bf18      	it	ne
 800c22e:	2400      	movne	r4, #0
 800c230:	fa54 f181 	uxtab	r1, r4, r1
 800c234:	bcf0      	pop	{r4, r5, r6, r7}
 800c236:	b2c9      	uxtb	r1, r1
 800c238:	4760      	bx	ip
	...

0800c23c <_ZN8touchgfx13AbstractClockC1Ev>:
 800c23c:	2101      	movs	r1, #1
 800c23e:	2200      	movs	r2, #0
 800c240:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800c244:	490a      	ldr	r1, [pc, #40]	; (800c270 <_ZN8touchgfx13AbstractClockC1Ev+0x34>)
 800c246:	8082      	strh	r2, [r0, #4]
 800c248:	80c2      	strh	r2, [r0, #6]
 800c24a:	8102      	strh	r2, [r0, #8]
 800c24c:	8142      	strh	r2, [r0, #10]
 800c24e:	8182      	strh	r2, [r0, #12]
 800c250:	81c2      	strh	r2, [r0, #14]
 800c252:	8202      	strh	r2, [r0, #16]
 800c254:	8242      	strh	r2, [r0, #18]
 800c256:	61c2      	str	r2, [r0, #28]
 800c258:	8402      	strh	r2, [r0, #32]
 800c25a:	8442      	strh	r2, [r0, #34]	; 0x22
 800c25c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800c260:	6001      	str	r1, [r0, #0]
 800c262:	6282      	str	r2, [r0, #40]	; 0x28
 800c264:	8582      	strh	r2, [r0, #44]	; 0x2c
 800c266:	f880 202e 	strb.w	r2, [r0, #46]	; 0x2e
 800c26a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800c26e:	4770      	bx	lr
 800c270:	08022bd4 	.word	0x08022bd4

0800c274 <_ZNK8touchgfx13AbstractClock16getCurrentHour24Ev>:
 800c274:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800c278:	4770      	bx	lr

0800c27a <_ZNK8touchgfx13AbstractClock16getCurrentHour12Ev>:
 800c27a:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800c27e:	220c      	movs	r2, #12
 800c280:	f100 030b 	add.w	r3, r0, #11
 800c284:	fb93 f0f2 	sdiv	r0, r3, r2
 800c288:	fb02 3010 	mls	r0, r2, r0, r3
 800c28c:	3001      	adds	r0, #1
 800c28e:	b2c0      	uxtb	r0, r0
 800c290:	4770      	bx	lr

0800c292 <_ZNK8touchgfx13AbstractClock12getCurrentAMEv>:
 800c292:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800c296:	280b      	cmp	r0, #11
 800c298:	bf8c      	ite	hi
 800c29a:	2000      	movhi	r0, #0
 800c29c:	2001      	movls	r0, #1
 800c29e:	4770      	bx	lr

0800c2a0 <_ZNK8touchgfx13AbstractClock16getCurrentMinuteEv>:
 800c2a0:	f890 002d 	ldrb.w	r0, [r0, #45]	; 0x2d
 800c2a4:	4770      	bx	lr

0800c2a6 <_ZNK8touchgfx13AbstractClock16getCurrentSecondEv>:
 800c2a6:	f890 002e 	ldrb.w	r0, [r0, #46]	; 0x2e
 800c2aa:	4770      	bx	lr

0800c2ac <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800c2ac:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800c2ae:	2000      	movs	r0, #0
 800c2b0:	b12b      	cbz	r3, 800c2be <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800c2b2:	b920      	cbnz	r0, 800c2be <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800c2b4:	1a5a      	subs	r2, r3, r1
 800c2b6:	699b      	ldr	r3, [r3, #24]
 800c2b8:	4250      	negs	r0, r2
 800c2ba:	4150      	adcs	r0, r2
 800c2bc:	e7f8      	b.n	800c2b0 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800c2be:	4770      	bx	lr

0800c2c0 <_ZN8touchgfx9Container9removeAllEv>:
 800c2c0:	2200      	movs	r2, #0
 800c2c2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800c2c4:	b123      	cbz	r3, 800c2d0 <_ZN8touchgfx9Container9removeAllEv+0x10>
 800c2c6:	6999      	ldr	r1, [r3, #24]
 800c2c8:	6281      	str	r1, [r0, #40]	; 0x28
 800c2ca:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800c2ce:	e7f8      	b.n	800c2c2 <_ZN8touchgfx9Container9removeAllEv+0x2>
 800c2d0:	4770      	bx	lr

0800c2d2 <_ZN8touchgfx9Container6unlinkEv>:
 800c2d2:	2300      	movs	r3, #0
 800c2d4:	6283      	str	r3, [r0, #40]	; 0x28
 800c2d6:	4770      	bx	lr

0800c2d8 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800c2d8:	2200      	movs	r2, #0
 800c2da:	8002      	strh	r2, [r0, #0]
 800c2dc:	8042      	strh	r2, [r0, #2]
 800c2de:	8082      	strh	r2, [r0, #4]
 800c2e0:	80c2      	strh	r2, [r0, #6]
 800c2e2:	4770      	bx	lr

0800c2e4 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800c2e4:	b570      	push	{r4, r5, r6, lr}
 800c2e6:	460d      	mov	r5, r1
 800c2e8:	4616      	mov	r6, r2
 800c2ea:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800c2ec:	b13c      	cbz	r4, 800c2fe <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800c2ee:	6823      	ldr	r3, [r4, #0]
 800c2f0:	4620      	mov	r0, r4
 800c2f2:	4632      	mov	r2, r6
 800c2f4:	4629      	mov	r1, r5
 800c2f6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800c2f8:	4798      	blx	r3
 800c2fa:	69a4      	ldr	r4, [r4, #24]
 800c2fc:	e7f6      	b.n	800c2ec <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800c2fe:	bd70      	pop	{r4, r5, r6, pc}

0800c300 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800c300:	b538      	push	{r3, r4, r5, lr}
 800c302:	460d      	mov	r5, r1
 800c304:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800c306:	b134      	cbz	r4, 800c316 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800c308:	682b      	ldr	r3, [r5, #0]
 800c30a:	4621      	mov	r1, r4
 800c30c:	4628      	mov	r0, r5
 800c30e:	689b      	ldr	r3, [r3, #8]
 800c310:	4798      	blx	r3
 800c312:	69a4      	ldr	r4, [r4, #24]
 800c314:	e7f7      	b.n	800c306 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800c316:	bd38      	pop	{r3, r4, r5, pc}

0800c318 <_ZNK8touchgfx9Container17invalidateContentEv>:
 800c318:	b510      	push	{r4, lr}
 800c31a:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800c31c:	b12c      	cbz	r4, 800c32a <_ZNK8touchgfx9Container17invalidateContentEv+0x12>
 800c31e:	6823      	ldr	r3, [r4, #0]
 800c320:	4620      	mov	r0, r4
 800c322:	699b      	ldr	r3, [r3, #24]
 800c324:	4798      	blx	r3
 800c326:	69a4      	ldr	r4, [r4, #24]
 800c328:	e7f8      	b.n	800c31c <_ZNK8touchgfx9Container17invalidateContentEv+0x4>
 800c32a:	bd10      	pop	{r4, pc}

0800c32c <_ZN8touchgfx9ContainerD1Ev>:
 800c32c:	4770      	bx	lr

0800c32e <_ZN8touchgfx9ContainerD0Ev>:
 800c32e:	b510      	push	{r4, lr}
 800c330:	4604      	mov	r4, r0
 800c332:	212c      	movs	r1, #44	; 0x2c
 800c334:	f013 fa73 	bl	801f81e <_ZdlPvj>
 800c338:	4620      	mov	r0, r4
 800c33a:	bd10      	pop	{r4, pc}

0800c33c <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800c33c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800c33e:	b19b      	cbz	r3, 800c368 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800c340:	428b      	cmp	r3, r1
 800c342:	d109      	bne.n	800c358 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800c344:	699a      	ldr	r2, [r3, #24]
 800c346:	2100      	movs	r1, #0
 800c348:	6159      	str	r1, [r3, #20]
 800c34a:	6282      	str	r2, [r0, #40]	; 0x28
 800c34c:	b902      	cbnz	r2, 800c350 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800c34e:	4770      	bx	lr
 800c350:	6199      	str	r1, [r3, #24]
 800c352:	4770      	bx	lr
 800c354:	4613      	mov	r3, r2
 800c356:	b13a      	cbz	r2, 800c368 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800c358:	699a      	ldr	r2, [r3, #24]
 800c35a:	428a      	cmp	r2, r1
 800c35c:	d1fa      	bne.n	800c354 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800c35e:	698a      	ldr	r2, [r1, #24]
 800c360:	619a      	str	r2, [r3, #24]
 800c362:	2300      	movs	r3, #0
 800c364:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800c368:	4770      	bx	lr

0800c36a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800c36a:	b410      	push	{r4}
 800c36c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800c36e:	4604      	mov	r4, r0
 800c370:	b92b      	cbnz	r3, 800c37e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800c372:	6803      	ldr	r3, [r0, #0]
 800c374:	4611      	mov	r1, r2
 800c376:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c37a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800c37c:	4718      	bx	r3
 800c37e:	b941      	cbnz	r1, 800c392 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800c380:	6193      	str	r3, [r2, #24]
 800c382:	6282      	str	r2, [r0, #40]	; 0x28
 800c384:	6154      	str	r4, [r2, #20]
 800c386:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c38a:	4770      	bx	lr
 800c38c:	4603      	mov	r3, r0
 800c38e:	2800      	cmp	r0, #0
 800c390:	d0f9      	beq.n	800c386 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800c392:	4299      	cmp	r1, r3
 800c394:	6998      	ldr	r0, [r3, #24]
 800c396:	d1f9      	bne.n	800c38c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800c398:	6190      	str	r0, [r2, #24]
 800c39a:	618a      	str	r2, [r1, #24]
 800c39c:	e7f2      	b.n	800c384 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>
	...

0800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800c3a0:	4288      	cmp	r0, r1
 800c3a2:	b508      	push	{r3, lr}
 800c3a4:	d105      	bne.n	800c3b2 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x12>
 800c3a6:	4b11      	ldr	r3, [pc, #68]	; (800c3ec <_ZN8touchgfx9Container3addERNS_8DrawableE+0x4c>)
 800c3a8:	2120      	movs	r1, #32
 800c3aa:	4a11      	ldr	r2, [pc, #68]	; (800c3f0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800c3ac:	4811      	ldr	r0, [pc, #68]	; (800c3f4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x54>)
 800c3ae:	f013 fc13 	bl	801fbd8 <__assert_func>
 800c3b2:	694b      	ldr	r3, [r1, #20]
 800c3b4:	b11b      	cbz	r3, 800c3be <_ZN8touchgfx9Container3addERNS_8DrawableE+0x1e>
 800c3b6:	4b10      	ldr	r3, [pc, #64]	; (800c3f8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x58>)
 800c3b8:	2121      	movs	r1, #33	; 0x21
 800c3ba:	4a0d      	ldr	r2, [pc, #52]	; (800c3f0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800c3bc:	e7f6      	b.n	800c3ac <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800c3be:	e9c1 0305 	strd	r0, r3, [r1, #20]
 800c3c2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800c3c4:	b913      	cbnz	r3, 800c3cc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2c>
 800c3c6:	6281      	str	r1, [r0, #40]	; 0x28
 800c3c8:	bd08      	pop	{r3, pc}
 800c3ca:	4613      	mov	r3, r2
 800c3cc:	699a      	ldr	r2, [r3, #24]
 800c3ce:	b12a      	cbz	r2, 800c3dc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x3c>
 800c3d0:	428b      	cmp	r3, r1
 800c3d2:	d1fa      	bne.n	800c3ca <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2a>
 800c3d4:	4b09      	ldr	r3, [pc, #36]	; (800c3fc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 800c3d6:	2132      	movs	r1, #50	; 0x32
 800c3d8:	4a05      	ldr	r2, [pc, #20]	; (800c3f0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800c3da:	e7e7      	b.n	800c3ac <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800c3dc:	428b      	cmp	r3, r1
 800c3de:	d103      	bne.n	800c3e8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x48>
 800c3e0:	4b06      	ldr	r3, [pc, #24]	; (800c3fc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 800c3e2:	2135      	movs	r1, #53	; 0x35
 800c3e4:	4a02      	ldr	r2, [pc, #8]	; (800c3f0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800c3e6:	e7e1      	b.n	800c3ac <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800c3e8:	6199      	str	r1, [r3, #24]
 800c3ea:	e7ed      	b.n	800c3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x28>
 800c3ec:	08022c68 	.word	0x08022c68
 800c3f0:	08022dc0 	.word	0x08022dc0
 800c3f4:	08022c94 	.word	0x08022c94
 800c3f8:	08022cc7 	.word	0x08022cc7
 800c3fc:	08022cfd 	.word	0x08022cfd

0800c400 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800c400:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c404:	461f      	mov	r7, r3
 800c406:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800c40a:	460d      	mov	r5, r1
 800c40c:	4616      	mov	r6, r2
 800c40e:	b103      	cbz	r3, 800c412 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800c410:	6038      	str	r0, [r7, #0]
 800c412:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800c414:	b314      	cbz	r4, 800c45c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800c416:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800c41a:	b1eb      	cbz	r3, 800c458 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800c41c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800c420:	428d      	cmp	r5, r1
 800c422:	db19      	blt.n	800c458 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800c424:	b289      	uxth	r1, r1
 800c426:	8923      	ldrh	r3, [r4, #8]
 800c428:	440b      	add	r3, r1
 800c42a:	b21b      	sxth	r3, r3
 800c42c:	429d      	cmp	r5, r3
 800c42e:	da13      	bge.n	800c458 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800c430:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800c434:	4296      	cmp	r6, r2
 800c436:	db0f      	blt.n	800c458 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800c438:	b292      	uxth	r2, r2
 800c43a:	8963      	ldrh	r3, [r4, #10]
 800c43c:	4413      	add	r3, r2
 800c43e:	b21b      	sxth	r3, r3
 800c440:	429e      	cmp	r6, r3
 800c442:	da09      	bge.n	800c458 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800c444:	6823      	ldr	r3, [r4, #0]
 800c446:	1ab2      	subs	r2, r6, r2
 800c448:	1a69      	subs	r1, r5, r1
 800c44a:	4620      	mov	r0, r4
 800c44c:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 800c450:	b212      	sxth	r2, r2
 800c452:	463b      	mov	r3, r7
 800c454:	b209      	sxth	r1, r1
 800c456:	47c0      	blx	r8
 800c458:	69a4      	ldr	r4, [r4, #24]
 800c45a:	e7db      	b.n	800c414 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800c45c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c460 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800c460:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c464:	4c6d      	ldr	r4, [pc, #436]	; (800c61c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
 800c466:	b0a1      	sub	sp, #132	; 0x84
 800c468:	4606      	mov	r6, r0
 800c46a:	6824      	ldr	r4, [r4, #0]
 800c46c:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 800c46e:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 800c472:	2400      	movs	r4, #0
 800c474:	9303      	str	r3, [sp, #12]
 800c476:	802c      	strh	r4, [r5, #0]
 800c478:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800c47a:	802c      	strh	r4, [r5, #0]
 800c47c:	601c      	str	r4, [r3, #0]
 800c47e:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800c482:	f7ff ffbd 	bl	800c400 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800c486:	f1b9 0f03 	cmp.w	r9, #3
 800c48a:	f340 80c1 	ble.w	800c610 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b0>
 800c48e:	4631      	mov	r1, r6
 800c490:	a80c      	add	r0, sp, #48	; 0x30
 800c492:	f006 f987 	bl	80127a4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c496:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800c49a:	9306      	str	r3, [sp, #24]
 800c49c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800c4a0:	9307      	str	r3, [sp, #28]
 800c4a2:	9b03      	ldr	r3, [sp, #12]
 800c4a4:	f8d3 a000 	ldr.w	sl, [r3]
 800c4a8:	f1ba 0f00 	cmp.w	sl, #0
 800c4ac:	f000 80b3 	beq.w	800c616 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b6>
 800c4b0:	4651      	mov	r1, sl
 800c4b2:	a810      	add	r0, sp, #64	; 0x40
 800c4b4:	f006 f976 	bl	80127a4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c4b8:	2002      	movs	r0, #2
 800c4ba:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 800c4be:	9b01      	ldr	r3, [sp, #4]
 800c4c0:	9a06      	ldr	r2, [sp, #24]
 800c4c2:	fb91 f1f0 	sdiv	r1, r1, r0
 800c4c6:	189d      	adds	r5, r3, r2
 800c4c8:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800c4cc:	9a07      	ldr	r2, [sp, #28]
 800c4ce:	4419      	add	r1, r3
 800c4d0:	9b02      	ldr	r3, [sp, #8]
 800c4d2:	4413      	add	r3, r2
 800c4d4:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 800c4d8:	1a6d      	subs	r5, r5, r1
 800c4da:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800c4de:	fb92 f2f0 	sdiv	r2, r2, r0
 800c4e2:	440a      	add	r2, r1
 800c4e4:	1a9b      	subs	r3, r3, r2
 800c4e6:	435b      	muls	r3, r3
 800c4e8:	fb05 3505 	mla	r5, r5, r5, r3
 800c4ec:	4f4c      	ldr	r7, [pc, #304]	; (800c620 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800c4ee:	ac10      	add	r4, sp, #64	; 0x40
 800c4f0:	f1b9 0f0c 	cmp.w	r9, #12
 800c4f4:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800c4f6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800c4f8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800c4fa:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800c4fc:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800c4fe:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800c500:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800c504:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800c508:	f04f 0303 	mov.w	r3, #3
 800c50c:	bfd8      	it	le
 800c50e:	f109 32ff 	addle.w	r2, r9, #4294967295
 800c512:	f04f 0400 	mov.w	r4, #0
 800c516:	f8cd 9000 	str.w	r9, [sp]
 800c51a:	bfcc      	ite	gt
 800c51c:	4698      	movgt	r8, r3
 800c51e:	fb92 f8f3 	sdivle	r8, r2, r3
 800c522:	1c63      	adds	r3, r4, #1
 800c524:	aa10      	add	r2, sp, #64	; 0x40
 800c526:	f004 0401 	and.w	r4, r4, #1
 800c52a:	f04f 0b00 	mov.w	fp, #0
 800c52e:	9308      	str	r3, [sp, #32]
 800c530:	9b00      	ldr	r3, [sp, #0]
 800c532:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800c536:	fb93 f3f8 	sdiv	r3, r3, r8
 800c53a:	3404      	adds	r4, #4
 800c53c:	b29b      	uxth	r3, r3
 800c53e:	9304      	str	r3, [sp, #16]
 800c540:	9a04      	ldr	r2, [sp, #16]
 800c542:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800c546:	fb13 f302 	smulbb	r3, r3, r2
 800c54a:	9a01      	ldr	r2, [sp, #4]
 800c54c:	b29b      	uxth	r3, r3
 800c54e:	1899      	adds	r1, r3, r2
 800c550:	9305      	str	r3, [sp, #20]
 800c552:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800c556:	b209      	sxth	r1, r1
 800c558:	4299      	cmp	r1, r3
 800c55a:	db4d      	blt.n	800c5f8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800c55c:	8932      	ldrh	r2, [r6, #8]
 800c55e:	4413      	add	r3, r2
 800c560:	b21b      	sxth	r3, r3
 800c562:	4299      	cmp	r1, r3
 800c564:	da48      	bge.n	800c5f8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800c566:	9b04      	ldr	r3, [sp, #16]
 800c568:	6827      	ldr	r7, [r4, #0]
 800c56a:	fb17 f703 	smulbb	r7, r7, r3
 800c56e:	9b02      	ldr	r3, [sp, #8]
 800c570:	b2bf      	uxth	r7, r7
 800c572:	18fa      	adds	r2, r7, r3
 800c574:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800c578:	b212      	sxth	r2, r2
 800c57a:	429a      	cmp	r2, r3
 800c57c:	db3c      	blt.n	800c5f8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800c57e:	8970      	ldrh	r0, [r6, #10]
 800c580:	4403      	add	r3, r0
 800c582:	b21b      	sxth	r3, r3
 800c584:	429a      	cmp	r2, r3
 800c586:	da37      	bge.n	800c5f8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800c588:	2300      	movs	r3, #0
 800c58a:	4630      	mov	r0, r6
 800c58c:	930b      	str	r3, [sp, #44]	; 0x2c
 800c58e:	ab0b      	add	r3, sp, #44	; 0x2c
 800c590:	f7ff ff36 	bl	800c400 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800c594:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800c596:	b37a      	cbz	r2, 800c5f8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800c598:	4552      	cmp	r2, sl
 800c59a:	d02d      	beq.n	800c5f8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800c59c:	4611      	mov	r1, r2
 800c59e:	a80e      	add	r0, sp, #56	; 0x38
 800c5a0:	9209      	str	r2, [sp, #36]	; 0x24
 800c5a2:	f006 f8ff 	bl	80127a4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c5a6:	f04f 0e02 	mov.w	lr, #2
 800c5aa:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800c5ae:	9a06      	ldr	r2, [sp, #24]
 800c5b0:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800c5b4:	9b01      	ldr	r3, [sp, #4]
 800c5b6:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800c5ba:	4413      	add	r3, r2
 800c5bc:	9a07      	ldr	r2, [sp, #28]
 800c5be:	fb91 f1fe 	sdiv	r1, r1, lr
 800c5c2:	fb9c fcfe 	sdiv	ip, ip, lr
 800c5c6:	4401      	add	r1, r0
 800c5c8:	1a58      	subs	r0, r3, r1
 800c5ca:	9b02      	ldr	r3, [sp, #8]
 800c5cc:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 800c5d0:	4413      	add	r3, r2
 800c5d2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800c5d4:	448c      	add	ip, r1
 800c5d6:	eba3 030c 	sub.w	r3, r3, ip
 800c5da:	435b      	muls	r3, r3
 800c5dc:	fb00 3300 	mla	r3, r0, r0, r3
 800c5e0:	42ab      	cmp	r3, r5
 800c5e2:	d208      	bcs.n	800c5f6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800c5e4:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800c5e6:	461d      	mov	r5, r3
 800c5e8:	9803      	ldr	r0, [sp, #12]
 800c5ea:	6001      	str	r1, [r0, #0]
 800c5ec:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800c5ee:	9805      	ldr	r0, [sp, #20]
 800c5f0:	8008      	strh	r0, [r1, #0]
 800c5f2:	992b      	ldr	r1, [sp, #172]	; 0xac
 800c5f4:	800f      	strh	r7, [r1, #0]
 800c5f6:	4692      	mov	sl, r2
 800c5f8:	f10b 0b01 	add.w	fp, fp, #1
 800c5fc:	3408      	adds	r4, #8
 800c5fe:	f1bb 0f04 	cmp.w	fp, #4
 800c602:	d19d      	bne.n	800c540 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800c604:	9b00      	ldr	r3, [sp, #0]
 800c606:	9c08      	ldr	r4, [sp, #32]
 800c608:	444b      	add	r3, r9
 800c60a:	4544      	cmp	r4, r8
 800c60c:	9300      	str	r3, [sp, #0]
 800c60e:	d188      	bne.n	800c522 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800c610:	b021      	add	sp, #132	; 0x84
 800c612:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c616:	f04f 35ff 	mov.w	r5, #4294967295
 800c61a:	e767      	b.n	800c4ec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800c61c:	2400e07c 	.word	0x2400e07c
 800c620:	08020e10 	.word	0x08020e10

0800c624 <_ZN8touchgfx4RectaNERKS0_>:
 800c624:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c628:	f9b1 7000 	ldrsh.w	r7, [r1]
 800c62c:	888c      	ldrh	r4, [r1, #4]
 800c62e:	f9b0 9000 	ldrsh.w	r9, [r0]
 800c632:	443c      	add	r4, r7
 800c634:	b2a4      	uxth	r4, r4
 800c636:	fa0f f884 	sxth.w	r8, r4
 800c63a:	45c1      	cmp	r9, r8
 800c63c:	da2f      	bge.n	800c69e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800c63e:	8882      	ldrh	r2, [r0, #4]
 800c640:	444a      	add	r2, r9
 800c642:	b292      	uxth	r2, r2
 800c644:	fa0f fe82 	sxth.w	lr, r2
 800c648:	4577      	cmp	r7, lr
 800c64a:	da28      	bge.n	800c69e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800c64c:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800c650:	88cb      	ldrh	r3, [r1, #6]
 800c652:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800c656:	442b      	add	r3, r5
 800c658:	b21b      	sxth	r3, r3
 800c65a:	429e      	cmp	r6, r3
 800c65c:	da1f      	bge.n	800c69e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800c65e:	88c3      	ldrh	r3, [r0, #6]
 800c660:	4433      	add	r3, r6
 800c662:	b29b      	uxth	r3, r3
 800c664:	fa0f fc83 	sxth.w	ip, r3
 800c668:	4565      	cmp	r5, ip
 800c66a:	da18      	bge.n	800c69e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800c66c:	454f      	cmp	r7, r9
 800c66e:	bfb8      	it	lt
 800c670:	464f      	movlt	r7, r9
 800c672:	42b5      	cmp	r5, r6
 800c674:	bfb8      	it	lt
 800c676:	4635      	movlt	r5, r6
 800c678:	45f0      	cmp	r8, lr
 800c67a:	bfd8      	it	le
 800c67c:	4622      	movle	r2, r4
 800c67e:	1bd2      	subs	r2, r2, r7
 800c680:	8082      	strh	r2, [r0, #4]
 800c682:	884a      	ldrh	r2, [r1, #2]
 800c684:	88c9      	ldrh	r1, [r1, #6]
 800c686:	8007      	strh	r7, [r0, #0]
 800c688:	440a      	add	r2, r1
 800c68a:	8045      	strh	r5, [r0, #2]
 800c68c:	b292      	uxth	r2, r2
 800c68e:	b211      	sxth	r1, r2
 800c690:	458c      	cmp	ip, r1
 800c692:	bfa8      	it	ge
 800c694:	4613      	movge	r3, r2
 800c696:	1b5b      	subs	r3, r3, r5
 800c698:	80c3      	strh	r3, [r0, #6]
 800c69a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c69e:	2300      	movs	r3, #0
 800c6a0:	8003      	strh	r3, [r0, #0]
 800c6a2:	8043      	strh	r3, [r0, #2]
 800c6a4:	8083      	strh	r3, [r0, #4]
 800c6a6:	80c3      	strh	r3, [r0, #6]
 800c6a8:	e7f7      	b.n	800c69a <_ZN8touchgfx4RectaNERKS0_+0x76>

0800c6aa <_ZNK8touchgfx4Rect7isEmptyEv>:
 800c6aa:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800c6ae:	2b00      	cmp	r3, #0
 800c6b0:	dd06      	ble.n	800c6c0 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800c6b2:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800c6b6:	2800      	cmp	r0, #0
 800c6b8:	bfcc      	ite	gt
 800c6ba:	2000      	movgt	r0, #0
 800c6bc:	2001      	movle	r0, #1
 800c6be:	4770      	bx	lr
 800c6c0:	2001      	movs	r0, #1
 800c6c2:	4770      	bx	lr

0800c6c4 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800c6c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c6c8:	2300      	movs	r3, #0
 800c6ca:	4604      	mov	r4, r0
 800c6cc:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800c6ce:	8003      	strh	r3, [r0, #0]
 800c6d0:	8043      	strh	r3, [r0, #2]
 800c6d2:	8083      	strh	r3, [r0, #4]
 800c6d4:	80c3      	strh	r3, [r0, #6]
 800c6d6:	2d00      	cmp	r5, #0
 800c6d8:	d040      	beq.n	800c75c <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800c6da:	1d28      	adds	r0, r5, #4
 800c6dc:	f7ff ffe5 	bl	800c6aa <_ZNK8touchgfx4Rect7isEmptyEv>
 800c6e0:	b988      	cbnz	r0, 800c706 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800c6e2:	4620      	mov	r0, r4
 800c6e4:	f7ff ffe1 	bl	800c6aa <_ZNK8touchgfx4Rect7isEmptyEv>
 800c6e8:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800c6ec:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800c6f0:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800c6f4:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800c6f8:	b138      	cbz	r0, 800c70a <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800c6fa:	8022      	strh	r2, [r4, #0]
 800c6fc:	8063      	strh	r3, [r4, #2]
 800c6fe:	f8a4 e004 	strh.w	lr, [r4, #4]
 800c702:	f8a4 c006 	strh.w	ip, [r4, #6]
 800c706:	69ad      	ldr	r5, [r5, #24]
 800c708:	e7e5      	b.n	800c6d6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800c70a:	f9b4 0000 	ldrsh.w	r0, [r4]
 800c70e:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800c712:	4290      	cmp	r0, r2
 800c714:	4607      	mov	r7, r0
 800c716:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800c71a:	460e      	mov	r6, r1
 800c71c:	bfa8      	it	ge
 800c71e:	4617      	movge	r7, r2
 800c720:	4299      	cmp	r1, r3
 800c722:	4472      	add	r2, lr
 800c724:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800c728:	bfa8      	it	ge
 800c72a:	461e      	movge	r6, r3
 800c72c:	4440      	add	r0, r8
 800c72e:	4471      	add	r1, lr
 800c730:	4463      	add	r3, ip
 800c732:	b200      	sxth	r0, r0
 800c734:	8027      	strh	r7, [r4, #0]
 800c736:	b212      	sxth	r2, r2
 800c738:	8066      	strh	r6, [r4, #2]
 800c73a:	b209      	sxth	r1, r1
 800c73c:	b21b      	sxth	r3, r3
 800c73e:	4290      	cmp	r0, r2
 800c740:	bfac      	ite	ge
 800c742:	ebc7 0200 	rsbge	r2, r7, r0
 800c746:	ebc7 0202 	rsblt	r2, r7, r2
 800c74a:	4299      	cmp	r1, r3
 800c74c:	bfac      	ite	ge
 800c74e:	ebc6 0301 	rsbge	r3, r6, r1
 800c752:	ebc6 0303 	rsblt	r3, r6, r3
 800c756:	80a2      	strh	r2, [r4, #4]
 800c758:	80e3      	strh	r3, [r4, #6]
 800c75a:	e7d4      	b.n	800c706 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800c75c:	4620      	mov	r0, r4
 800c75e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c762 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800c762:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800c766:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800c76a:	b383      	cbz	r3, 800c7ce <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800c76c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800c76e:	b374      	cbz	r4, 800c7ce <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800c770:	f9b1 5000 	ldrsh.w	r5, [r1]
 800c774:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800c778:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800c77c:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800c780:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800c784:	b303      	cbz	r3, 800c7c8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800c786:	4668      	mov	r0, sp
 800c788:	1d21      	adds	r1, r4, #4
 800c78a:	f8ad 5000 	strh.w	r5, [sp]
 800c78e:	f8ad 6002 	strh.w	r6, [sp, #2]
 800c792:	f8ad 7004 	strh.w	r7, [sp, #4]
 800c796:	f8ad 8006 	strh.w	r8, [sp, #6]
 800c79a:	f7ff ff43 	bl	800c624 <_ZN8touchgfx4RectaNERKS0_>
 800c79e:	4668      	mov	r0, sp
 800c7a0:	f7ff ff83 	bl	800c6aa <_ZNK8touchgfx4Rect7isEmptyEv>
 800c7a4:	b980      	cbnz	r0, 800c7c8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800c7a6:	f8bd 3000 	ldrh.w	r3, [sp]
 800c7aa:	4669      	mov	r1, sp
 800c7ac:	88a2      	ldrh	r2, [r4, #4]
 800c7ae:	4620      	mov	r0, r4
 800c7b0:	1a9b      	subs	r3, r3, r2
 800c7b2:	88e2      	ldrh	r2, [r4, #6]
 800c7b4:	f8ad 3000 	strh.w	r3, [sp]
 800c7b8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800c7bc:	1a9b      	subs	r3, r3, r2
 800c7be:	f8ad 3002 	strh.w	r3, [sp, #2]
 800c7c2:	6823      	ldr	r3, [r4, #0]
 800c7c4:	689b      	ldr	r3, [r3, #8]
 800c7c6:	4798      	blx	r3
 800c7c8:	69a4      	ldr	r4, [r4, #24]
 800c7ca:	2c00      	cmp	r4, #0
 800c7cc:	d1d8      	bne.n	800c780 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800c7ce:	b002      	add	sp, #8
 800c7d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c7d4 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800c7d4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c7d6:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800c7da:	460d      	mov	r5, r1
 800c7dc:	4616      	mov	r6, r2
 800c7de:	b323      	cbz	r3, 800c82a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800c7e0:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800c7e2:	b314      	cbz	r4, 800c82a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800c7e4:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800c7e8:	b1eb      	cbz	r3, 800c826 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800c7ea:	6828      	ldr	r0, [r5, #0]
 800c7ec:	466b      	mov	r3, sp
 800c7ee:	6869      	ldr	r1, [r5, #4]
 800c7f0:	c303      	stmia	r3!, {r0, r1}
 800c7f2:	4668      	mov	r0, sp
 800c7f4:	1d21      	adds	r1, r4, #4
 800c7f6:	f7ff ff15 	bl	800c624 <_ZN8touchgfx4RectaNERKS0_>
 800c7fa:	4668      	mov	r0, sp
 800c7fc:	f7ff ff55 	bl	800c6aa <_ZNK8touchgfx4Rect7isEmptyEv>
 800c800:	b988      	cbnz	r0, 800c826 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800c802:	f8bd 3000 	ldrh.w	r3, [sp]
 800c806:	4669      	mov	r1, sp
 800c808:	88a2      	ldrh	r2, [r4, #4]
 800c80a:	4620      	mov	r0, r4
 800c80c:	1a9b      	subs	r3, r3, r2
 800c80e:	88e2      	ldrh	r2, [r4, #6]
 800c810:	f8ad 3000 	strh.w	r3, [sp]
 800c814:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800c818:	1a9b      	subs	r3, r3, r2
 800c81a:	4632      	mov	r2, r6
 800c81c:	f8ad 3002 	strh.w	r3, [sp, #2]
 800c820:	6823      	ldr	r3, [r4, #0]
 800c822:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800c824:	4798      	blx	r3
 800c826:	69a4      	ldr	r4, [r4, #24]
 800c828:	e7db      	b.n	800c7e2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800c82a:	b002      	add	sp, #8
 800c82c:	bd70      	pop	{r4, r5, r6, pc}

0800c82e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800c82e:	6803      	ldr	r3, [r0, #0]
 800c830:	b513      	push	{r0, r1, r4, lr}
 800c832:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 800c836:	2300      	movs	r3, #0
 800c838:	e9cd 3300 	strd	r3, r3, [sp]
 800c83c:	466b      	mov	r3, sp
 800c83e:	47a0      	blx	r4
 800c840:	b002      	add	sp, #8
 800c842:	bd10      	pop	{r4, pc}

0800c844 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800c844:	2301      	movs	r3, #1
 800c846:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800c84a:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800c84e:	4770      	bx	lr

0800c850 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800c850:	2301      	movs	r3, #1
 800c852:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800c856:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800c85a:	4770      	bx	lr

0800c85c <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800c85c:	6843      	ldr	r3, [r0, #4]
 800c85e:	2201      	movs	r2, #1
 800c860:	725a      	strb	r2, [r3, #9]
 800c862:	6840      	ldr	r0, [r0, #4]
 800c864:	6803      	ldr	r3, [r0, #0]
 800c866:	691b      	ldr	r3, [r3, #16]
 800c868:	4718      	bx	r3

0800c86a <_ZN8touchgfx3HAL8flushDMAEv>:
 800c86a:	6840      	ldr	r0, [r0, #4]
 800c86c:	6803      	ldr	r3, [r0, #0]
 800c86e:	689b      	ldr	r3, [r3, #8]
 800c870:	4718      	bx	r3

0800c872 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800c872:	b530      	push	{r4, r5, lr}
 800c874:	b08b      	sub	sp, #44	; 0x2c
 800c876:	6804      	ldr	r4, [r0, #0]
 800c878:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 800c87c:	9509      	str	r5, [sp, #36]	; 0x24
 800c87e:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 800c882:	9508      	str	r5, [sp, #32]
 800c884:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800c888:	9507      	str	r5, [sp, #28]
 800c88a:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800c88e:	9506      	str	r5, [sp, #24]
 800c890:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800c894:	9505      	str	r5, [sp, #20]
 800c896:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800c89a:	9504      	str	r5, [sp, #16]
 800c89c:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800c8a0:	9503      	str	r5, [sp, #12]
 800c8a2:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800c8a6:	9502      	str	r5, [sp, #8]
 800c8a8:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800c8ac:	e9cd 3500 	strd	r3, r5, [sp]
 800c8b0:	4613      	mov	r3, r2
 800c8b2:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 800c8b4:	2200      	movs	r2, #0
 800c8b6:	47a0      	blx	r4
 800c8b8:	b00b      	add	sp, #44	; 0x2c
 800c8ba:	bd30      	pop	{r4, r5, pc}

0800c8bc <_ZN8touchgfx3HAL10beginFrameEv>:
 800c8bc:	4b04      	ldr	r3, [pc, #16]	; (800c8d0 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800c8be:	781b      	ldrb	r3, [r3, #0]
 800c8c0:	b123      	cbz	r3, 800c8cc <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800c8c2:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 800c8c6:	f080 0001 	eor.w	r0, r0, #1
 800c8ca:	4770      	bx	lr
 800c8cc:	2001      	movs	r0, #1
 800c8ce:	4770      	bx	lr
 800c8d0:	2400e07a 	.word	0x2400e07a

0800c8d4 <_ZN8touchgfx3HAL8endFrameEv>:
 800c8d4:	b510      	push	{r4, lr}
 800c8d6:	4604      	mov	r4, r0
 800c8d8:	6840      	ldr	r0, [r0, #4]
 800c8da:	6803      	ldr	r3, [r0, #0]
 800c8dc:	689b      	ldr	r3, [r3, #8]
 800c8de:	4798      	blx	r3
 800c8e0:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 800c8e4:	b113      	cbz	r3, 800c8ec <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800c8e6:	2301      	movs	r3, #1
 800c8e8:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800c8ec:	bd10      	pop	{r4, pc}

0800c8ee <_ZN8touchgfx3HAL10initializeEv>:
 800c8ee:	b510      	push	{r4, lr}
 800c8f0:	4604      	mov	r4, r0
 800c8f2:	f7f5 f9f3 	bl	8001cdc <_ZN8touchgfx10OSWrappers10initializeEv>
 800c8f6:	6860      	ldr	r0, [r4, #4]
 800c8f8:	6803      	ldr	r3, [r0, #0]
 800c8fa:	68db      	ldr	r3, [r3, #12]
 800c8fc:	4798      	blx	r3
 800c8fe:	68e0      	ldr	r0, [r4, #12]
 800c900:	6803      	ldr	r3, [r0, #0]
 800c902:	689b      	ldr	r3, [r3, #8]
 800c904:	4798      	blx	r3
 800c906:	6823      	ldr	r3, [r4, #0]
 800c908:	4620      	mov	r0, r4
 800c90a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800c90c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c910:	4718      	bx	r3
	...

0800c914 <_ZN8touchgfx3HAL4tickEv>:
 800c914:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800c916:	6803      	ldr	r3, [r0, #0]
 800c918:	4604      	mov	r4, r0
 800c91a:	4d5b      	ldr	r5, [pc, #364]	; (800ca88 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800c91c:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800c920:	4798      	blx	r3
 800c922:	2800      	cmp	r0, #0
 800c924:	f000 8095 	beq.w	800ca52 <_ZN8touchgfx3HAL4tickEv+0x13e>
 800c928:	2001      	movs	r0, #1
 800c92a:	2600      	movs	r6, #0
 800c92c:	f7f4 fefb 	bl	8001726 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800c930:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 800c934:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800c938:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800c93c:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800c940:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800c944:	b133      	cbz	r3, 800c954 <_ZN8touchgfx3HAL4tickEv+0x40>
 800c946:	6823      	ldr	r3, [r4, #0]
 800c948:	4620      	mov	r0, r4
 800c94a:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 800c94e:	4798      	blx	r3
 800c950:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 800c954:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800c958:	2601      	movs	r6, #1
 800c95a:	6862      	ldr	r2, [r4, #4]
 800c95c:	f083 0301 	eor.w	r3, r3, #1
 800c960:	702e      	strb	r6, [r5, #0]
 800c962:	7253      	strb	r3, [r2, #9]
 800c964:	f004 fe82 	bl	801166c <_ZN8touchgfx11Application11getInstanceEv>
 800c968:	6803      	ldr	r3, [r0, #0]
 800c96a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c96c:	4798      	blx	r3
 800c96e:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800c972:	b90b      	cbnz	r3, 800c978 <_ZN8touchgfx3HAL4tickEv+0x64>
 800c974:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 800c978:	f004 fe78 	bl	801166c <_ZN8touchgfx11Application11getInstanceEv>
 800c97c:	6803      	ldr	r3, [r0, #0]
 800c97e:	695b      	ldr	r3, [r3, #20]
 800c980:	4798      	blx	r3
 800c982:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800c984:	6803      	ldr	r3, [r0, #0]
 800c986:	691b      	ldr	r3, [r3, #16]
 800c988:	4798      	blx	r3
 800c98a:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800c98e:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 800c992:	3b01      	subs	r3, #1
 800c994:	b2db      	uxtb	r3, r3
 800c996:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800c99a:	b10a      	cbz	r2, 800c9a0 <_ZN8touchgfx3HAL4tickEv+0x8c>
 800c99c:	2b00      	cmp	r3, #0
 800c99e:	d1eb      	bne.n	800c978 <_ZN8touchgfx3HAL4tickEv+0x64>
 800c9a0:	4a3a      	ldr	r2, [pc, #232]	; (800ca8c <_ZN8touchgfx3HAL4tickEv+0x178>)
 800c9a2:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 800c9a6:	7813      	ldrb	r3, [r2, #0]
 800c9a8:	3301      	adds	r3, #1
 800c9aa:	b25b      	sxtb	r3, r3
 800c9ac:	4299      	cmp	r1, r3
 800c9ae:	7013      	strb	r3, [r2, #0]
 800c9b0:	dc10      	bgt.n	800c9d4 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800c9b2:	2300      	movs	r3, #0
 800c9b4:	68e0      	ldr	r0, [r4, #12]
 800c9b6:	a902      	add	r1, sp, #8
 800c9b8:	7013      	strb	r3, [r2, #0]
 800c9ba:	aa03      	add	r2, sp, #12
 800c9bc:	6803      	ldr	r3, [r0, #0]
 800c9be:	68db      	ldr	r3, [r3, #12]
 800c9c0:	4798      	blx	r3
 800c9c2:	6823      	ldr	r3, [r4, #0]
 800c9c4:	2800      	cmp	r0, #0
 800c9c6:	d050      	beq.n	800ca6a <_ZN8touchgfx3HAL4tickEv+0x156>
 800c9c8:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800c9cc:	4620      	mov	r0, r4
 800c9ce:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800c9d2:	4798      	blx	r3
 800c9d4:	2300      	movs	r3, #0
 800c9d6:	6960      	ldr	r0, [r4, #20]
 800c9d8:	f88d 3007 	strb.w	r3, [sp, #7]
 800c9dc:	b158      	cbz	r0, 800c9f6 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800c9de:	6803      	ldr	r3, [r0, #0]
 800c9e0:	f10d 0107 	add.w	r1, sp, #7
 800c9e4:	68db      	ldr	r3, [r3, #12]
 800c9e6:	4798      	blx	r3
 800c9e8:	b128      	cbz	r0, 800c9f6 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800c9ea:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800c9ec:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800c9f0:	6803      	ldr	r3, [r0, #0]
 800c9f2:	68db      	ldr	r3, [r3, #12]
 800c9f4:	4798      	blx	r3
 800c9f6:	f104 001c 	add.w	r0, r4, #28
 800c9fa:	f010 fb59 	bl	801d0b0 <_ZN8touchgfx8Gestures4tickEv>
 800c9fe:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 800ca02:	b30b      	cbz	r3, 800ca48 <_ZN8touchgfx3HAL4tickEv+0x134>
 800ca04:	6920      	ldr	r0, [r4, #16]
 800ca06:	6803      	ldr	r3, [r0, #0]
 800ca08:	691b      	ldr	r3, [r3, #16]
 800ca0a:	4798      	blx	r3
 800ca0c:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800ca0e:	4606      	mov	r6, r0
 800ca10:	b903      	cbnz	r3, 800ca14 <_ZN8touchgfx3HAL4tickEv+0x100>
 800ca12:	6720      	str	r0, [r4, #112]	; 0x70
 800ca14:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800ca16:	4a1e      	ldr	r2, [pc, #120]	; (800ca90 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800ca18:	1af3      	subs	r3, r6, r3
 800ca1a:	4293      	cmp	r3, r2
 800ca1c:	d914      	bls.n	800ca48 <_ZN8touchgfx3HAL4tickEv+0x134>
 800ca1e:	6920      	ldr	r0, [r4, #16]
 800ca20:	6803      	ldr	r3, [r0, #0]
 800ca22:	699b      	ldr	r3, [r3, #24]
 800ca24:	4798      	blx	r3
 800ca26:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800ca28:	2264      	movs	r2, #100	; 0x64
 800ca2a:	1af3      	subs	r3, r6, r3
 800ca2c:	fbb3 f3f2 	udiv	r3, r3, r2
 800ca30:	fbb0 f0f3 	udiv	r0, r0, r3
 800ca34:	2800      	cmp	r0, #0
 800ca36:	dc1d      	bgt.n	800ca74 <_ZN8touchgfx3HAL4tickEv+0x160>
 800ca38:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 800ca3c:	6920      	ldr	r0, [r4, #16]
 800ca3e:	2100      	movs	r1, #0
 800ca40:	6803      	ldr	r3, [r0, #0]
 800ca42:	69db      	ldr	r3, [r3, #28]
 800ca44:	4798      	blx	r3
 800ca46:	6726      	str	r6, [r4, #112]	; 0x70
 800ca48:	f004 fe10 	bl	801166c <_ZN8touchgfx11Application11getInstanceEv>
 800ca4c:	6803      	ldr	r3, [r0, #0]
 800ca4e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ca50:	4798      	blx	r3
 800ca52:	6823      	ldr	r3, [r4, #0]
 800ca54:	4620      	mov	r0, r4
 800ca56:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800ca5a:	4798      	blx	r3
 800ca5c:	2001      	movs	r0, #1
 800ca5e:	f7f4 fe63 	bl	8001728 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800ca62:	2300      	movs	r3, #0
 800ca64:	702b      	strb	r3, [r5, #0]
 800ca66:	b004      	add	sp, #16
 800ca68:	bd70      	pop	{r4, r5, r6, pc}
 800ca6a:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800ca6e:	4620      	mov	r0, r4
 800ca70:	4798      	blx	r3
 800ca72:	e7af      	b.n	800c9d4 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800ca74:	2863      	cmp	r0, #99	; 0x63
 800ca76:	bfcb      	itete	gt
 800ca78:	2300      	movgt	r3, #0
 800ca7a:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800ca7e:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 800ca82:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 800ca86:	e7d9      	b.n	800ca3c <_ZN8touchgfx3HAL4tickEv+0x128>
 800ca88:	2400e080 	.word	0x2400e080
 800ca8c:	2400e081 	.word	0x2400e081
 800ca90:	05f5e100 	.word	0x05f5e100

0800ca94 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800ca94:	f7f5 b952 	b.w	8001d3c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800ca98 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800ca98:	6581      	str	r1, [r0, #88]	; 0x58
 800ca9a:	301c      	adds	r0, #28
 800ca9c:	f010 bb06 	b.w	801d0ac <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800caa0 <_ZN8touchgfx3HAL5touchEll>:
 800caa0:	b530      	push	{r4, r5, lr}
 800caa2:	b087      	sub	sp, #28
 800caa4:	4604      	mov	r4, r0
 800caa6:	a804      	add	r0, sp, #16
 800caa8:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800caac:	f004 fb42 	bl	8011134 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800cab0:	9b04      	ldr	r3, [sp, #16]
 800cab2:	a906      	add	r1, sp, #24
 800cab4:	a803      	add	r0, sp, #12
 800cab6:	f8ad 300c 	strh.w	r3, [sp, #12]
 800caba:	9b05      	ldr	r3, [sp, #20]
 800cabc:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800cac0:	f004 fb8a 	bl	80111d8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800cac4:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 800cac8:	f104 001c 	add.w	r0, r4, #28
 800cacc:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800cad0:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800cad4:	b189      	cbz	r1, 800cafa <_ZN8touchgfx3HAL5touchEll+0x5a>
 800cad6:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 800cada:	9300      	str	r3, [sp, #0]
 800cadc:	4613      	mov	r3, r2
 800cade:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800cae2:	462a      	mov	r2, r5
 800cae4:	f010 faf2 	bl	801d0cc <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800cae8:	b128      	cbz	r0, 800caf6 <_ZN8touchgfx3HAL5touchEll+0x56>
 800caea:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800caee:	65e3      	str	r3, [r4, #92]	; 0x5c
 800caf0:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800caf4:	6623      	str	r3, [r4, #96]	; 0x60
 800caf6:	b007      	add	sp, #28
 800caf8:	bd30      	pop	{r4, r5, pc}
 800cafa:	f010 fb27 	bl	801d14c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800cafe:	2301      	movs	r3, #1
 800cb00:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800cb04:	e7f1      	b.n	800caea <_ZN8touchgfx3HAL5touchEll+0x4a>

0800cb06 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800cb06:	b510      	push	{r4, lr}
 800cb08:	2b00      	cmp	r3, #0
 800cb0a:	d046      	beq.n	800cb9a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800cb0c:	ea81 0002 	eor.w	r0, r1, r2
 800cb10:	07c4      	lsls	r4, r0, #31
 800cb12:	d508      	bpl.n	800cb26 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800cb14:	440b      	add	r3, r1
 800cb16:	3a01      	subs	r2, #1
 800cb18:	428b      	cmp	r3, r1
 800cb1a:	d93e      	bls.n	800cb9a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800cb1c:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800cb20:	f801 0b01 	strb.w	r0, [r1], #1
 800cb24:	e7f8      	b.n	800cb18 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800cb26:	07d0      	lsls	r0, r2, #31
 800cb28:	bf42      	ittt	mi
 800cb2a:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800cb2e:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800cb32:	f801 0b01 	strbmi.w	r0, [r1], #1
 800cb36:	2b01      	cmp	r3, #1
 800cb38:	d911      	bls.n	800cb5e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800cb3a:	ea81 0402 	eor.w	r4, r1, r2
 800cb3e:	4610      	mov	r0, r2
 800cb40:	07a4      	lsls	r4, r4, #30
 800cb42:	d022      	beq.n	800cb8a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800cb44:	f023 0401 	bic.w	r4, r3, #1
 800cb48:	440c      	add	r4, r1
 800cb4a:	428c      	cmp	r4, r1
 800cb4c:	4602      	mov	r2, r0
 800cb4e:	d904      	bls.n	800cb5a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800cb50:	8812      	ldrh	r2, [r2, #0]
 800cb52:	3002      	adds	r0, #2
 800cb54:	f821 2b02 	strh.w	r2, [r1], #2
 800cb58:	e7f7      	b.n	800cb4a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800cb5a:	f003 0301 	and.w	r3, r3, #1
 800cb5e:	f023 0003 	bic.w	r0, r3, #3
 800cb62:	4408      	add	r0, r1
 800cb64:	4288      	cmp	r0, r1
 800cb66:	4614      	mov	r4, r2
 800cb68:	d904      	bls.n	800cb74 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800cb6a:	6824      	ldr	r4, [r4, #0]
 800cb6c:	3204      	adds	r2, #4
 800cb6e:	f841 4b04 	str.w	r4, [r1], #4
 800cb72:	e7f7      	b.n	800cb64 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800cb74:	f003 0303 	and.w	r3, r3, #3
 800cb78:	3a01      	subs	r2, #1
 800cb7a:	440b      	add	r3, r1
 800cb7c:	428b      	cmp	r3, r1
 800cb7e:	d90c      	bls.n	800cb9a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800cb80:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800cb84:	f801 0b01 	strb.w	r0, [r1], #1
 800cb88:	e7f8      	b.n	800cb7c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800cb8a:	0790      	lsls	r0, r2, #30
 800cb8c:	d0e7      	beq.n	800cb5e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800cb8e:	f832 0b02 	ldrh.w	r0, [r2], #2
 800cb92:	3b02      	subs	r3, #2
 800cb94:	f821 0b02 	strh.w	r0, [r1], #2
 800cb98:	e7e1      	b.n	800cb5e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800cb9a:	2001      	movs	r0, #1
 800cb9c:	bd10      	pop	{r4, pc}

0800cb9e <_ZN8touchgfx3HAL7noTouchEv>:
 800cb9e:	b510      	push	{r4, lr}
 800cba0:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 800cba4:	4604      	mov	r4, r0
 800cba6:	b153      	cbz	r3, 800cbbe <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800cba8:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 800cbac:	2101      	movs	r1, #1
 800cbae:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 800cbb2:	301c      	adds	r0, #28
 800cbb4:	f010 faca 	bl	801d14c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800cbb8:	2300      	movs	r3, #0
 800cbba:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800cbbe:	bd10      	pop	{r4, pc}

0800cbc0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800cbc0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cbc4:	4604      	mov	r4, r0
 800cbc6:	6980      	ldr	r0, [r0, #24]
 800cbc8:	b085      	sub	sp, #20
 800cbca:	460f      	mov	r7, r1
 800cbcc:	4690      	mov	r8, r2
 800cbce:	4699      	mov	r9, r3
 800cbd0:	b930      	cbnz	r0, 800cbe0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x20>
 800cbd2:	4b1c      	ldr	r3, [pc, #112]	; (800cc44 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x84>)
 800cbd4:	f44f 719f 	mov.w	r1, #318	; 0x13e
 800cbd8:	4a1b      	ldr	r2, [pc, #108]	; (800cc48 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 800cbda:	481c      	ldr	r0, [pc, #112]	; (800cc4c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x8c>)
 800cbdc:	f012 fffc 	bl	801fbd8 <__assert_func>
 800cbe0:	ad04      	add	r5, sp, #16
 800cbe2:	2600      	movs	r6, #0
 800cbe4:	f845 6d04 	str.w	r6, [r5, #-4]!
 800cbe8:	6806      	ldr	r6, [r0, #0]
 800cbea:	9501      	str	r5, [sp, #4]
 800cbec:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 800cbf0:	9500      	str	r5, [sp, #0]
 800cbf2:	6835      	ldr	r5, [r6, #0]
 800cbf4:	47a8      	blx	r5
 800cbf6:	4d16      	ldr	r5, [pc, #88]	; (800cc50 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x90>)
 800cbf8:	4606      	mov	r6, r0
 800cbfa:	f8a5 9000 	strh.w	r9, [r5]
 800cbfe:	f7f6 f9cd 	bl	8002f9c <_ZN8touchgfx3HAL3lcdEv>
 800cc02:	6803      	ldr	r3, [r0, #0]
 800cc04:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800cc06:	4798      	blx	r3
 800cc08:	2801      	cmp	r0, #1
 800cc0a:	d012      	beq.n	800cc32 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x72>
 800cc0c:	d306      	bcc.n	800cc1c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x5c>
 800cc0e:	280d      	cmp	r0, #13
 800cc10:	d80b      	bhi.n	800cc2a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 800cc12:	4b10      	ldr	r3, [pc, #64]	; (800cc54 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 800cc14:	f240 115b 	movw	r1, #347	; 0x15b
 800cc18:	4a0b      	ldr	r2, [pc, #44]	; (800cc48 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 800cc1a:	e7de      	b.n	800cbda <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x1a>
 800cc1c:	882b      	ldrh	r3, [r5, #0]
 800cc1e:	fb08 7203 	mla	r2, r8, r3, r7
 800cc22:	9b03      	ldr	r3, [sp, #12]
 800cc24:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800cc28:	63e3      	str	r3, [r4, #60]	; 0x3c
 800cc2a:	4630      	mov	r0, r6
 800cc2c:	b005      	add	sp, #20
 800cc2e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800cc32:	882a      	ldrh	r2, [r5, #0]
 800cc34:	9b03      	ldr	r3, [sp, #12]
 800cc36:	fb08 7202 	mla	r2, r8, r2, r7
 800cc3a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800cc3e:	1a9a      	subs	r2, r3, r2
 800cc40:	63e2      	str	r2, [r4, #60]	; 0x3c
 800cc42:	e7f2      	b.n	800cc2a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 800cc44:	08022f61 	.word	0x08022f61
 800cc48:	0802321f 	.word	0x0802321f
 800cc4c:	08022fa6 	.word	0x08022fa6
 800cc50:	2400e076 	.word	0x2400e076
 800cc54:	08022fcc 	.word	0x08022fcc

0800cc58 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800cc58:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cc5a:	b08b      	sub	sp, #44	; 0x2c
 800cc5c:	4617      	mov	r7, r2
 800cc5e:	4604      	mov	r4, r0
 800cc60:	460e      	mov	r6, r1
 800cc62:	461d      	mov	r5, r3
 800cc64:	f7f6 f99a 	bl	8002f9c <_ZN8touchgfx3HAL3lcdEv>
 800cc68:	6803      	ldr	r3, [r0, #0]
 800cc6a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800cc6c:	4798      	blx	r3
 800cc6e:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800cc72:	9007      	str	r0, [sp, #28]
 800cc74:	4631      	mov	r1, r6
 800cc76:	6822      	ldr	r2, [r4, #0]
 800cc78:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800cc7c:	4b0c      	ldr	r3, [pc, #48]	; (800ccb0 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800cc7e:	4620      	mov	r0, r4
 800cc80:	881b      	ldrh	r3, [r3, #0]
 800cc82:	9306      	str	r3, [sp, #24]
 800cc84:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800cc88:	9305      	str	r3, [sp, #20]
 800cc8a:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800cc8e:	9304      	str	r3, [sp, #16]
 800cc90:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800cc94:	9303      	str	r3, [sp, #12]
 800cc96:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800cc9a:	9302      	str	r3, [sp, #8]
 800cc9c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800cca0:	e9cd 5300 	strd	r5, r3, [sp]
 800cca4:	463b      	mov	r3, r7
 800cca6:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 800cca8:	2200      	movs	r2, #0
 800ccaa:	47a8      	blx	r5
 800ccac:	b00b      	add	sp, #44	; 0x2c
 800ccae:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ccb0:	2400e076 	.word	0x2400e076

0800ccb4 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800ccb4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ccb8:	4698      	mov	r8, r3
 800ccba:	6803      	ldr	r3, [r0, #0]
 800ccbc:	b08b      	sub	sp, #44	; 0x2c
 800ccbe:	4617      	mov	r7, r2
 800ccc0:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 800ccc2:	460e      	mov	r6, r1
 800ccc4:	4b13      	ldr	r3, [pc, #76]	; (800cd14 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800ccc6:	4604      	mov	r4, r0
 800ccc8:	f8b3 9000 	ldrh.w	r9, [r3]
 800cccc:	f7f6 f966 	bl	8002f9c <_ZN8touchgfx3HAL3lcdEv>
 800ccd0:	6803      	ldr	r3, [r0, #0]
 800ccd2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ccd4:	4798      	blx	r3
 800ccd6:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800ccda:	2200      	movs	r2, #0
 800ccdc:	4631      	mov	r1, r6
 800ccde:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800cce2:	2302      	movs	r3, #2
 800cce4:	4620      	mov	r0, r4
 800cce6:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800ccea:	2301      	movs	r3, #1
 800ccec:	9305      	str	r3, [sp, #20]
 800ccee:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800ccf2:	9304      	str	r3, [sp, #16]
 800ccf4:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800ccf8:	9303      	str	r3, [sp, #12]
 800ccfa:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800ccfe:	9302      	str	r3, [sp, #8]
 800cd00:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800cd04:	e9cd 8300 	strd	r8, r3, [sp]
 800cd08:	463b      	mov	r3, r7
 800cd0a:	47a8      	blx	r5
 800cd0c:	b00b      	add	sp, #44	; 0x2c
 800cd0e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800cd12:	bf00      	nop
 800cd14:	2400e076 	.word	0x2400e076

0800cd18 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800cd18:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cd1c:	4698      	mov	r8, r3
 800cd1e:	6803      	ldr	r3, [r0, #0]
 800cd20:	b087      	sub	sp, #28
 800cd22:	460e      	mov	r6, r1
 800cd24:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 800cd26:	4617      	mov	r7, r2
 800cd28:	4b0f      	ldr	r3, [pc, #60]	; (800cd68 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800cd2a:	4604      	mov	r4, r0
 800cd2c:	f8b3 9000 	ldrh.w	r9, [r3]
 800cd30:	f7f6 f934 	bl	8002f9c <_ZN8touchgfx3HAL3lcdEv>
 800cd34:	6803      	ldr	r3, [r0, #0]
 800cd36:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800cd38:	4798      	blx	r3
 800cd3a:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800cd3e:	463a      	mov	r2, r7
 800cd40:	4631      	mov	r1, r6
 800cd42:	f8cd 900c 	str.w	r9, [sp, #12]
 800cd46:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800cd4a:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800cd4e:	4620      	mov	r0, r4
 800cd50:	9302      	str	r3, [sp, #8]
 800cd52:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800cd56:	9301      	str	r3, [sp, #4]
 800cd58:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800cd5c:	9300      	str	r3, [sp, #0]
 800cd5e:	4643      	mov	r3, r8
 800cd60:	47a8      	blx	r5
 800cd62:	b007      	add	sp, #28
 800cd64:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800cd68:	2400e076 	.word	0x2400e076

0800cd6c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800cd6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cd70:	4604      	mov	r4, r0
 800cd72:	b08f      	sub	sp, #60	; 0x3c
 800cd74:	4610      	mov	r0, r2
 800cd76:	460d      	mov	r5, r1
 800cd78:	4691      	mov	r9, r2
 800cd7a:	461e      	mov	r6, r3
 800cd7c:	f007 fd60 	bl	8014840 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800cd80:	2800      	cmp	r0, #0
 800cd82:	f000 809c 	beq.w	800cebe <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x152>
 800cd86:	6823      	ldr	r3, [r4, #0]
 800cd88:	4620      	mov	r0, r4
 800cd8a:	f8df b194 	ldr.w	fp, [pc, #404]	; 800cf20 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>
 800cd8e:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800cd92:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800cd94:	4798      	blx	r3
 800cd96:	6823      	ldr	r3, [r4, #0]
 800cd98:	4620      	mov	r0, r4
 800cd9a:	f8df a188 	ldr.w	sl, [pc, #392]	; 800cf24 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800cd9e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800cda0:	4798      	blx	r3
 800cda2:	f8bb 3000 	ldrh.w	r3, [fp]
 800cda6:	4f5b      	ldr	r7, [pc, #364]	; (800cf14 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 800cda8:	9301      	str	r3, [sp, #4]
 800cdaa:	f8ba 3000 	ldrh.w	r3, [sl]
 800cdae:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800cdb2:	4640      	mov	r0, r8
 800cdb4:	9302      	str	r3, [sp, #8]
 800cdb6:	883b      	ldrh	r3, [r7, #0]
 800cdb8:	9303      	str	r3, [sp, #12]
 800cdba:	4b57      	ldr	r3, [pc, #348]	; (800cf18 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800cdbc:	881a      	ldrh	r2, [r3, #0]
 800cdbe:	9305      	str	r3, [sp, #20]
 800cdc0:	9204      	str	r2, [sp, #16]
 800cdc2:	f007 fe9d 	bl	8014b00 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800cdc6:	8038      	strh	r0, [r7, #0]
 800cdc8:	4640      	mov	r0, r8
 800cdca:	f007 fedd 	bl	8014b88 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800cdce:	9b05      	ldr	r3, [sp, #20]
 800cdd0:	8018      	strh	r0, [r3, #0]
 800cdd2:	4b52      	ldr	r3, [pc, #328]	; (800cf1c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800cdd4:	781b      	ldrb	r3, [r3, #0]
 800cdd6:	2b00      	cmp	r3, #0
 800cdd8:	d174      	bne.n	800cec4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x158>
 800cdda:	883b      	ldrh	r3, [r7, #0]
 800cddc:	f8aa 0000 	strh.w	r0, [sl]
 800cde0:	f8ab 3000 	strh.w	r3, [fp]
 800cde4:	4648      	mov	r0, r9
 800cde6:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 800cdea:	f007 fd29 	bl	8014840 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800cdee:	2200      	movs	r2, #0
 800cdf0:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 800cdf4:	4611      	mov	r1, r2
 800cdf6:	4628      	mov	r0, r5
 800cdf8:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800cdfc:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800ce00:	f7f5 fbd6 	bl	80025b0 <_ZN8touchgfx8Drawable5setXYEss>
 800ce04:	2301      	movs	r3, #1
 800ce06:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 800ce0a:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 800ce0e:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800ce12:	2b00      	cmp	r3, #0
 800ce14:	dd5c      	ble.n	800ced0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x164>
 800ce16:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800ce1a:	2b00      	cmp	r3, #0
 800ce1c:	dd58      	ble.n	800ced0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x164>
 800ce1e:	462a      	mov	r2, r5
 800ce20:	ab0a      	add	r3, sp, #40	; 0x28
 800ce22:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800ce26:	6851      	ldr	r1, [r2, #4]
 800ce28:	c303      	stmia	r3!, {r0, r1}
 800ce2a:	4631      	mov	r1, r6
 800ce2c:	a80a      	add	r0, sp, #40	; 0x28
 800ce2e:	f7ff fbf9 	bl	800c624 <_ZN8touchgfx4RectaNERKS0_>
 800ce32:	4b38      	ldr	r3, [pc, #224]	; (800cf14 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 800ce34:	2100      	movs	r1, #0
 800ce36:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ce3a:	4b37      	ldr	r3, [pc, #220]	; (800cf18 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800ce3c:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800ce40:	aa0a      	add	r2, sp, #40	; 0x28
 800ce42:	f9b3 3000 	ldrsh.w	r3, [r3]
 800ce46:	910c      	str	r1, [sp, #48]	; 0x30
 800ce48:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800ce4c:	ab08      	add	r3, sp, #32
 800ce4e:	e892 0003 	ldmia.w	r2, {r0, r1}
 800ce52:	e883 0003 	stmia.w	r3, {r0, r1}
 800ce56:	4618      	mov	r0, r3
 800ce58:	a90c      	add	r1, sp, #48	; 0x30
 800ce5a:	f7ff fbe3 	bl	800c624 <_ZN8touchgfx4RectaNERKS0_>
 800ce5e:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 800ce60:	2b00      	cmp	r3, #0
 800ce62:	d13c      	bne.n	800cede <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x172>
 800ce64:	2000      	movs	r0, #0
 800ce66:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 800ce6a:	2600      	movs	r6, #0
 800ce6c:	696b      	ldr	r3, [r5, #20]
 800ce6e:	a908      	add	r1, sp, #32
 800ce70:	682a      	ldr	r2, [r5, #0]
 800ce72:	4628      	mov	r0, r5
 800ce74:	9305      	str	r3, [sp, #20]
 800ce76:	616e      	str	r6, [r5, #20]
 800ce78:	6892      	ldr	r2, [r2, #8]
 800ce7a:	4790      	blx	r2
 800ce7c:	9b05      	ldr	r3, [sp, #20]
 800ce7e:	4652      	mov	r2, sl
 800ce80:	4649      	mov	r1, r9
 800ce82:	616b      	str	r3, [r5, #20]
 800ce84:	4628      	mov	r0, r5
 800ce86:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 800ce8a:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 800ce8e:	f7f5 fb8f 	bl	80025b0 <_ZN8touchgfx8Drawable5setXYEss>
 800ce92:	9a01      	ldr	r2, [sp, #4]
 800ce94:	4b22      	ldr	r3, [pc, #136]	; (800cf20 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800ce96:	4620      	mov	r0, r4
 800ce98:	801a      	strh	r2, [r3, #0]
 800ce9a:	9a02      	ldr	r2, [sp, #8]
 800ce9c:	4b21      	ldr	r3, [pc, #132]	; (800cf24 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800ce9e:	801a      	strh	r2, [r3, #0]
 800cea0:	9a03      	ldr	r2, [sp, #12]
 800cea2:	4b1c      	ldr	r3, [pc, #112]	; (800cf14 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 800cea4:	801a      	strh	r2, [r3, #0]
 800cea6:	4b1c      	ldr	r3, [pc, #112]	; (800cf18 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800cea8:	9a04      	ldr	r2, [sp, #16]
 800ceaa:	801a      	strh	r2, [r3, #0]
 800ceac:	6823      	ldr	r3, [r4, #0]
 800ceae:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 800ceb2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ceb4:	4798      	blx	r3
 800ceb6:	6823      	ldr	r3, [r4, #0]
 800ceb8:	4620      	mov	r0, r4
 800ceba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800cebc:	4798      	blx	r3
 800cebe:	b00f      	add	sp, #60	; 0x3c
 800cec0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cec4:	883b      	ldrh	r3, [r7, #0]
 800cec6:	f8ab 0000 	strh.w	r0, [fp]
 800ceca:	f8aa 3000 	strh.w	r3, [sl]
 800cece:	e789      	b.n	800cde4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x78>
 800ced0:	462a      	mov	r2, r5
 800ced2:	ab0a      	add	r3, sp, #40	; 0x28
 800ced4:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800ced8:	6851      	ldr	r1, [r2, #4]
 800ceda:	c303      	stmia	r3!, {r0, r1}
 800cedc:	e7a9      	b.n	800ce32 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc6>
 800cede:	a807      	add	r0, sp, #28
 800cee0:	f007 ffb4 	bl	8014e4c <_ZNK8touchgfx6Bitmap9getFormatEv>
 800cee4:	4606      	mov	r6, r0
 800cee6:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800cee8:	6803      	ldr	r3, [r0, #0]
 800ceea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ceec:	4798      	blx	r3
 800ceee:	4286      	cmp	r6, r0
 800cef0:	d1b8      	bne.n	800ce64 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xf8>
 800cef2:	f7f6 f853 	bl	8002f9c <_ZN8touchgfx3HAL3lcdEv>
 800cef6:	6803      	ldr	r3, [r0, #0]
 800cef8:	4606      	mov	r6, r0
 800cefa:	a807      	add	r0, sp, #28
 800cefc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800cefe:	9305      	str	r3, [sp, #20]
 800cf00:	f007 ffa4 	bl	8014e4c <_ZNK8touchgfx6Bitmap9getFormatEv>
 800cf04:	9b05      	ldr	r3, [sp, #20]
 800cf06:	4601      	mov	r1, r0
 800cf08:	4630      	mov	r0, r6
 800cf0a:	4798      	blx	r3
 800cf0c:	f080 0001 	eor.w	r0, r0, #1
 800cf10:	b2c0      	uxtb	r0, r0
 800cf12:	e7a8      	b.n	800ce66 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800cf14:	2400e070 	.word	0x2400e070
 800cf18:	2400e072 	.word	0x2400e072
 800cf1c:	2400e074 	.word	0x2400e074
 800cf20:	2400e076 	.word	0x2400e076
 800cf24:	2400e078 	.word	0x2400e078

0800cf28 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800cf28:	4b07      	ldr	r3, [pc, #28]	; (800cf48 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800cf2a:	b510      	push	{r4, lr}
 800cf2c:	781b      	ldrb	r3, [r3, #0]
 800cf2e:	4604      	mov	r4, r0
 800cf30:	b13b      	cbz	r3, 800cf42 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800cf32:	6803      	ldr	r3, [r0, #0]
 800cf34:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800cf36:	4798      	blx	r3
 800cf38:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800cf3a:	4283      	cmp	r3, r0
 800cf3c:	d101      	bne.n	800cf42 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800cf3e:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800cf40:	bd10      	pop	{r4, pc}
 800cf42:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800cf44:	e7fc      	b.n	800cf40 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800cf46:	bf00      	nop
 800cf48:	2400e07a 	.word	0x2400e07a

0800cf4c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800cf4c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800cf50:	b08a      	sub	sp, #40	; 0x28
 800cf52:	4692      	mov	sl, r2
 800cf54:	461d      	mov	r5, r3
 800cf56:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800cf5a:	f8bd 9054 	ldrh.w	r9, [sp, #84]	; 0x54
 800cf5e:	2400      	movs	r4, #0
 800cf60:	f8bd 8048 	ldrh.w	r8, [sp, #72]	; 0x48
 800cf64:	4606      	mov	r6, r0
 800cf66:	f8bd 704c 	ldrh.w	r7, [sp, #76]	; 0x4c
 800cf6a:	fb09 a505 	mla	r5, r9, r5, sl
 800cf6e:	9404      	str	r4, [sp, #16]
 800cf70:	f8ad 8018 	strh.w	r8, [sp, #24]
 800cf74:	f8ad 701a 	strh.w	r7, [sp, #26]
 800cf78:	f88d 4020 	strb.w	r4, [sp, #32]
 800cf7c:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800cf80:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800cf84:	f8ad 301c 	strh.w	r3, [sp, #28]
 800cf88:	f7ff ffce 	bl	800cf28 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800cf8c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800cf90:	f8ad 901e 	strh.w	r9, [sp, #30]
 800cf94:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800cf98:	9505      	str	r5, [sp, #20]
 800cf9a:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 800cf9e:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800cfa2:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800cfa6:	f1b8 0f00 	cmp.w	r8, #0
 800cfaa:	d000      	beq.n	800cfae <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x62>
 800cfac:	b937      	cbnz	r7, 800cfbc <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x70>
 800cfae:	4b0d      	ldr	r3, [pc, #52]	; (800cfe4 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x98>)
 800cfb0:	f240 2102 	movw	r1, #514	; 0x202
 800cfb4:	4a0c      	ldr	r2, [pc, #48]	; (800cfe8 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x9c>)
 800cfb6:	480d      	ldr	r0, [pc, #52]	; (800cfec <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0xa0>)
 800cfb8:	f012 fe0e 	bl	801fbd8 <__assert_func>
 800cfbc:	6833      	ldr	r3, [r6, #0]
 800cfbe:	4630      	mov	r0, r6
 800cfc0:	9c01      	ldr	r4, [sp, #4]
 800cfc2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800cfc4:	4798      	blx	r3
 800cfc6:	4220      	tst	r0, r4
 800cfc8:	d104      	bne.n	800cfd4 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x88>
 800cfca:	4b09      	ldr	r3, [pc, #36]	; (800cff0 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0xa4>)
 800cfcc:	f240 2103 	movw	r1, #515	; 0x203
 800cfd0:	4a05      	ldr	r2, [pc, #20]	; (800cfe8 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x9c>)
 800cfd2:	e7f0      	b.n	800cfb6 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x6a>
 800cfd4:	6870      	ldr	r0, [r6, #4]
 800cfd6:	a901      	add	r1, sp, #4
 800cfd8:	6803      	ldr	r3, [r0, #0]
 800cfda:	685b      	ldr	r3, [r3, #4]
 800cfdc:	4798      	blx	r3
 800cfde:	b00a      	add	sp, #40	; 0x28
 800cfe0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800cfe4:	08022dfb 	.word	0x08022dfb
 800cfe8:	08023054 	.word	0x08023054
 800cfec:	08022fa6 	.word	0x08022fa6
 800cff0:	08022e33 	.word	0x08022e33

0800cff4 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800cff4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cff8:	b08b      	sub	sp, #44	; 0x2c
 800cffa:	4693      	mov	fp, r2
 800cffc:	461d      	mov	r5, r3
 800cffe:	2400      	movs	r4, #0
 800d000:	f8bd 9058 	ldrh.w	r9, [sp, #88]	; 0x58
 800d004:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800d008:	468a      	mov	sl, r1
 800d00a:	f8bd 8050 	ldrh.w	r8, [sp, #80]	; 0x50
 800d00e:	fb09 b505 	mla	r5, r9, r5, fp
 800d012:	f8bd 7054 	ldrh.w	r7, [sp, #84]	; 0x54
 800d016:	4606      	mov	r6, r0
 800d018:	9404      	str	r4, [sp, #16]
 800d01a:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800d01e:	f7ff ff83 	bl	800cf28 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800d022:	f8ad 8018 	strh.w	r8, [sp, #24]
 800d026:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800d02a:	f8ad 701a 	strh.w	r7, [sp, #26]
 800d02e:	f8ad 401c 	strh.w	r4, [sp, #28]
 800d032:	9505      	str	r5, [sp, #20]
 800d034:	f8ad 901e 	strh.w	r9, [sp, #30]
 800d038:	f8cd a010 	str.w	sl, [sp, #16]
 800d03c:	f8ad 4020 	strh.w	r4, [sp, #32]
 800d040:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800d044:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800d048:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800d04c:	f1b8 0f00 	cmp.w	r8, #0
 800d050:	d000      	beq.n	800d054 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x60>
 800d052:	b937      	cbnz	r7, 800d062 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x6e>
 800d054:	4b0d      	ldr	r3, [pc, #52]	; (800d08c <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x98>)
 800d056:	f240 2119 	movw	r1, #537	; 0x219
 800d05a:	4a0d      	ldr	r2, [pc, #52]	; (800d090 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x9c>)
 800d05c:	480d      	ldr	r0, [pc, #52]	; (800d094 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0xa0>)
 800d05e:	f012 fdbb 	bl	801fbd8 <__assert_func>
 800d062:	6833      	ldr	r3, [r6, #0]
 800d064:	4630      	mov	r0, r6
 800d066:	9c01      	ldr	r4, [sp, #4]
 800d068:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d06a:	4798      	blx	r3
 800d06c:	4220      	tst	r0, r4
 800d06e:	d104      	bne.n	800d07a <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x86>
 800d070:	4b09      	ldr	r3, [pc, #36]	; (800d098 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0xa4>)
 800d072:	f240 211a 	movw	r1, #538	; 0x21a
 800d076:	4a06      	ldr	r2, [pc, #24]	; (800d090 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x9c>)
 800d078:	e7f0      	b.n	800d05c <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x68>
 800d07a:	6870      	ldr	r0, [r6, #4]
 800d07c:	a901      	add	r1, sp, #4
 800d07e:	6803      	ldr	r3, [r0, #0]
 800d080:	685b      	ldr	r3, [r3, #4]
 800d082:	4798      	blx	r3
 800d084:	b00b      	add	sp, #44	; 0x2c
 800d086:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d08a:	bf00      	nop
 800d08c:	08022e78 	.word	0x08022e78
 800d090:	080230ca 	.word	0x080230ca
 800d094:	08022fa6 	.word	0x08022fa6
 800d098:	08022eb0 	.word	0x08022eb0

0800d09c <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>:
 800d09c:	b508      	push	{r3, lr}
 800d09e:	290d      	cmp	r1, #13
 800d0a0:	d817      	bhi.n	800d0d2 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x36>
 800d0a2:	e8df f001 	tbb	[pc, r1]
 800d0a6:	090b      	.short	0x090b
 800d0a8:	0d0d0d07 	.word	0x0d0d0d07
 800d0ac:	1414140d 	.word	0x1414140d
 800d0b0:	0d0d1414 	.word	0x0d0d1414
 800d0b4:	2020      	movs	r0, #32
 800d0b6:	bd08      	pop	{r3, pc}
 800d0b8:	2018      	movs	r0, #24
 800d0ba:	e7fc      	b.n	800d0b6 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800d0bc:	2010      	movs	r0, #16
 800d0be:	e7fa      	b.n	800d0b6 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800d0c0:	4b05      	ldr	r3, [pc, #20]	; (800d0d8 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x3c>)
 800d0c2:	f240 2183 	movw	r1, #643	; 0x283
 800d0c6:	4a05      	ldr	r2, [pc, #20]	; (800d0dc <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x40>)
 800d0c8:	4805      	ldr	r0, [pc, #20]	; (800d0e0 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x44>)
 800d0ca:	f012 fd85 	bl	801fbd8 <__assert_func>
 800d0ce:	2008      	movs	r0, #8
 800d0d0:	e7f1      	b.n	800d0b6 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800d0d2:	2000      	movs	r0, #0
 800d0d4:	e7ef      	b.n	800d0b6 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800d0d6:	bf00      	nop
 800d0d8:	08023022 	.word	0x08023022
 800d0dc:	080233f5 	.word	0x080233f5
 800d0e0:	08022fa6 	.word	0x08022fa6

0800d0e4 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>:
 800d0e4:	b570      	push	{r4, r5, r6, lr}
 800d0e6:	460d      	mov	r5, r1
 800d0e8:	f89d 1014 	ldrb.w	r1, [sp, #20]
 800d0ec:	4616      	mov	r6, r2
 800d0ee:	461c      	mov	r4, r3
 800d0f0:	f7ff ffd4 	bl	800d09c <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>
 800d0f4:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 800d0f8:	10c0      	asrs	r0, r0, #3
 800d0fa:	fb06 5101 	mla	r1, r6, r1, r5
 800d0fe:	fb00 4001 	mla	r0, r0, r1, r4
 800d102:	bd70      	pop	{r4, r5, r6, pc}

0800d104 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800d104:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d108:	b08c      	sub	sp, #48	; 0x30
 800d10a:	f04f 0c00 	mov.w	ip, #0
 800d10e:	4604      	mov	r4, r0
 800d110:	469a      	mov	sl, r3
 800d112:	f89d 506c 	ldrb.w	r5, [sp, #108]	; 0x6c
 800d116:	f8bd 7054 	ldrh.w	r7, [sp, #84]	; 0x54
 800d11a:	2d0b      	cmp	r5, #11
 800d11c:	f8bd 6058 	ldrh.w	r6, [sp, #88]	; 0x58
 800d120:	f89d 3060 	ldrb.w	r3, [sp, #96]	; 0x60
 800d124:	f89d 0064 	ldrb.w	r0, [sp, #100]	; 0x64
 800d128:	f8bd 9068 	ldrh.w	r9, [sp, #104]	; 0x68
 800d12c:	f89d 8070 	ldrb.w	r8, [sp, #112]	; 0x70
 800d130:	f8cd c018 	str.w	ip, [sp, #24]
 800d134:	d130      	bne.n	800d198 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x94>
 800d136:	2080      	movs	r0, #128	; 0x80
 800d138:	9205      	str	r2, [sp, #20]
 800d13a:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 800d13e:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800d142:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 800d146:	f8ad 7020 	strh.w	r7, [sp, #32]
 800d14a:	f8ad 6022 	strh.w	r6, [sp, #34]	; 0x22
 800d14e:	e9cd 0103 	strd	r0, r1, [sp, #12]
 800d152:	4620      	mov	r0, r4
 800d154:	f7ff fee8 	bl	800cf28 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800d158:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 800d15c:	4603      	mov	r3, r0
 800d15e:	4651      	mov	r1, sl
 800d160:	4620      	mov	r0, r4
 800d162:	e9cd 9800 	strd	r9, r8, [sp]
 800d166:	f7ff ffbd 	bl	800d0e4 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800d16a:	f89d 3074 	ldrb.w	r3, [sp, #116]	; 0x74
 800d16e:	9007      	str	r0, [sp, #28]
 800d170:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 800d174:	2300      	movs	r3, #0
 800d176:	f8ad 9026 	strh.w	r9, [sp, #38]	; 0x26
 800d17a:	f88d 5029 	strb.w	r5, [sp, #41]	; 0x29
 800d17e:	f88d 802a 	strb.w	r8, [sp, #42]	; 0x2a
 800d182:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800d186:	b107      	cbz	r7, 800d18a <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x86>
 800d188:	b9d6      	cbnz	r6, 800d1c0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbc>
 800d18a:	4b17      	ldr	r3, [pc, #92]	; (800d1e8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe4>)
 800d18c:	f240 11c9 	movw	r1, #457	; 0x1c9
 800d190:	4a16      	ldr	r2, [pc, #88]	; (800d1ec <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe8>)
 800d192:	4817      	ldr	r0, [pc, #92]	; (800d1f0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xec>)
 800d194:	f012 fd20 	bl	801fbd8 <__assert_func>
 800d198:	2d02      	cmp	r5, #2
 800d19a:	d108      	bne.n	800d1ae <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
 800d19c:	2bff      	cmp	r3, #255	; 0xff
 800d19e:	d104      	bne.n	800d1aa <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xa6>
 800d1a0:	2800      	cmp	r0, #0
 800d1a2:	bf14      	ite	ne
 800d1a4:	2040      	movne	r0, #64	; 0x40
 800d1a6:	2020      	moveq	r0, #32
 800d1a8:	e7c6      	b.n	800d138 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 800d1aa:	2040      	movs	r0, #64	; 0x40
 800d1ac:	e7c4      	b.n	800d138 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 800d1ae:	2bff      	cmp	r3, #255	; 0xff
 800d1b0:	d104      	bne.n	800d1bc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb8>
 800d1b2:	2800      	cmp	r0, #0
 800d1b4:	bf14      	ite	ne
 800d1b6:	2004      	movne	r0, #4
 800d1b8:	2001      	moveq	r0, #1
 800d1ba:	e7bd      	b.n	800d138 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 800d1bc:	2004      	movs	r0, #4
 800d1be:	e7bb      	b.n	800d138 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 800d1c0:	6823      	ldr	r3, [r4, #0]
 800d1c2:	4620      	mov	r0, r4
 800d1c4:	9d03      	ldr	r5, [sp, #12]
 800d1c6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d1c8:	4798      	blx	r3
 800d1ca:	4228      	tst	r0, r5
 800d1cc:	d104      	bne.n	800d1d8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xd4>
 800d1ce:	4b09      	ldr	r3, [pc, #36]	; (800d1f4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xf0>)
 800d1d0:	f44f 71e5 	mov.w	r1, #458	; 0x1ca
 800d1d4:	4a05      	ldr	r2, [pc, #20]	; (800d1ec <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe8>)
 800d1d6:	e7dc      	b.n	800d192 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x8e>
 800d1d8:	6860      	ldr	r0, [r4, #4]
 800d1da:	a903      	add	r1, sp, #12
 800d1dc:	6803      	ldr	r3, [r0, #0]
 800d1de:	685b      	ldr	r3, [r3, #4]
 800d1e0:	4798      	blx	r3
 800d1e2:	b00c      	add	sp, #48	; 0x30
 800d1e4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d1e8:	08022dfb 	.word	0x08022dfb
 800d1ec:	08023283 	.word	0x08023283
 800d1f0:	08022fa6 	.word	0x08022fa6
 800d1f4:	08022e33 	.word	0x08022e33

0800d1f8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800d1f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d1fc:	b08d      	sub	sp, #52	; 0x34
 800d1fe:	469b      	mov	fp, r3
 800d200:	2500      	movs	r5, #0
 800d202:	4604      	mov	r4, r0
 800d204:	f89d 7060 	ldrb.w	r7, [sp, #96]	; 0x60
 800d208:	4692      	mov	sl, r2
 800d20a:	f89d 6068 	ldrb.w	r6, [sp, #104]	; 0x68
 800d20e:	4689      	mov	r9, r1
 800d210:	2fff      	cmp	r7, #255	; 0xff
 800d212:	f8bd 8064 	ldrh.w	r8, [sp, #100]	; 0x64
 800d216:	9506      	str	r5, [sp, #24]
 800d218:	bf14      	ite	ne
 800d21a:	2308      	movne	r3, #8
 800d21c:	2302      	moveq	r3, #2
 800d21e:	e9cd 3503 	strd	r3, r5, [sp, #12]
 800d222:	f7ff fe81 	bl	800cf28 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800d226:	465a      	mov	r2, fp
 800d228:	4603      	mov	r3, r0
 800d22a:	4651      	mov	r1, sl
 800d22c:	4620      	mov	r0, r4
 800d22e:	e9cd 8600 	strd	r8, r6, [sp]
 800d232:	f7ff ff57 	bl	800d0e4 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800d236:	f8bd 3058 	ldrh.w	r3, [sp, #88]	; 0x58
 800d23a:	f8ad 5024 	strh.w	r5, [sp, #36]	; 0x24
 800d23e:	f8ad 3020 	strh.w	r3, [sp, #32]
 800d242:	f8bd 305c 	ldrh.w	r3, [sp, #92]	; 0x5c
 800d246:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800d24a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800d24e:	f89d 306c 	ldrb.w	r3, [sp, #108]	; 0x6c
 800d252:	9d03      	ldr	r5, [sp, #12]
 800d254:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 800d258:	6823      	ldr	r3, [r4, #0]
 800d25a:	9007      	str	r0, [sp, #28]
 800d25c:	4620      	mov	r0, r4
 800d25e:	f8ad 8026 	strh.w	r8, [sp, #38]	; 0x26
 800d262:	f8cd 9018 	str.w	r9, [sp, #24]
 800d266:	f88d 7028 	strb.w	r7, [sp, #40]	; 0x28
 800d26a:	f88d 6029 	strb.w	r6, [sp, #41]	; 0x29
 800d26e:	f88d 602a 	strb.w	r6, [sp, #42]	; 0x2a
 800d272:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d274:	4798      	blx	r3
 800d276:	4228      	tst	r0, r5
 800d278:	d106      	bne.n	800d288 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x90>
 800d27a:	4b07      	ldr	r3, [pc, #28]	; (800d298 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0xa0>)
 800d27c:	f44f 710c 	mov.w	r1, #560	; 0x230
 800d280:	4a06      	ldr	r2, [pc, #24]	; (800d29c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0xa4>)
 800d282:	4807      	ldr	r0, [pc, #28]	; (800d2a0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0xa8>)
 800d284:	f012 fca8 	bl	801fbd8 <__assert_func>
 800d288:	6860      	ldr	r0, [r4, #4]
 800d28a:	a903      	add	r1, sp, #12
 800d28c:	6803      	ldr	r3, [r0, #0]
 800d28e:	685b      	ldr	r3, [r3, #4]
 800d290:	4798      	blx	r3
 800d292:	b00d      	add	sp, #52	; 0x34
 800d294:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d298:	08022e33 	.word	0x08022e33
 800d29c:	0802335a 	.word	0x0802335a
 800d2a0:	08022fa6 	.word	0x08022fa6

0800d2a4 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800d2a4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800d2a8:	461f      	mov	r7, r3
 800d2aa:	4b0b      	ldr	r3, [pc, #44]	; (800d2d8 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800d2ac:	460d      	mov	r5, r1
 800d2ae:	4616      	mov	r6, r2
 800d2b0:	f8b3 8000 	ldrh.w	r8, [r3]
 800d2b4:	4604      	mov	r4, r0
 800d2b6:	f7f5 fe71 	bl	8002f9c <_ZN8touchgfx3HAL3lcdEv>
 800d2ba:	6803      	ldr	r3, [r0, #0]
 800d2bc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d2be:	4798      	blx	r3
 800d2c0:	463b      	mov	r3, r7
 800d2c2:	4632      	mov	r2, r6
 800d2c4:	4629      	mov	r1, r5
 800d2c6:	e9cd 8000 	strd	r8, r0, [sp]
 800d2ca:	4620      	mov	r0, r4
 800d2cc:	f7ff ff0a 	bl	800d0e4 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800d2d0:	b002      	add	sp, #8
 800d2d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d2d6:	bf00      	nop
 800d2d8:	2400e076 	.word	0x2400e076

0800d2dc <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800d2dc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d2e0:	b08b      	sub	sp, #44	; 0x2c
 800d2e2:	4699      	mov	r9, r3
 800d2e4:	4690      	mov	r8, r2
 800d2e6:	4604      	mov	r4, r0
 800d2e8:	f8bd 305c 	ldrh.w	r3, [sp, #92]	; 0x5c
 800d2ec:	2500      	movs	r5, #0
 800d2ee:	f8bd 7048 	ldrh.w	r7, [sp, #72]	; 0x48
 800d2f2:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800d2f6:	9504      	str	r5, [sp, #16]
 800d2f8:	f8ad 7018 	strh.w	r7, [sp, #24]
 800d2fc:	f8ad 601a 	strh.w	r6, [sp, #26]
 800d300:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800d304:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800d308:	f8ad 301c 	strh.w	r3, [sp, #28]
 800d30c:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800d310:	f88d 3020 	strb.w	r3, [sp, #32]
 800d314:	f7ff fe08 	bl	800cf28 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800d318:	464a      	mov	r2, r9
 800d31a:	4603      	mov	r3, r0
 800d31c:	4641      	mov	r1, r8
 800d31e:	4620      	mov	r0, r4
 800d320:	f7ff ffc0 	bl	800d2a4 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800d324:	4b19      	ldr	r3, [pc, #100]	; (800d38c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb0>)
 800d326:	9005      	str	r0, [sp, #20]
 800d328:	881b      	ldrh	r3, [r3, #0]
 800d32a:	f8ad 301e 	strh.w	r3, [sp, #30]
 800d32e:	f7f5 fe35 	bl	8002f9c <_ZN8touchgfx3HAL3lcdEv>
 800d332:	6803      	ldr	r3, [r0, #0]
 800d334:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d336:	4798      	blx	r3
 800d338:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 800d33c:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800d340:	b107      	cbz	r7, 800d344 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x68>
 800d342:	b936      	cbnz	r6, 800d352 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x76>
 800d344:	4b12      	ldr	r3, [pc, #72]	; (800d390 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb4>)
 800d346:	f44f 71f3 	mov.w	r1, #486	; 0x1e6
 800d34a:	4a12      	ldr	r2, [pc, #72]	; (800d394 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb8>)
 800d34c:	4812      	ldr	r0, [pc, #72]	; (800d398 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xbc>)
 800d34e:	f012 fc43 	bl	801fbd8 <__assert_func>
 800d352:	6823      	ldr	r3, [r4, #0]
 800d354:	4620      	mov	r0, r4
 800d356:	9e01      	ldr	r6, [sp, #4]
 800d358:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d35a:	4798      	blx	r3
 800d35c:	4230      	tst	r0, r6
 800d35e:	d104      	bne.n	800d36a <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x8e>
 800d360:	4b0e      	ldr	r3, [pc, #56]	; (800d39c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xc0>)
 800d362:	f240 11e7 	movw	r1, #487	; 0x1e7
 800d366:	4a0b      	ldr	r2, [pc, #44]	; (800d394 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb8>)
 800d368:	e7f0      	b.n	800d34c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x70>
 800d36a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800d36c:	a901      	add	r1, sp, #4
 800d36e:	6860      	ldr	r0, [r4, #4]
 800d370:	9304      	str	r3, [sp, #16]
 800d372:	f89d 3060 	ldrb.w	r3, [sp, #96]	; 0x60
 800d376:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 800d37a:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800d37e:	6803      	ldr	r3, [r0, #0]
 800d380:	685b      	ldr	r3, [r3, #4]
 800d382:	4798      	blx	r3
 800d384:	b00b      	add	sp, #44	; 0x2c
 800d386:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d38a:	bf00      	nop
 800d38c:	2400e076 	.word	0x2400e076
 800d390:	08022dfb 	.word	0x08022dfb
 800d394:	0802312f 	.word	0x0802312f
 800d398:	08022fa6 	.word	0x08022fa6
 800d39c:	08022e33 	.word	0x08022e33

0800d3a0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800d3a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d3a2:	b08d      	sub	sp, #52	; 0x34
 800d3a4:	4604      	mov	r4, r0
 800d3a6:	466b      	mov	r3, sp
 800d3a8:	e883 0006 	stmia.w	r3, {r1, r2}
 800d3ac:	4b21      	ldr	r3, [pc, #132]	; (800d434 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x94>)
 800d3ae:	781b      	ldrb	r3, [r3, #0]
 800d3b0:	b933      	cbnz	r3, 800d3c0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x20>
 800d3b2:	4b21      	ldr	r3, [pc, #132]	; (800d438 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x98>)
 800d3b4:	f240 2141 	movw	r1, #577	; 0x241
 800d3b8:	4a20      	ldr	r2, [pc, #128]	; (800d43c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x9c>)
 800d3ba:	4821      	ldr	r0, [pc, #132]	; (800d440 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0xa0>)
 800d3bc:	f012 fc0c 	bl	801fbd8 <__assert_func>
 800d3c0:	2300      	movs	r3, #0
 800d3c2:	2501      	movs	r5, #1
 800d3c4:	f8bd 6000 	ldrh.w	r6, [sp]
 800d3c8:	9306      	str	r3, [sp, #24]
 800d3ca:	6803      	ldr	r3, [r0, #0]
 800d3cc:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800d3d0:	9503      	str	r5, [sp, #12]
 800d3d2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800d3d4:	4798      	blx	r3
 800d3d6:	463a      	mov	r2, r7
 800d3d8:	4631      	mov	r1, r6
 800d3da:	4603      	mov	r3, r0
 800d3dc:	4620      	mov	r0, r4
 800d3de:	f7ff ff61 	bl	800d2a4 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800d3e2:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800d3e4:	9004      	str	r0, [sp, #16]
 800d3e6:	9307      	str	r3, [sp, #28]
 800d3e8:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800d3ec:	f8ad 3020 	strh.w	r3, [sp, #32]
 800d3f0:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800d3f4:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800d3f8:	4b12      	ldr	r3, [pc, #72]	; (800d444 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0xa4>)
 800d3fa:	881b      	ldrh	r3, [r3, #0]
 800d3fc:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800d400:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800d404:	f7f5 fdca 	bl	8002f9c <_ZN8touchgfx3HAL3lcdEv>
 800d408:	6803      	ldr	r3, [r0, #0]
 800d40a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d40c:	4798      	blx	r3
 800d40e:	23ff      	movs	r3, #255	; 0xff
 800d410:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800d414:	a903      	add	r1, sp, #12
 800d416:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800d41a:	6860      	ldr	r0, [r4, #4]
 800d41c:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800d420:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800d424:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800d428:	6803      	ldr	r3, [r0, #0]
 800d42a:	685b      	ldr	r3, [r3, #4]
 800d42c:	4798      	blx	r3
 800d42e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800d430:	b00d      	add	sp, #52	; 0x34
 800d432:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d434:	2400e07b 	.word	0x2400e07b
 800d438:	08022efa 	.word	0x08022efa
 800d43c:	080231d9 	.word	0x080231d9
 800d440:	08022fa6 	.word	0x08022fa6
 800d444:	2400e076 	.word	0x2400e076

0800d448 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800d448:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d44c:	b08c      	sub	sp, #48	; 0x30
 800d44e:	461e      	mov	r6, r3
 800d450:	2300      	movs	r3, #0
 800d452:	4604      	mov	r4, r0
 800d454:	466d      	mov	r5, sp
 800d456:	9306      	str	r3, [sp, #24]
 800d458:	6803      	ldr	r3, [r0, #0]
 800d45a:	e885 0006 	stmia.w	r5, {r1, r2}
 800d45e:	2501      	movs	r5, #1
 800d460:	f8bd 7000 	ldrh.w	r7, [sp]
 800d464:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800d468:	9503      	str	r5, [sp, #12]
 800d46a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800d46c:	4798      	blx	r3
 800d46e:	4642      	mov	r2, r8
 800d470:	4639      	mov	r1, r7
 800d472:	4603      	mov	r3, r0
 800d474:	4620      	mov	r0, r4
 800d476:	f7ff ff15 	bl	800d2a4 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800d47a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800d47e:	9004      	str	r0, [sp, #16]
 800d480:	f8ad 3020 	strh.w	r3, [sp, #32]
 800d484:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800d488:	9607      	str	r6, [sp, #28]
 800d48a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800d48e:	4b10      	ldr	r3, [pc, #64]	; (800d4d0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800d490:	881b      	ldrh	r3, [r3, #0]
 800d492:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800d496:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800d498:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800d49c:	f7f5 fd7e 	bl	8002f9c <_ZN8touchgfx3HAL3lcdEv>
 800d4a0:	6803      	ldr	r3, [r0, #0]
 800d4a2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d4a4:	4798      	blx	r3
 800d4a6:	23ff      	movs	r3, #255	; 0xff
 800d4a8:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800d4ac:	a903      	add	r1, sp, #12
 800d4ae:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800d4b2:	6860      	ldr	r0, [r4, #4]
 800d4b4:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800d4b8:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800d4bc:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800d4c0:	6803      	ldr	r3, [r0, #0]
 800d4c2:	685b      	ldr	r3, [r3, #4]
 800d4c4:	4798      	blx	r3
 800d4c6:	4630      	mov	r0, r6
 800d4c8:	b00c      	add	sp, #48	; 0x30
 800d4ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d4ce:	bf00      	nop
 800d4d0:	2400e076 	.word	0x2400e076

0800d4d4 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800d4d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d4d6:	b085      	sub	sp, #20
 800d4d8:	4605      	mov	r5, r0
 800d4da:	ac02      	add	r4, sp, #8
 800d4dc:	e884 0006 	stmia.w	r4, {r1, r2}
 800d4e0:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800d4e4:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800d4e8:	f7ff fd1e 	bl	800cf28 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800d4ec:	4631      	mov	r1, r6
 800d4ee:	4603      	mov	r3, r0
 800d4f0:	463a      	mov	r2, r7
 800d4f2:	4628      	mov	r0, r5
 800d4f4:	f7ff fed6 	bl	800d2a4 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800d4f8:	4a05      	ldr	r2, [pc, #20]	; (800d510 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800d4fa:	682b      	ldr	r3, [r5, #0]
 800d4fc:	8812      	ldrh	r2, [r2, #0]
 800d4fe:	9200      	str	r2, [sp, #0]
 800d500:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 800d502:	4603      	mov	r3, r0
 800d504:	4628      	mov	r0, r5
 800d506:	e894 0006 	ldmia.w	r4, {r1, r2}
 800d50a:	47b0      	blx	r6
 800d50c:	b005      	add	sp, #20
 800d50e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d510:	2400e076 	.word	0x2400e076

0800d514 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800d514:	b570      	push	{r4, r5, r6, lr}
 800d516:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 800d51a:	4604      	mov	r4, r0
 800d51c:	b19b      	cbz	r3, 800d546 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800d51e:	2002      	movs	r0, #2
 800d520:	f7f4 f903 	bl	800172a <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800d524:	2300      	movs	r3, #0
 800d526:	4620      	mov	r0, r4
 800d528:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800d52c:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800d530:	6823      	ldr	r3, [r4, #0]
 800d532:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 800d536:	f7ff fcf7 	bl	800cf28 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800d53a:	4601      	mov	r1, r0
 800d53c:	4620      	mov	r0, r4
 800d53e:	462b      	mov	r3, r5
 800d540:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d544:	4718      	bx	r3
 800d546:	bd70      	pop	{r4, r5, r6, pc}

0800d548 <_ZN8touchgfx3HAL12setMCUActiveEb>:
 800d548:	b570      	push	{r4, r5, r6, lr}
 800d54a:	4605      	mov	r5, r0
 800d54c:	460c      	mov	r4, r1
 800d54e:	2003      	movs	r0, #3
 800d550:	b149      	cbz	r1, 800d566 <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
 800d552:	f7f4 f8e8 	bl	8001726 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800d556:	6928      	ldr	r0, [r5, #16]
 800d558:	b168      	cbz	r0, 800d576 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800d55a:	6803      	ldr	r3, [r0, #0]
 800d55c:	2101      	movs	r1, #1
 800d55e:	695b      	ldr	r3, [r3, #20]
 800d560:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d564:	4718      	bx	r3
 800d566:	f7f4 f8df 	bl	8001728 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800d56a:	6928      	ldr	r0, [r5, #16]
 800d56c:	b118      	cbz	r0, 800d576 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800d56e:	6803      	ldr	r3, [r0, #0]
 800d570:	4621      	mov	r1, r4
 800d572:	695b      	ldr	r3, [r3, #20]
 800d574:	e7f4      	b.n	800d560 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
 800d576:	bd70      	pop	{r4, r5, r6, pc}

0800d578 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800d578:	b538      	push	{r3, r4, r5, lr}
 800d57a:	f890 3078 	ldrb.w	r3, [r0, #120]	; 0x78
 800d57e:	4604      	mov	r4, r0
 800d580:	460d      	mov	r5, r1
 800d582:	428b      	cmp	r3, r1
 800d584:	d006      	beq.n	800d594 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800d586:	6803      	ldr	r3, [r0, #0]
 800d588:	b929      	cbnz	r1, 800d596 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800d58a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800d58e:	4798      	blx	r3
 800d590:	f884 5078 	strb.w	r5, [r4, #120]	; 0x78
 800d594:	bd38      	pop	{r3, r4, r5, pc}
 800d596:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 800d59a:	e7f8      	b.n	800d58e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800d59c <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800d59c:	4b0d      	ldr	r3, [pc, #52]	; (800d5d4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800d59e:	b510      	push	{r4, lr}
 800d5a0:	781b      	ldrb	r3, [r3, #0]
 800d5a2:	4604      	mov	r4, r0
 800d5a4:	b95b      	cbnz	r3, 800d5be <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800d5a6:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800d5aa:	2b02      	cmp	r3, #2
 800d5ac:	d007      	beq.n	800d5be <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800d5ae:	6840      	ldr	r0, [r0, #4]
 800d5b0:	f000 f93c 	bl	800d82c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800d5b4:	b118      	cbz	r0, 800d5be <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800d5b6:	6862      	ldr	r2, [r4, #4]
 800d5b8:	7a53      	ldrb	r3, [r2, #9]
 800d5ba:	2b00      	cmp	r3, #0
 800d5bc:	d0fc      	beq.n	800d5b8 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800d5be:	f7f4 fbb5 	bl	8001d2c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800d5c2:	4620      	mov	r0, r4
 800d5c4:	2100      	movs	r1, #0
 800d5c6:	f7ff ffd7 	bl	800d578 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800d5ca:	4620      	mov	r0, r4
 800d5cc:	f7ff fcac 	bl	800cf28 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800d5d0:	bd10      	pop	{r4, pc}
 800d5d2:	bf00      	nop
 800d5d4:	2400e07a 	.word	0x2400e07a

0800d5d8 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800d5d8:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800d5dc:	1a13      	subs	r3, r2, r0
 800d5de:	4258      	negs	r0, r3
 800d5e0:	4158      	adcs	r0, r3
 800d5e2:	4770      	bx	lr

0800d5e4 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800d5e4:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800d5e8:	1a9b      	subs	r3, r3, r2
 800d5ea:	2b00      	cmp	r3, #0
 800d5ec:	bfdc      	itt	le
 800d5ee:	6882      	ldrle	r2, [r0, #8]
 800d5f0:	189b      	addle	r3, r3, r2
 800d5f2:	2b01      	cmp	r3, #1
 800d5f4:	bfcc      	ite	gt
 800d5f6:	2000      	movgt	r0, #0
 800d5f8:	2001      	movle	r0, #1
 800d5fa:	4770      	bx	lr

0800d5fc <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800d5fc:	6902      	ldr	r2, [r0, #16]
 800d5fe:	6843      	ldr	r3, [r0, #4]
 800d600:	2024      	movs	r0, #36	; 0x24
 800d602:	fb00 3002 	mla	r0, r0, r2, r3
 800d606:	4770      	bx	lr

0800d608 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800d608:	6803      	ldr	r3, [r0, #0]
 800d60a:	691b      	ldr	r3, [r3, #16]
 800d60c:	4718      	bx	r3

0800d60e <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800d60e:	4770      	bx	lr

0800d610 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800d610:	4770      	bx	lr

0800d612 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800d612:	4770      	bx	lr

0800d614 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800d614:	2301      	movs	r3, #1
 800d616:	b570      	push	{r4, r5, r6, lr}
 800d618:	7203      	strb	r3, [r0, #8]
 800d61a:	4604      	mov	r4, r0
 800d61c:	6840      	ldr	r0, [r0, #4]
 800d61e:	6803      	ldr	r3, [r0, #0]
 800d620:	699b      	ldr	r3, [r3, #24]
 800d622:	4798      	blx	r3
 800d624:	6803      	ldr	r3, [r0, #0]
 800d626:	4605      	mov	r5, r0
 800d628:	2b40      	cmp	r3, #64	; 0x40
 800d62a:	d039      	beq.n	800d6a0 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800d62c:	d815      	bhi.n	800d65a <_ZN8touchgfx13DMA_Interface7executeEv+0x46>
 800d62e:	2b04      	cmp	r3, #4
 800d630:	d022      	beq.n	800d678 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800d632:	d808      	bhi.n	800d646 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800d634:	2b01      	cmp	r3, #1
 800d636:	d033      	beq.n	800d6a0 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800d638:	2b02      	cmp	r3, #2
 800d63a:	d108      	bne.n	800d64e <_ZN8touchgfx13DMA_Interface7executeEv+0x3a>
 800d63c:	6823      	ldr	r3, [r4, #0]
 800d63e:	4620      	mov	r0, r4
 800d640:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d642:	4798      	blx	r3
 800d644:	e025      	b.n	800d692 <_ZN8touchgfx13DMA_Interface7executeEv+0x7e>
 800d646:	2b08      	cmp	r3, #8
 800d648:	d01e      	beq.n	800d688 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>
 800d64a:	2b20      	cmp	r3, #32
 800d64c:	d028      	beq.n	800d6a0 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800d64e:	4b17      	ldr	r3, [pc, #92]	; (800d6ac <_ZN8touchgfx13DMA_Interface7executeEv+0x98>)
 800d650:	2188      	movs	r1, #136	; 0x88
 800d652:	4a17      	ldr	r2, [pc, #92]	; (800d6b0 <_ZN8touchgfx13DMA_Interface7executeEv+0x9c>)
 800d654:	4817      	ldr	r0, [pc, #92]	; (800d6b4 <_ZN8touchgfx13DMA_Interface7executeEv+0xa0>)
 800d656:	f012 fabf 	bl	801fbd8 <__assert_func>
 800d65a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800d65e:	d01f      	beq.n	800d6a0 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800d660:	d804      	bhi.n	800d66c <_ZN8touchgfx13DMA_Interface7executeEv+0x58>
 800d662:	2b80      	cmp	r3, #128	; 0x80
 800d664:	d01c      	beq.n	800d6a0 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800d666:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800d66a:	e7ef      	b.n	800d64c <_ZN8touchgfx13DMA_Interface7executeEv+0x38>
 800d66c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800d670:	d016      	beq.n	800d6a0 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800d672:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800d676:	e7e0      	b.n	800d63a <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800d678:	6823      	ldr	r3, [r4, #0]
 800d67a:	7f01      	ldrb	r1, [r0, #28]
 800d67c:	4620      	mov	r0, r4
 800d67e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d680:	4798      	blx	r3
 800d682:	6823      	ldr	r3, [r4, #0]
 800d684:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800d686:	e006      	b.n	800d696 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800d688:	6823      	ldr	r3, [r4, #0]
 800d68a:	7f01      	ldrb	r1, [r0, #28]
 800d68c:	4620      	mov	r0, r4
 800d68e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d690:	4798      	blx	r3
 800d692:	6823      	ldr	r3, [r4, #0]
 800d694:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800d696:	4629      	mov	r1, r5
 800d698:	4620      	mov	r0, r4
 800d69a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d69e:	4718      	bx	r3
 800d6a0:	6823      	ldr	r3, [r4, #0]
 800d6a2:	4620      	mov	r0, r4
 800d6a4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d6a6:	4798      	blx	r3
 800d6a8:	e7eb      	b.n	800d682 <_ZN8touchgfx13DMA_Interface7executeEv+0x6e>
 800d6aa:	bf00      	nop
 800d6ac:	0802343e 	.word	0x0802343e
 800d6b0:	08023500 	.word	0x08023500
 800d6b4:	08023463 	.word	0x08023463

0800d6b8 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800d6b8:	b570      	push	{r4, r5, r6, lr}
 800d6ba:	4604      	mov	r4, r0
 800d6bc:	460e      	mov	r6, r1
 800d6be:	6860      	ldr	r0, [r4, #4]
 800d6c0:	6803      	ldr	r3, [r0, #0]
 800d6c2:	685b      	ldr	r3, [r3, #4]
 800d6c4:	4798      	blx	r3
 800d6c6:	2800      	cmp	r0, #0
 800d6c8:	d1f9      	bne.n	800d6be <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800d6ca:	4d0d      	ldr	r5, [pc, #52]	; (800d700 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800d6cc:	6828      	ldr	r0, [r5, #0]
 800d6ce:	6803      	ldr	r3, [r0, #0]
 800d6d0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d6d2:	4798      	blx	r3
 800d6d4:	f7f4 fb38 	bl	8001d48 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800d6d8:	6828      	ldr	r0, [r5, #0]
 800d6da:	2101      	movs	r1, #1
 800d6dc:	f7ff ff4c 	bl	800d578 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800d6e0:	6860      	ldr	r0, [r4, #4]
 800d6e2:	4631      	mov	r1, r6
 800d6e4:	6803      	ldr	r3, [r0, #0]
 800d6e6:	689b      	ldr	r3, [r3, #8]
 800d6e8:	4798      	blx	r3
 800d6ea:	6823      	ldr	r3, [r4, #0]
 800d6ec:	4620      	mov	r0, r4
 800d6ee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d6f0:	4798      	blx	r3
 800d6f2:	6828      	ldr	r0, [r5, #0]
 800d6f4:	6803      	ldr	r3, [r0, #0]
 800d6f6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d6fa:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800d6fc:	4718      	bx	r3
 800d6fe:	bf00      	nop
 800d700:	2400e07c 	.word	0x2400e07c

0800d704 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800d704:	b508      	push	{r3, lr}
 800d706:	f7f4 fb11 	bl	8001d2c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800d70a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800d70e:	f7f4 bb15 	b.w	8001d3c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800d712 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800d712:	b510      	push	{r4, lr}
 800d714:	4604      	mov	r4, r0
 800d716:	2114      	movs	r1, #20
 800d718:	f012 f881 	bl	801f81e <_ZdlPvj>
 800d71c:	4620      	mov	r0, r4
 800d71e:	bd10      	pop	{r4, pc}

0800d720 <_ZN8touchgfx13DMA_Interface5startEv>:
 800d720:	b510      	push	{r4, lr}
 800d722:	4604      	mov	r4, r0
 800d724:	6840      	ldr	r0, [r0, #4]
 800d726:	6803      	ldr	r3, [r0, #0]
 800d728:	681b      	ldr	r3, [r3, #0]
 800d72a:	4798      	blx	r3
 800d72c:	b948      	cbnz	r0, 800d742 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800d72e:	7a63      	ldrb	r3, [r4, #9]
 800d730:	b13b      	cbz	r3, 800d742 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800d732:	7a23      	ldrb	r3, [r4, #8]
 800d734:	b92b      	cbnz	r3, 800d742 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800d736:	6823      	ldr	r3, [r4, #0]
 800d738:	4620      	mov	r0, r4
 800d73a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d73c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d740:	4718      	bx	r3
 800d742:	bd10      	pop	{r4, pc}

0800d744 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800d744:	b510      	push	{r4, lr}
 800d746:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800d74a:	1ad2      	subs	r2, r2, r3
 800d74c:	2a00      	cmp	r2, #0
 800d74e:	bfdc      	itt	le
 800d750:	6884      	ldrle	r4, [r0, #8]
 800d752:	1912      	addle	r2, r2, r4
 800d754:	2a01      	cmp	r2, #1
 800d756:	dd17      	ble.n	800d788 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x44>
 800d758:	6842      	ldr	r2, [r0, #4]
 800d75a:	2424      	movs	r4, #36	; 0x24
 800d75c:	fb04 2303 	mla	r3, r4, r3, r2
 800d760:	f101 0220 	add.w	r2, r1, #32
 800d764:	f851 4b04 	ldr.w	r4, [r1], #4
 800d768:	4291      	cmp	r1, r2
 800d76a:	f843 4b04 	str.w	r4, [r3], #4
 800d76e:	d1f9      	bne.n	800d764 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800d770:	780a      	ldrb	r2, [r1, #0]
 800d772:	701a      	strb	r2, [r3, #0]
 800d774:	68c3      	ldr	r3, [r0, #12]
 800d776:	6882      	ldr	r2, [r0, #8]
 800d778:	f3bf 8f5b 	dmb	ish
 800d77c:	3301      	adds	r3, #1
 800d77e:	429a      	cmp	r2, r3
 800d780:	bfd8      	it	le
 800d782:	1a9b      	suble	r3, r3, r2
 800d784:	60c3      	str	r3, [r0, #12]
 800d786:	bd10      	pop	{r4, pc}
 800d788:	4b02      	ldr	r3, [pc, #8]	; (800d794 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x50>)
 800d78a:	2136      	movs	r1, #54	; 0x36
 800d78c:	4a02      	ldr	r2, [pc, #8]	; (800d798 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x54>)
 800d78e:	4803      	ldr	r0, [pc, #12]	; (800d79c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x58>)
 800d790:	f012 fa22 	bl	801fbd8 <__assert_func>
 800d794:	08023489 	.word	0x08023489
 800d798:	08023530 	.word	0x08023530
 800d79c:	08023463 	.word	0x08023463

0800d7a0 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800d7a0:	b510      	push	{r4, lr}
 800d7a2:	6803      	ldr	r3, [r0, #0]
 800d7a4:	4604      	mov	r4, r0
 800d7a6:	681b      	ldr	r3, [r3, #0]
 800d7a8:	4798      	blx	r3
 800d7aa:	b128      	cbz	r0, 800d7b8 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x18>
 800d7ac:	4b07      	ldr	r3, [pc, #28]	; (800d7cc <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x2c>)
 800d7ae:	213c      	movs	r1, #60	; 0x3c
 800d7b0:	4a07      	ldr	r2, [pc, #28]	; (800d7d0 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x30>)
 800d7b2:	4808      	ldr	r0, [pc, #32]	; (800d7d4 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x34>)
 800d7b4:	f012 fa10 	bl	801fbd8 <__assert_func>
 800d7b8:	6923      	ldr	r3, [r4, #16]
 800d7ba:	68a2      	ldr	r2, [r4, #8]
 800d7bc:	f3bf 8f5b 	dmb	ish
 800d7c0:	3301      	adds	r3, #1
 800d7c2:	429a      	cmp	r2, r3
 800d7c4:	bfd8      	it	le
 800d7c6:	1a9b      	suble	r3, r3, r2
 800d7c8:	6123      	str	r3, [r4, #16]
 800d7ca:	bd10      	pop	{r4, pc}
 800d7cc:	080234ac 	.word	0x080234ac
 800d7d0:	0802357e 	.word	0x0802357e
 800d7d4:	08023463 	.word	0x08023463

0800d7d8 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800d7d8:	b570      	push	{r4, r5, r6, lr}
 800d7da:	4604      	mov	r4, r0
 800d7dc:	6840      	ldr	r0, [r0, #4]
 800d7de:	6803      	ldr	r3, [r0, #0]
 800d7e0:	681b      	ldr	r3, [r3, #0]
 800d7e2:	4798      	blx	r3
 800d7e4:	4605      	mov	r5, r0
 800d7e6:	b930      	cbnz	r0, 800d7f6 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800d7e8:	7a23      	ldrb	r3, [r4, #8]
 800d7ea:	b123      	cbz	r3, 800d7f6 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800d7ec:	6860      	ldr	r0, [r4, #4]
 800d7ee:	6803      	ldr	r3, [r0, #0]
 800d7f0:	695b      	ldr	r3, [r3, #20]
 800d7f2:	4798      	blx	r3
 800d7f4:	7225      	strb	r5, [r4, #8]
 800d7f6:	6860      	ldr	r0, [r4, #4]
 800d7f8:	6803      	ldr	r3, [r0, #0]
 800d7fa:	681b      	ldr	r3, [r3, #0]
 800d7fc:	4798      	blx	r3
 800d7fe:	b928      	cbnz	r0, 800d80c <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800d800:	6823      	ldr	r3, [r4, #0]
 800d802:	4620      	mov	r0, r4
 800d804:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d806:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d80a:	4718      	bx	r3
 800d80c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d810:	f7f4 baa2 	b.w	8001d58 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800d814 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800d814:	b510      	push	{r4, lr}
 800d816:	6082      	str	r2, [r0, #8]
 800d818:	2200      	movs	r2, #0
 800d81a:	4c03      	ldr	r4, [pc, #12]	; (800d828 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800d81c:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800d820:	e9c0 4100 	strd	r4, r1, [r0]
 800d824:	bd10      	pop	{r4, pc}
 800d826:	bf00      	nop
 800d828:	080234e4 	.word	0x080234e4

0800d82c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800d82c:	6840      	ldr	r0, [r0, #4]
 800d82e:	6803      	ldr	r3, [r0, #0]
 800d830:	681b      	ldr	r3, [r3, #0]
 800d832:	4718      	bx	r3

0800d834 <_ZN8touchgfx21AbstractPainterRGB88810renderInitEv>:
 800d834:	2001      	movs	r0, #1
 800d836:	4770      	bx	lr

0800d838 <_ZN8touchgfx21AbstractPainterRGB88810renderNextERhS1_S1_S1_>:
 800d838:	2000      	movs	r0, #0
 800d83a:	4770      	bx	lr

0800d83c <_ZN8touchgfx21AbstractPainterRGB8886renderEPhiiijPKh>:
 800d83c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d840:	460d      	mov	r5, r1
 800d842:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 800d846:	b085      	sub	sp, #20
 800d848:	4690      	mov	r8, r2
 800d84a:	4411      	add	r1, r2
 800d84c:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800d850:	4699      	mov	r9, r3
 800d852:	6803      	ldr	r3, [r0, #0]
 800d854:	60c1      	str	r1, [r0, #12]
 800d856:	4604      	mov	r4, r0
 800d858:	990c      	ldr	r1, [sp, #48]	; 0x30
 800d85a:	440a      	add	r2, r1
 800d85c:	6102      	str	r2, [r0, #16]
 800d85e:	68db      	ldr	r3, [r3, #12]
 800d860:	e9dd 670d 	ldrd	r6, r7, [sp, #52]	; 0x34
 800d864:	4798      	blx	r3
 800d866:	2800      	cmp	r0, #0
 800d868:	d03a      	beq.n	800d8e0 <_ZN8touchgfx21AbstractPainterRGB8886renderEPhiiijPKh+0xa4>
 800d86a:	44c8      	add	r8, r9
 800d86c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 800d870:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 800d874:	4445      	add	r5, r8
 800d876:	442e      	add	r6, r5
 800d878:	6823      	ldr	r3, [r4, #0]
 800d87a:	f10d 020f 	add.w	r2, sp, #15
 800d87e:	a903      	add	r1, sp, #12
 800d880:	4620      	mov	r0, r4
 800d882:	9200      	str	r2, [sp, #0]
 800d884:	f10d 020d 	add.w	r2, sp, #13
 800d888:	f8d3 8010 	ldr.w	r8, [r3, #16]
 800d88c:	f10d 030e 	add.w	r3, sp, #14
 800d890:	47c0      	blx	r8
 800d892:	b1f0      	cbz	r0, 800d8d2 <_ZN8touchgfx21AbstractPainterRGB8886renderEPhiiijPKh+0x96>
 800d894:	f89d 300f 	ldrb.w	r3, [sp, #15]
 800d898:	7a20      	ldrb	r0, [r4, #8]
 800d89a:	f89d 200c 	ldrb.w	r2, [sp, #12]
 800d89e:	4358      	muls	r0, r3
 800d8a0:	f89d 100e 	ldrb.w	r1, [sp, #14]
 800d8a4:	1c43      	adds	r3, r0, #1
 800d8a6:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 800d8aa:	7838      	ldrb	r0, [r7, #0]
 800d8ac:	121b      	asrs	r3, r3, #8
 800d8ae:	fb10 f003 	smulbb	r0, r0, r3
 800d8b2:	b283      	uxth	r3, r0
 800d8b4:	1c58      	adds	r0, r3, #1
 800d8b6:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 800d8ba:	6823      	ldr	r3, [r4, #0]
 800d8bc:	1200      	asrs	r0, r0, #8
 800d8be:	f8d3 8014 	ldr.w	r8, [r3, #20]
 800d8c2:	f89d 300d 	ldrb.w	r3, [sp, #13]
 800d8c6:	28ff      	cmp	r0, #255	; 0xff
 800d8c8:	d10d      	bne.n	800d8e6 <_ZN8touchgfx21AbstractPainterRGB8886renderEPhiiijPKh+0xaa>
 800d8ca:	9100      	str	r1, [sp, #0]
 800d8cc:	4629      	mov	r1, r5
 800d8ce:	4620      	mov	r0, r4
 800d8d0:	47c0      	blx	r8
 800d8d2:	68e3      	ldr	r3, [r4, #12]
 800d8d4:	3503      	adds	r5, #3
 800d8d6:	3701      	adds	r7, #1
 800d8d8:	3301      	adds	r3, #1
 800d8da:	42ae      	cmp	r6, r5
 800d8dc:	60e3      	str	r3, [r4, #12]
 800d8de:	d8cb      	bhi.n	800d878 <_ZN8touchgfx21AbstractPainterRGB8886renderEPhiiijPKh+0x3c>
 800d8e0:	b005      	add	sp, #20
 800d8e2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d8e6:	fa1f fc80 	uxth.w	ip, r0
 800d8ea:	43c0      	mvns	r0, r0
 800d8ec:	f895 e002 	ldrb.w	lr, [r5, #2]
 800d8f0:	fb12 f20c 	smulbb	r2, r2, ip
 800d8f4:	b2c0      	uxtb	r0, r0
 800d8f6:	fb13 f30c 	smulbb	r3, r3, ip
 800d8fa:	fb0e 2200 	mla	r2, lr, r0, r2
 800d8fe:	f895 e001 	ldrb.w	lr, [r5, #1]
 800d902:	fb11 f10c 	smulbb	r1, r1, ip
 800d906:	fb0e 3300 	mla	r3, lr, r0, r3
 800d90a:	f895 e000 	ldrb.w	lr, [r5]
 800d90e:	b292      	uxth	r2, r2
 800d910:	b29b      	uxth	r3, r3
 800d912:	fb0e 1000 	mla	r0, lr, r0, r1
 800d916:	1c59      	adds	r1, r3, #1
 800d918:	b280      	uxth	r0, r0
 800d91a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 800d91e:	1c51      	adds	r1, r2, #1
 800d920:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 800d924:	1c41      	adds	r1, r0, #1
 800d926:	f3c3 2307 	ubfx	r3, r3, #8, #8
 800d92a:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 800d92e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 800d932:	f3c0 2007 	ubfx	r0, r0, #8, #8
 800d936:	9000      	str	r0, [sp, #0]
 800d938:	e7c8      	b.n	800d8cc <_ZN8touchgfx21AbstractPainterRGB8886renderEPhiiijPKh+0x90>

0800d93a <_ZN8touchgfx21AbstractPainterRGB88811renderPixelEPthhh>:
 800d93a:	f89d 0000 	ldrb.w	r0, [sp]
 800d93e:	704b      	strb	r3, [r1, #1]
 800d940:	7008      	strb	r0, [r1, #0]
 800d942:	708a      	strb	r2, [r1, #2]
 800d944:	4770      	bx	lr

0800d946 <_ZN8touchgfx21AbstractPainterRGB888D1Ev>:
 800d946:	4770      	bx	lr

0800d948 <_ZN8touchgfx21AbstractPainterRGB888D0Ev>:
 800d948:	b510      	push	{r4, lr}
 800d94a:	4604      	mov	r4, r0
 800d94c:	2114      	movs	r1, #20
 800d94e:	f011 ff66 	bl	801f81e <_ZdlPvj>
 800d952:	4620      	mov	r0, r4
 800d954:	bd10      	pop	{r4, pc}

0800d956 <_ZN8touchgfx19PainterRGB888Bitmap9setOffsetEss>:
 800d956:	84c1      	strh	r1, [r0, #38]	; 0x26
 800d958:	8502      	strh	r2, [r0, #40]	; 0x28
 800d95a:	4770      	bx	lr

0800d95c <_ZN8touchgfx19PainterRGB888Bitmap8setTiledEb>:
 800d95c:	f880 102a 	strb.w	r1, [r0, #42]	; 0x2a
 800d960:	4770      	bx	lr

0800d962 <_ZN8touchgfx19PainterRGB888BitmapD1Ev>:
 800d962:	4770      	bx	lr

0800d964 <_ZN8touchgfx19PainterRGB888Bitmap6renderEPhiiijPKh>:
 800d964:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800d968:	4413      	add	r3, r2
 800d96a:	4604      	mov	r4, r0
 800d96c:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 800d970:	18cd      	adds	r5, r1, r3
 800d972:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800d976:	9908      	ldr	r1, [sp, #32]
 800d978:	441a      	add	r2, r3
 800d97a:	f9b0 3026 	ldrsh.w	r3, [r0, #38]	; 0x26
 800d97e:	441a      	add	r2, r3
 800d980:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800d984:	440b      	add	r3, r1
 800d986:	f9b0 1028 	ldrsh.w	r1, [r0, #40]	; 0x28
 800d98a:	60c2      	str	r2, [r0, #12]
 800d98c:	440b      	add	r3, r1
 800d98e:	6103      	str	r3, [r0, #16]
 800d990:	f890 302a 	ldrb.w	r3, [r0, #42]	; 0x2a
 800d994:	e9dd 7809 	ldrd	r7, r8, [sp, #36]	; 0x24
 800d998:	b95b      	cbnz	r3, 800d9b2 <_ZN8touchgfx19PainterRGB888Bitmap6renderEPhiiijPKh+0x4e>
 800d99a:	2a00      	cmp	r2, #0
 800d99c:	da09      	bge.n	800d9b2 <_ZN8touchgfx19PainterRGB888Bitmap6renderEPhiiijPKh+0x4e>
 800d99e:	4251      	negs	r1, r2
 800d9a0:	42b9      	cmp	r1, r7
 800d9a2:	d852      	bhi.n	800da4a <_ZN8touchgfx19PainterRGB888Bitmap6renderEPhiiijPKh+0xe6>
 800d9a4:	4417      	add	r7, r2
 800d9a6:	eba8 0802 	sub.w	r8, r8, r2
 800d9aa:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800d9ae:	60c3      	str	r3, [r0, #12]
 800d9b0:	1aad      	subs	r5, r5, r2
 800d9b2:	6823      	ldr	r3, [r4, #0]
 800d9b4:	4620      	mov	r0, r4
 800d9b6:	68db      	ldr	r3, [r3, #12]
 800d9b8:	4798      	blx	r3
 800d9ba:	2800      	cmp	r0, #0
 800d9bc:	d045      	beq.n	800da4a <_ZN8touchgfx19PainterRGB888Bitmap6renderEPhiiijPKh+0xe6>
 800d9be:	68e3      	ldr	r3, [r4, #12]
 800d9c0:	f9b4 2022 	ldrsh.w	r2, [r4, #34]	; 0x22
 800d9c4:	f894 102a 	ldrb.w	r1, [r4, #42]	; 0x2a
 800d9c8:	1ad6      	subs	r6, r2, r3
 800d9ca:	b919      	cbnz	r1, 800d9d4 <_ZN8touchgfx19PainterRGB888Bitmap6renderEPhiiijPKh+0x70>
 800d9cc:	443b      	add	r3, r7
 800d9ce:	4293      	cmp	r3, r2
 800d9d0:	bfc8      	it	gt
 800d9d2:	4637      	movgt	r7, r6
 800d9d4:	eb07 0947 	add.w	r9, r7, r7, lsl #1
 800d9d8:	69a3      	ldr	r3, [r4, #24]
 800d9da:	44a9      	add	r9, r5
 800d9dc:	2b00      	cmp	r3, #0
 800d9de:	f000 80ce 	beq.w	800db7e <_ZN8touchgfx19PainterRGB888Bitmap6renderEPhiiijPKh+0x21a>
 800d9e2:	f104 001c 	add.w	r0, r4, #28
 800d9e6:	f007 f9a7 	bl	8014d38 <_ZNK8touchgfx6Bitmap7getDataEv>
 800d9ea:	f9b4 2022 	ldrsh.w	r2, [r4, #34]	; 0x22
 800d9ee:	6923      	ldr	r3, [r4, #16]
 800d9f0:	4353      	muls	r3, r2
 800d9f2:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 800d9f6:	4418      	add	r0, r3
 800d9f8:	7a23      	ldrb	r3, [r4, #8]
 800d9fa:	2bff      	cmp	r3, #255	; 0xff
 800d9fc:	d15b      	bne.n	800dab6 <_ZN8touchgfx19PainterRGB888Bitmap6renderEPhiiijPKh+0x152>
 800d9fe:	42be      	cmp	r6, r7
 800da00:	bf28      	it	cs
 800da02:	463e      	movcs	r6, r7
 800da04:	eb06 0c46 	add.w	ip, r6, r6, lsl #1
 800da08:	1bbf      	subs	r7, r7, r6
 800da0a:	44ac      	add	ip, r5
 800da0c:	f818 3b01 	ldrb.w	r3, [r8], #1
 800da10:	3503      	adds	r5, #3
 800da12:	69a1      	ldr	r1, [r4, #24]
 800da14:	2bff      	cmp	r3, #255	; 0xff
 800da16:	f101 0201 	add.w	r2, r1, #1
 800da1a:	61a2      	str	r2, [r4, #24]
 800da1c:	d117      	bne.n	800da4e <_ZN8touchgfx19PainterRGB888Bitmap6renderEPhiiijPKh+0xea>
 800da1e:	780b      	ldrb	r3, [r1, #0]
 800da20:	f805 3c03 	strb.w	r3, [r5, #-3]
 800da24:	69a3      	ldr	r3, [r4, #24]
 800da26:	1c5a      	adds	r2, r3, #1
 800da28:	61a2      	str	r2, [r4, #24]
 800da2a:	781b      	ldrb	r3, [r3, #0]
 800da2c:	f805 3c02 	strb.w	r3, [r5, #-2]
 800da30:	69a3      	ldr	r3, [r4, #24]
 800da32:	1c5a      	adds	r2, r3, #1
 800da34:	61a2      	str	r2, [r4, #24]
 800da36:	781b      	ldrb	r3, [r3, #0]
 800da38:	f805 3c01 	strb.w	r3, [r5, #-1]
 800da3c:	45ac      	cmp	ip, r5
 800da3e:	d8e5      	bhi.n	800da0c <_ZN8touchgfx19PainterRGB888Bitmap6renderEPhiiijPKh+0xa8>
 800da40:	45a9      	cmp	r9, r5
 800da42:	61a0      	str	r0, [r4, #24]
 800da44:	f9b4 6022 	ldrsh.w	r6, [r4, #34]	; 0x22
 800da48:	d8d9      	bhi.n	800d9fe <_ZN8touchgfx19PainterRGB888Bitmap6renderEPhiiijPKh+0x9a>
 800da4a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800da4e:	b29a      	uxth	r2, r3
 800da50:	43db      	mvns	r3, r3
 800da52:	f815 6c03 	ldrb.w	r6, [r5, #-3]
 800da56:	b2db      	uxtb	r3, r3
 800da58:	7809      	ldrb	r1, [r1, #0]
 800da5a:	fb16 f603 	smulbb	r6, r6, r3
 800da5e:	fb01 6102 	mla	r1, r1, r2, r6
 800da62:	b289      	uxth	r1, r1
 800da64:	1c4e      	adds	r6, r1, #1
 800da66:	eb06 2111 	add.w	r1, r6, r1, lsr #8
 800da6a:	1209      	asrs	r1, r1, #8
 800da6c:	f805 1c03 	strb.w	r1, [r5, #-3]
 800da70:	69a1      	ldr	r1, [r4, #24]
 800da72:	1c4e      	adds	r6, r1, #1
 800da74:	61a6      	str	r6, [r4, #24]
 800da76:	f815 6c02 	ldrb.w	r6, [r5, #-2]
 800da7a:	7809      	ldrb	r1, [r1, #0]
 800da7c:	fb16 f603 	smulbb	r6, r6, r3
 800da80:	fb01 6102 	mla	r1, r1, r2, r6
 800da84:	b289      	uxth	r1, r1
 800da86:	1c4e      	adds	r6, r1, #1
 800da88:	eb06 2111 	add.w	r1, r6, r1, lsr #8
 800da8c:	1209      	asrs	r1, r1, #8
 800da8e:	f805 1c02 	strb.w	r1, [r5, #-2]
 800da92:	69a1      	ldr	r1, [r4, #24]
 800da94:	1c4e      	adds	r6, r1, #1
 800da96:	61a6      	str	r6, [r4, #24]
 800da98:	780e      	ldrb	r6, [r1, #0]
 800da9a:	f815 1c01 	ldrb.w	r1, [r5, #-1]
 800da9e:	fb11 f303 	smulbb	r3, r1, r3
 800daa2:	fb06 3202 	mla	r2, r6, r2, r3
 800daa6:	b292      	uxth	r2, r2
 800daa8:	1c53      	adds	r3, r2, #1
 800daaa:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 800daae:	1212      	asrs	r2, r2, #8
 800dab0:	f805 2c01 	strb.w	r2, [r5, #-1]
 800dab4:	e7c2      	b.n	800da3c <_ZN8touchgfx19PainterRGB888Bitmap6renderEPhiiijPKh+0xd8>
 800dab6:	42be      	cmp	r6, r7
 800dab8:	f105 0c03 	add.w	ip, r5, #3
 800dabc:	bf28      	it	cs
 800dabe:	463e      	movcs	r6, r7
 800dac0:	eb06 0146 	add.w	r1, r6, r6, lsl #1
 800dac4:	1bbf      	subs	r7, r7, r6
 800dac6:	4429      	add	r1, r5
 800dac8:	f818 2b01 	ldrb.w	r2, [r8], #1
 800dacc:	4665      	mov	r5, ip
 800dace:	7a23      	ldrb	r3, [r4, #8]
 800dad0:	f8d4 e018 	ldr.w	lr, [r4, #24]
 800dad4:	42a9      	cmp	r1, r5
 800dad6:	fb02 f303 	mul.w	r3, r2, r3
 800dada:	f103 0201 	add.w	r2, r3, #1
 800dade:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 800dae2:	f10e 0301 	add.w	r3, lr, #1
 800dae6:	ea4f 2222 	mov.w	r2, r2, asr #8
 800daea:	61a3      	str	r3, [r4, #24]
 800daec:	f81c cc03 	ldrb.w	ip, [ip, #-3]
 800daf0:	b296      	uxth	r6, r2
 800daf2:	ea6f 0202 	mvn.w	r2, r2
 800daf6:	b2d3      	uxtb	r3, r2
 800daf8:	f89e 2000 	ldrb.w	r2, [lr]
 800dafc:	fb1c fc03 	smulbb	ip, ip, r3
 800db00:	fb02 c206 	mla	r2, r2, r6, ip
 800db04:	b292      	uxth	r2, r2
 800db06:	f102 0c01 	add.w	ip, r2, #1
 800db0a:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 800db0e:	ea4f 2222 	mov.w	r2, r2, asr #8
 800db12:	f805 2c03 	strb.w	r2, [r5, #-3]
 800db16:	69a2      	ldr	r2, [r4, #24]
 800db18:	f102 0c01 	add.w	ip, r2, #1
 800db1c:	f8c4 c018 	str.w	ip, [r4, #24]
 800db20:	f815 cc02 	ldrb.w	ip, [r5, #-2]
 800db24:	7812      	ldrb	r2, [r2, #0]
 800db26:	fb1c fc03 	smulbb	ip, ip, r3
 800db2a:	fb02 c206 	mla	r2, r2, r6, ip
 800db2e:	b292      	uxth	r2, r2
 800db30:	f102 0c01 	add.w	ip, r2, #1
 800db34:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 800db38:	ea4f 2222 	mov.w	r2, r2, asr #8
 800db3c:	f805 2c02 	strb.w	r2, [r5, #-2]
 800db40:	69a2      	ldr	r2, [r4, #24]
 800db42:	f102 0c01 	add.w	ip, r2, #1
 800db46:	f8c4 c018 	str.w	ip, [r4, #24]
 800db4a:	f892 c000 	ldrb.w	ip, [r2]
 800db4e:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 800db52:	fb12 f303 	smulbb	r3, r2, r3
 800db56:	fb0c 3306 	mla	r3, ip, r6, r3
 800db5a:	f105 0c03 	add.w	ip, r5, #3
 800db5e:	b29b      	uxth	r3, r3
 800db60:	f103 0201 	add.w	r2, r3, #1
 800db64:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 800db68:	ea4f 2323 	mov.w	r3, r3, asr #8
 800db6c:	f805 3c01 	strb.w	r3, [r5, #-1]
 800db70:	d8aa      	bhi.n	800dac8 <_ZN8touchgfx19PainterRGB888Bitmap6renderEPhiiijPKh+0x164>
 800db72:	45a9      	cmp	r9, r5
 800db74:	61a0      	str	r0, [r4, #24]
 800db76:	f9b4 6022 	ldrsh.w	r6, [r4, #34]	; 0x22
 800db7a:	d89c      	bhi.n	800dab6 <_ZN8touchgfx19PainterRGB888Bitmap6renderEPhiiijPKh+0x152>
 800db7c:	e765      	b.n	800da4a <_ZN8touchgfx19PainterRGB888Bitmap6renderEPhiiijPKh+0xe6>
 800db7e:	6963      	ldr	r3, [r4, #20]
 800db80:	2b00      	cmp	r3, #0
 800db82:	f43f af62 	beq.w	800da4a <_ZN8touchgfx19PainterRGB888Bitmap6renderEPhiiijPKh+0xe6>
 800db86:	f104 001c 	add.w	r0, r4, #28
 800db8a:	f007 f8d5 	bl	8014d38 <_ZNK8touchgfx6Bitmap7getDataEv>
 800db8e:	f9b4 2022 	ldrsh.w	r2, [r4, #34]	; 0x22
 800db92:	6923      	ldr	r3, [r4, #16]
 800db94:	4353      	muls	r3, r2
 800db96:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800db9a:	7a23      	ldrb	r3, [r4, #8]
 800db9c:	2bff      	cmp	r3, #255	; 0xff
 800db9e:	d15a      	bne.n	800dc56 <_ZN8touchgfx19PainterRGB888Bitmap6renderEPhiiijPKh+0x2f2>
 800dba0:	42be      	cmp	r6, r7
 800dba2:	bf28      	it	cs
 800dba4:	463e      	movcs	r6, r7
 800dba6:	eb06 0146 	add.w	r1, r6, r6, lsl #1
 800dbaa:	1bbf      	subs	r7, r7, r6
 800dbac:	4429      	add	r1, r5
 800dbae:	6963      	ldr	r3, [r4, #20]
 800dbb0:	3503      	adds	r5, #3
 800dbb2:	681a      	ldr	r2, [r3, #0]
 800dbb4:	f818 3b01 	ldrb.w	r3, [r8], #1
 800dbb8:	0e16      	lsrs	r6, r2, #24
 800dbba:	b2d2      	uxtb	r2, r2
 800dbbc:	435e      	muls	r6, r3
 800dbbe:	1c73      	adds	r3, r6, #1
 800dbc0:	eb03 2326 	add.w	r3, r3, r6, asr #8
 800dbc4:	121b      	asrs	r3, r3, #8
 800dbc6:	2bff      	cmp	r3, #255	; 0xff
 800dbc8:	d116      	bne.n	800dbf8 <_ZN8touchgfx19PainterRGB888Bitmap6renderEPhiiijPKh+0x294>
 800dbca:	f805 2c03 	strb.w	r2, [r5, #-3]
 800dbce:	6963      	ldr	r3, [r4, #20]
 800dbd0:	681b      	ldr	r3, [r3, #0]
 800dbd2:	0a1b      	lsrs	r3, r3, #8
 800dbd4:	f805 3c02 	strb.w	r3, [r5, #-2]
 800dbd8:	6963      	ldr	r3, [r4, #20]
 800dbda:	885b      	ldrh	r3, [r3, #2]
 800dbdc:	f805 3c01 	strb.w	r3, [r5, #-1]
 800dbe0:	42a9      	cmp	r1, r5
 800dbe2:	6963      	ldr	r3, [r4, #20]
 800dbe4:	f103 0304 	add.w	r3, r3, #4
 800dbe8:	6163      	str	r3, [r4, #20]
 800dbea:	d8e0      	bhi.n	800dbae <_ZN8touchgfx19PainterRGB888Bitmap6renderEPhiiijPKh+0x24a>
 800dbec:	45a9      	cmp	r9, r5
 800dbee:	6160      	str	r0, [r4, #20]
 800dbf0:	f9b4 6022 	ldrsh.w	r6, [r4, #34]	; 0x22
 800dbf4:	d8d4      	bhi.n	800dba0 <_ZN8touchgfx19PainterRGB888Bitmap6renderEPhiiijPKh+0x23c>
 800dbf6:	e728      	b.n	800da4a <_ZN8touchgfx19PainterRGB888Bitmap6renderEPhiiijPKh+0xe6>
 800dbf8:	b29e      	uxth	r6, r3
 800dbfa:	43db      	mvns	r3, r3
 800dbfc:	f815 cc03 	ldrb.w	ip, [r5, #-3]
 800dc00:	fb12 f206 	smulbb	r2, r2, r6
 800dc04:	b2db      	uxtb	r3, r3
 800dc06:	fb0c 2203 	mla	r2, ip, r3, r2
 800dc0a:	b292      	uxth	r2, r2
 800dc0c:	f102 0c01 	add.w	ip, r2, #1
 800dc10:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 800dc14:	1212      	asrs	r2, r2, #8
 800dc16:	f805 2c03 	strb.w	r2, [r5, #-3]
 800dc1a:	6962      	ldr	r2, [r4, #20]
 800dc1c:	7852      	ldrb	r2, [r2, #1]
 800dc1e:	fb12 fc06 	smulbb	ip, r2, r6
 800dc22:	f815 2c02 	ldrb.w	r2, [r5, #-2]
 800dc26:	fb02 c203 	mla	r2, r2, r3, ip
 800dc2a:	b292      	uxth	r2, r2
 800dc2c:	f102 0c01 	add.w	ip, r2, #1
 800dc30:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 800dc34:	1212      	asrs	r2, r2, #8
 800dc36:	f805 2c02 	strb.w	r2, [r5, #-2]
 800dc3a:	6962      	ldr	r2, [r4, #20]
 800dc3c:	7892      	ldrb	r2, [r2, #2]
 800dc3e:	fb12 f606 	smulbb	r6, r2, r6
 800dc42:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 800dc46:	fb02 6303 	mla	r3, r2, r3, r6
 800dc4a:	b29b      	uxth	r3, r3
 800dc4c:	1c5a      	adds	r2, r3, #1
 800dc4e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 800dc52:	121b      	asrs	r3, r3, #8
 800dc54:	e7c2      	b.n	800dbdc <_ZN8touchgfx19PainterRGB888Bitmap6renderEPhiiijPKh+0x278>
 800dc56:	42be      	cmp	r6, r7
 800dc58:	f105 0203 	add.w	r2, r5, #3
 800dc5c:	bf28      	it	cs
 800dc5e:	463e      	movcs	r6, r7
 800dc60:	eb06 0c46 	add.w	ip, r6, r6, lsl #1
 800dc64:	1bbf      	subs	r7, r7, r6
 800dc66:	44ac      	add	ip, r5
 800dc68:	6963      	ldr	r3, [r4, #20]
 800dc6a:	7a25      	ldrb	r5, [r4, #8]
 800dc6c:	6819      	ldr	r1, [r3, #0]
 800dc6e:	0e0b      	lsrs	r3, r1, #24
 800dc70:	436b      	muls	r3, r5
 800dc72:	1c5d      	adds	r5, r3, #1
 800dc74:	eb05 2523 	add.w	r5, r5, r3, asr #8
 800dc78:	f818 3b01 	ldrb.w	r3, [r8], #1
 800dc7c:	122d      	asrs	r5, r5, #8
 800dc7e:	fb13 f305 	smulbb	r3, r3, r5
 800dc82:	b29d      	uxth	r5, r3
 800dc84:	1c6b      	adds	r3, r5, #1
 800dc86:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 800dc8a:	121b      	asrs	r3, r3, #8
 800dc8c:	d040      	beq.n	800dd10 <_ZN8touchgfx19PainterRGB888Bitmap6renderEPhiiijPKh+0x3ac>
 800dc8e:	b29e      	uxth	r6, r3
 800dc90:	43db      	mvns	r3, r3
 800dc92:	b2c9      	uxtb	r1, r1
 800dc94:	f812 ec03 	ldrb.w	lr, [r2, #-3]
 800dc98:	b2db      	uxtb	r3, r3
 800dc9a:	4615      	mov	r5, r2
 800dc9c:	fb11 f106 	smulbb	r1, r1, r6
 800dca0:	fb0e 1103 	mla	r1, lr, r3, r1
 800dca4:	b289      	uxth	r1, r1
 800dca6:	f101 0e01 	add.w	lr, r1, #1
 800dcaa:	eb0e 2111 	add.w	r1, lr, r1, lsr #8
 800dcae:	f812 ec02 	ldrb.w	lr, [r2, #-2]
 800dcb2:	fb1e fe03 	smulbb	lr, lr, r3
 800dcb6:	1209      	asrs	r1, r1, #8
 800dcb8:	f802 1c03 	strb.w	r1, [r2, #-3]
 800dcbc:	6961      	ldr	r1, [r4, #20]
 800dcbe:	7849      	ldrb	r1, [r1, #1]
 800dcc0:	fb01 e106 	mla	r1, r1, r6, lr
 800dcc4:	b289      	uxth	r1, r1
 800dcc6:	f101 0e01 	add.w	lr, r1, #1
 800dcca:	eb0e 2111 	add.w	r1, lr, r1, lsr #8
 800dcce:	1209      	asrs	r1, r1, #8
 800dcd0:	f802 1c02 	strb.w	r1, [r2, #-2]
 800dcd4:	6961      	ldr	r1, [r4, #20]
 800dcd6:	f891 e002 	ldrb.w	lr, [r1, #2]
 800dcda:	f812 1c01 	ldrb.w	r1, [r2, #-1]
 800dcde:	fb11 f303 	smulbb	r3, r1, r3
 800dce2:	fb0e 3306 	mla	r3, lr, r6, r3
 800dce6:	b29b      	uxth	r3, r3
 800dce8:	1c59      	adds	r1, r3, #1
 800dcea:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 800dcee:	121b      	asrs	r3, r3, #8
 800dcf0:	f802 3c01 	strb.w	r3, [r2, #-1]
 800dcf4:	6963      	ldr	r3, [r4, #20]
 800dcf6:	4565      	cmp	r5, ip
 800dcf8:	f102 0203 	add.w	r2, r2, #3
 800dcfc:	f103 0304 	add.w	r3, r3, #4
 800dd00:	6163      	str	r3, [r4, #20]
 800dd02:	d3b1      	bcc.n	800dc68 <_ZN8touchgfx19PainterRGB888Bitmap6renderEPhiiijPKh+0x304>
 800dd04:	454d      	cmp	r5, r9
 800dd06:	6160      	str	r0, [r4, #20]
 800dd08:	f9b4 6022 	ldrsh.w	r6, [r4, #34]	; 0x22
 800dd0c:	d3a3      	bcc.n	800dc56 <_ZN8touchgfx19PainterRGB888Bitmap6renderEPhiiijPKh+0x2f2>
 800dd0e:	e69c      	b.n	800da4a <_ZN8touchgfx19PainterRGB888Bitmap6renderEPhiiijPKh+0xe6>
 800dd10:	4615      	mov	r5, r2
 800dd12:	e7ef      	b.n	800dcf4 <_ZN8touchgfx19PainterRGB888Bitmap6renderEPhiiijPKh+0x390>

0800dd14 <_ZN8touchgfx19PainterRGB888BitmapD0Ev>:
 800dd14:	b510      	push	{r4, lr}
 800dd16:	4604      	mov	r4, r0
 800dd18:	212c      	movs	r1, #44	; 0x2c
 800dd1a:	f011 fd80 	bl	801f81e <_ZdlPvj>
 800dd1e:	4620      	mov	r0, r4
 800dd20:	bd10      	pop	{r4, pc}

0800dd22 <_ZN8touchgfx19PainterRGB888Bitmap10renderInitEv>:
 800dd22:	b570      	push	{r4, r5, r6, lr}
 800dd24:	2300      	movs	r3, #0
 800dd26:	f100 061c 	add.w	r6, r0, #28
 800dd2a:	4604      	mov	r4, r0
 800dd2c:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800dd30:	4630      	mov	r0, r6
 800dd32:	f7f5 ff2b 	bl	8003b8c <_ZNK8touchgfx6Bitmap5getIdEv>
 800dd36:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800dd3a:	4298      	cmp	r0, r3
 800dd3c:	d101      	bne.n	800dd42 <_ZN8touchgfx19PainterRGB888Bitmap10renderInitEv+0x20>
 800dd3e:	2000      	movs	r0, #0
 800dd40:	bd70      	pop	{r4, r5, r6, pc}
 800dd42:	f894 202a 	ldrb.w	r2, [r4, #42]	; 0x2a
 800dd46:	68e1      	ldr	r1, [r4, #12]
 800dd48:	f9b4 3022 	ldrsh.w	r3, [r4, #34]	; 0x22
 800dd4c:	b362      	cbz	r2, 800dda8 <_ZN8touchgfx19PainterRGB888Bitmap10renderInitEv+0x86>
 800dd4e:	fb91 f2f3 	sdiv	r2, r1, r3
 800dd52:	fb03 1212 	mls	r2, r3, r2, r1
 800dd56:	441a      	add	r2, r3
 800dd58:	fb92 f1f3 	sdiv	r1, r2, r3
 800dd5c:	fb03 2311 	mls	r3, r3, r1, r2
 800dd60:	f9b4 2024 	ldrsh.w	r2, [r4, #36]	; 0x24
 800dd64:	6921      	ldr	r1, [r4, #16]
 800dd66:	60e3      	str	r3, [r4, #12]
 800dd68:	fb91 f3f2 	sdiv	r3, r1, r2
 800dd6c:	fb02 1313 	mls	r3, r2, r3, r1
 800dd70:	4413      	add	r3, r2
 800dd72:	fb93 f1f2 	sdiv	r1, r3, r2
 800dd76:	fb02 3311 	mls	r3, r2, r1, r3
 800dd7a:	6123      	str	r3, [r4, #16]
 800dd7c:	4630      	mov	r0, r6
 800dd7e:	f007 f865 	bl	8014e4c <_ZNK8touchgfx6Bitmap9getFormatEv>
 800dd82:	2802      	cmp	r0, #2
 800dd84:	4630      	mov	r0, r6
 800dd86:	d119      	bne.n	800ddbc <_ZN8touchgfx19PainterRGB888Bitmap10renderInitEv+0x9a>
 800dd88:	f006 ffd6 	bl	8014d38 <_ZNK8touchgfx6Bitmap7getDataEv>
 800dd8c:	6160      	str	r0, [r4, #20]
 800dd8e:	2800      	cmp	r0, #0
 800dd90:	d0d5      	beq.n	800dd3e <_ZN8touchgfx19PainterRGB888Bitmap10renderInitEv+0x1c>
 800dd92:	f9b4 3022 	ldrsh.w	r3, [r4, #34]	; 0x22
 800dd96:	e9d4 2103 	ldrd	r2, r1, [r4, #12]
 800dd9a:	fb01 2303 	mla	r3, r1, r3, r2
 800dd9e:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800dda2:	6160      	str	r0, [r4, #20]
 800dda4:	2001      	movs	r0, #1
 800dda6:	e7cb      	b.n	800dd40 <_ZN8touchgfx19PainterRGB888Bitmap10renderInitEv+0x1e>
 800dda8:	428b      	cmp	r3, r1
 800ddaa:	ddc8      	ble.n	800dd3e <_ZN8touchgfx19PainterRGB888Bitmap10renderInitEv+0x1c>
 800ddac:	6923      	ldr	r3, [r4, #16]
 800ddae:	2b00      	cmp	r3, #0
 800ddb0:	dbc5      	blt.n	800dd3e <_ZN8touchgfx19PainterRGB888Bitmap10renderInitEv+0x1c>
 800ddb2:	f9b4 2024 	ldrsh.w	r2, [r4, #36]	; 0x24
 800ddb6:	4293      	cmp	r3, r2
 800ddb8:	dbe0      	blt.n	800dd7c <_ZN8touchgfx19PainterRGB888Bitmap10renderInitEv+0x5a>
 800ddba:	e7c0      	b.n	800dd3e <_ZN8touchgfx19PainterRGB888Bitmap10renderInitEv+0x1c>
 800ddbc:	f007 f846 	bl	8014e4c <_ZNK8touchgfx6Bitmap9getFormatEv>
 800ddc0:	2801      	cmp	r0, #1
 800ddc2:	4605      	mov	r5, r0
 800ddc4:	d1bb      	bne.n	800dd3e <_ZN8touchgfx19PainterRGB888Bitmap10renderInitEv+0x1c>
 800ddc6:	4630      	mov	r0, r6
 800ddc8:	f006 ffb6 	bl	8014d38 <_ZNK8touchgfx6Bitmap7getDataEv>
 800ddcc:	61a0      	str	r0, [r4, #24]
 800ddce:	2800      	cmp	r0, #0
 800ddd0:	d0b5      	beq.n	800dd3e <_ZN8touchgfx19PainterRGB888Bitmap10renderInitEv+0x1c>
 800ddd2:	f9b4 2022 	ldrsh.w	r2, [r4, #34]	; 0x22
 800ddd6:	e9d4 3103 	ldrd	r3, r1, [r4, #12]
 800ddda:	fb01 3302 	mla	r3, r1, r2, r3
 800ddde:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 800dde2:	4403      	add	r3, r0
 800dde4:	4628      	mov	r0, r5
 800dde6:	61a3      	str	r3, [r4, #24]
 800dde8:	e7aa      	b.n	800dd40 <_ZN8touchgfx19PainterRGB888Bitmap10renderInitEv+0x1e>
	...

0800ddec <_ZN8touchgfx19PainterRGB888Bitmap9setBitmapERKNS_6BitmapE>:
 800ddec:	b570      	push	{r4, r5, r6, lr}
 800ddee:	4604      	mov	r4, r0
 800ddf0:	880b      	ldrh	r3, [r1, #0]
 800ddf2:	4605      	mov	r5, r0
 800ddf4:	f824 3f1c 	strh.w	r3, [r4, #28]!
 800ddf8:	4620      	mov	r0, r4
 800ddfa:	f7f5 fec7 	bl	8003b8c <_ZNK8touchgfx6Bitmap5getIdEv>
 800ddfe:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800de02:	4298      	cmp	r0, r3
 800de04:	d00f      	beq.n	800de26 <_ZN8touchgfx19PainterRGB888Bitmap9setBitmapERKNS_6BitmapE+0x3a>
 800de06:	4620      	mov	r0, r4
 800de08:	f007 f820 	bl	8014e4c <_ZNK8touchgfx6Bitmap9getFormatEv>
 800de0c:	2801      	cmp	r0, #1
 800de0e:	d00a      	beq.n	800de26 <_ZN8touchgfx19PainterRGB888Bitmap9setBitmapERKNS_6BitmapE+0x3a>
 800de10:	4620      	mov	r0, r4
 800de12:	f007 f81b 	bl	8014e4c <_ZNK8touchgfx6Bitmap9getFormatEv>
 800de16:	2802      	cmp	r0, #2
 800de18:	d005      	beq.n	800de26 <_ZN8touchgfx19PainterRGB888Bitmap9setBitmapERKNS_6BitmapE+0x3a>
 800de1a:	4b0c      	ldr	r3, [pc, #48]	; (800de4c <_ZN8touchgfx19PainterRGB888Bitmap9setBitmapERKNS_6BitmapE+0x60>)
 800de1c:	2117      	movs	r1, #23
 800de1e:	4a0c      	ldr	r2, [pc, #48]	; (800de50 <_ZN8touchgfx19PainterRGB888Bitmap9setBitmapERKNS_6BitmapE+0x64>)
 800de20:	480c      	ldr	r0, [pc, #48]	; (800de54 <_ZN8touchgfx19PainterRGB888Bitmap9setBitmapERKNS_6BitmapE+0x68>)
 800de22:	f011 fed9 	bl	801fbd8 <__assert_func>
 800de26:	4620      	mov	r0, r4
 800de28:	f006 fe6a 	bl	8014b00 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800de2c:	4606      	mov	r6, r0
 800de2e:	4620      	mov	r0, r4
 800de30:	f006 feaa 	bl	8014b88 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800de34:	2300      	movs	r3, #0
 800de36:	84a8      	strh	r0, [r5, #36]	; 0x24
 800de38:	f105 001e 	add.w	r0, r5, #30
 800de3c:	83eb      	strh	r3, [r5, #30]
 800de3e:	842b      	strh	r3, [r5, #32]
 800de40:	846e      	strh	r6, [r5, #34]	; 0x22
 800de42:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800de46:	f003 b9f5 	b.w	8011234 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800de4a:	bf00      	nop
 800de4c:	080235d0 	.word	0x080235d0
 800de50:	080236f4 	.word	0x080236f4
 800de54:	08023689 	.word	0x08023689

0800de58 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
 800de58:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 800de5c:	4770      	bx	lr

0800de5e <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:
 800de5e:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 800de62:	4770      	bx	lr

0800de64 <_ZN8touchgfx6CircleD1Ev>:
 800de64:	4770      	bx	lr

0800de66 <_ZN8touchgfx6CircleD0Ev>:
 800de66:	b510      	push	{r4, lr}
 800de68:	4604      	mov	r4, r0
 800de6a:	214c      	movs	r1, #76	; 0x4c
 800de6c:	f011 fcd7 	bl	801f81e <_ZdlPvj>
 800de70:	4620      	mov	r0, r4
 800de72:	bd10      	pop	{r4, pc}

0800de74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 800de74:	b507      	push	{r0, r1, r2, lr}
 800de76:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 800de7a:	ab01      	add	r3, sp, #4
 800de7c:	6809      	ldr	r1, [r1, #0]
 800de7e:	6800      	ldr	r0, [r0, #0]
 800de80:	f004 fdc0 	bl	8012a04 <_ZN8touchgfx6muldivElllRl>
 800de84:	b003      	add	sp, #12
 800de86:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0800de8c <_ZN8touchgfx7CWRUtil4sineEi>:
 800de8c:	f44f 72b4 	mov.w	r2, #360	; 0x168
 800de90:	fb90 f3f2 	sdiv	r3, r0, r2
 800de94:	fb03 0312 	mls	r3, r3, r2, r0
 800de98:	4413      	add	r3, r2
 800de9a:	fb93 f0f2 	sdiv	r0, r3, r2
 800de9e:	fb02 3010 	mls	r0, r2, r0, r3
 800dea2:	4b0a      	ldr	r3, [pc, #40]	; (800decc <_ZN8touchgfx7CWRUtil4sineEi+0x40>)
 800dea4:	285a      	cmp	r0, #90	; 0x5a
 800dea6:	dc02      	bgt.n	800deae <_ZN8touchgfx7CWRUtil4sineEi+0x22>
 800dea8:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 800deac:	4770      	bx	lr
 800deae:	28b4      	cmp	r0, #180	; 0xb4
 800deb0:	dc02      	bgt.n	800deb8 <_ZN8touchgfx7CWRUtil4sineEi+0x2c>
 800deb2:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 800deb6:	e7f7      	b.n	800dea8 <_ZN8touchgfx7CWRUtil4sineEi+0x1c>
 800deb8:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 800debc:	bfd4      	ite	le
 800debe:	38b4      	suble	r0, #180	; 0xb4
 800dec0:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 800dec4:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 800dec8:	4240      	negs	r0, r0
 800deca:	4770      	bx	lr
 800decc:	0802373c 	.word	0x0802373c

0800ded0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 800ded0:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 800ded4:	fb90 f3f2 	sdiv	r3, r0, r2
 800ded8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800deda:	fb03 0012 	mls	r0, r3, r2, r0
 800dede:	4410      	add	r0, r2
 800dee0:	fb90 f4f2 	sdiv	r4, r0, r2
 800dee4:	fb02 0414 	mls	r4, r2, r4, r0
 800dee8:	f004 061f 	and.w	r6, r4, #31
 800deec:	1164      	asrs	r4, r4, #5
 800deee:	4620      	mov	r0, r4
 800def0:	f7ff ffcc 	bl	800de8c <_ZN8touchgfx7CWRUtil4sineEi>
 800def4:	4605      	mov	r5, r0
 800def6:	b90e      	cbnz	r6, 800defc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x2c>
 800def8:	b002      	add	sp, #8
 800defa:	bd70      	pop	{r4, r5, r6, pc}
 800defc:	1c60      	adds	r0, r4, #1
 800defe:	f7ff ffc5 	bl	800de8c <_ZN8touchgfx7CWRUtil4sineEi>
 800df02:	ab01      	add	r3, sp, #4
 800df04:	2220      	movs	r2, #32
 800df06:	4631      	mov	r1, r6
 800df08:	1b40      	subs	r0, r0, r5
 800df0a:	f004 fd7b 	bl	8012a04 <_ZN8touchgfx6muldivElllRl>
 800df0e:	4428      	add	r0, r5
 800df10:	e7f2      	b.n	800def8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>

0800df12 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 800df12:	b508      	push	{r3, lr}
 800df14:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 800df18:	f7ff ffda 	bl	800ded0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800df1c:	bd08      	pop	{r3, pc}
	...

0800df20 <_ZN8touchgfx6CircleC1Ev>:
 800df20:	b510      	push	{r4, lr}
 800df22:	4604      	mov	r4, r0
 800df24:	f000 fd1c 	bl	800e960 <_ZN8touchgfx12CanvasWidgetC1Ev>
 800df28:	4b08      	ldr	r3, [pc, #32]	; (800df4c <_ZN8touchgfx6CircleC1Ev+0x2c>)
 800df2a:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 800df2e:	4620      	mov	r0, r4
 800df30:	6023      	str	r3, [r4, #0]
 800df32:	2300      	movs	r3, #0
 800df34:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
 800df38:	f24b 4205 	movw	r2, #46085	; 0xb405
 800df3c:	60a3      	str	r3, [r4, #8]
 800df3e:	e9c4 330c 	strd	r3, r3, [r4, #48]	; 0x30
 800df42:	e9c4 330e 	strd	r3, r3, [r4, #56]	; 0x38
 800df46:	f8a4 2048 	strh.w	r2, [r4, #72]	; 0x48
 800df4a:	bd10      	pop	{r4, pc}
 800df4c:	080237fc 	.word	0x080237fc

0800df50 <_ZN8touchgfx6Circle15setCapPrecisionEi>:
 800df50:	29b4      	cmp	r1, #180	; 0xb4
 800df52:	bfa8      	it	ge
 800df54:	21b4      	movge	r1, #180	; 0xb4
 800df56:	2901      	cmp	r1, #1
 800df58:	bfb8      	it	lt
 800df5a:	2101      	movlt	r1, #1
 800df5c:	f880 1049 	strb.w	r1, [r0, #73]	; 0x49
 800df60:	4770      	bx	lr

0800df62 <_ZNK8touchgfx6Circle9moveToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>:
 800df62:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800df66:	4606      	mov	r6, r0
 800df68:	6810      	ldr	r0, [r2, #0]
 800df6a:	4698      	mov	r8, r3
 800df6c:	4691      	mov	r9, r2
 800df6e:	460f      	mov	r7, r1
 800df70:	f7ff ffae 	bl	800ded0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800df74:	a902      	add	r1, sp, #8
 800df76:	2402      	movs	r4, #2
 800df78:	f841 0d08 	str.w	r0, [r1, #-8]!
 800df7c:	4640      	mov	r0, r8
 800df7e:	f7ff ff79 	bl	800de74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800df82:	6b35      	ldr	r5, [r6, #48]	; 0x30
 800df84:	fb90 f0f4 	sdiv	r0, r0, r4
 800df88:	4405      	add	r5, r0
 800df8a:	f8d9 0000 	ldr.w	r0, [r9]
 800df8e:	f7ff ffc0 	bl	800df12 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800df92:	a902      	add	r1, sp, #8
 800df94:	f841 0d04 	str.w	r0, [r1, #-4]!
 800df98:	4640      	mov	r0, r8
 800df9a:	f7ff ff6b 	bl	800de74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800df9e:	6b72      	ldr	r2, [r6, #52]	; 0x34
 800dfa0:	4629      	mov	r1, r5
 800dfa2:	fb90 f0f4 	sdiv	r0, r0, r4
 800dfa6:	1a12      	subs	r2, r2, r0
 800dfa8:	4638      	mov	r0, r7
 800dfaa:	f00f fb4c 	bl	801d646 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 800dfae:	b003      	add	sp, #12
 800dfb0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800dfb4 <_ZNK8touchgfx6Circle11lineToXYAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_S6_S6_>:
 800dfb4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800dfb8:	9e08      	ldr	r6, [sp, #32]
 800dfba:	4698      	mov	r8, r3
 800dfbc:	4615      	mov	r5, r2
 800dfbe:	460f      	mov	r7, r1
 800dfc0:	6830      	ldr	r0, [r6, #0]
 800dfc2:	2402      	movs	r4, #2
 800dfc4:	f7ff ff84 	bl	800ded0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800dfc8:	a902      	add	r1, sp, #8
 800dfca:	f841 0d08 	str.w	r0, [r1, #-8]!
 800dfce:	9809      	ldr	r0, [sp, #36]	; 0x24
 800dfd0:	f7ff ff50 	bl	800de74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800dfd4:	682d      	ldr	r5, [r5, #0]
 800dfd6:	fb90 f0f4 	sdiv	r0, r0, r4
 800dfda:	4405      	add	r5, r0
 800dfdc:	6830      	ldr	r0, [r6, #0]
 800dfde:	f7ff ff98 	bl	800df12 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800dfe2:	a902      	add	r1, sp, #8
 800dfe4:	f841 0d04 	str.w	r0, [r1, #-4]!
 800dfe8:	9809      	ldr	r0, [sp, #36]	; 0x24
 800dfea:	f7ff ff43 	bl	800de74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800dfee:	f8d8 2000 	ldr.w	r2, [r8]
 800dff2:	4629      	mov	r1, r5
 800dff4:	fb90 f0f4 	sdiv	r0, r0, r4
 800dff8:	1a12      	subs	r2, r2, r0
 800dffa:	4638      	mov	r0, r7
 800dffc:	f00f fab2 	bl	801d564 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800e000:	b002      	add	sp, #8
 800e002:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800e006 <_ZNK8touchgfx6Circle9lineToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>:
 800e006:	b513      	push	{r0, r1, r4, lr}
 800e008:	e9cd 2300 	strd	r2, r3, [sp]
 800e00c:	f100 0334 	add.w	r3, r0, #52	; 0x34
 800e010:	f100 0230 	add.w	r2, r0, #48	; 0x30
 800e014:	f7ff ffce 	bl	800dfb4 <_ZNK8touchgfx6Circle11lineToXYAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_S6_S6_>
 800e018:	b002      	add	sp, #8
 800e01a:	bd10      	pop	{r4, pc}

0800e01c <_ZNK8touchgfx6Circle14updateMinMaxXYERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>:
 800e01c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e01e:	680e      	ldr	r6, [r1, #0]
 800e020:	681f      	ldr	r7, [r3, #0]
 800e022:	9807      	ldr	r0, [sp, #28]
 800e024:	42be      	cmp	r6, r7
 800e026:	e9dd 5405 	ldrd	r5, r4, [sp, #20]
 800e02a:	bfb8      	it	lt
 800e02c:	601e      	strlt	r6, [r3, #0]
 800e02e:	680b      	ldr	r3, [r1, #0]
 800e030:	6829      	ldr	r1, [r5, #0]
 800e032:	428b      	cmp	r3, r1
 800e034:	bfc8      	it	gt
 800e036:	602b      	strgt	r3, [r5, #0]
 800e038:	6813      	ldr	r3, [r2, #0]
 800e03a:	6821      	ldr	r1, [r4, #0]
 800e03c:	428b      	cmp	r3, r1
 800e03e:	bfb8      	it	lt
 800e040:	6023      	strlt	r3, [r4, #0]
 800e042:	6813      	ldr	r3, [r2, #0]
 800e044:	6802      	ldr	r2, [r0, #0]
 800e046:	4293      	cmp	r3, r2
 800e048:	bfc8      	it	gt
 800e04a:	6003      	strgt	r3, [r0, #0]
 800e04c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e04e <_ZNK8touchgfx6Circle14updateMinMaxARERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>:
 800e04e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e052:	b089      	sub	sp, #36	; 0x24
 800e054:	4690      	mov	r8, r2
 800e056:	4606      	mov	r6, r0
 800e058:	2402      	movs	r4, #2
 800e05a:	ad08      	add	r5, sp, #32
 800e05c:	6808      	ldr	r0, [r1, #0]
 800e05e:	461f      	mov	r7, r3
 800e060:	4689      	mov	r9, r1
 800e062:	f7ff ff35 	bl	800ded0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800e066:	f845 0d04 	str.w	r0, [r5, #-4]!
 800e06a:	4640      	mov	r0, r8
 800e06c:	4629      	mov	r1, r5
 800e06e:	f7ff ff01 	bl	800de74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800e072:	6b33      	ldr	r3, [r6, #48]	; 0x30
 800e074:	fb90 f0f4 	sdiv	r0, r0, r4
 800e078:	4418      	add	r0, r3
 800e07a:	9005      	str	r0, [sp, #20]
 800e07c:	f8d9 0000 	ldr.w	r0, [r9]
 800e080:	f7ff ff47 	bl	800df12 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800e084:	4629      	mov	r1, r5
 800e086:	9007      	str	r0, [sp, #28]
 800e088:	4640      	mov	r0, r8
 800e08a:	f7ff fef3 	bl	800de74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800e08e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800e090:	aa08      	add	r2, sp, #32
 800e092:	a905      	add	r1, sp, #20
 800e094:	fb90 f0f4 	sdiv	r0, r0, r4
 800e098:	6b74      	ldr	r4, [r6, #52]	; 0x34
 800e09a:	1a24      	subs	r4, r4, r0
 800e09c:	4630      	mov	r0, r6
 800e09e:	f842 4d08 	str.w	r4, [r2, #-8]!
 800e0a2:	9302      	str	r3, [sp, #8]
 800e0a4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800e0a6:	9301      	str	r3, [sp, #4]
 800e0a8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e0aa:	9300      	str	r3, [sp, #0]
 800e0ac:	463b      	mov	r3, r7
 800e0ae:	f7ff ffb5 	bl	800e01c <_ZNK8touchgfx6Circle14updateMinMaxXYERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800e0b2:	b009      	add	sp, #36	; 0x24
 800e0b4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800e0b8 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 800e0b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e0bc:	4291      	cmp	r1, r2
 800e0be:	b08d      	sub	sp, #52	; 0x34
 800e0c0:	461e      	mov	r6, r3
 800e0c2:	4604      	mov	r4, r0
 800e0c4:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 800e0c8:	ad0c      	add	r5, sp, #48	; 0x30
 800e0ca:	f10d 0a30 	add.w	sl, sp, #48	; 0x30
 800e0ce:	e9cd 2106 	strd	r2, r1, [sp, #24]
 800e0d2:	bfc8      	it	gt
 800e0d4:	e9cd 1206 	strdgt	r1, r2, [sp, #24]
 800e0d8:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800e0dc:	e9dd 7816 	ldrd	r7, r8, [sp, #88]	; 0x58
 800e0e0:	1a9b      	subs	r3, r3, r2
 800e0e2:	a907      	add	r1, sp, #28
 800e0e4:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 800e0e8:	bfa2      	ittt	ge
 800e0ea:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 800e0ee:	2200      	movge	r2, #0
 800e0f0:	e9cd 3206 	strdge	r3, r2, [sp, #24]
 800e0f4:	6b82      	ldr	r2, [r0, #56]	; 0x38
 800e0f6:	6c43      	ldr	r3, [r0, #68]	; 0x44
 800e0f8:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800e0fc:	f845 3d04 	str.w	r3, [r5, #-4]!
 800e100:	4633      	mov	r3, r6
 800e102:	462a      	mov	r2, r5
 800e104:	9700      	str	r7, [sp, #0]
 800e106:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800e10a:	f7ff ffa0 	bl	800e04e <_ZNK8touchgfx6Circle14updateMinMaxARERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800e10e:	9b07      	ldr	r3, [sp, #28]
 800e110:	f44f 6034 	mov.w	r0, #2880	; 0xb40
 800e114:	f103 0120 	add.w	r1, r3, #32
 800e118:	fb91 f3f0 	sdiv	r3, r1, r0
 800e11c:	fb00 1313 	mls	r3, r0, r3, r1
 800e120:	1ac3      	subs	r3, r0, r3
 800e122:	fb93 f2f0 	sdiv	r2, r3, r0
 800e126:	fb00 3312 	mls	r3, r0, r2, r3
 800e12a:	440b      	add	r3, r1
 800e12c:	f84a 3d0c 	str.w	r3, [sl, #-12]!
 800e130:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800e132:	9906      	ldr	r1, [sp, #24]
 800e134:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800e136:	4291      	cmp	r1, r2
 800e138:	db11      	blt.n	800e15e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xa6>
 800e13a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e13c:	4651      	mov	r1, sl
 800e13e:	9700      	str	r7, [sp, #0]
 800e140:	4620      	mov	r0, r4
 800e142:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800e146:	462a      	mov	r2, r5
 800e148:	930b      	str	r3, [sp, #44]	; 0x2c
 800e14a:	4633      	mov	r3, r6
 800e14c:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800e150:	f7ff ff7d 	bl	800e04e <_ZNK8touchgfx6Circle14updateMinMaxARERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800e154:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e156:	f503 6334 	add.w	r3, r3, #2880	; 0xb40
 800e15a:	9309      	str	r3, [sp, #36]	; 0x24
 800e15c:	e7e8      	b.n	800e130 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x78>
 800e15e:	f5a2 6234 	sub.w	r2, r2, #2880	; 0xb40
 800e162:	4291      	cmp	r1, r2
 800e164:	dd0c      	ble.n	800e180 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xc8>
 800e166:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e168:	a906      	add	r1, sp, #24
 800e16a:	9700      	str	r7, [sp, #0]
 800e16c:	4620      	mov	r0, r4
 800e16e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800e172:	462a      	mov	r2, r5
 800e174:	930b      	str	r3, [sp, #44]	; 0x2c
 800e176:	4633      	mov	r3, r6
 800e178:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800e17c:	f7ff ff67 	bl	800e04e <_ZNK8touchgfx6Circle14updateMinMaxARERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800e180:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800e182:	2b00      	cmp	r3, #0
 800e184:	f040 8097 	bne.w	800e2b6 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x1fe>
 800e188:	e9dd 2106 	ldrd	r2, r1, [sp, #24]
 800e18c:	1a52      	subs	r2, r2, r1
 800e18e:	f5b2 5f34 	cmp.w	r2, #11520	; 0x2d00
 800e192:	da0a      	bge.n	800e1aa <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xf2>
 800e194:	462a      	mov	r2, r5
 800e196:	a90a      	add	r1, sp, #40	; 0x28
 800e198:	9700      	str	r7, [sp, #0]
 800e19a:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 800e19e:	4633      	mov	r3, r6
 800e1a0:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800e1a4:	4620      	mov	r0, r4
 800e1a6:	f7ff ff52 	bl	800e04e <_ZNK8touchgfx6Circle14updateMinMaxARERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800e1aa:	f894 3049 	ldrb.w	r3, [r4, #73]	; 0x49
 800e1ae:	2bb3      	cmp	r3, #179	; 0xb3
 800e1b0:	d87e      	bhi.n	800e2b0 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x1f8>
 800e1b2:	e9dd 3006 	ldrd	r3, r0, [sp, #24]
 800e1b6:	1a1b      	subs	r3, r3, r0
 800e1b8:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 800e1bc:	da78      	bge.n	800e2b0 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x1f8>
 800e1be:	ad0c      	add	r5, sp, #48	; 0x30
 800e1c0:	f104 0b38 	add.w	fp, r4, #56	; 0x38
 800e1c4:	f7ff fe84 	bl	800ded0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800e1c8:	f04f 0a02 	mov.w	sl, #2
 800e1cc:	f845 0d04 	str.w	r0, [r5, #-4]!
 800e1d0:	4658      	mov	r0, fp
 800e1d2:	4629      	mov	r1, r5
 800e1d4:	f7ff fe4e 	bl	800de74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800e1d8:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e1da:	18c3      	adds	r3, r0, r3
 800e1dc:	9807      	ldr	r0, [sp, #28]
 800e1de:	9305      	str	r3, [sp, #20]
 800e1e0:	f7ff fe97 	bl	800df12 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800e1e4:	4629      	mov	r1, r5
 800e1e6:	900b      	str	r0, [sp, #44]	; 0x2c
 800e1e8:	4658      	mov	r0, fp
 800e1ea:	f7ff fe43 	bl	800de74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800e1ee:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800e1f0:	9a05      	ldr	r2, [sp, #20]
 800e1f2:	a90a      	add	r1, sp, #40	; 0x28
 800e1f4:	1a1b      	subs	r3, r3, r0
 800e1f6:	9700      	str	r7, [sp, #0]
 800e1f8:	4620      	mov	r0, r4
 800e1fa:	9304      	str	r3, [sp, #16]
 800e1fc:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800e1fe:	fb93 f3fa 	sdiv	r3, r3, sl
 800e202:	1ad2      	subs	r2, r2, r3
 800e204:	920a      	str	r2, [sp, #40]	; 0x28
 800e206:	9a04      	ldr	r2, [sp, #16]
 800e208:	1ad3      	subs	r3, r2, r3
 800e20a:	462a      	mov	r2, r5
 800e20c:	930b      	str	r3, [sp, #44]	; 0x2c
 800e20e:	4633      	mov	r3, r6
 800e210:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800e214:	f7ff ff02 	bl	800e01c <_ZNK8touchgfx6Circle14updateMinMaxXYERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800e218:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800e21a:	9a05      	ldr	r2, [sp, #20]
 800e21c:	a90a      	add	r1, sp, #40	; 0x28
 800e21e:	4620      	mov	r0, r4
 800e220:	9700      	str	r7, [sp, #0]
 800e222:	fb93 f3fa 	sdiv	r3, r3, sl
 800e226:	189a      	adds	r2, r3, r2
 800e228:	920a      	str	r2, [sp, #40]	; 0x28
 800e22a:	9a04      	ldr	r2, [sp, #16]
 800e22c:	4413      	add	r3, r2
 800e22e:	462a      	mov	r2, r5
 800e230:	930b      	str	r3, [sp, #44]	; 0x2c
 800e232:	4633      	mov	r3, r6
 800e234:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800e238:	f7ff fef0 	bl	800e01c <_ZNK8touchgfx6Circle14updateMinMaxXYERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800e23c:	9806      	ldr	r0, [sp, #24]
 800e23e:	f7ff fe47 	bl	800ded0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800e242:	4629      	mov	r1, r5
 800e244:	900b      	str	r0, [sp, #44]	; 0x2c
 800e246:	4658      	mov	r0, fp
 800e248:	f7ff fe14 	bl	800de74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800e24c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e24e:	18c3      	adds	r3, r0, r3
 800e250:	9806      	ldr	r0, [sp, #24]
 800e252:	9304      	str	r3, [sp, #16]
 800e254:	f7ff fe5d 	bl	800df12 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800e258:	4629      	mov	r1, r5
 800e25a:	900b      	str	r0, [sp, #44]	; 0x2c
 800e25c:	4658      	mov	r0, fp
 800e25e:	f7ff fe09 	bl	800de74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800e262:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800e264:	9a04      	ldr	r2, [sp, #16]
 800e266:	a90a      	add	r1, sp, #40	; 0x28
 800e268:	eba3 0b00 	sub.w	fp, r3, r0
 800e26c:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800e26e:	4620      	mov	r0, r4
 800e270:	9700      	str	r7, [sp, #0]
 800e272:	fb93 f3fa 	sdiv	r3, r3, sl
 800e276:	1ad2      	subs	r2, r2, r3
 800e278:	ebab 0303 	sub.w	r3, fp, r3
 800e27c:	920a      	str	r2, [sp, #40]	; 0x28
 800e27e:	462a      	mov	r2, r5
 800e280:	930b      	str	r3, [sp, #44]	; 0x2c
 800e282:	4633      	mov	r3, r6
 800e284:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800e288:	f7ff fec8 	bl	800e01c <_ZNK8touchgfx6Circle14updateMinMaxXYERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800e28c:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800e28e:	9700      	str	r7, [sp, #0]
 800e290:	462a      	mov	r2, r5
 800e292:	a90a      	add	r1, sp, #40	; 0x28
 800e294:	4620      	mov	r0, r4
 800e296:	fb93 fafa 	sdiv	sl, r3, sl
 800e29a:	9b04      	ldr	r3, [sp, #16]
 800e29c:	4453      	add	r3, sl
 800e29e:	930a      	str	r3, [sp, #40]	; 0x28
 800e2a0:	eb0a 030b 	add.w	r3, sl, fp
 800e2a4:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800e2a8:	930b      	str	r3, [sp, #44]	; 0x2c
 800e2aa:	4633      	mov	r3, r6
 800e2ac:	f7ff feb6 	bl	800e01c <_ZNK8touchgfx6Circle14updateMinMaxXYERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800e2b0:	b00d      	add	sp, #52	; 0x34
 800e2b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e2b6:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e2b8:	a907      	add	r1, sp, #28
 800e2ba:	9700      	str	r7, [sp, #0]
 800e2bc:	4620      	mov	r0, r4
 800e2be:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800e2c2:	462a      	mov	r2, r5
 800e2c4:	930b      	str	r3, [sp, #44]	; 0x2c
 800e2c6:	4633      	mov	r3, r6
 800e2c8:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800e2cc:	f7ff febf 	bl	800e04e <_ZNK8touchgfx6Circle14updateMinMaxARERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800e2d0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e2d2:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800e2d4:	a906      	add	r1, sp, #24
 800e2d6:	9700      	str	r7, [sp, #0]
 800e2d8:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800e2dc:	462a      	mov	r2, r5
 800e2de:	930b      	str	r3, [sp, #44]	; 0x2c
 800e2e0:	4633      	mov	r3, r6
 800e2e2:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800e2e6:	e75d      	b.n	800e1a4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xec>

0800e2e8 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 800e2e8:	b530      	push	{r4, r5, lr}
 800e2ea:	4604      	mov	r4, r0
 800e2ec:	4608      	mov	r0, r1
 800e2ee:	4611      	mov	r1, r2
 800e2f0:	461a      	mov	r2, r3
 800e2f2:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800e2f6:	b089      	sub	sp, #36	; 0x24
 800e2f8:	2500      	movs	r5, #0
 800e2fa:	015b      	lsls	r3, r3, #5
 800e2fc:	9505      	str	r5, [sp, #20]
 800e2fe:	9304      	str	r3, [sp, #16]
 800e300:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800e304:	015b      	lsls	r3, r3, #5
 800e306:	e9cd 3506 	strd	r3, r5, [sp, #24]
 800e30a:	ab07      	add	r3, sp, #28
 800e30c:	2520      	movs	r5, #32
 800e30e:	9302      	str	r3, [sp, #8]
 800e310:	ab06      	add	r3, sp, #24
 800e312:	9301      	str	r3, [sp, #4]
 800e314:	ab05      	add	r3, sp, #20
 800e316:	9300      	str	r3, [sp, #0]
 800e318:	ab04      	add	r3, sp, #16
 800e31a:	f7ff fecd 	bl	800e0b8 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 800e31e:	9a04      	ldr	r2, [sp, #16]
 800e320:	9805      	ldr	r0, [sp, #20]
 800e322:	9b06      	ldr	r3, [sp, #24]
 800e324:	9907      	ldr	r1, [sp, #28]
 800e326:	fb92 f2f5 	sdiv	r2, r2, r5
 800e32a:	fb90 f0f5 	sdiv	r0, r0, r5
 800e32e:	fb93 f3f5 	sdiv	r3, r3, r5
 800e332:	fb91 f1f5 	sdiv	r1, r1, r5
 800e336:	b292      	uxth	r2, r2
 800e338:	3002      	adds	r0, #2
 800e33a:	b29b      	uxth	r3, r3
 800e33c:	3102      	adds	r1, #2
 800e33e:	1a80      	subs	r0, r0, r2
 800e340:	3a01      	subs	r2, #1
 800e342:	1ac9      	subs	r1, r1, r3
 800e344:	3b01      	subs	r3, #1
 800e346:	80a0      	strh	r0, [r4, #4]
 800e348:	4620      	mov	r0, r4
 800e34a:	8022      	strh	r2, [r4, #0]
 800e34c:	8063      	strh	r3, [r4, #2]
 800e34e:	80e1      	strh	r1, [r4, #6]
 800e350:	b009      	add	sp, #36	; 0x24
 800e352:	bd30      	pop	{r4, r5, pc}

0800e354 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 800e354:	b510      	push	{r4, lr}
 800e356:	4604      	mov	r4, r0
 800e358:	e9d1 230f 	ldrd	r2, r3, [r1, #60]	; 0x3c
 800e35c:	f7ff ffc4 	bl	800e2e8 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 800e360:	4620      	mov	r0, r4
 800e362:	bd10      	pop	{r4, pc}

0800e364 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 800e364:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e366:	e9d1 540f 	ldrd	r5, r4, [r1, #60]	; 0x3c
 800e36a:	4606      	mov	r6, r0
 800e36c:	f891 0048 	ldrb.w	r0, [r1, #72]	; 0x48
 800e370:	42a5      	cmp	r5, r4
 800e372:	6813      	ldr	r3, [r2, #0]
 800e374:	ea4f 1040 	mov.w	r0, r0, lsl #5
 800e378:	da2b      	bge.n	800e3d2 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 800e37a:	42a3      	cmp	r3, r4
 800e37c:	dd14      	ble.n	800e3a8 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 800e37e:	b168      	cbz	r0, 800e39c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 800e380:	4267      	negs	r7, r4
 800e382:	fb97 f2f0 	sdiv	r2, r7, r0
 800e386:	fb00 7212 	mls	r2, r0, r2, r7
 800e38a:	1a82      	subs	r2, r0, r2
 800e38c:	fb92 f7f0 	sdiv	r7, r2, r0
 800e390:	fb00 2017 	mls	r0, r0, r7, r2
 800e394:	1a24      	subs	r4, r4, r0
 800e396:	42ac      	cmp	r4, r5
 800e398:	bfb8      	it	lt
 800e39a:	462c      	movlt	r4, r5
 800e39c:	4630      	mov	r0, r6
 800e39e:	4622      	mov	r2, r4
 800e3a0:	f7ff ffa2 	bl	800e2e8 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 800e3a4:	4630      	mov	r0, r6
 800e3a6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e3a8:	42ab      	cmp	r3, r5
 800e3aa:	dd0e      	ble.n	800e3ca <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 800e3ac:	b168      	cbz	r0, 800e3ca <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 800e3ae:	425f      	negs	r7, r3
 800e3b0:	fb97 f2f0 	sdiv	r2, r7, r0
 800e3b4:	fb00 7212 	mls	r2, r0, r2, r7
 800e3b8:	1a82      	subs	r2, r0, r2
 800e3ba:	fb92 f7f0 	sdiv	r7, r2, r0
 800e3be:	fb00 2017 	mls	r0, r0, r7, r2
 800e3c2:	1a1b      	subs	r3, r3, r0
 800e3c4:	42ab      	cmp	r3, r5
 800e3c6:	bfb8      	it	lt
 800e3c8:	462b      	movlt	r3, r5
 800e3ca:	4622      	mov	r2, r4
 800e3cc:	461c      	mov	r4, r3
 800e3ce:	4613      	mov	r3, r2
 800e3d0:	e7e4      	b.n	800e39c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 800e3d2:	42a3      	cmp	r3, r4
 800e3d4:	da10      	bge.n	800e3f8 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 800e3d6:	b148      	cbz	r0, 800e3ec <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 800e3d8:	fb94 f2f0 	sdiv	r2, r4, r0
 800e3dc:	fb00 4212 	mls	r2, r0, r2, r4
 800e3e0:	1a82      	subs	r2, r0, r2
 800e3e2:	fb92 f7f0 	sdiv	r7, r2, r0
 800e3e6:	fb00 2017 	mls	r0, r0, r7, r2
 800e3ea:	4404      	add	r4, r0
 800e3ec:	42a5      	cmp	r5, r4
 800e3ee:	bfa8      	it	ge
 800e3f0:	4625      	movge	r5, r4
 800e3f2:	461c      	mov	r4, r3
 800e3f4:	462b      	mov	r3, r5
 800e3f6:	e7d1      	b.n	800e39c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 800e3f8:	42ab      	cmp	r3, r5
 800e3fa:	dacf      	bge.n	800e39c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 800e3fc:	2800      	cmp	r0, #0
 800e3fe:	d0cd      	beq.n	800e39c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 800e400:	fb93 f2f0 	sdiv	r2, r3, r0
 800e404:	fb00 3212 	mls	r2, r0, r2, r3
 800e408:	1a82      	subs	r2, r0, r2
 800e40a:	fb92 f7f0 	sdiv	r7, r2, r0
 800e40e:	fb00 2017 	mls	r0, r0, r7, r2
 800e412:	4403      	add	r3, r0
 800e414:	42ab      	cmp	r3, r5
 800e416:	bfa8      	it	ge
 800e418:	462b      	movge	r3, r5
 800e41a:	e7bf      	b.n	800e39c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>

0800e41c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 800e41c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e420:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 800e422:	b0ba      	sub	sp, #232	; 0xe8
 800e424:	6c02      	ldr	r2, [r0, #64]	; 0x40
 800e426:	4689      	mov	r9, r1
 800e428:	9303      	str	r3, [sp, #12]
 800e42a:	2120      	movs	r1, #32
 800e42c:	4293      	cmp	r3, r2
 800e42e:	9204      	str	r2, [sp, #16]
 800e430:	f9b0 7030 	ldrsh.w	r7, [r0, #48]	; 0x30
 800e434:	4604      	mov	r4, r0
 800e436:	f9b0 8034 	ldrsh.w	r8, [r0, #52]	; 0x34
 800e43a:	bfc8      	it	gt
 800e43c:	e9cd 2303 	strdgt	r2, r3, [sp, #12]
 800e440:	e9dd 2303 	ldrd	r2, r3, [sp, #12]
 800e444:	fb97 f7f1 	sdiv	r7, r7, r1
 800e448:	1a9b      	subs	r3, r3, r2
 800e44a:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 800e44e:	bfa2      	ittt	ge
 800e450:	2200      	movge	r2, #0
 800e452:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 800e456:	e9cd 2303 	strdge	r2, r3, [sp, #12]
 800e45a:	6c42      	ldr	r2, [r0, #68]	; 0x44
 800e45c:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800e45e:	fb98 f8f1 	sdiv	r8, r8, r1
 800e462:	2a00      	cmp	r2, #0
 800e464:	d050      	beq.n	800e508 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xec>
 800e466:	f9b9 0000 	ldrsh.w	r0, [r9]
 800e46a:	f04f 0a02 	mov.w	sl, #2
 800e46e:	f9b9 1002 	ldrsh.w	r1, [r9, #2]
 800e472:	1a3d      	subs	r5, r7, r0
 800e474:	eba8 0601 	sub.w	r6, r8, r1
 800e478:	ea85 7ce5 	eor.w	ip, r5, r5, asr #31
 800e47c:	ebac 7ce5 	sub.w	ip, ip, r5, asr #31
 800e480:	f8b9 5004 	ldrh.w	r5, [r9, #4]
 800e484:	4405      	add	r5, r0
 800e486:	ea86 70e6 	eor.w	r0, r6, r6, asr #31
 800e48a:	eba0 70e6 	sub.w	r0, r0, r6, asr #31
 800e48e:	f8b9 6006 	ldrh.w	r6, [r9, #6]
 800e492:	b22d      	sxth	r5, r5
 800e494:	440e      	add	r6, r1
 800e496:	1b7d      	subs	r5, r7, r5
 800e498:	b236      	sxth	r6, r6
 800e49a:	2d00      	cmp	r5, #0
 800e49c:	eba8 0606 	sub.w	r6, r8, r6
 800e4a0:	bfb8      	it	lt
 800e4a2:	426d      	neglt	r5, r5
 800e4a4:	2e00      	cmp	r6, #0
 800e4a6:	bfb8      	it	lt
 800e4a8:	4276      	neglt	r6, r6
 800e4aa:	4565      	cmp	r5, ip
 800e4ac:	bfb4      	ite	lt
 800e4ae:	f10c 0501 	addlt.w	r5, ip, #1
 800e4b2:	3501      	addge	r5, #1
 800e4b4:	4286      	cmp	r6, r0
 800e4b6:	bfb8      	it	lt
 800e4b8:	1c46      	addlt	r6, r0, #1
 800e4ba:	f894 0048 	ldrb.w	r0, [r4, #72]	; 0x48
 800e4be:	bfa8      	it	ge
 800e4c0:	3601      	addge	r6, #1
 800e4c2:	3001      	adds	r0, #1
 800e4c4:	4376      	muls	r6, r6
 800e4c6:	1040      	asrs	r0, r0, #1
 800e4c8:	fb05 6505 	mla	r5, r5, r5, r6
 800e4cc:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 800e4d0:	fb92 f2fa 	sdiv	r2, r2, sl
 800e4d4:	1a9b      	subs	r3, r3, r2
 800e4d6:	930a      	str	r3, [sp, #40]	; 0x28
 800e4d8:	f7ff fcd8 	bl	800de8c <_ZN8touchgfx7CWRUtil4sineEi>
 800e4dc:	a93a      	add	r1, sp, #232	; 0xe8
 800e4de:	f841 0dbc 	str.w	r0, [r1, #-188]!
 800e4e2:	a80a      	add	r0, sp, #40	; 0x28
 800e4e4:	f7ff fcc6 	bl	800de74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800e4e8:	2120      	movs	r1, #32
 800e4ea:	fb90 f0f1 	sdiv	r0, r0, r1
 800e4ee:	4340      	muls	r0, r0
 800e4f0:	4285      	cmp	r5, r0
 800e4f2:	da04      	bge.n	800e4fe <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xe2>
 800e4f4:	2401      	movs	r4, #1
 800e4f6:	4620      	mov	r0, r4
 800e4f8:	b03a      	add	sp, #232	; 0xe8
 800e4fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e4fe:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800e500:	fb92 f3fa 	sdiv	r3, r2, sl
 800e504:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e506:	4413      	add	r3, r2
 800e508:	f8b9 2004 	ldrh.w	r2, [r9, #4]
 800e50c:	fb93 f3f1 	sdiv	r3, r3, r1
 800e510:	f9b9 1000 	ldrsh.w	r1, [r9]
 800e514:	3301      	adds	r3, #1
 800e516:	440a      	add	r2, r1
 800e518:	435b      	muls	r3, r3
 800e51a:	b212      	sxth	r2, r2
 800e51c:	42ba      	cmp	r2, r7
 800e51e:	bfa8      	it	ge
 800e520:	463a      	movge	r2, r7
 800e522:	428a      	cmp	r2, r1
 800e524:	bfac      	ite	ge
 800e526:	1abf      	subge	r7, r7, r2
 800e528:	1a7f      	sublt	r7, r7, r1
 800e52a:	f8b9 2006 	ldrh.w	r2, [r9, #6]
 800e52e:	f9b9 1002 	ldrsh.w	r1, [r9, #2]
 800e532:	440a      	add	r2, r1
 800e534:	b212      	sxth	r2, r2
 800e536:	4542      	cmp	r2, r8
 800e538:	bfa8      	it	ge
 800e53a:	4642      	movge	r2, r8
 800e53c:	428a      	cmp	r2, r1
 800e53e:	bfac      	ite	ge
 800e540:	eba8 0802 	subge.w	r8, r8, r2
 800e544:	eba8 0801 	sublt.w	r8, r8, r1
 800e548:	fb08 f808 	mul.w	r8, r8, r8
 800e54c:	fb07 8707 	mla	r7, r7, r7, r8
 800e550:	429f      	cmp	r7, r3
 800e552:	dccf      	bgt.n	800e4f4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xd8>
 800e554:	464a      	mov	r2, r9
 800e556:	4621      	mov	r1, r4
 800e558:	a80b      	add	r0, sp, #44	; 0x2c
 800e55a:	f00e fea9 	bl	801d2b0 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 800e55e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e560:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800e562:	9205      	str	r2, [sp, #20]
 800e564:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 800e568:	9306      	str	r3, [sp, #24]
 800e56a:	dd07      	ble.n	800e57c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x160>
 800e56c:	2102      	movs	r1, #2
 800e56e:	fb93 f3f1 	sdiv	r3, r3, r1
 800e572:	4413      	add	r3, r2
 800e574:	9306      	str	r3, [sp, #24]
 800e576:	fb93 f3f1 	sdiv	r3, r3, r1
 800e57a:	9305      	str	r3, [sp, #20]
 800e57c:	9b03      	ldr	r3, [sp, #12]
 800e57e:	ad3a      	add	r5, sp, #232	; 0xe8
 800e580:	f894 6048 	ldrb.w	r6, [r4, #72]	; 0x48
 800e584:	a90b      	add	r1, sp, #44	; 0x2c
 800e586:	9307      	str	r3, [sp, #28]
 800e588:	4620      	mov	r0, r4
 800e58a:	0176      	lsls	r6, r6, #5
 800e58c:	e9dd 2305 	ldrd	r2, r3, [sp, #20]
 800e590:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800e594:	aa07      	add	r2, sp, #28
 800e596:	f845 3dc0 	str.w	r3, [r5, #-192]!
 800e59a:	462b      	mov	r3, r5
 800e59c:	f7ff fce1 	bl	800df62 <_ZNK8touchgfx6Circle9moveToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>
 800e5a0:	9f07      	ldr	r7, [sp, #28]
 800e5a2:	b996      	cbnz	r6, 800e5ca <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1ae>
 800e5a4:	3720      	adds	r7, #32
 800e5a6:	4639      	mov	r1, r7
 800e5a8:	9a04      	ldr	r2, [sp, #16]
 800e5aa:	9b06      	ldr	r3, [sp, #24]
 800e5ac:	4437      	add	r7, r6
 800e5ae:	4291      	cmp	r1, r2
 800e5b0:	dc18      	bgt.n	800e5e4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1c8>
 800e5b2:	9a05      	ldr	r2, [sp, #20]
 800e5b4:	4620      	mov	r0, r4
 800e5b6:	9107      	str	r1, [sp, #28]
 800e5b8:	a90b      	add	r1, sp, #44	; 0x2c
 800e5ba:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800e5be:	aa07      	add	r2, sp, #28
 800e5c0:	930a      	str	r3, [sp, #40]	; 0x28
 800e5c2:	462b      	mov	r3, r5
 800e5c4:	f7ff fd1f 	bl	800e006 <_ZNK8touchgfx6Circle9lineToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>
 800e5c8:	e7ed      	b.n	800e5a6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x18a>
 800e5ca:	f107 0320 	add.w	r3, r7, #32
 800e5ce:	fb93 f7f6 	sdiv	r7, r3, r6
 800e5d2:	fb06 3717 	mls	r7, r6, r7, r3
 800e5d6:	1bf2      	subs	r2, r6, r7
 800e5d8:	fb92 f7f6 	sdiv	r7, r2, r6
 800e5dc:	fb06 2717 	mls	r7, r6, r7, r2
 800e5e0:	441f      	add	r7, r3
 800e5e2:	e7e0      	b.n	800e5a6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x18a>
 800e5e4:	9907      	ldr	r1, [sp, #28]
 800e5e6:	428a      	cmp	r2, r1
 800e5e8:	dd09      	ble.n	800e5fe <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1e2>
 800e5ea:	9a05      	ldr	r2, [sp, #20]
 800e5ec:	a90b      	add	r1, sp, #44	; 0x2c
 800e5ee:	4620      	mov	r0, r4
 800e5f0:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800e5f4:	aa04      	add	r2, sp, #16
 800e5f6:	930a      	str	r3, [sp, #40]	; 0x28
 800e5f8:	462b      	mov	r3, r5
 800e5fa:	f7ff fd04 	bl	800e006 <_ZNK8touchgfx6Circle9lineToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>
 800e5fe:	9a06      	ldr	r2, [sp, #24]
 800e600:	e9dd 3003 	ldrd	r3, r0, [sp, #12]
 800e604:	1ac3      	subs	r3, r0, r3
 800e606:	b982      	cbnz	r2, 800e62a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x20e>
 800e608:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 800e60c:	da04      	bge.n	800e618 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1fc>
 800e60e:	a80b      	add	r0, sp, #44	; 0x2c
 800e610:	e9d4 120c 	ldrd	r1, r2, [r4, #48]	; 0x30
 800e614:	f00e ffa6 	bl	801d564 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800e618:	21ff      	movs	r1, #255	; 0xff
 800e61a:	a80b      	add	r0, sp, #44	; 0x2c
 800e61c:	f00f f917 	bl	801d84e <_ZN8touchgfx6Canvas6renderEh>
 800e620:	4604      	mov	r4, r0
 800e622:	a80b      	add	r0, sp, #44	; 0x2c
 800e624:	f00f f952 	bl	801d8cc <_ZN8touchgfx6CanvasD1Ev>
 800e628:	e765      	b.n	800e4f6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xda>
 800e62a:	f894 7049 	ldrb.w	r7, [r4, #73]	; 0x49
 800e62e:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 800e632:	ea4f 1747 	mov.w	r7, r7, lsl #5
 800e636:	da2b      	bge.n	800e690 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x274>
 800e638:	f7ff fc4a 	bl	800ded0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800e63c:	4629      	mov	r1, r5
 800e63e:	900a      	str	r0, [sp, #40]	; 0x28
 800e640:	a805      	add	r0, sp, #20
 800e642:	f7ff fc17 	bl	800de74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800e646:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e648:	f10d 0818 	add.w	r8, sp, #24
 800e64c:	4418      	add	r0, r3
 800e64e:	9008      	str	r0, [sp, #32]
 800e650:	9804      	ldr	r0, [sp, #16]
 800e652:	f7ff fc5e 	bl	800df12 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800e656:	4629      	mov	r1, r5
 800e658:	900a      	str	r0, [sp, #40]	; 0x28
 800e65a:	a805      	add	r0, sp, #20
 800e65c:	f7ff fc0a 	bl	800de74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800e660:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800e662:	1a18      	subs	r0, r3, r0
 800e664:	9b04      	ldr	r3, [sp, #16]
 800e666:	443b      	add	r3, r7
 800e668:	9009      	str	r0, [sp, #36]	; 0x24
 800e66a:	930a      	str	r3, [sp, #40]	; 0x28
 800e66c:	9b04      	ldr	r3, [sp, #16]
 800e66e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800e670:	f503 53b4 	add.w	r3, r3, #5760	; 0x1680
 800e674:	4293      	cmp	r3, r2
 800e676:	dd0b      	ble.n	800e690 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x274>
 800e678:	ab09      	add	r3, sp, #36	; 0x24
 800e67a:	aa08      	add	r2, sp, #32
 800e67c:	a90b      	add	r1, sp, #44	; 0x2c
 800e67e:	4620      	mov	r0, r4
 800e680:	e9cd 5800 	strd	r5, r8, [sp]
 800e684:	f7ff fc96 	bl	800dfb4 <_ZNK8touchgfx6Circle11lineToXYAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_S6_S6_>
 800e688:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800e68a:	443b      	add	r3, r7
 800e68c:	930a      	str	r3, [sp, #40]	; 0x28
 800e68e:	e7ed      	b.n	800e66c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x250>
 800e690:	9a04      	ldr	r2, [sp, #16]
 800e692:	9b07      	ldr	r3, [sp, #28]
 800e694:	429a      	cmp	r2, r3
 800e696:	dd0a      	ble.n	800e6ae <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x292>
 800e698:	a90b      	add	r1, sp, #44	; 0x2c
 800e69a:	4620      	mov	r0, r4
 800e69c:	e9dd 2305 	ldrd	r2, r3, [sp, #20]
 800e6a0:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800e6a4:	aa04      	add	r2, sp, #16
 800e6a6:	930a      	str	r3, [sp, #40]	; 0x28
 800e6a8:	462b      	mov	r3, r5
 800e6aa:	f7ff fcac 	bl	800e006 <_ZNK8touchgfx6Circle9lineToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>
 800e6ae:	f8dd 801c 	ldr.w	r8, [sp, #28]
 800e6b2:	4642      	mov	r2, r8
 800e6b4:	9b03      	ldr	r3, [sp, #12]
 800e6b6:	eba8 0806 	sub.w	r8, r8, r6
 800e6ba:	429a      	cmp	r2, r3
 800e6bc:	db0c      	blt.n	800e6d8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2bc>
 800e6be:	9207      	str	r2, [sp, #28]
 800e6c0:	a90b      	add	r1, sp, #44	; 0x2c
 800e6c2:	4620      	mov	r0, r4
 800e6c4:	e9dd 2305 	ldrd	r2, r3, [sp, #20]
 800e6c8:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800e6cc:	aa07      	add	r2, sp, #28
 800e6ce:	930a      	str	r3, [sp, #40]	; 0x28
 800e6d0:	462b      	mov	r3, r5
 800e6d2:	f7ff fc98 	bl	800e006 <_ZNK8touchgfx6Circle9lineToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>
 800e6d6:	e7ec      	b.n	800e6b2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x296>
 800e6d8:	9a07      	ldr	r2, [sp, #28]
 800e6da:	4293      	cmp	r3, r2
 800e6dc:	da0a      	bge.n	800e6f4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2d8>
 800e6de:	a90b      	add	r1, sp, #44	; 0x2c
 800e6e0:	4620      	mov	r0, r4
 800e6e2:	e9dd 2305 	ldrd	r2, r3, [sp, #20]
 800e6e6:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800e6ea:	aa03      	add	r2, sp, #12
 800e6ec:	930a      	str	r3, [sp, #40]	; 0x28
 800e6ee:	462b      	mov	r3, r5
 800e6f0:	f7ff fc89 	bl	800e006 <_ZNK8touchgfx6Circle9lineToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>
 800e6f4:	e9dd 0303 	ldrd	r0, r3, [sp, #12]
 800e6f8:	1a1b      	subs	r3, r3, r0
 800e6fa:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 800e6fe:	da8b      	bge.n	800e618 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1fc>
 800e700:	f7ff fbe6 	bl	800ded0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800e704:	4629      	mov	r1, r5
 800e706:	900a      	str	r0, [sp, #40]	; 0x28
 800e708:	a805      	add	r0, sp, #20
 800e70a:	f7ff fbb3 	bl	800de74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800e70e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e710:	ae06      	add	r6, sp, #24
 800e712:	4418      	add	r0, r3
 800e714:	9008      	str	r0, [sp, #32]
 800e716:	9803      	ldr	r0, [sp, #12]
 800e718:	f7ff fbfb 	bl	800df12 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800e71c:	4629      	mov	r1, r5
 800e71e:	900a      	str	r0, [sp, #40]	; 0x28
 800e720:	a805      	add	r0, sp, #20
 800e722:	f7ff fba7 	bl	800de74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800e726:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800e728:	1a18      	subs	r0, r3, r0
 800e72a:	9b03      	ldr	r3, [sp, #12]
 800e72c:	f5a3 53b4 	sub.w	r3, r3, #5760	; 0x1680
 800e730:	9009      	str	r0, [sp, #36]	; 0x24
 800e732:	443b      	add	r3, r7
 800e734:	930a      	str	r3, [sp, #40]	; 0x28
 800e736:	9a03      	ldr	r2, [sp, #12]
 800e738:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800e73a:	429a      	cmp	r2, r3
 800e73c:	f77f af6c 	ble.w	800e618 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1fc>
 800e740:	ab09      	add	r3, sp, #36	; 0x24
 800e742:	aa08      	add	r2, sp, #32
 800e744:	a90b      	add	r1, sp, #44	; 0x2c
 800e746:	4620      	mov	r0, r4
 800e748:	e9cd 5600 	strd	r5, r6, [sp]
 800e74c:	f7ff fc32 	bl	800dfb4 <_ZNK8touchgfx6Circle11lineToXYAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_S6_S6_>
 800e750:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800e752:	443b      	add	r3, r7
 800e754:	930a      	str	r3, [sp, #40]	; 0x28
 800e756:	e7ee      	b.n	800e736 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x31a>

0800e758 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>:
 800e758:	6281      	str	r1, [r0, #40]	; 0x28
 800e75a:	4770      	bx	lr

0800e75c <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
 800e75c:	b510      	push	{r4, lr}
 800e75e:	2200      	movs	r2, #0
 800e760:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 800e764:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 800e768:	8002      	strh	r2, [r0, #0]
 800e76a:	8042      	strh	r2, [r0, #2]
 800e76c:	8084      	strh	r4, [r0, #4]
 800e76e:	80c1      	strh	r1, [r0, #6]
 800e770:	bd10      	pop	{r4, pc}

0800e772 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
 800e772:	2200      	movs	r2, #0
 800e774:	8002      	strh	r2, [r0, #0]
 800e776:	8042      	strh	r2, [r0, #2]
 800e778:	8082      	strh	r2, [r0, #4]
 800e77a:	80c2      	strh	r2, [r0, #6]
 800e77c:	4770      	bx	lr
	...

0800e780 <_ZNK8touchgfx12CanvasWidget10getPainterEv>:
 800e780:	b508      	push	{r3, lr}
 800e782:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800e784:	b928      	cbnz	r0, 800e792 <_ZNK8touchgfx12CanvasWidget10getPainterEv+0x12>
 800e786:	4b03      	ldr	r3, [pc, #12]	; (800e794 <_ZNK8touchgfx12CanvasWidget10getPainterEv+0x14>)
 800e788:	2123      	movs	r1, #35	; 0x23
 800e78a:	4a03      	ldr	r2, [pc, #12]	; (800e798 <_ZNK8touchgfx12CanvasWidget10getPainterEv+0x18>)
 800e78c:	4803      	ldr	r0, [pc, #12]	; (800e79c <_ZNK8touchgfx12CanvasWidget10getPainterEv+0x1c>)
 800e78e:	f011 fa23 	bl	801fbd8 <__assert_func>
 800e792:	bd08      	pop	{r3, pc}
 800e794:	08023874 	.word	0x08023874
 800e798:	08023958 	.word	0x08023958
 800e79c:	0802389b 	.word	0x0802389b

0800e7a0 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800e7a0:	b510      	push	{r4, lr}
 800e7a2:	f9b1 4000 	ldrsh.w	r4, [r1]
 800e7a6:	888a      	ldrh	r2, [r1, #4]
 800e7a8:	f9b0 3000 	ldrsh.w	r3, [r0]
 800e7ac:	4422      	add	r2, r4
 800e7ae:	b212      	sxth	r2, r2
 800e7b0:	4293      	cmp	r3, r2
 800e7b2:	da15      	bge.n	800e7e0 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800e7b4:	8882      	ldrh	r2, [r0, #4]
 800e7b6:	4413      	add	r3, r2
 800e7b8:	b21b      	sxth	r3, r3
 800e7ba:	429c      	cmp	r4, r3
 800e7bc:	da10      	bge.n	800e7e0 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800e7be:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800e7c2:	88c9      	ldrh	r1, [r1, #6]
 800e7c4:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800e7c8:	4419      	add	r1, r3
 800e7ca:	b209      	sxth	r1, r1
 800e7cc:	428a      	cmp	r2, r1
 800e7ce:	da07      	bge.n	800e7e0 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800e7d0:	88c0      	ldrh	r0, [r0, #6]
 800e7d2:	4410      	add	r0, r2
 800e7d4:	b200      	sxth	r0, r0
 800e7d6:	4283      	cmp	r3, r0
 800e7d8:	bfac      	ite	ge
 800e7da:	2000      	movge	r0, #0
 800e7dc:	2001      	movlt	r0, #1
 800e7de:	bd10      	pop	{r4, pc}
 800e7e0:	2000      	movs	r0, #0
 800e7e2:	e7fc      	b.n	800e7de <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800e7e4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 800e7e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e7e8:	b08b      	sub	sp, #44	; 0x2c
 800e7ea:	4604      	mov	r4, r0
 800e7ec:	6808      	ldr	r0, [r1, #0]
 800e7ee:	f04f 0a00 	mov.w	sl, #0
 800e7f2:	6849      	ldr	r1, [r1, #4]
 800e7f4:	ab04      	add	r3, sp, #16
 800e7f6:	f647 7bff 	movw	fp, #32767	; 0x7fff
 800e7fa:	c303      	stmia	r3!, {r0, r1}
 800e7fc:	4b35      	ldr	r3, [pc, #212]	; (800e8d4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xf0>)
 800e7fe:	4621      	mov	r1, r4
 800e800:	a806      	add	r0, sp, #24
 800e802:	781b      	ldrb	r3, [r3, #0]
 800e804:	2b01      	cmp	r3, #1
 800e806:	6823      	ldr	r3, [r4, #0]
 800e808:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800e80a:	bf1f      	itttt	ne
 800e80c:	f10d 090e 	addne.w	r9, sp, #14
 800e810:	ae05      	addne	r6, sp, #20
 800e812:	f10d 0516 	addne.w	r5, sp, #22
 800e816:	f10d 0812 	addne.w	r8, sp, #18
 800e81a:	bf01      	itttt	eq
 800e81c:	f10d 0916 	addeq.w	r9, sp, #22
 800e820:	f10d 060e 	addeq.w	r6, sp, #14
 800e824:	ad05      	addeq	r5, sp, #20
 800e826:	f10d 0810 	addeq.w	r8, sp, #16
 800e82a:	4798      	blx	r3
 800e82c:	f9b5 3000 	ldrsh.w	r3, [r5]
 800e830:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 800e834:	2b00      	cmp	r3, #0
 800e836:	d042      	beq.n	800e8be <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xda>
 800e838:	4293      	cmp	r3, r2
 800e83a:	bfa8      	it	ge
 800e83c:	4613      	movge	r3, r2
 800e83e:	f8ad 300e 	strh.w	r3, [sp, #14]
 800e842:	f9bd 700e 	ldrsh.w	r7, [sp, #14]
 800e846:	2f00      	cmp	r7, #0
 800e848:	dd21      	ble.n	800e88e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xaa>
 800e84a:	f9bd 0010 	ldrsh.w	r0, [sp, #16]
 800e84e:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 800e852:	f9b6 2000 	ldrsh.w	r2, [r6]
 800e856:	f9b9 3000 	ldrsh.w	r3, [r9]
 800e85a:	f8ad 0020 	strh.w	r0, [sp, #32]
 800e85e:	a808      	add	r0, sp, #32
 800e860:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 800e864:	a906      	add	r1, sp, #24
 800e866:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 800e86a:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800e86e:	f7ff ff97 	bl	800e7a0 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800e872:	9001      	str	r0, [sp, #4]
 800e874:	b1d0      	cbz	r0, 800e8ac <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xc8>
 800e876:	6822      	ldr	r2, [r4, #0]
 800e878:	a908      	add	r1, sp, #32
 800e87a:	4620      	mov	r0, r4
 800e87c:	6f52      	ldr	r2, [r2, #116]	; 0x74
 800e87e:	4790      	blx	r2
 800e880:	b9a0      	cbnz	r0, 800e8ac <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xc8>
 800e882:	107f      	asrs	r7, r7, #1
 800e884:	9b01      	ldr	r3, [sp, #4]
 800e886:	f8ad 700e 	strh.w	r7, [sp, #14]
 800e88a:	469a      	mov	sl, r3
 800e88c:	e7d9      	b.n	800e842 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800e88e:	d10d      	bne.n	800e8ac <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xc8>
 800e890:	2301      	movs	r3, #1
 800e892:	f8ad 300e 	strh.w	r3, [sp, #14]
 800e896:	f8b8 2000 	ldrh.w	r2, [r8]
 800e89a:	f8bd 100e 	ldrh.w	r1, [sp, #14]
 800e89e:	440a      	add	r2, r1
 800e8a0:	f8a8 2000 	strh.w	r2, [r8]
 800e8a4:	882b      	ldrh	r3, [r5, #0]
 800e8a6:	1a5b      	subs	r3, r3, r1
 800e8a8:	802b      	strh	r3, [r5, #0]
 800e8aa:	e7bf      	b.n	800e82c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800e8ac:	f1ba 0f00 	cmp.w	sl, #0
 800e8b0:	d0f1      	beq.n	800e896 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xb2>
 800e8b2:	f9b4 302c 	ldrsh.w	r3, [r4, #44]	; 0x2c
 800e8b6:	455b      	cmp	r3, fp
 800e8b8:	bf08      	it	eq
 800e8ba:	85a7      	strheq	r7, [r4, #44]	; 0x2c
 800e8bc:	e7eb      	b.n	800e896 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xb2>
 800e8be:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800e8c2:	429a      	cmp	r2, r3
 800e8c4:	bf04      	itt	eq
 800e8c6:	f647 73fe 	movweq	r3, #32766	; 0x7ffe
 800e8ca:	85a3      	strheq	r3, [r4, #44]	; 0x2c
 800e8cc:	b00b      	add	sp, #44	; 0x2c
 800e8ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e8d2:	bf00      	nop
 800e8d4:	2400e074 	.word	0x2400e074

0800e8d8 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 800e8d8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e8da:	b085      	sub	sp, #20
 800e8dc:	6803      	ldr	r3, [r0, #0]
 800e8de:	4604      	mov	r4, r0
 800e8e0:	4601      	mov	r1, r0
 800e8e2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800e8e4:	4668      	mov	r0, sp
 800e8e6:	4798      	blx	r3
 800e8e8:	f9b4 6008 	ldrsh.w	r6, [r4, #8]
 800e8ec:	f9b4 500a 	ldrsh.w	r5, [r4, #10]
 800e8f0:	2300      	movs	r3, #0
 800e8f2:	a902      	add	r1, sp, #8
 800e8f4:	4668      	mov	r0, sp
 800e8f6:	9302      	str	r3, [sp, #8]
 800e8f8:	f8ad 600c 	strh.w	r6, [sp, #12]
 800e8fc:	f8ad 500e 	strh.w	r5, [sp, #14]
 800e900:	f7ff ff4e 	bl	800e7a0 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800e904:	b340      	cbz	r0, 800e958 <_ZNK8touchgfx12CanvasWidget10invalidateEv+0x80>
 800e906:	f9bd 2000 	ldrsh.w	r2, [sp]
 800e90a:	f8bd 7004 	ldrh.w	r7, [sp, #4]
 800e90e:	ea22 70e2 	bic.w	r0, r2, r2, asr #31
 800e912:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 800e916:	443a      	add	r2, r7
 800e918:	ea23 71e3 	bic.w	r1, r3, r3, asr #31
 800e91c:	f8ad 0000 	strh.w	r0, [sp]
 800e920:	b292      	uxth	r2, r2
 800e922:	f8ad 1002 	strh.w	r1, [sp, #2]
 800e926:	b217      	sxth	r7, r2
 800e928:	42be      	cmp	r6, r7
 800e92a:	bfd8      	it	le
 800e92c:	b2b2      	uxthle	r2, r6
 800e92e:	1a12      	subs	r2, r2, r0
 800e930:	f8ad 2004 	strh.w	r2, [sp, #4]
 800e934:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800e938:	4413      	add	r3, r2
 800e93a:	b29b      	uxth	r3, r3
 800e93c:	b21a      	sxth	r2, r3
 800e93e:	4295      	cmp	r5, r2
 800e940:	bfd8      	it	le
 800e942:	b2ab      	uxthle	r3, r5
 800e944:	1a5b      	subs	r3, r3, r1
 800e946:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e94a:	6823      	ldr	r3, [r4, #0]
 800e94c:	4669      	mov	r1, sp
 800e94e:	4620      	mov	r0, r4
 800e950:	691b      	ldr	r3, [r3, #16]
 800e952:	4798      	blx	r3
 800e954:	b005      	add	sp, #20
 800e956:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e958:	e9cd 0000 	strd	r0, r0, [sp]
 800e95c:	e7f5      	b.n	800e94a <_ZNK8touchgfx12CanvasWidget10invalidateEv+0x72>
	...

0800e960 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 800e960:	2101      	movs	r1, #1
 800e962:	2200      	movs	r2, #0
 800e964:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800e968:	490c      	ldr	r1, [pc, #48]	; (800e99c <_ZN8touchgfx12CanvasWidgetC1Ev+0x3c>)
 800e96a:	8082      	strh	r2, [r0, #4]
 800e96c:	80c2      	strh	r2, [r0, #6]
 800e96e:	8102      	strh	r2, [r0, #8]
 800e970:	8142      	strh	r2, [r0, #10]
 800e972:	8182      	strh	r2, [r0, #12]
 800e974:	81c2      	strh	r2, [r0, #14]
 800e976:	8202      	strh	r2, [r0, #16]
 800e978:	8242      	strh	r2, [r0, #18]
 800e97a:	61c2      	str	r2, [r0, #28]
 800e97c:	8402      	strh	r2, [r0, #32]
 800e97e:	8442      	strh	r2, [r0, #34]	; 0x22
 800e980:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800e984:	6001      	str	r1, [r0, #0]
 800e986:	21ff      	movs	r1, #255	; 0xff
 800e988:	6282      	str	r2, [r0, #40]	; 0x28
 800e98a:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 800e98e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800e992:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800e996:	8582      	strh	r2, [r0, #44]	; 0x2c
 800e998:	4770      	bx	lr
 800e99a:	bf00      	nop
 800e99c:	080238e0 	.word	0x080238e0

0800e9a0 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800e9a0:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800e9a4:	4770      	bx	lr

0800e9a6 <_ZN8touchgfx12ToggleButtonD1Ev>:
 800e9a6:	4770      	bx	lr

0800e9a8 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE>:
 800e9a8:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800e9ac:	b133      	cbz	r3, 800e9bc <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE+0x14>
 800e9ae:	790b      	ldrb	r3, [r1, #4]
 800e9b0:	2b01      	cmp	r3, #1
 800e9b2:	bf01      	itttt	eq
 800e9b4:	8dc3      	ldrheq	r3, [r0, #46]	; 0x2e
 800e9b6:	8e02      	ldrheq	r2, [r0, #48]	; 0x30
 800e9b8:	8603      	strheq	r3, [r0, #48]	; 0x30
 800e9ba:	85c2      	strheq	r2, [r0, #46]	; 0x2e
 800e9bc:	f00e bfa8 	b.w	801d910 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>

0800e9c0 <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>:
 800e9c0:	8813      	ldrh	r3, [r2, #0]
 800e9c2:	8683      	strh	r3, [r0, #52]	; 0x34
 800e9c4:	f000 be6c 	b.w	800f6a0 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>

0800e9c8 <_ZN8touchgfx12ToggleButtonD0Ev>:
 800e9c8:	b510      	push	{r4, lr}
 800e9ca:	4604      	mov	r4, r0
 800e9cc:	2138      	movs	r1, #56	; 0x38
 800e9ce:	f010 ff26 	bl	801f81e <_ZdlPvj>
 800e9d2:	4620      	mov	r0, r4
 800e9d4:	bd10      	pop	{r4, pc}

0800e9d6 <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800e9d6:	b510      	push	{r4, lr}
 800e9d8:	4604      	mov	r4, r0
 800e9da:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800e9dc:	b150      	cbz	r0, 800e9f4 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800e9de:	6803      	ldr	r3, [r0, #0]
 800e9e0:	68db      	ldr	r3, [r3, #12]
 800e9e2:	4798      	blx	r3
 800e9e4:	b130      	cbz	r0, 800e9f4 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800e9e6:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800e9e8:	4621      	mov	r1, r4
 800e9ea:	6803      	ldr	r3, [r0, #0]
 800e9ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e9f0:	689b      	ldr	r3, [r3, #8]
 800e9f2:	4718      	bx	r3
 800e9f4:	bd10      	pop	{r4, pc}

0800e9f6 <_ZNK8touchgfx6Button17invalidateContentEv>:
 800e9f6:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 800e9fa:	b12a      	cbz	r2, 800ea08 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800e9fc:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800ea00:	b112      	cbz	r2, 800ea08 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800ea02:	6803      	ldr	r3, [r0, #0]
 800ea04:	695b      	ldr	r3, [r3, #20]
 800ea06:	4718      	bx	r3
 800ea08:	4770      	bx	lr

0800ea0a <_ZN8touchgfx12ToggleButton10forceStateEb>:
 800ea0a:	b570      	push	{r4, r5, r6, lr}
 800ea0c:	4604      	mov	r4, r0
 800ea0e:	f100 0534 	add.w	r5, r0, #52	; 0x34
 800ea12:	b169      	cbz	r1, 800ea30 <_ZN8touchgfx12ToggleButton10forceStateEb+0x26>
 800ea14:	302e      	adds	r0, #46	; 0x2e
 800ea16:	f7f5 f8b9 	bl	8003b8c <_ZNK8touchgfx6Bitmap5getIdEv>
 800ea1a:	4606      	mov	r6, r0
 800ea1c:	4628      	mov	r0, r5
 800ea1e:	f7f5 f8b5 	bl	8003b8c <_ZNK8touchgfx6Bitmap5getIdEv>
 800ea22:	4286      	cmp	r6, r0
 800ea24:	d003      	beq.n	800ea2e <_ZN8touchgfx12ToggleButton10forceStateEb+0x24>
 800ea26:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 800ea28:	8623      	strh	r3, [r4, #48]	; 0x30
 800ea2a:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800ea2c:	85e3      	strh	r3, [r4, #46]	; 0x2e
 800ea2e:	bd70      	pop	{r4, r5, r6, pc}
 800ea30:	3030      	adds	r0, #48	; 0x30
 800ea32:	f7f5 f8ab 	bl	8003b8c <_ZNK8touchgfx6Bitmap5getIdEv>
 800ea36:	4606      	mov	r6, r0
 800ea38:	4628      	mov	r0, r5
 800ea3a:	f7f5 f8a7 	bl	8003b8c <_ZNK8touchgfx6Bitmap5getIdEv>
 800ea3e:	4286      	cmp	r6, r0
 800ea40:	bf1f      	itttt	ne
 800ea42:	8e23      	ldrhne	r3, [r4, #48]	; 0x30
 800ea44:	85e3      	strhne	r3, [r4, #46]	; 0x2e
 800ea46:	8ea3      	ldrhne	r3, [r4, #52]	; 0x34
 800ea48:	8623      	strhne	r3, [r4, #48]	; 0x30
 800ea4a:	e7f0      	b.n	800ea2e <_ZN8touchgfx12ToggleButton10forceStateEb+0x24>

0800ea4c <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 800ea4c:	2000      	movs	r0, #0
 800ea4e:	4770      	bx	lr

0800ea50 <_ZN8touchgfx8TextAreaD1Ev>:
 800ea50:	4770      	bx	lr
	...

0800ea54 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800ea54:	4b1b      	ldr	r3, [pc, #108]	; (800eac4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800ea56:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800ea5a:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800ea5c:	4604      	mov	r4, r0
 800ea5e:	881b      	ldrh	r3, [r3, #0]
 800ea60:	428b      	cmp	r3, r1
 800ea62:	d92d      	bls.n	800eac0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>
 800ea64:	4b18      	ldr	r3, [pc, #96]	; (800eac8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x74>)
 800ea66:	681b      	ldr	r3, [r3, #0]
 800ea68:	b92b      	cbnz	r3, 800ea76 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x22>
 800ea6a:	4b18      	ldr	r3, [pc, #96]	; (800eacc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x78>)
 800ea6c:	21ae      	movs	r1, #174	; 0xae
 800ea6e:	4a18      	ldr	r2, [pc, #96]	; (800ead0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x7c>)
 800ea70:	4818      	ldr	r0, [pc, #96]	; (800ead4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x80>)
 800ea72:	f011 f8b1 	bl	801fbd8 <__assert_func>
 800ea76:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800ea7a:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800ea7e:	4b16      	ldr	r3, [pc, #88]	; (800ead8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x84>)
 800ea80:	7855      	ldrb	r5, [r2, #1]
 800ea82:	681b      	ldr	r3, [r3, #0]
 800ea84:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800ea88:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800ea8c:	6833      	ldr	r3, [r6, #0]
 800ea8e:	69df      	ldr	r7, [r3, #28]
 800ea90:	4b12      	ldr	r3, [pc, #72]	; (800eadc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x88>)
 800ea92:	6818      	ldr	r0, [r3, #0]
 800ea94:	f7f4 ff2a 	bl	80038ec <_ZNK8touchgfx5Texts7getTextEt>
 800ea98:	6823      	ldr	r3, [r4, #0]
 800ea9a:	4680      	mov	r8, r0
 800ea9c:	4620      	mov	r0, r4
 800ea9e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800eaa0:	4798      	blx	r3
 800eaa2:	6823      	ldr	r3, [r4, #0]
 800eaa4:	4681      	mov	r9, r0
 800eaa6:	4620      	mov	r0, r4
 800eaa8:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800eaac:	4798      	blx	r3
 800eaae:	464b      	mov	r3, r9
 800eab0:	9000      	str	r0, [sp, #0]
 800eab2:	4642      	mov	r2, r8
 800eab4:	4629      	mov	r1, r5
 800eab6:	4630      	mov	r0, r6
 800eab8:	47b8      	blx	r7
 800eaba:	b003      	add	sp, #12
 800eabc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800eac0:	2000      	movs	r0, #0
 800eac2:	e7fa      	b.n	800eaba <_ZNK8touchgfx8TextArea12getTextWidthEv+0x66>
 800eac4:	2400e0f0 	.word	0x2400e0f0
 800eac8:	2400e0ec 	.word	0x2400e0ec
 800eacc:	08022a30 	.word	0x08022a30
 800ead0:	08023aac 	.word	0x08023aac
 800ead4:	08022a72 	.word	0x08022a72
 800ead8:	2400e0f4 	.word	0x2400e0f4
 800eadc:	2400e0f8 	.word	0x2400e0f8

0800eae0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800eae0:	b40e      	push	{r1, r2, r3}
 800eae2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eae6:	f8df 90f0 	ldr.w	r9, [pc, #240]	; 800ebd8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf8>
 800eaea:	b09c      	sub	sp, #112	; 0x70
 800eaec:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800eaee:	4604      	mov	r4, r0
 800eaf0:	f8b9 3000 	ldrh.w	r3, [r9]
 800eaf4:	4293      	cmp	r3, r2
 800eaf6:	d965      	bls.n	800ebc4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe4>
 800eaf8:	ab26      	add	r3, sp, #152	; 0x98
 800eafa:	f8df a0e0 	ldr.w	sl, [pc, #224]	; 800ebdc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xfc>
 800eafe:	9302      	str	r3, [sp, #8]
 800eb00:	f8da 3000 	ldr.w	r3, [sl]
 800eb04:	b92b      	cbnz	r3, 800eb12 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x32>
 800eb06:	4b30      	ldr	r3, [pc, #192]	; (800ebc8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe8>)
 800eb08:	21ae      	movs	r1, #174	; 0xae
 800eb0a:	4a30      	ldr	r2, [pc, #192]	; (800ebcc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xec>)
 800eb0c:	4830      	ldr	r0, [pc, #192]	; (800ebd0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf0>)
 800eb0e:	f011 f863 	bl	801fbd8 <__assert_func>
 800eb12:	f8df 80cc 	ldr.w	r8, [pc, #204]	; 800ebe0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x100>
 800eb16:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800eb1a:	f8d8 3000 	ldr.w	r3, [r8]
 800eb1e:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800eb22:	682b      	ldr	r3, [r5, #0]
 800eb24:	4628      	mov	r0, r5
 800eb26:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800eb28:	4798      	blx	r3
 800eb2a:	4606      	mov	r6, r0
 800eb2c:	b207      	sxth	r7, r0
 800eb2e:	a803      	add	r0, sp, #12
 800eb30:	f004 fb04 	bl	801313c <_ZN8touchgfx12TextProviderC1Ev>
 800eb34:	682b      	ldr	r3, [r5, #0]
 800eb36:	4628      	mov	r0, r5
 800eb38:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800eb3a:	4798      	blx	r3
 800eb3c:	682b      	ldr	r3, [r5, #0]
 800eb3e:	4683      	mov	fp, r0
 800eb40:	4628      	mov	r0, r5
 800eb42:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800eb44:	4798      	blx	r3
 800eb46:	465b      	mov	r3, fp
 800eb48:	9000      	str	r0, [sp, #0]
 800eb4a:	a803      	add	r0, sp, #12
 800eb4c:	9925      	ldr	r1, [sp, #148]	; 0x94
 800eb4e:	9a02      	ldr	r2, [sp, #8]
 800eb50:	f004 fb60 	bl	8013214 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800eb54:	f8da 3000 	ldr.w	r3, [sl]
 800eb58:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 800eb5c:	2b00      	cmp	r3, #0
 800eb5e:	d0d2      	beq.n	800eb06 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x26>
 800eb60:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800eb62:	f8b9 0000 	ldrh.w	r0, [r9]
 800eb66:	4290      	cmp	r0, r2
 800eb68:	d926      	bls.n	800ebb8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xd8>
 800eb6a:	eb03 0542 	add.w	r5, r3, r2, lsl #1
 800eb6e:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800eb72:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 800eb76:	786a      	ldrb	r2, [r5, #1]
 800eb78:	8925      	ldrh	r5, [r4, #8]
 800eb7a:	f8d8 3000 	ldr.w	r3, [r8]
 800eb7e:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800eb82:	eba5 050c 	sub.w	r5, r5, ip
 800eb86:	b22d      	sxth	r5, r5
 800eb88:	9500      	str	r5, [sp, #0]
 800eb8a:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800eb8e:	a803      	add	r0, sp, #12
 800eb90:	f002 f86e 	bl	8010c70 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800eb94:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 800eb98:	b203      	sxth	r3, r0
 800eb9a:	18b9      	adds	r1, r7, r2
 800eb9c:	2900      	cmp	r1, #0
 800eb9e:	dd0f      	ble.n	800ebc0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe0>
 800eba0:	3b01      	subs	r3, #1
 800eba2:	fb13 f302 	smulbb	r3, r3, r2
 800eba6:	fb16 3300 	smlabb	r3, r6, r0, r3
 800ebaa:	b21f      	sxth	r7, r3
 800ebac:	4638      	mov	r0, r7
 800ebae:	b01c      	add	sp, #112	; 0x70
 800ebb0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ebb4:	b003      	add	sp, #12
 800ebb6:	4770      	bx	lr
 800ebb8:	4b06      	ldr	r3, [pc, #24]	; (800ebd4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf4>)
 800ebba:	21af      	movs	r1, #175	; 0xaf
 800ebbc:	4a03      	ldr	r2, [pc, #12]	; (800ebcc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xec>)
 800ebbe:	e7a5      	b.n	800eb0c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x2c>
 800ebc0:	2b00      	cmp	r3, #0
 800ebc2:	dcf3      	bgt.n	800ebac <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800ebc4:	2700      	movs	r7, #0
 800ebc6:	e7f1      	b.n	800ebac <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800ebc8:	08022a30 	.word	0x08022a30
 800ebcc:	08023aac 	.word	0x08023aac
 800ebd0:	08022a72 	.word	0x08022a72
 800ebd4:	08022a9b 	.word	0x08022a9b
 800ebd8:	2400e0f0 	.word	0x2400e0f0
 800ebdc:	2400e0ec 	.word	0x2400e0ec
 800ebe0:	2400e0f4 	.word	0x2400e0f4

0800ebe4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 800ebe4:	4b6d      	ldr	r3, [pc, #436]	; (800ed9c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b8>)
 800ebe6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ebea:	460c      	mov	r4, r1
 800ebec:	881a      	ldrh	r2, [r3, #0]
 800ebee:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 800ebf0:	b0b9      	sub	sp, #228	; 0xe4
 800ebf2:	4681      	mov	r9, r0
 800ebf4:	428a      	cmp	r2, r1
 800ebf6:	9302      	str	r3, [sp, #8]
 800ebf8:	d809      	bhi.n	800ec0e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2a>
 800ebfa:	2300      	movs	r3, #0
 800ebfc:	f04f 32ff 	mov.w	r2, #4294967295
 800ec00:	6083      	str	r3, [r0, #8]
 800ec02:	e9c0 3200 	strd	r3, r2, [r0]
 800ec06:	4648      	mov	r0, r9
 800ec08:	b039      	add	sp, #228	; 0xe4
 800ec0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ec0e:	4a64      	ldr	r2, [pc, #400]	; (800eda0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1bc>)
 800ec10:	6813      	ldr	r3, [r2, #0]
 800ec12:	4692      	mov	sl, r2
 800ec14:	b92b      	cbnz	r3, 800ec22 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x3e>
 800ec16:	4b63      	ldr	r3, [pc, #396]	; (800eda4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1c0>)
 800ec18:	21ae      	movs	r1, #174	; 0xae
 800ec1a:	4a63      	ldr	r2, [pc, #396]	; (800eda8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1c4>)
 800ec1c:	4863      	ldr	r0, [pc, #396]	; (800edac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1c8>)
 800ec1e:	f010 ffdb 	bl	801fbd8 <__assert_func>
 800ec22:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800ec26:	4b62      	ldr	r3, [pc, #392]	; (800edb0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1cc>)
 800ec28:	f8df b18c 	ldr.w	fp, [pc, #396]	; 800edb8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1d4>
 800ec2c:	681b      	ldr	r3, [r3, #0]
 800ec2e:	f8db 0000 	ldr.w	r0, [fp]
 800ec32:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800ec36:	f7f4 fe59 	bl	80038ec <_ZNK8touchgfx5Texts7getTextEt>
 800ec3a:	4680      	mov	r8, r0
 800ec3c:	682b      	ldr	r3, [r5, #0]
 800ec3e:	4628      	mov	r0, r5
 800ec40:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ec42:	4798      	blx	r3
 800ec44:	8ea6      	ldrh	r6, [r4, #52]	; 0x34
 800ec46:	f894 7039 	ldrb.w	r7, [r4, #57]	; 0x39
 800ec4a:	4406      	add	r6, r0
 800ec4c:	f8cd b00c 	str.w	fp, [sp, #12]
 800ec50:	b2b6      	uxth	r6, r6
 800ec52:	2f00      	cmp	r7, #0
 800ec54:	f040 80b2 	bne.w	800edbc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1d8>
 800ec58:	a806      	add	r0, sp, #24
 800ec5a:	f004 fa6f 	bl	801313c <_ZN8touchgfx12TextProviderC1Ev>
 800ec5e:	682b      	ldr	r3, [r5, #0]
 800ec60:	4628      	mov	r0, r5
 800ec62:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ec64:	4798      	blx	r3
 800ec66:	682b      	ldr	r3, [r5, #0]
 800ec68:	4683      	mov	fp, r0
 800ec6a:	4628      	mov	r0, r5
 800ec6c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800ec6e:	4798      	blx	r3
 800ec70:	6822      	ldr	r2, [r4, #0]
 800ec72:	9005      	str	r0, [sp, #20]
 800ec74:	4620      	mov	r0, r4
 800ec76:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 800ec78:	4790      	blx	r2
 800ec7a:	6821      	ldr	r1, [r4, #0]
 800ec7c:	9004      	str	r0, [sp, #16]
 800ec7e:	4620      	mov	r0, r4
 800ec80:	f8d1 1080 	ldr.w	r1, [r1, #128]	; 0x80
 800ec84:	4788      	blx	r1
 800ec86:	9a04      	ldr	r2, [sp, #16]
 800ec88:	4641      	mov	r1, r8
 800ec8a:	46b8      	mov	r8, r7
 800ec8c:	9001      	str	r0, [sp, #4]
 800ec8e:	a806      	add	r0, sp, #24
 800ec90:	9200      	str	r2, [sp, #0]
 800ec92:	465a      	mov	r2, fp
 800ec94:	9b05      	ldr	r3, [sp, #20]
 800ec96:	f004 fad2 	bl	801323e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800ec9a:	f8da 3000 	ldr.w	r3, [sl]
 800ec9e:	2b00      	cmp	r3, #0
 800eca0:	d0b9      	beq.n	800ec16 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x32>
 800eca2:	9902      	ldr	r1, [sp, #8]
 800eca4:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800eca6:	8809      	ldrh	r1, [r1, #0]
 800eca8:	4291      	cmp	r1, r2
 800ecaa:	d803      	bhi.n	800ecb4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xd0>
 800ecac:	4b41      	ldr	r3, [pc, #260]	; (800edb4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1d0>)
 800ecae:	21af      	movs	r1, #175	; 0xaf
 800ecb0:	4a3d      	ldr	r2, [pc, #244]	; (800eda8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1c4>)
 800ecb2:	e7b3      	b.n	800ec1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x38>
 800ecb4:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800ecb8:	4629      	mov	r1, r5
 800ecba:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800ecbe:	a806      	add	r0, sp, #24
 800ecc0:	785b      	ldrb	r3, [r3, #1]
 800ecc2:	3701      	adds	r7, #1
 800ecc4:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800ecc8:	b2bf      	uxth	r7, r7
 800ecca:	f001 fd25 	bl	8010718 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800ecce:	4580      	cmp	r8, r0
 800ecd0:	bfb8      	it	lt
 800ecd2:	fa0f f880 	sxthlt.w	r8, r0
 800ecd6:	a806      	add	r0, sp, #24
 800ecd8:	f004 fa58 	bl	801318c <_ZN8touchgfx12TextProvider11endOfStringEv>
 800ecdc:	2800      	cmp	r0, #0
 800ecde:	d0dc      	beq.n	800ec9a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xb6>
 800ece0:	fb16 f607 	smulbb	r6, r6, r7
 800ece4:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 800ece6:	1bf6      	subs	r6, r6, r7
 800ece8:	b2b6      	uxth	r6, r6
 800ecea:	fa0f fb86 	sxth.w	fp, r6
 800ecee:	f1bb 0f00 	cmp.w	fp, #0
 800ecf2:	dd06      	ble.n	800ed02 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x11e>
 800ecf4:	682b      	ldr	r3, [r5, #0]
 800ecf6:	4628      	mov	r0, r5
 800ecf8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ecfa:	4798      	blx	r3
 800ecfc:	4430      	add	r0, r6
 800ecfe:	fa0f fb80 	sxth.w	fp, r0
 800ed02:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800ed06:	4620      	mov	r0, r4
 800ed08:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800ed0c:	6823      	ldr	r3, [r4, #0]
 800ed0e:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800ed10:	bf0c      	ite	eq
 800ed12:	f9b4 6008 	ldrsheq.w	r6, [r4, #8]
 800ed16:	f9b4 600a 	ldrshne.w	r6, [r4, #10]
 800ed1a:	4798      	blx	r3
 800ed1c:	2801      	cmp	r0, #1
 800ed1e:	fa1f f288 	uxth.w	r2, r8
 800ed22:	f000 80f7 	beq.w	800ef14 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x330>
 800ed26:	2802      	cmp	r0, #2
 800ed28:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 800ed2c:	f000 80f9 	beq.w	800ef22 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x33e>
 800ed30:	7a29      	ldrb	r1, [r5, #8]
 800ed32:	b21b      	sxth	r3, r3
 800ed34:	7a68      	ldrb	r0, [r5, #9]
 800ed36:	1a5b      	subs	r3, r3, r1
 800ed38:	4401      	add	r1, r0
 800ed3a:	b29b      	uxth	r3, r3
 800ed3c:	440a      	add	r2, r1
 800ed3e:	f894 1038 	ldrb.w	r1, [r4, #56]	; 0x38
 800ed42:	b21e      	sxth	r6, r3
 800ed44:	b292      	uxth	r2, r2
 800ed46:	2902      	cmp	r1, #2
 800ed48:	b217      	sxth	r7, r2
 800ed4a:	f000 80ed 	beq.w	800ef28 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x344>
 800ed4e:	2903      	cmp	r1, #3
 800ed50:	f000 80f3 	beq.w	800ef3a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x356>
 800ed54:	2901      	cmp	r1, #1
 800ed56:	f040 80f9 	bne.w	800ef4c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x368>
 800ed5a:	8923      	ldrh	r3, [r4, #8]
 800ed5c:	463a      	mov	r2, r7
 800ed5e:	4635      	mov	r5, r6
 800ed60:	465f      	mov	r7, fp
 800ed62:	eba3 030b 	sub.w	r3, r3, fp
 800ed66:	4693      	mov	fp, r2
 800ed68:	b21e      	sxth	r6, r3
 800ed6a:	f8da 3000 	ldr.w	r3, [sl]
 800ed6e:	2b00      	cmp	r3, #0
 800ed70:	f43f af51 	beq.w	800ec16 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x32>
 800ed74:	9b02      	ldr	r3, [sp, #8]
 800ed76:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800ed78:	881b      	ldrh	r3, [r3, #0]
 800ed7a:	428b      	cmp	r3, r1
 800ed7c:	d996      	bls.n	800ecac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xc8>
 800ed7e:	9b03      	ldr	r3, [sp, #12]
 800ed80:	6818      	ldr	r0, [r3, #0]
 800ed82:	f7f4 fdb3 	bl	80038ec <_ZNK8touchgfx5Texts7getTextEt>
 800ed86:	f8a9 6000 	strh.w	r6, [r9]
 800ed8a:	f8a9 5002 	strh.w	r5, [r9, #2]
 800ed8e:	f8a9 7004 	strh.w	r7, [r9, #4]
 800ed92:	f8a9 b006 	strh.w	fp, [r9, #6]
 800ed96:	f8c9 0008 	str.w	r0, [r9, #8]
 800ed9a:	e734      	b.n	800ec06 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x22>
 800ed9c:	2400e0f0 	.word	0x2400e0f0
 800eda0:	2400e0ec 	.word	0x2400e0ec
 800eda4:	08022a30 	.word	0x08022a30
 800eda8:	08023aac 	.word	0x08023aac
 800edac:	08022a72 	.word	0x08022a72
 800edb0:	2400e0f4 	.word	0x2400e0f4
 800edb4:	08022a9b 	.word	0x08022a9b
 800edb8:	2400e0f8 	.word	0x2400e0f8
 800edbc:	af1f      	add	r7, sp, #124	; 0x7c
 800edbe:	4638      	mov	r0, r7
 800edc0:	f004 f9bc 	bl	801313c <_ZN8touchgfx12TextProviderC1Ev>
 800edc4:	682b      	ldr	r3, [r5, #0]
 800edc6:	4628      	mov	r0, r5
 800edc8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800edca:	4798      	blx	r3
 800edcc:	682b      	ldr	r3, [r5, #0]
 800edce:	4683      	mov	fp, r0
 800edd0:	4628      	mov	r0, r5
 800edd2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800edd4:	4798      	blx	r3
 800edd6:	6822      	ldr	r2, [r4, #0]
 800edd8:	9005      	str	r0, [sp, #20]
 800edda:	4620      	mov	r0, r4
 800eddc:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 800edde:	4790      	blx	r2
 800ede0:	6821      	ldr	r1, [r4, #0]
 800ede2:	9004      	str	r0, [sp, #16]
 800ede4:	4620      	mov	r0, r4
 800ede6:	f8d1 1080 	ldr.w	r1, [r1, #128]	; 0x80
 800edea:	4788      	blx	r1
 800edec:	9a04      	ldr	r2, [sp, #16]
 800edee:	9001      	str	r0, [sp, #4]
 800edf0:	4641      	mov	r1, r8
 800edf2:	9200      	str	r2, [sp, #0]
 800edf4:	4638      	mov	r0, r7
 800edf6:	465a      	mov	r2, fp
 800edf8:	9b05      	ldr	r3, [sp, #20]
 800edfa:	f004 fa20 	bl	801323e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800edfe:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800ee02:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800ee06:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800ee0a:	f9b4 b008 	ldrsh.w	fp, [r4, #8]
 800ee0e:	bf12      	itee	ne
 800ee10:	4613      	movne	r3, r2
 800ee12:	465b      	moveq	r3, fp
 800ee14:	4693      	moveq	fp, r2
 800ee16:	f894 2037 	ldrb.w	r2, [r4, #55]	; 0x37
 800ee1a:	1a9b      	subs	r3, r3, r2
 800ee1c:	b29a      	uxth	r2, r3
 800ee1e:	f8da 3000 	ldr.w	r3, [sl]
 800ee22:	2b00      	cmp	r3, #0
 800ee24:	f43f aef7 	beq.w	800ec16 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x32>
 800ee28:	9802      	ldr	r0, [sp, #8]
 800ee2a:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800ee2c:	8800      	ldrh	r0, [r0, #0]
 800ee2e:	4288      	cmp	r0, r1
 800ee30:	f67f af3c 	bls.w	800ecac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xc8>
 800ee34:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800ee38:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 800ee3c:	7859      	ldrb	r1, [r3, #1]
 800ee3e:	2300      	movs	r3, #0
 800ee40:	9707      	str	r7, [sp, #28]
 800ee42:	f3c1 0181 	ubfx	r1, r1, #2, #2
 800ee46:	f8ad 3018 	strh.w	r3, [sp, #24]
 800ee4a:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800ee4e:	f88d 1020 	strb.w	r1, [sp, #32]
 800ee52:	9509      	str	r5, [sp, #36]	; 0x24
 800ee54:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 800ee58:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 800ee5c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800ee60:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800ee64:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800ee68:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800ee6c:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800ee70:	f88d 3036 	strb.w	r3, [sp, #54]	; 0x36
 800ee74:	b350      	cbz	r0, 800eecc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2e8>
 800ee76:	682b      	ldr	r3, [r5, #0]
 800ee78:	4628      	mov	r0, r5
 800ee7a:	695b      	ldr	r3, [r3, #20]
 800ee7c:	4798      	blx	r3
 800ee7e:	4680      	mov	r8, r0
 800ee80:	b320      	cbz	r0, 800eecc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2e8>
 800ee82:	9809      	ldr	r0, [sp, #36]	; 0x24
 800ee84:	4641      	mov	r1, r8
 800ee86:	6803      	ldr	r3, [r0, #0]
 800ee88:	68db      	ldr	r3, [r3, #12]
 800ee8a:	4798      	blx	r3
 800ee8c:	4607      	mov	r7, r0
 800ee8e:	b1e8      	cbz	r0, 800eecc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2e8>
 800ee90:	7b43      	ldrb	r3, [r0, #13]
 800ee92:	7a82      	ldrb	r2, [r0, #10]
 800ee94:	005b      	lsls	r3, r3, #1
 800ee96:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800ee9a:	4313      	orrs	r3, r2
 800ee9c:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800eea0:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 800eea4:	2b04      	cmp	r3, #4
 800eea6:	d111      	bne.n	800eecc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2e8>
 800eea8:	9809      	ldr	r0, [sp, #36]	; 0x24
 800eeaa:	463a      	mov	r2, r7
 800eeac:	4641      	mov	r1, r8
 800eeae:	6803      	ldr	r3, [r0, #0]
 800eeb0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800eeb2:	4798      	blx	r3
 800eeb4:	7b7b      	ldrb	r3, [r7, #13]
 800eeb6:	005b      	lsls	r3, r3, #1
 800eeb8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800eebc:	7abb      	ldrb	r3, [r7, #10]
 800eebe:	4313      	orrs	r3, r2
 800eec0:	4418      	add	r0, r3
 800eec2:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 800eec6:	4418      	add	r0, r3
 800eec8:	f8ad 0034 	strh.w	r0, [sp, #52]	; 0x34
 800eecc:	b233      	sxth	r3, r6
 800eece:	2700      	movs	r7, #0
 800eed0:	005a      	lsls	r2, r3, #1
 800eed2:	46b8      	mov	r8, r7
 800eed4:	455a      	cmp	r2, fp
 800eed6:	a806      	add	r0, sp, #24
 800eed8:	9305      	str	r3, [sp, #20]
 800eeda:	f107 0701 	add.w	r7, r7, #1
 800eede:	bfd4      	ite	le
 800eee0:	2100      	movle	r1, #0
 800eee2:	2101      	movgt	r1, #1
 800eee4:	9204      	str	r2, [sp, #16]
 800eee6:	f001 fdf4 	bl	8010ad2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800eeea:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 800eeee:	ebab 0b06 	sub.w	fp, fp, r6
 800eef2:	b2bf      	uxth	r7, r7
 800eef4:	4588      	cmp	r8, r1
 800eef6:	fa0f fb8b 	sxth.w	fp, fp
 800eefa:	bfb8      	it	lt
 800eefc:	fa0f f881 	sxthlt.w	r8, r1
 800ef00:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 800ef04:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800ef08:	2900      	cmp	r1, #0
 800ef0a:	f43f aee9 	beq.w	800ece0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 800ef0e:	455b      	cmp	r3, fp
 800ef10:	dbe0      	blt.n	800eed4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f0>
 800ef12:	e6e5      	b.n	800ece0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 800ef14:	eba6 0308 	sub.w	r3, r6, r8
 800ef18:	f04f 0802 	mov.w	r8, #2
 800ef1c:	fb93 f3f8 	sdiv	r3, r3, r8
 800ef20:	e706      	b.n	800ed30 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14c>
 800ef22:	4413      	add	r3, r2
 800ef24:	1af3      	subs	r3, r6, r3
 800ef26:	e703      	b.n	800ed30 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14c>
 800ef28:	8926      	ldrh	r6, [r4, #8]
 800ef2a:	8965      	ldrh	r5, [r4, #10]
 800ef2c:	1ab2      	subs	r2, r6, r2
 800ef2e:	eba5 050b 	sub.w	r5, r5, fp
 800ef32:	1ad3      	subs	r3, r2, r3
 800ef34:	b22d      	sxth	r5, r5
 800ef36:	b21e      	sxth	r6, r3
 800ef38:	e717      	b.n	800ed6a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x186>
 800ef3a:	8965      	ldrh	r5, [r4, #10]
 800ef3c:	2600      	movs	r6, #0
 800ef3e:	1aaa      	subs	r2, r5, r2
 800ef40:	1ad3      	subs	r3, r2, r3
 800ef42:	b21d      	sxth	r5, r3
 800ef44:	463b      	mov	r3, r7
 800ef46:	465f      	mov	r7, fp
 800ef48:	469b      	mov	fp, r3
 800ef4a:	e70e      	b.n	800ed6a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x186>
 800ef4c:	2500      	movs	r5, #0
 800ef4e:	e70c      	b.n	800ed6a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x186>

0800ef50 <_ZN8touchgfx8TextAreaD0Ev>:
 800ef50:	b510      	push	{r4, lr}
 800ef52:	4604      	mov	r4, r0
 800ef54:	2148      	movs	r1, #72	; 0x48
 800ef56:	f010 fc62 	bl	801f81e <_ZdlPvj>
 800ef5a:	4620      	mov	r0, r4
 800ef5c:	bd10      	pop	{r4, pc}
	...

0800ef60 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 800ef60:	b508      	push	{r3, lr}
 800ef62:	4b0b      	ldr	r3, [pc, #44]	; (800ef90 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x30>)
 800ef64:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800ef66:	881b      	ldrh	r3, [r3, #0]
 800ef68:	4293      	cmp	r3, r2
 800ef6a:	d90e      	bls.n	800ef8a <_ZNK8touchgfx8TextArea12getAlignmentEv+0x2a>
 800ef6c:	4b09      	ldr	r3, [pc, #36]	; (800ef94 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x34>)
 800ef6e:	681b      	ldr	r3, [r3, #0]
 800ef70:	b92b      	cbnz	r3, 800ef7e <_ZNK8touchgfx8TextArea12getAlignmentEv+0x1e>
 800ef72:	4b09      	ldr	r3, [pc, #36]	; (800ef98 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x38>)
 800ef74:	21ae      	movs	r1, #174	; 0xae
 800ef76:	4a09      	ldr	r2, [pc, #36]	; (800ef9c <_ZNK8touchgfx8TextArea12getAlignmentEv+0x3c>)
 800ef78:	4809      	ldr	r0, [pc, #36]	; (800efa0 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x40>)
 800ef7a:	f010 fe2d 	bl	801fbd8 <__assert_func>
 800ef7e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800ef82:	7858      	ldrb	r0, [r3, #1]
 800ef84:	f000 0003 	and.w	r0, r0, #3
 800ef88:	bd08      	pop	{r3, pc}
 800ef8a:	2000      	movs	r0, #0
 800ef8c:	e7fc      	b.n	800ef88 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x28>
 800ef8e:	bf00      	nop
 800ef90:	2400e0f0 	.word	0x2400e0f0
 800ef94:	2400e0ec 	.word	0x2400e0ec
 800ef98:	08022a30 	.word	0x08022a30
 800ef9c:	08023aac 	.word	0x08023aac
 800efa0:	08022a72 	.word	0x08022a72

0800efa4 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 800efa4:	4b16      	ldr	r3, [pc, #88]	; (800f000 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x5c>)
 800efa6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800efaa:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800efac:	4604      	mov	r4, r0
 800efae:	881b      	ldrh	r3, [r3, #0]
 800efb0:	428b      	cmp	r3, r1
 800efb2:	d921      	bls.n	800eff8 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x54>
 800efb4:	6803      	ldr	r3, [r0, #0]
 800efb6:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 800efb8:	4b12      	ldr	r3, [pc, #72]	; (800f004 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x60>)
 800efba:	681b      	ldr	r3, [r3, #0]
 800efbc:	b92b      	cbnz	r3, 800efca <_ZNK8touchgfx8TextArea13getTextHeightEv+0x26>
 800efbe:	4b12      	ldr	r3, [pc, #72]	; (800f008 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x64>)
 800efc0:	21ae      	movs	r1, #174	; 0xae
 800efc2:	4a12      	ldr	r2, [pc, #72]	; (800f00c <_ZNK8touchgfx8TextArea13getTextHeightEv+0x68>)
 800efc4:	4812      	ldr	r0, [pc, #72]	; (800f010 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x6c>)
 800efc6:	f010 fe07 	bl	801fbd8 <__assert_func>
 800efca:	4b12      	ldr	r3, [pc, #72]	; (800f014 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x70>)
 800efcc:	6818      	ldr	r0, [r3, #0]
 800efce:	f7f4 fc8d 	bl	80038ec <_ZNK8touchgfx5Texts7getTextEt>
 800efd2:	6823      	ldr	r3, [r4, #0]
 800efd4:	4606      	mov	r6, r0
 800efd6:	4620      	mov	r0, r4
 800efd8:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800efda:	4798      	blx	r3
 800efdc:	6823      	ldr	r3, [r4, #0]
 800efde:	4607      	mov	r7, r0
 800efe0:	4620      	mov	r0, r4
 800efe2:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800efe6:	4798      	blx	r3
 800efe8:	463a      	mov	r2, r7
 800efea:	4603      	mov	r3, r0
 800efec:	4631      	mov	r1, r6
 800efee:	4620      	mov	r0, r4
 800eff0:	46ac      	mov	ip, r5
 800eff2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800eff6:	4760      	bx	ip
 800eff8:	2000      	movs	r0, #0
 800effa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800effe:	bf00      	nop
 800f000:	2400e0f0 	.word	0x2400e0f0
 800f004:	2400e0ec 	.word	0x2400e0ec
 800f008:	08022a30 	.word	0x08022a30
 800f00c:	08023aac 	.word	0x08023aac
 800f010:	08022a72 	.word	0x08022a72
 800f014:	2400e0f8 	.word	0x2400e0f8

0800f018 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 800f018:	b513      	push	{r0, r1, r4, lr}
 800f01a:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800f01e:	4604      	mov	r4, r0
 800f020:	b343      	cbz	r3, 800f074 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x5c>
 800f022:	4b1b      	ldr	r3, [pc, #108]	; (800f090 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x78>)
 800f024:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800f026:	881b      	ldrh	r3, [r3, #0]
 800f028:	428b      	cmp	r3, r1
 800f02a:	d923      	bls.n	800f074 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x5c>
 800f02c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800f030:	2b00      	cmp	r3, #0
 800f032:	dd1f      	ble.n	800f074 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x5c>
 800f034:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800f038:	2b00      	cmp	r3, #0
 800f03a:	dd1b      	ble.n	800f074 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x5c>
 800f03c:	4b15      	ldr	r3, [pc, #84]	; (800f094 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x7c>)
 800f03e:	681b      	ldr	r3, [r3, #0]
 800f040:	b92b      	cbnz	r3, 800f04e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x36>
 800f042:	4b15      	ldr	r3, [pc, #84]	; (800f098 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x80>)
 800f044:	21ae      	movs	r1, #174	; 0xae
 800f046:	4a15      	ldr	r2, [pc, #84]	; (800f09c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x84>)
 800f048:	4815      	ldr	r0, [pc, #84]	; (800f0a0 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x88>)
 800f04a:	f010 fdc5 	bl	801fbd8 <__assert_func>
 800f04e:	4b15      	ldr	r3, [pc, #84]	; (800f0a4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x8c>)
 800f050:	6818      	ldr	r0, [r3, #0]
 800f052:	f7f4 fc4b 	bl	80038ec <_ZNK8touchgfx5Texts7getTextEt>
 800f056:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800f05a:	6822      	ldr	r2, [r4, #0]
 800f05c:	2b00      	cmp	r3, #0
 800f05e:	db06      	blt.n	800f06e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x56>
 800f060:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800f064:	2b00      	cmp	r3, #0
 800f066:	db02      	blt.n	800f06e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x56>
 800f068:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800f06a:	4298      	cmp	r0, r3
 800f06c:	d004      	beq.n	800f078 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x60>
 800f06e:	6953      	ldr	r3, [r2, #20]
 800f070:	4620      	mov	r0, r4
 800f072:	4798      	blx	r3
 800f074:	b002      	add	sp, #8
 800f076:	bd10      	pop	{r4, pc}
 800f078:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 800f07c:	466b      	mov	r3, sp
 800f07e:	6912      	ldr	r2, [r2, #16]
 800f080:	c903      	ldmia	r1, {r0, r1}
 800f082:	e883 0003 	stmia.w	r3, {r0, r1}
 800f086:	4619      	mov	r1, r3
 800f088:	4620      	mov	r0, r4
 800f08a:	4790      	blx	r2
 800f08c:	e7f2      	b.n	800f074 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x5c>
 800f08e:	bf00      	nop
 800f090:	2400e0f0 	.word	0x2400e0f0
 800f094:	2400e0ec 	.word	0x2400e0ec
 800f098:	08022a30 	.word	0x08022a30
 800f09c:	08023aac 	.word	0x08023aac
 800f0a0:	08022a72 	.word	0x08022a72
 800f0a4:	2400e0f8 	.word	0x2400e0f8

0800f0a8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800f0a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f0ac:	4d56      	ldr	r5, [pc, #344]	; (800f208 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x160>)
 800f0ae:	b08e      	sub	sp, #56	; 0x38
 800f0b0:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800f0b2:	4604      	mov	r4, r0
 800f0b4:	882b      	ldrh	r3, [r5, #0]
 800f0b6:	4293      	cmp	r3, r2
 800f0b8:	f240 80a3 	bls.w	800f202 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x15a>
 800f0bc:	6808      	ldr	r0, [r1, #0]
 800f0be:	ab05      	add	r3, sp, #20
 800f0c0:	6849      	ldr	r1, [r1, #4]
 800f0c2:	4e52      	ldr	r6, [pc, #328]	; (800f20c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x164>)
 800f0c4:	c303      	stmia	r3!, {r0, r1}
 800f0c6:	6833      	ldr	r3, [r6, #0]
 800f0c8:	b92b      	cbnz	r3, 800f0d6 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x2e>
 800f0ca:	4b51      	ldr	r3, [pc, #324]	; (800f210 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x168>)
 800f0cc:	21ae      	movs	r1, #174	; 0xae
 800f0ce:	4a51      	ldr	r2, [pc, #324]	; (800f214 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x16c>)
 800f0d0:	4851      	ldr	r0, [pc, #324]	; (800f218 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x170>)
 800f0d2:	f010 fd81 	bl	801fbd8 <__assert_func>
 800f0d6:	4f51      	ldr	r7, [pc, #324]	; (800f21c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x174>)
 800f0d8:	4611      	mov	r1, r2
 800f0da:	6838      	ldr	r0, [r7, #0]
 800f0dc:	f7f4 fc06 	bl	80038ec <_ZNK8touchgfx5Texts7getTextEt>
 800f0e0:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800f0e4:	2b00      	cmp	r3, #0
 800f0e6:	db11      	blt.n	800f10c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x64>
 800f0e8:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800f0ec:	2b00      	cmp	r3, #0
 800f0ee:	db0d      	blt.n	800f10c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x64>
 800f0f0:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800f0f2:	4298      	cmp	r0, r3
 800f0f4:	d10a      	bne.n	800f10c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x64>
 800f0f6:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 800f0fa:	ab09      	add	r3, sp, #36	; 0x24
 800f0fc:	e892 0003 	ldmia.w	r2, {r0, r1}
 800f100:	e883 0003 	stmia.w	r3, {r0, r1}
 800f104:	4619      	mov	r1, r3
 800f106:	a805      	add	r0, sp, #20
 800f108:	f7fd fa8c 	bl	800c624 <_ZN8touchgfx4RectaNERKS0_>
 800f10c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800f110:	2b00      	cmp	r3, #0
 800f112:	dd76      	ble.n	800f202 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x15a>
 800f114:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800f118:	2b00      	cmp	r3, #0
 800f11a:	dd72      	ble.n	800f202 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x15a>
 800f11c:	6833      	ldr	r3, [r6, #0]
 800f11e:	2b00      	cmp	r3, #0
 800f120:	d0d3      	beq.n	800f0ca <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x22>
 800f122:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800f124:	8829      	ldrh	r1, [r5, #0]
 800f126:	4291      	cmp	r1, r2
 800f128:	d803      	bhi.n	800f132 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x8a>
 800f12a:	4b3d      	ldr	r3, [pc, #244]	; (800f220 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x178>)
 800f12c:	21af      	movs	r1, #175	; 0xaf
 800f12e:	4a39      	ldr	r2, [pc, #228]	; (800f214 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x16c>)
 800f130:	e7ce      	b.n	800f0d0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x28>
 800f132:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800f136:	4b3b      	ldr	r3, [pc, #236]	; (800f224 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x17c>)
 800f138:	681b      	ldr	r3, [r3, #0]
 800f13a:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 800f13e:	f1b8 0f00 	cmp.w	r8, #0
 800f142:	d05e      	beq.n	800f202 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x15a>
 800f144:	6823      	ldr	r3, [r4, #0]
 800f146:	4620      	mov	r0, r4
 800f148:	f894 9036 	ldrb.w	r9, [r4, #54]	; 0x36
 800f14c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800f14e:	4798      	blx	r3
 800f150:	6833      	ldr	r3, [r6, #0]
 800f152:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 800f156:	f894 c038 	ldrb.w	ip, [r4, #56]	; 0x38
 800f15a:	2b00      	cmp	r3, #0
 800f15c:	d0b5      	beq.n	800f0ca <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x22>
 800f15e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800f160:	f8b5 e000 	ldrh.w	lr, [r5]
 800f164:	4596      	cmp	lr, r2
 800f166:	d9e0      	bls.n	800f12a <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x82>
 800f168:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800f16c:	f894 a037 	ldrb.w	sl, [r4, #55]	; 0x37
 800f170:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800f172:	785b      	ldrb	r3, [r3, #1]
 800f174:	f894 e039 	ldrb.w	lr, [r4, #57]	; 0x39
 800f178:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800f17c:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 800f180:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800f184:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800f188:	4b27      	ldr	r3, [pc, #156]	; (800f228 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x180>)
 800f18a:	f88d c02a 	strb.w	ip, [sp, #42]	; 0x2a
 800f18e:	681b      	ldr	r3, [r3, #0]
 800f190:	920b      	str	r2, [sp, #44]	; 0x2c
 800f192:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
 800f196:	f88d 9032 	strb.w	r9, [sp, #50]	; 0x32
 800f19a:	f88d a033 	strb.w	sl, [sp, #51]	; 0x33
 800f19e:	f88d e034 	strb.w	lr, [sp, #52]	; 0x34
 800f1a2:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800f1a6:	b122      	cbz	r2, 800f1b2 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x10a>
 800f1a8:	f8d3 804c 	ldr.w	r8, [r3, #76]	; 0x4c
 800f1ac:	f1b8 0f00 	cmp.w	r8, #0
 800f1b0:	d101      	bne.n	800f1b6 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x10e>
 800f1b2:	f8d3 8008 	ldr.w	r8, [r3, #8]
 800f1b6:	f10d 091c 	add.w	r9, sp, #28
 800f1ba:	4621      	mov	r1, r4
 800f1bc:	4648      	mov	r0, r9
 800f1be:	f003 faf1 	bl	80127a4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f1c2:	6833      	ldr	r3, [r6, #0]
 800f1c4:	2b00      	cmp	r3, #0
 800f1c6:	d080      	beq.n	800f0ca <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x22>
 800f1c8:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800f1ca:	882b      	ldrh	r3, [r5, #0]
 800f1cc:	428b      	cmp	r3, r1
 800f1ce:	d9ac      	bls.n	800f12a <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x82>
 800f1d0:	6838      	ldr	r0, [r7, #0]
 800f1d2:	f7f4 fb8b 	bl	80038ec <_ZNK8touchgfx5Texts7getTextEt>
 800f1d6:	6823      	ldr	r3, [r4, #0]
 800f1d8:	4605      	mov	r5, r0
 800f1da:	4620      	mov	r0, r4
 800f1dc:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800f1de:	4798      	blx	r3
 800f1e0:	6823      	ldr	r3, [r4, #0]
 800f1e2:	4606      	mov	r6, r0
 800f1e4:	4620      	mov	r0, r4
 800f1e6:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800f1ea:	4798      	blx	r3
 800f1ec:	ab09      	add	r3, sp, #36	; 0x24
 800f1ee:	9501      	str	r5, [sp, #4]
 800f1f0:	9300      	str	r3, [sp, #0]
 800f1f2:	ab05      	add	r3, sp, #20
 800f1f4:	e9cd 6002 	strd	r6, r0, [sp, #8]
 800f1f8:	4640      	mov	r0, r8
 800f1fa:	e899 0006 	ldmia.w	r9, {r1, r2}
 800f1fe:	f7f4 fb27 	bl	8003850 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800f202:	b00e      	add	sp, #56	; 0x38
 800f204:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f208:	2400e0f0 	.word	0x2400e0f0
 800f20c:	2400e0ec 	.word	0x2400e0ec
 800f210:	08022a30 	.word	0x08022a30
 800f214:	08023aac 	.word	0x08023aac
 800f218:	08022a72 	.word	0x08022a72
 800f21c:	2400e0f8 	.word	0x2400e0f8
 800f220:	08022a9b 	.word	0x08022a9b
 800f224:	2400e0f4 	.word	0x2400e0f4
 800f228:	2400e07c 	.word	0x2400e07c

0800f22c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800f22c:	b538      	push	{r3, r4, r5, lr}
 800f22e:	4b0e      	ldr	r3, [pc, #56]	; (800f268 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 800f230:	4604      	mov	r4, r0
 800f232:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800f234:	881b      	ldrh	r3, [r3, #0]
 800f236:	429a      	cmp	r2, r3
 800f238:	d214      	bcs.n	800f264 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800f23a:	6803      	ldr	r3, [r0, #0]
 800f23c:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800f23e:	4798      	blx	r3
 800f240:	6823      	ldr	r3, [r4, #0]
 800f242:	4605      	mov	r5, r0
 800f244:	4620      	mov	r0, r4
 800f246:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800f248:	4798      	blx	r3
 800f24a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800f24e:	b22d      	sxth	r5, r5
 800f250:	4601      	mov	r1, r0
 800f252:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800f256:	bf06      	itte	eq
 800f258:	4602      	moveq	r2, r0
 800f25a:	4629      	moveq	r1, r5
 800f25c:	462a      	movne	r2, r5
 800f25e:	4620      	mov	r0, r4
 800f260:	f7fc fd38 	bl	800bcd4 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800f264:	bd38      	pop	{r3, r4, r5, pc}
 800f266:	bf00      	nop
 800f268:	2400e0f0 	.word	0x2400e0f0

0800f26c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800f26c:	b530      	push	{r4, r5, lr}
 800f26e:	888b      	ldrh	r3, [r1, #4]
 800f270:	b085      	sub	sp, #20
 800f272:	4604      	mov	r4, r0
 800f274:	8583      	strh	r3, [r0, #44]	; 0x2c
 800f276:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800f27a:	b923      	cbnz	r3, 800f286 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800f27c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800f280:	b90b      	cbnz	r3, 800f286 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800f282:	f7ff ffd3 	bl	800f22c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800f286:	6823      	ldr	r3, [r4, #0]
 800f288:	466d      	mov	r5, sp
 800f28a:	4621      	mov	r1, r4
 800f28c:	343c      	adds	r4, #60	; 0x3c
 800f28e:	4628      	mov	r0, r5
 800f290:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800f294:	4798      	blx	r3
 800f296:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800f29a:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800f29e:	b005      	add	sp, #20
 800f2a0:	bd30      	pop	{r4, r5, pc}

0800f2a2 <_ZNK8touchgfx3Box12getSolidRectEv>:
 800f2a2:	2300      	movs	r3, #0
 800f2a4:	8083      	strh	r3, [r0, #4]
 800f2a6:	80c3      	strh	r3, [r0, #6]
 800f2a8:	8003      	strh	r3, [r0, #0]
 800f2aa:	8043      	strh	r3, [r0, #2]
 800f2ac:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800f2b0:	2bff      	cmp	r3, #255	; 0xff
 800f2b2:	bf01      	itttt	eq
 800f2b4:	890b      	ldrheq	r3, [r1, #8]
 800f2b6:	8083      	strheq	r3, [r0, #4]
 800f2b8:	894b      	ldrheq	r3, [r1, #10]
 800f2ba:	80c3      	strheq	r3, [r0, #6]
 800f2bc:	4770      	bx	lr
	...

0800f2c0 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800f2c0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f2c2:	4604      	mov	r4, r0
 800f2c4:	466b      	mov	r3, sp
 800f2c6:	6808      	ldr	r0, [r1, #0]
 800f2c8:	6849      	ldr	r1, [r1, #4]
 800f2ca:	c303      	stmia	r3!, {r0, r1}
 800f2cc:	6823      	ldr	r3, [r4, #0]
 800f2ce:	4669      	mov	r1, sp
 800f2d0:	4620      	mov	r0, r4
 800f2d2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f2d4:	4798      	blx	r3
 800f2d6:	4b08      	ldr	r3, [pc, #32]	; (800f2f8 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800f2d8:	681b      	ldr	r3, [r3, #0]
 800f2da:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800f2de:	b10a      	cbz	r2, 800f2e4 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800f2e0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800f2e2:	b900      	cbnz	r0, 800f2e6 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800f2e4:	6898      	ldr	r0, [r3, #8]
 800f2e6:	6803      	ldr	r3, [r0, #0]
 800f2e8:	4669      	mov	r1, sp
 800f2ea:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800f2ec:	6a1d      	ldr	r5, [r3, #32]
 800f2ee:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800f2f2:	47a8      	blx	r5
 800f2f4:	b003      	add	sp, #12
 800f2f6:	bd30      	pop	{r4, r5, pc}
 800f2f8:	2400e07c 	.word	0x2400e07c

0800f2fc <_ZN8touchgfx3BoxD1Ev>:
 800f2fc:	4770      	bx	lr

0800f2fe <_ZN8touchgfx3BoxD0Ev>:
 800f2fe:	b510      	push	{r4, lr}
 800f300:	4604      	mov	r4, r0
 800f302:	212c      	movs	r1, #44	; 0x2c
 800f304:	f010 fa8b 	bl	801f81e <_ZdlPvj>
 800f308:	4620      	mov	r0, r4
 800f30a:	bd10      	pop	{r4, pc}

0800f30c <_ZNK8touchgfx3Box17invalidateContentEv>:
 800f30c:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 800f310:	b12a      	cbz	r2, 800f31e <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800f312:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800f316:	b112      	cbz	r2, 800f31e <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800f318:	6803      	ldr	r3, [r0, #0]
 800f31a:	695b      	ldr	r3, [r3, #20]
 800f31c:	4718      	bx	r3
 800f31e:	4770      	bx	lr

0800f320 <_ZNK8touchgfx5Gauge9getCenterERiS1_>:
 800f320:	f9b0 3150 	ldrsh.w	r3, [r0, #336]	; 0x150
 800f324:	600b      	str	r3, [r1, #0]
 800f326:	f9b0 3152 	ldrsh.w	r3, [r0, #338]	; 0x152
 800f32a:	6013      	str	r3, [r2, #0]
 800f32c:	4770      	bx	lr

0800f32e <_ZN8touchgfx5Gauge8setWidthEs>:
 800f32e:	8101      	strh	r1, [r0, #8]
 800f330:	f8a0 10bc 	strh.w	r1, [r0, #188]	; 0xbc
 800f334:	f8a0 1160 	strh.w	r1, [r0, #352]	; 0x160
 800f338:	4770      	bx	lr

0800f33a <_ZN8touchgfx5Gauge9setHeightEs>:
 800f33a:	8141      	strh	r1, [r0, #10]
 800f33c:	f8a0 10be 	strh.w	r1, [r0, #190]	; 0xbe
 800f340:	f8a0 1162 	strh.w	r1, [r0, #354]	; 0x162
 800f344:	4770      	bx	lr

0800f346 <_ZNK8touchgfx5Gauge13getStartAngleEv>:
 800f346:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 800f34a:	4770      	bx	lr

0800f34c <_ZNK8touchgfx5Gauge11getEndAngleEv>:
 800f34c:	f8d0 014c 	ldr.w	r0, [r0, #332]	; 0x14c
 800f350:	4770      	bx	lr

0800f352 <_ZN8touchgfx5Gauge28setProgressIndicatorPositionEssss>:
 800f352:	4770      	bx	lr

0800f354 <_ZN8touchgfx5GaugeD1Ev>:
 800f354:	4770      	bx	lr

0800f356 <_ZN8touchgfx5Gauge8setAlphaEh>:
 800f356:	b538      	push	{r3, r4, r5, lr}
 800f358:	4604      	mov	r4, r0
 800f35a:	460d      	mov	r5, r1
 800f35c:	f7fc fb93 	bl	800ba86 <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 800f360:	f884 50dc 	strb.w	r5, [r4, #220]	; 0xdc
 800f364:	f884 517e 	strb.w	r5, [r4, #382]	; 0x17e
 800f368:	bd38      	pop	{r3, r4, r5, pc}

0800f36a <_ZN8touchgfx5GaugeD0Ev>:
 800f36a:	b510      	push	{r4, lr}
 800f36c:	4604      	mov	r4, r0
 800f36e:	f44f 71d2 	mov.w	r1, #420	; 0x1a4
 800f372:	f010 fa54 	bl	801f81e <_ZdlPvj>
 800f376:	4620      	mov	r0, r4
 800f378:	bd10      	pop	{r4, pc}

0800f37a <_ZNK8touchgfx5Gauge17invalidateContentEv>:
 800f37a:	b510      	push	{r4, lr}
 800f37c:	6803      	ldr	r3, [r0, #0]
 800f37e:	4604      	mov	r4, r0
 800f380:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800f384:	4798      	blx	r3
 800f386:	b150      	cbz	r0, 800f39e <_ZNK8touchgfx5Gauge17invalidateContentEv+0x24>
 800f388:	6823      	ldr	r3, [r4, #0]
 800f38a:	4620      	mov	r0, r4
 800f38c:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800f390:	4798      	blx	r3
 800f392:	b120      	cbz	r0, 800f39e <_ZNK8touchgfx5Gauge17invalidateContentEv+0x24>
 800f394:	4620      	mov	r0, r4
 800f396:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f39a:	f7fc bfbd 	b.w	800c318 <_ZNK8touchgfx9Container17invalidateContentEv>
 800f39e:	bd10      	pop	{r4, pc}

0800f3a0 <_ZN8touchgfx5GaugeC1Ev>:
 800f3a0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f3a2:	4604      	mov	r4, r0
 800f3a4:	f7fc fcd0 	bl	800bd48 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 800f3a8:	4b18      	ldr	r3, [pc, #96]	; (800f40c <_ZN8touchgfx5GaugeC1Ev+0x6c>)
 800f3aa:	a902      	add	r1, sp, #8
 800f3ac:	4626      	mov	r6, r4
 800f3ae:	2500      	movs	r5, #0
 800f3b0:	f504 77ac 	add.w	r7, r4, #344	; 0x158
 800f3b4:	f846 3bb4 	str.w	r3, [r6], #180
 800f3b8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800f3bc:	4630      	mov	r0, r6
 800f3be:	f821 3d04 	strh.w	r3, [r1, #-4]!
 800f3c2:	f00e fb95 	bl	801daf0 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>
 800f3c6:	2301      	movs	r3, #1
 800f3c8:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 800f3cc:	4638      	mov	r0, r7
 800f3ce:	f884 3144 	strb.w	r3, [r4, #324]	; 0x144
 800f3d2:	f884 3145 	strb.w	r3, [r4, #325]	; 0x145
 800f3d6:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 800f3da:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 800f3de:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
 800f3e2:	f7fe fd9d 	bl	800df20 <_ZN8touchgfx6CircleC1Ev>
 800f3e6:	f104 0158 	add.w	r1, r4, #88	; 0x58
 800f3ea:	4620      	mov	r0, r4
 800f3ec:	f7fc ffa6 	bl	800c33c <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 800f3f0:	4639      	mov	r1, r7
 800f3f2:	4620      	mov	r0, r4
 800f3f4:	f7fc ffd4 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800f3f8:	4620      	mov	r0, r4
 800f3fa:	4631      	mov	r1, r6
 800f3fc:	f7fc ffd0 	bl	800c3a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800f400:	4620      	mov	r0, r4
 800f402:	f884 517d 	strb.w	r5, [r4, #381]	; 0x17d
 800f406:	b003      	add	sp, #12
 800f408:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f40a:	bf00      	nop
 800f40c:	08023b90 	.word	0x08023b90

0800f410 <_ZN8touchgfx5Gauge14setArcPositionEssss>:
 800f410:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f414:	f500 75ac 	add.w	r5, r0, #344	; 0x158
 800f418:	4604      	mov	r4, r0
 800f41a:	460e      	mov	r6, r1
 800f41c:	4617      	mov	r7, r2
 800f41e:	4628      	mov	r0, r5
 800f420:	4698      	mov	r8, r3
 800f422:	f7f3 f8c5 	bl	80025b0 <_ZN8touchgfx8Drawable5setXYEss>
 800f426:	f8d4 3158 	ldr.w	r3, [r4, #344]	; 0x158
 800f42a:	4641      	mov	r1, r8
 800f42c:	4628      	mov	r0, r5
 800f42e:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800f430:	4790      	blx	r2
 800f432:	f8d4 3158 	ldr.w	r3, [r4, #344]	; 0x158
 800f436:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 800f43a:	4628      	mov	r0, r5
 800f43c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800f43e:	4798      	blx	r3
 800f440:	f9b4 2152 	ldrsh.w	r2, [r4, #338]	; 0x152
 800f444:	f9b4 1150 	ldrsh.w	r1, [r4, #336]	; 0x150
 800f448:	1bd2      	subs	r2, r2, r7
 800f44a:	1b89      	subs	r1, r1, r6
 800f44c:	0152      	lsls	r2, r2, #5
 800f44e:	0149      	lsls	r1, r1, #5
 800f450:	3210      	adds	r2, #16
 800f452:	3110      	adds	r1, #16
 800f454:	f8c4 218c 	str.w	r2, [r4, #396]	; 0x18c
 800f458:	f8c4 1188 	str.w	r1, [r4, #392]	; 0x188
 800f45c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f460 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 800f460:	f880 1144 	strb.w	r1, [r0, #324]	; 0x144
 800f464:	4770      	bx	lr

0800f466 <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 800f466:	f880 1145 	strb.w	r1, [r0, #325]	; 0x145
 800f46a:	4770      	bx	lr

0800f46c <_ZN8touchgfx5Gauge13setArcVisibleEb>:
 800f46c:	f880 117d 	strb.w	r1, [r0, #381]	; 0x17d
 800f470:	4770      	bx	lr

0800f472 <_ZN8touchgfx5Gauge6getArcEv>:
 800f472:	f500 70ac 	add.w	r0, r0, #344	; 0x158
 800f476:	4770      	bx	lr

0800f478 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>:
 800f478:	b538      	push	{r3, r4, r5, lr}
 800f47a:	8902      	ldrh	r2, [r0, #8]
 800f47c:	f100 05b4 	add.w	r5, r0, #180	; 0xb4
 800f480:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800f484:	4604      	mov	r4, r0
 800f486:	f8a0 20bc 	strh.w	r2, [r0, #188]	; 0xbc
 800f48a:	2200      	movs	r2, #0
 800f48c:	f8a0 30be 	strh.w	r3, [r0, #190]	; 0xbe
 800f490:	4628      	mov	r0, r5
 800f492:	4611      	mov	r1, r2
 800f494:	f7f3 f88c 	bl	80025b0 <_ZN8touchgfx8Drawable5setXYEss>
 800f498:	f9b4 2156 	ldrsh.w	r2, [r4, #342]	; 0x156
 800f49c:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 800f4a0:	4628      	mov	r0, r5
 800f4a2:	1a9b      	subs	r3, r3, r2
 800f4a4:	f9b4 2154 	ldrsh.w	r2, [r4, #340]	; 0x154
 800f4a8:	ee07 3a90 	vmov	s15, r3
 800f4ac:	f9b4 3150 	ldrsh.w	r3, [r4, #336]	; 0x150
 800f4b0:	1a9b      	subs	r3, r3, r2
 800f4b2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800f4b6:	ee07 3a10 	vmov	s14, r3
 800f4ba:	edc4 7a39 	vstr	s15, [r4, #228]	; 0xe4
 800f4be:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f4c2:	ed84 7a38 	vstr	s14, [r4, #224]	; 0xe0
 800f4c6:	f00e fb5f 	bl	801db88 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 800f4ca:	4b16      	ldr	r3, [pc, #88]	; (800f524 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv+0xac>)
 800f4cc:	4628      	mov	r0, r5
 800f4ce:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 800f4d2:	f00e fb59 	bl	801db88 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 800f4d6:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 800f4da:	f9b4 2150 	ldrsh.w	r2, [r4, #336]	; 0x150
 800f4de:	4628      	mov	r0, r5
 800f4e0:	ee07 3a90 	vmov	s15, r3
 800f4e4:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 800f4e8:	ee07 2a10 	vmov	s14, r2
 800f4ec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800f4f0:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 800f4f4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f4f8:	edc4 7a3f 	vstr	s15, [r4, #252]	; 0xfc
 800f4fc:	ed84 7a3e 	vstr	s14, [r4, #248]	; 0xf8
 800f500:	f00e fb42 	bl	801db88 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 800f504:	f8d4 30fc 	ldr.w	r3, [r4, #252]	; 0xfc
 800f508:	f8d4 20f8 	ldr.w	r2, [r4, #248]	; 0xf8
 800f50c:	4628      	mov	r0, r5
 800f50e:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 800f512:	f8c4 2104 	str.w	r2, [r4, #260]	; 0x104
 800f516:	f00e fb37 	bl	801db88 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 800f51a:	2301      	movs	r3, #1
 800f51c:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 800f520:	bd38      	pop	{r3, r4, r5, pc}
 800f522:	bf00      	nop
 800f524:	43960000 	.word	0x43960000

0800f528 <_ZN8touchgfx5Gauge9setNeedleEtss>:
 800f528:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800f52a:	4604      	mov	r4, r0
 800f52c:	a802      	add	r0, sp, #8
 800f52e:	4616      	mov	r6, r2
 800f530:	461d      	mov	r5, r3
 800f532:	f820 1d04 	strh.w	r1, [r0, #-4]!
 800f536:	4601      	mov	r1, r0
 800f538:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 800f53c:	f00e fc7a 	bl	801de34 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>
 800f540:	4620      	mov	r0, r4
 800f542:	f8a4 6154 	strh.w	r6, [r4, #340]	; 0x154
 800f546:	f8a4 5156 	strh.w	r5, [r4, #342]	; 0x156
 800f54a:	f7ff ff95 	bl	800f478 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 800f54e:	b002      	add	sp, #8
 800f550:	bd70      	pop	{r4, r5, r6, pc}

0800f552 <_ZN8touchgfx5Gauge9setCenterEii>:
 800f552:	b570      	push	{r4, r5, r6, lr}
 800f554:	4606      	mov	r6, r0
 800f556:	460d      	mov	r5, r1
 800f558:	4614      	mov	r4, r2
 800f55a:	f8a6 1150 	strh.w	r1, [r6, #336]	; 0x150
 800f55e:	f8a6 2152 	strh.w	r2, [r6, #338]	; 0x152
 800f562:	f7ff ff89 	bl	800f478 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 800f566:	f9b6 215e 	ldrsh.w	r2, [r6, #350]	; 0x15e
 800f56a:	f9b6 115c 	ldrsh.w	r1, [r6, #348]	; 0x15c
 800f56e:	1aa4      	subs	r4, r4, r2
 800f570:	1a6d      	subs	r5, r5, r1
 800f572:	0164      	lsls	r4, r4, #5
 800f574:	016d      	lsls	r5, r5, #5
 800f576:	3410      	adds	r4, #16
 800f578:	3510      	adds	r5, #16
 800f57a:	f8c6 418c 	str.w	r4, [r6, #396]	; 0x18c
 800f57e:	f8c6 5188 	str.w	r5, [r6, #392]	; 0x188
 800f582:	bd70      	pop	{r4, r5, r6, pc}

0800f584 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>:
 800f584:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800f586:	0149      	lsls	r1, r1, #5
 800f588:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800f58a:	4604      	mov	r4, r0
 800f58c:	4299      	cmp	r1, r3
 800f58e:	9101      	str	r1, [sp, #4]
 800f590:	d00b      	beq.n	800f5aa <_ZN8touchgfx6Circle12updateArcEndIiEEvT_+0x26>
 800f592:	4601      	mov	r1, r0
 800f594:	aa01      	add	r2, sp, #4
 800f596:	a802      	add	r0, sp, #8
 800f598:	f7fe fee4 	bl	800e364 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 800f59c:	9b01      	ldr	r3, [sp, #4]
 800f59e:	a902      	add	r1, sp, #8
 800f5a0:	4620      	mov	r0, r4
 800f5a2:	6423      	str	r3, [r4, #64]	; 0x40
 800f5a4:	6823      	ldr	r3, [r4, #0]
 800f5a6:	691b      	ldr	r3, [r3, #16]
 800f5a8:	4798      	blx	r3
 800f5aa:	b004      	add	sp, #16
 800f5ac:	bd10      	pop	{r4, pc}
	...

0800f5b0 <_ZN8touchgfx5Gauge8setValueEi>:
 800f5b0:	b570      	push	{r4, r5, r6, lr}
 800f5b2:	4604      	mov	r4, r0
 800f5b4:	f7fc fac5 	bl	800bb42 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 800f5b8:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 800f5bc:	f8d4 114c 	ldr.w	r1, [r4, #332]	; 0x14c
 800f5c0:	4620      	mov	r0, r4
 800f5c2:	429a      	cmp	r2, r3
 800f5c4:	f504 76ac 	add.w	r6, r4, #344	; 0x158
 800f5c8:	bfac      	ite	ge
 800f5ca:	f894 3145 	ldrbge.w	r3, [r4, #325]	; 0x145
 800f5ce:	f894 3144 	ldrblt.w	r3, [r4, #324]	; 0x144
 800f5d2:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 800f5d6:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 800f5da:	1ac9      	subs	r1, r1, r3
 800f5dc:	2900      	cmp	r1, #0
 800f5de:	bfb8      	it	lt
 800f5e0:	4249      	neglt	r1, r1
 800f5e2:	b289      	uxth	r1, r1
 800f5e4:	f7fc fb41 	bl	800bc6a <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 800f5e8:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 800f5ec:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 800f5f0:	4605      	mov	r5, r0
 800f5f2:	eddf 6a18 	vldr	s13, [pc, #96]	; 800f654 <_ZN8touchgfx5Gauge8setValueEi+0xa4>
 800f5f6:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 800f5fa:	429a      	cmp	r2, r3
 800f5fc:	ed9f 7a16 	vldr	s14, [pc, #88]	; 800f658 <_ZN8touchgfx5Gauge8setValueEi+0xa8>
 800f600:	da15      	bge.n	800f62e <_ZN8touchgfx5Gauge8setValueEi+0x7e>
 800f602:	1b5b      	subs	r3, r3, r5
 800f604:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 800f608:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 800f60c:	ee07 3a90 	vmov	s15, r3
 800f610:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800f614:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 800f618:	ee21 1a07 	vmul.f32	s2, s2, s14
 800f61c:	f00e fa23 	bl	801da66 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 800f620:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 800f624:	1b49      	subs	r1, r1, r5
 800f626:	4630      	mov	r0, r6
 800f628:	f7ff ffac 	bl	800f584 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>
 800f62c:	bd70      	pop	{r4, r5, r6, pc}
 800f62e:	442b      	add	r3, r5
 800f630:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 800f634:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 800f638:	ee07 3a90 	vmov	s15, r3
 800f63c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800f640:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 800f644:	ee21 1a07 	vmul.f32	s2, s2, s14
 800f648:	f00e fa0d 	bl	801da66 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 800f64c:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 800f650:	4429      	add	r1, r5
 800f652:	e7e8      	b.n	800f626 <_ZN8touchgfx5Gauge8setValueEi+0x76>
 800f654:	43340000 	.word	0x43340000
 800f658:	40490fdb 	.word	0x40490fdb

0800f65c <_ZN8touchgfx5Gauge16setStartEndAngleEii>:
 800f65c:	4291      	cmp	r1, r2
 800f65e:	b510      	push	{r4, lr}
 800f660:	4604      	mov	r4, r0
 800f662:	d105      	bne.n	800f670 <_ZN8touchgfx5Gauge16setStartEndAngleEii+0x14>
 800f664:	4b0b      	ldr	r3, [pc, #44]	; (800f694 <_ZN8touchgfx5Gauge16setStartEndAngleEii+0x38>)
 800f666:	215a      	movs	r1, #90	; 0x5a
 800f668:	4a0b      	ldr	r2, [pc, #44]	; (800f698 <_ZN8touchgfx5Gauge16setStartEndAngleEii+0x3c>)
 800f66a:	480c      	ldr	r0, [pc, #48]	; (800f69c <_ZN8touchgfx5Gauge16setStartEndAngleEii+0x40>)
 800f66c:	f010 fab4 	bl	801fbd8 <__assert_func>
 800f670:	f8c0 1148 	str.w	r1, [r0, #328]	; 0x148
 800f674:	0149      	lsls	r1, r1, #5
 800f676:	f8c0 214c 	str.w	r2, [r0, #332]	; 0x14c
 800f67a:	0152      	lsls	r2, r2, #5
 800f67c:	f8c0 1194 	str.w	r1, [r0, #404]	; 0x194
 800f680:	f8c0 2198 	str.w	r2, [r0, #408]	; 0x198
 800f684:	f7fc f9fc 	bl	800ba80 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 800f688:	4601      	mov	r1, r0
 800f68a:	4620      	mov	r0, r4
 800f68c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f690:	f7ff bf8e 	b.w	800f5b0 <_ZN8touchgfx5Gauge8setValueEi>
 800f694:	08023b44 	.word	0x08023b44
 800f698:	08023c70 	.word	0x08023c70
 800f69c:	08023b5b 	.word	0x08023b5b

0800f6a0 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800f6a0:	b570      	push	{r4, r5, r6, lr}
 800f6a2:	880b      	ldrh	r3, [r1, #0]
 800f6a4:	4605      	mov	r5, r0
 800f6a6:	4604      	mov	r4, r0
 800f6a8:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800f6aa:	8813      	ldrh	r3, [r2, #0]
 800f6ac:	f825 3f30 	strh.w	r3, [r5, #48]!
 800f6b0:	4628      	mov	r0, r5
 800f6b2:	f005 fa25 	bl	8014b00 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800f6b6:	4606      	mov	r6, r0
 800f6b8:	4628      	mov	r0, r5
 800f6ba:	f005 fa65 	bl	8014b88 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800f6be:	6823      	ldr	r3, [r4, #0]
 800f6c0:	4605      	mov	r5, r0
 800f6c2:	b231      	sxth	r1, r6
 800f6c4:	4620      	mov	r0, r4
 800f6c6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800f6c8:	4798      	blx	r3
 800f6ca:	6823      	ldr	r3, [r4, #0]
 800f6cc:	b229      	sxth	r1, r5
 800f6ce:	4620      	mov	r0, r4
 800f6d0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800f6d2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f6d6:	4718      	bx	r3

0800f6d8 <_ZNK8touchgfx6Button12getSolidRectEv>:
 800f6d8:	b510      	push	{r4, lr}
 800f6da:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 800f6de:	4604      	mov	r4, r0
 800f6e0:	2bff      	cmp	r3, #255	; 0xff
 800f6e2:	d006      	beq.n	800f6f2 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800f6e4:	2300      	movs	r3, #0
 800f6e6:	8003      	strh	r3, [r0, #0]
 800f6e8:	8043      	strh	r3, [r0, #2]
 800f6ea:	8083      	strh	r3, [r0, #4]
 800f6ec:	80c3      	strh	r3, [r0, #6]
 800f6ee:	4620      	mov	r0, r4
 800f6f0:	bd10      	pop	{r4, pc}
 800f6f2:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800f6f6:	b11b      	cbz	r3, 800f700 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800f6f8:	3130      	adds	r1, #48	; 0x30
 800f6fa:	f005 fa89 	bl	8014c10 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800f6fe:	e7f6      	b.n	800f6ee <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800f700:	312e      	adds	r1, #46	; 0x2e
 800f702:	e7fa      	b.n	800f6fa <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

0800f704 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800f704:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f708:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800f70c:	b08a      	sub	sp, #40	; 0x28
 800f70e:	4604      	mov	r4, r0
 800f710:	4688      	mov	r8, r1
 800f712:	2b00      	cmp	r3, #0
 800f714:	d044      	beq.n	800f7a0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x9c>
 800f716:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800f718:	a805      	add	r0, sp, #20
 800f71a:	f8ad 3014 	strh.w	r3, [sp, #20]
 800f71e:	f005 f9ef 	bl	8014b00 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800f722:	4605      	mov	r5, r0
 800f724:	b206      	sxth	r6, r0
 800f726:	a805      	add	r0, sp, #20
 800f728:	f005 fa2e 	bl	8014b88 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800f72c:	f9b8 2000 	ldrsh.w	r2, [r8]
 800f730:	f8b8 7004 	ldrh.w	r7, [r8, #4]
 800f734:	2300      	movs	r3, #0
 800f736:	fa0f fc80 	sxth.w	ip, r0
 800f73a:	4417      	add	r7, r2
 800f73c:	9306      	str	r3, [sp, #24]
 800f73e:	b2bf      	uxth	r7, r7
 800f740:	fa0f fe87 	sxth.w	lr, r7
 800f744:	459e      	cmp	lr, r3
 800f746:	dd2d      	ble.n	800f7a4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800f748:	4296      	cmp	r6, r2
 800f74a:	dd2b      	ble.n	800f7a4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800f74c:	f9b8 3002 	ldrsh.w	r3, [r8, #2]
 800f750:	f8b8 1006 	ldrh.w	r1, [r8, #6]
 800f754:	4419      	add	r1, r3
 800f756:	b289      	uxth	r1, r1
 800f758:	fa0f f881 	sxth.w	r8, r1
 800f75c:	f1b8 0f00 	cmp.w	r8, #0
 800f760:	dd20      	ble.n	800f7a4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800f762:	459c      	cmp	ip, r3
 800f764:	dd1e      	ble.n	800f7a4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800f766:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800f76a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f76e:	4576      	cmp	r6, lr
 800f770:	bfa8      	it	ge
 800f772:	463d      	movge	r5, r7
 800f774:	45c4      	cmp	ip, r8
 800f776:	bfa8      	it	ge
 800f778:	4608      	movge	r0, r1
 800f77a:	f8ad 2018 	strh.w	r2, [sp, #24]
 800f77e:	1aad      	subs	r5, r5, r2
 800f780:	1ac0      	subs	r0, r0, r3
 800f782:	f8ad 301a 	strh.w	r3, [sp, #26]
 800f786:	f8ad 501c 	strh.w	r5, [sp, #28]
 800f78a:	f8ad 001e 	strh.w	r0, [sp, #30]
 800f78e:	4b1f      	ldr	r3, [pc, #124]	; (800f80c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x108>)
 800f790:	681b      	ldr	r3, [r3, #0]
 800f792:	b953      	cbnz	r3, 800f7aa <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa6>
 800f794:	4b1e      	ldr	r3, [pc, #120]	; (800f810 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x10c>)
 800f796:	2187      	movs	r1, #135	; 0x87
 800f798:	4a1e      	ldr	r2, [pc, #120]	; (800f814 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x110>)
 800f79a:	481f      	ldr	r0, [pc, #124]	; (800f818 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x114>)
 800f79c:	f010 fa1c 	bl	801fbd8 <__assert_func>
 800f7a0:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800f7a2:	e7b9      	b.n	800f718 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800f7a4:	2300      	movs	r3, #0
 800f7a6:	9307      	str	r3, [sp, #28]
 800f7a8:	e7f1      	b.n	800f78e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x8a>
 800f7aa:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800f7ae:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800f7b2:	429a      	cmp	r2, r3
 800f7b4:	d026      	beq.n	800f804 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800f7b6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800f7ba:	2b00      	cmp	r3, #0
 800f7bc:	dd22      	ble.n	800f804 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800f7be:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800f7c2:	2b00      	cmp	r3, #0
 800f7c4:	dd1e      	ble.n	800f804 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800f7c6:	2300      	movs	r3, #0
 800f7c8:	a908      	add	r1, sp, #32
 800f7ca:	4620      	mov	r0, r4
 800f7cc:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800f7d0:	6823      	ldr	r3, [r4, #0]
 800f7d2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f7d4:	4798      	blx	r3
 800f7d6:	4b11      	ldr	r3, [pc, #68]	; (800f81c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x118>)
 800f7d8:	681b      	ldr	r3, [r3, #0]
 800f7da:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800f7de:	b10a      	cbz	r2, 800f7e4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800f7e0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800f7e2:	b900      	cbnz	r0, 800f7e6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe2>
 800f7e4:	6898      	ldr	r0, [r3, #8]
 800f7e6:	2501      	movs	r5, #1
 800f7e8:	6801      	ldr	r1, [r0, #0]
 800f7ea:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800f7ee:	9502      	str	r5, [sp, #8]
 800f7f0:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800f7f4:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800f7f8:	9401      	str	r4, [sp, #4]
 800f7fa:	ac06      	add	r4, sp, #24
 800f7fc:	9400      	str	r4, [sp, #0]
 800f7fe:	688c      	ldr	r4, [r1, #8]
 800f800:	a905      	add	r1, sp, #20
 800f802:	47a0      	blx	r4
 800f804:	b00a      	add	sp, #40	; 0x28
 800f806:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f80a:	bf00      	nop
 800f80c:	2400e124 	.word	0x2400e124
 800f810:	08022348 	.word	0x08022348
 800f814:	08023ca9 	.word	0x08023ca9
 800f818:	080223e3 	.word	0x080223e3
 800f81c:	2400e07c 	.word	0x2400e07c

0800f820 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 800f820:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f824:	4d38      	ldr	r5, [pc, #224]	; (800f908 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xe8>)
 800f826:	b08c      	sub	sp, #48	; 0x30
 800f828:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800f82a:	4604      	mov	r4, r0
 800f82c:	882b      	ldrh	r3, [r5, #0]
 800f82e:	4689      	mov	r9, r1
 800f830:	4293      	cmp	r3, r2
 800f832:	d965      	bls.n	800f900 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xe0>
 800f834:	4e35      	ldr	r6, [pc, #212]	; (800f90c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xec>)
 800f836:	6833      	ldr	r3, [r6, #0]
 800f838:	b92b      	cbnz	r3, 800f846 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x26>
 800f83a:	4b35      	ldr	r3, [pc, #212]	; (800f910 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xf0>)
 800f83c:	21ae      	movs	r1, #174	; 0xae
 800f83e:	4a35      	ldr	r2, [pc, #212]	; (800f914 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xf4>)
 800f840:	4835      	ldr	r0, [pc, #212]	; (800f918 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xf8>)
 800f842:	f010 f9c9 	bl	801fbd8 <__assert_func>
 800f846:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 800f84a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800f84e:	4b33      	ldr	r3, [pc, #204]	; (800f91c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xfc>)
 800f850:	681b      	ldr	r3, [r3, #0]
 800f852:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800f856:	2a00      	cmp	r2, #0
 800f858:	d052      	beq.n	800f900 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xe0>
 800f85a:	784b      	ldrb	r3, [r1, #1]
 800f85c:	f890 c036 	ldrb.w	ip, [r0, #54]	; 0x36
 800f860:	f3c3 0a01 	ubfx	sl, r3, #0, #2
 800f864:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800f868:	f9b0 e034 	ldrsh.w	lr, [r0, #52]	; 0x34
 800f86c:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800f870:	4b2b      	ldr	r3, [pc, #172]	; (800f920 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x100>)
 800f872:	f890 8038 	ldrb.w	r8, [r0, #56]	; 0x38
 800f876:	681b      	ldr	r3, [r3, #0]
 800f878:	f890 7037 	ldrb.w	r7, [r0, #55]	; 0x37
 800f87c:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
 800f880:	9207      	str	r2, [sp, #28]
 800f882:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800f884:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800f888:	f88d a020 	strb.w	sl, [sp, #32]
 800f88c:	f88d 8022 	strb.w	r8, [sp, #34]	; 0x22
 800f890:	9009      	str	r0, [sp, #36]	; 0x24
 800f892:	f8ad e028 	strh.w	lr, [sp, #40]	; 0x28
 800f896:	f88d c02a 	strb.w	ip, [sp, #42]	; 0x2a
 800f89a:	f88d 702b 	strb.w	r7, [sp, #43]	; 0x2b
 800f89e:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
 800f8a2:	b10a      	cbz	r2, 800f8a8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x88>
 800f8a4:	6cdf      	ldr	r7, [r3, #76]	; 0x4c
 800f8a6:	b907      	cbnz	r7, 800f8aa <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x8a>
 800f8a8:	689f      	ldr	r7, [r3, #8]
 800f8aa:	f10d 0814 	add.w	r8, sp, #20
 800f8ae:	4621      	mov	r1, r4
 800f8b0:	4640      	mov	r0, r8
 800f8b2:	f002 ff77 	bl	80127a4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f8b6:	6833      	ldr	r3, [r6, #0]
 800f8b8:	2b00      	cmp	r3, #0
 800f8ba:	d0be      	beq.n	800f83a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x1a>
 800f8bc:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800f8be:	882b      	ldrh	r3, [r5, #0]
 800f8c0:	428b      	cmp	r3, r1
 800f8c2:	d803      	bhi.n	800f8cc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xac>
 800f8c4:	4b17      	ldr	r3, [pc, #92]	; (800f924 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x104>)
 800f8c6:	21af      	movs	r1, #175	; 0xaf
 800f8c8:	4a12      	ldr	r2, [pc, #72]	; (800f914 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xf4>)
 800f8ca:	e7b9      	b.n	800f840 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x20>
 800f8cc:	4b16      	ldr	r3, [pc, #88]	; (800f928 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x108>)
 800f8ce:	6818      	ldr	r0, [r3, #0]
 800f8d0:	f7f4 f80c 	bl	80038ec <_ZNK8touchgfx5Texts7getTextEt>
 800f8d4:	6823      	ldr	r3, [r4, #0]
 800f8d6:	4605      	mov	r5, r0
 800f8d8:	4620      	mov	r0, r4
 800f8da:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800f8dc:	4798      	blx	r3
 800f8de:	6823      	ldr	r3, [r4, #0]
 800f8e0:	4606      	mov	r6, r0
 800f8e2:	4620      	mov	r0, r4
 800f8e4:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800f8e8:	4798      	blx	r3
 800f8ea:	ab07      	add	r3, sp, #28
 800f8ec:	9501      	str	r5, [sp, #4]
 800f8ee:	9300      	str	r3, [sp, #0]
 800f8f0:	464b      	mov	r3, r9
 800f8f2:	e9cd 6002 	strd	r6, r0, [sp, #8]
 800f8f6:	4638      	mov	r0, r7
 800f8f8:	e898 0006 	ldmia.w	r8, {r1, r2}
 800f8fc:	f7f3 ffa8 	bl	8003850 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800f900:	b00c      	add	sp, #48	; 0x30
 800f902:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f906:	bf00      	nop
 800f908:	2400e0f0 	.word	0x2400e0f0
 800f90c:	2400e0ec 	.word	0x2400e0ec
 800f910:	08022a30 	.word	0x08022a30
 800f914:	08023cdc 	.word	0x08023cdc
 800f918:	08022a72 	.word	0x08022a72
 800f91c:	2400e0f4 	.word	0x2400e0f4
 800f920:	2400e07c 	.word	0x2400e07c
 800f924:	08022a9b 	.word	0x08022a9b
 800f928:	2400e0f8 	.word	0x2400e0f8

0800f92c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
 800f92c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f930:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800f934:	b0a0      	sub	sp, #128	; 0x80
 800f936:	4604      	mov	r4, r0
 800f938:	b193      	cbz	r3, 800f960 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800f93a:	4b33      	ldr	r3, [pc, #204]	; (800fa08 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xdc>)
 800f93c:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800f93e:	881b      	ldrh	r3, [r3, #0]
 800f940:	428b      	cmp	r3, r1
 800f942:	d90d      	bls.n	800f960 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800f944:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800f948:	2b00      	cmp	r3, #0
 800f94a:	dd09      	ble.n	800f960 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800f94c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800f950:	2b00      	cmp	r3, #0
 800f952:	dd05      	ble.n	800f960 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800f954:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 800f958:	b12b      	cbz	r3, 800f966 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x3a>
 800f95a:	6803      	ldr	r3, [r0, #0]
 800f95c:	695b      	ldr	r3, [r3, #20]
 800f95e:	4798      	blx	r3
 800f960:	b020      	add	sp, #128	; 0x80
 800f962:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f966:	4b29      	ldr	r3, [pc, #164]	; (800fa0c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xe0>)
 800f968:	681b      	ldr	r3, [r3, #0]
 800f96a:	b92b      	cbnz	r3, 800f978 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x4c>
 800f96c:	4b28      	ldr	r3, [pc, #160]	; (800fa10 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xe4>)
 800f96e:	21ae      	movs	r1, #174	; 0xae
 800f970:	4a28      	ldr	r2, [pc, #160]	; (800fa14 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xe8>)
 800f972:	4829      	ldr	r0, [pc, #164]	; (800fa18 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xec>)
 800f974:	f010 f930 	bl	801fbd8 <__assert_func>
 800f978:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800f97c:	4b27      	ldr	r3, [pc, #156]	; (800fa1c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xf0>)
 800f97e:	681b      	ldr	r3, [r3, #0]
 800f980:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800f984:	4b26      	ldr	r3, [pc, #152]	; (800fa20 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xf4>)
 800f986:	6818      	ldr	r0, [r3, #0]
 800f988:	f7f3 ffb0 	bl	80038ec <_ZNK8touchgfx5Texts7getTextEt>
 800f98c:	4606      	mov	r6, r0
 800f98e:	a807      	add	r0, sp, #28
 800f990:	f003 fbd4 	bl	801313c <_ZN8touchgfx12TextProviderC1Ev>
 800f994:	682b      	ldr	r3, [r5, #0]
 800f996:	4628      	mov	r0, r5
 800f998:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800f99a:	4798      	blx	r3
 800f99c:	682b      	ldr	r3, [r5, #0]
 800f99e:	4607      	mov	r7, r0
 800f9a0:	4628      	mov	r0, r5
 800f9a2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800f9a4:	4798      	blx	r3
 800f9a6:	6823      	ldr	r3, [r4, #0]
 800f9a8:	4605      	mov	r5, r0
 800f9aa:	4620      	mov	r0, r4
 800f9ac:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800f9ae:	4798      	blx	r3
 800f9b0:	6823      	ldr	r3, [r4, #0]
 800f9b2:	4680      	mov	r8, r0
 800f9b4:	4620      	mov	r0, r4
 800f9b6:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800f9ba:	4798      	blx	r3
 800f9bc:	462b      	mov	r3, r5
 800f9be:	463a      	mov	r2, r7
 800f9c0:	4631      	mov	r1, r6
 800f9c2:	e9cd 8000 	strd	r8, r0, [sp]
 800f9c6:	a807      	add	r0, sp, #28
 800f9c8:	f003 fc39 	bl	801323e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800f9cc:	a807      	add	r0, sp, #28
 800f9ce:	f004 f82d 	bl	8013a2c <_ZN8touchgfx12TextProvider11getNextCharEv>
 800f9d2:	280a      	cmp	r0, #10
 800f9d4:	d103      	bne.n	800f9de <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xb2>
 800f9d6:	6823      	ldr	r3, [r4, #0]
 800f9d8:	4620      	mov	r0, r4
 800f9da:	695b      	ldr	r3, [r3, #20]
 800f9dc:	e7bf      	b.n	800f95e <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x32>
 800f9de:	a807      	add	r0, sp, #28
 800f9e0:	f004 f824 	bl	8013a2c <_ZN8touchgfx12TextProvider11getNextCharEv>
 800f9e4:	2800      	cmp	r0, #0
 800f9e6:	d1f4      	bne.n	800f9d2 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xa6>
 800f9e8:	ad04      	add	r5, sp, #16
 800f9ea:	4621      	mov	r1, r4
 800f9ec:	4628      	mov	r0, r5
 800f9ee:	f7ff f8f9 	bl	800ebe4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800f9f2:	ab02      	add	r3, sp, #8
 800f9f4:	6822      	ldr	r2, [r4, #0]
 800f9f6:	e895 0003 	ldmia.w	r5, {r0, r1}
 800f9fa:	6912      	ldr	r2, [r2, #16]
 800f9fc:	e883 0003 	stmia.w	r3, {r0, r1}
 800fa00:	4619      	mov	r1, r3
 800fa02:	4620      	mov	r0, r4
 800fa04:	4790      	blx	r2
 800fa06:	e7ab      	b.n	800f960 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800fa08:	2400e0f0 	.word	0x2400e0f0
 800fa0c:	2400e0ec 	.word	0x2400e0ec
 800fa10:	08022a30 	.word	0x08022a30
 800fa14:	08023cdc 	.word	0x08023cdc
 800fa18:	08022a72 	.word	0x08022a72
 800fa1c:	2400e0f4 	.word	0x2400e0f4
 800fa20:	2400e0f8 	.word	0x2400e0f8

0800fa24 <_ZN8touchgfx5ImageD1Ev>:
 800fa24:	4770      	bx	lr

0800fa26 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800fa26:	b570      	push	{r4, r5, r6, lr}
 800fa28:	880b      	ldrh	r3, [r1, #0]
 800fa2a:	460d      	mov	r5, r1
 800fa2c:	4604      	mov	r4, r0
 800fa2e:	84c3      	strh	r3, [r0, #38]	; 0x26
 800fa30:	4608      	mov	r0, r1
 800fa32:	f005 f865 	bl	8014b00 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800fa36:	4606      	mov	r6, r0
 800fa38:	4628      	mov	r0, r5
 800fa3a:	f005 f8a5 	bl	8014b88 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800fa3e:	6823      	ldr	r3, [r4, #0]
 800fa40:	4605      	mov	r5, r0
 800fa42:	b231      	sxth	r1, r6
 800fa44:	4620      	mov	r0, r4
 800fa46:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800fa48:	4798      	blx	r3
 800fa4a:	6823      	ldr	r3, [r4, #0]
 800fa4c:	b229      	sxth	r1, r5
 800fa4e:	4620      	mov	r0, r4
 800fa50:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800fa52:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fa56:	4718      	bx	r3

0800fa58 <_ZN8touchgfx5ImageD0Ev>:
 800fa58:	b510      	push	{r4, lr}
 800fa5a:	4604      	mov	r4, r0
 800fa5c:	212c      	movs	r1, #44	; 0x2c
 800fa5e:	f00f fede 	bl	801f81e <_ZdlPvj>
 800fa62:	4620      	mov	r0, r4
 800fa64:	bd10      	pop	{r4, pc}

0800fa66 <_ZNK8touchgfx5Image12getSolidRectEv>:
 800fa66:	b510      	push	{r4, lr}
 800fa68:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800fa6c:	4604      	mov	r4, r0
 800fa6e:	2bff      	cmp	r3, #255	; 0xff
 800fa70:	d006      	beq.n	800fa80 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800fa72:	2300      	movs	r3, #0
 800fa74:	8003      	strh	r3, [r0, #0]
 800fa76:	8043      	strh	r3, [r0, #2]
 800fa78:	8083      	strh	r3, [r0, #4]
 800fa7a:	80c3      	strh	r3, [r0, #6]
 800fa7c:	4620      	mov	r0, r4
 800fa7e:	bd10      	pop	{r4, pc}
 800fa80:	3126      	adds	r1, #38	; 0x26
 800fa82:	f005 f8c5 	bl	8014c10 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800fa86:	e7f9      	b.n	800fa7c <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800fa88 <_ZNK8touchgfx5Image17invalidateContentEv>:
 800fa88:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 800fa8c:	b12a      	cbz	r2, 800fa9a <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800fa8e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800fa92:	b112      	cbz	r2, 800fa9a <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800fa94:	6803      	ldr	r3, [r0, #0]
 800fa96:	695b      	ldr	r3, [r3, #20]
 800fa98:	4718      	bx	r3
 800fa9a:	4770      	bx	lr

0800fa9c <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800fa9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800faa0:	4604      	mov	r4, r0
 800faa2:	b088      	sub	sp, #32
 800faa4:	2500      	movs	r5, #0
 800faa6:	460f      	mov	r7, r1
 800faa8:	f854 3b26 	ldr.w	r3, [r4], #38
 800faac:	a904      	add	r1, sp, #16
 800faae:	4606      	mov	r6, r0
 800fab0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fab2:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800fab6:	4798      	blx	r3
 800fab8:	4620      	mov	r0, r4
 800faba:	f005 f821 	bl	8014b00 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800fabe:	4680      	mov	r8, r0
 800fac0:	4620      	mov	r0, r4
 800fac2:	f005 f861 	bl	8014b88 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800fac6:	9506      	str	r5, [sp, #24]
 800fac8:	ad06      	add	r5, sp, #24
 800faca:	f8ad 001e 	strh.w	r0, [sp, #30]
 800face:	4639      	mov	r1, r7
 800fad0:	f8ad 801c 	strh.w	r8, [sp, #28]
 800fad4:	4628      	mov	r0, r5
 800fad6:	f7fc fda5 	bl	800c624 <_ZN8touchgfx4RectaNERKS0_>
 800fada:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800fade:	2b00      	cmp	r3, #0
 800fae0:	dd19      	ble.n	800fb16 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800fae2:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800fae6:	2b00      	cmp	r3, #0
 800fae8:	dd15      	ble.n	800fb16 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800faea:	4b0c      	ldr	r3, [pc, #48]	; (800fb1c <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800faec:	681b      	ldr	r3, [r3, #0]
 800faee:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800faf2:	b10a      	cbz	r2, 800faf8 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800faf4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800faf6:	b900      	cbnz	r0, 800fafa <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800faf8:	6898      	ldr	r0, [r3, #8]
 800fafa:	2701      	movs	r7, #1
 800fafc:	6801      	ldr	r1, [r0, #0]
 800fafe:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800fb02:	9702      	str	r7, [sp, #8]
 800fb04:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 800fb08:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800fb0c:	e9cd 5600 	strd	r5, r6, [sp]
 800fb10:	688d      	ldr	r5, [r1, #8]
 800fb12:	4621      	mov	r1, r4
 800fb14:	47a8      	blx	r5
 800fb16:	b008      	add	sp, #32
 800fb18:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fb1c:	2400e07c 	.word	0x2400e07c

0800fb20 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 800fb20:	4b02      	ldr	r3, [pc, #8]	; (800fb2c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 800fb22:	6018      	str	r0, [r3, #0]
 800fb24:	4b02      	ldr	r3, [pc, #8]	; (800fb30 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 800fb26:	6019      	str	r1, [r3, #0]
 800fb28:	4770      	bx	lr
 800fb2a:	bf00      	nop
 800fb2c:	2400e084 	.word	0x2400e084
 800fb30:	2400e098 	.word	0x2400e098

0800fb34 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj>:
 800fb34:	b538      	push	{r3, r4, r5, lr}
 800fb36:	4c2b      	ldr	r4, [pc, #172]	; (800fbe4 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xb0>)
 800fb38:	4b2b      	ldr	r3, [pc, #172]	; (800fbe8 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xb4>)
 800fb3a:	6821      	ldr	r1, [r4, #0]
 800fb3c:	681a      	ldr	r2, [r3, #0]
 800fb3e:	4281      	cmp	r1, r0
 800fb40:	4d2a      	ldr	r5, [pc, #168]	; (800fbec <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xb8>)
 800fb42:	492b      	ldr	r1, [pc, #172]	; (800fbf0 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xbc>)
 800fb44:	d108      	bne.n	800fb58 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x24>
 800fb46:	682b      	ldr	r3, [r5, #0]
 800fb48:	4293      	cmp	r3, r2
 800fb4a:	d105      	bne.n	800fb58 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x24>
 800fb4c:	6808      	ldr	r0, [r1, #0]
 800fb4e:	280f      	cmp	r0, #15
 800fb50:	bf94      	ite	ls
 800fb52:	2000      	movls	r0, #0
 800fb54:	2001      	movhi	r0, #1
 800fb56:	bd38      	pop	{r3, r4, r5, pc}
 800fb58:	4b26      	ldr	r3, [pc, #152]	; (800fbf4 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc0>)
 800fb5a:	6020      	str	r0, [r4, #0]
 800fb5c:	681b      	ldr	r3, [r3, #0]
 800fb5e:	602a      	str	r2, [r5, #0]
 800fb60:	4298      	cmp	r0, r3
 800fb62:	d905      	bls.n	800fb70 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x3c>
 800fb64:	4b24      	ldr	r3, [pc, #144]	; (800fbf8 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc4>)
 800fb66:	2135      	movs	r1, #53	; 0x35
 800fb68:	4a24      	ldr	r2, [pc, #144]	; (800fbfc <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc8>)
 800fb6a:	4825      	ldr	r0, [pc, #148]	; (800fc00 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xcc>)
 800fb6c:	f010 f834 	bl	801fbd8 <__assert_func>
 800fb70:	f010 0403 	ands.w	r4, r0, #3
 800fb74:	bf1f      	itttt	ne
 800fb76:	f1c4 0504 	rsbne	r5, r4, #4
 800fb7a:	3b04      	subne	r3, #4
 800fb7c:	1952      	addne	r2, r2, r5
 800fb7e:	191b      	addne	r3, r3, r4
 800fb80:	4d20      	ldr	r5, [pc, #128]	; (800fc04 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xd0>)
 800fb82:	4402      	add	r2, r0
 800fb84:	1a1b      	subs	r3, r3, r0
 800fb86:	3001      	adds	r0, #1
 800fb88:	602a      	str	r2, [r5, #0]
 800fb8a:	f020 0401 	bic.w	r4, r0, #1
 800fb8e:	42a3      	cmp	r3, r4
 800fb90:	d203      	bcs.n	800fb9a <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x66>
 800fb92:	4b19      	ldr	r3, [pc, #100]	; (800fbf8 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc4>)
 800fb94:	2148      	movs	r1, #72	; 0x48
 800fb96:	4a19      	ldr	r2, [pc, #100]	; (800fbfc <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc8>)
 800fb98:	e7e7      	b.n	800fb6a <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x36>
 800fb9a:	f010 0002 	ands.w	r0, r0, #2
 800fb9e:	bf1f      	itttt	ne
 800fba0:	f1c0 0504 	rsbne	r5, r0, #4
 800fba4:	1952      	addne	r2, r2, r5
 800fba6:	1f05      	subne	r5, r0, #4
 800fba8:	195b      	addne	r3, r3, r5
 800fbaa:	4422      	add	r2, r4
 800fbac:	4d16      	ldr	r5, [pc, #88]	; (800fc08 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xd4>)
 800fbae:	1b1b      	subs	r3, r3, r4
 800fbb0:	602a      	str	r2, [r5, #0]
 800fbb2:	429c      	cmp	r4, r3
 800fbb4:	d903      	bls.n	800fbbe <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x8a>
 800fbb6:	4b10      	ldr	r3, [pc, #64]	; (800fbf8 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc4>)
 800fbb8:	215b      	movs	r1, #91	; 0x5b
 800fbba:	4a10      	ldr	r2, [pc, #64]	; (800fbfc <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc8>)
 800fbbc:	e7d5      	b.n	800fb6a <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x36>
 800fbbe:	b120      	cbz	r0, 800fbca <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x96>
 800fbc0:	f1c0 0504 	rsb	r5, r0, #4
 800fbc4:	3804      	subs	r0, #4
 800fbc6:	442a      	add	r2, r5
 800fbc8:	4403      	add	r3, r0
 800fbca:	1b1b      	subs	r3, r3, r4
 800fbcc:	4422      	add	r2, r4
 800fbce:	480f      	ldr	r0, [pc, #60]	; (800fc0c <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xd8>)
 800fbd0:	2b0f      	cmp	r3, #15
 800fbd2:	600b      	str	r3, [r1, #0]
 800fbd4:	6002      	str	r2, [r0, #0]
 800fbd6:	d803      	bhi.n	800fbe0 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xac>
 800fbd8:	4b0d      	ldr	r3, [pc, #52]	; (800fc10 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xdc>)
 800fbda:	216e      	movs	r1, #110	; 0x6e
 800fbdc:	4a07      	ldr	r2, [pc, #28]	; (800fbfc <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc8>)
 800fbde:	e7c4      	b.n	800fb6a <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x36>
 800fbe0:	2001      	movs	r0, #1
 800fbe2:	e7b8      	b.n	800fb56 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x22>
 800fbe4:	2400e08c 	.word	0x2400e08c
 800fbe8:	2400e084 	.word	0x2400e084
 800fbec:	2400e094 	.word	0x2400e094
 800fbf0:	2400e09c 	.word	0x2400e09c
 800fbf4:	2400e098 	.word	0x2400e098
 800fbf8:	08023d78 	.word	0x08023d78
 800fbfc:	08023e40 	.word	0x08023e40
 800fc00:	08023db1 	.word	0x08023db1
 800fc04:	2400e0a0 	.word	0x2400e0a0
 800fc08:	2400e090 	.word	0x2400e090
 800fc0c:	2400e088 	.word	0x2400e088
 800fc10:	08023dfb 	.word	0x08023dfb

0800fc14 <_ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv>:
 800fc14:	4b04      	ldr	r3, [pc, #16]	; (800fc28 <_ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv+0x14>)
 800fc16:	6818      	ldr	r0, [r3, #0]
 800fc18:	b120      	cbz	r0, 800fc24 <_ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv+0x10>
 800fc1a:	4b04      	ldr	r3, [pc, #16]	; (800fc2c <_ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv+0x18>)
 800fc1c:	6818      	ldr	r0, [r3, #0]
 800fc1e:	3000      	adds	r0, #0
 800fc20:	bf18      	it	ne
 800fc22:	2001      	movne	r0, #1
 800fc24:	4770      	bx	lr
 800fc26:	bf00      	nop
 800fc28:	2400e084 	.word	0x2400e084
 800fc2c:	2400e098 	.word	0x2400e098

0800fc30 <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv>:
 800fc30:	4b01      	ldr	r3, [pc, #4]	; (800fc38 <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv+0x8>)
 800fc32:	6818      	ldr	r0, [r3, #0]
 800fc34:	4770      	bx	lr
 800fc36:	bf00      	nop
 800fc38:	2400e08c 	.word	0x2400e08c

0800fc3c <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCoversEv>:
 800fc3c:	4b01      	ldr	r3, [pc, #4]	; (800fc44 <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCoversEv+0x8>)
 800fc3e:	6818      	ldr	r0, [r3, #0]
 800fc40:	4770      	bx	lr
 800fc42:	bf00      	nop
 800fc44:	2400e094 	.word	0x2400e094

0800fc48 <_ZN8touchgfx20CanvasWidgetRenderer23getScanlineStartIndicesEv>:
 800fc48:	4b01      	ldr	r3, [pc, #4]	; (800fc50 <_ZN8touchgfx20CanvasWidgetRenderer23getScanlineStartIndicesEv+0x8>)
 800fc4a:	6818      	ldr	r0, [r3, #0]
 800fc4c:	4770      	bx	lr
 800fc4e:	bf00      	nop
 800fc50:	2400e0a0 	.word	0x2400e0a0

0800fc54 <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCountsEv>:
 800fc54:	4b01      	ldr	r3, [pc, #4]	; (800fc5c <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCountsEv+0x8>)
 800fc56:	6818      	ldr	r0, [r3, #0]
 800fc58:	4770      	bx	lr
 800fc5a:	bf00      	nop
 800fc5c:	2400e090 	.word	0x2400e090

0800fc60 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 800fc60:	4b01      	ldr	r3, [pc, #4]	; (800fc68 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 800fc62:	6818      	ldr	r0, [r3, #0]
 800fc64:	4770      	bx	lr
 800fc66:	bf00      	nop
 800fc68:	2400e088 	.word	0x2400e088

0800fc6c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 800fc6c:	4b01      	ldr	r3, [pc, #4]	; (800fc74 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 800fc6e:	6818      	ldr	r0, [r3, #0]
 800fc70:	4770      	bx	lr
 800fc72:	bf00      	nop
 800fc74:	2400e09c 	.word	0x2400e09c

0800fc78 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800fc78:	b510      	push	{r4, lr}
 800fc7a:	6803      	ldr	r3, [r0, #0]
 800fc7c:	460c      	mov	r4, r1
 800fc7e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fc80:	4798      	blx	r3
 800fc82:	1b03      	subs	r3, r0, r4
 800fc84:	4258      	negs	r0, r3
 800fc86:	4158      	adcs	r0, r3
 800fc88:	bd10      	pop	{r4, pc}
	...

0800fc8c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800fc8c:	4b01      	ldr	r3, [pc, #4]	; (800fc94 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800fc8e:	6019      	str	r1, [r3, #0]
 800fc90:	4770      	bx	lr
 800fc92:	bf00      	nop
 800fc94:	2400e0a4 	.word	0x2400e0a4

0800fc98 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800fc98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fc9c:	4696      	mov	lr, r2
 800fc9e:	b097      	sub	sp, #92	; 0x5c
 800fca0:	4605      	mov	r5, r0
 800fca2:	4614      	mov	r4, r2
 800fca4:	460e      	mov	r6, r1
 800fca6:	461f      	mov	r7, r3
 800fca8:	f10d 0c1c 	add.w	ip, sp, #28
 800fcac:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 800fcb0:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 800fcb4:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 800fcb8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800fcbc:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800fcc0:	f8de 3000 	ldr.w	r3, [lr]
 800fcc4:	f104 0e14 	add.w	lr, r4, #20
 800fcc8:	f8cc 3000 	str.w	r3, [ip]
 800fccc:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800fcd0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800fcd4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800fcd8:	f8de 3000 	ldr.w	r3, [lr]
 800fcdc:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800fce0:	f8cc 3000 	str.w	r3, [ip]
 800fce4:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800fce8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800fcec:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800fcf0:	f8de 3000 	ldr.w	r3, [lr]
 800fcf4:	4631      	mov	r1, r6
 800fcf6:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800fcf8:	4628      	mov	r0, r5
 800fcfa:	f8cc 3000 	str.w	r3, [ip]
 800fcfe:	682b      	ldr	r3, [r5, #0]
 800fd00:	9201      	str	r2, [sp, #4]
 800fd02:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800fd04:	f8cd 8008 	str.w	r8, [sp, #8]
 800fd08:	9200      	str	r2, [sp, #0]
 800fd0a:	aa07      	add	r2, sp, #28
 800fd0c:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800fd10:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 800fd14:	463b      	mov	r3, r7
 800fd16:	47d8      	blx	fp
 800fd18:	46a6      	mov	lr, r4
 800fd1a:	f10d 0c1c 	add.w	ip, sp, #28
 800fd1e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800fd22:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800fd26:	f8de 3000 	ldr.w	r3, [lr]
 800fd2a:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800fd2e:	343c      	adds	r4, #60	; 0x3c
 800fd30:	f8cc 3000 	str.w	r3, [ip]
 800fd34:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800fd38:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800fd3c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800fd40:	f8de 3000 	ldr.w	r3, [lr]
 800fd44:	f8cc 3000 	str.w	r3, [ip]
 800fd48:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800fd4c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800fd4e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800fd52:	6823      	ldr	r3, [r4, #0]
 800fd54:	4631      	mov	r1, r6
 800fd56:	4628      	mov	r0, r5
 800fd58:	f8cc 3000 	str.w	r3, [ip]
 800fd5c:	682b      	ldr	r3, [r5, #0]
 800fd5e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800fd62:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800fd64:	f8cd 8008 	str.w	r8, [sp, #8]
 800fd68:	9201      	str	r2, [sp, #4]
 800fd6a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800fd6c:	9200      	str	r2, [sp, #0]
 800fd6e:	aa07      	add	r2, sp, #28
 800fd70:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 800fd72:	463b      	mov	r3, r7
 800fd74:	47a0      	blx	r4
 800fd76:	b017      	add	sp, #92	; 0x5c
 800fd78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800fd7c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800fd7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fd80:	b08d      	sub	sp, #52	; 0x34
 800fd82:	4688      	mov	r8, r1
 800fd84:	f8d3 c000 	ldr.w	ip, [r3]
 800fd88:	9916      	ldr	r1, [sp, #88]	; 0x58
 800fd8a:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 800fd8e:	680f      	ldr	r7, [r1, #0]
 800fd90:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 800fd94:	eba7 070c 	sub.w	r7, r7, ip
 800fd98:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 800fd9c:	edd3 6a07 	vldr	s13, [r3, #28]
 800fda0:	42bc      	cmp	r4, r7
 800fda2:	9918      	ldr	r1, [sp, #96]	; 0x60
 800fda4:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 800fda8:	bfa8      	it	ge
 800fdaa:	463c      	movge	r4, r7
 800fdac:	f9b1 9000 	ldrsh.w	r9, [r1]
 800fdb0:	f9ba 1000 	ldrsh.w	r1, [sl]
 800fdb4:	ee07 4a90 	vmov	s15, r4
 800fdb8:	eb09 0e0c 	add.w	lr, r9, ip
 800fdbc:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 800fdc0:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800fdc4:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 800fdc8:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 800fdcc:	4571      	cmp	r1, lr
 800fdce:	ee25 4a04 	vmul.f32	s8, s10, s8
 800fdd2:	ee65 4a24 	vmul.f32	s9, s10, s9
 800fdd6:	ee25 5a27 	vmul.f32	s10, s10, s15
 800fdda:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800fdde:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800fde2:	ee32 1a05 	vadd.f32	s2, s4, s10
 800fde6:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800fdea:	ee36 0a84 	vadd.f32	s0, s13, s8
 800fdee:	ee61 1a87 	vmul.f32	s3, s3, s14
 800fdf2:	ee22 2a07 	vmul.f32	s4, s4, s14
 800fdf6:	f340 808c 	ble.w	800ff12 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
 800fdfa:	eba1 060e 	sub.w	r6, r1, lr
 800fdfe:	fb96 f5f4 	sdiv	r5, r6, r4
 800fe02:	ee07 5a10 	vmov	s14, r5
 800fe06:	2d00      	cmp	r5, #0
 800fe08:	fb04 6615 	mls	r6, r4, r5, r6
 800fe0c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800fe10:	eea7 0a04 	vfma.f32	s0, s14, s8
 800fe14:	eee7 0a24 	vfma.f32	s1, s14, s9
 800fe18:	eea7 1a05 	vfma.f32	s2, s14, s10
 800fe1c:	dd12      	ble.n	800fe44 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
 800fe1e:	ee70 6a44 	vsub.f32	s13, s0, s8
 800fe22:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800fe26:	ee31 2a45 	vsub.f32	s4, s2, s10
 800fe2a:	eef5 6a40 	vcmp.f32	s13, #0.0
 800fe2e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fe32:	bf14      	ite	ne
 800fe34:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800fe38:	eeb0 7a67 	vmoveq.f32	s14, s15
 800fe3c:	ee61 1a87 	vmul.f32	s3, s3, s14
 800fe40:	ee22 2a07 	vmul.f32	s4, s4, s14
 800fe44:	fb05 f204 	mul.w	r2, r5, r4
 800fe48:	1abf      	subs	r7, r7, r2
 800fe4a:	4494      	add	ip, r2
 800fe4c:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800fe50:	4411      	add	r1, r2
 800fe52:	eb09 020c 	add.w	r2, r9, ip
 800fe56:	b209      	sxth	r1, r1
 800fe58:	443a      	add	r2, r7
 800fe5a:	428a      	cmp	r2, r1
 800fe5c:	bfc4      	itt	gt
 800fe5e:	eba1 0209 	subgt.w	r2, r1, r9
 800fe62:	eba2 070c 	subgt.w	r7, r2, ip
 800fe66:	2f00      	cmp	r7, #0
 800fe68:	dd50      	ble.n	800ff0c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
 800fe6a:	fb97 f1f4 	sdiv	r1, r7, r4
 800fe6e:	fb04 7211 	mls	r2, r4, r1, r7
 800fe72:	b90a      	cbnz	r2, 800fe78 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
 800fe74:	3901      	subs	r1, #1
 800fe76:	4622      	mov	r2, r4
 800fe78:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800fe7c:	6840      	ldr	r0, [r0, #4]
 800fe7e:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 800fe82:	44b6      	add	lr, r6
 800fe84:	f8d0 a000 	ldr.w	sl, [r0]
 800fe88:	2900      	cmp	r1, #0
 800fe8a:	bfcc      	ite	gt
 800fe8c:	46a1      	movgt	r9, r4
 800fe8e:	4691      	movle	r9, r2
 800fe90:	900b      	str	r0, [sp, #44]	; 0x2c
 800fe92:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800fe94:	fb04 e505 	mla	r5, r4, r5, lr
 800fe98:	eef0 6a42 	vmov.f32	s13, s4
 800fe9c:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 800fea0:	9008      	str	r0, [sp, #32]
 800fea2:	eeb0 7a61 	vmov.f32	s14, s3
 800fea6:	9818      	ldr	r0, [sp, #96]	; 0x60
 800fea8:	695b      	ldr	r3, [r3, #20]
 800feaa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800feae:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800feb2:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800feb6:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800feb8:	445b      	add	r3, fp
 800feba:	9307      	str	r3, [sp, #28]
 800febc:	ee16 3a90 	vmov	r3, s13
 800fec0:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800fec4:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800fec8:	ee21 3a23 	vmul.f32	s6, s2, s7
 800fecc:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800fed0:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800fed4:	ee17 7a90 	vmov	r7, s15
 800fed8:	ee73 7a42 	vsub.f32	s15, s6, s4
 800fedc:	fb97 f7f4 	sdiv	r7, r7, r4
 800fee0:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800fee4:	ee17 ca90 	vmov	ip, s15
 800fee8:	fb9c fcf4 	sdiv	ip, ip, r4
 800feec:	fb0c 3306 	mla	r3, ip, r6, r3
 800fef0:	9302      	str	r3, [sp, #8]
 800fef2:	ee17 3a10 	vmov	r3, s14
 800fef6:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800fefa:	fb07 3706 	mla	r7, r7, r6, r3
 800fefe:	eba9 0306 	sub.w	r3, r9, r6
 800ff02:	e9cd 4700 	strd	r4, r7, [sp]
 800ff06:	f8da 4008 	ldr.w	r4, [sl, #8]
 800ff0a:	47a0      	blx	r4
 800ff0c:	b00d      	add	sp, #52	; 0x34
 800ff0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ff12:	2500      	movs	r5, #0
 800ff14:	462e      	mov	r6, r5
 800ff16:	e799      	b.n	800fe4c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

0800ff18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800ff18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ff1c:	b0db      	sub	sp, #364	; 0x16c
 800ff1e:	461d      	mov	r5, r3
 800ff20:	4614      	mov	r4, r2
 800ff22:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 800ff26:	910f      	str	r1, [sp, #60]	; 0x3c
 800ff28:	4629      	mov	r1, r5
 800ff2a:	930a      	str	r3, [sp, #40]	; 0x28
 800ff2c:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 800ff30:	9009      	str	r0, [sp, #36]	; 0x24
 800ff32:	930b      	str	r3, [sp, #44]	; 0x2c
 800ff34:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 800ff38:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 800ff3c:	9310      	str	r3, [sp, #64]	; 0x40
 800ff3e:	6803      	ldr	r3, [r0, #0]
 800ff40:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 800ff42:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800ff46:	47b8      	blx	r7
 800ff48:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ff4a:	6058      	str	r0, [r3, #4]
 800ff4c:	2800      	cmp	r0, #0
 800ff4e:	f000 83a1 	beq.w	8010694 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ff52:	682b      	ldr	r3, [r5, #0]
 800ff54:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 800ff58:	ed94 7a02 	vldr	s14, [r4, #8]
 800ff5c:	9314      	str	r3, [sp, #80]	; 0x50
 800ff5e:	686b      	ldr	r3, [r5, #4]
 800ff60:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800ff64:	9315      	str	r3, [sp, #84]	; 0x54
 800ff66:	4bc1      	ldr	r3, [pc, #772]	; (801026c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800ff68:	7819      	ldrb	r1, [r3, #0]
 800ff6a:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800ff6e:	2900      	cmp	r1, #0
 800ff70:	bf16      	itet	ne
 800ff72:	4619      	movne	r1, r3
 800ff74:	4611      	moveq	r1, r2
 800ff76:	4613      	movne	r3, r2
 800ff78:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ff7c:	9116      	str	r1, [sp, #88]	; 0x58
 800ff7e:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 800ff82:	f240 8387 	bls.w	8010694 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ff86:	ed94 7a07 	vldr	s14, [r4, #28]
 800ff8a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800ff8e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ff92:	f240 837f 	bls.w	8010694 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ff96:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 800ff9a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800ff9e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ffa2:	f240 8377 	bls.w	8010694 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ffa6:	6822      	ldr	r2, [r4, #0]
 800ffa8:	4bb1      	ldr	r3, [pc, #708]	; (8010270 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800ffaa:	429a      	cmp	r2, r3
 800ffac:	f2c0 8372 	blt.w	8010694 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ffb0:	49b0      	ldr	r1, [pc, #704]	; (8010274 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800ffb2:	6963      	ldr	r3, [r4, #20]
 800ffb4:	428a      	cmp	r2, r1
 800ffb6:	f300 836d 	bgt.w	8010694 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ffba:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800ffbe:	48ae      	ldr	r0, [pc, #696]	; (8010278 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800ffc0:	33ff      	adds	r3, #255	; 0xff
 800ffc2:	4283      	cmp	r3, r0
 800ffc4:	f200 8366 	bhi.w	8010694 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ffc8:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800ffca:	4dac      	ldr	r5, [pc, #688]	; (801027c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800ffcc:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800ffd0:	33ff      	adds	r3, #255	; 0xff
 800ffd2:	42ab      	cmp	r3, r5
 800ffd4:	f200 835e 	bhi.w	8010694 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ffd8:	6862      	ldr	r2, [r4, #4]
 800ffda:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 800ffde:	33ff      	adds	r3, #255	; 0xff
 800ffe0:	4283      	cmp	r3, r0
 800ffe2:	f200 8357 	bhi.w	8010694 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ffe6:	69a1      	ldr	r1, [r4, #24]
 800ffe8:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 800ffec:	33ff      	adds	r3, #255	; 0xff
 800ffee:	4283      	cmp	r3, r0
 800fff0:	f200 8350 	bhi.w	8010694 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fff4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800fff6:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 800fffa:	30ff      	adds	r0, #255	; 0xff
 800fffc:	42a8      	cmp	r0, r5
 800fffe:	f200 8349 	bhi.w	8010694 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010002:	428a      	cmp	r2, r1
 8010004:	f280 8110 	bge.w	8010228 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 8010008:	429a      	cmp	r2, r3
 801000a:	f300 8119 	bgt.w	8010240 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 801000e:	4299      	cmp	r1, r3
 8010010:	f280 811d 	bge.w	801024e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8010014:	2502      	movs	r5, #2
 8010016:	2701      	movs	r7, #1
 8010018:	46a9      	mov	r9, r5
 801001a:	46b8      	mov	r8, r7
 801001c:	f04f 0a00 	mov.w	sl, #0
 8010020:	4621      	mov	r1, r4
 8010022:	a849      	add	r0, sp, #292	; 0x124
 8010024:	f003 fe4c 	bl	8013cc0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 8010028:	4622      	mov	r2, r4
 801002a:	4653      	mov	r3, sl
 801002c:	a949      	add	r1, sp, #292	; 0x124
 801002e:	f8cd 9000 	str.w	r9, [sp]
 8010032:	a819      	add	r0, sp, #100	; 0x64
 8010034:	f003 ff74 	bl	8013f20 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8010038:	4622      	mov	r2, r4
 801003a:	4653      	mov	r3, sl
 801003c:	a949      	add	r1, sp, #292	; 0x124
 801003e:	f8cd 8000 	str.w	r8, [sp]
 8010042:	a829      	add	r0, sp, #164	; 0xa4
 8010044:	f003 ff6c 	bl	8013f20 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8010048:	4643      	mov	r3, r8
 801004a:	4622      	mov	r2, r4
 801004c:	a949      	add	r1, sp, #292	; 0x124
 801004e:	f8cd 9000 	str.w	r9, [sp]
 8010052:	a839      	add	r0, sp, #228	; 0xe4
 8010054:	f003 ff64 	bl	8013f20 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8010058:	42af      	cmp	r7, r5
 801005a:	af12      	add	r7, sp, #72	; 0x48
 801005c:	bfb7      	itett	lt
 801005e:	2300      	movlt	r3, #0
 8010060:	2301      	movge	r3, #1
 8010062:	ad29      	addlt	r5, sp, #164	; 0xa4
 8010064:	ac19      	addlt	r4, sp, #100	; 0x64
 8010066:	bfb1      	iteee	lt
 8010068:	930e      	strlt	r3, [sp, #56]	; 0x38
 801006a:	ad19      	addge	r5, sp, #100	; 0x64
 801006c:	930e      	strge	r3, [sp, #56]	; 0x38
 801006e:	ac29      	addge	r4, sp, #164	; 0xa4
 8010070:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8010072:	e893 0003 	ldmia.w	r3, {r0, r1}
 8010076:	e887 0003 	stmia.w	r7, {r0, r1}
 801007a:	b928      	cbnz	r0, 8010088 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 801007c:	4b80      	ldr	r3, [pc, #512]	; (8010280 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 801007e:	6818      	ldr	r0, [r3, #0]
 8010080:	6803      	ldr	r3, [r0, #0]
 8010082:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010084:	4798      	blx	r3
 8010086:	6038      	str	r0, [r7, #0]
 8010088:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801008a:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 801008e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8010092:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8010094:	930c      	str	r3, [sp, #48]	; 0x30
 8010096:	990c      	ldr	r1, [sp, #48]	; 0x30
 8010098:	6963      	ldr	r3, [r4, #20]
 801009a:	440b      	add	r3, r1
 801009c:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80100a0:	4408      	add	r0, r1
 80100a2:	b200      	sxth	r0, r0
 80100a4:	4283      	cmp	r3, r0
 80100a6:	900d      	str	r0, [sp, #52]	; 0x34
 80100a8:	f280 80dd 	bge.w	8010266 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 80100ac:	428b      	cmp	r3, r1
 80100ae:	da08      	bge.n	80100c2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80100b0:	2a00      	cmp	r2, #0
 80100b2:	dd06      	ble.n	80100c2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80100b4:	1acb      	subs	r3, r1, r3
 80100b6:	429a      	cmp	r2, r3
 80100b8:	f2c0 80e4 	blt.w	8010284 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 80100bc:	2b00      	cmp	r3, #0
 80100be:	f300 80e2 	bgt.w	8010286 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 80100c2:	6967      	ldr	r7, [r4, #20]
 80100c4:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 80100c8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80100ca:	443b      	add	r3, r7
 80100cc:	461f      	mov	r7, r3
 80100ce:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80100d0:	1bdf      	subs	r7, r3, r7
 80100d2:	4297      	cmp	r7, r2
 80100d4:	bfa8      	it	ge
 80100d6:	4617      	movge	r7, r2
 80100d8:	2f00      	cmp	r7, #0
 80100da:	f340 8166 	ble.w	80103aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 80100de:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80100e0:	6829      	ldr	r1, [r5, #0]
 80100e2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80100e6:	f9bb 3000 	ldrsh.w	r3, [fp]
 80100ea:	4411      	add	r1, r2
 80100ec:	6820      	ldr	r0, [r4, #0]
 80100ee:	4299      	cmp	r1, r3
 80100f0:	dd1a      	ble.n	8010128 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 80100f2:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 80100f6:	4402      	add	r2, r0
 80100f8:	440b      	add	r3, r1
 80100fa:	b21b      	sxth	r3, r3
 80100fc:	429a      	cmp	r2, r3
 80100fe:	dc13      	bgt.n	8010128 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8010100:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010102:	a912      	add	r1, sp, #72	; 0x48
 8010104:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010106:	9809      	ldr	r0, [sp, #36]	; 0x24
 8010108:	681b      	ldr	r3, [r3, #0]
 801010a:	9206      	str	r2, [sp, #24]
 801010c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801010e:	9500      	str	r5, [sp, #0]
 8010110:	9205      	str	r2, [sp, #20]
 8010112:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8010114:	e9cd b203 	strd	fp, r2, [sp, #12]
 8010118:	9a64      	ldr	r2, [sp, #400]	; 0x190
 801011a:	e9cd 8201 	strd	r8, r2, [sp, #4]
 801011e:	aa49      	add	r2, sp, #292	; 0x124
 8010120:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8010124:	4623      	mov	r3, r4
 8010126:	47c8      	blx	r9
 8010128:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 801012c:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8010130:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8010134:	ee37 7a27 	vadd.f32	s14, s14, s15
 8010138:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 801013c:	68a1      	ldr	r1, [r4, #8]
 801013e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010142:	ed94 6a08 	vldr	s12, [r4, #32]
 8010146:	edd4 6a07 	vldr	s13, [r4, #28]
 801014a:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801014e:	ee76 6a86 	vadd.f32	s13, s13, s12
 8010152:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8010156:	e9d4 2300 	ldrd	r2, r3, [r4]
 801015a:	edc4 6a07 	vstr	s13, [r4, #28]
 801015e:	441a      	add	r2, r3
 8010160:	6963      	ldr	r3, [r4, #20]
 8010162:	3301      	adds	r3, #1
 8010164:	6022      	str	r2, [r4, #0]
 8010166:	6163      	str	r3, [r4, #20]
 8010168:	69a3      	ldr	r3, [r4, #24]
 801016a:	3b01      	subs	r3, #1
 801016c:	61a3      	str	r3, [r4, #24]
 801016e:	6923      	ldr	r3, [r4, #16]
 8010170:	440b      	add	r3, r1
 8010172:	68e1      	ldr	r1, [r4, #12]
 8010174:	428b      	cmp	r3, r1
 8010176:	6123      	str	r3, [r4, #16]
 8010178:	db15      	blt.n	80101a6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 801017a:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 801017e:	3201      	adds	r2, #1
 8010180:	1a5b      	subs	r3, r3, r1
 8010182:	ee76 6a26 	vadd.f32	s13, s12, s13
 8010186:	6022      	str	r2, [r4, #0]
 8010188:	6123      	str	r3, [r4, #16]
 801018a:	edc4 6a07 	vstr	s13, [r4, #28]
 801018e:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8010192:	ee36 7a87 	vadd.f32	s14, s13, s14
 8010196:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801019a:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 801019e:	ee77 7a27 	vadd.f32	s15, s14, s15
 80101a2:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80101a6:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 80101aa:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 80101ae:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 80101b2:	ee37 7a27 	vadd.f32	s14, s14, s15
 80101b6:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 80101ba:	68a9      	ldr	r1, [r5, #8]
 80101bc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80101c0:	ed95 6a08 	vldr	s12, [r5, #32]
 80101c4:	edd5 6a07 	vldr	s13, [r5, #28]
 80101c8:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80101cc:	ee76 6a86 	vadd.f32	s13, s13, s12
 80101d0:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80101d4:	e9d5 2300 	ldrd	r2, r3, [r5]
 80101d8:	edc5 6a07 	vstr	s13, [r5, #28]
 80101dc:	441a      	add	r2, r3
 80101de:	696b      	ldr	r3, [r5, #20]
 80101e0:	3301      	adds	r3, #1
 80101e2:	602a      	str	r2, [r5, #0]
 80101e4:	616b      	str	r3, [r5, #20]
 80101e6:	69ab      	ldr	r3, [r5, #24]
 80101e8:	3b01      	subs	r3, #1
 80101ea:	61ab      	str	r3, [r5, #24]
 80101ec:	692b      	ldr	r3, [r5, #16]
 80101ee:	440b      	add	r3, r1
 80101f0:	68e9      	ldr	r1, [r5, #12]
 80101f2:	428b      	cmp	r3, r1
 80101f4:	612b      	str	r3, [r5, #16]
 80101f6:	db15      	blt.n	8010224 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 80101f8:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 80101fc:	3201      	adds	r2, #1
 80101fe:	1a5b      	subs	r3, r3, r1
 8010200:	ee76 6a26 	vadd.f32	s13, s12, s13
 8010204:	602a      	str	r2, [r5, #0]
 8010206:	612b      	str	r3, [r5, #16]
 8010208:	edc5 6a07 	vstr	s13, [r5, #28]
 801020c:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8010210:	ee36 7a87 	vadd.f32	s14, s13, s14
 8010214:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8010218:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 801021c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8010220:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8010224:	3f01      	subs	r7, #1
 8010226:	e757      	b.n	80100d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 8010228:	4299      	cmp	r1, r3
 801022a:	dc13      	bgt.n	8010254 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 801022c:	429a      	cmp	r2, r3
 801022e:	da14      	bge.n	801025a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8010230:	2502      	movs	r5, #2
 8010232:	2703      	movs	r7, #3
 8010234:	f04f 0800 	mov.w	r8, #0
 8010238:	46a9      	mov	r9, r5
 801023a:	f04f 0a01 	mov.w	sl, #1
 801023e:	e6ef      	b.n	8010020 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8010240:	2501      	movs	r5, #1
 8010242:	2700      	movs	r7, #0
 8010244:	46a9      	mov	r9, r5
 8010246:	46b8      	mov	r8, r7
 8010248:	f04f 0a02 	mov.w	sl, #2
 801024c:	e6e8      	b.n	8010020 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 801024e:	2501      	movs	r5, #1
 8010250:	2702      	movs	r7, #2
 8010252:	e6e1      	b.n	8010018 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8010254:	2500      	movs	r5, #0
 8010256:	2701      	movs	r7, #1
 8010258:	e7f4      	b.n	8010244 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 801025a:	2702      	movs	r7, #2
 801025c:	2503      	movs	r5, #3
 801025e:	f04f 0900 	mov.w	r9, #0
 8010262:	46b8      	mov	r8, r7
 8010264:	e7e9      	b.n	801023a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 8010266:	4613      	mov	r3, r2
 8010268:	e728      	b.n	80100bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 801026a:	bf00      	nop
 801026c:	2400e074 	.word	0x2400e074
 8010270:	fffd8f01 	.word	0xfffd8f01
 8010274:	00027100 	.word	0x00027100
 8010278:	0004e1ff 	.word	0x0004e1ff
 801027c:	0004e1fe 	.word	0x0004e1fe
 8010280:	2400e07c 	.word	0x2400e07c
 8010284:	4613      	mov	r3, r2
 8010286:	992b      	ldr	r1, [sp, #172]	; 0xac
 8010288:	469e      	mov	lr, r3
 801028a:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 801028c:	469c      	mov	ip, r3
 801028e:	9111      	str	r1, [sp, #68]	; 0x44
 8010290:	f04f 0900 	mov.w	r9, #0
 8010294:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 8010298:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 801029c:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 80102a0:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 80102a4:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 80102a8:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 80102ac:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 80102b0:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 80102b4:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 80102b8:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 80102bc:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 80102c0:	f1bc 0f00 	cmp.w	ip, #0
 80102c4:	d147      	bne.n	8010356 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 80102c6:	eb03 0c07 	add.w	ip, r3, r7
 80102ca:	1ad7      	subs	r7, r2, r3
 80102cc:	f1b9 0f00 	cmp.w	r9, #0
 80102d0:	d009      	beq.n	80102e6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 80102d2:	9029      	str	r0, [sp, #164]	; 0xa4
 80102d4:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 80102d8:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 80102dc:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 80102e0:	912d      	str	r1, [sp, #180]	; 0xb4
 80102e2:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 80102e6:	991b      	ldr	r1, [sp, #108]	; 0x6c
 80102e8:	f04f 0800 	mov.w	r8, #0
 80102ec:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 80102f0:	9111      	str	r1, [sp, #68]	; 0x44
 80102f2:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 80102f6:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 80102fa:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 80102fe:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8010302:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8010306:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 801030a:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 801030e:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8010312:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8010316:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 801031a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 801031e:	f1be 0f00 	cmp.w	lr, #0
 8010322:	d031      	beq.n	8010388 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8010324:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8010326:	4450      	add	r0, sl
 8010328:	ee76 6aa4 	vadd.f32	s13, s13, s9
 801032c:	4431      	add	r1, r6
 801032e:	ee37 7a04 	vadd.f32	s14, s14, s8
 8010332:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8010336:	4549      	cmp	r1, r9
 8010338:	db08      	blt.n	801034c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 801033a:	ee77 7a85 	vadd.f32	s15, s15, s10
 801033e:	3001      	adds	r0, #1
 8010340:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8010344:	eba1 0109 	sub.w	r1, r1, r9
 8010348:	ee37 7a06 	vadd.f32	s14, s14, s12
 801034c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8010350:	f04f 0801 	mov.w	r8, #1
 8010354:	e7e3      	b.n	801031e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 8010356:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8010358:	4450      	add	r0, sl
 801035a:	ee37 7a24 	vadd.f32	s14, s14, s9
 801035e:	4431      	add	r1, r6
 8010360:	ee77 7a84 	vadd.f32	s15, s15, s8
 8010364:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8010368:	4541      	cmp	r1, r8
 801036a:	db08      	blt.n	801037e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 801036c:	ee76 6a85 	vadd.f32	s13, s13, s10
 8010370:	3001      	adds	r0, #1
 8010372:	ee37 7a25 	vadd.f32	s14, s14, s11
 8010376:	eba1 0108 	sub.w	r1, r1, r8
 801037a:	ee77 7a86 	vadd.f32	s15, s15, s12
 801037e:	f10c 3cff 	add.w	ip, ip, #4294967295
 8010382:	f04f 0901 	mov.w	r9, #1
 8010386:	e79b      	b.n	80102c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 8010388:	449c      	add	ip, r3
 801038a:	1aff      	subs	r7, r7, r3
 801038c:	f1b8 0f00 	cmp.w	r8, #0
 8010390:	d009      	beq.n	80103a6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8010392:	9019      	str	r0, [sp, #100]	; 0x64
 8010394:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8010398:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 801039c:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 80103a0:	911d      	str	r1, [sp, #116]	; 0x74
 80103a2:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 80103a6:	1ad2      	subs	r2, r2, r3
 80103a8:	e68b      	b.n	80100c2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80103aa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80103ac:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 80103ae:	2b00      	cmp	r3, #0
 80103b0:	f000 80d1 	beq.w	8010556 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 80103b4:	ad19      	add	r5, sp, #100	; 0x64
 80103b6:	ac39      	add	r4, sp, #228	; 0xe4
 80103b8:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80103ba:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 80103be:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80103c2:	930c      	str	r3, [sp, #48]	; 0x30
 80103c4:	990c      	ldr	r1, [sp, #48]	; 0x30
 80103c6:	6963      	ldr	r3, [r4, #20]
 80103c8:	440b      	add	r3, r1
 80103ca:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80103ce:	4408      	add	r0, r1
 80103d0:	b200      	sxth	r0, r0
 80103d2:	4283      	cmp	r3, r0
 80103d4:	900d      	str	r0, [sp, #52]	; 0x34
 80103d6:	f280 80c1 	bge.w	801055c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 80103da:	428b      	cmp	r3, r1
 80103dc:	da08      	bge.n	80103f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80103de:	2a00      	cmp	r2, #0
 80103e0:	dd06      	ble.n	80103f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80103e2:	1acb      	subs	r3, r1, r3
 80103e4:	429a      	cmp	r2, r3
 80103e6:	f2c0 80bb 	blt.w	8010560 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 80103ea:	2b00      	cmp	r3, #0
 80103ec:	f300 80b9 	bgt.w	8010562 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 80103f0:	6967      	ldr	r7, [r4, #20]
 80103f2:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 80103f6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80103f8:	443b      	add	r3, r7
 80103fa:	461f      	mov	r7, r3
 80103fc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80103fe:	1bdf      	subs	r7, r3, r7
 8010400:	4297      	cmp	r7, r2
 8010402:	bfa8      	it	ge
 8010404:	4617      	movge	r7, r2
 8010406:	2f00      	cmp	r7, #0
 8010408:	f340 813c 	ble.w	8010684 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 801040c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801040e:	6829      	ldr	r1, [r5, #0]
 8010410:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010414:	f9bb 3000 	ldrsh.w	r3, [fp]
 8010418:	4411      	add	r1, r2
 801041a:	6820      	ldr	r0, [r4, #0]
 801041c:	4299      	cmp	r1, r3
 801041e:	dd1a      	ble.n	8010456 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8010420:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8010424:	4402      	add	r2, r0
 8010426:	440b      	add	r3, r1
 8010428:	b21b      	sxth	r3, r3
 801042a:	429a      	cmp	r2, r3
 801042c:	dc13      	bgt.n	8010456 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 801042e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010430:	a912      	add	r1, sp, #72	; 0x48
 8010432:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010434:	9809      	ldr	r0, [sp, #36]	; 0x24
 8010436:	681b      	ldr	r3, [r3, #0]
 8010438:	9206      	str	r2, [sp, #24]
 801043a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801043c:	9500      	str	r5, [sp, #0]
 801043e:	9205      	str	r2, [sp, #20]
 8010440:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8010442:	e9cd b203 	strd	fp, r2, [sp, #12]
 8010446:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8010448:	e9cd 8201 	strd	r8, r2, [sp, #4]
 801044c:	aa49      	add	r2, sp, #292	; 0x124
 801044e:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8010452:	4623      	mov	r3, r4
 8010454:	47c8      	blx	r9
 8010456:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 801045a:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 801045e:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8010462:	ee37 7a27 	vadd.f32	s14, s14, s15
 8010466:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 801046a:	68a1      	ldr	r1, [r4, #8]
 801046c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010470:	ed94 6a08 	vldr	s12, [r4, #32]
 8010474:	edd4 6a07 	vldr	s13, [r4, #28]
 8010478:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801047c:	ee76 6a86 	vadd.f32	s13, s13, s12
 8010480:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8010484:	e9d4 2300 	ldrd	r2, r3, [r4]
 8010488:	edc4 6a07 	vstr	s13, [r4, #28]
 801048c:	441a      	add	r2, r3
 801048e:	6963      	ldr	r3, [r4, #20]
 8010490:	3301      	adds	r3, #1
 8010492:	6022      	str	r2, [r4, #0]
 8010494:	6163      	str	r3, [r4, #20]
 8010496:	69a3      	ldr	r3, [r4, #24]
 8010498:	3b01      	subs	r3, #1
 801049a:	61a3      	str	r3, [r4, #24]
 801049c:	6923      	ldr	r3, [r4, #16]
 801049e:	440b      	add	r3, r1
 80104a0:	68e1      	ldr	r1, [r4, #12]
 80104a2:	428b      	cmp	r3, r1
 80104a4:	6123      	str	r3, [r4, #16]
 80104a6:	db15      	blt.n	80104d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 80104a8:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 80104ac:	3201      	adds	r2, #1
 80104ae:	1a5b      	subs	r3, r3, r1
 80104b0:	ee76 6a26 	vadd.f32	s13, s12, s13
 80104b4:	6022      	str	r2, [r4, #0]
 80104b6:	6123      	str	r3, [r4, #16]
 80104b8:	edc4 6a07 	vstr	s13, [r4, #28]
 80104bc:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 80104c0:	ee36 7a87 	vadd.f32	s14, s13, s14
 80104c4:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80104c8:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 80104cc:	ee77 7a27 	vadd.f32	s15, s14, s15
 80104d0:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80104d4:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 80104d8:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 80104dc:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 80104e0:	ee37 7a27 	vadd.f32	s14, s14, s15
 80104e4:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 80104e8:	68a9      	ldr	r1, [r5, #8]
 80104ea:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80104ee:	ed95 6a08 	vldr	s12, [r5, #32]
 80104f2:	edd5 6a07 	vldr	s13, [r5, #28]
 80104f6:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80104fa:	ee76 6a86 	vadd.f32	s13, s13, s12
 80104fe:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8010502:	e9d5 2300 	ldrd	r2, r3, [r5]
 8010506:	edc5 6a07 	vstr	s13, [r5, #28]
 801050a:	441a      	add	r2, r3
 801050c:	696b      	ldr	r3, [r5, #20]
 801050e:	3301      	adds	r3, #1
 8010510:	602a      	str	r2, [r5, #0]
 8010512:	616b      	str	r3, [r5, #20]
 8010514:	69ab      	ldr	r3, [r5, #24]
 8010516:	3b01      	subs	r3, #1
 8010518:	61ab      	str	r3, [r5, #24]
 801051a:	692b      	ldr	r3, [r5, #16]
 801051c:	440b      	add	r3, r1
 801051e:	68e9      	ldr	r1, [r5, #12]
 8010520:	428b      	cmp	r3, r1
 8010522:	612b      	str	r3, [r5, #16]
 8010524:	db15      	blt.n	8010552 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 8010526:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 801052a:	3201      	adds	r2, #1
 801052c:	1a5b      	subs	r3, r3, r1
 801052e:	ee76 6a26 	vadd.f32	s13, s12, s13
 8010532:	602a      	str	r2, [r5, #0]
 8010534:	612b      	str	r3, [r5, #16]
 8010536:	edc5 6a07 	vstr	s13, [r5, #28]
 801053a:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 801053e:	ee36 7a87 	vadd.f32	s14, s13, s14
 8010542:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8010546:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 801054a:	ee77 7a27 	vadd.f32	s15, s14, s15
 801054e:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8010552:	3f01      	subs	r7, #1
 8010554:	e757      	b.n	8010406 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 8010556:	ad39      	add	r5, sp, #228	; 0xe4
 8010558:	ac19      	add	r4, sp, #100	; 0x64
 801055a:	e72d      	b.n	80103b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 801055c:	4613      	mov	r3, r2
 801055e:	e744      	b.n	80103ea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8010560:	4613      	mov	r3, r2
 8010562:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 8010564:	469e      	mov	lr, r3
 8010566:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 801056a:	461f      	mov	r7, r3
 801056c:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 8010570:	f04f 0900 	mov.w	r9, #0
 8010574:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 8010578:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 801057c:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8010580:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8010584:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 8010588:	993d      	ldr	r1, [sp, #244]	; 0xf4
 801058a:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 801058e:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8010592:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 8010596:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 801059a:	960e      	str	r6, [sp, #56]	; 0x38
 801059c:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 80105a0:	2f00      	cmp	r7, #0
 80105a2:	d146      	bne.n	8010632 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 80105a4:	449c      	add	ip, r3
 80105a6:	1ad7      	subs	r7, r2, r3
 80105a8:	f1b9 0f00 	cmp.w	r9, #0
 80105ac:	d009      	beq.n	80105c2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 80105ae:	9039      	str	r0, [sp, #228]	; 0xe4
 80105b0:	913d      	str	r1, [sp, #244]	; 0xf4
 80105b2:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 80105b6:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 80105ba:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 80105be:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 80105c2:	991b      	ldr	r1, [sp, #108]	; 0x6c
 80105c4:	f04f 0800 	mov.w	r8, #0
 80105c8:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 80105cc:	910e      	str	r1, [sp, #56]	; 0x38
 80105ce:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 80105d2:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 80105d6:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 80105da:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 80105de:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 80105e2:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 80105e6:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 80105ea:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 80105ee:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 80105f2:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 80105f6:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 80105fa:	f1be 0f00 	cmp.w	lr, #0
 80105fe:	d030      	beq.n	8010662 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8010600:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8010602:	4450      	add	r0, sl
 8010604:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8010608:	4431      	add	r1, r6
 801060a:	ee37 7a04 	vadd.f32	s14, s14, s8
 801060e:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8010612:	4549      	cmp	r1, r9
 8010614:	db08      	blt.n	8010628 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 8010616:	ee77 7a85 	vadd.f32	s15, s15, s10
 801061a:	3001      	adds	r0, #1
 801061c:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8010620:	eba1 0109 	sub.w	r1, r1, r9
 8010624:	ee37 7a06 	vadd.f32	s14, s14, s12
 8010628:	f10e 3eff 	add.w	lr, lr, #4294967295
 801062c:	f04f 0801 	mov.w	r8, #1
 8010630:	e7e3      	b.n	80105fa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8010632:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8010634:	4450      	add	r0, sl
 8010636:	ee37 7a24 	vadd.f32	s14, s14, s9
 801063a:	4431      	add	r1, r6
 801063c:	ee77 7a84 	vadd.f32	s15, s15, s8
 8010640:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8010644:	4541      	cmp	r1, r8
 8010646:	db08      	blt.n	801065a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8010648:	ee76 6a85 	vadd.f32	s13, s13, s10
 801064c:	3001      	adds	r0, #1
 801064e:	ee37 7a25 	vadd.f32	s14, s14, s11
 8010652:	eba1 0108 	sub.w	r1, r1, r8
 8010656:	ee77 7a86 	vadd.f32	s15, s15, s12
 801065a:	3f01      	subs	r7, #1
 801065c:	f04f 0901 	mov.w	r9, #1
 8010660:	e79e      	b.n	80105a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 8010662:	449c      	add	ip, r3
 8010664:	1aff      	subs	r7, r7, r3
 8010666:	f1b8 0f00 	cmp.w	r8, #0
 801066a:	d009      	beq.n	8010680 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 801066c:	9019      	str	r0, [sp, #100]	; 0x64
 801066e:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8010672:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8010676:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 801067a:	911d      	str	r1, [sp, #116]	; 0x74
 801067c:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8010680:	1ad2      	subs	r2, r2, r3
 8010682:	e6b5      	b.n	80103f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8010684:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8010686:	681b      	ldr	r3, [r3, #0]
 8010688:	b923      	cbnz	r3, 8010694 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801068a:	4b04      	ldr	r3, [pc, #16]	; (801069c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 801068c:	6818      	ldr	r0, [r3, #0]
 801068e:	6803      	ldr	r3, [r0, #0]
 8010690:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010692:	4798      	blx	r3
 8010694:	b05b      	add	sp, #364	; 0x16c
 8010696:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801069a:	bf00      	nop
 801069c:	2400e07c 	.word	0x2400e07c

080106a0 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 80106a0:	b570      	push	{r4, r5, r6, lr}
 80106a2:	4604      	mov	r4, r0
 80106a4:	2500      	movs	r5, #0
 80106a6:	9804      	ldr	r0, [sp, #16]
 80106a8:	f89d 6014 	ldrb.w	r6, [sp, #20]
 80106ac:	8025      	strh	r5, [r4, #0]
 80106ae:	6061      	str	r1, [r4, #4]
 80106b0:	7223      	strb	r3, [r4, #8]
 80106b2:	7266      	strb	r6, [r4, #9]
 80106b4:	60e0      	str	r0, [r4, #12]
 80106b6:	8222      	strh	r2, [r4, #16]
 80106b8:	8265      	strh	r5, [r4, #18]
 80106ba:	82a5      	strh	r5, [r4, #20]
 80106bc:	82e5      	strh	r5, [r4, #22]
 80106be:	8325      	strh	r5, [r4, #24]
 80106c0:	8365      	strh	r5, [r4, #26]
 80106c2:	83a5      	strh	r5, [r4, #28]
 80106c4:	77a5      	strb	r5, [r4, #30]
 80106c6:	b32e      	cbz	r6, 8010714 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 80106c8:	6803      	ldr	r3, [r0, #0]
 80106ca:	695b      	ldr	r3, [r3, #20]
 80106cc:	4798      	blx	r3
 80106ce:	4606      	mov	r6, r0
 80106d0:	b300      	cbz	r0, 8010714 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 80106d2:	68e0      	ldr	r0, [r4, #12]
 80106d4:	4631      	mov	r1, r6
 80106d6:	6803      	ldr	r3, [r0, #0]
 80106d8:	68db      	ldr	r3, [r3, #12]
 80106da:	4798      	blx	r3
 80106dc:	4605      	mov	r5, r0
 80106de:	b1c8      	cbz	r0, 8010714 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 80106e0:	7b43      	ldrb	r3, [r0, #13]
 80106e2:	7a82      	ldrb	r2, [r0, #10]
 80106e4:	005b      	lsls	r3, r3, #1
 80106e6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80106ea:	4313      	orrs	r3, r2
 80106ec:	83a3      	strh	r3, [r4, #28]
 80106ee:	7a63      	ldrb	r3, [r4, #9]
 80106f0:	2b04      	cmp	r3, #4
 80106f2:	d10f      	bne.n	8010714 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 80106f4:	68e0      	ldr	r0, [r4, #12]
 80106f6:	462a      	mov	r2, r5
 80106f8:	4631      	mov	r1, r6
 80106fa:	6803      	ldr	r3, [r0, #0]
 80106fc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80106fe:	4798      	blx	r3
 8010700:	7b6b      	ldrb	r3, [r5, #13]
 8010702:	005b      	lsls	r3, r3, #1
 8010704:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8010708:	7aab      	ldrb	r3, [r5, #10]
 801070a:	4313      	orrs	r3, r2
 801070c:	4418      	add	r0, r3
 801070e:	8ba3      	ldrh	r3, [r4, #28]
 8010710:	4418      	add	r0, r3
 8010712:	83a0      	strh	r0, [r4, #28]
 8010714:	4620      	mov	r0, r4
 8010716:	bd70      	pop	{r4, r5, r6, pc}

08010718 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8010718:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801071c:	2400      	movs	r4, #0
 801071e:	b085      	sub	sp, #20
 8010720:	4681      	mov	r9, r0
 8010722:	4688      	mov	r8, r1
 8010724:	4692      	mov	sl, r2
 8010726:	469b      	mov	fp, r3
 8010728:	4627      	mov	r7, r4
 801072a:	4625      	mov	r5, r4
 801072c:	4626      	mov	r6, r4
 801072e:	4554      	cmp	r4, sl
 8010730:	da2a      	bge.n	8010788 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8010732:	2300      	movs	r3, #0
 8010734:	9303      	str	r3, [sp, #12]
 8010736:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801073a:	429d      	cmp	r5, r3
 801073c:	d004      	beq.n	8010748 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 801073e:	f242 030b 	movw	r3, #8203	; 0x200b
 8010742:	429d      	cmp	r5, r3
 8010744:	bf18      	it	ne
 8010746:	462f      	movne	r7, r5
 8010748:	ab03      	add	r3, sp, #12
 801074a:	4642      	mov	r2, r8
 801074c:	4659      	mov	r1, fp
 801074e:	4648      	mov	r0, r9
 8010750:	f003 f872 	bl	8013838 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010754:	4605      	mov	r5, r0
 8010756:	b1b8      	cbz	r0, 8010788 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8010758:	280a      	cmp	r0, #10
 801075a:	d015      	beq.n	8010788 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 801075c:	9a03      	ldr	r2, [sp, #12]
 801075e:	b18a      	cbz	r2, 8010784 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8010760:	7b50      	ldrb	r0, [r2, #13]
 8010762:	4639      	mov	r1, r7
 8010764:	7a93      	ldrb	r3, [r2, #10]
 8010766:	0040      	lsls	r0, r0, #1
 8010768:	8895      	ldrh	r5, [r2, #4]
 801076a:	f400 7080 	and.w	r0, r0, #256	; 0x100
 801076e:	4303      	orrs	r3, r0
 8010770:	4640      	mov	r0, r8
 8010772:	9301      	str	r3, [sp, #4]
 8010774:	f8d8 3000 	ldr.w	r3, [r8]
 8010778:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801077a:	4798      	blx	r3
 801077c:	9b01      	ldr	r3, [sp, #4]
 801077e:	4418      	add	r0, r3
 8010780:	4406      	add	r6, r0
 8010782:	b2b6      	uxth	r6, r6
 8010784:	3401      	adds	r4, #1
 8010786:	e7d2      	b.n	801072e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8010788:	4630      	mov	r0, r6
 801078a:	b005      	add	sp, #20
 801078c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010790 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8010790:	2a02      	cmp	r2, #2
 8010792:	b530      	push	{r4, r5, lr}
 8010794:	d011      	beq.n	80107ba <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8010796:	2a03      	cmp	r2, #3
 8010798:	d01c      	beq.n	80107d4 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 801079a:	2a01      	cmp	r2, #1
 801079c:	d10c      	bne.n	80107b8 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 801079e:	888b      	ldrh	r3, [r1, #4]
 80107a0:	8801      	ldrh	r1, [r0, #0]
 80107a2:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 80107a6:	1a5b      	subs	r3, r3, r1
 80107a8:	8844      	ldrh	r4, [r0, #2]
 80107aa:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 80107ae:	1a9b      	subs	r3, r3, r2
 80107b0:	8004      	strh	r4, [r0, #0]
 80107b2:	8081      	strh	r1, [r0, #4]
 80107b4:	8043      	strh	r3, [r0, #2]
 80107b6:	80c2      	strh	r2, [r0, #6]
 80107b8:	bd30      	pop	{r4, r5, pc}
 80107ba:	88cb      	ldrh	r3, [r1, #6]
 80107bc:	8842      	ldrh	r2, [r0, #2]
 80107be:	1a9b      	subs	r3, r3, r2
 80107c0:	88c2      	ldrh	r2, [r0, #6]
 80107c2:	1a9b      	subs	r3, r3, r2
 80107c4:	888a      	ldrh	r2, [r1, #4]
 80107c6:	8801      	ldrh	r1, [r0, #0]
 80107c8:	8043      	strh	r3, [r0, #2]
 80107ca:	1a52      	subs	r2, r2, r1
 80107cc:	8881      	ldrh	r1, [r0, #4]
 80107ce:	1a52      	subs	r2, r2, r1
 80107d0:	8002      	strh	r2, [r0, #0]
 80107d2:	e7f1      	b.n	80107b8 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 80107d4:	88cb      	ldrh	r3, [r1, #6]
 80107d6:	8841      	ldrh	r1, [r0, #2]
 80107d8:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 80107dc:	1a5b      	subs	r3, r3, r1
 80107de:	f9b0 5000 	ldrsh.w	r5, [r0]
 80107e2:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 80107e6:	1a9b      	subs	r3, r3, r2
 80107e8:	8045      	strh	r5, [r0, #2]
 80107ea:	8082      	strh	r2, [r0, #4]
 80107ec:	8003      	strh	r3, [r0, #0]
 80107ee:	80c4      	strh	r4, [r0, #6]
 80107f0:	e7e2      	b.n	80107b8 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

080107f2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 80107f2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80107f6:	b09f      	sub	sp, #124	; 0x7c
 80107f8:	9116      	str	r1, [sp, #88]	; 0x58
 80107fa:	9317      	str	r3, [sp, #92]	; 0x5c
 80107fc:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80107fe:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8010800:	8809      	ldrh	r1, [r1, #0]
 8010802:	889b      	ldrh	r3, [r3, #4]
 8010804:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 8010808:	440b      	add	r3, r1
 801080a:	9212      	str	r2, [sp, #72]	; 0x48
 801080c:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 8010810:	b21b      	sxth	r3, r3
 8010812:	9011      	str	r0, [sp, #68]	; 0x44
 8010814:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8010818:	9310      	str	r3, [sp, #64]	; 0x40
 801081a:	f8d8 3000 	ldr.w	r3, [r8]
 801081e:	f9bd 50a0 	ldrsh.w	r5, [sp, #160]	; 0xa0
 8010822:	7a59      	ldrb	r1, [r3, #9]
 8010824:	7a1b      	ldrb	r3, [r3, #8]
 8010826:	9114      	str	r1, [sp, #80]	; 0x50
 8010828:	9315      	str	r3, [sp, #84]	; 0x54
 801082a:	2a00      	cmp	r2, #0
 801082c:	d067      	beq.n	80108fe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x10c>
 801082e:	f898 3010 	ldrb.w	r3, [r8, #16]
 8010832:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8010834:	2b04      	cmp	r3, #4
 8010836:	bf14      	ite	ne
 8010838:	2301      	movne	r3, #1
 801083a:	2302      	moveq	r3, #2
 801083c:	4413      	add	r3, r2
 801083e:	f04f 0900 	mov.w	r9, #0
 8010842:	930f      	str	r3, [sp, #60]	; 0x3c
 8010844:	464c      	mov	r4, r9
 8010846:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 801084a:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 801084e:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 8010852:	4293      	cmp	r3, r2
 8010854:	f280 808c 	bge.w	8010970 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17e>
 8010858:	2300      	movs	r3, #0
 801085a:	931c      	str	r3, [sp, #112]	; 0x70
 801085c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8010860:	429c      	cmp	r4, r3
 8010862:	d006      	beq.n	8010872 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x80>
 8010864:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010866:	f242 020b 	movw	r2, #8203	; 0x200b
 801086a:	4294      	cmp	r4, r2
 801086c:	bf18      	it	ne
 801086e:	4623      	movne	r3, r4
 8010870:	930d      	str	r3, [sp, #52]	; 0x34
 8010872:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010874:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8010876:	f8d8 2000 	ldr.w	r2, [r8]
 801087a:	428b      	cmp	r3, r1
 801087c:	db41      	blt.n	8010902 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x110>
 801087e:	6813      	ldr	r3, [r2, #0]
 8010880:	4610      	mov	r0, r2
 8010882:	695b      	ldr	r3, [r3, #20]
 8010884:	4798      	blx	r3
 8010886:	4604      	mov	r4, r0
 8010888:	f8d8 0000 	ldr.w	r0, [r8]
 801088c:	aa1d      	add	r2, sp, #116	; 0x74
 801088e:	4621      	mov	r1, r4
 8010890:	6803      	ldr	r3, [r0, #0]
 8010892:	689e      	ldr	r6, [r3, #8]
 8010894:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8010898:	47b0      	blx	r6
 801089a:	901c      	str	r0, [sp, #112]	; 0x70
 801089c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80108a0:	429c      	cmp	r4, r3
 80108a2:	f000 80ea 	beq.w	8010a7a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 80108a6:	f242 030b 	movw	r3, #8203	; 0x200b
 80108aa:	429c      	cmp	r4, r3
 80108ac:	f000 80e5 	beq.w	8010a7a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 80108b0:	2c00      	cmp	r4, #0
 80108b2:	f000 80f7 	beq.w	8010aa4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 80108b6:	2c0a      	cmp	r4, #10
 80108b8:	d060      	beq.n	801097c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18a>
 80108ba:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80108bc:	b36a      	cbz	r2, 801091a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x128>
 80108be:	8894      	ldrh	r4, [r2, #4]
 80108c0:	f1bb 0f00 	cmp.w	fp, #0
 80108c4:	d03b      	beq.n	801093e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x14c>
 80108c6:	f892 900d 	ldrb.w	r9, [r2, #13]
 80108ca:	f1bb 0f01 	cmp.w	fp, #1
 80108ce:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80108d2:	f409 7380 	and.w	r3, r9, #256	; 0x100
 80108d6:	f892 900a 	ldrb.w	r9, [r2, #10]
 80108da:	ea49 0903 	orr.w	r9, r9, r3
 80108de:	d134      	bne.n	801094a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x158>
 80108e0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80108e2:	eba5 0509 	sub.w	r5, r5, r9
 80108e6:	2b00      	cmp	r3, #0
 80108e8:	d14f      	bne.n	801098a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x198>
 80108ea:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80108ec:	eb09 0305 	add.w	r3, r9, r5
 80108f0:	4413      	add	r3, r2
 80108f2:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80108f4:	f9b2 2000 	ldrsh.w	r2, [r2]
 80108f8:	4293      	cmp	r3, r2
 80108fa:	da51      	bge.n	80109a0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 80108fc:	e038      	b.n	8010970 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17e>
 80108fe:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8010900:	e79d      	b.n	801083e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 8010902:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8010906:	4659      	mov	r1, fp
 8010908:	982c      	ldr	r0, [sp, #176]	; 0xb0
 801090a:	9301      	str	r3, [sp, #4]
 801090c:	ab1d      	add	r3, sp, #116	; 0x74
 801090e:	9300      	str	r3, [sp, #0]
 8010910:	ab1c      	add	r3, sp, #112	; 0x70
 8010912:	f002 ffe9 	bl	80138e8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8010916:	4604      	mov	r4, r0
 8010918:	e7c0      	b.n	801089c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xaa>
 801091a:	f8d8 0000 	ldr.w	r0, [r8]
 801091e:	6803      	ldr	r3, [r0, #0]
 8010920:	691b      	ldr	r3, [r3, #16]
 8010922:	4798      	blx	r3
 8010924:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8010928:	4298      	cmp	r0, r3
 801092a:	f000 80a6 	beq.w	8010a7a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 801092e:	f242 030b 	movw	r3, #8203	; 0x200b
 8010932:	4298      	cmp	r0, r3
 8010934:	f000 80a1 	beq.w	8010a7a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 8010938:	f1bb 0f00 	cmp.w	fp, #0
 801093c:	d100      	bne.n	8010940 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x14e>
 801093e:	444d      	add	r5, r9
 8010940:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8010942:	2a00      	cmp	r2, #0
 8010944:	d1bf      	bne.n	80108c6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xd4>
 8010946:	4691      	mov	r9, r2
 8010948:	e097      	b.n	8010a7a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 801094a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801094c:	2b00      	cmp	r3, #0
 801094e:	f000 80ab 	beq.w	8010aa8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 8010952:	f1bb 0f00 	cmp.w	fp, #0
 8010956:	d118      	bne.n	801098a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x198>
 8010958:	f8d8 0000 	ldr.w	r0, [r8]
 801095c:	990d      	ldr	r1, [sp, #52]	; 0x34
 801095e:	6803      	ldr	r3, [r0, #0]
 8010960:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010962:	4798      	blx	r3
 8010964:	4405      	add	r5, r0
 8010966:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8010968:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801096a:	1aeb      	subs	r3, r5, r3
 801096c:	4293      	cmp	r3, r2
 801096e:	dd17      	ble.n	80109a0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 8010970:	2c00      	cmp	r4, #0
 8010972:	f000 8097 	beq.w	8010aa4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 8010976:	2c0a      	cmp	r4, #10
 8010978:	f040 8085 	bne.w	8010a86 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 801097c:	240a      	movs	r4, #10
 801097e:	fab4 f084 	clz	r0, r4
 8010982:	0940      	lsrs	r0, r0, #5
 8010984:	b01f      	add	sp, #124	; 0x7c
 8010986:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801098a:	f8d8 0000 	ldr.w	r0, [r8]
 801098e:	990d      	ldr	r1, [sp, #52]	; 0x34
 8010990:	6803      	ldr	r3, [r0, #0]
 8010992:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010994:	4798      	blx	r3
 8010996:	f1bb 0f01 	cmp.w	fp, #1
 801099a:	eba5 0500 	sub.w	r5, r5, r0
 801099e:	d0a4      	beq.n	80108ea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xf8>
 80109a0:	981c      	ldr	r0, [sp, #112]	; 0x70
 80109a2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80109a4:	f990 1009 	ldrsb.w	r1, [r0, #9]
 80109a8:	f9b3 6000 	ldrsh.w	r6, [r3]
 80109ac:	7b43      	ldrb	r3, [r0, #13]
 80109ae:	4429      	add	r1, r5
 80109b0:	015b      	lsls	r3, r3, #5
 80109b2:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80109b6:	7983      	ldrb	r3, [r0, #6]
 80109b8:	4313      	orrs	r3, r2
 80109ba:	440b      	add	r3, r1
 80109bc:	42b3      	cmp	r3, r6
 80109be:	db5c      	blt.n	8010a7a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 80109c0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80109c2:	4299      	cmp	r1, r3
 80109c4:	da59      	bge.n	8010a7a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 80109c6:	f8d8 0000 	ldr.w	r0, [r8]
 80109ca:	42ae      	cmp	r6, r5
 80109cc:	6803      	ldr	r3, [r0, #0]
 80109ce:	bfcc      	ite	gt
 80109d0:	1b76      	subgt	r6, r6, r5
 80109d2:	2600      	movle	r6, #0
 80109d4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80109d6:	bfc8      	it	gt
 80109d8:	b2b6      	uxthgt	r6, r6
 80109da:	4798      	blx	r3
 80109dc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80109de:	7b5a      	ldrb	r2, [r3, #13]
 80109e0:	00d1      	lsls	r1, r2, #3
 80109e2:	f401 7780 	and.w	r7, r1, #256	; 0x100
 80109e6:	7a19      	ldrb	r1, [r3, #8]
 80109e8:	4339      	orrs	r1, r7
 80109ea:	0657      	lsls	r7, r2, #25
 80109ec:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 80109ee:	bf48      	it	mi
 80109f0:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 80109f4:	4407      	add	r7, r0
 80109f6:	bf48      	it	mi
 80109f8:	b209      	sxthmi	r1, r1
 80109fa:	1a7f      	subs	r7, r7, r1
 80109fc:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80109fe:	b2bf      	uxth	r7, r7
 8010a00:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 8010a04:	fa0f fa87 	sxth.w	sl, r7
 8010a08:	4551      	cmp	r1, sl
 8010a0a:	dd3a      	ble.n	8010a82 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8010a0c:	0112      	lsls	r2, r2, #4
 8010a0e:	79d8      	ldrb	r0, [r3, #7]
 8010a10:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8010a14:	4302      	orrs	r2, r0
 8010a16:	4492      	add	sl, r2
 8010a18:	4551      	cmp	r1, sl
 8010a1a:	dc2e      	bgt.n	8010a7a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 8010a1c:	1bcf      	subs	r7, r1, r7
 8010a1e:	468a      	mov	sl, r1
 8010a20:	b2bf      	uxth	r7, r7
 8010a22:	9319      	str	r3, [sp, #100]	; 0x64
 8010a24:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8010a26:	f8d8 0000 	ldr.w	r0, [r8]
 8010a2a:	681a      	ldr	r2, [r3, #0]
 8010a2c:	6801      	ldr	r1, [r0, #0]
 8010a2e:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8010a30:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8010a32:	9313      	str	r3, [sp, #76]	; 0x4c
 8010a34:	9218      	str	r2, [sp, #96]	; 0x60
 8010a36:	6b89      	ldr	r1, [r1, #56]	; 0x38
 8010a38:	4788      	blx	r1
 8010a3a:	f898 1006 	ldrb.w	r1, [r8, #6]
 8010a3e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8010a40:	910b      	str	r1, [sp, #44]	; 0x2c
 8010a42:	f898 100e 	ldrb.w	r1, [r8, #14]
 8010a46:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8010a48:	910a      	str	r1, [sp, #40]	; 0x28
 8010a4a:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8010a4e:	9109      	str	r1, [sp, #36]	; 0x24
 8010a50:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8010a54:	9305      	str	r3, [sp, #20]
 8010a56:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8010a58:	9206      	str	r2, [sp, #24]
 8010a5a:	e9cd a601 	strd	sl, r6, [sp, #4]
 8010a5e:	442e      	add	r6, r5
 8010a60:	e9cd 7303 	strd	r7, r3, [sp, #12]
 8010a64:	b236      	sxth	r6, r6
 8010a66:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8010a68:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8010a6c:	9600      	str	r6, [sp, #0]
 8010a6e:	9916      	ldr	r1, [sp, #88]	; 0x58
 8010a70:	681a      	ldr	r2, [r3, #0]
 8010a72:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010a74:	685b      	ldr	r3, [r3, #4]
 8010a76:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8010a78:	47b0      	blx	r6
 8010a7a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010a7c:	3301      	adds	r3, #1
 8010a7e:	930e      	str	r3, [sp, #56]	; 0x38
 8010a80:	e6e5      	b.n	801084e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 8010a82:	2700      	movs	r7, #0
 8010a84:	e7cd      	b.n	8010a22 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x230>
 8010a86:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8010a88:	3501      	adds	r5, #1
 8010a8a:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8010a8c:	429d      	cmp	r5, r3
 8010a8e:	f6bf af76 	bge.w	801097e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 8010a92:	4659      	mov	r1, fp
 8010a94:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8010a96:	f7f2 fe97 	bl	80037c8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8010a9a:	4604      	mov	r4, r0
 8010a9c:	b110      	cbz	r0, 8010aa4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 8010a9e:	280a      	cmp	r0, #10
 8010aa0:	d1f2      	bne.n	8010a88 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x296>
 8010aa2:	e76b      	b.n	801097c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18a>
 8010aa4:	2400      	movs	r4, #0
 8010aa6:	e76a      	b.n	801097e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 8010aa8:	f1bb 0f00 	cmp.w	fp, #0
 8010aac:	f43f af5b 	beq.w	8010966 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x174>
 8010ab0:	e776      	b.n	80109a0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

08010ab2 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 8010ab2:	b530      	push	{r4, r5, lr}
 8010ab4:	8a44      	ldrh	r4, [r0, #18]
 8010ab6:	8ac5      	ldrh	r5, [r0, #22]
 8010ab8:	82c3      	strh	r3, [r0, #22]
 8010aba:	442c      	add	r4, r5
 8010abc:	1ae4      	subs	r4, r4, r3
 8010abe:	8b03      	ldrh	r3, [r0, #24]
 8010ac0:	8244      	strh	r4, [r0, #18]
 8010ac2:	8a84      	ldrh	r4, [r0, #20]
 8010ac4:	4422      	add	r2, r4
 8010ac6:	440c      	add	r4, r1
 8010ac8:	1a59      	subs	r1, r3, r1
 8010aca:	8342      	strh	r2, [r0, #26]
 8010acc:	8284      	strh	r4, [r0, #20]
 8010ace:	8301      	strh	r1, [r0, #24]
 8010ad0:	bd30      	pop	{r4, r5, pc}

08010ad2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 8010ad2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010ad6:	7a43      	ldrb	r3, [r0, #9]
 8010ad8:	b087      	sub	sp, #28
 8010ada:	4604      	mov	r4, r0
 8010adc:	460f      	mov	r7, r1
 8010ade:	1eda      	subs	r2, r3, #3
 8010ae0:	b2d2      	uxtb	r2, r2
 8010ae2:	2900      	cmp	r1, #0
 8010ae4:	d036      	beq.n	8010b54 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 8010ae6:	2a01      	cmp	r2, #1
 8010ae8:	d932      	bls.n	8010b50 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 8010aea:	1e58      	subs	r0, r3, #1
 8010aec:	f1d0 0b00 	rsbs	fp, r0, #0
 8010af0:	eb4b 0b00 	adc.w	fp, fp, r0
 8010af4:	1e99      	subs	r1, r3, #2
 8010af6:	424b      	negs	r3, r1
 8010af8:	414b      	adcs	r3, r1
 8010afa:	9303      	str	r3, [sp, #12]
 8010afc:	2300      	movs	r3, #0
 8010afe:	e9cd 3301 	strd	r3, r3, [sp, #4]
 8010b02:	2500      	movs	r5, #0
 8010b04:	f242 0a0b 	movw	sl, #8203	; 0x200b
 8010b08:	46a9      	mov	r9, r5
 8010b0a:	8265      	strh	r5, [r4, #18]
 8010b0c:	82a5      	strh	r5, [r4, #20]
 8010b0e:	2300      	movs	r3, #0
 8010b10:	9305      	str	r3, [sp, #20]
 8010b12:	8823      	ldrh	r3, [r4, #0]
 8010b14:	2b20      	cmp	r3, #32
 8010b16:	d02b      	beq.n	8010b70 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 8010b18:	eba3 020a 	sub.w	r2, r3, sl
 8010b1c:	4256      	negs	r6, r2
 8010b1e:	4156      	adcs	r6, r2
 8010b20:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8010b24:	4293      	cmp	r3, r2
 8010b26:	d004      	beq.n	8010b32 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 8010b28:	4553      	cmp	r3, sl
 8010b2a:	bf16      	itet	ne
 8010b2c:	4699      	movne	r9, r3
 8010b2e:	2601      	moveq	r6, #1
 8010b30:	2600      	movne	r6, #0
 8010b32:	ab05      	add	r3, sp, #20
 8010b34:	68e2      	ldr	r2, [r4, #12]
 8010b36:	7a21      	ldrb	r1, [r4, #8]
 8010b38:	6860      	ldr	r0, [r4, #4]
 8010b3a:	f002 fe7d 	bl	8013838 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010b3e:	8020      	strh	r0, [r4, #0]
 8010b40:	b9c8      	cbnz	r0, 8010b76 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 8010b42:	8b22      	ldrh	r2, [r4, #24]
 8010b44:	2300      	movs	r3, #0
 8010b46:	4611      	mov	r1, r2
 8010b48:	4620      	mov	r0, r4
 8010b4a:	f7ff ffb2 	bl	8010ab2 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8010b4e:	e066      	b.n	8010c1e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 8010b50:	468b      	mov	fp, r1
 8010b52:	e7cf      	b.n	8010af4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 8010b54:	3b01      	subs	r3, #1
 8010b56:	2a01      	cmp	r2, #1
 8010b58:	9103      	str	r1, [sp, #12]
 8010b5a:	468b      	mov	fp, r1
 8010b5c:	bf8c      	ite	hi
 8010b5e:	2200      	movhi	r2, #0
 8010b60:	2201      	movls	r2, #1
 8010b62:	2b01      	cmp	r3, #1
 8010b64:	9202      	str	r2, [sp, #8]
 8010b66:	bf8c      	ite	hi
 8010b68:	2300      	movhi	r3, #0
 8010b6a:	2301      	movls	r3, #1
 8010b6c:	9301      	str	r3, [sp, #4]
 8010b6e:	e7c8      	b.n	8010b02 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 8010b70:	4699      	mov	r9, r3
 8010b72:	2601      	movs	r6, #1
 8010b74:	e7dd      	b.n	8010b32 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 8010b76:	8ae3      	ldrh	r3, [r4, #22]
 8010b78:	280a      	cmp	r0, #10
 8010b7a:	f103 0301 	add.w	r3, r3, #1
 8010b7e:	82e3      	strh	r3, [r4, #22]
 8010b80:	d0df      	beq.n	8010b42 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 8010b82:	9a05      	ldr	r2, [sp, #20]
 8010b84:	bb42      	cbnz	r2, 8010bd8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 8010b86:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8010b8a:	4298      	cmp	r0, r3
 8010b8c:	d001      	beq.n	8010b92 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 8010b8e:	4550      	cmp	r0, sl
 8010b90:	d1bd      	bne.n	8010b0e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010b92:	8823      	ldrh	r3, [r4, #0]
 8010b94:	8b21      	ldrh	r1, [r4, #24]
 8010b96:	2b20      	cmp	r3, #32
 8010b98:	d001      	beq.n	8010b9e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 8010b9a:	4553      	cmp	r3, sl
 8010b9c:	d131      	bne.n	8010c02 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 8010b9e:	2e00      	cmp	r6, #0
 8010ba0:	bf0a      	itet	eq
 8010ba2:	460d      	moveq	r5, r1
 8010ba4:	4630      	movne	r0, r6
 8010ba6:	2001      	moveq	r0, #1
 8010ba8:	440a      	add	r2, r1
 8010baa:	8aa3      	ldrh	r3, [r4, #20]
 8010bac:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8010bb0:	b292      	uxth	r2, r2
 8010bb2:	8322      	strh	r2, [r4, #24]
 8010bb4:	4413      	add	r3, r2
 8010bb6:	2f00      	cmp	r7, #0
 8010bb8:	d03a      	beq.n	8010c30 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 8010bba:	f1bb 0f00 	cmp.w	fp, #0
 8010bbe:	d102      	bne.n	8010bc6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 8010bc0:	9903      	ldr	r1, [sp, #12]
 8010bc2:	b301      	cbz	r1, 8010c06 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 8010bc4:	b1f8      	cbz	r0, 8010c06 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 8010bc6:	8ba1      	ldrh	r1, [r4, #28]
 8010bc8:	4419      	add	r1, r3
 8010bca:	458c      	cmp	ip, r1
 8010bcc:	da2a      	bge.n	8010c24 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 8010bce:	8a61      	ldrh	r1, [r4, #18]
 8010bd0:	b341      	cbz	r1, 8010c24 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 8010bd2:	4563      	cmp	r3, ip
 8010bd4:	dd9b      	ble.n	8010b0e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010bd6:	e01c      	b.n	8010c12 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 8010bd8:	8893      	ldrh	r3, [r2, #4]
 8010bda:	4649      	mov	r1, r9
 8010bdc:	8023      	strh	r3, [r4, #0]
 8010bde:	f892 800d 	ldrb.w	r8, [r2, #13]
 8010be2:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8010be6:	f408 7080 	and.w	r0, r8, #256	; 0x100
 8010bea:	f892 800a 	ldrb.w	r8, [r2, #10]
 8010bee:	ea48 0800 	orr.w	r8, r8, r0
 8010bf2:	68e0      	ldr	r0, [r4, #12]
 8010bf4:	6803      	ldr	r3, [r0, #0]
 8010bf6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010bf8:	4798      	blx	r3
 8010bfa:	eb08 0200 	add.w	r2, r8, r0
 8010bfe:	b292      	uxth	r2, r2
 8010c00:	e7c7      	b.n	8010b92 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 8010c02:	2000      	movs	r0, #0
 8010c04:	e7d0      	b.n	8010ba8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 8010c06:	4563      	cmp	r3, ip
 8010c08:	dd81      	ble.n	8010b0e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010c0a:	8a63      	ldrh	r3, [r4, #18]
 8010c0c:	2b00      	cmp	r3, #0
 8010c0e:	f43f af7e 	beq.w	8010b0e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010c12:	2301      	movs	r3, #1
 8010c14:	8ba2      	ldrh	r2, [r4, #28]
 8010c16:	77a3      	strb	r3, [r4, #30]
 8010c18:	8b63      	ldrh	r3, [r4, #26]
 8010c1a:	4413      	add	r3, r2
 8010c1c:	8363      	strh	r3, [r4, #26]
 8010c1e:	b007      	add	sp, #28
 8010c20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010c24:	2300      	movs	r3, #0
 8010c26:	4611      	mov	r1, r2
 8010c28:	4620      	mov	r0, r4
 8010c2a:	f7ff ff42 	bl	8010ab2 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8010c2e:	e76e      	b.n	8010b0e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010c30:	4563      	cmp	r3, ip
 8010c32:	dd14      	ble.n	8010c5e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 8010c34:	9b02      	ldr	r3, [sp, #8]
 8010c36:	b113      	cbz	r3, 8010c3e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 8010c38:	2301      	movs	r3, #1
 8010c3a:	460a      	mov	r2, r1
 8010c3c:	e783      	b.n	8010b46 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 8010c3e:	9b01      	ldr	r3, [sp, #4]
 8010c40:	2b00      	cmp	r3, #0
 8010c42:	f43f af64 	beq.w	8010b0e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010c46:	2800      	cmp	r0, #0
 8010c48:	f47f af61 	bne.w	8010b0e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010c4c:	b116      	cbz	r6, 8010c54 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 8010c4e:	2301      	movs	r3, #1
 8010c50:	462a      	mov	r2, r5
 8010c52:	e779      	b.n	8010b48 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 8010c54:	8a63      	ldrh	r3, [r4, #18]
 8010c56:	2b00      	cmp	r3, #0
 8010c58:	f43f af59 	beq.w	8010b0e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010c5c:	e7df      	b.n	8010c1e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 8010c5e:	2800      	cmp	r0, #0
 8010c60:	f47f af55 	bne.w	8010b0e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010c64:	2e00      	cmp	r6, #0
 8010c66:	f43f af52 	beq.w	8010b0e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010c6a:	2301      	movs	r3, #1
 8010c6c:	462a      	mov	r2, r5
 8010c6e:	e7db      	b.n	8010c28 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

08010c70 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8010c70:	b530      	push	{r4, r5, lr}
 8010c72:	4605      	mov	r5, r0
 8010c74:	b08b      	sub	sp, #44	; 0x2c
 8010c76:	b191      	cbz	r1, 8010c9e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 8010c78:	2401      	movs	r4, #1
 8010c7a:	e9cd 3100 	strd	r3, r1, [sp]
 8010c7e:	4613      	mov	r3, r2
 8010c80:	4601      	mov	r1, r0
 8010c82:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 8010c86:	a802      	add	r0, sp, #8
 8010c88:	f7ff fd0a 	bl	80106a0 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 8010c8c:	2100      	movs	r1, #0
 8010c8e:	a802      	add	r0, sp, #8
 8010c90:	f7ff ff1f 	bl	8010ad2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 8010c94:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8010c98:	b163      	cbz	r3, 8010cb4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8010c9a:	3401      	adds	r4, #1
 8010c9c:	e7f6      	b.n	8010c8c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 8010c9e:	2401      	movs	r4, #1
 8010ca0:	f002 fec4 	bl	8013a2c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8010ca4:	280a      	cmp	r0, #10
 8010ca6:	4628      	mov	r0, r5
 8010ca8:	bf08      	it	eq
 8010caa:	3401      	addeq	r4, #1
 8010cac:	f002 febe 	bl	8013a2c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8010cb0:	2800      	cmp	r0, #0
 8010cb2:	d1f7      	bne.n	8010ca4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8010cb4:	b2a0      	uxth	r0, r4
 8010cb6:	b00b      	add	sp, #44	; 0x2c
 8010cb8:	bd30      	pop	{r4, r5, pc}

08010cba <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8010cba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010cbe:	b0e5      	sub	sp, #404	; 0x194
 8010cc0:	4689      	mov	r9, r1
 8010cc2:	461c      	mov	r4, r3
 8010cc4:	f8dd a1b8 	ldr.w	sl, [sp, #440]	; 0x1b8
 8010cc8:	900a      	str	r0, [sp, #40]	; 0x28
 8010cca:	f1ba 0f00 	cmp.w	sl, #0
 8010cce:	f000 80b4 	beq.w	8010e3a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8010cd2:	681b      	ldr	r3, [r3, #0]
 8010cd4:	2b00      	cmp	r3, #0
 8010cd6:	f000 80b0 	beq.w	8010e3a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8010cda:	7ba3      	ldrb	r3, [r4, #14]
 8010cdc:	2b00      	cmp	r3, #0
 8010cde:	f000 80ac 	beq.w	8010e3a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8010ce2:	f10d 0834 	add.w	r8, sp, #52	; 0x34
 8010ce6:	6810      	ldr	r0, [r2, #0]
 8010ce8:	6851      	ldr	r1, [r2, #4]
 8010cea:	2500      	movs	r5, #0
 8010cec:	4643      	mov	r3, r8
 8010cee:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
 8010cf2:	950f      	str	r5, [sp, #60]	; 0x3c
 8010cf4:	af19      	add	r7, sp, #100	; 0x64
 8010cf6:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8010cfa:	79a2      	ldrb	r2, [r4, #6]
 8010cfc:	c303      	stmia	r3!, {r0, r1}
 8010cfe:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
 8010d02:	a90f      	add	r1, sp, #60	; 0x3c
 8010d04:	4640      	mov	r0, r8
 8010d06:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8010d0a:	f7ff fd41 	bl	8010790 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8010d0e:	a90f      	add	r1, sp, #60	; 0x3c
 8010d10:	79a2      	ldrb	r2, [r4, #6]
 8010d12:	4608      	mov	r0, r1
 8010d14:	f7ff fd3c 	bl	8010790 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8010d18:	4638      	mov	r0, r7
 8010d1a:	f002 fa0f 	bl	801313c <_ZN8touchgfx12TextProviderC1Ev>
 8010d1e:	6820      	ldr	r0, [r4, #0]
 8010d20:	6803      	ldr	r3, [r0, #0]
 8010d22:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8010d24:	4798      	blx	r3
 8010d26:	4606      	mov	r6, r0
 8010d28:	6820      	ldr	r0, [r4, #0]
 8010d2a:	6803      	ldr	r3, [r0, #0]
 8010d2c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8010d2e:	4798      	blx	r3
 8010d30:	4633      	mov	r3, r6
 8010d32:	9000      	str	r0, [sp, #0]
 8010d34:	4651      	mov	r1, sl
 8010d36:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 8010d38:	4638      	mov	r0, r7
 8010d3a:	f002 fa6b 	bl	8013214 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010d3e:	7923      	ldrb	r3, [r4, #4]
 8010d40:	6820      	ldr	r0, [r4, #0]
 8010d42:	9308      	str	r3, [sp, #32]
 8010d44:	6803      	ldr	r3, [r0, #0]
 8010d46:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010d48:	4798      	blx	r3
 8010d4a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8010d4e:	181e      	adds	r6, r3, r0
 8010d50:	42ae      	cmp	r6, r5
 8010d52:	dd06      	ble.n	8010d62 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xa8>
 8010d54:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 8010d58:	4282      	cmp	r2, r0
 8010d5a:	bfa4      	itt	ge
 8010d5c:	189d      	addge	r5, r3, r2
 8010d5e:	fb95 f5f6 	sdivge	r5, r5, r6
 8010d62:	a832      	add	r0, sp, #200	; 0xc8
 8010d64:	f002 f9ea 	bl	801313c <_ZN8touchgfx12TextProviderC1Ev>
 8010d68:	7c23      	ldrb	r3, [r4, #16]
 8010d6a:	b17b      	cbz	r3, 8010d8c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd2>
 8010d6c:	6820      	ldr	r0, [r4, #0]
 8010d6e:	6803      	ldr	r3, [r0, #0]
 8010d70:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8010d72:	4798      	blx	r3
 8010d74:	4683      	mov	fp, r0
 8010d76:	6820      	ldr	r0, [r4, #0]
 8010d78:	6803      	ldr	r3, [r0, #0]
 8010d7a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8010d7c:	4798      	blx	r3
 8010d7e:	465b      	mov	r3, fp
 8010d80:	9000      	str	r0, [sp, #0]
 8010d82:	4651      	mov	r1, sl
 8010d84:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 8010d86:	a832      	add	r0, sp, #200	; 0xc8
 8010d88:	f002 fa44 	bl	8013214 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010d8c:	7be1      	ldrb	r1, [r4, #15]
 8010d8e:	a811      	add	r0, sp, #68	; 0x44
 8010d90:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8010d94:	7963      	ldrb	r3, [r4, #5]
 8010d96:	1a52      	subs	r2, r2, r1
 8010d98:	7c21      	ldrb	r1, [r4, #16]
 8010d9a:	9101      	str	r1, [sp, #4]
 8010d9c:	b292      	uxth	r2, r2
 8010d9e:	6821      	ldr	r1, [r4, #0]
 8010da0:	9100      	str	r1, [sp, #0]
 8010da2:	a932      	add	r1, sp, #200	; 0xc8
 8010da4:	f7ff fc7c 	bl	80106a0 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 8010da8:	7c23      	ldrb	r3, [r4, #16]
 8010daa:	b9bb      	cbnz	r3, 8010ddc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>
 8010dac:	fa1f fa86 	uxth.w	sl, r6
 8010db0:	2d00      	cmp	r5, #0
 8010db2:	dd45      	ble.n	8010e40 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 8010db4:	4638      	mov	r0, r7
 8010db6:	f002 fe39 	bl	8013a2c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8010dba:	2800      	cmp	r0, #0
 8010dbc:	d03d      	beq.n	8010e3a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8010dbe:	280a      	cmp	r0, #10
 8010dc0:	d1f6      	bne.n	8010db0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 8010dc2:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 8010dc6:	3d01      	subs	r5, #1
 8010dc8:	4453      	add	r3, sl
 8010dca:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8010dce:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 8010dd2:	eba3 030a 	sub.w	r3, r3, sl
 8010dd6:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8010dda:	e7e9      	b.n	8010db0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 8010ddc:	0073      	lsls	r3, r6, #1
 8010dde:	f64f 7bff 	movw	fp, #65535	; 0xffff
 8010de2:	fa1f fa86 	uxth.w	sl, r6
 8010de6:	9309      	str	r3, [sp, #36]	; 0x24
 8010de8:	2d00      	cmp	r5, #0
 8010dea:	dd29      	ble.n	8010e40 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 8010dec:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8010df0:	a811      	add	r0, sp, #68	; 0x44
 8010df2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010df4:	428b      	cmp	r3, r1
 8010df6:	bfd4      	ite	le
 8010df8:	2100      	movle	r1, #0
 8010dfa:	2101      	movgt	r1, #1
 8010dfc:	f7ff fe69 	bl	8010ad2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 8010e00:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 8010e04:	3b01      	subs	r3, #1
 8010e06:	b29b      	uxth	r3, r3
 8010e08:	455b      	cmp	r3, fp
 8010e0a:	930b      	str	r3, [sp, #44]	; 0x2c
 8010e0c:	d005      	beq.n	8010e1a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x160>
 8010e0e:	7961      	ldrb	r1, [r4, #5]
 8010e10:	4638      	mov	r0, r7
 8010e12:	f7f2 fcd9 	bl	80037c8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8010e16:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8010e18:	e7f4      	b.n	8010e04 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x14a>
 8010e1a:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 8010e1e:	3d01      	subs	r5, #1
 8010e20:	4453      	add	r3, sl
 8010e22:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8010e26:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 8010e2a:	eba3 030a 	sub.w	r3, r3, sl
 8010e2e:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8010e32:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8010e36:	2b00      	cmp	r3, #0
 8010e38:	d1d6      	bne.n	8010de8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x12e>
 8010e3a:	b065      	add	sp, #404	; 0x194
 8010e3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010e40:	0075      	lsls	r5, r6, #1
 8010e42:	f04f 0a00 	mov.w	sl, #0
 8010e46:	7c23      	ldrb	r3, [r4, #16]
 8010e48:	2b00      	cmp	r3, #0
 8010e4a:	d066      	beq.n	8010f1a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x260>
 8010e4c:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8010e50:	a811      	add	r0, sp, #68	; 0x44
 8010e52:	428d      	cmp	r5, r1
 8010e54:	bfd4      	ite	le
 8010e56:	2100      	movle	r1, #0
 8010e58:	2101      	movgt	r1, #1
 8010e5a:	f7ff fe3a 	bl	8010ad2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 8010e5e:	9b08      	ldr	r3, [sp, #32]
 8010e60:	2b00      	cmp	r3, #0
 8010e62:	d055      	beq.n	8010f10 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8010e64:	f894 b010 	ldrb.w	fp, [r4, #16]
 8010e68:	2264      	movs	r2, #100	; 0x64
 8010e6a:	4639      	mov	r1, r7
 8010e6c:	a84b      	add	r0, sp, #300	; 0x12c
 8010e6e:	f00e ff31 	bl	801fcd4 <memcpy>
 8010e72:	f1bb 0f00 	cmp.w	fp, #0
 8010e76:	d058      	beq.n	8010f2a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x270>
 8010e78:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8010e7c:	7922      	ldrb	r2, [r4, #4]
 8010e7e:	2a01      	cmp	r2, #1
 8010e80:	d13c      	bne.n	8010efc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x242>
 8010e82:	f9bd 0040 	ldrsh.w	r0, [sp, #64]	; 0x40
 8010e86:	1ac0      	subs	r0, r0, r3
 8010e88:	2302      	movs	r3, #2
 8010e8a:	fb90 f0f3 	sdiv	r0, r0, r3
 8010e8e:	b200      	sxth	r0, r0
 8010e90:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8010e94:	4418      	add	r0, r3
 8010e96:	7c23      	ldrb	r3, [r4, #16]
 8010e98:	b200      	sxth	r0, r0
 8010e9a:	2b00      	cmp	r3, #0
 8010e9c:	d03a      	beq.n	8010f14 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25a>
 8010e9e:	f8bd 2056 	ldrh.w	r2, [sp, #86]	; 0x56
 8010ea2:	f89d 1062 	ldrb.w	r1, [sp, #98]	; 0x62
 8010ea6:	9000      	str	r0, [sp, #0]
 8010ea8:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	; 0x3e
 8010eac:	980a      	ldr	r0, [sp, #40]	; 0x28
 8010eae:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8010eb2:	e9cd a703 	strd	sl, r7, [sp, #12]
 8010eb6:	e9cd 8401 	strd	r8, r4, [sp, #4]
 8010eba:	464a      	mov	r2, r9
 8010ebc:	2100      	movs	r1, #0
 8010ebe:	f7ff fc98 	bl	80107f2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8010ec2:	2800      	cmp	r0, #0
 8010ec4:	d1b9      	bne.n	8010e3a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8010ec6:	b2b2      	uxth	r2, r6
 8010ec8:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 8010ecc:	4611      	mov	r1, r2
 8010ece:	4413      	add	r3, r2
 8010ed0:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8010ed4:	b21b      	sxth	r3, r3
 8010ed6:	1a52      	subs	r2, r2, r1
 8010ed8:	7c21      	ldrb	r1, [r4, #16]
 8010eda:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8010ede:	b212      	sxth	r2, r2
 8010ee0:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 8010ee4:	b109      	cbz	r1, 8010eea <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x230>
 8010ee6:	42b2      	cmp	r2, r6
 8010ee8:	dba7      	blt.n	8010e3a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8010eea:	f8b8 2006 	ldrh.w	r2, [r8, #6]
 8010eee:	f8b8 1002 	ldrh.w	r1, [r8, #2]
 8010ef2:	440a      	add	r2, r1
 8010ef4:	b212      	sxth	r2, r2
 8010ef6:	4293      	cmp	r3, r2
 8010ef8:	dda5      	ble.n	8010e46 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x18c>
 8010efa:	e79e      	b.n	8010e3a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8010efc:	2a02      	cmp	r2, #2
 8010efe:	d105      	bne.n	8010f0c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8010f00:	7be2      	ldrb	r2, [r4, #15]
 8010f02:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 8010f06:	1a80      	subs	r0, r0, r2
 8010f08:	1ac0      	subs	r0, r0, r3
 8010f0a:	e7c0      	b.n	8010e8e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d4>
 8010f0c:	2000      	movs	r0, #0
 8010f0e:	e7bf      	b.n	8010e90 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 8010f10:	7be0      	ldrb	r0, [r4, #15]
 8010f12:	e7bd      	b.n	8010e90 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 8010f14:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8010f18:	e7c3      	b.n	8010ea2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e8>
 8010f1a:	9b08      	ldr	r3, [sp, #32]
 8010f1c:	2b00      	cmp	r3, #0
 8010f1e:	d0f7      	beq.n	8010f10 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8010f20:	2264      	movs	r2, #100	; 0x64
 8010f22:	4639      	mov	r1, r7
 8010f24:	a84b      	add	r0, sp, #300	; 0x12c
 8010f26:	f00e fed5 	bl	801fcd4 <memcpy>
 8010f2a:	2300      	movs	r3, #0
 8010f2c:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8010f30:	6821      	ldr	r1, [r4, #0]
 8010f32:	a84b      	add	r0, sp, #300	; 0x12c
 8010f34:	f7ff fbf0 	bl	8010718 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8010f38:	b203      	sxth	r3, r0
 8010f3a:	e79f      	b.n	8010e7c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c2>

08010f3c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8010f3c:	2b02      	cmp	r3, #2
 8010f3e:	b510      	push	{r4, lr}
 8010f40:	f9b0 4000 	ldrsh.w	r4, [r0]
 8010f44:	d00b      	beq.n	8010f5e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x22>
 8010f46:	2b03      	cmp	r3, #3
 8010f48:	d00e      	beq.n	8010f68 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x2c>
 8010f4a:	2b01      	cmp	r3, #1
 8010f4c:	d001      	beq.n	8010f52 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x16>
 8010f4e:	1860      	adds	r0, r4, r1
 8010f50:	bd10      	pop	{r4, pc}
 8010f52:	8880      	ldrh	r0, [r0, #4]
 8010f54:	4420      	add	r0, r4
 8010f56:	b200      	sxth	r0, r0
 8010f58:	1a80      	subs	r0, r0, r2
 8010f5a:	3801      	subs	r0, #1
 8010f5c:	e7f8      	b.n	8010f50 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>
 8010f5e:	8880      	ldrh	r0, [r0, #4]
 8010f60:	4420      	add	r0, r4
 8010f62:	b200      	sxth	r0, r0
 8010f64:	1a40      	subs	r0, r0, r1
 8010f66:	e7f8      	b.n	8010f5a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8010f68:	18a0      	adds	r0, r4, r2
 8010f6a:	e7f1      	b.n	8010f50 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>

08010f6c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8010f6c:	2b02      	cmp	r3, #2
 8010f6e:	b510      	push	{r4, lr}
 8010f70:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 8010f74:	d006      	beq.n	8010f84 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x18>
 8010f76:	2b03      	cmp	r3, #3
 8010f78:	d00a      	beq.n	8010f90 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8010f7a:	2b01      	cmp	r3, #1
 8010f7c:	bf14      	ite	ne
 8010f7e:	18a0      	addne	r0, r4, r2
 8010f80:	1860      	addeq	r0, r4, r1
 8010f82:	bd10      	pop	{r4, pc}
 8010f84:	88c0      	ldrh	r0, [r0, #6]
 8010f86:	4420      	add	r0, r4
 8010f88:	b200      	sxth	r0, r0
 8010f8a:	1a80      	subs	r0, r0, r2
 8010f8c:	3801      	subs	r0, #1
 8010f8e:	e7f8      	b.n	8010f82 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x16>
 8010f90:	88c0      	ldrh	r0, [r0, #6]
 8010f92:	4420      	add	r0, r4
 8010f94:	b200      	sxth	r0, r0
 8010f96:	1a40      	subs	r0, r0, r1
 8010f98:	e7f8      	b.n	8010f8c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x20>
	...

08010f9c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8010f9c:	4b01      	ldr	r3, [pc, #4]	; (8010fa4 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8010f9e:	2200      	movs	r2, #0
 8010fa0:	601a      	str	r2, [r3, #0]
 8010fa2:	4770      	bx	lr
 8010fa4:	2400e0a4 	.word	0x2400e0a4

08010fa8 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8010fa8:	4603      	mov	r3, r0
 8010faa:	b1c8      	cbz	r0, 8010fe0 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8010fac:	0c02      	lsrs	r2, r0, #16
 8010fae:	0412      	lsls	r2, r2, #16
 8010fb0:	b9a2      	cbnz	r2, 8010fdc <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 8010fb2:	0403      	lsls	r3, r0, #16
 8010fb4:	2010      	movs	r0, #16
 8010fb6:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8010fba:	bf04      	itt	eq
 8010fbc:	021b      	lsleq	r3, r3, #8
 8010fbe:	3008      	addeq	r0, #8
 8010fc0:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8010fc4:	bf04      	itt	eq
 8010fc6:	011b      	lsleq	r3, r3, #4
 8010fc8:	3004      	addeq	r0, #4
 8010fca:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8010fce:	bf04      	itt	eq
 8010fd0:	009b      	lsleq	r3, r3, #2
 8010fd2:	3002      	addeq	r0, #2
 8010fd4:	2b00      	cmp	r3, #0
 8010fd6:	db04      	blt.n	8010fe2 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8010fd8:	3001      	adds	r0, #1
 8010fda:	4770      	bx	lr
 8010fdc:	2000      	movs	r0, #0
 8010fde:	e7ea      	b.n	8010fb6 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8010fe0:	2020      	movs	r0, #32
 8010fe2:	4770      	bx	lr

08010fe4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 8010fe4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010fe8:	b087      	sub	sp, #28
 8010fea:	4681      	mov	r9, r0
 8010fec:	4698      	mov	r8, r3
 8010fee:	4610      	mov	r0, r2
 8010ff0:	460d      	mov	r5, r1
 8010ff2:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 8010ff6:	b981      	cbnz	r1, 801101a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 8010ff8:	b14b      	cbz	r3, 801100e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 8010ffa:	460b      	mov	r3, r1
 8010ffc:	464a      	mov	r2, r9
 8010ffe:	4641      	mov	r1, r8
 8011000:	e9cd 4700 	strd	r4, r7, [sp]
 8011004:	f7ff ffee 	bl	8010fe4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8011008:	b007      	add	sp, #28
 801100a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801100e:	f04f 33ff 	mov.w	r3, #4294967295
 8011012:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8011016:	603b      	str	r3, [r7, #0]
 8011018:	e7f6      	b.n	8011008 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 801101a:	fa32 fa01 	lsrs.w	sl, r2, r1
 801101e:	d107      	bne.n	8011030 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 8011020:	fb09 f602 	mul.w	r6, r9, r2
 8011024:	fbb6 f0f4 	udiv	r0, r6, r4
 8011028:	fb04 6610 	mls	r6, r4, r0, r6
 801102c:	603e      	str	r6, [r7, #0]
 801102e:	e7eb      	b.n	8011008 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 8011030:	2601      	movs	r6, #1
 8011032:	fa09 fb01 	lsl.w	fp, r9, r1
 8011036:	408e      	lsls	r6, r1
 8011038:	fbbb f3f4 	udiv	r3, fp, r4
 801103c:	3e01      	subs	r6, #1
 801103e:	9302      	str	r3, [sp, #8]
 8011040:	fb0a f303 	mul.w	r3, sl, r3
 8011044:	4016      	ands	r6, r2
 8011046:	9303      	str	r3, [sp, #12]
 8011048:	4630      	mov	r0, r6
 801104a:	f7ff ffad 	bl	8010fa8 <_ZN8touchgfx16TouchCalibration4clzuEm>
 801104e:	464a      	mov	r2, r9
 8011050:	460b      	mov	r3, r1
 8011052:	4601      	mov	r1, r0
 8011054:	4630      	mov	r0, r6
 8011056:	e9cd 4700 	strd	r4, r7, [sp]
 801105a:	f7ff ffc3 	bl	8010fe4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801105e:	9b02      	ldr	r3, [sp, #8]
 8011060:	4606      	mov	r6, r0
 8011062:	eb05 0108 	add.w	r1, r5, r8
 8011066:	fb04 bb13 	mls	fp, r4, r3, fp
 801106a:	4658      	mov	r0, fp
 801106c:	f7ff ff9c 	bl	8010fa8 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8011070:	ab05      	add	r3, sp, #20
 8011072:	465a      	mov	r2, fp
 8011074:	e9cd 4300 	strd	r4, r3, [sp]
 8011078:	4603      	mov	r3, r0
 801107a:	4650      	mov	r0, sl
 801107c:	f7ff ffb2 	bl	8010fe4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8011080:	6839      	ldr	r1, [r7, #0]
 8011082:	9a05      	ldr	r2, [sp, #20]
 8011084:	9b03      	ldr	r3, [sp, #12]
 8011086:	4411      	add	r1, r2
 8011088:	fbb1 f2f4 	udiv	r2, r1, r4
 801108c:	18d3      	adds	r3, r2, r3
 801108e:	fb04 1412 	mls	r4, r4, r2, r1
 8011092:	441e      	add	r6, r3
 8011094:	603c      	str	r4, [r7, #0]
 8011096:	4430      	add	r0, r6
 8011098:	e7b6      	b.n	8011008 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

0801109a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 801109a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801109e:	b085      	sub	sp, #20
 80110a0:	f1b0 0900 	subs.w	r9, r0, #0
 80110a4:	461d      	mov	r5, r3
 80110a6:	4617      	mov	r7, r2
 80110a8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80110aa:	bfbb      	ittet	lt
 80110ac:	f1c9 0900 	rsblt	r9, r9, #0
 80110b0:	f04f 36ff 	movlt.w	r6, #4294967295
 80110b4:	2601      	movge	r6, #1
 80110b6:	6823      	ldrlt	r3, [r4, #0]
 80110b8:	bfbc      	itt	lt
 80110ba:	425b      	neglt	r3, r3
 80110bc:	6023      	strlt	r3, [r4, #0]
 80110be:	2a00      	cmp	r2, #0
 80110c0:	da04      	bge.n	80110cc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 80110c2:	6823      	ldr	r3, [r4, #0]
 80110c4:	4257      	negs	r7, r2
 80110c6:	4276      	negs	r6, r6
 80110c8:	425b      	negs	r3, r3
 80110ca:	6023      	str	r3, [r4, #0]
 80110cc:	2d00      	cmp	r5, #0
 80110ce:	4638      	mov	r0, r7
 80110d0:	bfba      	itte	lt
 80110d2:	426d      	neglt	r5, r5
 80110d4:	f04f 38ff 	movlt.w	r8, #4294967295
 80110d8:	f04f 0801 	movge.w	r8, #1
 80110dc:	f7ff ff64 	bl	8010fa8 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80110e0:	ab03      	add	r3, sp, #12
 80110e2:	463a      	mov	r2, r7
 80110e4:	e9cd 5300 	strd	r5, r3, [sp]
 80110e8:	4603      	mov	r3, r0
 80110ea:	4648      	mov	r0, r9
 80110ec:	f7ff ff7a 	bl	8010fe4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80110f0:	6823      	ldr	r3, [r4, #0]
 80110f2:	9a03      	ldr	r2, [sp, #12]
 80110f4:	4546      	cmp	r6, r8
 80110f6:	441a      	add	r2, r3
 80110f8:	fb92 f3f5 	sdiv	r3, r2, r5
 80110fc:	4418      	add	r0, r3
 80110fe:	fb05 2313 	mls	r3, r5, r3, r2
 8011102:	bf18      	it	ne
 8011104:	4240      	negne	r0, r0
 8011106:	1c72      	adds	r2, r6, #1
 8011108:	6023      	str	r3, [r4, #0]
 801110a:	d105      	bne.n	8011118 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 801110c:	2b00      	cmp	r3, #0
 801110e:	f1c3 0200 	rsb	r2, r3, #0
 8011112:	db0b      	blt.n	801112c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 8011114:	6022      	str	r2, [r4, #0]
 8011116:	e006      	b.n	8011126 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8011118:	2e01      	cmp	r6, #1
 801111a:	d104      	bne.n	8011126 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801111c:	2b00      	cmp	r3, #0
 801111e:	da02      	bge.n	8011126 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8011120:	442b      	add	r3, r5
 8011122:	3801      	subs	r0, #1
 8011124:	6023      	str	r3, [r4, #0]
 8011126:	b005      	add	sp, #20
 8011128:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801112c:	3801      	subs	r0, #1
 801112e:	1b52      	subs	r2, r2, r5
 8011130:	e7f0      	b.n	8011114 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

08011134 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8011134:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8011138:	4c1c      	ldr	r4, [pc, #112]	; (80111ac <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 801113a:	4605      	mov	r5, r0
 801113c:	6807      	ldr	r7, [r0, #0]
 801113e:	69a3      	ldr	r3, [r4, #24]
 8011140:	b92b      	cbnz	r3, 801114e <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8011142:	6840      	ldr	r0, [r0, #4]
 8011144:	e9c5 7000 	strd	r7, r0, [r5]
 8011148:	b004      	add	sp, #16
 801114a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801114e:	f04f 0802 	mov.w	r8, #2
 8011152:	68a2      	ldr	r2, [r4, #8]
 8011154:	ae04      	add	r6, sp, #16
 8011156:	6820      	ldr	r0, [r4, #0]
 8011158:	fb93 f1f8 	sdiv	r1, r3, r8
 801115c:	440a      	add	r2, r1
 801115e:	69e1      	ldr	r1, [r4, #28]
 8011160:	f846 2d04 	str.w	r2, [r6, #-4]!
 8011164:	463a      	mov	r2, r7
 8011166:	9600      	str	r6, [sp, #0]
 8011168:	f7ff ff97 	bl	801109a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801116c:	69a3      	ldr	r3, [r4, #24]
 801116e:	4607      	mov	r7, r0
 8011170:	686a      	ldr	r2, [r5, #4]
 8011172:	6a21      	ldr	r1, [r4, #32]
 8011174:	9600      	str	r6, [sp, #0]
 8011176:	6860      	ldr	r0, [r4, #4]
 8011178:	f7ff ff8f 	bl	801109a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801117c:	69a3      	ldr	r3, [r4, #24]
 801117e:	6962      	ldr	r2, [r4, #20]
 8011180:	4407      	add	r7, r0
 8011182:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8011184:	9600      	str	r6, [sp, #0]
 8011186:	68e0      	ldr	r0, [r4, #12]
 8011188:	fb93 f8f8 	sdiv	r8, r3, r8
 801118c:	4442      	add	r2, r8
 801118e:	9203      	str	r2, [sp, #12]
 8011190:	682a      	ldr	r2, [r5, #0]
 8011192:	f7ff ff82 	bl	801109a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8011196:	4680      	mov	r8, r0
 8011198:	9600      	str	r6, [sp, #0]
 801119a:	69a3      	ldr	r3, [r4, #24]
 801119c:	686a      	ldr	r2, [r5, #4]
 801119e:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 80111a0:	6920      	ldr	r0, [r4, #16]
 80111a2:	f7ff ff7a 	bl	801109a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80111a6:	4440      	add	r0, r8
 80111a8:	e7cc      	b.n	8011144 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 80111aa:	bf00      	nop
 80111ac:	2400e0a8 	.word	0x2400e0a8

080111b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 80111b0:	4b07      	ldr	r3, [pc, #28]	; (80111d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 80111b2:	781b      	ldrb	r3, [r3, #0]
 80111b4:	2b01      	cmp	r3, #1
 80111b6:	d109      	bne.n	80111cc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 80111b8:	f9b1 3000 	ldrsh.w	r3, [r1]
 80111bc:	f9b0 2000 	ldrsh.w	r2, [r0]
 80111c0:	8003      	strh	r3, [r0, #0]
 80111c2:	4b04      	ldr	r3, [pc, #16]	; (80111d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 80111c4:	881b      	ldrh	r3, [r3, #0]
 80111c6:	3b01      	subs	r3, #1
 80111c8:	1a9b      	subs	r3, r3, r2
 80111ca:	800b      	strh	r3, [r1, #0]
 80111cc:	4770      	bx	lr
 80111ce:	bf00      	nop
 80111d0:	2400e074 	.word	0x2400e074
 80111d4:	2400e070 	.word	0x2400e070

080111d8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 80111d8:	4b07      	ldr	r3, [pc, #28]	; (80111f8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 80111da:	b510      	push	{r4, lr}
 80111dc:	781b      	ldrb	r3, [r3, #0]
 80111de:	2b01      	cmp	r3, #1
 80111e0:	d108      	bne.n	80111f4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 80111e2:	4b06      	ldr	r3, [pc, #24]	; (80111fc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 80111e4:	880c      	ldrh	r4, [r1, #0]
 80111e6:	881b      	ldrh	r3, [r3, #0]
 80111e8:	f9b0 2000 	ldrsh.w	r2, [r0]
 80111ec:	3b01      	subs	r3, #1
 80111ee:	1b1b      	subs	r3, r3, r4
 80111f0:	8003      	strh	r3, [r0, #0]
 80111f2:	800a      	strh	r2, [r1, #0]
 80111f4:	bd10      	pop	{r4, pc}
 80111f6:	bf00      	nop
 80111f8:	2400e074 	.word	0x2400e074
 80111fc:	2400e070 	.word	0x2400e070

08011200 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8011200:	4b0a      	ldr	r3, [pc, #40]	; (801122c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8011202:	b510      	push	{r4, lr}
 8011204:	781b      	ldrb	r3, [r3, #0]
 8011206:	2b01      	cmp	r3, #1
 8011208:	d10e      	bne.n	8011228 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 801120a:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 801120e:	8843      	ldrh	r3, [r0, #2]
 8011210:	f9b0 4000 	ldrsh.w	r4, [r0]
 8011214:	18ca      	adds	r2, r1, r3
 8011216:	4b06      	ldr	r3, [pc, #24]	; (8011230 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8011218:	8044      	strh	r4, [r0, #2]
 801121a:	881b      	ldrh	r3, [r3, #0]
 801121c:	1a9b      	subs	r3, r3, r2
 801121e:	8003      	strh	r3, [r0, #0]
 8011220:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8011224:	8081      	strh	r1, [r0, #4]
 8011226:	80c3      	strh	r3, [r0, #6]
 8011228:	bd10      	pop	{r4, pc}
 801122a:	bf00      	nop
 801122c:	2400e074 	.word	0x2400e074
 8011230:	2400e070 	.word	0x2400e070

08011234 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8011234:	4b08      	ldr	r3, [pc, #32]	; (8011258 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8011236:	781b      	ldrb	r3, [r3, #0]
 8011238:	2b01      	cmp	r3, #1
 801123a:	d10c      	bne.n	8011256 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 801123c:	8803      	ldrh	r3, [r0, #0]
 801123e:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8011242:	8842      	ldrh	r2, [r0, #2]
 8011244:	8002      	strh	r2, [r0, #0]
 8011246:	185a      	adds	r2, r3, r1
 8011248:	4b04      	ldr	r3, [pc, #16]	; (801125c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 801124a:	881b      	ldrh	r3, [r3, #0]
 801124c:	1a9b      	subs	r3, r3, r2
 801124e:	8043      	strh	r3, [r0, #2]
 8011250:	88c3      	ldrh	r3, [r0, #6]
 8011252:	80c1      	strh	r1, [r0, #6]
 8011254:	8083      	strh	r3, [r0, #4]
 8011256:	4770      	bx	lr
 8011258:	2400e074 	.word	0x2400e074
 801125c:	2400e070 	.word	0x2400e070

08011260 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8011260:	4b07      	ldr	r3, [pc, #28]	; (8011280 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8011262:	b510      	push	{r4, lr}
 8011264:	781b      	ldrb	r3, [r3, #0]
 8011266:	2b01      	cmp	r3, #1
 8011268:	d108      	bne.n	801127c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 801126a:	f9b1 3000 	ldrsh.w	r3, [r1]
 801126e:	f9b0 4000 	ldrsh.w	r4, [r0]
 8011272:	8003      	strh	r3, [r0, #0]
 8011274:	8893      	ldrh	r3, [r2, #4]
 8011276:	3b01      	subs	r3, #1
 8011278:	1b1b      	subs	r3, r3, r4
 801127a:	800b      	strh	r3, [r1, #0]
 801127c:	bd10      	pop	{r4, pc}
 801127e:	bf00      	nop
 8011280:	2400e074 	.word	0x2400e074

08011284 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 8011284:	4b0b      	ldr	r3, [pc, #44]	; (80112b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 8011286:	781b      	ldrb	r3, [r3, #0]
 8011288:	2b01      	cmp	r3, #1
 801128a:	d111      	bne.n	80112b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 801128c:	680b      	ldr	r3, [r1, #0]
 801128e:	ed90 7a00 	vldr	s14, [r0]
 8011292:	6003      	str	r3, [r0, #0]
 8011294:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 8011298:	eddf 6a07 	vldr	s13, [pc, #28]	; 80112b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 801129c:	ee07 3a90 	vmov	s15, r3
 80112a0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80112a4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80112a8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80112ac:	edc1 7a00 	vstr	s15, [r1]
 80112b0:	4770      	bx	lr
 80112b2:	bf00      	nop
 80112b4:	2400e074 	.word	0x2400e074
 80112b8:	38d1b717 	.word	0x38d1b717

080112bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 80112bc:	4b0a      	ldr	r3, [pc, #40]	; (80112e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 80112be:	460a      	mov	r2, r1
 80112c0:	b510      	push	{r4, lr}
 80112c2:	781b      	ldrb	r3, [r3, #0]
 80112c4:	2b01      	cmp	r3, #1
 80112c6:	d10d      	bne.n	80112e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 80112c8:	8881      	ldrh	r1, [r0, #4]
 80112ca:	8803      	ldrh	r3, [r0, #0]
 80112cc:	440b      	add	r3, r1
 80112ce:	4601      	mov	r1, r0
 80112d0:	3b01      	subs	r3, #1
 80112d2:	f821 3b02 	strh.w	r3, [r1], #2
 80112d6:	f7ff ffc3 	bl	8011260 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 80112da:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80112de:	88c2      	ldrh	r2, [r0, #6]
 80112e0:	80c3      	strh	r3, [r0, #6]
 80112e2:	8082      	strh	r2, [r0, #4]
 80112e4:	bd10      	pop	{r4, pc}
 80112e6:	bf00      	nop
 80112e8:	2400e074 	.word	0x2400e074

080112ec <_ZN8touchgfx11Application13requestRedrawEv>:
 80112ec:	4b06      	ldr	r3, [pc, #24]	; (8011308 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 80112ee:	2100      	movs	r1, #0
 80112f0:	f9b3 2000 	ldrsh.w	r2, [r3]
 80112f4:	4b05      	ldr	r3, [pc, #20]	; (801130c <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 80112f6:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 80112fa:	f9b3 3000 	ldrsh.w	r3, [r3]
 80112fe:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 8011302:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 8011306:	4770      	bx	lr
 8011308:	2400e070 	.word	0x2400e070
 801130c:	2400e072 	.word	0x2400e072

08011310 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8011310:	4b03      	ldr	r3, [pc, #12]	; (8011320 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8011312:	6818      	ldr	r0, [r3, #0]
 8011314:	b110      	cbz	r0, 801131c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8011316:	6803      	ldr	r3, [r0, #0]
 8011318:	699b      	ldr	r3, [r3, #24]
 801131a:	4718      	bx	r3
 801131c:	4770      	bx	lr
 801131e:	bf00      	nop
 8011320:	2400e0d8 	.word	0x2400e0d8

08011324 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8011324:	4770      	bx	lr
	...

08011328 <_ZN8touchgfx11Application4drawEv>:
 8011328:	4b09      	ldr	r3, [pc, #36]	; (8011350 <_ZN8touchgfx11Application4drawEv+0x28>)
 801132a:	b507      	push	{r0, r1, r2, lr}
 801132c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011330:	2100      	movs	r1, #0
 8011332:	4b08      	ldr	r3, [pc, #32]	; (8011354 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8011334:	9100      	str	r1, [sp, #0]
 8011336:	4669      	mov	r1, sp
 8011338:	f9b3 3000 	ldrsh.w	r3, [r3]
 801133c:	f8ad 2004 	strh.w	r2, [sp, #4]
 8011340:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011344:	6803      	ldr	r3, [r0, #0]
 8011346:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011348:	4798      	blx	r3
 801134a:	b003      	add	sp, #12
 801134c:	f85d fb04 	ldr.w	pc, [sp], #4
 8011350:	2400e070 	.word	0x2400e070
 8011354:	2400e072 	.word	0x2400e072

08011358 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8011358:	4b03      	ldr	r3, [pc, #12]	; (8011368 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 801135a:	6818      	ldr	r0, [r3, #0]
 801135c:	b110      	cbz	r0, 8011364 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 801135e:	6803      	ldr	r3, [r0, #0]
 8011360:	69db      	ldr	r3, [r3, #28]
 8011362:	4718      	bx	r3
 8011364:	4770      	bx	lr
 8011366:	bf00      	nop
 8011368:	2400e0d8 	.word	0x2400e0d8

0801136c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 801136c:	4b03      	ldr	r3, [pc, #12]	; (801137c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 801136e:	6818      	ldr	r0, [r3, #0]
 8011370:	b110      	cbz	r0, 8011378 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8011372:	6803      	ldr	r3, [r0, #0]
 8011374:	6a1b      	ldr	r3, [r3, #32]
 8011376:	4718      	bx	r3
 8011378:	4770      	bx	lr
 801137a:	bf00      	nop
 801137c:	2400e0d8 	.word	0x2400e0d8

08011380 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8011380:	2300      	movs	r3, #0
 8011382:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 8011386:	4770      	bx	lr

08011388 <_ZN8touchgfx11Application14handleKeyEventEh>:
 8011388:	4b03      	ldr	r3, [pc, #12]	; (8011398 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 801138a:	6818      	ldr	r0, [r3, #0]
 801138c:	b110      	cbz	r0, 8011394 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 801138e:	6803      	ldr	r3, [r0, #0]
 8011390:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011392:	4718      	bx	r3
 8011394:	4770      	bx	lr
 8011396:	bf00      	nop
 8011398:	2400e0d8 	.word	0x2400e0d8

0801139c <_ZN8touchgfx11ApplicationD1Ev>:
 801139c:	4770      	bx	lr

0801139e <_ZN8touchgfx11ApplicationD0Ev>:
 801139e:	b510      	push	{r4, lr}
 80113a0:	4604      	mov	r4, r0
 80113a2:	f44f 719c 	mov.w	r1, #312	; 0x138
 80113a6:	f00e fa3a 	bl	801f81e <_ZdlPvj>
 80113aa:	4620      	mov	r0, r4
 80113ac:	bd10      	pop	{r4, pc}
	...

080113b0 <_ZN8touchgfx11Application15handleTickEventEv>:
 80113b0:	b570      	push	{r4, r5, r6, lr}
 80113b2:	4d38      	ldr	r5, [pc, #224]	; (8011494 <_ZN8touchgfx11Application15handleTickEventEv+0xe4>)
 80113b4:	4604      	mov	r4, r0
 80113b6:	6828      	ldr	r0, [r5, #0]
 80113b8:	b140      	cbz	r0, 80113cc <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 80113ba:	7a03      	ldrb	r3, [r0, #8]
 80113bc:	b933      	cbnz	r3, 80113cc <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 80113be:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 80113c2:	6803      	ldr	r3, [r0, #0]
 80113c4:	689b      	ldr	r3, [r3, #8]
 80113c6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80113ca:	4718      	bx	r3
 80113cc:	f894 3134 	ldrb.w	r3, [r4, #308]	; 0x134
 80113d0:	b97b      	cbnz	r3, 80113f2 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80113d2:	b170      	cbz	r0, 80113f2 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80113d4:	7a03      	ldrb	r3, [r0, #8]
 80113d6:	b163      	cbz	r3, 80113f2 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80113d8:	4b2f      	ldr	r3, [pc, #188]	; (8011498 <_ZN8touchgfx11Application15handleTickEventEv+0xe8>)
 80113da:	6818      	ldr	r0, [r3, #0]
 80113dc:	b110      	cbz	r0, 80113e4 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 80113de:	6803      	ldr	r3, [r0, #0]
 80113e0:	691b      	ldr	r3, [r3, #16]
 80113e2:	4798      	blx	r3
 80113e4:	6828      	ldr	r0, [r5, #0]
 80113e6:	6803      	ldr	r3, [r0, #0]
 80113e8:	68db      	ldr	r3, [r3, #12]
 80113ea:	4798      	blx	r3
 80113ec:	2301      	movs	r3, #1
 80113ee:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 80113f2:	2500      	movs	r5, #0
 80113f4:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 80113f8:	42a8      	cmp	r0, r5
 80113fa:	dd0c      	ble.n	8011416 <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 80113fc:	1963      	adds	r3, r4, r5
 80113fe:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 8011402:	b132      	cbz	r2, 8011412 <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 8011404:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 8011408:	4413      	add	r3, r2
 801140a:	6858      	ldr	r0, [r3, #4]
 801140c:	6803      	ldr	r3, [r0, #0]
 801140e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8011410:	4798      	blx	r3
 8011412:	3501      	adds	r5, #1
 8011414:	e7ee      	b.n	80113f4 <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 8011416:	2300      	movs	r3, #0
 8011418:	461a      	mov	r2, r3
 801141a:	4298      	cmp	r0, r3
 801141c:	d10f      	bne.n	801143e <_ZN8touchgfx11Application15handleTickEventEv+0x8e>
 801141e:	1d25      	adds	r5, r4, #4
 8011420:	f8b4 1084 	ldrh.w	r1, [r4, #132]	; 0x84
 8011424:	4291      	cmp	r1, r2
 8011426:	dd2d      	ble.n	8011484 <_ZN8touchgfx11Application15handleTickEventEv+0xd4>
 8011428:	1e48      	subs	r0, r1, #1
 801142a:	b280      	uxth	r0, r0
 801142c:	4288      	cmp	r0, r1
 801142e:	d31a      	bcc.n	8011466 <_ZN8touchgfx11Application15handleTickEventEv+0xb6>
 8011430:	4b1a      	ldr	r3, [pc, #104]	; (801149c <_ZN8touchgfx11Application15handleTickEventEv+0xec>)
 8011432:	f44f 71e5 	mov.w	r1, #458	; 0x1ca
 8011436:	4a1a      	ldr	r2, [pc, #104]	; (80114a0 <_ZN8touchgfx11Application15handleTickEventEv+0xf0>)
 8011438:	481a      	ldr	r0, [pc, #104]	; (80114a4 <_ZN8touchgfx11Application15handleTickEventEv+0xf4>)
 801143a:	f00e fbcd 	bl	801fbd8 <__assert_func>
 801143e:	18e1      	adds	r1, r4, r3
 8011440:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 8011444:	b16d      	cbz	r5, 8011462 <_ZN8touchgfx11Application15handleTickEventEv+0xb2>
 8011446:	429a      	cmp	r2, r3
 8011448:	d00a      	beq.n	8011460 <_ZN8touchgfx11Application15handleTickEventEv+0xb0>
 801144a:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 801144e:	4431      	add	r1, r6
 8011450:	684e      	ldr	r6, [r1, #4]
 8011452:	b291      	uxth	r1, r2
 8011454:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8011458:	604e      	str	r6, [r1, #4]
 801145a:	18a1      	adds	r1, r4, r2
 801145c:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 8011460:	3201      	adds	r2, #1
 8011462:	3301      	adds	r3, #1
 8011464:	e7d9      	b.n	801141a <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 8011466:	eb04 0380 	add.w	r3, r4, r0, lsl #2
 801146a:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 801146e:	3304      	adds	r3, #4
 8011470:	428b      	cmp	r3, r1
 8011472:	d004      	beq.n	801147e <_ZN8touchgfx11Application15handleTickEventEv+0xce>
 8011474:	f853 6f04 	ldr.w	r6, [r3, #4]!
 8011478:	f843 6c04 	str.w	r6, [r3, #-4]
 801147c:	e7f8      	b.n	8011470 <_ZN8touchgfx11Application15handleTickEventEv+0xc0>
 801147e:	f8a4 0084 	strh.w	r0, [r4, #132]	; 0x84
 8011482:	e7cd      	b.n	8011420 <_ZN8touchgfx11Application15handleTickEventEv+0x70>
 8011484:	4b04      	ldr	r3, [pc, #16]	; (8011498 <_ZN8touchgfx11Application15handleTickEventEv+0xe8>)
 8011486:	6818      	ldr	r0, [r3, #0]
 8011488:	b110      	cbz	r0, 8011490 <_ZN8touchgfx11Application15handleTickEventEv+0xe0>
 801148a:	6803      	ldr	r3, [r0, #0]
 801148c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801148e:	e79a      	b.n	80113c6 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8011490:	bd70      	pop	{r4, r5, r6, pc}
 8011492:	bf00      	nop
 8011494:	2400e0dc 	.word	0x2400e0dc
 8011498:	2400e0d8 	.word	0x2400e0d8
 801149c:	08023ebf 	.word	0x08023ebf
 80114a0:	08024121 	.word	0x08024121
 80114a4:	08023ecd 	.word	0x08023ecd

080114a8 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 80114a8:	b570      	push	{r4, r5, r6, lr}
 80114aa:	4606      	mov	r6, r0
 80114ac:	460c      	mov	r4, r1
 80114ae:	b929      	cbnz	r1, 80114bc <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x14>
 80114b0:	4b0c      	ldr	r3, [pc, #48]	; (80114e4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x3c>)
 80114b2:	215e      	movs	r1, #94	; 0x5e
 80114b4:	4a0c      	ldr	r2, [pc, #48]	; (80114e8 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x40>)
 80114b6:	480d      	ldr	r0, [pc, #52]	; (80114ec <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x44>)
 80114b8:	f00e fb8e 	bl	801fbd8 <__assert_func>
 80114bc:	2300      	movs	r3, #0
 80114be:	4d0c      	ldr	r5, [pc, #48]	; (80114f0 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x48>)
 80114c0:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 80114c4:	6828      	ldr	r0, [r5, #0]
 80114c6:	b110      	cbz	r0, 80114ce <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x26>
 80114c8:	6803      	ldr	r3, [r0, #0]
 80114ca:	695b      	ldr	r3, [r3, #20]
 80114cc:	4798      	blx	r3
 80114ce:	602c      	str	r4, [r5, #0]
 80114d0:	4620      	mov	r0, r4
 80114d2:	6823      	ldr	r3, [r4, #0]
 80114d4:	68db      	ldr	r3, [r3, #12]
 80114d6:	4798      	blx	r3
 80114d8:	6833      	ldr	r3, [r6, #0]
 80114da:	4630      	mov	r0, r6
 80114dc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80114de:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80114e2:	4718      	bx	r3
 80114e4:	08023e8b 	.word	0x08023e8b
 80114e8:	08023f9c 	.word	0x08023f9c
 80114ec:	08023e95 	.word	0x08023e95
 80114f0:	2400e0d8 	.word	0x2400e0d8

080114f4 <_ZN8touchgfx4Rect10restrictToEss>:
 80114f4:	f9b0 3000 	ldrsh.w	r3, [r0]
 80114f8:	2b00      	cmp	r3, #0
 80114fa:	b510      	push	{r4, lr}
 80114fc:	da04      	bge.n	8011508 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 80114fe:	8884      	ldrh	r4, [r0, #4]
 8011500:	4423      	add	r3, r4
 8011502:	8083      	strh	r3, [r0, #4]
 8011504:	2300      	movs	r3, #0
 8011506:	8003      	strh	r3, [r0, #0]
 8011508:	f9b0 4000 	ldrsh.w	r4, [r0]
 801150c:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8011510:	1b09      	subs	r1, r1, r4
 8011512:	428b      	cmp	r3, r1
 8011514:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8011518:	bfc8      	it	gt
 801151a:	8081      	strhgt	r1, [r0, #4]
 801151c:	2b00      	cmp	r3, #0
 801151e:	da04      	bge.n	801152a <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8011520:	88c1      	ldrh	r1, [r0, #6]
 8011522:	440b      	add	r3, r1
 8011524:	80c3      	strh	r3, [r0, #6]
 8011526:	2300      	movs	r3, #0
 8011528:	8043      	strh	r3, [r0, #2]
 801152a:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 801152e:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8011532:	1a52      	subs	r2, r2, r1
 8011534:	4293      	cmp	r3, r2
 8011536:	bfc8      	it	gt
 8011538:	80c2      	strhgt	r2, [r0, #6]
 801153a:	bd10      	pop	{r4, pc}

0801153c <_ZN8touchgfx11Application4drawERNS_4RectE>:
 801153c:	4b10      	ldr	r3, [pc, #64]	; (8011580 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 801153e:	b510      	push	{r4, lr}
 8011540:	460c      	mov	r4, r1
 8011542:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011546:	4b0f      	ldr	r3, [pc, #60]	; (8011584 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 8011548:	4620      	mov	r0, r4
 801154a:	f9b3 1000 	ldrsh.w	r1, [r3]
 801154e:	f7ff ffd1 	bl	80114f4 <_ZN8touchgfx4Rect10restrictToEss>
 8011552:	4b0d      	ldr	r3, [pc, #52]	; (8011588 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8011554:	6818      	ldr	r0, [r3, #0]
 8011556:	b190      	cbz	r0, 801157e <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8011558:	6803      	ldr	r3, [r0, #0]
 801155a:	4621      	mov	r1, r4
 801155c:	689b      	ldr	r3, [r3, #8]
 801155e:	4798      	blx	r3
 8011560:	4b0a      	ldr	r3, [pc, #40]	; (801158c <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8011562:	6818      	ldr	r0, [r3, #0]
 8011564:	b118      	cbz	r0, 801156e <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 8011566:	6803      	ldr	r3, [r0, #0]
 8011568:	4621      	mov	r1, r4
 801156a:	689b      	ldr	r3, [r3, #8]
 801156c:	4798      	blx	r3
 801156e:	4b08      	ldr	r3, [pc, #32]	; (8011590 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8011570:	4621      	mov	r1, r4
 8011572:	6818      	ldr	r0, [r3, #0]
 8011574:	6803      	ldr	r3, [r0, #0]
 8011576:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801157a:	69db      	ldr	r3, [r3, #28]
 801157c:	4718      	bx	r3
 801157e:	bd10      	pop	{r4, pc}
 8011580:	2400e072 	.word	0x2400e072
 8011584:	2400e070 	.word	0x2400e070
 8011588:	2400e0d8 	.word	0x2400e0d8
 801158c:	2400e0d4 	.word	0x2400e0d4
 8011590:	2400e07c 	.word	0x2400e07c

08011594 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8011594:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011596:	4606      	mov	r6, r0
 8011598:	4608      	mov	r0, r1
 801159a:	460f      	mov	r7, r1
 801159c:	f7fb f885 	bl	800c6aa <_ZNK8touchgfx4Rect7isEmptyEv>
 80115a0:	b9e8      	cbnz	r0, 80115de <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80115a2:	f9b7 5000 	ldrsh.w	r5, [r7]
 80115a6:	f9b6 4000 	ldrsh.w	r4, [r6]
 80115aa:	42a5      	cmp	r5, r4
 80115ac:	db17      	blt.n	80115de <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80115ae:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 80115b2:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 80115b6:	429a      	cmp	r2, r3
 80115b8:	db11      	blt.n	80115de <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80115ba:	88b9      	ldrh	r1, [r7, #4]
 80115bc:	440d      	add	r5, r1
 80115be:	88b1      	ldrh	r1, [r6, #4]
 80115c0:	440c      	add	r4, r1
 80115c2:	b22d      	sxth	r5, r5
 80115c4:	b224      	sxth	r4, r4
 80115c6:	42a5      	cmp	r5, r4
 80115c8:	dc09      	bgt.n	80115de <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80115ca:	88f8      	ldrh	r0, [r7, #6]
 80115cc:	4410      	add	r0, r2
 80115ce:	88f2      	ldrh	r2, [r6, #6]
 80115d0:	4413      	add	r3, r2
 80115d2:	b200      	sxth	r0, r0
 80115d4:	b21b      	sxth	r3, r3
 80115d6:	4298      	cmp	r0, r3
 80115d8:	bfcc      	ite	gt
 80115da:	2000      	movgt	r0, #0
 80115dc:	2001      	movle	r0, #1
 80115de:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080115e0 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 80115e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80115e2:	4604      	mov	r4, r0
 80115e4:	4608      	mov	r0, r1
 80115e6:	460d      	mov	r5, r1
 80115e8:	f7fb f85f 	bl	800c6aa <_ZNK8touchgfx4Rect7isEmptyEv>
 80115ec:	b978      	cbnz	r0, 801160e <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 80115ee:	4620      	mov	r0, r4
 80115f0:	f7fb f85b 	bl	800c6aa <_ZNK8touchgfx4Rect7isEmptyEv>
 80115f4:	f9b5 6000 	ldrsh.w	r6, [r5]
 80115f8:	b150      	cbz	r0, 8011610 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 80115fa:	8026      	strh	r6, [r4, #0]
 80115fc:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8011600:	8063      	strh	r3, [r4, #2]
 8011602:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8011606:	80a3      	strh	r3, [r4, #4]
 8011608:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 801160c:	80e3      	strh	r3, [r4, #6]
 801160e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011610:	f9b4 1000 	ldrsh.w	r1, [r4]
 8011614:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8011618:	42b1      	cmp	r1, r6
 801161a:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 801161e:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8011622:	460f      	mov	r7, r1
 8011624:	88ed      	ldrh	r5, [r5, #6]
 8011626:	bfa8      	it	ge
 8011628:	4637      	movge	r7, r6
 801162a:	4293      	cmp	r3, r2
 801162c:	4618      	mov	r0, r3
 801162e:	4466      	add	r6, ip
 8011630:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8011634:	bfa8      	it	ge
 8011636:	4610      	movge	r0, r2
 8011638:	442a      	add	r2, r5
 801163a:	88e5      	ldrh	r5, [r4, #6]
 801163c:	4461      	add	r1, ip
 801163e:	b236      	sxth	r6, r6
 8011640:	8027      	strh	r7, [r4, #0]
 8011642:	442b      	add	r3, r5
 8011644:	b209      	sxth	r1, r1
 8011646:	b212      	sxth	r2, r2
 8011648:	8060      	strh	r0, [r4, #2]
 801164a:	b21b      	sxth	r3, r3
 801164c:	428e      	cmp	r6, r1
 801164e:	bfac      	ite	ge
 8011650:	ebc7 0106 	rsbge	r1, r7, r6
 8011654:	ebc7 0101 	rsblt	r1, r7, r1
 8011658:	429a      	cmp	r2, r3
 801165a:	bfac      	ite	ge
 801165c:	ebc0 0202 	rsbge	r2, r0, r2
 8011660:	ebc0 0203 	rsblt	r2, r0, r3
 8011664:	80a1      	strh	r1, [r4, #4]
 8011666:	80e2      	strh	r2, [r4, #6]
 8011668:	e7d1      	b.n	801160e <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0801166c <_ZN8touchgfx11Application11getInstanceEv>:
 801166c:	4b01      	ldr	r3, [pc, #4]	; (8011674 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 801166e:	6818      	ldr	r0, [r3, #0]
 8011670:	4770      	bx	lr
 8011672:	bf00      	nop
 8011674:	2400e0e8 	.word	0x2400e0e8

08011678 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>:
 8011678:	b570      	push	{r4, r5, r6, lr}
 801167a:	2200      	movs	r2, #0
 801167c:	f8b0 3084 	ldrh.w	r3, [r0, #132]	; 0x84
 8011680:	1d04      	adds	r4, r0, #4
 8011682:	b295      	uxth	r5, r2
 8011684:	42ab      	cmp	r3, r5
 8011686:	d90e      	bls.n	80116a6 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x2e>
 8011688:	f854 6b04 	ldr.w	r6, [r4], #4
 801168c:	4615      	mov	r5, r2
 801168e:	3201      	adds	r2, #1
 8011690:	428e      	cmp	r6, r1
 8011692:	d1f6      	bne.n	8011682 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0xa>
 8011694:	4428      	add	r0, r5
 8011696:	f890 3088 	ldrb.w	r3, [r0, #136]	; 0x88
 801169a:	2bff      	cmp	r3, #255	; 0xff
 801169c:	d002      	beq.n	80116a4 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x2c>
 801169e:	3301      	adds	r3, #1
 80116a0:	f880 3088 	strb.w	r3, [r0, #136]	; 0x88
 80116a4:	bd70      	pop	{r4, r5, r6, pc}
 80116a6:	2b20      	cmp	r3, #32
 80116a8:	d106      	bne.n	80116b8 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x40>
 80116aa:	4b09      	ldr	r3, [pc, #36]	; (80116d0 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x58>)
 80116ac:	f240 2149 	movw	r1, #585	; 0x249
 80116b0:	4a08      	ldr	r2, [pc, #32]	; (80116d4 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x5c>)
 80116b2:	4809      	ldr	r0, [pc, #36]	; (80116d8 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x60>)
 80116b4:	f00e fa90 	bl	801fbd8 <__assert_func>
 80116b8:	18c2      	adds	r2, r0, r3
 80116ba:	2401      	movs	r4, #1
 80116bc:	f882 4088 	strb.w	r4, [r2, #136]	; 0x88
 80116c0:	191a      	adds	r2, r3, r4
 80116c2:	f8a0 2084 	strh.w	r2, [r0, #132]	; 0x84
 80116c6:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 80116ca:	6041      	str	r1, [r0, #4]
 80116cc:	e7ea      	b.n	80116a4 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x2c>
 80116ce:	bf00      	nop
 80116d0:	08023ef6 	.word	0x08023ef6
 80116d4:	08023fe0 	.word	0x08023fe0
 80116d8:	08023e95 	.word	0x08023e95

080116dc <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>:
 80116dc:	b570      	push	{r4, r5, r6, lr}
 80116de:	2300      	movs	r3, #0
 80116e0:	f8b0 6084 	ldrh.w	r6, [r0, #132]	; 0x84
 80116e4:	1d04      	adds	r4, r0, #4
 80116e6:	b29a      	uxth	r2, r3
 80116e8:	4296      	cmp	r6, r2
 80116ea:	d90a      	bls.n	8011702 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x26>
 80116ec:	f854 2b04 	ldr.w	r2, [r4], #4
 80116f0:	428a      	cmp	r2, r1
 80116f2:	d107      	bne.n	8011704 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x28>
 80116f4:	18c5      	adds	r5, r0, r3
 80116f6:	f895 2088 	ldrb.w	r2, [r5, #136]	; 0x88
 80116fa:	b11a      	cbz	r2, 8011704 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x28>
 80116fc:	3a01      	subs	r2, #1
 80116fe:	f885 2088 	strb.w	r2, [r5, #136]	; 0x88
 8011702:	bd70      	pop	{r4, r5, r6, pc}
 8011704:	3301      	adds	r3, #1
 8011706:	e7ee      	b.n	80116e6 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0xa>

08011708 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 8011708:	2300      	movs	r3, #0
 801170a:	f100 0288 	add.w	r2, r0, #136	; 0x88
 801170e:	30a8      	adds	r0, #168	; 0xa8
 8011710:	f820 3c24 	strh.w	r3, [r0, #-36]
 8011714:	f802 3b01 	strb.w	r3, [r2], #1
 8011718:	4282      	cmp	r2, r0
 801171a:	d1fb      	bne.n	8011714 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 801171c:	4770      	bx	lr
	...

08011720 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 8011720:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011722:	4b10      	ldr	r3, [pc, #64]	; (8011764 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 8011724:	4605      	mov	r5, r0
 8011726:	781b      	ldrb	r3, [r3, #0]
 8011728:	b1d3      	cbz	r3, 8011760 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 801172a:	4b0f      	ldr	r3, [pc, #60]	; (8011768 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 801172c:	f100 06ea 	add.w	r6, r0, #234	; 0xea
 8011730:	4f0e      	ldr	r7, [pc, #56]	; (801176c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 8011732:	881c      	ldrh	r4, [r3, #0]
 8011734:	f8b5 312a 	ldrh.w	r3, [r5, #298]	; 0x12a
 8011738:	42a3      	cmp	r3, r4
 801173a:	d90e      	bls.n	801175a <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 801173c:	683b      	ldr	r3, [r7, #0]
 801173e:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8011742:	b10a      	cbz	r2, 8011748 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 8011744:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8011746:	b900      	cbnz	r0, 801174a <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 8011748:	6898      	ldr	r0, [r3, #8]
 801174a:	6803      	ldr	r3, [r0, #0]
 801174c:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 8011750:	3401      	adds	r4, #1
 8011752:	69db      	ldr	r3, [r3, #28]
 8011754:	4798      	blx	r3
 8011756:	b2a4      	uxth	r4, r4
 8011758:	e7ec      	b.n	8011734 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 801175a:	2300      	movs	r3, #0
 801175c:	f8a5 312a 	strh.w	r3, [r5, #298]	; 0x12a
 8011760:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011762:	bf00      	nop
 8011764:	2400e07a 	.word	0x2400e07a
 8011768:	2400005c 	.word	0x2400005c
 801176c:	2400e07c 	.word	0x2400e07c

08011770 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8011770:	4603      	mov	r3, r0
 8011772:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8011776:	2200      	movs	r2, #0
 8011778:	801a      	strh	r2, [r3, #0]
 801177a:	3308      	adds	r3, #8
 801177c:	f823 2c06 	strh.w	r2, [r3, #-6]
 8011780:	f823 2c04 	strh.w	r2, [r3, #-4]
 8011784:	f823 2c02 	strh.w	r2, [r3, #-2]
 8011788:	428b      	cmp	r3, r1
 801178a:	d1f5      	bne.n	8011778 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 801178c:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8011790:	4770      	bx	lr
	...

08011794 <_ZN8touchgfx11ApplicationC1Ev>:
 8011794:	b570      	push	{r4, r5, r6, lr}
 8011796:	4b19      	ldr	r3, [pc, #100]	; (80117fc <_ZN8touchgfx11ApplicationC1Ev+0x68>)
 8011798:	2500      	movs	r5, #0
 801179a:	4604      	mov	r4, r0
 801179c:	30a8      	adds	r0, #168	; 0xa8
 801179e:	f840 3ca8 	str.w	r3, [r0, #-168]
 80117a2:	f820 5c24 	strh.w	r5, [r0, #-36]
 80117a6:	f7ff ffe3 	bl	8011770 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80117aa:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 80117ae:	f7ff ffdf 	bl	8011770 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80117b2:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 80117b6:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 80117ba:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 80117be:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 80117c2:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 80117c6:	490e      	ldr	r1, [pc, #56]	; (8011800 <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 80117c8:	480e      	ldr	r0, [pc, #56]	; (8011804 <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 80117ca:	f00b fc1d 	bl	801d008 <CRC_Lock>
 80117ce:	4e0e      	ldr	r6, [pc, #56]	; (8011808 <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 80117d0:	4b0e      	ldr	r3, [pc, #56]	; (801180c <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 80117d2:	b158      	cbz	r0, 80117ec <_ZN8touchgfx11ApplicationC1Ev+0x58>
 80117d4:	801d      	strh	r5, [r3, #0]
 80117d6:	2300      	movs	r3, #0
 80117d8:	4a0d      	ldr	r2, [pc, #52]	; (8011810 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 80117da:	4620      	mov	r0, r4
 80117dc:	6013      	str	r3, [r2, #0]
 80117de:	4a0d      	ldr	r2, [pc, #52]	; (8011814 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 80117e0:	6033      	str	r3, [r6, #0]
 80117e2:	6013      	str	r3, [r2, #0]
 80117e4:	f7ff ff90 	bl	8011708 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 80117e8:	4620      	mov	r0, r4
 80117ea:	bd70      	pop	{r4, r5, r6, pc}
 80117ec:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80117f0:	2002      	movs	r0, #2
 80117f2:	801a      	strh	r2, [r3, #0]
 80117f4:	6030      	str	r0, [r6, #0]
 80117f6:	f001 fac5 	bl	8012d84 <_ZN8touchgfx6Screen4drawEv>
 80117fa:	e7ec      	b.n	80117d6 <_ZN8touchgfx11ApplicationC1Ev+0x42>
 80117fc:	08023f58 	.word	0x08023f58
 8011800:	b5e8b5cd 	.word	0xb5e8b5cd
 8011804:	f407a5c2 	.word	0xf407a5c2
 8011808:	2400e0d8 	.word	0x2400e0d8
 801180c:	2400005c 	.word	0x2400005c
 8011810:	2400e0e8 	.word	0x2400e0e8
 8011814:	2400e0dc 	.word	0x2400e0dc

08011818 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8011818:	b510      	push	{r4, lr}
 801181a:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 801181e:	428b      	cmp	r3, r1
 8011820:	d806      	bhi.n	8011830 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x18>
 8011822:	4b0b      	ldr	r3, [pc, #44]	; (8011850 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x38>)
 8011824:	f240 11dd 	movw	r1, #477	; 0x1dd
 8011828:	4a0a      	ldr	r2, [pc, #40]	; (8011854 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x3c>)
 801182a:	480b      	ldr	r0, [pc, #44]	; (8011858 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x40>)
 801182c:	f00e f9d4 	bl	801fbd8 <__assert_func>
 8011830:	3b01      	subs	r3, #1
 8011832:	b29b      	uxth	r3, r3
 8011834:	428b      	cmp	r3, r1
 8011836:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 801183a:	d908      	bls.n	801184e <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x36>
 801183c:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8011840:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8011844:	681a      	ldr	r2, [r3, #0]
 8011846:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 801184a:	685a      	ldr	r2, [r3, #4]
 801184c:	6062      	str	r2, [r4, #4]
 801184e:	bd10      	pop	{r4, pc}
 8011850:	08023ebf 	.word	0x08023ebf
 8011854:	08024025 	.word	0x08024025
 8011858:	08023ecd 	.word	0x08023ecd

0801185c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>:
 801185c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801185e:	466b      	mov	r3, sp
 8011860:	4604      	mov	r4, r0
 8011862:	e883 0006 	stmia.w	r3, {r1, r2}
 8011866:	f8b0 2040 	ldrh.w	r2, [r0, #64]	; 0x40
 801186a:	2a07      	cmp	r2, #7
 801186c:	d906      	bls.n	801187c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x20>
 801186e:	4b09      	ldr	r3, [pc, #36]	; (8011894 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x38>)
 8011870:	f240 11a3 	movw	r1, #419	; 0x1a3
 8011874:	4a08      	ldr	r2, [pc, #32]	; (8011898 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x3c>)
 8011876:	4809      	ldr	r0, [pc, #36]	; (801189c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x40>)
 8011878:	f00e f9ae 	bl	801fbd8 <__assert_func>
 801187c:	1c51      	adds	r1, r2, #1
 801187e:	eb00 05c2 	add.w	r5, r0, r2, lsl #3
 8011882:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8011886:	cb03      	ldmia	r3!, {r0, r1}
 8011888:	f844 0032 	str.w	r0, [r4, r2, lsl #3]
 801188c:	6069      	str	r1, [r5, #4]
 801188e:	b003      	add	sp, #12
 8011890:	bd30      	pop	{r4, r5, pc}
 8011892:	bf00      	nop
 8011894:	08023f1e 	.word	0x08023f1e
 8011898:	080240bb 	.word	0x080240bb
 801189c:	08023ecd 	.word	0x08023ecd

080118a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 80118a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80118a4:	b08d      	sub	sp, #52	; 0x34
 80118a6:	4b94      	ldr	r3, [pc, #592]	; (8011af8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
 80118a8:	4683      	mov	fp, r0
 80118aa:	ac08      	add	r4, sp, #32
 80118ac:	e884 0006 	stmia.w	r4, {r1, r2}
 80118b0:	f9b3 2000 	ldrsh.w	r2, [r3]
 80118b4:	4620      	mov	r0, r4
 80118b6:	4b91      	ldr	r3, [pc, #580]	; (8011afc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>)
 80118b8:	f9b3 1000 	ldrsh.w	r1, [r3]
 80118bc:	f7ff fe1a 	bl	80114f4 <_ZN8touchgfx4Rect10restrictToEss>
 80118c0:	4620      	mov	r0, r4
 80118c2:	f7fa fef2 	bl	800c6aa <_ZNK8touchgfx4Rect7isEmptyEv>
 80118c6:	2800      	cmp	r0, #0
 80118c8:	d16a      	bne.n	80119a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80118ca:	9402      	str	r4, [sp, #8]
 80118cc:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 80118d0:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 80118d4:	2400      	movs	r4, #0
 80118d6:	eb0b 06c5 	add.w	r6, fp, r5, lsl #3
 80118da:	9301      	str	r3, [sp, #4]
 80118dc:	36a0      	adds	r6, #160	; 0xa0
 80118de:	42a5      	cmp	r5, r4
 80118e0:	d00d      	beq.n	80118fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
 80118e2:	eba6 01c4 	sub.w	r1, r6, r4, lsl #3
 80118e6:	9802      	ldr	r0, [sp, #8]
 80118e8:	f7ff fe54 	bl	8011594 <_ZNK8touchgfx4Rect8includesERKS0_>
 80118ec:	b128      	cbz	r0, 80118fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a>
 80118ee:	1e69      	subs	r1, r5, #1
 80118f0:	9801      	ldr	r0, [sp, #4]
 80118f2:	1b09      	subs	r1, r1, r4
 80118f4:	b289      	uxth	r1, r1
 80118f6:	f7ff ff8f 	bl	8011818 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80118fa:	3401      	adds	r4, #1
 80118fc:	e7ef      	b.n	80118de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e>
 80118fe:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 8011902:	1e7b      	subs	r3, r7, #1
 8011904:	eb0b 0ac7 	add.w	sl, fp, r7, lsl #3
 8011908:	9703      	str	r7, [sp, #12]
 801190a:	9300      	str	r3, [sp, #0]
 801190c:	2400      	movs	r4, #0
 801190e:	4655      	mov	r5, sl
 8011910:	9704      	str	r7, [sp, #16]
 8011912:	4626      	mov	r6, r4
 8011914:	9b04      	ldr	r3, [sp, #16]
 8011916:	2b00      	cmp	r3, #0
 8011918:	d078      	beq.n	8011a0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x16c>
 801191a:	9902      	ldr	r1, [sp, #8]
 801191c:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 8011920:	f7fc ff3e 	bl	800e7a0 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8011924:	b360      	cbz	r0, 8011980 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8011926:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801192a:	f9b5 c0a0 	ldrsh.w	ip, [r5, #160]	; 0xa0
 801192e:	f9bd 9022 	ldrsh.w	r9, [sp, #34]	; 0x22
 8011932:	45e6      	cmp	lr, ip
 8011934:	f9b5 80a2 	ldrsh.w	r8, [r5, #162]	; 0xa2
 8011938:	db35      	blt.n	80119a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 801193a:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 801193e:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 8011942:	4472      	add	r2, lr
 8011944:	4463      	add	r3, ip
 8011946:	b212      	sxth	r2, r2
 8011948:	b21b      	sxth	r3, r3
 801194a:	429a      	cmp	r2, r3
 801194c:	dc2b      	bgt.n	80119a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 801194e:	fa1f f288 	uxth.w	r2, r8
 8011952:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 8011956:	45c1      	cmp	r9, r8
 8011958:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 801195c:	4413      	add	r3, r2
 801195e:	fa1f fc89 	uxth.w	ip, r9
 8011962:	b29b      	uxth	r3, r3
 8011964:	fa0f fe83 	sxth.w	lr, r3
 8011968:	db0f      	blt.n	801198a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 801196a:	eba3 030c 	sub.w	r3, r3, ip
 801196e:	1ac9      	subs	r1, r1, r3
 8011970:	b209      	sxth	r1, r1
 8011972:	2900      	cmp	r1, #0
 8011974:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 8011978:	dd12      	ble.n	80119a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801197a:	f8ad e022 	strh.w	lr, [sp, #34]	; 0x22
 801197e:	4604      	mov	r4, r0
 8011980:	9b04      	ldr	r3, [sp, #16]
 8011982:	3d08      	subs	r5, #8
 8011984:	3b01      	subs	r3, #1
 8011986:	9304      	str	r3, [sp, #16]
 8011988:	e7c4      	b.n	8011914 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x74>
 801198a:	4461      	add	r1, ip
 801198c:	b209      	sxth	r1, r1
 801198e:	4571      	cmp	r1, lr
 8011990:	dc3a      	bgt.n	8011a08 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8011992:	eba2 020c 	sub.w	r2, r2, ip
 8011996:	b212      	sxth	r2, r2
 8011998:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 801199c:	2a00      	cmp	r2, #0
 801199e:	dcee      	bgt.n	801197e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80119a0:	b00d      	add	sp, #52	; 0x34
 80119a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80119a6:	45c1      	cmp	r9, r8
 80119a8:	db2e      	blt.n	8011a08 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 80119aa:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 80119ae:	4499      	add	r9, r3
 80119b0:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 80119b4:	4498      	add	r8, r3
 80119b6:	fa0f f989 	sxth.w	r9, r9
 80119ba:	fa0f f888 	sxth.w	r8, r8
 80119be:	45c1      	cmp	r9, r8
 80119c0:	dc22      	bgt.n	8011a08 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 80119c2:	fa1f f28c 	uxth.w	r2, ip
 80119c6:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 80119ca:	45e6      	cmp	lr, ip
 80119cc:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 80119d0:	4413      	add	r3, r2
 80119d2:	fa1f f88e 	uxth.w	r8, lr
 80119d6:	b29b      	uxth	r3, r3
 80119d8:	fa0f f983 	sxth.w	r9, r3
 80119dc:	db0a      	blt.n	80119f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x154>
 80119de:	eba3 0308 	sub.w	r3, r3, r8
 80119e2:	1ac9      	subs	r1, r1, r3
 80119e4:	b209      	sxth	r1, r1
 80119e6:	2900      	cmp	r1, #0
 80119e8:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 80119ec:	ddd8      	ble.n	80119a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80119ee:	f8ad 9020 	strh.w	r9, [sp, #32]
 80119f2:	e7c4      	b.n	801197e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80119f4:	4441      	add	r1, r8
 80119f6:	b209      	sxth	r1, r1
 80119f8:	4549      	cmp	r1, r9
 80119fa:	dc05      	bgt.n	8011a08 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 80119fc:	eba2 0208 	sub.w	r2, r2, r8
 8011a00:	b212      	sxth	r2, r2
 8011a02:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8011a06:	e7c9      	b.n	801199c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8011a08:	4606      	mov	r6, r0
 8011a0a:	e7b9      	b.n	8011980 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8011a0c:	2c00      	cmp	r4, #0
 8011a0e:	f47f af7d 	bne.w	801190c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c>
 8011a12:	2e00      	cmp	r6, #0
 8011a14:	f000 81e0 	beq.w	8011dd8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x538>
 8011a18:	f9bd 7022 	ldrsh.w	r7, [sp, #34]	; 0x22
 8011a1c:	4655      	mov	r5, sl
 8011a1e:	f9bd 6020 	ldrsh.w	r6, [sp, #32]
 8011a22:	b2b9      	uxth	r1, r7
 8011a24:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 8011a28:	b2b3      	uxth	r3, r6
 8011a2a:	9104      	str	r1, [sp, #16]
 8011a2c:	9804      	ldr	r0, [sp, #16]
 8011a2e:	441a      	add	r2, r3
 8011a30:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 8011a34:	b292      	uxth	r2, r2
 8011a36:	4401      	add	r1, r0
 8011a38:	fa0f f882 	sxth.w	r8, r2
 8011a3c:	b289      	uxth	r1, r1
 8011a3e:	9105      	str	r1, [sp, #20]
 8011a40:	f9bd 9014 	ldrsh.w	r9, [sp, #20]
 8011a44:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8011a48:	9b03      	ldr	r3, [sp, #12]
 8011a4a:	2b00      	cmp	r3, #0
 8011a4c:	d058      	beq.n	8011b00 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x260>
 8011a4e:	9902      	ldr	r1, [sp, #8]
 8011a50:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 8011a54:	f7fc fea4 	bl	800e7a0 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8011a58:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8011a5c:	b1d8      	cbz	r0, 8011a96 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 8011a5e:	f9b5 e0a0 	ldrsh.w	lr, [r5, #160]	; 0xa0
 8011a62:	f9b5 10a2 	ldrsh.w	r1, [r5, #162]	; 0xa2
 8011a66:	4576      	cmp	r6, lr
 8011a68:	dc26      	bgt.n	8011ab8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 8011a6a:	f8b5 c0a4 	ldrh.w	ip, [r5, #164]	; 0xa4
 8011a6e:	44f4      	add	ip, lr
 8011a70:	fa0f fc8c 	sxth.w	ip, ip
 8011a74:	45e0      	cmp	r8, ip
 8011a76:	db1f      	blt.n	8011ab8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 8011a78:	428f      	cmp	r7, r1
 8011a7a:	fa1f fc81 	uxth.w	ip, r1
 8011a7e:	f8b5 10a6 	ldrh.w	r1, [r5, #166]	; 0xa6
 8011a82:	dc0f      	bgt.n	8011aa4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x204>
 8011a84:	9805      	ldr	r0, [sp, #20]
 8011a86:	f8a5 90a2 	strh.w	r9, [r5, #162]	; 0xa2
 8011a8a:	eba0 0c0c 	sub.w	ip, r0, ip
 8011a8e:	eba1 010c 	sub.w	r1, r1, ip
 8011a92:	f8a5 10a6 	strh.w	r1, [r5, #166]	; 0xa6
 8011a96:	4620      	mov	r0, r4
 8011a98:	9903      	ldr	r1, [sp, #12]
 8011a9a:	3d08      	subs	r5, #8
 8011a9c:	4604      	mov	r4, r0
 8011a9e:	3901      	subs	r1, #1
 8011aa0:	9103      	str	r1, [sp, #12]
 8011aa2:	e7cf      	b.n	8011a44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a4>
 8011aa4:	4461      	add	r1, ip
 8011aa6:	b209      	sxth	r1, r1
 8011aa8:	4549      	cmp	r1, r9
 8011aaa:	dcf5      	bgt.n	8011a98 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 8011aac:	9904      	ldr	r1, [sp, #16]
 8011aae:	eba1 0c0c 	sub.w	ip, r1, ip
 8011ab2:	f8a5 c0a6 	strh.w	ip, [r5, #166]	; 0xa6
 8011ab6:	e7ee      	b.n	8011a96 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 8011ab8:	428f      	cmp	r7, r1
 8011aba:	dced      	bgt.n	8011a98 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 8011abc:	f8b5 c0a6 	ldrh.w	ip, [r5, #166]	; 0xa6
 8011ac0:	4461      	add	r1, ip
 8011ac2:	b209      	sxth	r1, r1
 8011ac4:	4589      	cmp	r9, r1
 8011ac6:	dbe7      	blt.n	8011a98 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 8011ac8:	4576      	cmp	r6, lr
 8011aca:	fa1f fc8e 	uxth.w	ip, lr
 8011ace:	f8b5 10a4 	ldrh.w	r1, [r5, #164]	; 0xa4
 8011ad2:	dc08      	bgt.n	8011ae6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x246>
 8011ad4:	eba2 0c0c 	sub.w	ip, r2, ip
 8011ad8:	f8a5 80a0 	strh.w	r8, [r5, #160]	; 0xa0
 8011adc:	eba1 010c 	sub.w	r1, r1, ip
 8011ae0:	f8a5 10a4 	strh.w	r1, [r5, #164]	; 0xa4
 8011ae4:	e7d7      	b.n	8011a96 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 8011ae6:	4461      	add	r1, ip
 8011ae8:	b209      	sxth	r1, r1
 8011aea:	4588      	cmp	r8, r1
 8011aec:	dbd4      	blt.n	8011a98 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 8011aee:	eba3 0c0c 	sub.w	ip, r3, ip
 8011af2:	f8a5 c0a4 	strh.w	ip, [r5, #164]	; 0xa4
 8011af6:	e7ce      	b.n	8011a96 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 8011af8:	2400e072 	.word	0x2400e072
 8011afc:	2400e070 	.word	0x2400e070
 8011b00:	2c00      	cmp	r4, #0
 8011b02:	f000 8169 	beq.w	8011dd8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x538>
 8011b06:	9b00      	ldr	r3, [sp, #0]
 8011b08:	3301      	adds	r3, #1
 8011b0a:	f000 8165 	beq.w	8011dd8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x538>
 8011b0e:	f10a 04a0 	add.w	r4, sl, #160	; 0xa0
 8011b12:	9802      	ldr	r0, [sp, #8]
 8011b14:	4621      	mov	r1, r4
 8011b16:	f7ff fd3d 	bl	8011594 <_ZNK8touchgfx4Rect8includesERKS0_>
 8011b1a:	b120      	cbz	r0, 8011b26 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x286>
 8011b1c:	f8bd 1000 	ldrh.w	r1, [sp]
 8011b20:	9801      	ldr	r0, [sp, #4]
 8011b22:	f7ff fe79 	bl	8011818 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011b26:	9902      	ldr	r1, [sp, #8]
 8011b28:	4620      	mov	r0, r4
 8011b2a:	f7fc fe39 	bl	800e7a0 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8011b2e:	2800      	cmp	r0, #0
 8011b30:	f000 809b 	beq.w	8011c6a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ca>
 8011b34:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8011b38:	f8bd 7024 	ldrh.w	r7, [sp, #36]	; 0x24
 8011b3c:	fa1f f288 	uxth.w	r2, r8
 8011b40:	f9ba 40a0 	ldrsh.w	r4, [sl, #160]	; 0xa0
 8011b44:	f8ba 30a4 	ldrh.w	r3, [sl, #164]	; 0xa4
 8011b48:	19d5      	adds	r5, r2, r7
 8011b4a:	b2a1      	uxth	r1, r4
 8011b4c:	45a0      	cmp	r8, r4
 8011b4e:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8011b52:	fa1f f985 	uxth.w	r9, r5
 8011b56:	440b      	add	r3, r1
 8011b58:	f9ba 00a2 	ldrsh.w	r0, [sl, #162]	; 0xa2
 8011b5c:	fa0f f589 	sxth.w	r5, r9
 8011b60:	b29b      	uxth	r3, r3
 8011b62:	9503      	str	r5, [sp, #12]
 8011b64:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 8011b68:	9507      	str	r5, [sp, #28]
 8011b6a:	f340 809d 	ble.w	8011ca8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x408>
 8011b6e:	1a52      	subs	r2, r2, r1
 8011b70:	4584      	cmp	ip, r0
 8011b72:	fa0f fe83 	sxth.w	lr, r3
 8011b76:	b292      	uxth	r2, r2
 8011b78:	b215      	sxth	r5, r2
 8011b7a:	dd2f      	ble.n	8011bdc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x33c>
 8011b7c:	9e00      	ldr	r6, [sp, #0]
 8011b7e:	fa1f fc8c 	uxth.w	ip, ip
 8011b82:	b280      	uxth	r0, r0
 8011b84:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 8011b88:	eb0b 08c6 	add.w	r8, fp, r6, lsl #3
 8011b8c:	9e03      	ldr	r6, [sp, #12]
 8011b8e:	ebac 0300 	sub.w	r3, ip, r0
 8011b92:	448c      	add	ip, r1
 8011b94:	eba6 060e 	sub.w	r6, r6, lr
 8011b98:	f8b8 e0ae 	ldrh.w	lr, [r8, #174]	; 0xae
 8011b9c:	b29b      	uxth	r3, r3
 8011b9e:	4470      	add	r0, lr
 8011ba0:	fa0f fc8c 	sxth.w	ip, ip
 8011ba4:	b21c      	sxth	r4, r3
 8011ba6:	b200      	sxth	r0, r0
 8011ba8:	4366      	muls	r6, r4
 8011baa:	ebac 0000 	sub.w	r0, ip, r0
 8011bae:	4368      	muls	r0, r5
 8011bb0:	4286      	cmp	r6, r0
 8011bb2:	db09      	blt.n	8011bc8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 8011bb4:	f8b8 30a8 	ldrh.w	r3, [r8, #168]	; 0xa8
 8011bb8:	f8a8 40ae 	strh.w	r4, [r8, #174]	; 0xae
 8011bbc:	4417      	add	r7, r2
 8011bbe:	f8ad 3020 	strh.w	r3, [sp, #32]
 8011bc2:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 8011bc6:	e681      	b.n	80118cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011bc8:	440b      	add	r3, r1
 8011bca:	f8a8 50ac 	strh.w	r5, [r8, #172]	; 0xac
 8011bce:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8011bd2:	f8b8 30aa 	ldrh.w	r3, [r8, #170]	; 0xaa
 8011bd6:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8011bda:	e677      	b.n	80118cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011bdc:	9e03      	ldr	r6, [sp, #12]
 8011bde:	45b6      	cmp	lr, r6
 8011be0:	da28      	bge.n	8011c34 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x394>
 8011be2:	9b00      	ldr	r3, [sp, #0]
 8011be4:	eba6 060e 	sub.w	r6, r6, lr
 8011be8:	f8bd 4026 	ldrh.w	r4, [sp, #38]	; 0x26
 8011bec:	eb0b 01c3 	add.w	r1, fp, r3, lsl #3
 8011bf0:	eb04 030c 	add.w	r3, r4, ip
 8011bf4:	fa1f f883 	uxth.w	r8, r3
 8011bf8:	f8b1 30ae 	ldrh.w	r3, [r1, #174]	; 0xae
 8011bfc:	4403      	add	r3, r0
 8011bfe:	fa0f f988 	sxth.w	r9, r8
 8011c02:	eba0 000c 	sub.w	r0, r0, ip
 8011c06:	eba3 0308 	sub.w	r3, r3, r8
 8011c0a:	4368      	muls	r0, r5
 8011c0c:	b29b      	uxth	r3, r3
 8011c0e:	fa0f f883 	sxth.w	r8, r3
 8011c12:	fb08 f606 	mul.w	r6, r8, r6
 8011c16:	42b0      	cmp	r0, r6
 8011c18:	dc06      	bgt.n	8011c28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 8011c1a:	f8a1 90aa 	strh.w	r9, [r1, #170]	; 0xaa
 8011c1e:	f8a1 80ae 	strh.w	r8, [r1, #174]	; 0xae
 8011c22:	f8b1 30a8 	ldrh.w	r3, [r1, #168]	; 0xa8
 8011c26:	e7c9      	b.n	8011bbc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31c>
 8011c28:	4423      	add	r3, r4
 8011c2a:	f8a1 50ac 	strh.w	r5, [r1, #172]	; 0xac
 8011c2e:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8011c32:	e64b      	b.n	80118cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011c34:	eba3 0309 	sub.w	r3, r3, r9
 8011c38:	9807      	ldr	r0, [sp, #28]
 8011c3a:	b29b      	uxth	r3, r3
 8011c3c:	2806      	cmp	r0, #6
 8011c3e:	fa0f fc83 	sxth.w	ip, r3
 8011c42:	d818      	bhi.n	8011c76 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d6>
 8011c44:	4652      	mov	r2, sl
 8011c46:	ab0a      	add	r3, sp, #40	; 0x28
 8011c48:	f852 0fa0 	ldr.w	r0, [r2, #160]!
 8011c4c:	6851      	ldr	r1, [r2, #4]
 8011c4e:	f8aa c0a4 	strh.w	ip, [sl, #164]	; 0xa4
 8011c52:	c303      	stmia	r3!, {r0, r1}
 8011c54:	9b03      	ldr	r3, [sp, #12]
 8011c56:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
 8011c5a:	f8aa 30a0 	strh.w	r3, [sl, #160]	; 0xa0
 8011c5e:	ab0a      	add	r3, sp, #40	; 0x28
 8011c60:	9801      	ldr	r0, [sp, #4]
 8011c62:	e893 0006 	ldmia.w	r3, {r1, r2}
 8011c66:	f7ff fdf9 	bl	801185c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 8011c6a:	9b00      	ldr	r3, [sp, #0]
 8011c6c:	f1aa 0a08 	sub.w	sl, sl, #8
 8011c70:	3b01      	subs	r3, #1
 8011c72:	9300      	str	r3, [sp, #0]
 8011c74:	e747      	b.n	8011b06 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x266>
 8011c76:	9800      	ldr	r0, [sp, #0]
 8011c78:	45ac      	cmp	ip, r5
 8011c7a:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 8011c7e:	db0c      	blt.n	8011c9a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fa>
 8011c80:	4417      	add	r7, r2
 8011c82:	4458      	add	r0, fp
 8011c84:	f8ad 4020 	strh.w	r4, [sp, #32]
 8011c88:	b2bf      	uxth	r7, r7
 8011c8a:	f8a0 c0ac 	strh.w	ip, [r0, #172]	; 0xac
 8011c8e:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 8011c92:	440f      	add	r7, r1
 8011c94:	f8a0 70a8 	strh.w	r7, [r0, #168]	; 0xa8
 8011c98:	e618      	b.n	80118cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011c9a:	4458      	add	r0, fp
 8011c9c:	f8a0 50ac 	strh.w	r5, [r0, #172]	; 0xac
 8011ca0:	443b      	add	r3, r7
 8011ca2:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8011ca6:	e611      	b.n	80118cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011ca8:	fa1f f18c 	uxth.w	r1, ip
 8011cac:	f8bd 5026 	ldrh.w	r5, [sp, #38]	; 0x26
 8011cb0:	b282      	uxth	r2, r0
 8011cb2:	4584      	cmp	ip, r0
 8011cb4:	eb01 0e05 	add.w	lr, r1, r5
 8011cb8:	9204      	str	r2, [sp, #16]
 8011cba:	fa1f fe8e 	uxth.w	lr, lr
 8011cbe:	9e04      	ldr	r6, [sp, #16]
 8011cc0:	fa0f f28e 	sxth.w	r2, lr
 8011cc4:	9205      	str	r2, [sp, #20]
 8011cc6:	f8ba 20a6 	ldrh.w	r2, [sl, #166]	; 0xa6
 8011cca:	4432      	add	r2, r6
 8011ccc:	b292      	uxth	r2, r2
 8011cce:	9206      	str	r2, [sp, #24]
 8011cd0:	da26      	bge.n	8011d20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x480>
 8011cd2:	eba3 0309 	sub.w	r3, r3, r9
 8011cd6:	eba2 020e 	sub.w	r2, r2, lr
 8011cda:	eba0 000c 	sub.w	r0, r0, ip
 8011cde:	eba4 0408 	sub.w	r4, r4, r8
 8011ce2:	b29b      	uxth	r3, r3
 8011ce4:	b292      	uxth	r2, r2
 8011ce6:	fa0f fa83 	sxth.w	sl, r3
 8011cea:	b211      	sxth	r1, r2
 8011cec:	fb0a f000 	mul.w	r0, sl, r0
 8011cf0:	434c      	muls	r4, r1
 8011cf2:	42a0      	cmp	r0, r4
 8011cf4:	9800      	ldr	r0, [sp, #0]
 8011cf6:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 8011cfa:	dc06      	bgt.n	8011d0a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
 8011cfc:	4458      	add	r0, fp
 8011cfe:	9a05      	ldr	r2, [sp, #20]
 8011d00:	f8a0 10ae 	strh.w	r1, [r0, #174]	; 0xae
 8011d04:	f8a0 20aa 	strh.w	r2, [r0, #170]	; 0xaa
 8011d08:	e7ca      	b.n	8011ca0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x400>
 8011d0a:	eb0b 0300 	add.w	r3, fp, r0
 8011d0e:	9903      	ldr	r1, [sp, #12]
 8011d10:	f8a3 a0ac 	strh.w	sl, [r3, #172]	; 0xac
 8011d14:	f8a3 10a8 	strh.w	r1, [r3, #168]	; 0xa8
 8011d18:	442a      	add	r2, r5
 8011d1a:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 8011d1e:	e5d5      	b.n	80118cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011d20:	9e04      	ldr	r6, [sp, #16]
 8011d22:	9a03      	ldr	r2, [sp, #12]
 8011d24:	1b89      	subs	r1, r1, r6
 8011d26:	b21e      	sxth	r6, r3
 8011d28:	b289      	uxth	r1, r1
 8011d2a:	4296      	cmp	r6, r2
 8011d2c:	fa0f fc81 	sxth.w	ip, r1
 8011d30:	dd25      	ble.n	8011d7e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4de>
 8011d32:	eba3 0309 	sub.w	r3, r3, r9
 8011d36:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 8011d3a:	9e05      	ldr	r6, [sp, #20]
 8011d3c:	eba4 0408 	sub.w	r4, r4, r8
 8011d40:	b29b      	uxth	r3, r3
 8011d42:	eba6 0902 	sub.w	r9, r6, r2
 8011d46:	fb0c f404 	mul.w	r4, ip, r4
 8011d4a:	b218      	sxth	r0, r3
 8011d4c:	9a00      	ldr	r2, [sp, #0]
 8011d4e:	fb00 f909 	mul.w	r9, r0, r9
 8011d52:	00d2      	lsls	r2, r2, #3
 8011d54:	454c      	cmp	r4, r9
 8011d56:	db03      	blt.n	8011d60 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c0>
 8011d58:	445a      	add	r2, fp
 8011d5a:	f8a2 c0ae 	strh.w	ip, [r2, #174]	; 0xae
 8011d5e:	e79f      	b.n	8011ca0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x400>
 8011d60:	eb0b 0302 	add.w	r3, fp, r2
 8011d64:	9a03      	ldr	r2, [sp, #12]
 8011d66:	4429      	add	r1, r5
 8011d68:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
 8011d6c:	f8a3 00ac 	strh.w	r0, [r3, #172]	; 0xac
 8011d70:	f8b3 30aa 	ldrh.w	r3, [r3, #170]	; 0xaa
 8011d74:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 8011d78:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8011d7c:	e5a6      	b.n	80118cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011d7e:	9b06      	ldr	r3, [sp, #24]
 8011d80:	9c07      	ldr	r4, [sp, #28]
 8011d82:	eba3 020e 	sub.w	r2, r3, lr
 8011d86:	2c06      	cmp	r4, #6
 8011d88:	b292      	uxth	r2, r2
 8011d8a:	b213      	sxth	r3, r2
 8011d8c:	d80d      	bhi.n	8011daa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50a>
 8011d8e:	4651      	mov	r1, sl
 8011d90:	aa0a      	add	r2, sp, #40	; 0x28
 8011d92:	f851 0fa0 	ldr.w	r0, [r1, #160]!
 8011d96:	6849      	ldr	r1, [r1, #4]
 8011d98:	f8aa 30a6 	strh.w	r3, [sl, #166]	; 0xa6
 8011d9c:	9b05      	ldr	r3, [sp, #20]
 8011d9e:	c203      	stmia	r2!, {r0, r1}
 8011da0:	f8aa 30a2 	strh.w	r3, [sl, #162]	; 0xa2
 8011da4:	f8ad c02e 	strh.w	ip, [sp, #46]	; 0x2e
 8011da8:	e759      	b.n	8011c5e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8011daa:	9c00      	ldr	r4, [sp, #0]
 8011dac:	4563      	cmp	r3, ip
 8011dae:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8011db2:	db0d      	blt.n	8011dd0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x530>
 8011db4:	4429      	add	r1, r5
 8011db6:	9a04      	ldr	r2, [sp, #16]
 8011db8:	445c      	add	r4, fp
 8011dba:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8011dbe:	b289      	uxth	r1, r1
 8011dc0:	f8a4 30ae 	strh.w	r3, [r4, #174]	; 0xae
 8011dc4:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 8011dc8:	4411      	add	r1, r2
 8011dca:	f8a4 10aa 	strh.w	r1, [r4, #170]	; 0xaa
 8011dce:	e57d      	b.n	80118cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011dd0:	445c      	add	r4, fp
 8011dd2:	f8a4 c0ae 	strh.w	ip, [r4, #174]	; 0xae
 8011dd6:	e79f      	b.n	8011d18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x478>
 8011dd8:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 8011ddc:	2f07      	cmp	r7, #7
 8011dde:	d806      	bhi.n	8011dee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x54e>
 8011de0:	ab08      	add	r3, sp, #32
 8011de2:	9801      	ldr	r0, [sp, #4]
 8011de4:	e893 0006 	ldmia.w	r3, {r1, r2}
 8011de8:	f7ff fd38 	bl	801185c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 8011dec:	e5d8      	b.n	80119a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8011dee:	f107 39ff 	add.w	r9, r7, #4294967295
 8011df2:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 8011df6:	eb0b 07c7 	add.w	r7, fp, r7, lsl #3
 8011dfa:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 8011dfe:	f04f 35ff 	mov.w	r5, #4294967295
 8011e02:	2400      	movs	r4, #0
 8011e04:	9304      	str	r3, [sp, #16]
 8011e06:	f9b7 30a4 	ldrsh.w	r3, [r7, #164]	; 0xa4
 8011e0a:	f109 32ff 	add.w	r2, r9, #4294967295
 8011e0e:	9300      	str	r3, [sp, #0]
 8011e10:	4690      	mov	r8, r2
 8011e12:	f9b7 30a6 	ldrsh.w	r3, [r7, #166]	; 0xa6
 8011e16:	9303      	str	r3, [sp, #12]
 8011e18:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 8011e1c:	f1b8 3fff 	cmp.w	r8, #4294967295
 8011e20:	6818      	ldr	r0, [r3, #0]
 8011e22:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 8011e26:	9206      	str	r2, [sp, #24]
 8011e28:	bf16      	itet	ne
 8011e2a:	9904      	ldrne	r1, [sp, #16]
 8011e2c:	f8dd e008 	ldreq.w	lr, [sp, #8]
 8011e30:	eb01 0ec8 	addne.w	lr, r1, r8, lsl #3
 8011e34:	9305      	str	r3, [sp, #20]
 8011e36:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8011e3a:	f8be 6004 	ldrh.w	r6, [lr, #4]
 8011e3e:	fb16 f601 	smulbb	r6, r6, r1
 8011e42:	6859      	ldr	r1, [r3, #4]
 8011e44:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8011e48:	4671      	mov	r1, lr
 8011e4a:	a80a      	add	r0, sp, #40	; 0x28
 8011e4c:	f7ff fbc8 	bl	80115e0 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8011e50:	f8bd 002e 	ldrh.w	r0, [sp, #46]	; 0x2e
 8011e54:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8011e58:	9b03      	ldr	r3, [sp, #12]
 8011e5a:	9a00      	ldr	r2, [sp, #0]
 8011e5c:	fb11 f100 	smulbb	r1, r1, r0
 8011e60:	2008      	movs	r0, #8
 8011e62:	fb02 6603 	mla	r6, r2, r3, r6
 8011e66:	1b8e      	subs	r6, r1, r6
 8011e68:	fb91 f1f0 	sdiv	r1, r1, r0
 8011e6c:	42b1      	cmp	r1, r6
 8011e6e:	dc21      	bgt.n	8011eb4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x614>
 8011e70:	4556      	cmp	r6, sl
 8011e72:	e9dd 3205 	ldrd	r3, r2, [sp, #20]
 8011e76:	da03      	bge.n	8011e80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e0>
 8011e78:	b1e6      	cbz	r6, 8011eb4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x614>
 8011e7a:	46b2      	mov	sl, r6
 8011e7c:	4645      	mov	r5, r8
 8011e7e:	464c      	mov	r4, r9
 8011e80:	f108 38ff 	add.w	r8, r8, #4294967295
 8011e84:	f118 0f02 	cmn.w	r8, #2
 8011e88:	d1c8      	bne.n	8011e1c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57c>
 8011e8a:	f1b2 3fff 	cmp.w	r2, #4294967295
 8011e8e:	f1a7 0708 	sub.w	r7, r7, #8
 8011e92:	4691      	mov	r9, r2
 8011e94:	d1b7      	bne.n	8011e06 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x566>
 8011e96:	9b01      	ldr	r3, [sp, #4]
 8011e98:	b2a6      	uxth	r6, r4
 8011e9a:	00e4      	lsls	r4, r4, #3
 8011e9c:	1918      	adds	r0, r3, r4
 8011e9e:	1c6b      	adds	r3, r5, #1
 8011ea0:	d10b      	bne.n	8011eba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x61a>
 8011ea2:	4601      	mov	r1, r0
 8011ea4:	9802      	ldr	r0, [sp, #8]
 8011ea6:	f7ff fb9b 	bl	80115e0 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8011eaa:	4631      	mov	r1, r6
 8011eac:	9801      	ldr	r0, [sp, #4]
 8011eae:	f7ff fcb3 	bl	8011818 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011eb2:	e50b      	b.n	80118cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011eb4:	4645      	mov	r5, r8
 8011eb6:	464c      	mov	r4, r9
 8011eb8:	e7ed      	b.n	8011e96 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5f6>
 8011eba:	9b01      	ldr	r3, [sp, #4]
 8011ebc:	00ed      	lsls	r5, r5, #3
 8011ebe:	445c      	add	r4, fp
 8011ec0:	1959      	adds	r1, r3, r5
 8011ec2:	445d      	add	r5, fp
 8011ec4:	f7ff fb8c 	bl	80115e0 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8011ec8:	9b02      	ldr	r3, [sp, #8]
 8011eca:	cb03      	ldmia	r3!, {r0, r1}
 8011ecc:	9b02      	ldr	r3, [sp, #8]
 8011ece:	f8c5 00a8 	str.w	r0, [r5, #168]	; 0xa8
 8011ed2:	f8c5 10ac 	str.w	r1, [r5, #172]	; 0xac
 8011ed6:	f854 0fa8 	ldr.w	r0, [r4, #168]!
 8011eda:	6861      	ldr	r1, [r4, #4]
 8011edc:	c303      	stmia	r3!, {r0, r1}
 8011ede:	e7e4      	b.n	8011eaa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x60a>

08011ee0 <_ZN8touchgfx11Application10invalidateEv>:
 8011ee0:	4b09      	ldr	r3, [pc, #36]	; (8011f08 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 8011ee2:	b082      	sub	sp, #8
 8011ee4:	2100      	movs	r1, #0
 8011ee6:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011eea:	4b08      	ldr	r3, [pc, #32]	; (8011f0c <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8011eec:	9100      	str	r1, [sp, #0]
 8011eee:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011ef2:	f8ad 2004 	strh.w	r2, [sp, #4]
 8011ef6:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011efa:	ab02      	add	r3, sp, #8
 8011efc:	e913 0006 	ldmdb	r3, {r1, r2}
 8011f00:	b002      	add	sp, #8
 8011f02:	f7ff bccd 	b.w	80118a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8011f06:	bf00      	nop
 8011f08:	2400e070 	.word	0x2400e070
 8011f0c:	2400e072 	.word	0x2400e072

08011f10 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8011f10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011f14:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 8011f18:	b09b      	sub	sp, #108	; 0x6c
 8011f1a:	4604      	mov	r4, r0
 8011f1c:	4630      	mov	r0, r6
 8011f1e:	f7fa fbc4 	bl	800c6aa <_ZNK8touchgfx4Rect7isEmptyEv>
 8011f22:	4605      	mov	r5, r0
 8011f24:	b940      	cbnz	r0, 8011f38 <_ZN8touchgfx11Application15drawCachedAreasEv+0x28>
 8011f26:	4620      	mov	r0, r4
 8011f28:	e896 0006 	ldmia.w	r6, {r1, r2}
 8011f2c:	f7ff fcb8 	bl	80118a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8011f30:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 8011f34:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8011f38:	4bc6      	ldr	r3, [pc, #792]	; (8012254 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 8011f3a:	681b      	ldr	r3, [r3, #0]
 8011f3c:	b33b      	cbz	r3, 8011f8e <_ZN8touchgfx11Application15drawCachedAreasEv+0x7e>
 8011f3e:	4dc6      	ldr	r5, [pc, #792]	; (8012258 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8011f40:	4628      	mov	r0, r5
 8011f42:	f7fa fbb2 	bl	800c6aa <_ZNK8touchgfx4Rect7isEmptyEv>
 8011f46:	4606      	mov	r6, r0
 8011f48:	bb08      	cbnz	r0, 8011f8e <_ZN8touchgfx11Application15drawCachedAreasEv+0x7e>
 8011f4a:	4628      	mov	r0, r5
 8011f4c:	f7ff f958 	bl	8011200 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8011f50:	6829      	ldr	r1, [r5, #0]
 8011f52:	686a      	ldr	r2, [r5, #4]
 8011f54:	4620      	mov	r0, r4
 8011f56:	f7ff fca3 	bl	80118a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8011f5a:	802e      	strh	r6, [r5, #0]
 8011f5c:	806e      	strh	r6, [r5, #2]
 8011f5e:	80ae      	strh	r6, [r5, #4]
 8011f60:	80ee      	strh	r6, [r5, #6]
 8011f62:	4dbe      	ldr	r5, [pc, #760]	; (801225c <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8011f64:	a809      	add	r0, sp, #36	; 0x24
 8011f66:	f7ff fc03 	bl	8011770 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8011f6a:	882f      	ldrh	r7, [r5, #0]
 8011f6c:	463e      	mov	r6, r7
 8011f6e:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8011f72:	42b3      	cmp	r3, r6
 8011f74:	d912      	bls.n	8011f9c <_ZN8touchgfx11Application15drawCachedAreasEv+0x8c>
 8011f76:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8011f7a:	3601      	adds	r6, #1
 8011f7c:	a809      	add	r0, sp, #36	; 0x24
 8011f7e:	f8d3 10a8 	ldr.w	r1, [r3, #168]	; 0xa8
 8011f82:	b2b6      	uxth	r6, r6
 8011f84:	f8d3 20ac 	ldr.w	r2, [r3, #172]	; 0xac
 8011f88:	f7ff fc68 	bl	801185c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 8011f8c:	e7ef      	b.n	8011f6e <_ZN8touchgfx11Application15drawCachedAreasEv+0x5e>
 8011f8e:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8011f92:	2b00      	cmp	r3, #0
 8011f94:	d1e5      	bne.n	8011f62 <_ZN8touchgfx11Application15drawCachedAreasEv+0x52>
 8011f96:	b01b      	add	sp, #108	; 0x6c
 8011f98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011f9c:	463e      	mov	r6, r7
 8011f9e:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 8011fa2:	42b3      	cmp	r3, r6
 8011fa4:	d90b      	bls.n	8011fbe <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 8011fa6:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8011faa:	3601      	adds	r6, #1
 8011fac:	4620      	mov	r0, r4
 8011fae:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 8011fb2:	b2b6      	uxth	r6, r6
 8011fb4:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 8011fb8:	f7ff fc72 	bl	80118a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8011fbc:	e7ef      	b.n	8011f9e <_ZN8touchgfx11Application15drawCachedAreasEv+0x8e>
 8011fbe:	4ea8      	ldr	r6, [pc, #672]	; (8012260 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8011fc0:	6833      	ldr	r3, [r6, #0]
 8011fc2:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8011fc6:	2b01      	cmp	r3, #1
 8011fc8:	f040 80d2 	bne.w	8012170 <_ZN8touchgfx11Application15drawCachedAreasEv+0x260>
 8011fcc:	eb04 03c7 	add.w	r3, r4, r7, lsl #3
 8011fd0:	4639      	mov	r1, r7
 8011fd2:	f8b4 c0e8 	ldrh.w	ip, [r4, #232]	; 0xe8
 8011fd6:	2700      	movs	r7, #0
 8011fd8:	33aa      	adds	r3, #170	; 0xaa
 8011fda:	458c      	cmp	ip, r1
 8011fdc:	f103 0308 	add.w	r3, r3, #8
 8011fe0:	dd0a      	ble.n	8011ff8 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe8>
 8011fe2:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 8011fe6:	3101      	adds	r1, #1
 8011fe8:	f833 0c04 	ldrh.w	r0, [r3, #-4]
 8011fec:	4402      	add	r2, r0
 8011fee:	b212      	sxth	r2, r2
 8011ff0:	4297      	cmp	r7, r2
 8011ff2:	bfb8      	it	lt
 8011ff4:	4617      	movlt	r7, r2
 8011ff6:	e7f0      	b.n	8011fda <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
 8011ff8:	4b9a      	ldr	r3, [pc, #616]	; (8012264 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8011ffa:	f8b3 9000 	ldrh.w	r9, [r3]
 8011ffe:	2300      	movs	r3, #0
 8012000:	f1b9 0f0f 	cmp.w	r9, #15
 8012004:	bf8c      	ite	hi
 8012006:	ea4f 09d9 	movhi.w	r9, r9, lsr #3
 801200a:	f04f 0901 	movls.w	r9, #1
 801200e:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8012012:	f8bd 801a 	ldrh.w	r8, [sp, #26]
 8012016:	f8bd 0016 	ldrh.w	r0, [sp, #22]
 801201a:	4440      	add	r0, r8
 801201c:	fa0f f880 	sxth.w	r8, r0
 8012020:	6830      	ldr	r0, [r6, #0]
 8012022:	4547      	cmp	r7, r8
 8012024:	6803      	ldr	r3, [r0, #0]
 8012026:	f340 8086 	ble.w	8012136 <_ZN8touchgfx11Application15drawCachedAreasEv+0x226>
 801202a:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 801202e:	4798      	blx	r3
 8012030:	eb08 0309 	add.w	r3, r8, r9
 8012034:	4298      	cmp	r0, r3
 8012036:	da08      	bge.n	801204a <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 8012038:	4287      	cmp	r7, r0
 801203a:	dd06      	ble.n	801204a <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 801203c:	4580      	cmp	r8, r0
 801203e:	dd70      	ble.n	8012122 <_ZN8touchgfx11Application15drawCachedAreasEv+0x212>
 8012040:	f1b8 0f00 	cmp.w	r8, #0
 8012044:	dd6d      	ble.n	8012122 <_ZN8touchgfx11Application15drawCachedAreasEv+0x212>
 8012046:	4638      	mov	r0, r7
 8012048:	e004      	b.n	8012054 <_ZN8touchgfx11Application15drawCachedAreasEv+0x144>
 801204a:	4580      	cmp	r8, r0
 801204c:	dcfb      	bgt.n	8012046 <_ZN8touchgfx11Application15drawCachedAreasEv+0x136>
 801204e:	42b8      	cmp	r0, r7
 8012050:	bfa8      	it	ge
 8012052:	4638      	movge	r0, r7
 8012054:	4b84      	ldr	r3, [pc, #528]	; (8012268 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8012056:	eba0 0008 	sub.w	r0, r0, r8
 801205a:	2200      	movs	r2, #0
 801205c:	f8ad 8016 	strh.w	r8, [sp, #22]
 8012060:	f9b3 3000 	ldrsh.w	r3, [r3]
 8012064:	f8b5 8000 	ldrh.w	r8, [r5]
 8012068:	f8ad 2014 	strh.w	r2, [sp, #20]
 801206c:	f8ad 3018 	strh.w	r3, [sp, #24]
 8012070:	f8ad 001a 	strh.w	r0, [sp, #26]
 8012074:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8012078:	4543      	cmp	r3, r8
 801207a:	d9ca      	bls.n	8012012 <_ZN8touchgfx11Application15drawCachedAreasEv+0x102>
 801207c:	eb04 02c8 	add.w	r2, r4, r8, lsl #3
 8012080:	ab07      	add	r3, sp, #28
 8012082:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 8012086:	6851      	ldr	r1, [r2, #4]
 8012088:	c303      	stmia	r3!, {r0, r1}
 801208a:	a905      	add	r1, sp, #20
 801208c:	a807      	add	r0, sp, #28
 801208e:	f7fc fb87 	bl	800e7a0 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8012092:	2800      	cmp	r0, #0
 8012094:	d04c      	beq.n	8012130 <_ZN8touchgfx11Application15drawCachedAreasEv+0x220>
 8012096:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 801209a:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 801209e:	f8bd a020 	ldrh.w	sl, [sp, #32]
 80120a2:	4686      	mov	lr, r0
 80120a4:	4290      	cmp	r0, r2
 80120a6:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 80120aa:	4450      	add	r0, sl
 80120ac:	f8bd a018 	ldrh.w	sl, [sp, #24]
 80120b0:	bfb8      	it	lt
 80120b2:	4696      	movlt	lr, r2
 80120b4:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80120b8:	4452      	add	r2, sl
 80120ba:	b280      	uxth	r0, r0
 80120bc:	4299      	cmp	r1, r3
 80120be:	468c      	mov	ip, r1
 80120c0:	b292      	uxth	r2, r2
 80120c2:	f8ad e01c 	strh.w	lr, [sp, #28]
 80120c6:	fa0f fb80 	sxth.w	fp, r0
 80120ca:	bfb8      	it	lt
 80120cc:	469c      	movlt	ip, r3
 80120ce:	fa0f fa82 	sxth.w	sl, r2
 80120d2:	f8ad c01e 	strh.w	ip, [sp, #30]
 80120d6:	45d3      	cmp	fp, sl
 80120d8:	bfb8      	it	lt
 80120da:	4602      	movlt	r2, r0
 80120dc:	eba2 020e 	sub.w	r2, r2, lr
 80120e0:	f8ad 2020 	strh.w	r2, [sp, #32]
 80120e4:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 80120e8:	4411      	add	r1, r2
 80120ea:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80120ee:	4413      	add	r3, r2
 80120f0:	b289      	uxth	r1, r1
 80120f2:	b29b      	uxth	r3, r3
 80120f4:	b208      	sxth	r0, r1
 80120f6:	b21a      	sxth	r2, r3
 80120f8:	4290      	cmp	r0, r2
 80120fa:	bfb8      	it	lt
 80120fc:	460b      	movlt	r3, r1
 80120fe:	eba3 030c 	sub.w	r3, r3, ip
 8012102:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8012106:	a807      	add	r0, sp, #28
 8012108:	f7fa facf 	bl	800c6aa <_ZNK8touchgfx4Rect7isEmptyEv>
 801210c:	b920      	cbnz	r0, 8012118 <_ZN8touchgfx11Application15drawCachedAreasEv+0x208>
 801210e:	6823      	ldr	r3, [r4, #0]
 8012110:	a907      	add	r1, sp, #28
 8012112:	4620      	mov	r0, r4
 8012114:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8012116:	4798      	blx	r3
 8012118:	f108 0801 	add.w	r8, r8, #1
 801211c:	fa1f f888 	uxth.w	r8, r8
 8012120:	e7a8      	b.n	8012074 <_ZN8touchgfx11Application15drawCachedAreasEv+0x164>
 8012122:	6830      	ldr	r0, [r6, #0]
 8012124:	2101      	movs	r1, #1
 8012126:	6803      	ldr	r3, [r0, #0]
 8012128:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 801212c:	4798      	blx	r3
 801212e:	e770      	b.n	8012012 <_ZN8touchgfx11Application15drawCachedAreasEv+0x102>
 8012130:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8012134:	e7e7      	b.n	8012106 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1f6>
 8012136:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012138:	4798      	blx	r3
 801213a:	4b4c      	ldr	r3, [pc, #304]	; (801226c <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 801213c:	781b      	ldrb	r3, [r3, #0]
 801213e:	2b00      	cmp	r3, #0
 8012140:	f43f af29 	beq.w	8011f96 <_ZN8touchgfx11Application15drawCachedAreasEv+0x86>
 8012144:	2300      	movs	r3, #0
 8012146:	882d      	ldrh	r5, [r5, #0]
 8012148:	34ea      	adds	r4, #234	; 0xea
 801214a:	f8a4 3040 	strh.w	r3, [r4, #64]	; 0x40
 801214e:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 8012152:	42ab      	cmp	r3, r5
 8012154:	f67f af1f 	bls.w	8011f96 <_ZN8touchgfx11Application15drawCachedAreasEv+0x86>
 8012158:	ab1a      	add	r3, sp, #104	; 0x68
 801215a:	4620      	mov	r0, r4
 801215c:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8012160:	3501      	adds	r5, #1
 8012162:	3b44      	subs	r3, #68	; 0x44
 8012164:	b2ad      	uxth	r5, r5
 8012166:	e893 0006 	ldmia.w	r3, {r1, r2}
 801216a:	f7ff fb77 	bl	801185c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 801216e:	e7ee      	b.n	801214e <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8012170:	2b02      	cmp	r3, #2
 8012172:	f040 8137 	bne.w	80123e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4d4>
 8012176:	4b3e      	ldr	r3, [pc, #248]	; (8012270 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 8012178:	781b      	ldrb	r3, [r3, #0]
 801217a:	2b01      	cmp	r3, #1
 801217c:	d02c      	beq.n	80121d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c8>
 801217e:	f104 0aa8 	add.w	sl, r4, #168	; 0xa8
 8012182:	882a      	ldrh	r2, [r5, #0]
 8012184:	f8b4 10e8 	ldrh.w	r1, [r4, #232]	; 0xe8
 8012188:	3201      	adds	r2, #1
 801218a:	b292      	uxth	r2, r2
 801218c:	2900      	cmp	r1, #0
 801218e:	d0d4      	beq.n	801213a <_ZN8touchgfx11Application15drawCachedAreasEv+0x22a>
 8012190:	f8b4 70aa 	ldrh.w	r7, [r4, #170]	; 0xaa
 8012194:	4610      	mov	r0, r2
 8012196:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 801219a:	f04f 0900 	mov.w	r9, #0
 801219e:	441f      	add	r7, r3
 80121a0:	b23f      	sxth	r7, r7
 80121a2:	b283      	uxth	r3, r0
 80121a4:	ea4f 08c9 	mov.w	r8, r9, lsl #3
 80121a8:	4299      	cmp	r1, r3
 80121aa:	f240 80c5 	bls.w	8012338 <_ZN8touchgfx11Application15drawCachedAreasEv+0x428>
 80121ae:	44a0      	add	r8, r4
 80121b0:	eb04 0bc0 	add.w	fp, r4, r0, lsl #3
 80121b4:	4684      	mov	ip, r0
 80121b6:	f9b8 30aa 	ldrsh.w	r3, [r8, #170]	; 0xaa
 80121ba:	f9bb e0aa 	ldrsh.w	lr, [fp, #170]	; 0xaa
 80121be:	4573      	cmp	r3, lr
 80121c0:	f340 80a7 	ble.w	8012312 <_ZN8touchgfx11Application15drawCachedAreasEv+0x402>
 80121c4:	f8bb 70ae 	ldrh.w	r7, [fp, #174]	; 0xae
 80121c8:	4477      	add	r7, lr
 80121ca:	b23f      	sxth	r7, r7
 80121cc:	429f      	cmp	r7, r3
 80121ce:	bfa8      	it	ge
 80121d0:	461f      	movge	r7, r3
 80121d2:	3001      	adds	r0, #1
 80121d4:	46e1      	mov	r9, ip
 80121d6:	e7e4      	b.n	80121a2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x292>
 80121d8:	f104 09a8 	add.w	r9, r4, #168	; 0xa8
 80121dc:	f8b4 b0e8 	ldrh.w	fp, [r4, #232]	; 0xe8
 80121e0:	f1bb 0f00 	cmp.w	fp, #0
 80121e4:	d0a9      	beq.n	801213a <_ZN8touchgfx11Application15drawCachedAreasEv+0x22a>
 80121e6:	882b      	ldrh	r3, [r5, #0]
 80121e8:	f04f 0800 	mov.w	r8, #0
 80121ec:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 80121f0:	3301      	adds	r3, #1
 80121f2:	b29b      	uxth	r3, r3
 80121f4:	b299      	uxth	r1, r3
 80121f6:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 80121fa:	458b      	cmp	fp, r1
 80121fc:	d93a      	bls.n	8012274 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 80121fe:	4427      	add	r7, r4
 8012200:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 8012204:	469c      	mov	ip, r3
 8012206:	f8b7 10ac 	ldrh.w	r1, [r7, #172]	; 0xac
 801220a:	f8b7 00a8 	ldrh.w	r0, [r7, #168]	; 0xa8
 801220e:	f9ba e0a8 	ldrsh.w	lr, [sl, #168]	; 0xa8
 8012212:	4408      	add	r0, r1
 8012214:	f8ba 10ac 	ldrh.w	r1, [sl, #172]	; 0xac
 8012218:	4471      	add	r1, lr
 801221a:	b200      	sxth	r0, r0
 801221c:	b209      	sxth	r1, r1
 801221e:	4288      	cmp	r0, r1
 8012220:	da06      	bge.n	8012230 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
 8012222:	4586      	cmp	lr, r0
 8012224:	4672      	mov	r2, lr
 8012226:	bfb8      	it	lt
 8012228:	4602      	movlt	r2, r0
 801222a:	3301      	adds	r3, #1
 801222c:	46e0      	mov	r8, ip
 801222e:	e7e1      	b.n	80121f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e4>
 8012230:	d10b      	bne.n	801224a <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 8012232:	f9b7 c0ae 	ldrsh.w	ip, [r7, #174]	; 0xae
 8012236:	f9ba 10ae 	ldrsh.w	r1, [sl, #174]	; 0xae
 801223a:	458c      	cmp	ip, r1
 801223c:	bfb4      	ite	lt
 801223e:	469c      	movlt	ip, r3
 8012240:	46c4      	movge	ip, r8
 8012242:	4572      	cmp	r2, lr
 8012244:	bfb8      	it	lt
 8012246:	4672      	movlt	r2, lr
 8012248:	e7ef      	b.n	801222a <_ZN8touchgfx11Application15drawCachedAreasEv+0x31a>
 801224a:	428a      	cmp	r2, r1
 801224c:	46c4      	mov	ip, r8
 801224e:	bfb8      	it	lt
 8012250:	460a      	movlt	r2, r1
 8012252:	e7ea      	b.n	801222a <_ZN8touchgfx11Application15drawCachedAreasEv+0x31a>
 8012254:	2400e0d4 	.word	0x2400e0d4
 8012258:	2400e0e0 	.word	0x2400e0e0
 801225c:	2400005c 	.word	0x2400005c
 8012260:	2400e07c 	.word	0x2400e07c
 8012264:	2400e072 	.word	0x2400e072
 8012268:	2400e070 	.word	0x2400e070
 801226c:	2400e07a 	.word	0x2400e07a
 8012270:	2400e074 	.word	0x2400e074
 8012274:	19e1      	adds	r1, r4, r7
 8012276:	ab07      	add	r3, sp, #28
 8012278:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 801227c:	6849      	ldr	r1, [r1, #4]
 801227e:	c303      	stmia	r3!, {r0, r1}
 8012280:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8012284:	a807      	add	r0, sp, #28
 8012286:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 801228a:	2b13      	cmp	r3, #19
 801228c:	440b      	add	r3, r1
 801228e:	bfd8      	it	le
 8012290:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8012294:	1a9b      	subs	r3, r3, r2
 8012296:	f8ad 201c 	strh.w	r2, [sp, #28]
 801229a:	f8ad 3020 	strh.w	r3, [sp, #32]
 801229e:	f7fe ffc9 	bl	8011234 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80122a2:	a807      	add	r0, sp, #28
 80122a4:	f7fa fa01 	bl	800c6aa <_ZNK8touchgfx4Rect7isEmptyEv>
 80122a8:	2800      	cmp	r0, #0
 80122aa:	d197      	bne.n	80121dc <_ZN8touchgfx11Application15drawCachedAreasEv+0x2cc>
 80122ac:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 80122b0:	4427      	add	r7, r4
 80122b2:	6830      	ldr	r0, [r6, #0]
 80122b4:	f1bc 0f14 	cmp.w	ip, #20
 80122b8:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80122bc:	f8d0 e000 	ldr.w	lr, [r0]
 80122c0:	bfa8      	it	ge
 80122c2:	f04f 0c14 	movge.w	ip, #20
 80122c6:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 80122ca:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 80122ce:	fa1f fc8c 	uxth.w	ip, ip
 80122d2:	f8cd c000 	str.w	ip, [sp]
 80122d6:	f8de a090 	ldr.w	sl, [lr, #144]	; 0x90
 80122da:	47d0      	blx	sl
 80122dc:	4682      	mov	sl, r0
 80122de:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80122e2:	a807      	add	r0, sp, #28
 80122e4:	f7fe ff8c 	bl	8011200 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 80122e8:	6823      	ldr	r3, [r4, #0]
 80122ea:	4620      	mov	r0, r4
 80122ec:	a907      	add	r1, sp, #28
 80122ee:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80122f0:	4798      	blx	r3
 80122f2:	f8b7 00ac 	ldrh.w	r0, [r7, #172]	; 0xac
 80122f6:	eba0 000a 	sub.w	r0, r0, sl
 80122fa:	b200      	sxth	r0, r0
 80122fc:	f8a7 00ac 	strh.w	r0, [r7, #172]	; 0xac
 8012300:	2800      	cmp	r0, #0
 8012302:	f47f af6b 	bne.w	80121dc <_ZN8touchgfx11Application15drawCachedAreasEv+0x2cc>
 8012306:	fa1f f188 	uxth.w	r1, r8
 801230a:	4648      	mov	r0, r9
 801230c:	f7ff fa84 	bl	8011818 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8012310:	e764      	b.n	80121dc <_ZN8touchgfx11Application15drawCachedAreasEv+0x2cc>
 8012312:	d10c      	bne.n	801232e <_ZN8touchgfx11Application15drawCachedAreasEv+0x41e>
 8012314:	f9b8 e0ac 	ldrsh.w	lr, [r8, #172]	; 0xac
 8012318:	f9bb c0ac 	ldrsh.w	ip, [fp, #172]	; 0xac
 801231c:	45e6      	cmp	lr, ip
 801231e:	bfb4      	ite	lt
 8012320:	4684      	movlt	ip, r0
 8012322:	46cc      	movge	ip, r9
 8012324:	f8bb e0ae 	ldrh.w	lr, [fp, #174]	; 0xae
 8012328:	4473      	add	r3, lr
 801232a:	b21b      	sxth	r3, r3
 801232c:	e74e      	b.n	80121cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x2bc>
 801232e:	4577      	cmp	r7, lr
 8012330:	46cc      	mov	ip, r9
 8012332:	bfa8      	it	ge
 8012334:	4677      	movge	r7, lr
 8012336:	e74c      	b.n	80121d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c2>
 8012338:	eb0a 0008 	add.w	r0, sl, r8
 801233c:	44a0      	add	r8, r4
 801233e:	f9b8 b0ae 	ldrsh.w	fp, [r8, #174]	; 0xae
 8012342:	f1bb 0f13 	cmp.w	fp, #19
 8012346:	bfdc      	itt	le
 8012348:	f8b8 70aa 	ldrhle.w	r7, [r8, #170]	; 0xaa
 801234c:	445f      	addle	r7, fp
 801234e:	e9cd 1202 	strd	r1, r2, [sp, #8]
 8012352:	bfd8      	it	le
 8012354:	b23f      	sxthle	r7, r7
 8012356:	f7fa f9a8 	bl	800c6aa <_ZNK8touchgfx4Rect7isEmptyEv>
 801235a:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 801235e:	2800      	cmp	r0, #0
 8012360:	f47f af14 	bne.w	801218c <_ZN8touchgfx11Application15drawCachedAreasEv+0x27c>
 8012364:	f9b8 20aa 	ldrsh.w	r2, [r8, #170]	; 0xaa
 8012368:	fa1f fb8b 	uxth.w	fp, fp
 801236c:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8012370:	1abf      	subs	r7, r7, r2
 8012372:	f9b8 10a8 	ldrsh.w	r1, [r8, #168]	; 0xa8
 8012376:	f9b8 30ac 	ldrsh.w	r3, [r8, #172]	; 0xac
 801237a:	2f14      	cmp	r7, #20
 801237c:	6830      	ldr	r0, [r6, #0]
 801237e:	f8ad 101c 	strh.w	r1, [sp, #28]
 8012382:	b289      	uxth	r1, r1
 8012384:	bfa8      	it	ge
 8012386:	2714      	movge	r7, #20
 8012388:	f8ad 201e 	strh.w	r2, [sp, #30]
 801238c:	f8ad 3020 	strh.w	r3, [sp, #32]
 8012390:	b292      	uxth	r2, r2
 8012392:	f8d0 c000 	ldr.w	ip, [r0]
 8012396:	b2bf      	uxth	r7, r7
 8012398:	b29b      	uxth	r3, r3
 801239a:	455f      	cmp	r7, fp
 801239c:	bf94      	ite	ls
 801239e:	9700      	strls	r7, [sp, #0]
 80123a0:	f8cd b000 	strhi.w	fp, [sp]
 80123a4:	f8dc 7090 	ldr.w	r7, [ip, #144]	; 0x90
 80123a8:	47b8      	blx	r7
 80123aa:	6823      	ldr	r3, [r4, #0]
 80123ac:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80123b0:	a907      	add	r1, sp, #28
 80123b2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80123b4:	4620      	mov	r0, r4
 80123b6:	4798      	blx	r3
 80123b8:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 80123bc:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 80123c0:	f8b8 20aa 	ldrh.w	r2, [r8, #170]	; 0xaa
 80123c4:	1a5b      	subs	r3, r3, r1
 80123c6:	440a      	add	r2, r1
 80123c8:	b21b      	sxth	r3, r3
 80123ca:	f8a8 20aa 	strh.w	r2, [r8, #170]	; 0xaa
 80123ce:	f8a8 30ae 	strh.w	r3, [r8, #174]	; 0xae
 80123d2:	2b00      	cmp	r3, #0
 80123d4:	f47f aed5 	bne.w	8012182 <_ZN8touchgfx11Application15drawCachedAreasEv+0x272>
 80123d8:	fa1f f189 	uxth.w	r1, r9
 80123dc:	4650      	mov	r0, sl
 80123de:	f7ff fa1b 	bl	8011818 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80123e2:	e6ce      	b.n	8012182 <_ZN8touchgfx11Application15drawCachedAreasEv+0x272>
 80123e4:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 80123e8:	42bb      	cmp	r3, r7
 80123ea:	f67f aea6 	bls.w	801213a <_ZN8touchgfx11Application15drawCachedAreasEv+0x22a>
 80123ee:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 80123f2:	ab07      	add	r3, sp, #28
 80123f4:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 80123f8:	6851      	ldr	r1, [r2, #4]
 80123fa:	c303      	stmia	r3!, {r0, r1}
 80123fc:	a807      	add	r0, sp, #28
 80123fe:	f7fa f954 	bl	800c6aa <_ZNK8touchgfx4Rect7isEmptyEv>
 8012402:	b920      	cbnz	r0, 801240e <_ZN8touchgfx11Application15drawCachedAreasEv+0x4fe>
 8012404:	6823      	ldr	r3, [r4, #0]
 8012406:	a907      	add	r1, sp, #28
 8012408:	4620      	mov	r0, r4
 801240a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801240c:	4798      	blx	r3
 801240e:	3701      	adds	r7, #1
 8012410:	b2bf      	uxth	r7, r7
 8012412:	e7e7      	b.n	80123e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4d4>

08012414 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8012414:	4b03      	ldr	r3, [pc, #12]	; (8012424 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8012416:	2200      	movs	r2, #0
 8012418:	801a      	strh	r2, [r3, #0]
 801241a:	805a      	strh	r2, [r3, #2]
 801241c:	809a      	strh	r2, [r3, #4]
 801241e:	80da      	strh	r2, [r3, #6]
 8012420:	4770      	bx	lr
 8012422:	bf00      	nop
 8012424:	2400e0e0 	.word	0x2400e0e0

08012428 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8012428:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801242c:	b09d      	sub	sp, #116	; 0x74
 801242e:	4606      	mov	r6, r0
 8012430:	4614      	mov	r4, r2
 8012432:	468a      	mov	sl, r1
 8012434:	a803      	add	r0, sp, #12
 8012436:	461d      	mov	r5, r3
 8012438:	f000 fe80 	bl	801313c <_ZN8touchgfx12TextProviderC1Ev>
 801243c:	6833      	ldr	r3, [r6, #0]
 801243e:	4630      	mov	r0, r6
 8012440:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8012444:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012446:	4798      	blx	r3
 8012448:	6833      	ldr	r3, [r6, #0]
 801244a:	4607      	mov	r7, r0
 801244c:	4630      	mov	r0, r6
 801244e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8012450:	4798      	blx	r3
 8012452:	462a      	mov	r2, r5
 8012454:	2500      	movs	r5, #0
 8012456:	4621      	mov	r1, r4
 8012458:	9000      	str	r0, [sp, #0]
 801245a:	463b      	mov	r3, r7
 801245c:	462c      	mov	r4, r5
 801245e:	46a9      	mov	r9, r5
 8012460:	46a8      	mov	r8, r5
 8012462:	a803      	add	r0, sp, #12
 8012464:	f000 fed6 	bl	8013214 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012468:	2300      	movs	r3, #0
 801246a:	9302      	str	r3, [sp, #8]
 801246c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8012470:	429c      	cmp	r4, r3
 8012472:	d002      	beq.n	801247a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8012474:	455c      	cmp	r4, fp
 8012476:	bf18      	it	ne
 8012478:	4625      	movne	r5, r4
 801247a:	ab02      	add	r3, sp, #8
 801247c:	4632      	mov	r2, r6
 801247e:	4651      	mov	r1, sl
 8012480:	a803      	add	r0, sp, #12
 8012482:	f001 f9d9 	bl	8013838 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8012486:	4604      	mov	r4, r0
 8012488:	b108      	cbz	r0, 801248e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 801248a:	280a      	cmp	r0, #10
 801248c:	d10a      	bne.n	80124a4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 801248e:	45c1      	cmp	r9, r8
 8012490:	bf38      	it	cc
 8012492:	46c1      	movcc	r9, r8
 8012494:	f04f 0800 	mov.w	r8, #0
 8012498:	2c00      	cmp	r4, #0
 801249a:	d1e5      	bne.n	8012468 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 801249c:	4648      	mov	r0, r9
 801249e:	b01d      	add	sp, #116	; 0x74
 80124a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80124a4:	9a02      	ldr	r2, [sp, #8]
 80124a6:	2a00      	cmp	r2, #0
 80124a8:	d0de      	beq.n	8012468 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 80124aa:	7b57      	ldrb	r7, [r2, #13]
 80124ac:	4629      	mov	r1, r5
 80124ae:	6833      	ldr	r3, [r6, #0]
 80124b0:	007f      	lsls	r7, r7, #1
 80124b2:	8894      	ldrh	r4, [r2, #4]
 80124b4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80124b6:	f407 7080 	and.w	r0, r7, #256	; 0x100
 80124ba:	7a97      	ldrb	r7, [r2, #10]
 80124bc:	4307      	orrs	r7, r0
 80124be:	4630      	mov	r0, r6
 80124c0:	4798      	blx	r3
 80124c2:	4438      	add	r0, r7
 80124c4:	4480      	add	r8, r0
 80124c6:	fa1f f888 	uxth.w	r8, r8
 80124ca:	e7e5      	b.n	8012498 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

080124cc <_ZNK8touchgfx4Font12getCharWidthEt>:
 80124cc:	b508      	push	{r3, lr}
 80124ce:	6803      	ldr	r3, [r0, #0]
 80124d0:	68db      	ldr	r3, [r3, #12]
 80124d2:	4798      	blx	r3
 80124d4:	b128      	cbz	r0, 80124e2 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 80124d6:	7b43      	ldrb	r3, [r0, #13]
 80124d8:	7a80      	ldrb	r0, [r0, #10]
 80124da:	005b      	lsls	r3, r3, #1
 80124dc:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80124e0:	4318      	orrs	r0, r3
 80124e2:	bd08      	pop	{r3, pc}

080124e4 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 80124e4:	b40e      	push	{r1, r2, r3}
 80124e6:	b5f0      	push	{r4, r5, r6, r7, lr}
 80124e8:	b09e      	sub	sp, #120	; 0x78
 80124ea:	4605      	mov	r5, r0
 80124ec:	ab23      	add	r3, sp, #140	; 0x8c
 80124ee:	a805      	add	r0, sp, #20
 80124f0:	f853 4b04 	ldr.w	r4, [r3], #4
 80124f4:	9303      	str	r3, [sp, #12]
 80124f6:	f000 fe21 	bl	801313c <_ZN8touchgfx12TextProviderC1Ev>
 80124fa:	682b      	ldr	r3, [r5, #0]
 80124fc:	4628      	mov	r0, r5
 80124fe:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012500:	4798      	blx	r3
 8012502:	682b      	ldr	r3, [r5, #0]
 8012504:	4606      	mov	r6, r0
 8012506:	4628      	mov	r0, r5
 8012508:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801250a:	4798      	blx	r3
 801250c:	4633      	mov	r3, r6
 801250e:	4621      	mov	r1, r4
 8012510:	ae1e      	add	r6, sp, #120	; 0x78
 8012512:	2400      	movs	r4, #0
 8012514:	9000      	str	r0, [sp, #0]
 8012516:	9a03      	ldr	r2, [sp, #12]
 8012518:	a805      	add	r0, sp, #20
 801251a:	f000 fe7b 	bl	8013214 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801251e:	f846 4d68 	str.w	r4, [r6, #-104]!
 8012522:	462a      	mov	r2, r5
 8012524:	4633      	mov	r3, r6
 8012526:	4621      	mov	r1, r4
 8012528:	a805      	add	r0, sp, #20
 801252a:	f001 f985 	bl	8013838 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801252e:	b300      	cbz	r0, 8012572 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8e>
 8012530:	280a      	cmp	r0, #10
 8012532:	d01a      	beq.n	801256a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
 8012534:	9f04      	ldr	r7, [sp, #16]
 8012536:	b1c7      	cbz	r7, 801256a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
 8012538:	7b78      	ldrb	r0, [r7, #13]
 801253a:	7a3b      	ldrb	r3, [r7, #8]
 801253c:	00c1      	lsls	r1, r0, #3
 801253e:	88aa      	ldrh	r2, [r5, #4]
 8012540:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8012544:	4319      	orrs	r1, r3
 8012546:	0643      	lsls	r3, r0, #25
 8012548:	ea4f 1000 	mov.w	r0, r0, lsl #4
 801254c:	bf48      	it	mi
 801254e:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8012552:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8012556:	bf48      	it	mi
 8012558:	b219      	sxthmi	r1, r3
 801255a:	79fb      	ldrb	r3, [r7, #7]
 801255c:	4303      	orrs	r3, r0
 801255e:	4413      	add	r3, r2
 8012560:	1a5b      	subs	r3, r3, r1
 8012562:	b29b      	uxth	r3, r3
 8012564:	42a3      	cmp	r3, r4
 8012566:	bfc8      	it	gt
 8012568:	b21c      	sxthgt	r4, r3
 801256a:	4633      	mov	r3, r6
 801256c:	462a      	mov	r2, r5
 801256e:	2100      	movs	r1, #0
 8012570:	e7da      	b.n	8012528 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8012572:	b2a0      	uxth	r0, r4
 8012574:	b01e      	add	sp, #120	; 0x78
 8012576:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801257a:	b003      	add	sp, #12
 801257c:	4770      	bx	lr

0801257e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 801257e:	b40e      	push	{r1, r2, r3}
 8012580:	b570      	push	{r4, r5, r6, lr}
 8012582:	b09d      	sub	sp, #116	; 0x74
 8012584:	4604      	mov	r4, r0
 8012586:	ab21      	add	r3, sp, #132	; 0x84
 8012588:	a803      	add	r0, sp, #12
 801258a:	f853 5b04 	ldr.w	r5, [r3], #4
 801258e:	9302      	str	r3, [sp, #8]
 8012590:	f000 fdd4 	bl	801313c <_ZN8touchgfx12TextProviderC1Ev>
 8012594:	6823      	ldr	r3, [r4, #0]
 8012596:	4620      	mov	r0, r4
 8012598:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801259a:	4798      	blx	r3
 801259c:	6823      	ldr	r3, [r4, #0]
 801259e:	4606      	mov	r6, r0
 80125a0:	4620      	mov	r0, r4
 80125a2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80125a4:	2401      	movs	r4, #1
 80125a6:	4798      	blx	r3
 80125a8:	4633      	mov	r3, r6
 80125aa:	9000      	str	r0, [sp, #0]
 80125ac:	4629      	mov	r1, r5
 80125ae:	9a02      	ldr	r2, [sp, #8]
 80125b0:	a803      	add	r0, sp, #12
 80125b2:	f000 fe2f 	bl	8013214 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80125b6:	a803      	add	r0, sp, #12
 80125b8:	f001 fa38 	bl	8013a2c <_ZN8touchgfx12TextProvider11getNextCharEv>
 80125bc:	b2a3      	uxth	r3, r4
 80125be:	b138      	cbz	r0, 80125d0 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x52>
 80125c0:	280a      	cmp	r0, #10
 80125c2:	a803      	add	r0, sp, #12
 80125c4:	bf04      	itt	eq
 80125c6:	3301      	addeq	r3, #1
 80125c8:	b21c      	sxtheq	r4, r3
 80125ca:	f001 fa2f 	bl	8013a2c <_ZN8touchgfx12TextProvider11getNextCharEv>
 80125ce:	e7f5      	b.n	80125bc <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 80125d0:	4618      	mov	r0, r3
 80125d2:	b01d      	add	sp, #116	; 0x74
 80125d4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80125d8:	b003      	add	sp, #12
 80125da:	4770      	bx	lr

080125dc <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 80125dc:	b40e      	push	{r1, r2, r3}
 80125de:	b5f0      	push	{r4, r5, r6, r7, lr}
 80125e0:	b09e      	sub	sp, #120	; 0x78
 80125e2:	4604      	mov	r4, r0
 80125e4:	ab23      	add	r3, sp, #140	; 0x8c
 80125e6:	a805      	add	r0, sp, #20
 80125e8:	f853 5b04 	ldr.w	r5, [r3], #4
 80125ec:	9303      	str	r3, [sp, #12]
 80125ee:	f000 fda5 	bl	801313c <_ZN8touchgfx12TextProviderC1Ev>
 80125f2:	6823      	ldr	r3, [r4, #0]
 80125f4:	4620      	mov	r0, r4
 80125f6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80125f8:	4798      	blx	r3
 80125fa:	6823      	ldr	r3, [r4, #0]
 80125fc:	4606      	mov	r6, r0
 80125fe:	4620      	mov	r0, r4
 8012600:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8012602:	4798      	blx	r3
 8012604:	4633      	mov	r3, r6
 8012606:	4629      	mov	r1, r5
 8012608:	9000      	str	r0, [sp, #0]
 801260a:	9a03      	ldr	r2, [sp, #12]
 801260c:	a805      	add	r0, sp, #20
 801260e:	f000 fe01 	bl	8013214 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012612:	ad1e      	add	r5, sp, #120	; 0x78
 8012614:	2100      	movs	r1, #0
 8012616:	26ff      	movs	r6, #255	; 0xff
 8012618:	4622      	mov	r2, r4
 801261a:	a805      	add	r0, sp, #20
 801261c:	f845 1d68 	str.w	r1, [r5, #-104]!
 8012620:	462b      	mov	r3, r5
 8012622:	f001 f909 	bl	8013838 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8012626:	b1d8      	cbz	r0, 8012660 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x84>
 8012628:	280a      	cmp	r0, #10
 801262a:	d012      	beq.n	8012652 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 801262c:	9804      	ldr	r0, [sp, #16]
 801262e:	b180      	cbz	r0, 8012652 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 8012630:	7b47      	ldrb	r7, [r0, #13]
 8012632:	7922      	ldrb	r2, [r4, #4]
 8012634:	00fb      	lsls	r3, r7, #3
 8012636:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801263a:	7a03      	ldrb	r3, [r0, #8]
 801263c:	430b      	orrs	r3, r1
 801263e:	0679      	lsls	r1, r7, #25
 8012640:	bf44      	itt	mi
 8012642:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012646:	b21b      	sxthmi	r3, r3
 8012648:	1ad3      	subs	r3, r2, r3
 801264a:	b2db      	uxtb	r3, r3
 801264c:	429e      	cmp	r6, r3
 801264e:	bf28      	it	cs
 8012650:	461e      	movcs	r6, r3
 8012652:	462b      	mov	r3, r5
 8012654:	4622      	mov	r2, r4
 8012656:	2100      	movs	r1, #0
 8012658:	a805      	add	r0, sp, #20
 801265a:	f001 f8ed 	bl	8013838 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801265e:	e7e2      	b.n	8012626 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4a>
 8012660:	4630      	mov	r0, r6
 8012662:	b01e      	add	sp, #120	; 0x78
 8012664:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8012668:	b003      	add	sp, #12
 801266a:	4770      	bx	lr

0801266c <_ZNK8touchgfx8Drawable10invalidateEv>:
 801266c:	b513      	push	{r0, r1, r4, lr}
 801266e:	6803      	ldr	r3, [r0, #0]
 8012670:	2400      	movs	r4, #0
 8012672:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8012676:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801267a:	f8ad 1004 	strh.w	r1, [sp, #4]
 801267e:	4669      	mov	r1, sp
 8012680:	691b      	ldr	r3, [r3, #16]
 8012682:	9400      	str	r4, [sp, #0]
 8012684:	f8ad 2006 	strh.w	r2, [sp, #6]
 8012688:	4798      	blx	r3
 801268a:	b002      	add	sp, #8
 801268c:	bd10      	pop	{r4, pc}

0801268e <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 801268e:	b538      	push	{r3, r4, r5, lr}
 8012690:	680b      	ldr	r3, [r1, #0]
 8012692:	460c      	mov	r4, r1
 8012694:	4605      	mov	r5, r0
 8012696:	68db      	ldr	r3, [r3, #12]
 8012698:	4798      	blx	r3
 801269a:	6823      	ldr	r3, [r4, #0]
 801269c:	4620      	mov	r0, r4
 801269e:	4629      	mov	r1, r5
 80126a0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80126a2:	4798      	blx	r3
 80126a4:	4628      	mov	r0, r5
 80126a6:	bd38      	pop	{r3, r4, r5, pc}

080126a8 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 80126a8:	b410      	push	{r4}
 80126aa:	880a      	ldrh	r2, [r1, #0]
 80126ac:	8884      	ldrh	r4, [r0, #4]
 80126ae:	4422      	add	r2, r4
 80126b0:	800a      	strh	r2, [r1, #0]
 80126b2:	884a      	ldrh	r2, [r1, #2]
 80126b4:	88c4      	ldrh	r4, [r0, #6]
 80126b6:	4422      	add	r2, r4
 80126b8:	804a      	strh	r2, [r1, #2]
 80126ba:	6940      	ldr	r0, [r0, #20]
 80126bc:	b120      	cbz	r0, 80126c8 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 80126be:	6803      	ldr	r3, [r0, #0]
 80126c0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80126c4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80126c6:	4718      	bx	r3
 80126c8:	f85d 4b04 	ldr.w	r4, [sp], #4
 80126cc:	4770      	bx	lr

080126ce <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 80126ce:	b570      	push	{r4, r5, r6, lr}
 80126d0:	8882      	ldrh	r2, [r0, #4]
 80126d2:	460c      	mov	r4, r1
 80126d4:	880b      	ldrh	r3, [r1, #0]
 80126d6:	4605      	mov	r5, r0
 80126d8:	4413      	add	r3, r2
 80126da:	800b      	strh	r3, [r1, #0]
 80126dc:	884b      	ldrh	r3, [r1, #2]
 80126de:	88c2      	ldrh	r2, [r0, #6]
 80126e0:	4413      	add	r3, r2
 80126e2:	804b      	strh	r3, [r1, #2]
 80126e4:	1d01      	adds	r1, r0, #4
 80126e6:	4620      	mov	r0, r4
 80126e8:	f7f9 ff9c 	bl	800c624 <_ZN8touchgfx4RectaNERKS0_>
 80126ec:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80126f0:	2b00      	cmp	r3, #0
 80126f2:	dd0b      	ble.n	801270c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80126f4:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80126f8:	2b00      	cmp	r3, #0
 80126fa:	dd07      	ble.n	801270c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80126fc:	6968      	ldr	r0, [r5, #20]
 80126fe:	b128      	cbz	r0, 801270c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8012700:	6803      	ldr	r3, [r0, #0]
 8012702:	4621      	mov	r1, r4
 8012704:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012706:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801270a:	4718      	bx	r3
 801270c:	bd70      	pop	{r4, r5, r6, pc}
	...

08012710 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8012710:	b570      	push	{r4, r5, r6, lr}
 8012712:	8882      	ldrh	r2, [r0, #4]
 8012714:	460c      	mov	r4, r1
 8012716:	880b      	ldrh	r3, [r1, #0]
 8012718:	4605      	mov	r5, r0
 801271a:	4413      	add	r3, r2
 801271c:	800b      	strh	r3, [r1, #0]
 801271e:	884b      	ldrh	r3, [r1, #2]
 8012720:	88c2      	ldrh	r2, [r0, #6]
 8012722:	4413      	add	r3, r2
 8012724:	804b      	strh	r3, [r1, #2]
 8012726:	1d01      	adds	r1, r0, #4
 8012728:	4620      	mov	r0, r4
 801272a:	f7f9 ff7b 	bl	800c624 <_ZN8touchgfx4RectaNERKS0_>
 801272e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8012732:	2b00      	cmp	r3, #0
 8012734:	dd18      	ble.n	8012768 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 8012736:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801273a:	2b00      	cmp	r3, #0
 801273c:	dd14      	ble.n	8012768 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 801273e:	6968      	ldr	r0, [r5, #20]
 8012740:	b128      	cbz	r0, 801274e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8012742:	6803      	ldr	r3, [r0, #0]
 8012744:	4621      	mov	r1, r4
 8012746:	691b      	ldr	r3, [r3, #16]
 8012748:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801274c:	4718      	bx	r3
 801274e:	4b07      	ldr	r3, [pc, #28]	; (801276c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8012750:	681b      	ldr	r3, [r3, #0]
 8012752:	3304      	adds	r3, #4
 8012754:	429d      	cmp	r5, r3
 8012756:	d107      	bne.n	8012768 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 8012758:	f7fe ff88 	bl	801166c <_ZN8touchgfx11Application11getInstanceEv>
 801275c:	6821      	ldr	r1, [r4, #0]
 801275e:	6862      	ldr	r2, [r4, #4]
 8012760:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012764:	f7ff b89c 	b.w	80118a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8012768:	bd70      	pop	{r4, r5, r6, pc}
 801276a:	bf00      	nop
 801276c:	2400e0d8 	.word	0x2400e0d8

08012770 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8012770:	b570      	push	{r4, r5, r6, lr}
 8012772:	4604      	mov	r4, r0
 8012774:	4616      	mov	r6, r2
 8012776:	460d      	mov	r5, r1
 8012778:	b901      	cbnz	r1, 801277c <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 801277a:	b192      	cbz	r2, 80127a2 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 801277c:	6823      	ldr	r3, [r4, #0]
 801277e:	4620      	mov	r0, r4
 8012780:	699b      	ldr	r3, [r3, #24]
 8012782:	4798      	blx	r3
 8012784:	88e2      	ldrh	r2, [r4, #6]
 8012786:	88a1      	ldrh	r1, [r4, #4]
 8012788:	4620      	mov	r0, r4
 801278a:	4432      	add	r2, r6
 801278c:	4429      	add	r1, r5
 801278e:	b212      	sxth	r2, r2
 8012790:	b209      	sxth	r1, r1
 8012792:	f7ef ff0d 	bl	80025b0 <_ZN8touchgfx8Drawable5setXYEss>
 8012796:	6823      	ldr	r3, [r4, #0]
 8012798:	4620      	mov	r0, r4
 801279a:	699b      	ldr	r3, [r3, #24]
 801279c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80127a0:	4718      	bx	r3
 80127a2:	bd70      	pop	{r4, r5, r6, pc}

080127a4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 80127a4:	b510      	push	{r4, lr}
 80127a6:	2300      	movs	r3, #0
 80127a8:	4604      	mov	r4, r0
 80127aa:	4608      	mov	r0, r1
 80127ac:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 80127b0:	8023      	strh	r3, [r4, #0]
 80127b2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80127b6:	8063      	strh	r3, [r4, #2]
 80127b8:	6803      	ldr	r3, [r0, #0]
 80127ba:	80a1      	strh	r1, [r4, #4]
 80127bc:	4621      	mov	r1, r4
 80127be:	80e2      	strh	r2, [r4, #6]
 80127c0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80127c2:	4798      	blx	r3
 80127c4:	4620      	mov	r0, r4
 80127c6:	bd10      	pop	{r4, pc}

080127c8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 80127c8:	b530      	push	{r4, r5, lr}
 80127ca:	8083      	strh	r3, [r0, #4]
 80127cc:	f89d 300c 	ldrb.w	r3, [sp, #12]
 80127d0:	f89d 5010 	ldrb.w	r5, [sp, #16]
 80127d4:	7183      	strb	r3, [r0, #6]
 80127d6:	79c3      	ldrb	r3, [r0, #7]
 80127d8:	6101      	str	r1, [r0, #16]
 80127da:	f365 0306 	bfi	r3, r5, #0, #7
 80127de:	f89d 5014 	ldrb.w	r5, [sp, #20]
 80127e2:	8282      	strh	r2, [r0, #20]
 80127e4:	f365 13c7 	bfi	r3, r5, #7, #1
 80127e8:	71c3      	strb	r3, [r0, #7]
 80127ea:	f89d 3018 	ldrb.w	r3, [sp, #24]
 80127ee:	7203      	strb	r3, [r0, #8]
 80127f0:	f89d 301c 	ldrb.w	r3, [sp, #28]
 80127f4:	7243      	strb	r3, [r0, #9]
 80127f6:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80127fa:	8143      	strh	r3, [r0, #10]
 80127fc:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 8012800:	8183      	strh	r3, [r0, #12]
 8012802:	4b01      	ldr	r3, [pc, #4]	; (8012808 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 8012804:	6003      	str	r3, [r0, #0]
 8012806:	bd30      	pop	{r4, r5, pc}
 8012808:	08024228 	.word	0x08024228

0801280c <_ZNK8touchgfx9ConstFont4findEt>:
 801280c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801280e:	6904      	ldr	r4, [r0, #16]
 8012810:	b3bc      	cbz	r4, 8012882 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012812:	88a3      	ldrh	r3, [r4, #4]
 8012814:	8a82      	ldrh	r2, [r0, #20]
 8012816:	1acb      	subs	r3, r1, r3
 8012818:	f102 32ff 	add.w	r2, r2, #4294967295
 801281c:	d431      	bmi.n	8012882 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801281e:	4293      	cmp	r3, r2
 8012820:	dd0c      	ble.n	801283c <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8012822:	230e      	movs	r3, #14
 8012824:	fb03 4302 	mla	r3, r3, r2, r4
 8012828:	889b      	ldrh	r3, [r3, #4]
 801282a:	1a5b      	subs	r3, r3, r1
 801282c:	1ad3      	subs	r3, r2, r3
 801282e:	429a      	cmp	r2, r3
 8012830:	db27      	blt.n	8012882 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012832:	2b00      	cmp	r3, #0
 8012834:	bfbc      	itt	lt
 8012836:	2302      	movlt	r3, #2
 8012838:	fb92 f3f3 	sdivlt	r3, r2, r3
 801283c:	2500      	movs	r5, #0
 801283e:	260e      	movs	r6, #14
 8012840:	4295      	cmp	r5, r2
 8012842:	dc1e      	bgt.n	8012882 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012844:	fb06 4003 	mla	r0, r6, r3, r4
 8012848:	8887      	ldrh	r7, [r0, #4]
 801284a:	42b9      	cmp	r1, r7
 801284c:	d01a      	beq.n	8012884 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 801284e:	d20d      	bcs.n	801286c <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8012850:	1e5a      	subs	r2, r3, #1
 8012852:	4295      	cmp	r5, r2
 8012854:	dc15      	bgt.n	8012882 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012856:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 801285a:	1a5b      	subs	r3, r3, r1
 801285c:	1ad3      	subs	r3, r2, r3
 801285e:	429a      	cmp	r2, r3
 8012860:	db0f      	blt.n	8012882 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012862:	429d      	cmp	r5, r3
 8012864:	ddec      	ble.n	8012840 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8012866:	1953      	adds	r3, r2, r5
 8012868:	105b      	asrs	r3, r3, #1
 801286a:	e7e9      	b.n	8012840 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801286c:	1c5d      	adds	r5, r3, #1
 801286e:	42aa      	cmp	r2, r5
 8012870:	db07      	blt.n	8012882 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012872:	8a43      	ldrh	r3, [r0, #18]
 8012874:	1acb      	subs	r3, r1, r3
 8012876:	442b      	add	r3, r5
 8012878:	429d      	cmp	r5, r3
 801287a:	dc02      	bgt.n	8012882 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801287c:	429a      	cmp	r2, r3
 801287e:	dadf      	bge.n	8012840 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8012880:	e7f1      	b.n	8012866 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8012882:	2000      	movs	r0, #0
 8012884:	bdf0      	pop	{r4, r5, r6, r7, pc}

08012886 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8012886:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012888:	4604      	mov	r4, r0
 801288a:	4617      	mov	r7, r2
 801288c:	461e      	mov	r6, r3
 801288e:	b911      	cbnz	r1, 8012896 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8012890:	2500      	movs	r5, #0
 8012892:	4628      	mov	r0, r5
 8012894:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012896:	290a      	cmp	r1, #10
 8012898:	d0fa      	beq.n	8012890 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801289a:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 801289e:	4291      	cmp	r1, r2
 80128a0:	d0f6      	beq.n	8012890 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80128a2:	f242 020b 	movw	r2, #8203	; 0x200b
 80128a6:	4291      	cmp	r1, r2
 80128a8:	d0f2      	beq.n	8012890 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80128aa:	f7ff ffaf 	bl	801280c <_ZNK8touchgfx9ConstFont4findEt>
 80128ae:	4605      	mov	r5, r0
 80128b0:	b950      	cbnz	r0, 80128c8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 80128b2:	6823      	ldr	r3, [r4, #0]
 80128b4:	4620      	mov	r0, r4
 80128b6:	691b      	ldr	r3, [r3, #16]
 80128b8:	4798      	blx	r3
 80128ba:	4601      	mov	r1, r0
 80128bc:	4620      	mov	r0, r4
 80128be:	f7ff ffa5 	bl	801280c <_ZNK8touchgfx9ConstFont4findEt>
 80128c2:	4605      	mov	r5, r0
 80128c4:	2800      	cmp	r0, #0
 80128c6:	d0e3      	beq.n	8012890 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80128c8:	6823      	ldr	r3, [r4, #0]
 80128ca:	4629      	mov	r1, r5
 80128cc:	4620      	mov	r0, r4
 80128ce:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80128d0:	4798      	blx	r3
 80128d2:	6038      	str	r0, [r7, #0]
 80128d4:	6823      	ldr	r3, [r4, #0]
 80128d6:	4620      	mov	r0, r4
 80128d8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80128da:	4798      	blx	r3
 80128dc:	7030      	strb	r0, [r6, #0]
 80128de:	e7d8      	b.n	8012892 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

080128e0 <_ZN8touchgfx6memsetEPvhm>:
 80128e0:	4402      	add	r2, r0
 80128e2:	4290      	cmp	r0, r2
 80128e4:	d002      	beq.n	80128ec <_ZN8touchgfx6memsetEPvhm+0xc>
 80128e6:	f800 1b01 	strb.w	r1, [r0], #1
 80128ea:	e7fa      	b.n	80128e2 <_ZN8touchgfx6memsetEPvhm+0x2>
 80128ec:	4770      	bx	lr

080128ee <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 80128ee:	b538      	push	{r3, r4, r5, lr}
 80128f0:	4605      	mov	r5, r0
 80128f2:	f002 faab 	bl	8014e4c <_ZNK8touchgfx6Bitmap9getFormatEv>
 80128f6:	4604      	mov	r4, r0
 80128f8:	4628      	mov	r0, r5
 80128fa:	f002 f9e3 	bl	8014cc4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80128fe:	2800      	cmp	r0, #0
 8012900:	bf14      	ite	ne
 8012902:	2002      	movne	r0, #2
 8012904:	2000      	moveq	r0, #0
 8012906:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 801290a:	b280      	uxth	r0, r0
 801290c:	bd38      	pop	{r3, r4, r5, pc}

0801290e <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 801290e:	b538      	push	{r3, r4, r5, lr}
 8012910:	4605      	mov	r5, r0
 8012912:	f002 fa9b 	bl	8014e4c <_ZNK8touchgfx6Bitmap9getFormatEv>
 8012916:	4604      	mov	r4, r0
 8012918:	4628      	mov	r0, r5
 801291a:	f002 f9d3 	bl	8014cc4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801291e:	2800      	cmp	r0, #0
 8012920:	bf14      	ite	ne
 8012922:	2002      	movne	r0, #2
 8012924:	2000      	moveq	r0, #0
 8012926:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 801292a:	f040 0001 	orr.w	r0, r0, #1
 801292e:	b280      	uxth	r0, r0
 8012930:	bd38      	pop	{r3, r4, r5, pc}

08012932 <_ZN8touchgfx4clzuEm>:
 8012932:	4603      	mov	r3, r0
 8012934:	b1c8      	cbz	r0, 801296a <_ZN8touchgfx4clzuEm+0x38>
 8012936:	0c02      	lsrs	r2, r0, #16
 8012938:	0412      	lsls	r2, r2, #16
 801293a:	b9a2      	cbnz	r2, 8012966 <_ZN8touchgfx4clzuEm+0x34>
 801293c:	0403      	lsls	r3, r0, #16
 801293e:	2010      	movs	r0, #16
 8012940:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8012944:	bf04      	itt	eq
 8012946:	021b      	lsleq	r3, r3, #8
 8012948:	3008      	addeq	r0, #8
 801294a:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 801294e:	bf04      	itt	eq
 8012950:	011b      	lsleq	r3, r3, #4
 8012952:	3004      	addeq	r0, #4
 8012954:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8012958:	bf04      	itt	eq
 801295a:	009b      	lsleq	r3, r3, #2
 801295c:	3002      	addeq	r0, #2
 801295e:	2b00      	cmp	r3, #0
 8012960:	db04      	blt.n	801296c <_ZN8touchgfx4clzuEm+0x3a>
 8012962:	3001      	adds	r0, #1
 8012964:	4770      	bx	lr
 8012966:	2000      	movs	r0, #0
 8012968:	e7ea      	b.n	8012940 <_ZN8touchgfx4clzuEm+0xe>
 801296a:	2020      	movs	r0, #32
 801296c:	4770      	bx	lr

0801296e <_ZN8touchgfx7muldivuEmmmRm>:
 801296e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012972:	4680      	mov	r8, r0
 8012974:	460f      	mov	r7, r1
 8012976:	4615      	mov	r5, r2
 8012978:	461e      	mov	r6, r3
 801297a:	f7ff ffda 	bl	8012932 <_ZN8touchgfx4clzuEm>
 801297e:	b998      	cbnz	r0, 80129a8 <_ZN8touchgfx7muldivuEmmmRm+0x3a>
 8012980:	4608      	mov	r0, r1
 8012982:	f7ff ffd6 	bl	8012932 <_ZN8touchgfx4clzuEm>
 8012986:	2800      	cmp	r0, #0
 8012988:	dd08      	ble.n	801299c <_ZN8touchgfx7muldivuEmmmRm+0x2e>
 801298a:	4633      	mov	r3, r6
 801298c:	462a      	mov	r2, r5
 801298e:	4641      	mov	r1, r8
 8012990:	4638      	mov	r0, r7
 8012992:	f7ff ffec 	bl	801296e <_ZN8touchgfx7muldivuEmmmRm>
 8012996:	b003      	add	sp, #12
 8012998:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801299c:	f04f 33ff 	mov.w	r3, #4294967295
 80129a0:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80129a4:	6033      	str	r3, [r6, #0]
 80129a6:	e7f6      	b.n	8012996 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 80129a8:	fa31 f900 	lsrs.w	r9, r1, r0
 80129ac:	fb01 f308 	mul.w	r3, r1, r8
 80129b0:	d105      	bne.n	80129be <_ZN8touchgfx7muldivuEmmmRm+0x50>
 80129b2:	fbb3 f0f5 	udiv	r0, r3, r5
 80129b6:	fb05 3510 	mls	r5, r5, r0, r3
 80129ba:	6035      	str	r5, [r6, #0]
 80129bc:	e7eb      	b.n	8012996 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 80129be:	2301      	movs	r3, #1
 80129c0:	fa08 fb00 	lsl.w	fp, r8, r0
 80129c4:	462a      	mov	r2, r5
 80129c6:	4641      	mov	r1, r8
 80129c8:	fa03 f000 	lsl.w	r0, r3, r0
 80129cc:	4633      	mov	r3, r6
 80129ce:	fbbb faf5 	udiv	sl, fp, r5
 80129d2:	3801      	subs	r0, #1
 80129d4:	fb09 f40a 	mul.w	r4, r9, sl
 80129d8:	4038      	ands	r0, r7
 80129da:	f7ff ffc8 	bl	801296e <_ZN8touchgfx7muldivuEmmmRm>
 80129de:	462a      	mov	r2, r5
 80129e0:	4607      	mov	r7, r0
 80129e2:	ab01      	add	r3, sp, #4
 80129e4:	fb05 b11a 	mls	r1, r5, sl, fp
 80129e8:	4648      	mov	r0, r9
 80129ea:	f7ff ffc0 	bl	801296e <_ZN8touchgfx7muldivuEmmmRm>
 80129ee:	9b01      	ldr	r3, [sp, #4]
 80129f0:	6832      	ldr	r2, [r6, #0]
 80129f2:	441a      	add	r2, r3
 80129f4:	fbb2 f3f5 	udiv	r3, r2, r5
 80129f8:	441c      	add	r4, r3
 80129fa:	fb05 2513 	mls	r5, r5, r3, r2
 80129fe:	443c      	add	r4, r7
 8012a00:	4420      	add	r0, r4
 8012a02:	e7da      	b.n	80129ba <_ZN8touchgfx7muldivuEmmmRm+0x4c>

08012a04 <_ZN8touchgfx6muldivElllRl>:
 8012a04:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012a06:	2800      	cmp	r0, #0
 8012a08:	461e      	mov	r6, r3
 8012a0a:	bfba      	itte	lt
 8012a0c:	4240      	neglt	r0, r0
 8012a0e:	f04f 34ff 	movlt.w	r4, #4294967295
 8012a12:	2401      	movge	r4, #1
 8012a14:	2900      	cmp	r1, #0
 8012a16:	bfbc      	itt	lt
 8012a18:	4249      	neglt	r1, r1
 8012a1a:	4264      	neglt	r4, r4
 8012a1c:	2a00      	cmp	r2, #0
 8012a1e:	bfb6      	itet	lt
 8012a20:	4265      	neglt	r5, r4
 8012a22:	4625      	movge	r5, r4
 8012a24:	4252      	neglt	r2, r2
 8012a26:	4288      	cmp	r0, r1
 8012a28:	bfc2      	ittt	gt
 8012a2a:	4603      	movgt	r3, r0
 8012a2c:	4608      	movgt	r0, r1
 8012a2e:	4619      	movgt	r1, r3
 8012a30:	ab01      	add	r3, sp, #4
 8012a32:	f7ff ff9c 	bl	801296e <_ZN8touchgfx7muldivuEmmmRm>
 8012a36:	9b01      	ldr	r3, [sp, #4]
 8012a38:	4368      	muls	r0, r5
 8012a3a:	435c      	muls	r4, r3
 8012a3c:	6034      	str	r4, [r6, #0]
 8012a3e:	b002      	add	sp, #8
 8012a40:	bd70      	pop	{r4, r5, r6, pc}

08012a42 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 8012a42:	2000      	movs	r0, #0
 8012a44:	4770      	bx	lr

08012a46 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8012a46:	2001      	movs	r0, #1
 8012a48:	4770      	bx	lr

08012a4a <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8012a4a:	2002      	movs	r0, #2
 8012a4c:	4770      	bx	lr

08012a4e <_ZN8touchgfx6ScreenD1Ev>:
 8012a4e:	4770      	bx	lr

08012a50 <_ZN8touchgfx12GestureEventD1Ev>:
 8012a50:	4770      	bx	lr

08012a52 <_ZN8touchgfx9DragEventD1Ev>:
 8012a52:	4770      	bx	lr

08012a54 <_ZN8touchgfx10ClickEventD1Ev>:
 8012a54:	4770      	bx	lr

08012a56 <_ZN8touchgfx10ClickEventD0Ev>:
 8012a56:	b510      	push	{r4, lr}
 8012a58:	4604      	mov	r4, r0
 8012a5a:	210c      	movs	r1, #12
 8012a5c:	f00c fedf 	bl	801f81e <_ZdlPvj>
 8012a60:	4620      	mov	r0, r4
 8012a62:	bd10      	pop	{r4, pc}

08012a64 <_ZN8touchgfx9DragEventD0Ev>:
 8012a64:	b510      	push	{r4, lr}
 8012a66:	4604      	mov	r4, r0
 8012a68:	2110      	movs	r1, #16
 8012a6a:	f00c fed8 	bl	801f81e <_ZdlPvj>
 8012a6e:	4620      	mov	r0, r4
 8012a70:	bd10      	pop	{r4, pc}

08012a72 <_ZN8touchgfx12GestureEventD0Ev>:
 8012a72:	b510      	push	{r4, lr}
 8012a74:	4604      	mov	r4, r0
 8012a76:	210c      	movs	r1, #12
 8012a78:	f00c fed1 	bl	801f81e <_ZdlPvj>
 8012a7c:	4620      	mov	r0, r4
 8012a7e:	bd10      	pop	{r4, pc}

08012a80 <_ZN8touchgfx6ScreenD0Ev>:
 8012a80:	b510      	push	{r4, lr}
 8012a82:	4604      	mov	r4, r0
 8012a84:	213c      	movs	r1, #60	; 0x3c
 8012a86:	f00c feca 	bl	801f81e <_ZdlPvj>
 8012a8a:	4620      	mov	r0, r4
 8012a8c:	bd10      	pop	{r4, pc}
	...

08012a90 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8012a90:	b530      	push	{r4, r5, lr}
 8012a92:	460d      	mov	r5, r1
 8012a94:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8012a96:	b087      	sub	sp, #28
 8012a98:	4604      	mov	r4, r0
 8012a9a:	b301      	cbz	r1, 8012ade <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8012a9c:	a801      	add	r0, sp, #4
 8012a9e:	f7ff fe81 	bl	80127a4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012aa2:	892a      	ldrh	r2, [r5, #8]
 8012aa4:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8012aa8:	7928      	ldrb	r0, [r5, #4]
 8012aaa:	1ad2      	subs	r2, r2, r3
 8012aac:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8012aae:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8012ab2:	441a      	add	r2, r3
 8012ab4:	896b      	ldrh	r3, [r5, #10]
 8012ab6:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8012aba:	f88d 0010 	strb.w	r0, [sp, #16]
 8012abe:	1b5b      	subs	r3, r3, r5
 8012ac0:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8012ac2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8012ac4:	442b      	add	r3, r5
 8012ac6:	4d07      	ldr	r5, [pc, #28]	; (8012ae4 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8012ac8:	f8ad 1012 	strh.w	r1, [sp, #18]
 8012acc:	a903      	add	r1, sp, #12
 8012ace:	9503      	str	r5, [sp, #12]
 8012ad0:	f8ad 2014 	strh.w	r2, [sp, #20]
 8012ad4:	f8ad 3016 	strh.w	r3, [sp, #22]
 8012ad8:	6803      	ldr	r3, [r0, #0]
 8012ada:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8012adc:	4798      	blx	r3
 8012ade:	b007      	add	sp, #28
 8012ae0:	bd30      	pop	{r4, r5, pc}
 8012ae2:	bf00      	nop
 8012ae4:	080242a8 	.word	0x080242a8

08012ae8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8012ae8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012aec:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8012aee:	b08a      	sub	sp, #40	; 0x28
 8012af0:	4604      	mov	r4, r0
 8012af2:	460d      	mov	r5, r1
 8012af4:	b113      	cbz	r3, 8012afc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8012af6:	790b      	ldrb	r3, [r1, #4]
 8012af8:	2b00      	cmp	r3, #0
 8012afa:	d044      	beq.n	8012b86 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8012afc:	f104 0804 	add.w	r8, r4, #4
 8012b00:	a803      	add	r0, sp, #12
 8012b02:	4641      	mov	r1, r8
 8012b04:	f7ff fe4e 	bl	80127a4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012b08:	792b      	ldrb	r3, [r5, #4]
 8012b0a:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8012b0e:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8012b12:	b983      	cbnz	r3, 8012b36 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8012b14:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8012b18:	892a      	ldrh	r2, [r5, #8]
 8012b1a:	88e9      	ldrh	r1, [r5, #6]
 8012b1c:	4640      	mov	r0, r8
 8012b1e:	1b92      	subs	r2, r2, r6
 8012b20:	9301      	str	r3, [sp, #4]
 8012b22:	1bc9      	subs	r1, r1, r7
 8012b24:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8012b28:	b212      	sxth	r2, r2
 8012b2a:	9300      	str	r3, [sp, #0]
 8012b2c:	b209      	sxth	r1, r1
 8012b2e:	f104 0330 	add.w	r3, r4, #48	; 0x30
 8012b32:	f7f9 fc95 	bl	800c460 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8012b36:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8012b38:	b329      	cbz	r1, 8012b86 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8012b3a:	a805      	add	r0, sp, #20
 8012b3c:	f7ff fe32 	bl	80127a4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012b40:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8012b44:	792b      	ldrb	r3, [r5, #4]
 8012b46:	a907      	add	r1, sp, #28
 8012b48:	1abf      	subs	r7, r7, r2
 8012b4a:	88ea      	ldrh	r2, [r5, #6]
 8012b4c:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8012b4e:	4417      	add	r7, r2
 8012b50:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8012b52:	f88d 3020 	strb.w	r3, [sp, #32]
 8012b56:	4417      	add	r7, r2
 8012b58:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8012b5c:	1ab6      	subs	r6, r6, r2
 8012b5e:	892a      	ldrh	r2, [r5, #8]
 8012b60:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 8012b64:	4416      	add	r6, r2
 8012b66:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8012b68:	4416      	add	r6, r2
 8012b6a:	4a08      	ldr	r2, [pc, #32]	; (8012b8c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 8012b6c:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8012b70:	2600      	movs	r6, #0
 8012b72:	9207      	str	r2, [sp, #28]
 8012b74:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 8012b78:	6803      	ldr	r3, [r0, #0]
 8012b7a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012b7c:	4798      	blx	r3
 8012b7e:	792b      	ldrb	r3, [r5, #4]
 8012b80:	b10b      	cbz	r3, 8012b86 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8012b82:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8012b86:	b00a      	add	sp, #40	; 0x28
 8012b88:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012b8c:	08024280 	.word	0x08024280

08012b90 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8012b90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012b94:	460c      	mov	r4, r1
 8012b96:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8012b98:	b088      	sub	sp, #32
 8012b9a:	4605      	mov	r5, r0
 8012b9c:	2900      	cmp	r1, #0
 8012b9e:	d06d      	beq.n	8012c7c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8012ba0:	4668      	mov	r0, sp
 8012ba2:	f7ff fdff 	bl	80127a4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012ba6:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8012ba8:	88e3      	ldrh	r3, [r4, #6]
 8012baa:	f9bd 8000 	ldrsh.w	r8, [sp]
 8012bae:	440b      	add	r3, r1
 8012bb0:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8012bb4:	b21b      	sxth	r3, r3
 8012bb6:	4543      	cmp	r3, r8
 8012bb8:	db31      	blt.n	8012c1e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012bba:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8012bbe:	44c4      	add	ip, r8
 8012bc0:	fa0f fc8c 	sxth.w	ip, ip
 8012bc4:	4563      	cmp	r3, ip
 8012bc6:	da2a      	bge.n	8012c1e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012bc8:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 8012bca:	8926      	ldrh	r6, [r4, #8]
 8012bcc:	4416      	add	r6, r2
 8012bce:	b236      	sxth	r6, r6
 8012bd0:	42be      	cmp	r6, r7
 8012bd2:	db24      	blt.n	8012c1e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012bd4:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8012bd8:	4438      	add	r0, r7
 8012bda:	b200      	sxth	r0, r0
 8012bdc:	4286      	cmp	r6, r0
 8012bde:	da1e      	bge.n	8012c1e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012be0:	8963      	ldrh	r3, [r4, #10]
 8012be2:	4419      	add	r1, r3
 8012be4:	b209      	sxth	r1, r1
 8012be6:	4541      	cmp	r1, r8
 8012be8:	db08      	blt.n	8012bfc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8012bea:	4561      	cmp	r1, ip
 8012bec:	da06      	bge.n	8012bfc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8012bee:	89a3      	ldrh	r3, [r4, #12]
 8012bf0:	441a      	add	r2, r3
 8012bf2:	b212      	sxth	r2, r2
 8012bf4:	42ba      	cmp	r2, r7
 8012bf6:	db01      	blt.n	8012bfc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8012bf8:	4282      	cmp	r2, r0
 8012bfa:	db10      	blt.n	8012c1e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012bfc:	4b21      	ldr	r3, [pc, #132]	; (8012c84 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8012bfe:	a904      	add	r1, sp, #16
 8012c00:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8012c02:	9304      	str	r3, [sp, #16]
 8012c04:	2302      	movs	r3, #2
 8012c06:	f88d 3014 	strb.w	r3, [sp, #20]
 8012c0a:	2300      	movs	r3, #0
 8012c0c:	f8ad 3016 	strh.w	r3, [sp, #22]
 8012c10:	f8ad 3018 	strh.w	r3, [sp, #24]
 8012c14:	f8ad 301a 	strh.w	r3, [sp, #26]
 8012c18:	6803      	ldr	r3, [r0, #0]
 8012c1a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012c1c:	4798      	blx	r3
 8012c1e:	1d29      	adds	r1, r5, #4
 8012c20:	a802      	add	r0, sp, #8
 8012c22:	f7ff fdbf 	bl	80127a4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012c26:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8012c2a:	88e0      	ldrh	r0, [r4, #6]
 8012c2c:	eba3 0808 	sub.w	r8, r3, r8
 8012c30:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8012c34:	7921      	ldrb	r1, [r4, #4]
 8012c36:	fa1f f888 	uxth.w	r8, r8
 8012c3a:	1bdf      	subs	r7, r3, r7
 8012c3c:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 8012c40:	b2bb      	uxth	r3, r7
 8012c42:	4440      	add	r0, r8
 8012c44:	8922      	ldrh	r2, [r4, #8]
 8012c46:	8967      	ldrh	r7, [r4, #10]
 8012c48:	4460      	add	r0, ip
 8012c4a:	89a4      	ldrh	r4, [r4, #12]
 8012c4c:	441a      	add	r2, r3
 8012c4e:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 8012c50:	44b8      	add	r8, r7
 8012c52:	4423      	add	r3, r4
 8012c54:	f8ad 0016 	strh.w	r0, [sp, #22]
 8012c58:	4432      	add	r2, r6
 8012c5a:	44e0      	add	r8, ip
 8012c5c:	4433      	add	r3, r6
 8012c5e:	4c0a      	ldr	r4, [pc, #40]	; (8012c88 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8012c60:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8012c62:	f88d 1014 	strb.w	r1, [sp, #20]
 8012c66:	a904      	add	r1, sp, #16
 8012c68:	9404      	str	r4, [sp, #16]
 8012c6a:	f8ad 2018 	strh.w	r2, [sp, #24]
 8012c6e:	f8ad 801a 	strh.w	r8, [sp, #26]
 8012c72:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012c76:	6803      	ldr	r3, [r0, #0]
 8012c78:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8012c7a:	4798      	blx	r3
 8012c7c:	b008      	add	sp, #32
 8012c7e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012c82:	bf00      	nop
 8012c84:	08024280 	.word	0x08024280
 8012c88:	08024294 	.word	0x08024294

08012c8c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8012c8c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012c8e:	4604      	mov	r4, r0
 8012c90:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8012c94:	3201      	adds	r2, #1
 8012c96:	d112      	bne.n	8012cbe <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8012c98:	2500      	movs	r5, #0
 8012c9a:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8012c9e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8012ca2:	6803      	ldr	r3, [r0, #0]
 8012ca4:	9500      	str	r5, [sp, #0]
 8012ca6:	466d      	mov	r5, sp
 8012ca8:	f8ad 1004 	strh.w	r1, [sp, #4]
 8012cac:	f8ad 2006 	strh.w	r2, [sp, #6]
 8012cb0:	4629      	mov	r1, r5
 8012cb2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012cb4:	4798      	blx	r3
 8012cb6:	e895 0003 	ldmia.w	r5, {r0, r1}
 8012cba:	e884 0003 	stmia.w	r4, {r0, r1}
 8012cbe:	4620      	mov	r0, r4
 8012cc0:	b003      	add	sp, #12
 8012cc2:	bd30      	pop	{r4, r5, pc}

08012cc4 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8012cc4:	b513      	push	{r0, r1, r4, lr}
 8012cc6:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8012cca:	4604      	mov	r4, r0
 8012ccc:	3301      	adds	r3, #1
 8012cce:	d109      	bne.n	8012ce4 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8012cd0:	4601      	mov	r1, r0
 8012cd2:	4668      	mov	r0, sp
 8012cd4:	f7ff fd66 	bl	80127a4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012cd8:	f8bd 3000 	ldrh.w	r3, [sp]
 8012cdc:	8423      	strh	r3, [r4, #32]
 8012cde:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012ce2:	8463      	strh	r3, [r4, #34]	; 0x22
 8012ce4:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8012ce8:	b002      	add	sp, #8
 8012cea:	bd10      	pop	{r4, pc}

08012cec <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8012cec:	b513      	push	{r0, r1, r4, lr}
 8012cee:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 8012cf2:	4604      	mov	r4, r0
 8012cf4:	3301      	adds	r3, #1
 8012cf6:	d109      	bne.n	8012d0c <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8012cf8:	4601      	mov	r1, r0
 8012cfa:	4668      	mov	r0, sp
 8012cfc:	f7ff fd52 	bl	80127a4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012d00:	f8bd 3000 	ldrh.w	r3, [sp]
 8012d04:	8423      	strh	r3, [r4, #32]
 8012d06:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012d0a:	8463      	strh	r3, [r4, #34]	; 0x22
 8012d0c:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 8012d10:	b002      	add	sp, #8
 8012d12:	bd10      	pop	{r4, pc}

08012d14 <_ZN8touchgfx6ScreenC1Ev>:
 8012d14:	b570      	push	{r4, r5, r6, lr}
 8012d16:	4b17      	ldr	r3, [pc, #92]	; (8012d74 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8012d18:	4605      	mov	r5, r0
 8012d1a:	4a17      	ldr	r2, [pc, #92]	; (8012d78 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8012d1c:	2101      	movs	r1, #1
 8012d1e:	f845 3b04 	str.w	r3, [r5], #4
 8012d22:	2300      	movs	r3, #0
 8012d24:	6042      	str	r2, [r0, #4]
 8012d26:	4604      	mov	r4, r0
 8012d28:	8103      	strh	r3, [r0, #8]
 8012d2a:	8143      	strh	r3, [r0, #10]
 8012d2c:	8183      	strh	r3, [r0, #12]
 8012d2e:	81c3      	strh	r3, [r0, #14]
 8012d30:	8203      	strh	r3, [r0, #16]
 8012d32:	8243      	strh	r3, [r0, #18]
 8012d34:	8283      	strh	r3, [r0, #20]
 8012d36:	82c3      	strh	r3, [r0, #22]
 8012d38:	6203      	str	r3, [r0, #32]
 8012d3a:	8483      	strh	r3, [r0, #36]	; 0x24
 8012d3c:	84c3      	strh	r3, [r0, #38]	; 0x26
 8012d3e:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8012d42:	6343      	str	r3, [r0, #52]	; 0x34
 8012d44:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8012d48:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 8012d4c:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8012d50:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 8012d54:	4b09      	ldr	r3, [pc, #36]	; (8012d7c <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8012d56:	4628      	mov	r0, r5
 8012d58:	f9b3 6000 	ldrsh.w	r6, [r3]
 8012d5c:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8012d5e:	4a08      	ldr	r2, [pc, #32]	; (8012d80 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8012d60:	f9b2 1000 	ldrsh.w	r1, [r2]
 8012d64:	4798      	blx	r3
 8012d66:	6863      	ldr	r3, [r4, #4]
 8012d68:	4628      	mov	r0, r5
 8012d6a:	4631      	mov	r1, r6
 8012d6c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8012d6e:	4798      	blx	r3
 8012d70:	4620      	mov	r0, r4
 8012d72:	bd70      	pop	{r4, r5, r6, pc}
 8012d74:	080242bc 	.word	0x080242bc
 8012d78:	08022d38 	.word	0x08022d38
 8012d7c:	2400e072 	.word	0x2400e072
 8012d80:	2400e070 	.word	0x2400e070

08012d84 <_ZN8touchgfx6Screen4drawEv>:
 8012d84:	4b09      	ldr	r3, [pc, #36]	; (8012dac <_ZN8touchgfx6Screen4drawEv+0x28>)
 8012d86:	b507      	push	{r0, r1, r2, lr}
 8012d88:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012d8c:	2100      	movs	r1, #0
 8012d8e:	4b08      	ldr	r3, [pc, #32]	; (8012db0 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8012d90:	9100      	str	r1, [sp, #0]
 8012d92:	4669      	mov	r1, sp
 8012d94:	f9b3 3000 	ldrsh.w	r3, [r3]
 8012d98:	f8ad 2004 	strh.w	r2, [sp, #4]
 8012d9c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012da0:	6803      	ldr	r3, [r0, #0]
 8012da2:	689b      	ldr	r3, [r3, #8]
 8012da4:	4798      	blx	r3
 8012da6:	b003      	add	sp, #12
 8012da8:	f85d fb04 	ldr.w	pc, [sp], #4
 8012dac:	2400e070 	.word	0x2400e070
 8012db0:	2400e072 	.word	0x2400e072

08012db4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8012db4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012db8:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8012dbc:	b089      	sub	sp, #36	; 0x24
 8012dbe:	4680      	mov	r8, r0
 8012dc0:	460c      	mov	r4, r1
 8012dc2:	2b00      	cmp	r3, #0
 8012dc4:	4615      	mov	r5, r2
 8012dc6:	dd0e      	ble.n	8012de6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8012dc8:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8012dcc:	2b00      	cmp	r3, #0
 8012dce:	dd0a      	ble.n	8012de6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8012dd0:	4628      	mov	r0, r5
 8012dd2:	f7ff ff5b 	bl	8012c8c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8012dd6:	4621      	mov	r1, r4
 8012dd8:	f7fb fce2 	bl	800e7a0 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8012ddc:	69eb      	ldr	r3, [r5, #28]
 8012dde:	b928      	cbnz	r0, 8012dec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8012de0:	461d      	mov	r5, r3
 8012de2:	2b00      	cmp	r3, #0
 8012de4:	d1f4      	bne.n	8012dd0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8012de6:	b009      	add	sp, #36	; 0x24
 8012de8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012dec:	ae04      	add	r6, sp, #16
 8012dee:	2b00      	cmp	r3, #0
 8012df0:	f000 80b5 	beq.w	8012f5e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8012df4:	682b      	ldr	r3, [r5, #0]
 8012df6:	4629      	mov	r1, r5
 8012df8:	a802      	add	r0, sp, #8
 8012dfa:	68db      	ldr	r3, [r3, #12]
 8012dfc:	4798      	blx	r3
 8012dfe:	4628      	mov	r0, r5
 8012e00:	f7ff ff60 	bl	8012cc4 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8012e04:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8012e08:	4407      	add	r7, r0
 8012e0a:	4628      	mov	r0, r5
 8012e0c:	f7ff ff6e 	bl	8012cec <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8012e10:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8012e14:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8012e18:	b23f      	sxth	r7, r7
 8012e1a:	4418      	add	r0, r3
 8012e1c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8012e20:	4621      	mov	r1, r4
 8012e22:	f8ad 2014 	strh.w	r2, [sp, #20]
 8012e26:	f8ad 0012 	strh.w	r0, [sp, #18]
 8012e2a:	4630      	mov	r0, r6
 8012e2c:	f8ad 3016 	strh.w	r3, [sp, #22]
 8012e30:	f8ad 7010 	strh.w	r7, [sp, #16]
 8012e34:	f7f9 fbf6 	bl	800c624 <_ZN8touchgfx4RectaNERKS0_>
 8012e38:	4628      	mov	r0, r5
 8012e3a:	f7ff ff27 	bl	8012c8c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8012e3e:	ab06      	add	r3, sp, #24
 8012e40:	4602      	mov	r2, r0
 8012e42:	e896 0003 	ldmia.w	r6, {r0, r1}
 8012e46:	e883 0003 	stmia.w	r3, {r0, r1}
 8012e4a:	4611      	mov	r1, r2
 8012e4c:	4618      	mov	r0, r3
 8012e4e:	f7f9 fbe9 	bl	800c624 <_ZN8touchgfx4RectaNERKS0_>
 8012e52:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8012e56:	f9b4 1000 	ldrsh.w	r1, [r4]
 8012e5a:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 8012e5e:	4299      	cmp	r1, r3
 8012e60:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8012e64:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8012e68:	d10b      	bne.n	8012e82 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8012e6a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8012e6e:	4552      	cmp	r2, sl
 8012e70:	d107      	bne.n	8012e82 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8012e72:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8012e76:	455a      	cmp	r2, fp
 8012e78:	d103      	bne.n	8012e82 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8012e7a:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8012e7e:	454a      	cmp	r2, r9
 8012e80:	d06d      	beq.n	8012f5e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8012e82:	f1bb 0f00 	cmp.w	fp, #0
 8012e86:	dd65      	ble.n	8012f54 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8012e88:	f1b9 0f00 	cmp.w	r9, #0
 8012e8c:	dd62      	ble.n	8012f54 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8012e8e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8012e92:	fa1f f08a 	uxth.w	r0, sl
 8012e96:	4552      	cmp	r2, sl
 8012e98:	9000      	str	r0, [sp, #0]
 8012e9a:	da12      	bge.n	8012ec2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8012e9c:	9301      	str	r3, [sp, #4]
 8012e9e:	9b00      	ldr	r3, [sp, #0]
 8012ea0:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8012ea4:	f8ad 2012 	strh.w	r2, [sp, #18]
 8012ea8:	1a9a      	subs	r2, r3, r2
 8012eaa:	f8ad 1010 	strh.w	r1, [sp, #16]
 8012eae:	4631      	mov	r1, r6
 8012eb0:	f8ad 0014 	strh.w	r0, [sp, #20]
 8012eb4:	4640      	mov	r0, r8
 8012eb6:	f8ad 2016 	strh.w	r2, [sp, #22]
 8012eba:	69ea      	ldr	r2, [r5, #28]
 8012ebc:	f7ff ff7a 	bl	8012db4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012ec0:	9b01      	ldr	r3, [sp, #4]
 8012ec2:	f9b4 2000 	ldrsh.w	r2, [r4]
 8012ec6:	b29f      	uxth	r7, r3
 8012ec8:	429a      	cmp	r2, r3
 8012eca:	da0d      	bge.n	8012ee8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8012ecc:	f8ad 2010 	strh.w	r2, [sp, #16]
 8012ed0:	1aba      	subs	r2, r7, r2
 8012ed2:	f8ad a012 	strh.w	sl, [sp, #18]
 8012ed6:	4631      	mov	r1, r6
 8012ed8:	f8ad 2014 	strh.w	r2, [sp, #20]
 8012edc:	4640      	mov	r0, r8
 8012ede:	f8ad 9016 	strh.w	r9, [sp, #22]
 8012ee2:	69ea      	ldr	r2, [r5, #28]
 8012ee4:	f7ff ff66 	bl	8012db4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012ee8:	8822      	ldrh	r2, [r4, #0]
 8012eea:	445f      	add	r7, fp
 8012eec:	88a3      	ldrh	r3, [r4, #4]
 8012eee:	b2bf      	uxth	r7, r7
 8012ef0:	4413      	add	r3, r2
 8012ef2:	b23a      	sxth	r2, r7
 8012ef4:	b29b      	uxth	r3, r3
 8012ef6:	b219      	sxth	r1, r3
 8012ef8:	4291      	cmp	r1, r2
 8012efa:	dd0d      	ble.n	8012f18 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8012efc:	1bdb      	subs	r3, r3, r7
 8012efe:	f8ad 2010 	strh.w	r2, [sp, #16]
 8012f02:	f8ad a012 	strh.w	sl, [sp, #18]
 8012f06:	4631      	mov	r1, r6
 8012f08:	f8ad 3014 	strh.w	r3, [sp, #20]
 8012f0c:	4640      	mov	r0, r8
 8012f0e:	f8ad 9016 	strh.w	r9, [sp, #22]
 8012f12:	69ea      	ldr	r2, [r5, #28]
 8012f14:	f7ff ff4e 	bl	8012db4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012f18:	88e2      	ldrh	r2, [r4, #6]
 8012f1a:	8863      	ldrh	r3, [r4, #2]
 8012f1c:	4413      	add	r3, r2
 8012f1e:	9a00      	ldr	r2, [sp, #0]
 8012f20:	444a      	add	r2, r9
 8012f22:	b29b      	uxth	r3, r3
 8012f24:	fa1f f982 	uxth.w	r9, r2
 8012f28:	b219      	sxth	r1, r3
 8012f2a:	fa0f f289 	sxth.w	r2, r9
 8012f2e:	428a      	cmp	r2, r1
 8012f30:	da15      	bge.n	8012f5e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8012f32:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8012f36:	eba3 0309 	sub.w	r3, r3, r9
 8012f3a:	f9b4 0000 	ldrsh.w	r0, [r4]
 8012f3e:	f8ad 1014 	strh.w	r1, [sp, #20]
 8012f42:	4631      	mov	r1, r6
 8012f44:	f8ad 0010 	strh.w	r0, [sp, #16]
 8012f48:	f8ad 2012 	strh.w	r2, [sp, #18]
 8012f4c:	f8ad 3016 	strh.w	r3, [sp, #22]
 8012f50:	69ea      	ldr	r2, [r5, #28]
 8012f52:	e001      	b.n	8012f58 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8012f54:	69ea      	ldr	r2, [r5, #28]
 8012f56:	4621      	mov	r1, r4
 8012f58:	4640      	mov	r0, r8
 8012f5a:	f7ff ff2b 	bl	8012db4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012f5e:	4628      	mov	r0, r5
 8012f60:	f7ff fe94 	bl	8012c8c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8012f64:	6861      	ldr	r1, [r4, #4]
 8012f66:	4602      	mov	r2, r0
 8012f68:	4633      	mov	r3, r6
 8012f6a:	6820      	ldr	r0, [r4, #0]
 8012f6c:	c303      	stmia	r3!, {r0, r1}
 8012f6e:	4611      	mov	r1, r2
 8012f70:	4630      	mov	r0, r6
 8012f72:	f7f9 fb57 	bl	800c624 <_ZN8touchgfx4RectaNERKS0_>
 8012f76:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8012f7a:	2b00      	cmp	r3, #0
 8012f7c:	f77f af33 	ble.w	8012de6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8012f80:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8012f84:	2b00      	cmp	r3, #0
 8012f86:	f77f af2e 	ble.w	8012de6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8012f8a:	4628      	mov	r0, r5
 8012f8c:	f7ff fe9a 	bl	8012cc4 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8012f90:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8012f94:	1a18      	subs	r0, r3, r0
 8012f96:	f8ad 0010 	strh.w	r0, [sp, #16]
 8012f9a:	4628      	mov	r0, r5
 8012f9c:	f7ff fea6 	bl	8012cec <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8012fa0:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8012fa4:	4631      	mov	r1, r6
 8012fa6:	1a18      	subs	r0, r3, r0
 8012fa8:	f8ad 0012 	strh.w	r0, [sp, #18]
 8012fac:	4628      	mov	r0, r5
 8012fae:	682b      	ldr	r3, [r5, #0]
 8012fb0:	689b      	ldr	r3, [r3, #8]
 8012fb2:	4798      	blx	r3
 8012fb4:	e717      	b.n	8012de6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08012fb6 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8012fb6:	b570      	push	{r4, r5, r6, lr}
 8012fb8:	1d06      	adds	r6, r0, #4
 8012fba:	b086      	sub	sp, #24
 8012fbc:	460c      	mov	r4, r1
 8012fbe:	2300      	movs	r3, #0
 8012fc0:	4631      	mov	r1, r6
 8012fc2:	4605      	mov	r5, r0
 8012fc4:	a802      	add	r0, sp, #8
 8012fc6:	9301      	str	r3, [sp, #4]
 8012fc8:	f7ff fbec 	bl	80127a4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012fcc:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8012fd0:	8822      	ldrh	r2, [r4, #0]
 8012fd2:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8012fd6:	1ad2      	subs	r2, r2, r3
 8012fd8:	8863      	ldrh	r3, [r4, #2]
 8012fda:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8012fde:	1a5b      	subs	r3, r3, r1
 8012fe0:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8012fe4:	f8ad 2010 	strh.w	r2, [sp, #16]
 8012fe8:	aa01      	add	r2, sp, #4
 8012fea:	f8ad 0014 	strh.w	r0, [sp, #20]
 8012fee:	4630      	mov	r0, r6
 8012ff0:	f8ad 1016 	strh.w	r1, [sp, #22]
 8012ff4:	a904      	add	r1, sp, #16
 8012ff6:	f8ad 3012 	strh.w	r3, [sp, #18]
 8012ffa:	f7f9 fbeb 	bl	800c7d4 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8012ffe:	9a01      	ldr	r2, [sp, #4]
 8013000:	b11a      	cbz	r2, 801300a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8013002:	4621      	mov	r1, r4
 8013004:	4628      	mov	r0, r5
 8013006:	f7ff fed5 	bl	8012db4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801300a:	b006      	add	sp, #24
 801300c:	bd70      	pop	{r4, r5, r6, pc}

0801300e <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 801300e:	4602      	mov	r2, r0
 8013010:	b530      	push	{r4, r5, lr}
 8013012:	4604      	mov	r4, r0
 8013014:	b085      	sub	sp, #20
 8013016:	f852 0f08 	ldr.w	r0, [r2, #8]!
 801301a:	460d      	mov	r5, r1
 801301c:	466b      	mov	r3, sp
 801301e:	6851      	ldr	r1, [r2, #4]
 8013020:	c303      	stmia	r3!, {r0, r1}
 8013022:	4629      	mov	r1, r5
 8013024:	4668      	mov	r0, sp
 8013026:	f7f9 fafd 	bl	800c624 <_ZN8touchgfx4RectaNERKS0_>
 801302a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801302e:	b12b      	cbz	r3, 801303c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8013030:	4669      	mov	r1, sp
 8013032:	4620      	mov	r0, r4
 8013034:	f7ff ffbf 	bl	8012fb6 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8013038:	b005      	add	sp, #20
 801303a:	bd30      	pop	{r4, r5, pc}
 801303c:	3404      	adds	r4, #4
 801303e:	a802      	add	r0, sp, #8
 8013040:	4621      	mov	r1, r4
 8013042:	f7ff fbaf 	bl	80127a4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013046:	f8bd 3000 	ldrh.w	r3, [sp]
 801304a:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 801304e:	4669      	mov	r1, sp
 8013050:	4620      	mov	r0, r4
 8013052:	1a9b      	subs	r3, r3, r2
 8013054:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8013058:	f8ad 3000 	strh.w	r3, [sp]
 801305c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8013060:	1a9b      	subs	r3, r3, r2
 8013062:	f8ad 3002 	strh.w	r3, [sp, #2]
 8013066:	f7f9 fb7c 	bl	800c762 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 801306a:	e7e5      	b.n	8013038 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

0801306c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 801306c:	460b      	mov	r3, r1
 801306e:	680a      	ldr	r2, [r1, #0]
 8013070:	1d01      	adds	r1, r0, #4
 8013072:	6992      	ldr	r2, [r2, #24]
 8013074:	4618      	mov	r0, r3
 8013076:	4710      	bx	r2

08013078 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 8013078:	4298      	cmp	r0, r3
 801307a:	d200      	bcs.n	801307e <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 801307c:	b913      	cbnz	r3, 8013084 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 801307e:	440a      	add	r2, r1
 8013080:	b210      	sxth	r0, r2
 8013082:	4770      	bx	lr
 8013084:	ee07 0a90 	vmov	s15, r0
 8013088:	eef8 6a67 	vcvt.f32.u32	s13, s15
 801308c:	ee07 3a90 	vmov	s15, r3
 8013090:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013094:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8013098:	ee07 2a90 	vmov	s15, r2
 801309c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80130a0:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 80130a4:	ee07 1a90 	vmov	s15, r1
 80130a8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80130ac:	ee37 7a66 	vsub.f32	s14, s14, s13
 80130b0:	ee67 5a07 	vmul.f32	s11, s14, s14
 80130b4:	eee5 6a87 	vfma.f32	s13, s11, s14
 80130b8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80130bc:	eee6 7a26 	vfma.f32	s15, s12, s13
 80130c0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80130c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80130c8:	bfcc      	ite	gt
 80130ca:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 80130ce:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 80130d2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80130d6:	ee17 3a90 	vmov	r3, s15
 80130da:	b218      	sxth	r0, r3
 80130dc:	4770      	bx	lr

080130de <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 80130de:	4298      	cmp	r0, r3
 80130e0:	d200      	bcs.n	80130e4 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 80130e2:	b913      	cbnz	r3, 80130ea <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 80130e4:	440a      	add	r2, r1
 80130e6:	b210      	sxth	r0, r2
 80130e8:	4770      	bx	lr
 80130ea:	ee07 2a90 	vmov	s15, r2
 80130ee:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80130f2:	ee07 0a90 	vmov	s15, r0
 80130f6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80130fa:	ee67 7a27 	vmul.f32	s15, s14, s15
 80130fe:	ee07 3a10 	vmov	s14, r3
 8013102:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8013106:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801310a:	ee07 1a90 	vmov	s15, r1
 801310e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013112:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013116:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 801311a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801311e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013122:	bfcc      	ite	gt
 8013124:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8013128:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801312c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8013130:	ee17 3a90 	vmov	r3, s15
 8013134:	b218      	sxth	r0, r3
 8013136:	4770      	bx	lr

08013138 <_ZN8touchgfx15EasingEquations12linearEaseInEtsst>:
 8013138:	f7ff bfd1 	b.w	80130de <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>

0801313c <_ZN8touchgfx12TextProviderC1Ev>:
 801313c:	b538      	push	{r3, r4, r5, lr}
 801313e:	2500      	movs	r5, #0
 8013140:	2302      	movs	r3, #2
 8013142:	4604      	mov	r4, r0
 8013144:	220e      	movs	r2, #14
 8013146:	7403      	strb	r3, [r0, #16]
 8013148:	4629      	mov	r1, r5
 801314a:	6145      	str	r5, [r0, #20]
 801314c:	7605      	strb	r5, [r0, #24]
 801314e:	83c5      	strh	r5, [r0, #30]
 8013150:	8405      	strh	r5, [r0, #32]
 8013152:	86c5      	strh	r5, [r0, #54]	; 0x36
 8013154:	8705      	strh	r5, [r0, #56]	; 0x38
 8013156:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8013158:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 801315c:	e9c0 5500 	strd	r5, r5, [r0]
 8013160:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8013164:	304c      	adds	r0, #76	; 0x4c
 8013166:	f00c fdc3 	bl	801fcf0 <memset>
 801316a:	2301      	movs	r3, #1
 801316c:	4620      	mov	r0, r4
 801316e:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 8013172:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8013176:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 801317a:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 801317e:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 8013182:	f7f0 fb63 	bl	800384c <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8013186:	4620      	mov	r0, r4
 8013188:	bd38      	pop	{r3, r4, r5, pc}
	...

0801318c <_ZN8touchgfx12TextProvider11endOfStringEv>:
 801318c:	b508      	push	{r3, lr}
 801318e:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8013190:	b92b      	cbnz	r3, 801319e <_ZN8touchgfx12TextProvider11endOfStringEv+0x12>
 8013192:	4b07      	ldr	r3, [pc, #28]	; (80131b0 <_ZN8touchgfx12TextProvider11endOfStringEv+0x24>)
 8013194:	21c0      	movs	r1, #192	; 0xc0
 8013196:	4a07      	ldr	r2, [pc, #28]	; (80131b4 <_ZN8touchgfx12TextProvider11endOfStringEv+0x28>)
 8013198:	4807      	ldr	r0, [pc, #28]	; (80131b8 <_ZN8touchgfx12TextProvider11endOfStringEv+0x2c>)
 801319a:	f00c fd1d 	bl	801fbd8 <__assert_func>
 801319e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80131a0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80131a4:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 80131a6:	fab0 f080 	clz	r0, r0
 80131aa:	0940      	lsrs	r0, r0, #5
 80131ac:	bd08      	pop	{r3, pc}
 80131ae:	bf00      	nop
 80131b0:	08021fac 	.word	0x08021fac
 80131b4:	08024517 	.word	0x08024517
 80131b8:	0802208c 	.word	0x0802208c

080131bc <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 80131bc:	b530      	push	{r4, r5, lr}
 80131be:	2500      	movs	r5, #0
 80131c0:	2401      	movs	r4, #1
 80131c2:	6843      	ldr	r3, [r0, #4]
 80131c4:	b913      	cbnz	r3, 80131cc <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 80131c6:	6803      	ldr	r3, [r0, #0]
 80131c8:	b313      	cbz	r3, 8013210 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 80131ca:	6043      	str	r3, [r0, #4]
 80131cc:	7e03      	ldrb	r3, [r0, #24]
 80131ce:	b143      	cbz	r3, 80131e2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 80131d0:	6943      	ldr	r3, [r0, #20]
 80131d2:	b12b      	cbz	r3, 80131e0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 80131d4:	881a      	ldrh	r2, [r3, #0]
 80131d6:	b11a      	cbz	r2, 80131e0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 80131d8:	1c9a      	adds	r2, r3, #2
 80131da:	6142      	str	r2, [r0, #20]
 80131dc:	8818      	ldrh	r0, [r3, #0]
 80131de:	bd30      	pop	{r4, r5, pc}
 80131e0:	7605      	strb	r5, [r0, #24]
 80131e2:	6843      	ldr	r3, [r0, #4]
 80131e4:	8819      	ldrh	r1, [r3, #0]
 80131e6:	b199      	cbz	r1, 8013210 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 80131e8:	1c9a      	adds	r2, r3, #2
 80131ea:	2902      	cmp	r1, #2
 80131ec:	6042      	str	r2, [r0, #4]
 80131ee:	d1f5      	bne.n	80131dc <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 80131f0:	7c03      	ldrb	r3, [r0, #16]
 80131f2:	2b01      	cmp	r3, #1
 80131f4:	d8e5      	bhi.n	80131c2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80131f6:	1c5a      	adds	r2, r3, #1
 80131f8:	3302      	adds	r3, #2
 80131fa:	7402      	strb	r2, [r0, #16]
 80131fc:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8013200:	6143      	str	r3, [r0, #20]
 8013202:	2b00      	cmp	r3, #0
 8013204:	d0dd      	beq.n	80131c2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8013206:	881b      	ldrh	r3, [r3, #0]
 8013208:	2b00      	cmp	r3, #0
 801320a:	d0da      	beq.n	80131c2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801320c:	7604      	strb	r4, [r0, #24]
 801320e:	e7d8      	b.n	80131c2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8013210:	2000      	movs	r0, #0
 8013212:	e7e4      	b.n	80131de <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08013214 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8013214:	6001      	str	r1, [r0, #0]
 8013216:	2100      	movs	r1, #0
 8013218:	b430      	push	{r4, r5}
 801321a:	6041      	str	r1, [r0, #4]
 801321c:	6815      	ldr	r5, [r2, #0]
 801321e:	6085      	str	r5, [r0, #8]
 8013220:	6852      	ldr	r2, [r2, #4]
 8013222:	6443      	str	r3, [r0, #68]	; 0x44
 8013224:	9b02      	ldr	r3, [sp, #8]
 8013226:	60c2      	str	r2, [r0, #12]
 8013228:	7401      	strb	r1, [r0, #16]
 801322a:	6141      	str	r1, [r0, #20]
 801322c:	7601      	strb	r1, [r0, #24]
 801322e:	8701      	strh	r1, [r0, #56]	; 0x38
 8013230:	8401      	strh	r1, [r0, #32]
 8013232:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8013236:	6483      	str	r3, [r0, #72]	; 0x48
 8013238:	bc30      	pop	{r4, r5}
 801323a:	f7f0 bb07 	b.w	800384c <_ZN8touchgfx12TextProvider18initializeInternalEv>

0801323e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 801323e:	b408      	push	{r3}
 8013240:	b510      	push	{r4, lr}
 8013242:	b085      	sub	sp, #20
 8013244:	ac07      	add	r4, sp, #28
 8013246:	f854 3b04 	ldr.w	r3, [r4], #4
 801324a:	9300      	str	r3, [sp, #0]
 801324c:	4613      	mov	r3, r2
 801324e:	4622      	mov	r2, r4
 8013250:	9403      	str	r4, [sp, #12]
 8013252:	f7ff ffdf 	bl	8013214 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8013256:	b005      	add	sp, #20
 8013258:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801325c:	b001      	add	sp, #4
 801325e:	4770      	bx	lr

08013260 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8013260:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013262:	4605      	mov	r5, r0
 8013264:	4608      	mov	r0, r1
 8013266:	b1f1      	cbz	r1, 80132a6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
 8013268:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 801326c:	460b      	mov	r3, r1
 801326e:	f101 0708 	add.w	r7, r1, #8
 8013272:	4622      	mov	r2, r4
 8013274:	6818      	ldr	r0, [r3, #0]
 8013276:	3308      	adds	r3, #8
 8013278:	f853 1c04 	ldr.w	r1, [r3, #-4]
 801327c:	4626      	mov	r6, r4
 801327e:	42bb      	cmp	r3, r7
 8013280:	c603      	stmia	r6!, {r0, r1}
 8013282:	4634      	mov	r4, r6
 8013284:	d1f6      	bne.n	8013274 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8013286:	6818      	ldr	r0, [r3, #0]
 8013288:	6030      	str	r0, [r6, #0]
 801328a:	4610      	mov	r0, r2
 801328c:	889b      	ldrh	r3, [r3, #4]
 801328e:	80b3      	strh	r3, [r6, #4]
 8013290:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 8013294:	015b      	lsls	r3, r3, #5
 8013296:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801329a:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 801329e:	430b      	orrs	r3, r1
 80132a0:	425b      	negs	r3, r3
 80132a2:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 80132a6:	bdf0      	pop	{r4, r5, r6, r7, pc}

080132a8 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 80132a8:	b538      	push	{r3, r4, r5, lr}
 80132aa:	460c      	mov	r4, r1
 80132ac:	6811      	ldr	r1, [r2, #0]
 80132ae:	4610      	mov	r0, r2
 80132b0:	68cd      	ldr	r5, [r1, #12]
 80132b2:	4619      	mov	r1, r3
 80132b4:	47a8      	blx	r5
 80132b6:	2800      	cmp	r0, #0
 80132b8:	bf08      	it	eq
 80132ba:	4620      	moveq	r0, r4
 80132bc:	bd38      	pop	{r3, r4, r5, pc}
	...

080132c0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 80132c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80132c2:	4604      	mov	r4, r0
 80132c4:	4615      	mov	r5, r2
 80132c6:	4608      	mov	r0, r1
 80132c8:	b93a      	cbnz	r2, 80132da <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 80132ca:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 80132ce:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 80132d2:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 80132d6:	4628      	mov	r0, r5
 80132d8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80132da:	f892 c00d 	ldrb.w	ip, [r2, #13]
 80132de:	8893      	ldrh	r3, [r2, #4]
 80132e0:	ea4f 160c 	mov.w	r6, ip, lsl #4
 80132e4:	f406 7280 	and.w	r2, r6, #256	; 0x100
 80132e8:	79ee      	ldrb	r6, [r5, #7]
 80132ea:	4316      	orrs	r6, r2
 80132ec:	f46f 6263 	mvn.w	r2, #3632	; 0xe30
 80132f0:	189a      	adds	r2, r3, r2
 80132f2:	b2b7      	uxth	r7, r6
 80132f4:	b291      	uxth	r1, r2
 80132f6:	291d      	cmp	r1, #29
 80132f8:	f200 8084 	bhi.w	8013404 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 80132fc:	2201      	movs	r2, #1
 80132fe:	10f6      	asrs	r6, r6, #3
 8013300:	408a      	lsls	r2, r1
 8013302:	4978      	ldr	r1, [pc, #480]	; (80134e4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x224>)
 8013304:	420a      	tst	r2, r1
 8013306:	d12e      	bne.n	8013366 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa6>
 8013308:	f412 7f60 	tst.w	r2, #896	; 0x380
 801330c:	d07a      	beq.n	8013404 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 801330e:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8013312:	462b      	mov	r3, r5
 8013314:	f105 0e08 	add.w	lr, r5, #8
 8013318:	4615      	mov	r5, r2
 801331a:	6818      	ldr	r0, [r3, #0]
 801331c:	3308      	adds	r3, #8
 801331e:	f853 1c04 	ldr.w	r1, [r3, #-4]
 8013322:	4694      	mov	ip, r2
 8013324:	4573      	cmp	r3, lr
 8013326:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 801332a:	4662      	mov	r2, ip
 801332c:	d1f5      	bne.n	801331a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 801332e:	6818      	ldr	r0, [r3, #0]
 8013330:	f8cc 0000 	str.w	r0, [ip]
 8013334:	889b      	ldrh	r3, [r3, #4]
 8013336:	f8ac 3004 	strh.w	r3, [ip, #4]
 801333a:	b2b3      	uxth	r3, r6
 801333c:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8013340:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8013344:	1aca      	subs	r2, r1, r3
 8013346:	1bcf      	subs	r7, r1, r7
 8013348:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 801334c:	b292      	uxth	r2, r2
 801334e:	1afb      	subs	r3, r7, r3
 8013350:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 8013354:	10d2      	asrs	r2, r2, #3
 8013356:	f002 0260 	and.w	r2, r2, #96	; 0x60
 801335a:	4302      	orrs	r2, r0
 801335c:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8013360:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8013364:	e7b7      	b.n	80132d6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8013366:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8013368:	b92b      	cbnz	r3, 8013376 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb6>
 801336a:	4b5f      	ldr	r3, [pc, #380]	; (80134e8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x228>)
 801336c:	21c0      	movs	r1, #192	; 0xc0
 801336e:	4a5f      	ldr	r2, [pc, #380]	; (80134ec <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x22c>)
 8013370:	485f      	ldr	r0, [pc, #380]	; (80134f0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x230>)
 8013372:	f00c fc31 	bl	801fbd8 <__assert_func>
 8013376:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8013378:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801337c:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 801337e:	f640 6333 	movw	r3, #3635	; 0xe33
 8013382:	4299      	cmp	r1, r3
 8013384:	d110      	bne.n	80133a8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xe8>
 8013386:	6803      	ldr	r3, [r0, #0]
 8013388:	68db      	ldr	r3, [r3, #12]
 801338a:	4798      	blx	r3
 801338c:	7b41      	ldrb	r1, [r0, #13]
 801338e:	00cb      	lsls	r3, r1, #3
 8013390:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8013394:	7a03      	ldrb	r3, [r0, #8]
 8013396:	0648      	lsls	r0, r1, #25
 8013398:	ea43 0302 	orr.w	r3, r3, r2
 801339c:	bf44      	itt	mi
 801339e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80133a2:	b21b      	sxthmi	r3, r3
 80133a4:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80133a8:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 80133ac:	462a      	mov	r2, r5
 80133ae:	f105 0c08 	add.w	ip, r5, #8
 80133b2:	443b      	add	r3, r7
 80133b4:	4433      	add	r3, r6
 80133b6:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 80133ba:	b29b      	uxth	r3, r3
 80133bc:	4635      	mov	r5, r6
 80133be:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80133c2:	6810      	ldr	r0, [r2, #0]
 80133c4:	3208      	adds	r2, #8
 80133c6:	f852 1c04 	ldr.w	r1, [r2, #-4]
 80133ca:	4637      	mov	r7, r6
 80133cc:	4562      	cmp	r2, ip
 80133ce:	c703      	stmia	r7!, {r0, r1}
 80133d0:	463e      	mov	r6, r7
 80133d2:	d1f6      	bne.n	80133c2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 80133d4:	6810      	ldr	r0, [r2, #0]
 80133d6:	6038      	str	r0, [r7, #0]
 80133d8:	8892      	ldrh	r2, [r2, #4]
 80133da:	80ba      	strh	r2, [r7, #4]
 80133dc:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80133e0:	10db      	asrs	r3, r3, #3
 80133e2:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80133e6:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80133ea:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80133ee:	4313      	orrs	r3, r2
 80133f0:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 80133f4:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80133f8:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 80133fc:	1a9b      	subs	r3, r3, r2
 80133fe:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8013402:	e768      	b.n	80132d6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8013404:	f023 0204 	bic.w	r2, r3, #4
 8013408:	f640 611b 	movw	r1, #3611	; 0xe1b
 801340c:	428a      	cmp	r2, r1
 801340e:	d003      	beq.n	8013418 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x158>
 8013410:	f640 621d 	movw	r2, #3613	; 0xe1d
 8013414:	4293      	cmp	r3, r2
 8013416:	d120      	bne.n	801345a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x19a>
 8013418:	3b01      	subs	r3, #1
 801341a:	4602      	mov	r2, r0
 801341c:	4629      	mov	r1, r5
 801341e:	4620      	mov	r0, r4
 8013420:	b29b      	uxth	r3, r3
 8013422:	f7ff ff41 	bl	80132a8 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8013426:	7b41      	ldrb	r1, [r0, #13]
 8013428:	00cb      	lsls	r3, r1, #3
 801342a:	0649      	lsls	r1, r1, #25
 801342c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8013430:	7a03      	ldrb	r3, [r0, #8]
 8013432:	ea43 0302 	orr.w	r3, r3, r2
 8013436:	bf44      	itt	mi
 8013438:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801343c:	b21b      	sxthmi	r3, r3
 801343e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8013442:	7b6b      	ldrb	r3, [r5, #13]
 8013444:	7aaa      	ldrb	r2, [r5, #10]
 8013446:	005b      	lsls	r3, r3, #1
 8013448:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801344c:	4313      	orrs	r3, r2
 801344e:	115a      	asrs	r2, r3, #5
 8013450:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8013454:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8013458:	e035      	b.n	80134c6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x206>
 801345a:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 801345e:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8013462:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8013466:	7a2a      	ldrb	r2, [r5, #8]
 8013468:	ea42 0201 	orr.w	r2, r2, r1
 801346c:	f640 6109 	movw	r1, #3593	; 0xe09
 8013470:	bf1c      	itt	ne
 8013472:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8013476:	b212      	sxthne	r2, r2
 8013478:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 801347c:	f023 0210 	bic.w	r2, r3, #16
 8013480:	428a      	cmp	r2, r1
 8013482:	d003      	beq.n	801348c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1cc>
 8013484:	f640 6213 	movw	r2, #3603	; 0xe13
 8013488:	4293      	cmp	r3, r2
 801348a:	d129      	bne.n	80134e0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x220>
 801348c:	7b6e      	ldrb	r6, [r5, #13]
 801348e:	4629      	mov	r1, r5
 8013490:	0076      	lsls	r6, r6, #1
 8013492:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8013496:	7aae      	ldrb	r6, [r5, #10]
 8013498:	4316      	orrs	r6, r2
 801349a:	f640 6213 	movw	r2, #3603	; 0xe13
 801349e:	4293      	cmp	r3, r2
 80134a0:	4602      	mov	r2, r0
 80134a2:	4620      	mov	r0, r4
 80134a4:	bf16      	itet	ne
 80134a6:	f103 33ff 	addne.w	r3, r3, #4294967295
 80134aa:	f640 630c 	movweq	r3, #3596	; 0xe0c
 80134ae:	b29b      	uxthne	r3, r3
 80134b0:	f7ff fefa 	bl	80132a8 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 80134b4:	7b43      	ldrb	r3, [r0, #13]
 80134b6:	7a82      	ldrb	r2, [r0, #10]
 80134b8:	005b      	lsls	r3, r3, #1
 80134ba:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80134be:	4313      	orrs	r3, r2
 80134c0:	1af6      	subs	r6, r6, r3
 80134c2:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 80134c6:	7b69      	ldrb	r1, [r5, #13]
 80134c8:	00cb      	lsls	r3, r1, #3
 80134ca:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80134ce:	7a2b      	ldrb	r3, [r5, #8]
 80134d0:	4313      	orrs	r3, r2
 80134d2:	064a      	lsls	r2, r1, #25
 80134d4:	bf44      	itt	mi
 80134d6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80134da:	b21b      	sxthmi	r3, r3
 80134dc:	1bdb      	subs	r3, r3, r7
 80134de:	e73f      	b.n	8013360 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa0>
 80134e0:	2300      	movs	r3, #0
 80134e2:	e7b7      	b.n	8013454 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x194>
 80134e4:	3fc00079 	.word	0x3fc00079
 80134e8:	08021fac 	.word	0x08021fac
 80134ec:	08024517 	.word	0x08024517
 80134f0:	0802208c 	.word	0x0802208c

080134f4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 80134f4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80134f8:	4604      	mov	r4, r0
 80134fa:	b942      	cbnz	r2, 801350e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 80134fc:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8013500:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8013504:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8013508:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 801350c:	e046      	b.n	801359c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 801350e:	7b51      	ldrb	r1, [r2, #13]
 8013510:	8893      	ldrh	r3, [r2, #4]
 8013512:	010f      	lsls	r7, r1, #4
 8013514:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8013518:	79d7      	ldrb	r7, [r2, #7]
 801351a:	4307      	orrs	r7, r0
 801351c:	2f04      	cmp	r7, #4
 801351e:	b2bd      	uxth	r5, r7
 8013520:	bfcc      	ite	gt
 8013522:	08bf      	lsrgt	r7, r7, #2
 8013524:	2701      	movle	r7, #1
 8013526:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 801352a:	f200 80ab 	bhi.w	8013684 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x190>
 801352e:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8013532:	4283      	cmp	r3, r0
 8013534:	d216      	bcs.n	8013564 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8013536:	f240 605b 	movw	r0, #1627	; 0x65b
 801353a:	4283      	cmp	r3, r0
 801353c:	d859      	bhi.n	80135f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xfe>
 801353e:	f240 6057 	movw	r0, #1623	; 0x657
 8013542:	4283      	cmp	r3, r0
 8013544:	d20e      	bcs.n	8013564 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8013546:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 801354a:	d24a      	bcs.n	80135e2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xee>
 801354c:	f240 604e 	movw	r0, #1614	; 0x64e
 8013550:	4283      	cmp	r3, r0
 8013552:	d207      	bcs.n	8013564 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8013554:	f240 601a 	movw	r0, #1562	; 0x61a
 8013558:	4283      	cmp	r3, r0
 801355a:	d02a      	beq.n	80135b2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 801355c:	d821      	bhi.n	80135a2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xae>
 801355e:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8013562:	d35b      	bcc.n	801361c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8013564:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8013568:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801356c:	f040 80d0 	bne.w	8013710 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 8013570:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8013574:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8013578:	f040 80ca 	bne.w	8013710 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 801357c:	00cb      	lsls	r3, r1, #3
 801357e:	0649      	lsls	r1, r1, #25
 8013580:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8013584:	7a13      	ldrb	r3, [r2, #8]
 8013586:	ea43 0300 	orr.w	r3, r3, r0
 801358a:	bf44      	itt	mi
 801358c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8013590:	b21b      	sxthmi	r3, r3
 8013592:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8013596:	1b5d      	subs	r5, r3, r5
 8013598:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801359c:	4610      	mov	r0, r2
 801359e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80135a2:	f240 604b 	movw	r0, #1611	; 0x64b
 80135a6:	4283      	cmp	r3, r0
 80135a8:	d338      	bcc.n	801361c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 80135aa:	f240 604c 	movw	r0, #1612	; 0x64c
 80135ae:	4283      	cmp	r3, r0
 80135b0:	d9d8      	bls.n	8013564 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 80135b2:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 80135b6:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 80135ba:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80135be:	f040 80f2 	bne.w	80137a6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>
 80135c2:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80135c6:	f040 80ee 	bne.w	80137a6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>
 80135ca:	00cb      	lsls	r3, r1, #3
 80135cc:	064e      	lsls	r6, r1, #25
 80135ce:	f403 7080 	and.w	r0, r3, #256	; 0x100
 80135d2:	7a13      	ldrb	r3, [r2, #8]
 80135d4:	ea43 0300 	orr.w	r3, r3, r0
 80135d8:	bf44      	itt	mi
 80135da:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80135de:	b21b      	sxthmi	r3, r3
 80135e0:	e7d9      	b.n	8013596 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa2>
 80135e2:	f240 6054 	movw	r0, #1620	; 0x654
 80135e6:	4283      	cmp	r3, r0
 80135e8:	d8e3      	bhi.n	80135b2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 80135ea:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 80135ee:	d9e0      	bls.n	80135b2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 80135f0:	e7b8      	b.n	8013564 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 80135f2:	f240 6074 	movw	r0, #1652	; 0x674
 80135f6:	4283      	cmp	r3, r0
 80135f8:	d0b4      	beq.n	8013564 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 80135fa:	d82d      	bhi.n	8013658 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x164>
 80135fc:	f240 605e 	movw	r0, #1630	; 0x65e
 8013600:	4283      	cmp	r3, r0
 8013602:	d804      	bhi.n	801360e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11a>
 8013604:	f240 605d 	movw	r0, #1629	; 0x65d
 8013608:	4283      	cmp	r3, r0
 801360a:	d3d2      	bcc.n	80135b2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 801360c:	e7aa      	b.n	8013564 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801360e:	f240 605f 	movw	r0, #1631	; 0x65f
 8013612:	4283      	cmp	r3, r0
 8013614:	d0cd      	beq.n	80135b2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8013616:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 801361a:	d0a3      	beq.n	8013564 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801361c:	00cb      	lsls	r3, r1, #3
 801361e:	0649      	lsls	r1, r1, #25
 8013620:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8013624:	7a13      	ldrb	r3, [r2, #8]
 8013626:	ea43 0300 	orr.w	r3, r3, r0
 801362a:	bf44      	itt	mi
 801362c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8013630:	b21b      	sxthmi	r3, r3
 8013632:	1b5d      	subs	r5, r3, r5
 8013634:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8013638:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801363c:	7b53      	ldrb	r3, [r2, #13]
 801363e:	015b      	lsls	r3, r3, #5
 8013640:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8013644:	7993      	ldrb	r3, [r2, #6]
 8013646:	430b      	orrs	r3, r1
 8013648:	2105      	movs	r1, #5
 801364a:	005b      	lsls	r3, r3, #1
 801364c:	fb93 f3f1 	sdiv	r3, r3, r1
 8013650:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8013654:	440b      	add	r3, r1
 8013656:	e757      	b.n	8013508 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8013658:	f240 60e2 	movw	r0, #1762	; 0x6e2
 801365c:	4283      	cmp	r3, r0
 801365e:	d809      	bhi.n	8013674 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x180>
 8013660:	f240 60df 	movw	r0, #1759	; 0x6df
 8013664:	4283      	cmp	r3, r0
 8013666:	f4bf af7d 	bcs.w	8013564 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801366a:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 801366e:	2b05      	cmp	r3, #5
 8013670:	d8d4      	bhi.n	801361c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8013672:	e777      	b.n	8013564 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8013674:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8013678:	4283      	cmp	r3, r0
 801367a:	d09a      	beq.n	80135b2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 801367c:	f240 60e4 	movw	r0, #1764	; 0x6e4
 8013680:	4283      	cmp	r3, r0
 8013682:	e7ca      	b.n	801361a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x126>
 8013684:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8013688:	d22b      	bcs.n	80136e2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ee>
 801368a:	f640 00ed 	movw	r0, #2285	; 0x8ed
 801368e:	4283      	cmp	r3, r0
 8013690:	d28f      	bcs.n	80135b2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8013692:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8013696:	4283      	cmp	r3, r0
 8013698:	d816      	bhi.n	80136c8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d4>
 801369a:	f640 00e4 	movw	r0, #2276	; 0x8e4
 801369e:	4283      	cmp	r3, r0
 80136a0:	f4bf af60 	bcs.w	8013564 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 80136a4:	f240 60ec 	movw	r0, #1772	; 0x6ec
 80136a8:	4283      	cmp	r3, r0
 80136aa:	d80a      	bhi.n	80136c2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ce>
 80136ac:	f240 60eb 	movw	r0, #1771	; 0x6eb
 80136b0:	4283      	cmp	r3, r0
 80136b2:	f4bf af57 	bcs.w	8013564 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 80136b6:	f240 60ea 	movw	r0, #1770	; 0x6ea
 80136ba:	4283      	cmp	r3, r0
 80136bc:	f43f af79 	beq.w	80135b2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 80136c0:	e7ac      	b.n	801361c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 80136c2:	f240 60ed 	movw	r0, #1773	; 0x6ed
 80136c6:	e7f8      	b.n	80136ba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c6>
 80136c8:	f640 00e8 	movw	r0, #2280	; 0x8e8
 80136cc:	4283      	cmp	r3, r0
 80136ce:	d802      	bhi.n	80136d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e2>
 80136d0:	f640 00e7 	movw	r0, #2279	; 0x8e7
 80136d4:	e798      	b.n	8013608 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x114>
 80136d6:	f640 00e9 	movw	r0, #2281	; 0x8e9
 80136da:	4283      	cmp	r3, r0
 80136dc:	f47f af42 	bne.w	8013564 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 80136e0:	e767      	b.n	80135b2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 80136e2:	f640 00f6 	movw	r0, #2294	; 0x8f6
 80136e6:	4283      	cmp	r3, r0
 80136e8:	f43f af63 	beq.w	80135b2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 80136ec:	d802      	bhi.n	80136f4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x200>
 80136ee:	f640 00f2 	movw	r0, #2290	; 0x8f2
 80136f2:	e7f2      	b.n	80136da <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e6>
 80136f4:	f640 00fa 	movw	r0, #2298	; 0x8fa
 80136f8:	4283      	cmp	r3, r0
 80136fa:	d805      	bhi.n	8013708 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x214>
 80136fc:	f640 00f9 	movw	r0, #2297	; 0x8f9
 8013700:	4283      	cmp	r3, r0
 8013702:	f4ff af2f 	bcc.w	8013564 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8013706:	e754      	b.n	80135b2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8013708:	f640 00fe 	movw	r0, #2302	; 0x8fe
 801370c:	4283      	cmp	r3, r0
 801370e:	e7af      	b.n	8013670 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17c>
 8013710:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8013714:	4617      	mov	r7, r2
 8013716:	f102 0808 	add.w	r8, r2, #8
 801371a:	4666      	mov	r6, ip
 801371c:	6838      	ldr	r0, [r7, #0]
 801371e:	3708      	adds	r7, #8
 8013720:	f857 1c04 	ldr.w	r1, [r7, #-4]
 8013724:	46e6      	mov	lr, ip
 8013726:	4547      	cmp	r7, r8
 8013728:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 801372c:	46f4      	mov	ip, lr
 801372e:	d1f5      	bne.n	801371c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x228>
 8013730:	6838      	ldr	r0, [r7, #0]
 8013732:	f8ce 0000 	str.w	r0, [lr]
 8013736:	88b9      	ldrh	r1, [r7, #4]
 8013738:	f8ae 1004 	strh.w	r1, [lr, #4]
 801373c:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8013740:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8013744:	d009      	beq.n	801375a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8013746:	7b51      	ldrb	r1, [r2, #13]
 8013748:	7992      	ldrb	r2, [r2, #6]
 801374a:	0149      	lsls	r1, r1, #5
 801374c:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8013750:	4311      	orrs	r1, r2
 8013752:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8013756:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 801375a:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801375e:	d00d      	beq.n	801377c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x288>
 8013760:	442b      	add	r3, r5
 8013762:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8013766:	b29b      	uxth	r3, r3
 8013768:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801376c:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8013770:	10db      	asrs	r3, r3, #3
 8013772:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8013776:	4313      	orrs	r3, r2
 8013778:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801377c:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8013780:	00cb      	lsls	r3, r1, #3
 8013782:	064f      	lsls	r7, r1, #25
 8013784:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8013788:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801378c:	ea43 0302 	orr.w	r3, r3, r2
 8013790:	bf44      	itt	mi
 8013792:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8013796:	b21b      	sxthmi	r3, r3
 8013798:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801379c:	1b5d      	subs	r5, r3, r5
 801379e:	4632      	mov	r2, r6
 80137a0:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80137a4:	e6fa      	b.n	801359c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 80137a6:	f104 0e4c 	add.w	lr, r4, #76	; 0x4c
 80137aa:	4694      	mov	ip, r2
 80137ac:	f102 0908 	add.w	r9, r2, #8
 80137b0:	4676      	mov	r6, lr
 80137b2:	f8dc 0000 	ldr.w	r0, [ip]
 80137b6:	f10c 0c08 	add.w	ip, ip, #8
 80137ba:	f85c 1c04 	ldr.w	r1, [ip, #-4]
 80137be:	46f0      	mov	r8, lr
 80137c0:	45cc      	cmp	ip, r9
 80137c2:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 80137c6:	46c6      	mov	lr, r8
 80137c8:	d1f3      	bne.n	80137b2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2be>
 80137ca:	f8dc 0000 	ldr.w	r0, [ip]
 80137ce:	f8c8 0000 	str.w	r0, [r8]
 80137d2:	f8bc 1004 	ldrh.w	r1, [ip, #4]
 80137d6:	f8a8 1004 	strh.w	r1, [r8, #4]
 80137da:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 80137de:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80137e2:	d009      	beq.n	80137f8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x304>
 80137e4:	7b51      	ldrb	r1, [r2, #13]
 80137e6:	7992      	ldrb	r2, [r2, #6]
 80137e8:	0149      	lsls	r1, r1, #5
 80137ea:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80137ee:	4311      	orrs	r1, r2
 80137f0:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80137f4:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 80137f8:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80137fc:	d00d      	beq.n	801381a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x326>
 80137fe:	1bdb      	subs	r3, r3, r7
 8013800:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8013804:	b29b      	uxth	r3, r3
 8013806:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801380a:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801380e:	10db      	asrs	r3, r3, #3
 8013810:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8013814:	4313      	orrs	r3, r2
 8013816:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801381a:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 801381e:	00cb      	lsls	r3, r1, #3
 8013820:	0648      	lsls	r0, r1, #25
 8013822:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8013826:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801382a:	ea43 0302 	orr.w	r3, r3, r2
 801382e:	bf44      	itt	mi
 8013830:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8013834:	b21b      	sxthmi	r3, r3
 8013836:	e7b1      	b.n	801379c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2a8>

08013838 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8013838:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801383c:	461e      	mov	r6, r3
 801383e:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8013840:	4604      	mov	r4, r0
 8013842:	4617      	mov	r7, r2
 8013844:	b92b      	cbnz	r3, 8013852 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1a>
 8013846:	4b25      	ldr	r3, [pc, #148]	; (80138dc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa4>)
 8013848:	21c0      	movs	r1, #192	; 0xc0
 801384a:	4a25      	ldr	r2, [pc, #148]	; (80138e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa8>)
 801384c:	4825      	ldr	r0, [pc, #148]	; (80138e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xac>)
 801384e:	f00c f9c3 	bl	801fbd8 <__assert_func>
 8013852:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8013854:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8013858:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801385c:	f7ef ffb4 	bl	80037c8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8013860:	4605      	mov	r5, r0
 8013862:	b918      	cbnz	r0, 801386c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x34>
 8013864:	6030      	str	r0, [r6, #0]
 8013866:	4628      	mov	r0, r5
 8013868:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801386c:	683b      	ldr	r3, [r7, #0]
 801386e:	4601      	mov	r1, r0
 8013870:	4638      	mov	r0, r7
 8013872:	68db      	ldr	r3, [r3, #12]
 8013874:	4798      	blx	r3
 8013876:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801387a:	4602      	mov	r2, r0
 801387c:	6030      	str	r0, [r6, #0]
 801387e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8013882:	d213      	bcs.n	80138ac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x74>
 8013884:	4643      	mov	r3, r8
 8013886:	4639      	mov	r1, r7
 8013888:	4620      	mov	r0, r4
 801388a:	f7ff fe33 	bl	80134f4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801388e:	6030      	str	r0, [r6, #0]
 8013890:	6833      	ldr	r3, [r6, #0]
 8013892:	b143      	cbz	r3, 80138a6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x6e>
 8013894:	7b5a      	ldrb	r2, [r3, #13]
 8013896:	7a9b      	ldrb	r3, [r3, #10]
 8013898:	0052      	lsls	r2, r2, #1
 801389a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801389e:	4313      	orrs	r3, r2
 80138a0:	bf0c      	ite	eq
 80138a2:	2301      	moveq	r3, #1
 80138a4:	2300      	movne	r3, #0
 80138a6:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 80138aa:	e7dc      	b.n	8013866 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x2e>
 80138ac:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 80138b0:	b29b      	uxth	r3, r3
 80138b2:	2b7f      	cmp	r3, #127	; 0x7f
 80138b4:	d804      	bhi.n	80138c0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x88>
 80138b6:	4639      	mov	r1, r7
 80138b8:	4620      	mov	r0, r4
 80138ba:	f7ff fd01 	bl	80132c0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80138be:	e7e6      	b.n	801388e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 80138c0:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 80138c4:	2b00      	cmp	r3, #0
 80138c6:	d0e3      	beq.n	8013890 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 80138c8:	f640 1302 	movw	r3, #2306	; 0x902
 80138cc:	429d      	cmp	r5, r3
 80138ce:	d1df      	bne.n	8013890 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 80138d0:	4601      	mov	r1, r0
 80138d2:	4620      	mov	r0, r4
 80138d4:	f7ff fcc4 	bl	8013260 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80138d8:	e7d9      	b.n	801388e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 80138da:	bf00      	nop
 80138dc:	08021fac 	.word	0x08021fac
 80138e0:	08024517 	.word	0x08024517
 80138e4:	0802208c 	.word	0x0802208c

080138e8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 80138e8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80138ec:	461e      	mov	r6, r3
 80138ee:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 80138f0:	4604      	mov	r4, r0
 80138f2:	4617      	mov	r7, r2
 80138f4:	b92b      	cbnz	r3, 8013902 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1a>
 80138f6:	4b26      	ldr	r3, [pc, #152]	; (8013990 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xa8>)
 80138f8:	21c0      	movs	r1, #192	; 0xc0
 80138fa:	4a26      	ldr	r2, [pc, #152]	; (8013994 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xac>)
 80138fc:	4826      	ldr	r0, [pc, #152]	; (8013998 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xb0>)
 80138fe:	f00c f96b 	bl	801fbd8 <__assert_func>
 8013902:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8013904:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8013908:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801390c:	f7ef ff5c 	bl	80037c8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8013910:	4605      	mov	r5, r0
 8013912:	b918      	cbnz	r0, 801391c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x34>
 8013914:	6030      	str	r0, [r6, #0]
 8013916:	4628      	mov	r0, r5
 8013918:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801391c:	683b      	ldr	r3, [r7, #0]
 801391e:	4601      	mov	r1, r0
 8013920:	4638      	mov	r0, r7
 8013922:	f8d3 9008 	ldr.w	r9, [r3, #8]
 8013926:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 801392a:	47c8      	blx	r9
 801392c:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8013930:	4602      	mov	r2, r0
 8013932:	6030      	str	r0, [r6, #0]
 8013934:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8013938:	d213      	bcs.n	8013962 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7a>
 801393a:	4643      	mov	r3, r8
 801393c:	4639      	mov	r1, r7
 801393e:	4620      	mov	r0, r4
 8013940:	f7ff fdd8 	bl	80134f4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8013944:	6030      	str	r0, [r6, #0]
 8013946:	6833      	ldr	r3, [r6, #0]
 8013948:	b143      	cbz	r3, 801395c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x74>
 801394a:	7b5a      	ldrb	r2, [r3, #13]
 801394c:	7a9b      	ldrb	r3, [r3, #10]
 801394e:	0052      	lsls	r2, r2, #1
 8013950:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8013954:	4313      	orrs	r3, r2
 8013956:	bf0c      	ite	eq
 8013958:	2301      	moveq	r3, #1
 801395a:	2300      	movne	r3, #0
 801395c:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8013960:	e7d9      	b.n	8013916 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x2e>
 8013962:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8013966:	b29b      	uxth	r3, r3
 8013968:	2b7f      	cmp	r3, #127	; 0x7f
 801396a:	d804      	bhi.n	8013976 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x8e>
 801396c:	4639      	mov	r1, r7
 801396e:	4620      	mov	r0, r4
 8013970:	f7ff fca6 	bl	80132c0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8013974:	e7e6      	b.n	8013944 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 8013976:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 801397a:	2b00      	cmp	r3, #0
 801397c:	d0e3      	beq.n	8013946 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 801397e:	f640 1302 	movw	r3, #2306	; 0x902
 8013982:	429d      	cmp	r5, r3
 8013984:	d1df      	bne.n	8013946 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 8013986:	4601      	mov	r1, r0
 8013988:	4620      	mov	r0, r4
 801398a:	f7ff fc69 	bl	8013260 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801398e:	e7d9      	b.n	8013944 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 8013990:	08021fac 	.word	0x08021fac
 8013994:	08024517 	.word	0x08024517
 8013998:	0802208c 	.word	0x0802208c

0801399c <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 801399c:	b510      	push	{r4, lr}
 801399e:	4604      	mov	r4, r0
 80139a0:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 80139a4:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80139a6:	b9d9      	cbnz	r1, 80139e0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x44>
 80139a8:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80139aa:	2b0a      	cmp	r3, #10
 80139ac:	d037      	beq.n	8013a1e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x82>
 80139ae:	4620      	mov	r0, r4
 80139b0:	f7ff fc04 	bl	80131bc <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 80139b4:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80139b6:	2b09      	cmp	r3, #9
 80139b8:	d906      	bls.n	80139c8 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x2c>
 80139ba:	4b19      	ldr	r3, [pc, #100]	; (8013a20 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x84>)
 80139bc:	f44f 7182 	mov.w	r1, #260	; 0x104
 80139c0:	4a18      	ldr	r2, [pc, #96]	; (8013a24 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x88>)
 80139c2:	4819      	ldr	r0, [pc, #100]	; (8013a28 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x8c>)
 80139c4:	f00c f908 	bl	801fbd8 <__assert_func>
 80139c8:	1c5a      	adds	r2, r3, #1
 80139ca:	8722      	strh	r2, [r4, #56]	; 0x38
 80139cc:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80139ce:	4413      	add	r3, r2
 80139d0:	b29b      	uxth	r3, r3
 80139d2:	2b09      	cmp	r3, #9
 80139d4:	bf88      	it	hi
 80139d6:	3b0a      	subhi	r3, #10
 80139d8:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80139dc:	8458      	strh	r0, [r3, #34]	; 0x22
 80139de:	e7e3      	b.n	80139a8 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0xc>
 80139e0:	2b0a      	cmp	r3, #10
 80139e2:	d01c      	beq.n	8013a1e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x82>
 80139e4:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 80139e6:	3901      	subs	r1, #1
 80139e8:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 80139ec:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 80139ee:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 80139f2:	1c51      	adds	r1, r2, #1
 80139f4:	b289      	uxth	r1, r1
 80139f6:	2901      	cmp	r1, #1
 80139f8:	bf8a      	itet	hi
 80139fa:	f102 32ff 	addhi.w	r2, r2, #4294967295
 80139fe:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 8013a00:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 8013a02:	2b09      	cmp	r3, #9
 8013a04:	d8d9      	bhi.n	80139ba <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x1e>
 8013a06:	1c5a      	adds	r2, r3, #1
 8013a08:	8722      	strh	r2, [r4, #56]	; 0x38
 8013a0a:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8013a0c:	4413      	add	r3, r2
 8013a0e:	b29b      	uxth	r3, r3
 8013a10:	2b09      	cmp	r3, #9
 8013a12:	bf88      	it	hi
 8013a14:	3b0a      	subhi	r3, #10
 8013a16:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8013a1a:	8458      	strh	r0, [r3, #34]	; 0x22
 8013a1c:	e7c0      	b.n	80139a0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8013a1e:	bd10      	pop	{r4, pc}
 8013a20:	080242e8 	.word	0x080242e8
 8013a24:	0802466d 	.word	0x0802466d
 8013a28:	0802208c 	.word	0x0802208c

08013a2c <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8013a2c:	b538      	push	{r3, r4, r5, lr}
 8013a2e:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 8013a30:	4604      	mov	r4, r0
 8013a32:	b92a      	cbnz	r2, 8013a40 <_ZN8touchgfx12TextProvider11getNextCharEv+0x14>
 8013a34:	4b13      	ldr	r3, [pc, #76]	; (8013a84 <_ZN8touchgfx12TextProvider11getNextCharEv+0x58>)
 8013a36:	21d5      	movs	r1, #213	; 0xd5
 8013a38:	4a13      	ldr	r2, [pc, #76]	; (8013a88 <_ZN8touchgfx12TextProvider11getNextCharEv+0x5c>)
 8013a3a:	4814      	ldr	r0, [pc, #80]	; (8013a8c <_ZN8touchgfx12TextProvider11getNextCharEv+0x60>)
 8013a3c:	f00c f8cc 	bl	801fbd8 <__assert_func>
 8013a40:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8013a42:	3a01      	subs	r2, #1
 8013a44:	eb00 0143 	add.w	r1, r0, r3, lsl #1
 8013a48:	8c4d      	ldrh	r5, [r1, #34]	; 0x22
 8013a4a:	8702      	strh	r2, [r0, #56]	; 0x38
 8013a4c:	1c5a      	adds	r2, r3, #1
 8013a4e:	b292      	uxth	r2, r2
 8013a50:	2a09      	cmp	r2, #9
 8013a52:	bf8a      	itet	hi
 8013a54:	3b09      	subhi	r3, #9
 8013a56:	86c2      	strhls	r2, [r0, #54]	; 0x36
 8013a58:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 8013a5a:	f7ff ff9f 	bl	801399c <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8013a5e:	8c23      	ldrh	r3, [r4, #32]
 8013a60:	2b01      	cmp	r3, #1
 8013a62:	bf9c      	itt	ls
 8013a64:	3301      	addls	r3, #1
 8013a66:	8423      	strhls	r3, [r4, #32]
 8013a68:	8be3      	ldrh	r3, [r4, #30]
 8013a6a:	b90b      	cbnz	r3, 8013a70 <_ZN8touchgfx12TextProvider11getNextCharEv+0x44>
 8013a6c:	2302      	movs	r3, #2
 8013a6e:	83e3      	strh	r3, [r4, #30]
 8013a70:	8be3      	ldrh	r3, [r4, #30]
 8013a72:	4628      	mov	r0, r5
 8013a74:	3b01      	subs	r3, #1
 8013a76:	b29b      	uxth	r3, r3
 8013a78:	83e3      	strh	r3, [r4, #30]
 8013a7a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013a7e:	8365      	strh	r5, [r4, #26]
 8013a80:	bd38      	pop	{r3, r4, r5, pc}
 8013a82:	bf00      	nop
 8013a84:	08021fac 	.word	0x08021fac
 8013a88:	080245c2 	.word	0x080245c2
 8013a8c:	0802208c 	.word	0x0802208c

08013a90 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8013a90:	428a      	cmp	r2, r1
 8013a92:	b538      	push	{r3, r4, r5, lr}
 8013a94:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 8013a96:	d90c      	bls.n	8013ab2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x22>
 8013a98:	b92c      	cbnz	r4, 8013aa6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x16>
 8013a9a:	4b1c      	ldr	r3, [pc, #112]	; (8013b0c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x7c>)
 8013a9c:	21e1      	movs	r1, #225	; 0xe1
 8013a9e:	4a1c      	ldr	r2, [pc, #112]	; (8013b10 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x80>)
 8013aa0:	481c      	ldr	r0, [pc, #112]	; (8013b14 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>)
 8013aa2:	f00c f899 	bl	801fbd8 <__assert_func>
 8013aa6:	3c01      	subs	r4, #1
 8013aa8:	4b1b      	ldr	r3, [pc, #108]	; (8013b18 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x88>)
 8013aaa:	4a1c      	ldr	r2, [pc, #112]	; (8013b1c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x8c>)
 8013aac:	21c5      	movs	r1, #197	; 0xc5
 8013aae:	8704      	strh	r4, [r0, #56]	; 0x38
 8013ab0:	e7f6      	b.n	8013aa0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 8013ab2:	428c      	cmp	r4, r1
 8013ab4:	d203      	bcs.n	8013abe <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x2e>
 8013ab6:	4b1a      	ldr	r3, [pc, #104]	; (8013b20 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x90>)
 8013ab8:	21cb      	movs	r1, #203	; 0xcb
 8013aba:	4a1a      	ldr	r2, [pc, #104]	; (8013b24 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x94>)
 8013abc:	e7f0      	b.n	8013aa0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 8013abe:	1a64      	subs	r4, r4, r1
 8013ac0:	250a      	movs	r5, #10
 8013ac2:	8704      	strh	r4, [r0, #56]	; 0x38
 8013ac4:	8ec4      	ldrh	r4, [r0, #54]	; 0x36
 8013ac6:	4421      	add	r1, r4
 8013ac8:	b289      	uxth	r1, r1
 8013aca:	2909      	cmp	r1, #9
 8013acc:	bf88      	it	hi
 8013ace:	390a      	subhi	r1, #10
 8013ad0:	86c1      	strh	r1, [r0, #54]	; 0x36
 8013ad2:	b1ba      	cbz	r2, 8013b04 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x74>
 8013ad4:	3a01      	subs	r2, #1
 8013ad6:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8013ad8:	b292      	uxth	r2, r2
 8013ada:	2909      	cmp	r1, #9
 8013adc:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8013ae0:	d903      	bls.n	8013aea <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x5a>
 8013ae2:	4b11      	ldr	r3, [pc, #68]	; (8013b28 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>)
 8013ae4:	21e6      	movs	r1, #230	; 0xe6
 8013ae6:	4a11      	ldr	r2, [pc, #68]	; (8013b2c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9c>)
 8013ae8:	e7da      	b.n	8013aa0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 8013aea:	3101      	adds	r1, #1
 8013aec:	8701      	strh	r1, [r0, #56]	; 0x38
 8013aee:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8013af0:	b901      	cbnz	r1, 8013af4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x64>
 8013af2:	86c5      	strh	r5, [r0, #54]	; 0x36
 8013af4:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8013af6:	3901      	subs	r1, #1
 8013af8:	b289      	uxth	r1, r1
 8013afa:	86c1      	strh	r1, [r0, #54]	; 0x36
 8013afc:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8013b00:	844c      	strh	r4, [r1, #34]	; 0x22
 8013b02:	e7e6      	b.n	8013ad2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x42>
 8013b04:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8013b08:	f7ff bf48 	b.w	801399c <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8013b0c:	08021fac 	.word	0x08021fac
 8013b10:	0802439b 	.word	0x0802439b
 8013b14:	0802208c 	.word	0x0802208c
 8013b18:	080220b8 	.word	0x080220b8
 8013b1c:	08024445 	.word	0x08024445
 8013b20:	080242f4 	.word	0x080242f4
 8013b24:	0802471c 	.word	0x0802471c
 8013b28:	08024300 	.word	0x08024300
 8013b2c:	08024313 	.word	0x08024313

08013b30 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8013b30:	3a01      	subs	r2, #1
 8013b32:	b570      	push	{r4, r5, r6, lr}
 8013b34:	b292      	uxth	r2, r2
 8013b36:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8013b3a:	42b2      	cmp	r2, r6
 8013b3c:	d019      	beq.n	8013b72 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x42>
 8013b3e:	8c04      	ldrh	r4, [r0, #32]
 8013b40:	f831 5b02 	ldrh.w	r5, [r1], #2
 8013b44:	4294      	cmp	r4, r2
 8013b46:	d805      	bhi.n	8013b54 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x24>
 8013b48:	4b19      	ldr	r3, [pc, #100]	; (8013bb0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 8013b4a:	4a1a      	ldr	r2, [pc, #104]	; (8013bb4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x84>)
 8013b4c:	21c5      	movs	r1, #197	; 0xc5
 8013b4e:	481a      	ldr	r0, [pc, #104]	; (8013bb8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x88>)
 8013b50:	f00c f842 	bl	801fbd8 <__assert_func>
 8013b54:	8bc4      	ldrh	r4, [r0, #30]
 8013b56:	4414      	add	r4, r2
 8013b58:	3a01      	subs	r2, #1
 8013b5a:	b2a4      	uxth	r4, r4
 8013b5c:	b292      	uxth	r2, r2
 8013b5e:	2c01      	cmp	r4, #1
 8013b60:	bf88      	it	hi
 8013b62:	3c02      	subhi	r4, #2
 8013b64:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8013b68:	8b64      	ldrh	r4, [r4, #26]
 8013b6a:	42ac      	cmp	r4, r5
 8013b6c:	d0e5      	beq.n	8013b3a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0xa>
 8013b6e:	2000      	movs	r0, #0
 8013b70:	bd70      	pop	{r4, r5, r6, pc}
 8013b72:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8013b76:	2400      	movs	r4, #0
 8013b78:	4413      	add	r3, r2
 8013b7a:	b2a2      	uxth	r2, r4
 8013b7c:	429a      	cmp	r2, r3
 8013b7e:	da14      	bge.n	8013baa <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x7a>
 8013b80:	8f06      	ldrh	r6, [r0, #56]	; 0x38
 8013b82:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8013b86:	4296      	cmp	r6, r2
 8013b88:	d802      	bhi.n	8013b90 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x60>
 8013b8a:	4b09      	ldr	r3, [pc, #36]	; (8013bb0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 8013b8c:	4a0b      	ldr	r2, [pc, #44]	; (8013bbc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x8c>)
 8013b8e:	e7dd      	b.n	8013b4c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x1c>
 8013b90:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 8013b92:	3401      	adds	r4, #1
 8013b94:	4432      	add	r2, r6
 8013b96:	b292      	uxth	r2, r2
 8013b98:	2a09      	cmp	r2, #9
 8013b9a:	bf88      	it	hi
 8013b9c:	3a0a      	subhi	r2, #10
 8013b9e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8013ba2:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 8013ba4:	42aa      	cmp	r2, r5
 8013ba6:	d0e8      	beq.n	8013b7a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4a>
 8013ba8:	e7e1      	b.n	8013b6e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x3e>
 8013baa:	2001      	movs	r0, #1
 8013bac:	e7e0      	b.n	8013b70 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x40>
 8013bae:	bf00      	nop
 8013bb0:	080220b8 	.word	0x080220b8
 8013bb4:	080247a0 	.word	0x080247a0
 8013bb8:	0802208c 	.word	0x0802208c
 8013bbc:	08024445 	.word	0x08024445

08013bc0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8013bc0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013bc4:	4605      	mov	r5, r0
 8013bc6:	4616      	mov	r6, r2
 8013bc8:	1c8c      	adds	r4, r1, #2
 8013bca:	8809      	ldrh	r1, [r1, #0]
 8013bcc:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8013bd0:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8013bd4:	42b3      	cmp	r3, r6
 8013bd6:	d124      	bne.n	8013c22 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8013bd8:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8013bdc:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8013be0:	f001 070f 	and.w	r7, r1, #15
 8013be4:	4652      	mov	r2, sl
 8013be6:	f8cd 8000 	str.w	r8, [sp]
 8013bea:	464b      	mov	r3, r9
 8013bec:	4621      	mov	r1, r4
 8013bee:	4628      	mov	r0, r5
 8013bf0:	f7ff ff9e 	bl	8013b30 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8013bf4:	4683      	mov	fp, r0
 8013bf6:	b168      	cbz	r0, 8013c14 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8013bf8:	eb0a 0109 	add.w	r1, sl, r9
 8013bfc:	463a      	mov	r2, r7
 8013bfe:	4628      	mov	r0, r5
 8013c00:	4441      	add	r1, r8
 8013c02:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8013c06:	4649      	mov	r1, r9
 8013c08:	f7ff ff42 	bl	8013a90 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8013c0c:	4658      	mov	r0, fp
 8013c0e:	b003      	add	sp, #12
 8013c10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013c14:	eb07 010a 	add.w	r1, r7, sl
 8013c18:	4449      	add	r1, r9
 8013c1a:	4441      	add	r1, r8
 8013c1c:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8013c20:	e7d2      	b.n	8013bc8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8013c22:	f04f 0b00 	mov.w	fp, #0
 8013c26:	e7f1      	b.n	8013c0c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08013c28 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8013c28:	b570      	push	{r4, r5, r6, lr}
 8013c2a:	8810      	ldrh	r0, [r2, #0]
 8013c2c:	4298      	cmp	r0, r3
 8013c2e:	d817      	bhi.n	8013c60 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8013c30:	1e48      	subs	r0, r1, #1
 8013c32:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8013c36:	4298      	cmp	r0, r3
 8013c38:	d312      	bcc.n	8013c60 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8013c3a:	2400      	movs	r4, #0
 8013c3c:	428c      	cmp	r4, r1
 8013c3e:	d20f      	bcs.n	8013c60 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8013c40:	1860      	adds	r0, r4, r1
 8013c42:	1040      	asrs	r0, r0, #1
 8013c44:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8013c48:	0085      	lsls	r5, r0, #2
 8013c4a:	42b3      	cmp	r3, r6
 8013c4c:	d902      	bls.n	8013c54 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8013c4e:	3001      	adds	r0, #1
 8013c50:	b284      	uxth	r4, r0
 8013c52:	e7f3      	b.n	8013c3c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8013c54:	d201      	bcs.n	8013c5a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8013c56:	b281      	uxth	r1, r0
 8013c58:	e7f0      	b.n	8013c3c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8013c5a:	442a      	add	r2, r5
 8013c5c:	8850      	ldrh	r0, [r2, #2]
 8013c5e:	bd70      	pop	{r4, r5, r6, pc}
 8013c60:	2000      	movs	r0, #0
 8013c62:	e7fc      	b.n	8013c5e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08013c64 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8013c64:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013c68:	6c45      	ldr	r5, [r0, #68]	; 0x44
 8013c6a:	4604      	mov	r4, r0
 8013c6c:	260b      	movs	r6, #11
 8013c6e:	886f      	ldrh	r7, [r5, #2]
 8013c70:	087f      	lsrs	r7, r7, #1
 8013c72:	3e01      	subs	r6, #1
 8013c74:	d01b      	beq.n	8013cae <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 8013c76:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8013c78:	b92b      	cbnz	r3, 8013c86 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x22>
 8013c7a:	4b0e      	ldr	r3, [pc, #56]	; (8013cb4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x50>)
 8013c7c:	21c0      	movs	r1, #192	; 0xc0
 8013c7e:	4a0e      	ldr	r2, [pc, #56]	; (8013cb8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x54>)
 8013c80:	480e      	ldr	r0, [pc, #56]	; (8013cbc <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x58>)
 8013c82:	f00b ffa9 	bl	801fbd8 <__assert_func>
 8013c86:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8013c88:	462a      	mov	r2, r5
 8013c8a:	4639      	mov	r1, r7
 8013c8c:	4620      	mov	r0, r4
 8013c8e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8013c92:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8013c96:	4643      	mov	r3, r8
 8013c98:	f7ff ffc6 	bl	8013c28 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8013c9c:	b138      	cbz	r0, 8013cae <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 8013c9e:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8013ca2:	4642      	mov	r2, r8
 8013ca4:	4620      	mov	r0, r4
 8013ca6:	f7ff ff8b 	bl	8013bc0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8013caa:	2800      	cmp	r0, #0
 8013cac:	d1e1      	bne.n	8013c72 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8013cae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013cb2:	bf00      	nop
 8013cb4:	08021fac 	.word	0x08021fac
 8013cb8:	08024517 	.word	0x08024517
 8013cbc:	0802208c 	.word	0x0802208c

08013cc0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8013cc0:	b570      	push	{r4, r5, r6, lr}
 8013cc2:	694a      	ldr	r2, [r1, #20]
 8013cc4:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8013cc6:	684b      	ldr	r3, [r1, #4]
 8013cc8:	1b54      	subs	r4, r2, r5
 8013cca:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 8013ccc:	f000 8106 	beq.w	8013edc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8013cd0:	1b9b      	subs	r3, r3, r6
 8013cd2:	d003      	beq.n	8013cdc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8013cd4:	4363      	muls	r3, r4
 8013cd6:	2210      	movs	r2, #16
 8013cd8:	fb93 f3f2 	sdiv	r3, r3, r2
 8013cdc:	680c      	ldr	r4, [r1, #0]
 8013cde:	698a      	ldr	r2, [r1, #24]
 8013ce0:	1b65      	subs	r5, r4, r5
 8013ce2:	f000 80fd 	beq.w	8013ee0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8013ce6:	1b92      	subs	r2, r2, r6
 8013ce8:	d003      	beq.n	8013cf2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8013cea:	436a      	muls	r2, r5
 8013cec:	2410      	movs	r4, #16
 8013cee:	fb92 f2f4 	sdiv	r2, r2, r4
 8013cf2:	1a9b      	subs	r3, r3, r2
 8013cf4:	ed9f 4a89 	vldr	s8, [pc, #548]	; 8013f1c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8013cf8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8013cfc:	460a      	mov	r2, r1
 8013cfe:	ee07 3a90 	vmov	s15, r3
 8013d02:	f100 040c 	add.w	r4, r0, #12
 8013d06:	4603      	mov	r3, r0
 8013d08:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013d0c:	ee67 7a84 	vmul.f32	s15, s15, s8
 8013d10:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8013d14:	eeb1 6a43 	vneg.f32	s12, s6
 8013d18:	edd2 7a02 	vldr	s15, [r2, #8]
 8013d1c:	3214      	adds	r2, #20
 8013d1e:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8013d22:	ece3 6a01 	vstmia	r3!, {s13}
 8013d26:	429c      	cmp	r4, r3
 8013d28:	ed52 7a02 	vldr	s15, [r2, #-8]
 8013d2c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8013d30:	edc3 7a02 	vstr	s15, [r3, #8]
 8013d34:	ed52 7a01 	vldr	s15, [r2, #-4]
 8013d38:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8013d3c:	edc3 7a05 	vstr	s15, [r3, #20]
 8013d40:	d1ea      	bne.n	8013d18 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8013d42:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8013d44:	698b      	ldr	r3, [r1, #24]
 8013d46:	edd0 4a02 	vldr	s9, [r0, #8]
 8013d4a:	1a9b      	subs	r3, r3, r2
 8013d4c:	edd0 3a00 	vldr	s7, [r0]
 8013d50:	edd0 6a01 	vldr	s13, [r0, #4]
 8013d54:	ee07 3a90 	vmov	s15, r3
 8013d58:	684b      	ldr	r3, [r1, #4]
 8013d5a:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8013d5e:	ed90 5a05 	vldr	s10, [r0, #20]
 8013d62:	1a9b      	subs	r3, r3, r2
 8013d64:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013d68:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8013d6c:	ed90 2a03 	vldr	s4, [r0, #12]
 8013d70:	ee07 3a10 	vmov	s14, r3
 8013d74:	edd0 5a04 	vldr	s11, [r0, #16]
 8013d78:	ee67 7a84 	vmul.f32	s15, s15, s8
 8013d7c:	ed90 1a07 	vldr	s2, [r0, #28]
 8013d80:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013d84:	edd0 2a06 	vldr	s5, [r0, #24]
 8013d88:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8013d8c:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8013d90:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013d94:	ee32 5a45 	vsub.f32	s10, s4, s10
 8013d98:	eee6 7a87 	vfma.f32	s15, s13, s14
 8013d9c:	ee67 7a83 	vmul.f32	s15, s15, s6
 8013da0:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8013da4:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8013da6:	694a      	ldr	r2, [r1, #20]
 8013da8:	1b13      	subs	r3, r2, r4
 8013daa:	ee07 3a10 	vmov	s14, r3
 8013dae:	680b      	ldr	r3, [r1, #0]
 8013db0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013db4:	1b1b      	subs	r3, r3, r4
 8013db6:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013dba:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8013dbe:	ee07 3a10 	vmov	s14, r3
 8013dc2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013dc6:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013dca:	eee6 4a87 	vfma.f32	s9, s13, s14
 8013dce:	ee64 4a86 	vmul.f32	s9, s9, s12
 8013dd2:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 8013dd6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8013dd8:	698b      	ldr	r3, [r1, #24]
 8013dda:	1a9b      	subs	r3, r3, r2
 8013ddc:	ee06 3a90 	vmov	s13, r3
 8013de0:	684b      	ldr	r3, [r1, #4]
 8013de2:	1a9b      	subs	r3, r3, r2
 8013de4:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8013de8:	ee07 3a10 	vmov	s14, r3
 8013dec:	ee66 6a84 	vmul.f32	s13, s13, s8
 8013df0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013df4:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8013df8:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013dfc:	eee5 6a87 	vfma.f32	s13, s11, s14
 8013e00:	ee66 6a83 	vmul.f32	s13, s13, s6
 8013e04:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8013e08:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8013e0a:	694a      	ldr	r2, [r1, #20]
 8013e0c:	1b13      	subs	r3, r2, r4
 8013e0e:	ee07 3a10 	vmov	s14, r3
 8013e12:	680b      	ldr	r3, [r1, #0]
 8013e14:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013e18:	1b1b      	subs	r3, r3, r4
 8013e1a:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013e1e:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8013e22:	ee07 3a10 	vmov	s14, r3
 8013e26:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013e2a:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013e2e:	eea5 5a87 	vfma.f32	s10, s11, s14
 8013e32:	edd0 5a08 	vldr	s11, [r0, #32]
 8013e36:	ee31 1a65 	vsub.f32	s2, s2, s11
 8013e3a:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8013e3e:	ee25 5a06 	vmul.f32	s10, s10, s12
 8013e42:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 8013e46:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8013e48:	698b      	ldr	r3, [r1, #24]
 8013e4a:	1a9b      	subs	r3, r3, r2
 8013e4c:	ee07 3a10 	vmov	s14, r3
 8013e50:	684b      	ldr	r3, [r1, #4]
 8013e52:	1a9b      	subs	r3, r3, r2
 8013e54:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013e58:	ee01 3a90 	vmov	s3, r3
 8013e5c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013e60:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8013e64:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8013e68:	ee61 1a84 	vmul.f32	s3, s3, s8
 8013e6c:	eea1 7a21 	vfma.f32	s14, s2, s3
 8013e70:	ee27 7a03 	vmul.f32	s14, s14, s6
 8013e74:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8013e78:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8013e7a:	694a      	ldr	r2, [r1, #20]
 8013e7c:	1b13      	subs	r3, r2, r4
 8013e7e:	ee03 3a10 	vmov	s6, r3
 8013e82:	680b      	ldr	r3, [r1, #0]
 8013e84:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8013e88:	1b1b      	subs	r3, r3, r4
 8013e8a:	ee23 3a04 	vmul.f32	s6, s6, s8
 8013e8e:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8013e92:	ee03 3a10 	vmov	s6, r3
 8013e96:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8013e9a:	ee23 4a04 	vmul.f32	s8, s6, s8
 8013e9e:	eee1 5a04 	vfma.f32	s11, s2, s8
 8013ea2:	ee25 6a86 	vmul.f32	s12, s11, s12
 8013ea6:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8013eaa:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 8013eae:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8013eb2:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8013eb6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013eba:	dd13      	ble.n	8013ee4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8013ebc:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8013ec0:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8013ec4:	63c3      	str	r3, [r0, #60]	; 0x3c
 8013ec6:	eee3 7a87 	vfma.f32	s15, s7, s14
 8013eca:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8013ece:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013ed2:	dd15      	ble.n	8013f00 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8013ed4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8013ed8:	6403      	str	r3, [r0, #64]	; 0x40
 8013eda:	bd70      	pop	{r4, r5, r6, pc}
 8013edc:	4623      	mov	r3, r4
 8013ede:	e6fd      	b.n	8013cdc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8013ee0:	462a      	mov	r2, r5
 8013ee2:	e706      	b.n	8013cf2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8013ee4:	d502      	bpl.n	8013eec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8013ee6:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8013eea:	e7e9      	b.n	8013ec0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8013eec:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8013ef0:	eea3 2a85 	vfma.f32	s4, s7, s10
 8013ef4:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8013ef8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013efc:	dade      	bge.n	8013ebc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8013efe:	e7f2      	b.n	8013ee6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8013f00:	d502      	bpl.n	8013f08 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8013f02:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8013f06:	e7e7      	b.n	8013ed8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8013f08:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8013f0c:	eee3 4a86 	vfma.f32	s9, s7, s12
 8013f10:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8013f14:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013f18:	dadc      	bge.n	8013ed4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8013f1a:	e7f2      	b.n	8013f02 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8013f1c:	3d800000 	.word	0x3d800000

08013f20 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8013f20:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013f24:	2714      	movs	r7, #20
 8013f26:	435f      	muls	r7, r3
 8013f28:	eb02 0c07 	add.w	ip, r2, r7
 8013f2c:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8013f30:	f115 0e0f 	adds.w	lr, r5, #15
 8013f34:	d433      	bmi.n	8013f9e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x7e>
 8013f36:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8013f3a:	9c08      	ldr	r4, [sp, #32]
 8013f3c:	2614      	movs	r6, #20
 8013f3e:	f8c0 e014 	str.w	lr, [r0, #20]
 8013f42:	4366      	muls	r6, r4
 8013f44:	eb02 0806 	add.w	r8, r2, r6
 8013f48:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8013f4c:	f115 040f 	adds.w	r4, r5, #15
 8013f50:	d431      	bmi.n	8013fb6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x96>
 8013f52:	1124      	asrs	r4, r4, #4
 8013f54:	eba4 040e 	sub.w	r4, r4, lr
 8013f58:	6184      	str	r4, [r0, #24]
 8013f5a:	2c00      	cmp	r4, #0
 8013f5c:	f000 80aa 	beq.w	80140b4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x194>
 8013f60:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8013f64:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8013f68:	5995      	ldr	r5, [r2, r6]
 8013f6a:	eba4 0809 	sub.w	r8, r4, r9
 8013f6e:	59d4      	ldr	r4, [r2, r7]
 8013f70:	eba5 0a04 	sub.w	sl, r5, r4
 8013f74:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8013f78:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8013f7c:	2e00      	cmp	r6, #0
 8013f7e:	fb0e fe05 	mul.w	lr, lr, r5
 8013f82:	fb0a ee19 	mls	lr, sl, r9, lr
 8013f86:	fb08 e404 	mla	r4, r8, r4, lr
 8013f8a:	f104 34ff 	add.w	r4, r4, #4294967295
 8013f8e:	4434      	add	r4, r6
 8013f90:	dc1d      	bgt.n	8013fce <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xae>
 8013f92:	4b5b      	ldr	r3, [pc, #364]	; (8014100 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1e0>)
 8013f94:	21f7      	movs	r1, #247	; 0xf7
 8013f96:	4a5b      	ldr	r2, [pc, #364]	; (8014104 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1e4>)
 8013f98:	485b      	ldr	r0, [pc, #364]	; (8014108 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1e8>)
 8013f9a:	f00b fe1d 	bl	801fbd8 <__assert_func>
 8013f9e:	2410      	movs	r4, #16
 8013fa0:	f1c5 0501 	rsb	r5, r5, #1
 8013fa4:	fb9e fef4 	sdiv	lr, lr, r4
 8013fa8:	f015 050f 	ands.w	r5, r5, #15
 8013fac:	bf18      	it	ne
 8013fae:	2501      	movne	r5, #1
 8013fb0:	ebae 0e05 	sub.w	lr, lr, r5
 8013fb4:	e7c1      	b.n	8013f3a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1a>
 8013fb6:	f04f 0910 	mov.w	r9, #16
 8013fba:	f1c5 0501 	rsb	r5, r5, #1
 8013fbe:	fb94 f4f9 	sdiv	r4, r4, r9
 8013fc2:	f015 050f 	ands.w	r5, r5, #15
 8013fc6:	bf18      	it	ne
 8013fc8:	2501      	movne	r5, #1
 8013fca:	1b64      	subs	r4, r4, r5
 8013fcc:	e7c2      	b.n	8013f54 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x34>
 8013fce:	2c00      	cmp	r4, #0
 8013fd0:	db72      	blt.n	80140b8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x198>
 8013fd2:	fb94 fef6 	sdiv	lr, r4, r6
 8013fd6:	fb06 441e 	mls	r4, r6, lr, r4
 8013fda:	f8c0 e000 	str.w	lr, [r0]
 8013fde:	6104      	str	r4, [r0, #16]
 8013fe0:	2d00      	cmp	r5, #0
 8013fe2:	db7b      	blt.n	80140dc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1bc>
 8013fe4:	fb95 f4f6 	sdiv	r4, r5, r6
 8013fe8:	fb06 5514 	mls	r5, r6, r4, r5
 8013fec:	6044      	str	r4, [r0, #4]
 8013fee:	6085      	str	r5, [r0, #8]
 8013ff0:	60c6      	str	r6, [r0, #12]
 8013ff2:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8013ff6:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8013ffa:	6945      	ldr	r5, [r0, #20]
 8013ffc:	59d2      	ldr	r2, [r2, r7]
 8013ffe:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8014002:	eddf 6a42 	vldr	s13, [pc, #264]	; 801410c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1ec>
 8014006:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801400a:	ee07 4a10 	vmov	s14, r4
 801400e:	6804      	ldr	r4, [r0, #0]
 8014010:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8014014:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014018:	ee07 2a90 	vmov	s15, r2
 801401c:	ee27 7a26 	vmul.f32	s14, s14, s13
 8014020:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8014024:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8014028:	edd3 6a00 	vldr	s13, [r3]
 801402c:	eee6 6a07 	vfma.f32	s13, s12, s14
 8014030:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 8014034:	eee6 6a27 	vfma.f32	s13, s12, s15
 8014038:	edc0 6a07 	vstr	s13, [r0, #28]
 801403c:	edd0 6a01 	vldr	s13, [r0, #4]
 8014040:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 8014044:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8014048:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801404c:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8014050:	ed80 6a08 	vstr	s12, [r0, #32]
 8014054:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8014056:	6242      	str	r2, [r0, #36]	; 0x24
 8014058:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 801405c:	ed93 6a03 	vldr	s12, [r3, #12]
 8014060:	eea5 6a87 	vfma.f32	s12, s11, s14
 8014064:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8014068:	eea5 6aa7 	vfma.f32	s12, s11, s15
 801406c:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 8014070:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8014074:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 8014078:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801407c:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8014080:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8014082:	6302      	str	r2, [r0, #48]	; 0x30
 8014084:	ed93 6a06 	vldr	s12, [r3, #24]
 8014088:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 801408c:	eea5 6a87 	vfma.f32	s12, s11, s14
 8014090:	eeb0 7a46 	vmov.f32	s14, s12
 8014094:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 8014098:	eea6 7a27 	vfma.f32	s14, s12, s15
 801409c:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 80140a0:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 80140a4:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 80140a8:	eee6 7a87 	vfma.f32	s15, s13, s14
 80140ac:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 80140b0:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 80140b2:	63c3      	str	r3, [r0, #60]	; 0x3c
 80140b4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80140b8:	4264      	negs	r4, r4
 80140ba:	fb94 fef6 	sdiv	lr, r4, r6
 80140be:	f1ce 0800 	rsb	r8, lr, #0
 80140c2:	fb06 441e 	mls	r4, r6, lr, r4
 80140c6:	f8c0 8000 	str.w	r8, [r0]
 80140ca:	6104      	str	r4, [r0, #16]
 80140cc:	2c00      	cmp	r4, #0
 80140ce:	d087      	beq.n	8013fe0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xc0>
 80140d0:	ea6f 0e0e 	mvn.w	lr, lr
 80140d4:	1b34      	subs	r4, r6, r4
 80140d6:	f8c0 e000 	str.w	lr, [r0]
 80140da:	e780      	b.n	8013fde <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xbe>
 80140dc:	426d      	negs	r5, r5
 80140de:	fb95 f4f6 	sdiv	r4, r5, r6
 80140e2:	f1c4 0e00 	rsb	lr, r4, #0
 80140e6:	fb06 5514 	mls	r5, r6, r4, r5
 80140ea:	f8c0 e004 	str.w	lr, [r0, #4]
 80140ee:	6085      	str	r5, [r0, #8]
 80140f0:	2d00      	cmp	r5, #0
 80140f2:	f43f af7d 	beq.w	8013ff0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xd0>
 80140f6:	43e4      	mvns	r4, r4
 80140f8:	1b75      	subs	r5, r6, r5
 80140fa:	6044      	str	r4, [r0, #4]
 80140fc:	e777      	b.n	8013fee <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xce>
 80140fe:	bf00      	nop
 8014100:	08024871 	.word	0x08024871
 8014104:	080248b0 	.word	0x080248b0
 8014108:	08024881 	.word	0x08024881
 801410c:	3d800000 	.word	0x3d800000

08014110 <_ZN8touchgfx7Unicode6strlenEPKt>:
 8014110:	4602      	mov	r2, r0
 8014112:	b148      	cbz	r0, 8014128 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8014114:	2300      	movs	r3, #0
 8014116:	b298      	uxth	r0, r3
 8014118:	3301      	adds	r3, #1
 801411a:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 801411e:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8014122:	2900      	cmp	r1, #0
 8014124:	d1f7      	bne.n	8014116 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8014126:	4770      	bx	lr
 8014128:	4770      	bx	lr

0801412a <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 801412a:	b530      	push	{r4, r5, lr}
 801412c:	4604      	mov	r4, r0
 801412e:	b159      	cbz	r1, 8014148 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8014130:	b148      	cbz	r0, 8014146 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8014132:	2300      	movs	r3, #0
 8014134:	b298      	uxth	r0, r3
 8014136:	4282      	cmp	r2, r0
 8014138:	d905      	bls.n	8014146 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801413a:	5ccd      	ldrb	r5, [r1, r3]
 801413c:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8014140:	3301      	adds	r3, #1
 8014142:	2d00      	cmp	r5, #0
 8014144:	d1f6      	bne.n	8014134 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 8014146:	bd30      	pop	{r4, r5, pc}
 8014148:	4608      	mov	r0, r1
 801414a:	e7fc      	b.n	8014146 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

0801414c <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>:
 801414c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801414e:	468c      	mov	ip, r1
 8014150:	b08b      	sub	sp, #44	; 0x2c
 8014152:	2100      	movs	r1, #0
 8014154:	ae01      	add	r6, sp, #4
 8014156:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801415a:	211f      	movs	r1, #31
 801415c:	fbb0 f7f3 	udiv	r7, r0, r3
 8014160:	fb03 0517 	mls	r5, r3, r7, r0
 8014164:	4638      	mov	r0, r7
 8014166:	b2ec      	uxtb	r4, r5
 8014168:	2d09      	cmp	r5, #9
 801416a:	bfd4      	ite	le
 801416c:	3430      	addle	r4, #48	; 0x30
 801416e:	3457      	addgt	r4, #87	; 0x57
 8014170:	b2e4      	uxtb	r4, r4
 8014172:	558c      	strb	r4, [r1, r6]
 8014174:	1e4c      	subs	r4, r1, #1
 8014176:	b92f      	cbnz	r7, 8014184 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x38>
 8014178:	4431      	add	r1, r6
 801417a:	4660      	mov	r0, ip
 801417c:	f7ff ffd5 	bl	801412a <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8014180:	b00b      	add	sp, #44	; 0x2c
 8014182:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014184:	4621      	mov	r1, r4
 8014186:	e7e9      	b.n	801415c <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x10>

08014188 <_ZN8touchgfx7Unicode4itoaElPtti>:
 8014188:	b5f0      	push	{r4, r5, r6, r7, lr}
 801418a:	4607      	mov	r7, r0
 801418c:	b08b      	sub	sp, #44	; 0x2c
 801418e:	4608      	mov	r0, r1
 8014190:	b341      	cbz	r1, 80141e4 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 8014192:	1e99      	subs	r1, r3, #2
 8014194:	2922      	cmp	r1, #34	; 0x22
 8014196:	d825      	bhi.n	80141e4 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 8014198:	2100      	movs	r1, #0
 801419a:	463c      	mov	r4, r7
 801419c:	261f      	movs	r6, #31
 801419e:	f10d 0c04 	add.w	ip, sp, #4
 80141a2:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 80141a6:	1e71      	subs	r1, r6, #1
 80141a8:	fb94 fef3 	sdiv	lr, r4, r3
 80141ac:	fb03 441e 	mls	r4, r3, lr, r4
 80141b0:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 80141b4:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 80141b8:	b2ec      	uxtb	r4, r5
 80141ba:	2d09      	cmp	r5, #9
 80141bc:	bfd4      	ite	le
 80141be:	3430      	addle	r4, #48	; 0x30
 80141c0:	3457      	addgt	r4, #87	; 0x57
 80141c2:	b2e4      	uxtb	r4, r4
 80141c4:	f80c 4006 	strb.w	r4, [ip, r6]
 80141c8:	4674      	mov	r4, lr
 80141ca:	b96c      	cbnz	r4, 80141e8 <_ZN8touchgfx7Unicode4itoaElPtti+0x60>
 80141cc:	2f00      	cmp	r7, #0
 80141ce:	da05      	bge.n	80141dc <_ZN8touchgfx7Unicode4itoaElPtti+0x54>
 80141d0:	ab0a      	add	r3, sp, #40	; 0x28
 80141d2:	4419      	add	r1, r3
 80141d4:	232d      	movs	r3, #45	; 0x2d
 80141d6:	f801 3c24 	strb.w	r3, [r1, #-36]
 80141da:	1eb1      	subs	r1, r6, #2
 80141dc:	3101      	adds	r1, #1
 80141de:	4461      	add	r1, ip
 80141e0:	f7ff ffa3 	bl	801412a <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80141e4:	b00b      	add	sp, #44	; 0x2c
 80141e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80141e8:	460e      	mov	r6, r1
 80141ea:	e7dc      	b.n	80141a6 <_ZN8touchgfx7Unicode4itoaElPtti+0x1e>

080141ec <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 80141ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80141f0:	b085      	sub	sp, #20
 80141f2:	4691      	mov	r9, r2
 80141f4:	6802      	ldr	r2, [r0, #0]
 80141f6:	4688      	mov	r8, r1
 80141f8:	461c      	mov	r4, r3
 80141fa:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 80141fe:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8014202:	4683      	mov	fp, r0
 8014204:	4610      	mov	r0, r2
 8014206:	9103      	str	r1, [sp, #12]
 8014208:	9302      	str	r3, [sp, #8]
 801420a:	9201      	str	r2, [sp, #4]
 801420c:	f7ff ff80 	bl	8014110 <_ZN8touchgfx7Unicode6strlenEPKt>
 8014210:	f1b8 0f00 	cmp.w	r8, #0
 8014214:	bf0c      	ite	eq
 8014216:	4684      	moveq	ip, r0
 8014218:	f100 0c01 	addne.w	ip, r0, #1
 801421c:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8014220:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8014224:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8014226:	fa1f fc8c 	uxth.w	ip, ip
 801422a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801422c:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8014230:	9903      	ldr	r1, [sp, #12]
 8014232:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8014236:	d041      	beq.n	80142bc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8014238:	d834      	bhi.n	80142a4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 801423a:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 801423e:	d059      	beq.n	80142f4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8014240:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8014244:	d03a      	beq.n	80142bc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8014246:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 801424a:	d034      	beq.n	80142b6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 801424c:	2400      	movs	r4, #0
 801424e:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8014252:	3a01      	subs	r2, #1
 8014254:	b169      	cbz	r1, 8014272 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8014256:	9911      	ldr	r1, [sp, #68]	; 0x44
 8014258:	458c      	cmp	ip, r1
 801425a:	da09      	bge.n	8014270 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 801425c:	eba1 010c 	sub.w	r1, r1, ip
 8014260:	b289      	uxth	r1, r1
 8014262:	b933      	cbnz	r3, 8014272 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8014264:	2e00      	cmp	r6, #0
 8014266:	d051      	beq.n	801430c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8014268:	2800      	cmp	r0, #0
 801426a:	d04f      	beq.n	801430c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801426c:	440c      	add	r4, r1
 801426e:	b2a4      	uxth	r4, r4
 8014270:	2100      	movs	r1, #0
 8014272:	682b      	ldr	r3, [r5, #0]
 8014274:	4293      	cmp	r3, r2
 8014276:	da07      	bge.n	8014288 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8014278:	f1b8 0f00 	cmp.w	r8, #0
 801427c:	d004      	beq.n	8014288 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801427e:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8014282:	682b      	ldr	r3, [r5, #0]
 8014284:	3301      	adds	r3, #1
 8014286:	602b      	str	r3, [r5, #0]
 8014288:	2730      	movs	r7, #48	; 0x30
 801428a:	2c00      	cmp	r4, #0
 801428c:	d04e      	beq.n	801432c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801428e:	682e      	ldr	r6, [r5, #0]
 8014290:	3c01      	subs	r4, #1
 8014292:	42b2      	cmp	r2, r6
 8014294:	b2a4      	uxth	r4, r4
 8014296:	dd49      	ble.n	801432c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8014298:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801429c:	682b      	ldr	r3, [r5, #0]
 801429e:	3301      	adds	r3, #1
 80142a0:	602b      	str	r3, [r5, #0]
 80142a2:	e7f2      	b.n	801428a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 80142a4:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 80142a8:	d01d      	beq.n	80142e6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 80142aa:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 80142ae:	d002      	beq.n	80142b6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 80142b0:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 80142b4:	e7c9      	b.n	801424a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 80142b6:	4684      	mov	ip, r0
 80142b8:	f04f 0800 	mov.w	r8, #0
 80142bc:	2c00      	cmp	r4, #0
 80142be:	d0c6      	beq.n	801424e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80142c0:	b947      	cbnz	r7, 80142d4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 80142c2:	2801      	cmp	r0, #1
 80142c4:	d106      	bne.n	80142d4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 80142c6:	8814      	ldrh	r4, [r2, #0]
 80142c8:	2c30      	cmp	r4, #48	; 0x30
 80142ca:	bf02      	ittt	eq
 80142cc:	3202      	addeq	r2, #2
 80142ce:	4638      	moveq	r0, r7
 80142d0:	f8cb 2000 	streq.w	r2, [fp]
 80142d4:	45bc      	cmp	ip, r7
 80142d6:	da14      	bge.n	8014302 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 80142d8:	b2bf      	uxth	r7, r7
 80142da:	eba7 040c 	sub.w	r4, r7, ip
 80142de:	46bc      	mov	ip, r7
 80142e0:	b2a4      	uxth	r4, r4
 80142e2:	2600      	movs	r6, #0
 80142e4:	e7b3      	b.n	801424e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80142e6:	4684      	mov	ip, r0
 80142e8:	b16c      	cbz	r4, 8014306 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 80142ea:	42b8      	cmp	r0, r7
 80142ec:	dd00      	ble.n	80142f0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 80142ee:	b2b8      	uxth	r0, r7
 80142f0:	2400      	movs	r4, #0
 80142f2:	e003      	b.n	80142fc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 80142f4:	f04f 0c01 	mov.w	ip, #1
 80142f8:	2400      	movs	r4, #0
 80142fa:	4660      	mov	r0, ip
 80142fc:	4626      	mov	r6, r4
 80142fe:	46a0      	mov	r8, r4
 8014300:	e7a5      	b.n	801424e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8014302:	2400      	movs	r4, #0
 8014304:	e7ed      	b.n	80142e2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8014306:	4626      	mov	r6, r4
 8014308:	46a0      	mov	r8, r4
 801430a:	e7a0      	b.n	801424e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801430c:	2900      	cmp	r1, #0
 801430e:	d0b0      	beq.n	8014272 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8014310:	2720      	movs	r7, #32
 8014312:	682e      	ldr	r6, [r5, #0]
 8014314:	2900      	cmp	r1, #0
 8014316:	d0ac      	beq.n	8014272 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8014318:	3901      	subs	r1, #1
 801431a:	4296      	cmp	r6, r2
 801431c:	b289      	uxth	r1, r1
 801431e:	daa7      	bge.n	8014270 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8014320:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8014324:	682b      	ldr	r3, [r5, #0]
 8014326:	3301      	adds	r3, #1
 8014328:	602b      	str	r3, [r5, #0]
 801432a:	e7f2      	b.n	8014312 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 801432c:	b188      	cbz	r0, 8014352 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801432e:	682b      	ldr	r3, [r5, #0]
 8014330:	3801      	subs	r0, #1
 8014332:	429a      	cmp	r2, r3
 8014334:	b280      	uxth	r0, r0
 8014336:	dd0c      	ble.n	8014352 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8014338:	f8db 3000 	ldr.w	r3, [fp]
 801433c:	1c9c      	adds	r4, r3, #2
 801433e:	f8cb 4000 	str.w	r4, [fp]
 8014342:	881c      	ldrh	r4, [r3, #0]
 8014344:	682b      	ldr	r3, [r5, #0]
 8014346:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 801434a:	682b      	ldr	r3, [r5, #0]
 801434c:	3301      	adds	r3, #1
 801434e:	602b      	str	r3, [r5, #0]
 8014350:	e7ec      	b.n	801432c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8014352:	2620      	movs	r6, #32
 8014354:	b151      	cbz	r1, 801436c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8014356:	6828      	ldr	r0, [r5, #0]
 8014358:	3901      	subs	r1, #1
 801435a:	4282      	cmp	r2, r0
 801435c:	b289      	uxth	r1, r1
 801435e:	dd05      	ble.n	801436c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8014360:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8014364:	682b      	ldr	r3, [r5, #0]
 8014366:	3301      	adds	r3, #1
 8014368:	602b      	str	r3, [r5, #0]
 801436a:	e7f3      	b.n	8014354 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 801436c:	b005      	add	sp, #20
 801436e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014372 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8014372:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014376:	2400      	movs	r4, #0
 8014378:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 801437c:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 8014380:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 8014384:	8014      	strh	r4, [r2, #0]
 8014386:	701c      	strb	r4, [r3, #0]
 8014388:	f888 4000 	strb.w	r4, [r8]
 801438c:	f88c 4000 	strb.w	r4, [ip]
 8014390:	f88e 4000 	strb.w	r4, [lr]
 8014394:	703c      	strb	r4, [r7, #0]
 8014396:	6804      	ldr	r4, [r0, #0]
 8014398:	b1a4      	cbz	r4, 80143c4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 801439a:	8824      	ldrh	r4, [r4, #0]
 801439c:	f04f 0901 	mov.w	r9, #1
 80143a0:	b314      	cbz	r4, 80143e8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80143a2:	2c2b      	cmp	r4, #43	; 0x2b
 80143a4:	d001      	beq.n	80143aa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 80143a6:	2c20      	cmp	r4, #32
 80143a8:	d110      	bne.n	80143cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 80143aa:	8014      	strh	r4, [r2, #0]
 80143ac:	6804      	ldr	r4, [r0, #0]
 80143ae:	b10c      	cbz	r4, 80143b4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 80143b0:	3402      	adds	r4, #2
 80143b2:	6004      	str	r4, [r0, #0]
 80143b4:	680c      	ldr	r4, [r1, #0]
 80143b6:	b10c      	cbz	r4, 80143bc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 80143b8:	3401      	adds	r4, #1
 80143ba:	600c      	str	r4, [r1, #0]
 80143bc:	6804      	ldr	r4, [r0, #0]
 80143be:	b17c      	cbz	r4, 80143e0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 80143c0:	8824      	ldrh	r4, [r4, #0]
 80143c2:	e7ed      	b.n	80143a0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 80143c4:	680c      	ldr	r4, [r1, #0]
 80143c6:	b17c      	cbz	r4, 80143e8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80143c8:	7824      	ldrb	r4, [r4, #0]
 80143ca:	e7e7      	b.n	801439c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 80143cc:	2c2d      	cmp	r4, #45	; 0x2d
 80143ce:	d102      	bne.n	80143d6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 80143d0:	f883 9000 	strb.w	r9, [r3]
 80143d4:	e7ea      	b.n	80143ac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 80143d6:	2c23      	cmp	r4, #35	; 0x23
 80143d8:	d107      	bne.n	80143ea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 80143da:	f888 9000 	strb.w	r9, [r8]
 80143de:	e7e5      	b.n	80143ac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 80143e0:	680c      	ldr	r4, [r1, #0]
 80143e2:	b10c      	cbz	r4, 80143e8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80143e4:	7824      	ldrb	r4, [r4, #0]
 80143e6:	e7db      	b.n	80143a0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 80143e8:	2400      	movs	r4, #0
 80143ea:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 80143ee:	2b09      	cmp	r3, #9
 80143f0:	d901      	bls.n	80143f6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 80143f2:	2c2a      	cmp	r4, #42	; 0x2a
 80143f4:	d122      	bne.n	801443c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80143f6:	2301      	movs	r3, #1
 80143f8:	2c30      	cmp	r4, #48	; 0x30
 80143fa:	f88e 3000 	strb.w	r3, [lr]
 80143fe:	d10d      	bne.n	801441c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8014400:	f88c 3000 	strb.w	r3, [ip]
 8014404:	6803      	ldr	r3, [r0, #0]
 8014406:	b10b      	cbz	r3, 801440c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8014408:	3302      	adds	r3, #2
 801440a:	6003      	str	r3, [r0, #0]
 801440c:	680b      	ldr	r3, [r1, #0]
 801440e:	b10b      	cbz	r3, 8014414 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8014410:	3301      	adds	r3, #1
 8014412:	600b      	str	r3, [r1, #0]
 8014414:	6803      	ldr	r3, [r0, #0]
 8014416:	2b00      	cmp	r3, #0
 8014418:	d02f      	beq.n	801447a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 801441a:	881c      	ldrh	r4, [r3, #0]
 801441c:	2c2a      	cmp	r4, #42	; 0x2a
 801441e:	d135      	bne.n	801448c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8014420:	f04f 33ff 	mov.w	r3, #4294967295
 8014424:	6033      	str	r3, [r6, #0]
 8014426:	6803      	ldr	r3, [r0, #0]
 8014428:	b10b      	cbz	r3, 801442e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 801442a:	3302      	adds	r3, #2
 801442c:	6003      	str	r3, [r0, #0]
 801442e:	680b      	ldr	r3, [r1, #0]
 8014430:	b10b      	cbz	r3, 8014436 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8014432:	3301      	adds	r3, #1
 8014434:	600b      	str	r3, [r1, #0]
 8014436:	6803      	ldr	r3, [r0, #0]
 8014438:	b31b      	cbz	r3, 8014482 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 801443a:	881c      	ldrh	r4, [r3, #0]
 801443c:	2c2e      	cmp	r4, #46	; 0x2e
 801443e:	d11a      	bne.n	8014476 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8014440:	2301      	movs	r3, #1
 8014442:	703b      	strb	r3, [r7, #0]
 8014444:	6803      	ldr	r3, [r0, #0]
 8014446:	b10b      	cbz	r3, 801444c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8014448:	3302      	adds	r3, #2
 801444a:	6003      	str	r3, [r0, #0]
 801444c:	680b      	ldr	r3, [r1, #0]
 801444e:	b10b      	cbz	r3, 8014454 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8014450:	3301      	adds	r3, #1
 8014452:	600b      	str	r3, [r1, #0]
 8014454:	6803      	ldr	r3, [r0, #0]
 8014456:	2b00      	cmp	r3, #0
 8014458:	d036      	beq.n	80144c8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 801445a:	881b      	ldrh	r3, [r3, #0]
 801445c:	2b2a      	cmp	r3, #42	; 0x2a
 801445e:	d137      	bne.n	80144d0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8014460:	f04f 33ff 	mov.w	r3, #4294967295
 8014464:	602b      	str	r3, [r5, #0]
 8014466:	6803      	ldr	r3, [r0, #0]
 8014468:	b10b      	cbz	r3, 801446e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 801446a:	3302      	adds	r3, #2
 801446c:	6003      	str	r3, [r0, #0]
 801446e:	680b      	ldr	r3, [r1, #0]
 8014470:	b10b      	cbz	r3, 8014476 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8014472:	3301      	adds	r3, #1
 8014474:	600b      	str	r3, [r1, #0]
 8014476:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801447a:	680c      	ldr	r4, [r1, #0]
 801447c:	b134      	cbz	r4, 801448c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801447e:	7824      	ldrb	r4, [r4, #0]
 8014480:	e7cc      	b.n	801441c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8014482:	680b      	ldr	r3, [r1, #0]
 8014484:	2b00      	cmp	r3, #0
 8014486:	d0f6      	beq.n	8014476 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8014488:	781c      	ldrb	r4, [r3, #0]
 801448a:	e7d7      	b.n	801443c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801448c:	2300      	movs	r3, #0
 801448e:	220a      	movs	r2, #10
 8014490:	6033      	str	r3, [r6, #0]
 8014492:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8014496:	fa1f f38c 	uxth.w	r3, ip
 801449a:	2b09      	cmp	r3, #9
 801449c:	d8ce      	bhi.n	801443c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801449e:	6833      	ldr	r3, [r6, #0]
 80144a0:	fb02 c303 	mla	r3, r2, r3, ip
 80144a4:	6033      	str	r3, [r6, #0]
 80144a6:	6803      	ldr	r3, [r0, #0]
 80144a8:	b10b      	cbz	r3, 80144ae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 80144aa:	3302      	adds	r3, #2
 80144ac:	6003      	str	r3, [r0, #0]
 80144ae:	680b      	ldr	r3, [r1, #0]
 80144b0:	b10b      	cbz	r3, 80144b6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 80144b2:	3301      	adds	r3, #1
 80144b4:	600b      	str	r3, [r1, #0]
 80144b6:	6803      	ldr	r3, [r0, #0]
 80144b8:	b10b      	cbz	r3, 80144be <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 80144ba:	881c      	ldrh	r4, [r3, #0]
 80144bc:	e7e9      	b.n	8014492 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80144be:	680c      	ldr	r4, [r1, #0]
 80144c0:	2c00      	cmp	r4, #0
 80144c2:	d0e6      	beq.n	8014492 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80144c4:	7824      	ldrb	r4, [r4, #0]
 80144c6:	e7e4      	b.n	8014492 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80144c8:	680b      	ldr	r3, [r1, #0]
 80144ca:	b10b      	cbz	r3, 80144d0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 80144cc:	781b      	ldrb	r3, [r3, #0]
 80144ce:	e7c5      	b.n	801445c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 80144d0:	2200      	movs	r2, #0
 80144d2:	240a      	movs	r4, #10
 80144d4:	602a      	str	r2, [r5, #0]
 80144d6:	3b30      	subs	r3, #48	; 0x30
 80144d8:	682a      	ldr	r2, [r5, #0]
 80144da:	b29e      	uxth	r6, r3
 80144dc:	2e09      	cmp	r6, #9
 80144de:	d813      	bhi.n	8014508 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 80144e0:	fb04 3302 	mla	r3, r4, r2, r3
 80144e4:	602b      	str	r3, [r5, #0]
 80144e6:	6803      	ldr	r3, [r0, #0]
 80144e8:	b10b      	cbz	r3, 80144ee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 80144ea:	3302      	adds	r3, #2
 80144ec:	6003      	str	r3, [r0, #0]
 80144ee:	680b      	ldr	r3, [r1, #0]
 80144f0:	b10b      	cbz	r3, 80144f6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 80144f2:	3301      	adds	r3, #1
 80144f4:	600b      	str	r3, [r1, #0]
 80144f6:	6803      	ldr	r3, [r0, #0]
 80144f8:	b10b      	cbz	r3, 80144fe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 80144fa:	881b      	ldrh	r3, [r3, #0]
 80144fc:	e7eb      	b.n	80144d6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 80144fe:	680b      	ldr	r3, [r1, #0]
 8014500:	2b00      	cmp	r3, #0
 8014502:	d0e8      	beq.n	80144d6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8014504:	781b      	ldrb	r3, [r3, #0]
 8014506:	e7e6      	b.n	80144d6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8014508:	2a06      	cmp	r2, #6
 801450a:	bfa8      	it	ge
 801450c:	2206      	movge	r2, #6
 801450e:	602a      	str	r2, [r5, #0]
 8014510:	e7b1      	b.n	8014476 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08014512 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8014512:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014516:	b0a3      	sub	sp, #140	; 0x8c
 8014518:	2600      	movs	r6, #0
 801451a:	4607      	mov	r7, r0
 801451c:	4688      	mov	r8, r1
 801451e:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8014522:	4631      	mov	r1, r6
 8014524:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8014526:	4648      	mov	r0, r9
 8014528:	960d      	str	r6, [sp, #52]	; 0x34
 801452a:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801452e:	2242      	movs	r2, #66	; 0x42
 8014530:	f00b fbde 	bl	801fcf0 <memset>
 8014534:	b15f      	cbz	r7, 801454e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8014536:	f108 3aff 	add.w	sl, r8, #4294967295
 801453a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801453c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801453e:	b152      	cbz	r2, 8014556 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8014540:	8812      	ldrh	r2, [r2, #0]
 8014542:	b10a      	cbz	r2, 8014548 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8014544:	459a      	cmp	sl, r3
 8014546:	dc2e      	bgt.n	80145a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8014548:	2200      	movs	r2, #0
 801454a:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801454e:	4638      	mov	r0, r7
 8014550:	b023      	add	sp, #140	; 0x8c
 8014552:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014556:	9a08      	ldr	r2, [sp, #32]
 8014558:	2a00      	cmp	r2, #0
 801455a:	d0f5      	beq.n	8014548 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801455c:	7812      	ldrb	r2, [r2, #0]
 801455e:	e7f0      	b.n	8014542 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8014560:	2d00      	cmp	r5, #0
 8014562:	d0ea      	beq.n	801453a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8014564:	782a      	ldrb	r2, [r5, #0]
 8014566:	b142      	cbz	r2, 801457a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8014568:	2a25      	cmp	r2, #37	; 0x25
 801456a:	d001      	beq.n	8014570 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 801456c:	459a      	cmp	sl, r3
 801456e:	dc08      	bgt.n	8014582 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8014570:	f1bb 0f00 	cmp.w	fp, #0
 8014574:	d121      	bne.n	80145ba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8014576:	2d00      	cmp	r5, #0
 8014578:	d0df      	beq.n	801453a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801457a:	782a      	ldrb	r2, [r5, #0]
 801457c:	f04f 0b00 	mov.w	fp, #0
 8014580:	e01d      	b.n	80145be <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8014582:	f1bb 0f00 	cmp.w	fp, #0
 8014586:	d077      	beq.n	8014678 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x166>
 8014588:	f8bb 2000 	ldrh.w	r2, [fp]
 801458c:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8014590:	f1bb 0f00 	cmp.w	fp, #0
 8014594:	d002      	beq.n	801459c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8014596:	f10b 0202 	add.w	r2, fp, #2
 801459a:	9209      	str	r2, [sp, #36]	; 0x24
 801459c:	b10d      	cbz	r5, 80145a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 801459e:	3501      	adds	r5, #1
 80145a0:	9508      	str	r5, [sp, #32]
 80145a2:	3301      	adds	r3, #1
 80145a4:	930d      	str	r3, [sp, #52]	; 0x34
 80145a6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80145a8:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 80145ac:	f1bb 0f00 	cmp.w	fp, #0
 80145b0:	d0d6      	beq.n	8014560 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 80145b2:	f8bb 2000 	ldrh.w	r2, [fp]
 80145b6:	2a00      	cmp	r2, #0
 80145b8:	d1d6      	bne.n	8014568 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 80145ba:	f8bb 2000 	ldrh.w	r2, [fp]
 80145be:	2a00      	cmp	r2, #0
 80145c0:	d0bb      	beq.n	801453a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80145c2:	459a      	cmp	sl, r3
 80145c4:	ddb9      	ble.n	801453a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80145c6:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 80145ca:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 80145ce:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 80145d2:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 80145d6:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 80145da:	960e      	str	r6, [sp, #56]	; 0x38
 80145dc:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 80145e0:	960f      	str	r6, [sp, #60]	; 0x3c
 80145e2:	f1bb 0f00 	cmp.w	fp, #0
 80145e6:	d002      	beq.n	80145ee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 80145e8:	f10b 0302 	add.w	r3, fp, #2
 80145ec:	9309      	str	r3, [sp, #36]	; 0x24
 80145ee:	b10d      	cbz	r5, 80145f4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 80145f0:	1c6b      	adds	r3, r5, #1
 80145f2:	9308      	str	r3, [sp, #32]
 80145f4:	ab0f      	add	r3, sp, #60	; 0x3c
 80145f6:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 80145fa:	a908      	add	r1, sp, #32
 80145fc:	a809      	add	r0, sp, #36	; 0x24
 80145fe:	9305      	str	r3, [sp, #20]
 8014600:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8014604:	9304      	str	r3, [sp, #16]
 8014606:	ab0e      	add	r3, sp, #56	; 0x38
 8014608:	9303      	str	r3, [sp, #12]
 801460a:	ab0c      	add	r3, sp, #48	; 0x30
 801460c:	9302      	str	r3, [sp, #8]
 801460e:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8014612:	9301      	str	r3, [sp, #4]
 8014614:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8014618:	9300      	str	r3, [sp, #0]
 801461a:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 801461e:	f7ff fea8 	bl	8014372 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8014622:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014624:	2b00      	cmp	r3, #0
 8014626:	bfbf      	itttt	lt
 8014628:	6823      	ldrlt	r3, [r4, #0]
 801462a:	3404      	addlt	r4, #4
 801462c:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8014630:	930e      	strlt	r3, [sp, #56]	; 0x38
 8014632:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014634:	2b00      	cmp	r3, #0
 8014636:	bfbe      	ittt	lt
 8014638:	6823      	ldrlt	r3, [r4, #0]
 801463a:	3404      	addlt	r4, #4
 801463c:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8014640:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8014644:	bfb8      	it	lt
 8014646:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8014648:	b1d9      	cbz	r1, 8014682 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x170>
 801464a:	880b      	ldrh	r3, [r1, #0]
 801464c:	2b69      	cmp	r3, #105	; 0x69
 801464e:	d01f      	beq.n	8014690 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 8014650:	d82f      	bhi.n	80146b2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a0>
 8014652:	2b58      	cmp	r3, #88	; 0x58
 8014654:	d01c      	beq.n	8014690 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 8014656:	d818      	bhi.n	801468a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x178>
 8014658:	2b25      	cmp	r3, #37	; 0x25
 801465a:	d034      	beq.n	80146c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b4>
 801465c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801465e:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8014662:	f1bb 0f00 	cmp.w	fp, #0
 8014666:	f000 80b7 	beq.w	80147d8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c6>
 801466a:	f8bb 5000 	ldrh.w	r5, [fp]
 801466e:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8014672:	3301      	adds	r3, #1
 8014674:	930d      	str	r3, [sp, #52]	; 0x34
 8014676:	e029      	b.n	80146cc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
 8014678:	b10d      	cbz	r5, 801467e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16c>
 801467a:	782a      	ldrb	r2, [r5, #0]
 801467c:	e786      	b.n	801458c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801467e:	462a      	mov	r2, r5
 8014680:	e784      	b.n	801458c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8014682:	2a00      	cmp	r2, #0
 8014684:	d0ea      	beq.n	801465c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
 8014686:	7813      	ldrb	r3, [r2, #0]
 8014688:	e7e0      	b.n	801464c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13a>
 801468a:	3b63      	subs	r3, #99	; 0x63
 801468c:	2b01      	cmp	r3, #1
 801468e:	d8e5      	bhi.n	801465c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
 8014690:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 8014694:	b329      	cbz	r1, 80146e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d0>
 8014696:	880b      	ldrh	r3, [r1, #0]
 8014698:	2b69      	cmp	r3, #105	; 0x69
 801469a:	d063      	beq.n	8014764 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
 801469c:	d825      	bhi.n	80146ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d8>
 801469e:	2b63      	cmp	r3, #99	; 0x63
 80146a0:	d038      	beq.n	8014714 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x202>
 80146a2:	2b64      	cmp	r3, #100	; 0x64
 80146a4:	d05e      	beq.n	8014764 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
 80146a6:	2b58      	cmp	r3, #88	; 0x58
 80146a8:	d07a      	beq.n	80147a0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28e>
 80146aa:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 80146ae:	4625      	mov	r5, r4
 80146b0:	e036      	b.n	8014720 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 80146b2:	2b73      	cmp	r3, #115	; 0x73
 80146b4:	d0ec      	beq.n	8014690 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 80146b6:	d802      	bhi.n	80146be <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ac>
 80146b8:	2b6f      	cmp	r3, #111	; 0x6f
 80146ba:	d1cf      	bne.n	801465c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
 80146bc:	e7e8      	b.n	8014690 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 80146be:	2b75      	cmp	r3, #117	; 0x75
 80146c0:	d0e6      	beq.n	8014690 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 80146c2:	2b78      	cmp	r3, #120	; 0x78
 80146c4:	e7f9      	b.n	80146ba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a8>
 80146c6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80146c8:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 80146cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80146ce:	b10b      	cbz	r3, 80146d4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c2>
 80146d0:	3302      	adds	r3, #2
 80146d2:	9309      	str	r3, [sp, #36]	; 0x24
 80146d4:	9b08      	ldr	r3, [sp, #32]
 80146d6:	2b00      	cmp	r3, #0
 80146d8:	f43f af2f 	beq.w	801453a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80146dc:	3301      	adds	r3, #1
 80146de:	9308      	str	r3, [sp, #32]
 80146e0:	e72b      	b.n	801453a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80146e2:	2a00      	cmp	r2, #0
 80146e4:	d0e1      	beq.n	80146aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
 80146e6:	7813      	ldrb	r3, [r2, #0]
 80146e8:	e7d6      	b.n	8014698 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x186>
 80146ea:	2b73      	cmp	r3, #115	; 0x73
 80146ec:	d036      	beq.n	801475c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24a>
 80146ee:	d807      	bhi.n	8014700 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ee>
 80146f0:	2b6f      	cmp	r3, #111	; 0x6f
 80146f2:	d1da      	bne.n	80146aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
 80146f4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80146f6:	1d25      	adds	r5, r4, #4
 80146f8:	2308      	movs	r3, #8
 80146fa:	eba8 0202 	sub.w	r2, r8, r2
 80146fe:	e049      	b.n	8014794 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
 8014700:	2b75      	cmp	r3, #117	; 0x75
 8014702:	d042      	beq.n	801478a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x278>
 8014704:	2b78      	cmp	r3, #120	; 0x78
 8014706:	d1d0      	bne.n	80146aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
 8014708:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801470a:	1d25      	adds	r5, r4, #4
 801470c:	2310      	movs	r3, #16
 801470e:	eba8 0202 	sub.w	r2, r8, r2
 8014712:	e03f      	b.n	8014794 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
 8014714:	7823      	ldrb	r3, [r4, #0]
 8014716:	1d25      	adds	r5, r4, #4
 8014718:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 801471c:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8014720:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014722:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8014726:	2b00      	cmp	r3, #0
 8014728:	d051      	beq.n	80147ce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2bc>
 801472a:	881a      	ldrh	r2, [r3, #0]
 801472c:	a80d      	add	r0, sp, #52	; 0x34
 801472e:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8014732:	462c      	mov	r4, r5
 8014734:	9005      	str	r0, [sp, #20]
 8014736:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801473a:	9004      	str	r0, [sp, #16]
 801473c:	980e      	ldr	r0, [sp, #56]	; 0x38
 801473e:	9003      	str	r0, [sp, #12]
 8014740:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8014744:	9002      	str	r0, [sp, #8]
 8014746:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8014748:	9001      	str	r0, [sp, #4]
 801474a:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 801474e:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8014752:	9000      	str	r0, [sp, #0]
 8014754:	a810      	add	r0, sp, #64	; 0x40
 8014756:	f7ff fd49 	bl	80141ec <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801475a:	e7b7      	b.n	80146cc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
 801475c:	1d25      	adds	r5, r4, #4
 801475e:	6823      	ldr	r3, [r4, #0]
 8014760:	9310      	str	r3, [sp, #64]	; 0x40
 8014762:	e7dd      	b.n	8014720 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 8014764:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8014766:	230a      	movs	r3, #10
 8014768:	4649      	mov	r1, r9
 801476a:	6820      	ldr	r0, [r4, #0]
 801476c:	eba8 0202 	sub.w	r2, r8, r2
 8014770:	1d25      	adds	r5, r4, #4
 8014772:	b292      	uxth	r2, r2
 8014774:	f7ff fd08 	bl	8014188 <_ZN8touchgfx7Unicode4itoaElPtti>
 8014778:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 801477c:	2b2d      	cmp	r3, #45	; 0x2d
 801477e:	d1cf      	bne.n	8014720 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 8014780:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8014784:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014786:	3302      	adds	r3, #2
 8014788:	e7ea      	b.n	8014760 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24e>
 801478a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801478c:	1d25      	adds	r5, r4, #4
 801478e:	230a      	movs	r3, #10
 8014790:	eba8 0202 	sub.w	r2, r8, r2
 8014794:	b292      	uxth	r2, r2
 8014796:	4649      	mov	r1, r9
 8014798:	6820      	ldr	r0, [r4, #0]
 801479a:	f7ff fcd7 	bl	801414c <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 801479e:	e7bf      	b.n	8014720 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 80147a0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80147a2:	2310      	movs	r3, #16
 80147a4:	4649      	mov	r1, r9
 80147a6:	6820      	ldr	r0, [r4, #0]
 80147a8:	eba8 0202 	sub.w	r2, r8, r2
 80147ac:	1d25      	adds	r5, r4, #4
 80147ae:	b292      	uxth	r2, r2
 80147b0:	f7ff fccc 	bl	801414c <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 80147b4:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 80147b8:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 80147bc:	2b00      	cmp	r3, #0
 80147be:	d0af      	beq.n	8014720 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 80147c0:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 80147c4:	2919      	cmp	r1, #25
 80147c6:	d8f7      	bhi.n	80147b8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
 80147c8:	3b20      	subs	r3, #32
 80147ca:	8013      	strh	r3, [r2, #0]
 80147cc:	e7f4      	b.n	80147b8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
 80147ce:	9a08      	ldr	r2, [sp, #32]
 80147d0:	2a00      	cmp	r2, #0
 80147d2:	d0ab      	beq.n	801472c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
 80147d4:	7812      	ldrb	r2, [r2, #0]
 80147d6:	e7a9      	b.n	801472c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
 80147d8:	2d00      	cmp	r5, #0
 80147da:	f43f af48 	beq.w	801466e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>
 80147de:	782d      	ldrb	r5, [r5, #0]
 80147e0:	e745      	b.n	801466e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>

080147e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 80147e2:	b507      	push	{r0, r1, r2, lr}
 80147e4:	9300      	str	r3, [sp, #0]
 80147e6:	4613      	mov	r3, r2
 80147e8:	2200      	movs	r2, #0
 80147ea:	f7ff fe92 	bl	8014512 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 80147ee:	b003      	add	sp, #12
 80147f0:	f85d fb04 	ldr.w	pc, [sp], #4

080147f4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 80147f4:	b40c      	push	{r2, r3}
 80147f6:	b507      	push	{r0, r1, r2, lr}
 80147f8:	ab04      	add	r3, sp, #16
 80147fa:	f853 2b04 	ldr.w	r2, [r3], #4
 80147fe:	9301      	str	r3, [sp, #4]
 8014800:	f7ff ffef 	bl	80147e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8014804:	b003      	add	sp, #12
 8014806:	f85d eb04 	ldr.w	lr, [sp], #4
 801480a:	b002      	add	sp, #8
 801480c:	4770      	bx	lr
	...

08014810 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8014810:	4b01      	ldr	r3, [pc, #4]	; (8014818 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8014812:	6018      	str	r0, [r3, #0]
 8014814:	4770      	bx	lr
 8014816:	bf00      	nop
 8014818:	2400e0fc 	.word	0x2400e0fc

0801481c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 801481c:	4b06      	ldr	r3, [pc, #24]	; (8014838 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 801481e:	881a      	ldrh	r2, [r3, #0]
 8014820:	4282      	cmp	r2, r0
 8014822:	d807      	bhi.n	8014834 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8014824:	4b05      	ldr	r3, [pc, #20]	; (801483c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8014826:	881b      	ldrh	r3, [r3, #0]
 8014828:	4413      	add	r3, r2
 801482a:	4298      	cmp	r0, r3
 801482c:	bfac      	ite	ge
 801482e:	2000      	movge	r0, #0
 8014830:	2001      	movlt	r0, #1
 8014832:	4770      	bx	lr
 8014834:	2000      	movs	r0, #0
 8014836:	4770      	bx	lr
 8014838:	2400e11c 	.word	0x2400e11c
 801483c:	2400e120 	.word	0x2400e120

08014840 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8014840:	b508      	push	{r3, lr}
 8014842:	4601      	mov	r1, r0
 8014844:	f7ff ffea 	bl	801481c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8014848:	b118      	cbz	r0, 8014852 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 801484a:	4b02      	ldr	r3, [pc, #8]	; (8014854 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 801484c:	681b      	ldr	r3, [r3, #0]
 801484e:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8014852:	bd08      	pop	{r3, pc}
 8014854:	2400e100 	.word	0x2400e100

08014858 <_ZN8touchgfx6Bitmap25dynamicBitmapSetSolidRectEtRKNS_4RectE>:
 8014858:	b538      	push	{r3, r4, r5, lr}
 801485a:	4604      	mov	r4, r0
 801485c:	f7ff ffde 	bl	801481c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8014860:	b188      	cbz	r0, 8014886 <_ZN8touchgfx6Bitmap25dynamicBitmapSetSolidRectEtRKNS_4RectE+0x2e>
 8014862:	4b09      	ldr	r3, [pc, #36]	; (8014888 <_ZN8touchgfx6Bitmap25dynamicBitmapSetSolidRectEtRKNS_4RectE+0x30>)
 8014864:	881a      	ldrh	r2, [r3, #0]
 8014866:	4b09      	ldr	r3, [pc, #36]	; (801488c <_ZN8touchgfx6Bitmap25dynamicBitmapSetSolidRectEtRKNS_4RectE+0x34>)
 8014868:	1aa4      	subs	r4, r4, r2
 801486a:	220e      	movs	r2, #14
 801486c:	681d      	ldr	r5, [r3, #0]
 801486e:	4362      	muls	r2, r4
 8014870:	18ac      	adds	r4, r5, r2
 8014872:	7b23      	ldrb	r3, [r4, #12]
 8014874:	f013 0320 	ands.w	r3, r3, #32
 8014878:	bf17      	itett	ne
 801487a:	680b      	ldrne	r3, [r1, #0]
 801487c:	4618      	moveq	r0, r3
 801487e:	50ab      	strne	r3, [r5, r2]
 8014880:	684b      	ldrne	r3, [r1, #4]
 8014882:	bf18      	it	ne
 8014884:	6063      	strne	r3, [r4, #4]
 8014886:	bd38      	pop	{r3, r4, r5, pc}
 8014888:	2400e11c 	.word	0x2400e11c
 801488c:	2400e104 	.word	0x2400e104

08014890 <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE>:
 8014890:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8014894:	4606      	mov	r6, r0
 8014896:	460c      	mov	r4, r1
 8014898:	f7ff ffc0 	bl	801481c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 801489c:	b918      	cbnz	r0, 80148a6 <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0x16>
 801489e:	2000      	movs	r0, #0
 80148a0:	b002      	add	sp, #8
 80148a2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80148a6:	4608      	mov	r0, r1
 80148a8:	f7f7 feff 	bl	800c6aa <_ZNK8touchgfx4Rect7isEmptyEv>
 80148ac:	2800      	cmp	r0, #0
 80148ae:	d1f6      	bne.n	801489e <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0xe>
 80148b0:	4b3f      	ldr	r3, [pc, #252]	; (80149b0 <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0x120>)
 80148b2:	f8df 9100 	ldr.w	r9, [pc, #256]	; 80149b4 <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0x124>
 80148b6:	881d      	ldrh	r5, [r3, #0]
 80148b8:	f8d9 a000 	ldr.w	sl, [r9]
 80148bc:	46c8      	mov	r8, r9
 80148be:	1b73      	subs	r3, r6, r5
 80148c0:	250e      	movs	r5, #14
 80148c2:	435d      	muls	r5, r3
 80148c4:	eb0a 0705 	add.w	r7, sl, r5
 80148c8:	7b3b      	ldrb	r3, [r7, #12]
 80148ca:	f013 0f20 	tst.w	r3, #32
 80148ce:	d0e6      	beq.n	801489e <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0xe>
 80148d0:	4621      	mov	r1, r4
 80148d2:	4638      	mov	r0, r7
 80148d4:	f7fc fe5e 	bl	8011594 <_ZNK8touchgfx4Rect8includesERKS0_>
 80148d8:	2800      	cmp	r0, #0
 80148da:	d1e1      	bne.n	80148a0 <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0x10>
 80148dc:	4639      	mov	r1, r7
 80148de:	4620      	mov	r0, r4
 80148e0:	f7fc fe58 	bl	8011594 <_ZNK8touchgfx4Rect8includesERKS0_>
 80148e4:	b108      	cbz	r0, 80148ea <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0x5a>
 80148e6:	4621      	mov	r1, r4
 80148e8:	e020      	b.n	801492c <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0x9c>
 80148ea:	f9b4 2000 	ldrsh.w	r2, [r4]
 80148ee:	f93a 3005 	ldrsh.w	r3, [sl, r5]
 80148f2:	429a      	cmp	r2, r3
 80148f4:	d11e      	bne.n	8014934 <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0xa4>
 80148f6:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80148fa:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 80148fe:	429a      	cmp	r2, r3
 8014900:	d118      	bne.n	8014934 <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0xa4>
 8014902:	6820      	ldr	r0, [r4, #0]
 8014904:	466b      	mov	r3, sp
 8014906:	6861      	ldr	r1, [r4, #4]
 8014908:	c303      	stmia	r3!, {r0, r1}
 801490a:	4639      	mov	r1, r7
 801490c:	4668      	mov	r0, sp
 801490e:	f7fc fe67 	bl	80115e0 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8014912:	f8d9 3000 	ldr.w	r3, [r9]
 8014916:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801491a:	442b      	add	r3, r5
 801491c:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 8014920:	4413      	add	r3, r2
 8014922:	f9bd 2006 	ldrsh.w	r2, [sp, #6]
 8014926:	4293      	cmp	r3, r2
 8014928:	dc04      	bgt.n	8014934 <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0xa4>
 801492a:	4669      	mov	r1, sp
 801492c:	4630      	mov	r0, r6
 801492e:	f7ff ff93 	bl	8014858 <_ZN8touchgfx6Bitmap25dynamicBitmapSetSolidRectEtRKNS_4RectE>
 8014932:	e7b5      	b.n	80148a0 <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0x10>
 8014934:	f8d8 3000 	ldr.w	r3, [r8]
 8014938:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 801493c:	442b      	add	r3, r5
 801493e:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8014942:	4291      	cmp	r1, r2
 8014944:	d119      	bne.n	801497a <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0xea>
 8014946:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 801494a:	f9b3 2006 	ldrsh.w	r2, [r3, #6]
 801494e:	4291      	cmp	r1, r2
 8014950:	d113      	bne.n	801497a <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0xea>
 8014952:	6820      	ldr	r0, [r4, #0]
 8014954:	466a      	mov	r2, sp
 8014956:	6861      	ldr	r1, [r4, #4]
 8014958:	c203      	stmia	r2!, {r0, r1}
 801495a:	4619      	mov	r1, r3
 801495c:	4668      	mov	r0, sp
 801495e:	f7fc fe3f 	bl	80115e0 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8014962:	f8d8 3000 	ldr.w	r3, [r8]
 8014966:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 801496a:	442b      	add	r3, r5
 801496c:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8014970:	4413      	add	r3, r2
 8014972:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8014976:	4293      	cmp	r3, r2
 8014978:	ddd7      	ble.n	801492a <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0x9a>
 801497a:	4620      	mov	r0, r4
 801497c:	f7f7 fe95 	bl	800c6aa <_ZNK8touchgfx4Rect7isEmptyEv>
 8014980:	b990      	cbnz	r0, 80149a8 <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0x118>
 8014982:	88a7      	ldrh	r7, [r4, #4]
 8014984:	88e3      	ldrh	r3, [r4, #6]
 8014986:	fb17 f703 	smulbb	r7, r7, r3
 801498a:	f8d8 3000 	ldr.w	r3, [r8]
 801498e:	441d      	add	r5, r3
 8014990:	4628      	mov	r0, r5
 8014992:	f7f7 fe8a 	bl	800c6aa <_ZNK8touchgfx4Rect7isEmptyEv>
 8014996:	b948      	cbnz	r0, 80149ac <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0x11c>
 8014998:	88ab      	ldrh	r3, [r5, #4]
 801499a:	88ea      	ldrh	r2, [r5, #6]
 801499c:	fb13 f302 	smulbb	r3, r3, r2
 80149a0:	42bb      	cmp	r3, r7
 80149a2:	f4bf af7c 	bcs.w	801489e <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0xe>
 80149a6:	e79e      	b.n	80148e6 <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0x56>
 80149a8:	2700      	movs	r7, #0
 80149aa:	e7ee      	b.n	801498a <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0xfa>
 80149ac:	2300      	movs	r3, #0
 80149ae:	e7f7      	b.n	80149a0 <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE+0x110>
 80149b0:	2400e11c 	.word	0x2400e11c
 80149b4:	2400e104 	.word	0x2400e104

080149b8 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 80149b8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80149ba:	4c24      	ldr	r4, [pc, #144]	; (8014a4c <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 80149bc:	6823      	ldr	r3, [r4, #0]
 80149be:	2b00      	cmp	r3, #0
 80149c0:	d042      	beq.n	8014a48 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 80149c2:	4a23      	ldr	r2, [pc, #140]	; (8014a50 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 80149c4:	4d23      	ldr	r5, [pc, #140]	; (8014a54 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 80149c6:	8811      	ldrh	r1, [r2, #0]
 80149c8:	f8b5 c000 	ldrh.w	ip, [r5]
 80149cc:	4822      	ldr	r0, [pc, #136]	; (8014a58 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 80149ce:	4461      	add	r1, ip
 80149d0:	1c4a      	adds	r2, r1, #1
 80149d2:	008f      	lsls	r7, r1, #2
 80149d4:	f022 0201 	bic.w	r2, r2, #1
 80149d8:	19de      	adds	r6, r3, r7
 80149da:	0412      	lsls	r2, r2, #16
 80149dc:	6006      	str	r6, [r0, #0]
 80149de:	4e1f      	ldr	r6, [pc, #124]	; (8014a5c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 80149e0:	0c12      	lsrs	r2, r2, #16
 80149e2:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 80149e6:	19da      	adds	r2, r3, r7
 80149e8:	6032      	str	r2, [r6, #0]
 80149ea:	220e      	movs	r2, #14
 80149ec:	fb02 f20c 	mul.w	r2, r2, ip
 80149f0:	3203      	adds	r2, #3
 80149f2:	f022 0203 	bic.w	r2, r2, #3
 80149f6:	443a      	add	r2, r7
 80149f8:	4f19      	ldr	r7, [pc, #100]	; (8014a60 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 80149fa:	4413      	add	r3, r2
 80149fc:	603b      	str	r3, [r7, #0]
 80149fe:	2300      	movs	r3, #0
 8014a00:	4f18      	ldr	r7, [pc, #96]	; (8014a64 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8014a02:	469c      	mov	ip, r3
 8014a04:	803b      	strh	r3, [r7, #0]
 8014a06:	4f18      	ldr	r7, [pc, #96]	; (8014a68 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8014a08:	683f      	ldr	r7, [r7, #0]
 8014a0a:	1aba      	subs	r2, r7, r2
 8014a0c:	4f17      	ldr	r7, [pc, #92]	; (8014a6c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8014a0e:	603a      	str	r2, [r7, #0]
 8014a10:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8014a14:	4a16      	ldr	r2, [pc, #88]	; (8014a70 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8014a16:	8013      	strh	r3, [r2, #0]
 8014a18:	428b      	cmp	r3, r1
 8014a1a:	d10d      	bne.n	8014a38 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8014a1c:	882d      	ldrh	r5, [r5, #0]
 8014a1e:	2300      	movs	r3, #0
 8014a20:	6830      	ldr	r0, [r6, #0]
 8014a22:	240e      	movs	r4, #14
 8014a24:	429d      	cmp	r5, r3
 8014a26:	d90f      	bls.n	8014a48 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8014a28:	fb04 0203 	mla	r2, r4, r3, r0
 8014a2c:	3301      	adds	r3, #1
 8014a2e:	7b11      	ldrb	r1, [r2, #12]
 8014a30:	f36f 1145 	bfc	r1, #5, #1
 8014a34:	7311      	strb	r1, [r2, #12]
 8014a36:	e7f5      	b.n	8014a24 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8014a38:	6822      	ldr	r2, [r4, #0]
 8014a3a:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8014a3e:	6802      	ldr	r2, [r0, #0]
 8014a40:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8014a44:	3301      	adds	r3, #1
 8014a46:	e7e7      	b.n	8014a18 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8014a48:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014a4a:	bf00      	nop
 8014a4c:	2400e100 	.word	0x2400e100
 8014a50:	2400e11c 	.word	0x2400e11c
 8014a54:	2400e120 	.word	0x2400e120
 8014a58:	2400e114 	.word	0x2400e114
 8014a5c:	2400e104 	.word	0x2400e104
 8014a60:	2400e10c 	.word	0x2400e10c
 8014a64:	2400e11e 	.word	0x2400e11e
 8014a68:	2400e108 	.word	0x2400e108
 8014a6c:	2400e118 	.word	0x2400e118
 8014a70:	2400e110 	.word	0x2400e110

08014a74 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8014a74:	4b10      	ldr	r3, [pc, #64]	; (8014ab8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x44>)
 8014a76:	b510      	push	{r4, lr}
 8014a78:	681b      	ldr	r3, [r3, #0]
 8014a7a:	b9db      	cbnz	r3, 8014ab4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 8014a7c:	b1d1      	cbz	r1, 8014ab4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 8014a7e:	4b0f      	ldr	r3, [pc, #60]	; (8014abc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x48>)
 8014a80:	240e      	movs	r4, #14
 8014a82:	801a      	strh	r2, [r3, #0]
 8014a84:	b292      	uxth	r2, r2
 8014a86:	4b0e      	ldr	r3, [pc, #56]	; (8014ac0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x4c>)
 8014a88:	881b      	ldrh	r3, [r3, #0]
 8014a8a:	4413      	add	r3, r2
 8014a8c:	4362      	muls	r2, r4
 8014a8e:	2406      	movs	r4, #6
 8014a90:	fb04 2203 	mla	r2, r4, r3, r2
 8014a94:	428a      	cmp	r2, r1
 8014a96:	d305      	bcc.n	8014aa4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x30>
 8014a98:	4b0a      	ldr	r3, [pc, #40]	; (8014ac4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x50>)
 8014a9a:	2134      	movs	r1, #52	; 0x34
 8014a9c:	4a0a      	ldr	r2, [pc, #40]	; (8014ac8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x54>)
 8014a9e:	480b      	ldr	r0, [pc, #44]	; (8014acc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x58>)
 8014aa0:	f00b f89a 	bl	801fbd8 <__assert_func>
 8014aa4:	4b0a      	ldr	r3, [pc, #40]	; (8014ad0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x5c>)
 8014aa6:	6019      	str	r1, [r3, #0]
 8014aa8:	4b0a      	ldr	r3, [pc, #40]	; (8014ad4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x60>)
 8014aaa:	6018      	str	r0, [r3, #0]
 8014aac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014ab0:	f7ff bf82 	b.w	80149b8 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8014ab4:	bd10      	pop	{r4, pc}
 8014ab6:	bf00      	nop
 8014ab8:	2400e10c 	.word	0x2400e10c
 8014abc:	2400e120 	.word	0x2400e120
 8014ac0:	2400e11c 	.word	0x2400e11c
 8014ac4:	0802494e 	.word	0x0802494e
 8014ac8:	080249a7 	.word	0x080249a7
 8014acc:	08024929 	.word	0x08024929
 8014ad0:	2400e108 	.word	0x2400e108
 8014ad4:	2400e100 	.word	0x2400e100

08014ad8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8014ad8:	b470      	push	{r4, r5, r6}
 8014ada:	4c07      	ldr	r4, [pc, #28]	; (8014af8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8014adc:	4605      	mov	r5, r0
 8014ade:	4610      	mov	r0, r2
 8014ae0:	9a03      	ldr	r2, [sp, #12]
 8014ae2:	6826      	ldr	r6, [r4, #0]
 8014ae4:	b936      	cbnz	r6, 8014af4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8014ae6:	6025      	str	r5, [r4, #0]
 8014ae8:	4c04      	ldr	r4, [pc, #16]	; (8014afc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8014aea:	8021      	strh	r1, [r4, #0]
 8014aec:	4619      	mov	r1, r3
 8014aee:	bc70      	pop	{r4, r5, r6}
 8014af0:	f7ff bfc0 	b.w	8014a74 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8014af4:	bc70      	pop	{r4, r5, r6}
 8014af6:	4770      	bx	lr
 8014af8:	2400e124 	.word	0x2400e124
 8014afc:	2400e11c 	.word	0x2400e11c

08014b00 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8014b00:	b508      	push	{r3, lr}
 8014b02:	4b17      	ldr	r3, [pc, #92]	; (8014b60 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8014b04:	6819      	ldr	r1, [r3, #0]
 8014b06:	b931      	cbnz	r1, 8014b16 <_ZNK8touchgfx6Bitmap8getWidthEv+0x16>
 8014b08:	4b16      	ldr	r3, [pc, #88]	; (8014b64 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8014b0a:	f240 4184 	movw	r1, #1156	; 0x484
 8014b0e:	4a16      	ldr	r2, [pc, #88]	; (8014b68 <_ZNK8touchgfx6Bitmap8getWidthEv+0x68>)
 8014b10:	4816      	ldr	r0, [pc, #88]	; (8014b6c <_ZNK8touchgfx6Bitmap8getWidthEv+0x6c>)
 8014b12:	f00b f861 	bl	801fbd8 <__assert_func>
 8014b16:	4a16      	ldr	r2, [pc, #88]	; (8014b70 <_ZNK8touchgfx6Bitmap8getWidthEv+0x70>)
 8014b18:	8803      	ldrh	r3, [r0, #0]
 8014b1a:	8812      	ldrh	r2, [r2, #0]
 8014b1c:	4293      	cmp	r3, r2
 8014b1e:	d204      	bcs.n	8014b2a <_ZNK8touchgfx6Bitmap8getWidthEv+0x2a>
 8014b20:	2214      	movs	r2, #20
 8014b22:	fb02 1303 	mla	r3, r2, r3, r1
 8014b26:	8918      	ldrh	r0, [r3, #8]
 8014b28:	bd08      	pop	{r3, pc}
 8014b2a:	4912      	ldr	r1, [pc, #72]	; (8014b74 <_ZNK8touchgfx6Bitmap8getWidthEv+0x74>)
 8014b2c:	8809      	ldrh	r1, [r1, #0]
 8014b2e:	4411      	add	r1, r2
 8014b30:	428b      	cmp	r3, r1
 8014b32:	da06      	bge.n	8014b42 <_ZNK8touchgfx6Bitmap8getWidthEv+0x42>
 8014b34:	1a9b      	subs	r3, r3, r2
 8014b36:	4a10      	ldr	r2, [pc, #64]	; (8014b78 <_ZNK8touchgfx6Bitmap8getWidthEv+0x78>)
 8014b38:	210e      	movs	r1, #14
 8014b3a:	6812      	ldr	r2, [r2, #0]
 8014b3c:	fb01 2303 	mla	r3, r1, r3, r2
 8014b40:	e7f1      	b.n	8014b26 <_ZNK8touchgfx6Bitmap8getWidthEv+0x26>
 8014b42:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8014b46:	4293      	cmp	r3, r2
 8014b48:	d107      	bne.n	8014b5a <_ZNK8touchgfx6Bitmap8getWidthEv+0x5a>
 8014b4a:	4b0c      	ldr	r3, [pc, #48]	; (8014b7c <_ZNK8touchgfx6Bitmap8getWidthEv+0x7c>)
 8014b4c:	781b      	ldrb	r3, [r3, #0]
 8014b4e:	b913      	cbnz	r3, 8014b56 <_ZNK8touchgfx6Bitmap8getWidthEv+0x56>
 8014b50:	4b0b      	ldr	r3, [pc, #44]	; (8014b80 <_ZNK8touchgfx6Bitmap8getWidthEv+0x80>)
 8014b52:	8818      	ldrh	r0, [r3, #0]
 8014b54:	e7e8      	b.n	8014b28 <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 8014b56:	4b0b      	ldr	r3, [pc, #44]	; (8014b84 <_ZNK8touchgfx6Bitmap8getWidthEv+0x84>)
 8014b58:	e7fb      	b.n	8014b52 <_ZNK8touchgfx6Bitmap8getWidthEv+0x52>
 8014b5a:	2000      	movs	r0, #0
 8014b5c:	e7e4      	b.n	8014b28 <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 8014b5e:	bf00      	nop
 8014b60:	2400e124 	.word	0x2400e124
 8014b64:	08022348 	.word	0x08022348
 8014b68:	08024a54 	.word	0x08024a54
 8014b6c:	08024929 	.word	0x08024929
 8014b70:	2400e11c 	.word	0x2400e11c
 8014b74:	2400e120 	.word	0x2400e120
 8014b78:	2400e104 	.word	0x2400e104
 8014b7c:	2400e074 	.word	0x2400e074
 8014b80:	2400e076 	.word	0x2400e076
 8014b84:	2400e078 	.word	0x2400e078

08014b88 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8014b88:	b508      	push	{r3, lr}
 8014b8a:	4b17      	ldr	r3, [pc, #92]	; (8014be8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8014b8c:	6819      	ldr	r1, [r3, #0]
 8014b8e:	b931      	cbnz	r1, 8014b9e <_ZNK8touchgfx6Bitmap9getHeightEv+0x16>
 8014b90:	4b16      	ldr	r3, [pc, #88]	; (8014bec <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8014b92:	f44f 6193 	mov.w	r1, #1176	; 0x498
 8014b96:	4a16      	ldr	r2, [pc, #88]	; (8014bf0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x68>)
 8014b98:	4816      	ldr	r0, [pc, #88]	; (8014bf4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x6c>)
 8014b9a:	f00b f81d 	bl	801fbd8 <__assert_func>
 8014b9e:	4a16      	ldr	r2, [pc, #88]	; (8014bf8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x70>)
 8014ba0:	8803      	ldrh	r3, [r0, #0]
 8014ba2:	8812      	ldrh	r2, [r2, #0]
 8014ba4:	4293      	cmp	r3, r2
 8014ba6:	d204      	bcs.n	8014bb2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2a>
 8014ba8:	2214      	movs	r2, #20
 8014baa:	fb02 1303 	mla	r3, r2, r3, r1
 8014bae:	8958      	ldrh	r0, [r3, #10]
 8014bb0:	bd08      	pop	{r3, pc}
 8014bb2:	4912      	ldr	r1, [pc, #72]	; (8014bfc <_ZNK8touchgfx6Bitmap9getHeightEv+0x74>)
 8014bb4:	8809      	ldrh	r1, [r1, #0]
 8014bb6:	4411      	add	r1, r2
 8014bb8:	428b      	cmp	r3, r1
 8014bba:	da06      	bge.n	8014bca <_ZNK8touchgfx6Bitmap9getHeightEv+0x42>
 8014bbc:	1a9b      	subs	r3, r3, r2
 8014bbe:	4a10      	ldr	r2, [pc, #64]	; (8014c00 <_ZNK8touchgfx6Bitmap9getHeightEv+0x78>)
 8014bc0:	210e      	movs	r1, #14
 8014bc2:	6812      	ldr	r2, [r2, #0]
 8014bc4:	fb01 2303 	mla	r3, r1, r3, r2
 8014bc8:	e7f1      	b.n	8014bae <_ZNK8touchgfx6Bitmap9getHeightEv+0x26>
 8014bca:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8014bce:	4293      	cmp	r3, r2
 8014bd0:	d107      	bne.n	8014be2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5a>
 8014bd2:	4b0c      	ldr	r3, [pc, #48]	; (8014c04 <_ZNK8touchgfx6Bitmap9getHeightEv+0x7c>)
 8014bd4:	781b      	ldrb	r3, [r3, #0]
 8014bd6:	b913      	cbnz	r3, 8014bde <_ZNK8touchgfx6Bitmap9getHeightEv+0x56>
 8014bd8:	4b0b      	ldr	r3, [pc, #44]	; (8014c08 <_ZNK8touchgfx6Bitmap9getHeightEv+0x80>)
 8014bda:	8818      	ldrh	r0, [r3, #0]
 8014bdc:	e7e8      	b.n	8014bb0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 8014bde:	4b0b      	ldr	r3, [pc, #44]	; (8014c0c <_ZNK8touchgfx6Bitmap9getHeightEv+0x84>)
 8014be0:	e7fb      	b.n	8014bda <_ZNK8touchgfx6Bitmap9getHeightEv+0x52>
 8014be2:	2000      	movs	r0, #0
 8014be4:	e7e4      	b.n	8014bb0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 8014be6:	bf00      	nop
 8014be8:	2400e124 	.word	0x2400e124
 8014bec:	08022348 	.word	0x08022348
 8014bf0:	08024a80 	.word	0x08024a80
 8014bf4:	08024929 	.word	0x08024929
 8014bf8:	2400e11c 	.word	0x2400e11c
 8014bfc:	2400e120 	.word	0x2400e120
 8014c00:	2400e104 	.word	0x2400e104
 8014c04:	2400e074 	.word	0x2400e074
 8014c08:	2400e078 	.word	0x2400e078
 8014c0c:	2400e076 	.word	0x2400e076

08014c10 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8014c10:	4b23      	ldr	r3, [pc, #140]	; (8014ca0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8014c12:	b510      	push	{r4, lr}
 8014c14:	681c      	ldr	r4, [r3, #0]
 8014c16:	b934      	cbnz	r4, 8014c26 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x16>
 8014c18:	4b22      	ldr	r3, [pc, #136]	; (8014ca4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8014c1a:	f240 41ac 	movw	r1, #1196	; 0x4ac
 8014c1e:	4a22      	ldr	r2, [pc, #136]	; (8014ca8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 8014c20:	4822      	ldr	r0, [pc, #136]	; (8014cac <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 8014c22:	f00a ffd9 	bl	801fbd8 <__assert_func>
 8014c26:	4a22      	ldr	r2, [pc, #136]	; (8014cb0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 8014c28:	880b      	ldrh	r3, [r1, #0]
 8014c2a:	8812      	ldrh	r2, [r2, #0]
 8014c2c:	4293      	cmp	r3, r2
 8014c2e:	d211      	bcs.n	8014c54 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x44>
 8014c30:	2214      	movs	r2, #20
 8014c32:	fb02 4303 	mla	r3, r2, r3, r4
 8014c36:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8014c3a:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8014c3e:	8a1a      	ldrh	r2, [r3, #16]
 8014c40:	8a5b      	ldrh	r3, [r3, #18]
 8014c42:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8014c46:	8004      	strh	r4, [r0, #0]
 8014c48:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8014c4c:	8041      	strh	r1, [r0, #2]
 8014c4e:	8082      	strh	r2, [r0, #4]
 8014c50:	80c3      	strh	r3, [r0, #6]
 8014c52:	e00e      	b.n	8014c72 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 8014c54:	4917      	ldr	r1, [pc, #92]	; (8014cb4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa4>)
 8014c56:	8809      	ldrh	r1, [r1, #0]
 8014c58:	4411      	add	r1, r2
 8014c5a:	428b      	cmp	r3, r1
 8014c5c:	da0a      	bge.n	8014c74 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x64>
 8014c5e:	1a9b      	subs	r3, r3, r2
 8014c60:	4a15      	ldr	r2, [pc, #84]	; (8014cb8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa8>)
 8014c62:	210e      	movs	r1, #14
 8014c64:	6812      	ldr	r2, [r2, #0]
 8014c66:	fb01 2303 	mla	r3, r1, r3, r2
 8014c6a:	681a      	ldr	r2, [r3, #0]
 8014c6c:	6002      	str	r2, [r0, #0]
 8014c6e:	685a      	ldr	r2, [r3, #4]
 8014c70:	6042      	str	r2, [r0, #4]
 8014c72:	bd10      	pop	{r4, pc}
 8014c74:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8014c78:	4293      	cmp	r3, r2
 8014c7a:	d10b      	bne.n	8014c94 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>
 8014c7c:	4b0f      	ldr	r3, [pc, #60]	; (8014cbc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xac>)
 8014c7e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8014c82:	4b0f      	ldr	r3, [pc, #60]	; (8014cc0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xb0>)
 8014c84:	8081      	strh	r1, [r0, #4]
 8014c86:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014c8a:	2300      	movs	r3, #0
 8014c8c:	80c2      	strh	r2, [r0, #6]
 8014c8e:	8003      	strh	r3, [r0, #0]
 8014c90:	8043      	strh	r3, [r0, #2]
 8014c92:	e7ee      	b.n	8014c72 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 8014c94:	2300      	movs	r3, #0
 8014c96:	8003      	strh	r3, [r0, #0]
 8014c98:	8043      	strh	r3, [r0, #2]
 8014c9a:	8083      	strh	r3, [r0, #4]
 8014c9c:	e7d8      	b.n	8014c50 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x40>
 8014c9e:	bf00      	nop
 8014ca0:	2400e124 	.word	0x2400e124
 8014ca4:	08022348 	.word	0x08022348
 8014ca8:	080249ed 	.word	0x080249ed
 8014cac:	08024929 	.word	0x08024929
 8014cb0:	2400e11c 	.word	0x2400e11c
 8014cb4:	2400e120 	.word	0x2400e120
 8014cb8:	2400e104 	.word	0x2400e104
 8014cbc:	2400e070 	.word	0x2400e070
 8014cc0:	2400e072 	.word	0x2400e072

08014cc4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8014cc4:	4b18      	ldr	r3, [pc, #96]	; (8014d28 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8014cc6:	681b      	ldr	r3, [r3, #0]
 8014cc8:	b34b      	cbz	r3, 8014d1e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 8014cca:	4a18      	ldr	r2, [pc, #96]	; (8014d2c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8014ccc:	8800      	ldrh	r0, [r0, #0]
 8014cce:	8812      	ldrh	r2, [r2, #0]
 8014cd0:	4290      	cmp	r0, r2
 8014cd2:	d211      	bcs.n	8014cf8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x34>
 8014cd4:	2214      	movs	r2, #20
 8014cd6:	fb02 3300 	mla	r3, r2, r0, r3
 8014cda:	8a1a      	ldrh	r2, [r3, #16]
 8014cdc:	8919      	ldrh	r1, [r3, #8]
 8014cde:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8014ce2:	428a      	cmp	r2, r1
 8014ce4:	db1d      	blt.n	8014d22 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 8014ce6:	8a58      	ldrh	r0, [r3, #18]
 8014ce8:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8014cec:	895b      	ldrh	r3, [r3, #10]
 8014cee:	4298      	cmp	r0, r3
 8014cf0:	bfac      	ite	ge
 8014cf2:	2000      	movge	r0, #0
 8014cf4:	2001      	movlt	r0, #1
 8014cf6:	4770      	bx	lr
 8014cf8:	4b0d      	ldr	r3, [pc, #52]	; (8014d30 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8014cfa:	881b      	ldrh	r3, [r3, #0]
 8014cfc:	4413      	add	r3, r2
 8014cfe:	4298      	cmp	r0, r3
 8014d00:	da0d      	bge.n	8014d1e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 8014d02:	4b0c      	ldr	r3, [pc, #48]	; (8014d34 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x70>)
 8014d04:	1a80      	subs	r0, r0, r2
 8014d06:	220e      	movs	r2, #14
 8014d08:	681b      	ldr	r3, [r3, #0]
 8014d0a:	fb02 3300 	mla	r3, r2, r0, r3
 8014d0e:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8014d12:	891a      	ldrh	r2, [r3, #8]
 8014d14:	4291      	cmp	r1, r2
 8014d16:	db04      	blt.n	8014d22 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 8014d18:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8014d1c:	e7e6      	b.n	8014cec <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x28>
 8014d1e:	2000      	movs	r0, #0
 8014d20:	4770      	bx	lr
 8014d22:	2001      	movs	r0, #1
 8014d24:	4770      	bx	lr
 8014d26:	bf00      	nop
 8014d28:	2400e124 	.word	0x2400e124
 8014d2c:	2400e11c 	.word	0x2400e11c
 8014d30:	2400e120 	.word	0x2400e120
 8014d34:	2400e104 	.word	0x2400e104

08014d38 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8014d38:	b508      	push	{r3, lr}
 8014d3a:	4b12      	ldr	r3, [pc, #72]	; (8014d84 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8014d3c:	6819      	ldr	r1, [r3, #0]
 8014d3e:	b931      	cbnz	r1, 8014d4e <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8014d40:	4b11      	ldr	r3, [pc, #68]	; (8014d88 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8014d42:	f44f 619a 	mov.w	r1, #1232	; 0x4d0
 8014d46:	4a11      	ldr	r2, [pc, #68]	; (8014d8c <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8014d48:	4811      	ldr	r0, [pc, #68]	; (8014d90 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8014d4a:	f00a ff45 	bl	801fbd8 <__assert_func>
 8014d4e:	8803      	ldrh	r3, [r0, #0]
 8014d50:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8014d54:	4293      	cmp	r3, r2
 8014d56:	d012      	beq.n	8014d7e <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8014d58:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8014d5c:	4293      	cmp	r3, r2
 8014d5e:	d103      	bne.n	8014d68 <_ZNK8touchgfx6Bitmap7getDataEv+0x30>
 8014d60:	4b0c      	ldr	r3, [pc, #48]	; (8014d94 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8014d62:	681b      	ldr	r3, [r3, #0]
 8014d64:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8014d66:	bd08      	pop	{r3, pc}
 8014d68:	4a0b      	ldr	r2, [pc, #44]	; (8014d98 <_ZNK8touchgfx6Bitmap7getDataEv+0x60>)
 8014d6a:	6812      	ldr	r2, [r2, #0]
 8014d6c:	b11a      	cbz	r2, 8014d76 <_ZNK8touchgfx6Bitmap7getDataEv+0x3e>
 8014d6e:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8014d72:	2800      	cmp	r0, #0
 8014d74:	d1f7      	bne.n	8014d66 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 8014d76:	2214      	movs	r2, #20
 8014d78:	4353      	muls	r3, r2
 8014d7a:	58c8      	ldr	r0, [r1, r3]
 8014d7c:	e7f3      	b.n	8014d66 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 8014d7e:	2000      	movs	r0, #0
 8014d80:	e7f1      	b.n	8014d66 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 8014d82:	bf00      	nop
 8014d84:	2400e124 	.word	0x2400e124
 8014d88:	08022348 	.word	0x08022348
 8014d8c:	08024a23 	.word	0x08024a23
 8014d90:	08024929 	.word	0x08024929
 8014d94:	2400e07c 	.word	0x2400e07c
 8014d98:	2400e100 	.word	0x2400e100

08014d9c <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8014d9c:	8802      	ldrh	r2, [r0, #0]
 8014d9e:	f64f 73fd 	movw	r3, #65533	; 0xfffd
 8014da2:	429a      	cmp	r2, r3
 8014da4:	d845      	bhi.n	8014e32 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 8014da6:	4b24      	ldr	r3, [pc, #144]	; (8014e38 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8014da8:	8818      	ldrh	r0, [r3, #0]
 8014daa:	4282      	cmp	r2, r0
 8014dac:	d221      	bcs.n	8014df2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x56>
 8014dae:	4b23      	ldr	r3, [pc, #140]	; (8014e3c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8014db0:	6819      	ldr	r1, [r3, #0]
 8014db2:	2314      	movs	r3, #20
 8014db4:	fb03 1302 	mla	r3, r3, r2, r1
 8014db8:	6858      	ldr	r0, [r3, #4]
 8014dba:	2800      	cmp	r0, #0
 8014dbc:	d03a      	beq.n	8014e34 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 8014dbe:	4920      	ldr	r1, [pc, #128]	; (8014e40 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8014dc0:	6809      	ldr	r1, [r1, #0]
 8014dc2:	2900      	cmp	r1, #0
 8014dc4:	d036      	beq.n	8014e34 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 8014dc6:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8014dca:	2900      	cmp	r1, #0
 8014dcc:	d032      	beq.n	8014e34 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 8014dce:	891a      	ldrh	r2, [r3, #8]
 8014dd0:	8958      	ldrh	r0, [r3, #10]
 8014dd2:	4350      	muls	r0, r2
 8014dd4:	7c5a      	ldrb	r2, [r3, #17]
 8014dd6:	7cdb      	ldrb	r3, [r3, #19]
 8014dd8:	0952      	lsrs	r2, r2, #5
 8014dda:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8014dde:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8014de2:	2b0b      	cmp	r3, #11
 8014de4:	bf18      	it	ne
 8014de6:	0040      	lslne	r0, r0, #1
 8014de8:	3003      	adds	r0, #3
 8014dea:	f020 0003 	bic.w	r0, r0, #3
 8014dee:	4408      	add	r0, r1
 8014df0:	4770      	bx	lr
 8014df2:	4b14      	ldr	r3, [pc, #80]	; (8014e44 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa8>)
 8014df4:	881b      	ldrh	r3, [r3, #0]
 8014df6:	4403      	add	r3, r0
 8014df8:	429a      	cmp	r2, r3
 8014dfa:	da1a      	bge.n	8014e32 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 8014dfc:	4b12      	ldr	r3, [pc, #72]	; (8014e48 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xac>)
 8014dfe:	1a10      	subs	r0, r2, r0
 8014e00:	210e      	movs	r1, #14
 8014e02:	681b      	ldr	r3, [r3, #0]
 8014e04:	fb01 3000 	mla	r0, r1, r0, r3
 8014e08:	7b03      	ldrb	r3, [r0, #12]
 8014e0a:	f003 031f 	and.w	r3, r3, #31
 8014e0e:	2b0b      	cmp	r3, #11
 8014e10:	d10b      	bne.n	8014e2a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8014e12:	8903      	ldrh	r3, [r0, #8]
 8014e14:	8940      	ldrh	r0, [r0, #10]
 8014e16:	4358      	muls	r0, r3
 8014e18:	4b09      	ldr	r3, [pc, #36]	; (8014e40 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8014e1a:	3003      	adds	r0, #3
 8014e1c:	6819      	ldr	r1, [r3, #0]
 8014e1e:	f020 0303 	bic.w	r3, r0, #3
 8014e22:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8014e26:	4418      	add	r0, r3
 8014e28:	4770      	bx	lr
 8014e2a:	2b0d      	cmp	r3, #13
 8014e2c:	d101      	bne.n	8014e32 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 8014e2e:	300d      	adds	r0, #13
 8014e30:	4770      	bx	lr
 8014e32:	2000      	movs	r0, #0
 8014e34:	4770      	bx	lr
 8014e36:	bf00      	nop
 8014e38:	2400e11c 	.word	0x2400e11c
 8014e3c:	2400e124 	.word	0x2400e124
 8014e40:	2400e100 	.word	0x2400e100
 8014e44:	2400e120 	.word	0x2400e120
 8014e48:	2400e104 	.word	0x2400e104

08014e4c <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8014e4c:	4b17      	ldr	r3, [pc, #92]	; (8014eac <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 8014e4e:	b510      	push	{r4, lr}
 8014e50:	6819      	ldr	r1, [r3, #0]
 8014e52:	8803      	ldrh	r3, [r0, #0]
 8014e54:	b1e9      	cbz	r1, 8014e92 <_ZNK8touchgfx6Bitmap9getFormatEv+0x46>
 8014e56:	4a16      	ldr	r2, [pc, #88]	; (8014eb0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 8014e58:	8812      	ldrh	r2, [r2, #0]
 8014e5a:	429a      	cmp	r2, r3
 8014e5c:	d90a      	bls.n	8014e74 <_ZNK8touchgfx6Bitmap9getFormatEv+0x28>
 8014e5e:	2214      	movs	r2, #20
 8014e60:	fb02 1303 	mla	r3, r2, r3, r1
 8014e64:	7c58      	ldrb	r0, [r3, #17]
 8014e66:	0942      	lsrs	r2, r0, #5
 8014e68:	7cd8      	ldrb	r0, [r3, #19]
 8014e6a:	f3c0 1042 	ubfx	r0, r0, #5, #3
 8014e6e:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8014e72:	bd10      	pop	{r4, pc}
 8014e74:	490f      	ldr	r1, [pc, #60]	; (8014eb4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8014e76:	8809      	ldrh	r1, [r1, #0]
 8014e78:	4411      	add	r1, r2
 8014e7a:	428b      	cmp	r3, r1
 8014e7c:	da09      	bge.n	8014e92 <_ZNK8touchgfx6Bitmap9getFormatEv+0x46>
 8014e7e:	1a9b      	subs	r3, r3, r2
 8014e80:	4a0d      	ldr	r2, [pc, #52]	; (8014eb8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8014e82:	210e      	movs	r1, #14
 8014e84:	6812      	ldr	r2, [r2, #0]
 8014e86:	fb01 2303 	mla	r3, r1, r3, r2
 8014e8a:	7b18      	ldrb	r0, [r3, #12]
 8014e8c:	f000 001f 	and.w	r0, r0, #31
 8014e90:	e7ef      	b.n	8014e72 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8014e92:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8014e96:	4293      	cmp	r3, r2
 8014e98:	d106      	bne.n	8014ea8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5c>
 8014e9a:	f7ee f87f 	bl	8002f9c <_ZN8touchgfx3HAL3lcdEv>
 8014e9e:	6803      	ldr	r3, [r0, #0]
 8014ea0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014ea4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014ea6:	4718      	bx	r3
 8014ea8:	2000      	movs	r0, #0
 8014eaa:	e7e2      	b.n	8014e72 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8014eac:	2400e124 	.word	0x2400e124
 8014eb0:	2400e11c 	.word	0x2400e11c
 8014eb4:	2400e120 	.word	0x2400e120
 8014eb8:	2400e104 	.word	0x2400e104

08014ebc <_ZNK8touchgfx8LCD24bpp8bitDepthEv>:
 8014ebc:	2018      	movs	r0, #24
 8014ebe:	4770      	bx	lr

08014ec0 <_ZNK8touchgfx8LCD24bpp17framebufferFormatEv>:
 8014ec0:	2001      	movs	r0, #1
 8014ec2:	4770      	bx	lr

08014ec4 <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014ec4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014ec8:	b085      	sub	sp, #20
 8014eca:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8014ecc:	9203      	str	r2, [sp, #12]
 8014ece:	6870      	ldr	r0, [r6, #4]
 8014ed0:	f8dd c058 	ldr.w	ip, [sp, #88]	; 0x58
 8014ed4:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 8014ed8:	9101      	str	r1, [sp, #4]
 8014eda:	fa1f f885 	uxth.w	r8, r5
 8014ede:	43ed      	mvns	r5, r5
 8014ee0:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8014ee4:	b2ed      	uxtb	r5, r5
 8014ee6:	fb00 2404 	mla	r4, r0, r4, r2
 8014eea:	6832      	ldr	r2, [r6, #0]
 8014eec:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8014ef0:	4414      	add	r4, r2
 8014ef2:	f8dc 2000 	ldr.w	r2, [ip]
 8014ef6:	9202      	str	r2, [sp, #8]
 8014ef8:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8014efc:	f102 0e04 	add.w	lr, r2, #4
 8014f00:	9a01      	ldr	r2, [sp, #4]
 8014f02:	2a00      	cmp	r2, #0
 8014f04:	dc03      	bgt.n	8014f0e <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8014f06:	9a03      	ldr	r2, [sp, #12]
 8014f08:	2a00      	cmp	r2, #0
 8014f0a:	f340 8116 	ble.w	801513a <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8014f0e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014f10:	f9bc a008 	ldrsh.w	sl, [ip, #8]
 8014f14:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8014f18:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014f1a:	f9bc 900c 	ldrsh.w	r9, [ip, #12]
 8014f1e:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014f22:	2b00      	cmp	r3, #0
 8014f24:	dd0e      	ble.n	8014f44 <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8014f26:	1406      	asrs	r6, r0, #16
 8014f28:	d405      	bmi.n	8014f36 <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014f2a:	4556      	cmp	r6, sl
 8014f2c:	da03      	bge.n	8014f36 <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014f2e:	1416      	asrs	r6, r2, #16
 8014f30:	d401      	bmi.n	8014f36 <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014f32:	454e      	cmp	r6, r9
 8014f34:	db07      	blt.n	8014f46 <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8014f36:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8014f38:	3b01      	subs	r3, #1
 8014f3a:	3403      	adds	r4, #3
 8014f3c:	4430      	add	r0, r6
 8014f3e:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8014f40:	4432      	add	r2, r6
 8014f42:	e7ee      	b.n	8014f22 <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8014f44:	d063      	beq.n	801500e <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8014f46:	1e5e      	subs	r6, r3, #1
 8014f48:	9f11      	ldr	r7, [sp, #68]	; 0x44
 8014f4a:	fb07 0706 	mla	r7, r7, r6, r0
 8014f4e:	143f      	asrs	r7, r7, #16
 8014f50:	d454      	bmi.n	8014ffc <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8014f52:	4557      	cmp	r7, sl
 8014f54:	da52      	bge.n	8014ffc <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8014f56:	9f12      	ldr	r7, [sp, #72]	; 0x48
 8014f58:	fb07 2606 	mla	r6, r7, r6, r2
 8014f5c:	1436      	asrs	r6, r6, #16
 8014f5e:	d44d      	bmi.n	8014ffc <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8014f60:	454e      	cmp	r6, r9
 8014f62:	da4b      	bge.n	8014ffc <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8014f64:	1ce6      	adds	r6, r4, #3
 8014f66:	4699      	mov	r9, r3
 8014f68:	f1b9 0f00 	cmp.w	r9, #0
 8014f6c:	f106 0603 	add.w	r6, r6, #3
 8014f70:	dd48      	ble.n	8015004 <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 8014f72:	f9bc b008 	ldrsh.w	fp, [ip, #8]
 8014f76:	1417      	asrs	r7, r2, #16
 8014f78:	9902      	ldr	r1, [sp, #8]
 8014f7a:	ea4f 4a20 	mov.w	sl, r0, asr #16
 8014f7e:	f109 39ff 	add.w	r9, r9, #4294967295
 8014f82:	fb0b 1707 	mla	r7, fp, r7, r1
 8014f86:	f816 bc06 	ldrb.w	fp, [r6, #-6]
 8014f8a:	9911      	ldr	r1, [sp, #68]	; 0x44
 8014f8c:	f817 700a 	ldrb.w	r7, [r7, sl]
 8014f90:	fb1b fb05 	smulbb	fp, fp, r5
 8014f94:	4408      	add	r0, r1
 8014f96:	9912      	ldr	r1, [sp, #72]	; 0x48
 8014f98:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8014f9c:	440a      	add	r2, r1
 8014f9e:	eb0e 0a07 	add.w	sl, lr, r7
 8014fa2:	f81e 7007 	ldrb.w	r7, [lr, r7]
 8014fa6:	fb07 b708 	mla	r7, r7, r8, fp
 8014faa:	b2bf      	uxth	r7, r7
 8014fac:	f107 0b01 	add.w	fp, r7, #1
 8014fb0:	eb0b 2717 	add.w	r7, fp, r7, lsr #8
 8014fb4:	f816 bc05 	ldrb.w	fp, [r6, #-5]
 8014fb8:	fb1b fb05 	smulbb	fp, fp, r5
 8014fbc:	123f      	asrs	r7, r7, #8
 8014fbe:	f806 7c06 	strb.w	r7, [r6, #-6]
 8014fc2:	f89a 7001 	ldrb.w	r7, [sl, #1]
 8014fc6:	fb07 b708 	mla	r7, r7, r8, fp
 8014fca:	b2bf      	uxth	r7, r7
 8014fcc:	f107 0b01 	add.w	fp, r7, #1
 8014fd0:	eb0b 2717 	add.w	r7, fp, r7, lsr #8
 8014fd4:	123f      	asrs	r7, r7, #8
 8014fd6:	f806 7c05 	strb.w	r7, [r6, #-5]
 8014fda:	f89a 7002 	ldrb.w	r7, [sl, #2]
 8014fde:	f816 ac04 	ldrb.w	sl, [r6, #-4]
 8014fe2:	fb1a fa05 	smulbb	sl, sl, r5
 8014fe6:	fb07 a708 	mla	r7, r7, r8, sl
 8014fea:	b2bf      	uxth	r7, r7
 8014fec:	f107 0a01 	add.w	sl, r7, #1
 8014ff0:	eb0a 2717 	add.w	r7, sl, r7, lsr #8
 8014ff4:	123f      	asrs	r7, r7, #8
 8014ff6:	f806 7c04 	strb.w	r7, [r6, #-4]
 8014ffa:	e7b5      	b.n	8014f68 <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8014ffc:	2700      	movs	r7, #0
 8014ffe:	1bde      	subs	r6, r3, r7
 8015000:	2e00      	cmp	r6, #0
 8015002:	dc42      	bgt.n	801508a <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8015004:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015008:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801500c:	441c      	add	r4, r3
 801500e:	9b01      	ldr	r3, [sp, #4]
 8015010:	2b00      	cmp	r3, #0
 8015012:	f340 8092 	ble.w	801513a <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8015016:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801501a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801501c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015020:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015024:	eef0 6a62 	vmov.f32	s13, s5
 8015028:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801502c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015030:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015034:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 8015038:	eef0 6a43 	vmov.f32	s13, s6
 801503c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015040:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8015044:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015048:	ee61 7a27 	vmul.f32	s15, s2, s15
 801504c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015050:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015054:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015058:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801505c:	ee12 2a90 	vmov	r2, s5
 8015060:	eef0 2a47 	vmov.f32	s5, s14
 8015064:	fb92 f3f3 	sdiv	r3, r2, r3
 8015068:	ee13 2a10 	vmov	r2, s6
 801506c:	9311      	str	r3, [sp, #68]	; 0x44
 801506e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015070:	eeb0 3a67 	vmov.f32	s6, s15
 8015074:	fb92 f3f3 	sdiv	r3, r2, r3
 8015078:	9312      	str	r3, [sp, #72]	; 0x48
 801507a:	9b01      	ldr	r3, [sp, #4]
 801507c:	9a03      	ldr	r2, [sp, #12]
 801507e:	3b01      	subs	r3, #1
 8015080:	9301      	str	r3, [sp, #4]
 8015082:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015084:	bf08      	it	eq
 8015086:	4613      	moveq	r3, r2
 8015088:	e73a      	b.n	8014f00 <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801508a:	ea5f 4a20 	movs.w	sl, r0, asr #16
 801508e:	d44e      	bmi.n	801512e <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8015090:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8015094:	4556      	cmp	r6, sl
 8015096:	dd4a      	ble.n	801512e <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8015098:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801509c:	d447      	bmi.n	801512e <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801509e:	f8dc 100c 	ldr.w	r1, [ip, #12]
 80150a2:	4559      	cmp	r1, fp
 80150a4:	dd43      	ble.n	801512e <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 80150a6:	fa0f f986 	sxth.w	r9, r6
 80150aa:	9902      	ldr	r1, [sp, #8]
 80150ac:	eb07 0647 	add.w	r6, r7, r7, lsl #1
 80150b0:	fb0b 1909 	mla	r9, fp, r9, r1
 80150b4:	f814 b006 	ldrb.w	fp, [r4, r6]
 80150b8:	f819 900a 	ldrb.w	r9, [r9, sl]
 80150bc:	fb1b fb05 	smulbb	fp, fp, r5
 80150c0:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 80150c4:	eb0e 0a09 	add.w	sl, lr, r9
 80150c8:	f81e 9009 	ldrb.w	r9, [lr, r9]
 80150cc:	fb09 b908 	mla	r9, r9, r8, fp
 80150d0:	fa1f f989 	uxth.w	r9, r9
 80150d4:	f109 0b01 	add.w	fp, r9, #1
 80150d8:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 80150dc:	ea4f 2929 	mov.w	r9, r9, asr #8
 80150e0:	f804 9006 	strb.w	r9, [r4, r6]
 80150e4:	4426      	add	r6, r4
 80150e6:	f89a 9001 	ldrb.w	r9, [sl, #1]
 80150ea:	f896 b001 	ldrb.w	fp, [r6, #1]
 80150ee:	fb1b fb05 	smulbb	fp, fp, r5
 80150f2:	fb09 b908 	mla	r9, r9, r8, fp
 80150f6:	fa1f f989 	uxth.w	r9, r9
 80150fa:	f109 0b01 	add.w	fp, r9, #1
 80150fe:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 8015102:	ea4f 2929 	mov.w	r9, r9, asr #8
 8015106:	f886 9001 	strb.w	r9, [r6, #1]
 801510a:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801510e:	f896 a002 	ldrb.w	sl, [r6, #2]
 8015112:	fb1a fa05 	smulbb	sl, sl, r5
 8015116:	fb09 a908 	mla	r9, r9, r8, sl
 801511a:	fa1f f989 	uxth.w	r9, r9
 801511e:	f109 0a01 	add.w	sl, r9, #1
 8015122:	eb0a 2919 	add.w	r9, sl, r9, lsr #8
 8015126:	ea4f 2929 	mov.w	r9, r9, asr #8
 801512a:	f886 9002 	strb.w	r9, [r6, #2]
 801512e:	9911      	ldr	r1, [sp, #68]	; 0x44
 8015130:	3701      	adds	r7, #1
 8015132:	4408      	add	r0, r1
 8015134:	9912      	ldr	r1, [sp, #72]	; 0x48
 8015136:	440a      	add	r2, r1
 8015138:	e761      	b.n	8014ffe <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 801513a:	b005      	add	sp, #20
 801513c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015140 <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015140:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015144:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8015146:	4693      	mov	fp, r2
 8015148:	9e14      	ldr	r6, [sp, #80]	; 0x50
 801514a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801514e:	6868      	ldr	r0, [r5, #4]
 8015150:	6877      	ldr	r7, [r6, #4]
 8015152:	9100      	str	r1, [sp, #0]
 8015154:	3704      	adds	r7, #4
 8015156:	e9dd 2412 	ldrd	r2, r4, [sp, #72]	; 0x48
 801515a:	e9dd 8e0f 	ldrd	r8, lr, [sp, #60]	; 0x3c
 801515e:	fb00 2404 	mla	r4, r0, r4, r2
 8015162:	682a      	ldr	r2, [r5, #0]
 8015164:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8015168:	4414      	add	r4, r2
 801516a:	6832      	ldr	r2, [r6, #0]
 801516c:	9201      	str	r2, [sp, #4]
 801516e:	9a00      	ldr	r2, [sp, #0]
 8015170:	2a00      	cmp	r2, #0
 8015172:	dc03      	bgt.n	801517c <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8015174:	f1bb 0f00 	cmp.w	fp, #0
 8015178:	f340 80bc 	ble.w	80152f4 <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801517c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801517e:	f9b6 a008 	ldrsh.w	sl, [r6, #8]
 8015182:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8015186:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8015188:	f9b6 900c 	ldrsh.w	r9, [r6, #12]
 801518c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015190:	2b00      	cmp	r3, #0
 8015192:	dd0c      	ble.n	80151ae <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8015194:	1405      	asrs	r5, r0, #16
 8015196:	d405      	bmi.n	80151a4 <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8015198:	4555      	cmp	r5, sl
 801519a:	da03      	bge.n	80151a4 <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801519c:	1415      	asrs	r5, r2, #16
 801519e:	d401      	bmi.n	80151a4 <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80151a0:	454d      	cmp	r5, r9
 80151a2:	db05      	blt.n	80151b0 <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80151a4:	4440      	add	r0, r8
 80151a6:	4472      	add	r2, lr
 80151a8:	3b01      	subs	r3, #1
 80151aa:	3403      	adds	r4, #3
 80151ac:	e7f0      	b.n	8015190 <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 80151ae:	d03f      	beq.n	8015230 <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xf0>
 80151b0:	1e5d      	subs	r5, r3, #1
 80151b2:	fb08 0c05 	mla	ip, r8, r5, r0
 80151b6:	ea5f 4c2c 	movs.w	ip, ip, asr #16
 80151ba:	d42e      	bmi.n	801521a <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xda>
 80151bc:	45d4      	cmp	ip, sl
 80151be:	da2c      	bge.n	801521a <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xda>
 80151c0:	fb0e 2505 	mla	r5, lr, r5, r2
 80151c4:	142d      	asrs	r5, r5, #16
 80151c6:	d428      	bmi.n	801521a <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xda>
 80151c8:	454d      	cmp	r5, r9
 80151ca:	da26      	bge.n	801521a <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xda>
 80151cc:	1ce5      	adds	r5, r4, #3
 80151ce:	469c      	mov	ip, r3
 80151d0:	f1bc 0f00 	cmp.w	ip, #0
 80151d4:	f105 0503 	add.w	r5, r5, #3
 80151d8:	dd25      	ble.n	8015226 <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xe6>
 80151da:	f9b6 1008 	ldrsh.w	r1, [r6, #8]
 80151de:	ea4f 4922 	mov.w	r9, r2, asr #16
 80151e2:	f10c 3cff 	add.w	ip, ip, #4294967295
 80151e6:	4472      	add	r2, lr
 80151e8:	468a      	mov	sl, r1
 80151ea:	9901      	ldr	r1, [sp, #4]
 80151ec:	fb0a 1909 	mla	r9, sl, r9, r1
 80151f0:	1401      	asrs	r1, r0, #16
 80151f2:	4440      	add	r0, r8
 80151f4:	f819 9001 	ldrb.w	r9, [r9, r1]
 80151f8:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 80151fc:	eb07 0a09 	add.w	sl, r7, r9
 8015200:	f817 9009 	ldrb.w	r9, [r7, r9]
 8015204:	f805 9c06 	strb.w	r9, [r5, #-6]
 8015208:	f89a 9001 	ldrb.w	r9, [sl, #1]
 801520c:	f805 9c05 	strb.w	r9, [r5, #-5]
 8015210:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8015214:	f805 9c04 	strb.w	r9, [r5, #-4]
 8015218:	e7da      	b.n	80151d0 <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801521a:	2500      	movs	r5, #0
 801521c:	eba3 0c05 	sub.w	ip, r3, r5
 8015220:	f1bc 0f00 	cmp.w	ip, #0
 8015224:	dc3b      	bgt.n	801529e <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8015226:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801522a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801522e:	441c      	add	r4, r3
 8015230:	9b00      	ldr	r3, [sp, #0]
 8015232:	2b00      	cmp	r3, #0
 8015234:	dd5e      	ble.n	80152f4 <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8015236:	ee30 0a04 	vadd.f32	s0, s0, s8
 801523a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801523c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015240:	eeb0 6a62 	vmov.f32	s12, s5
 8015244:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015248:	ee31 1a05 	vadd.f32	s2, s2, s10
 801524c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015250:	ed8d 6a0d 	vstr	s12, [sp, #52]	; 0x34
 8015254:	eeb0 6a43 	vmov.f32	s12, s6
 8015258:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801525c:	ed8d 6a0e 	vstr	s12, [sp, #56]	; 0x38
 8015260:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015264:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015268:	ee77 2a62 	vsub.f32	s5, s14, s5
 801526c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015270:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015274:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015278:	ee12 2a90 	vmov	r2, s5
 801527c:	eef0 2a47 	vmov.f32	s5, s14
 8015280:	fb92 f8f3 	sdiv	r8, r2, r3
 8015284:	ee13 2a10 	vmov	r2, s6
 8015288:	eeb0 3a67 	vmov.f32	s6, s15
 801528c:	fb92 fef3 	sdiv	lr, r2, r3
 8015290:	9b00      	ldr	r3, [sp, #0]
 8015292:	3b01      	subs	r3, #1
 8015294:	9300      	str	r3, [sp, #0]
 8015296:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015298:	bf08      	it	eq
 801529a:	465b      	moveq	r3, fp
 801529c:	e767      	b.n	801516e <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801529e:	ea5f 4920 	movs.w	r9, r0, asr #16
 80152a2:	d423      	bmi.n	80152ec <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 80152a4:	f8d6 c008 	ldr.w	ip, [r6, #8]
 80152a8:	45cc      	cmp	ip, r9
 80152aa:	dd1f      	ble.n	80152ec <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 80152ac:	ea5f 4a22 	movs.w	sl, r2, asr #16
 80152b0:	d41c      	bmi.n	80152ec <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 80152b2:	68f1      	ldr	r1, [r6, #12]
 80152b4:	4551      	cmp	r1, sl
 80152b6:	dd19      	ble.n	80152ec <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 80152b8:	fa0f fc8c 	sxth.w	ip, ip
 80152bc:	9901      	ldr	r1, [sp, #4]
 80152be:	fb0a 1c0c 	mla	ip, sl, ip, r1
 80152c2:	f81c c009 	ldrb.w	ip, [ip, r9]
 80152c6:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80152ca:	f817 a00c 	ldrb.w	sl, [r7, ip]
 80152ce:	eb07 090c 	add.w	r9, r7, ip
 80152d2:	eb05 0c45 	add.w	ip, r5, r5, lsl #1
 80152d6:	f804 a00c 	strb.w	sl, [r4, ip]
 80152da:	44a4      	add	ip, r4
 80152dc:	f899 a001 	ldrb.w	sl, [r9, #1]
 80152e0:	f88c a001 	strb.w	sl, [ip, #1]
 80152e4:	f899 9002 	ldrb.w	r9, [r9, #2]
 80152e8:	f88c 9002 	strb.w	r9, [ip, #2]
 80152ec:	4440      	add	r0, r8
 80152ee:	4472      	add	r2, lr
 80152f0:	3501      	adds	r5, #1
 80152f2:	e793      	b.n	801521c <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xdc>
 80152f4:	b003      	add	sp, #12
 80152f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080152fa <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80152fa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80152fe:	b085      	sub	sp, #20
 8015300:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015304:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015306:	9202      	str	r2, [sp, #8]
 8015308:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801530c:	6860      	ldr	r0, [r4, #4]
 801530e:	9203      	str	r2, [sp, #12]
 8015310:	f8dd c058 	ldr.w	ip, [sp, #88]	; 0x58
 8015314:	f8dd e044 	ldr.w	lr, [sp, #68]	; 0x44
 8015318:	e9dd 2514 	ldrd	r2, r5, [sp, #80]	; 0x50
 801531c:	fb00 2505 	mla	r5, r0, r5, r2
 8015320:	6822      	ldr	r2, [r4, #0]
 8015322:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8015326:	4415      	add	r5, r2
 8015328:	f8dc 2000 	ldr.w	r2, [ip]
 801532c:	9200      	str	r2, [sp, #0]
 801532e:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8015332:	3204      	adds	r2, #4
 8015334:	9201      	str	r2, [sp, #4]
 8015336:	2900      	cmp	r1, #0
 8015338:	dc03      	bgt.n	8015342 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801533a:	9a02      	ldr	r2, [sp, #8]
 801533c:	2a00      	cmp	r2, #0
 801533e:	f340 8127 	ble.w	8015590 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8015342:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015344:	f9bc 8008 	ldrsh.w	r8, [ip, #8]
 8015348:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 801534c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801534e:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8015352:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8015356:	2b00      	cmp	r3, #0
 8015358:	dd0d      	ble.n	8015376 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801535a:	1422      	asrs	r2, r4, #16
 801535c:	d405      	bmi.n	801536a <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801535e:	4542      	cmp	r2, r8
 8015360:	da03      	bge.n	801536a <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015362:	1402      	asrs	r2, r0, #16
 8015364:	d401      	bmi.n	801536a <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015366:	42ba      	cmp	r2, r7
 8015368:	db06      	blt.n	8015378 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801536a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801536c:	4474      	add	r4, lr
 801536e:	3b01      	subs	r3, #1
 8015370:	3503      	adds	r5, #3
 8015372:	4410      	add	r0, r2
 8015374:	e7ef      	b.n	8015356 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8015376:	d075      	beq.n	8015464 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8015378:	1e5a      	subs	r2, r3, #1
 801537a:	fb0e 4602 	mla	r6, lr, r2, r4
 801537e:	1436      	asrs	r6, r6, #16
 8015380:	d465      	bmi.n	801544e <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8015382:	4546      	cmp	r6, r8
 8015384:	da63      	bge.n	801544e <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8015386:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8015388:	fb06 0202 	mla	r2, r6, r2, r0
 801538c:	1412      	asrs	r2, r2, #16
 801538e:	d45e      	bmi.n	801544e <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8015390:	42ba      	cmp	r2, r7
 8015392:	da5c      	bge.n	801544e <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8015394:	1cef      	adds	r7, r5, #3
 8015396:	4699      	mov	r9, r3
 8015398:	f1b9 0f00 	cmp.w	r9, #0
 801539c:	dd5d      	ble.n	801545a <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x160>
 801539e:	1402      	asrs	r2, r0, #16
 80153a0:	f9bc 8008 	ldrsh.w	r8, [ip, #8]
 80153a4:	1426      	asrs	r6, r4, #16
 80153a6:	4692      	mov	sl, r2
 80153a8:	9a00      	ldr	r2, [sp, #0]
 80153aa:	fb08 220a 	mla	r2, r8, sl, r2
 80153ae:	5d92      	ldrb	r2, [r2, r6]
 80153b0:	9e01      	ldr	r6, [sp, #4]
 80153b2:	f856 6022 	ldr.w	r6, [r6, r2, lsl #2]
 80153b6:	ea5f 6816 	movs.w	r8, r6, lsr #24
 80153ba:	d041      	beq.n	8015440 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 80153bc:	9a03      	ldr	r2, [sp, #12]
 80153be:	fa5f fb86 	uxtb.w	fp, r6
 80153c2:	fb02 f808 	mul.w	r8, r2, r8
 80153c6:	f108 0201 	add.w	r2, r8, #1
 80153ca:	eb02 2228 	add.w	r2, r2, r8, asr #8
 80153ce:	f817 8c03 	ldrb.w	r8, [r7, #-3]
 80153d2:	1212      	asrs	r2, r2, #8
 80153d4:	fa1f fa82 	uxth.w	sl, r2
 80153d8:	43d2      	mvns	r2, r2
 80153da:	fb1b fb0a 	smulbb	fp, fp, sl
 80153de:	b2d2      	uxtb	r2, r2
 80153e0:	fb08 b802 	mla	r8, r8, r2, fp
 80153e4:	fa1f f888 	uxth.w	r8, r8
 80153e8:	f108 0b01 	add.w	fp, r8, #1
 80153ec:	eb0b 2818 	add.w	r8, fp, r8, lsr #8
 80153f0:	f3c6 2b07 	ubfx	fp, r6, #8, #8
 80153f4:	f3c6 4607 	ubfx	r6, r6, #16, #8
 80153f8:	fb1b fb0a 	smulbb	fp, fp, sl
 80153fc:	ea4f 2828 	mov.w	r8, r8, asr #8
 8015400:	fb16 fa0a 	smulbb	sl, r6, sl
 8015404:	f817 6c01 	ldrb.w	r6, [r7, #-1]
 8015408:	f807 8c03 	strb.w	r8, [r7, #-3]
 801540c:	f817 8c02 	ldrb.w	r8, [r7, #-2]
 8015410:	fb06 aa02 	mla	sl, r6, r2, sl
 8015414:	fb08 b802 	mla	r8, r8, r2, fp
 8015418:	fa1f fa8a 	uxth.w	sl, sl
 801541c:	fa1f f888 	uxth.w	r8, r8
 8015420:	f10a 0601 	add.w	r6, sl, #1
 8015424:	f108 0b01 	add.w	fp, r8, #1
 8015428:	eb06 2a1a 	add.w	sl, r6, sl, lsr #8
 801542c:	eb0b 2818 	add.w	r8, fp, r8, lsr #8
 8015430:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 8015434:	ea4f 2828 	mov.w	r8, r8, asr #8
 8015438:	f807 ac01 	strb.w	sl, [r7, #-1]
 801543c:	f807 8c02 	strb.w	r8, [r7, #-2]
 8015440:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015442:	4474      	add	r4, lr
 8015444:	3703      	adds	r7, #3
 8015446:	f109 39ff 	add.w	r9, r9, #4294967295
 801544a:	4410      	add	r0, r2
 801544c:	e7a4      	b.n	8015398 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801544e:	f04f 0800 	mov.w	r8, #0
 8015452:	eba3 0208 	sub.w	r2, r3, r8
 8015456:	2a00      	cmp	r2, #0
 8015458:	dc3b      	bgt.n	80154d2 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801545a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801545e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8015462:	441d      	add	r5, r3
 8015464:	2900      	cmp	r1, #0
 8015466:	f340 8093 	ble.w	8015590 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801546a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801546e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015470:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015474:	3901      	subs	r1, #1
 8015476:	eeb0 6a62 	vmov.f32	s12, s5
 801547a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801547e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015482:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015486:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801548a:	eeb0 6a43 	vmov.f32	s12, s6
 801548e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015492:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8015496:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801549a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801549e:	ee77 2a62 	vsub.f32	s5, s14, s5
 80154a2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80154a6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80154aa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80154ae:	ee12 2a90 	vmov	r2, s5
 80154b2:	eef0 2a47 	vmov.f32	s5, s14
 80154b6:	fb92 fef3 	sdiv	lr, r2, r3
 80154ba:	ee13 2a10 	vmov	r2, s6
 80154be:	eeb0 3a67 	vmov.f32	s6, s15
 80154c2:	fb92 f3f3 	sdiv	r3, r2, r3
 80154c6:	9a02      	ldr	r2, [sp, #8]
 80154c8:	9312      	str	r3, [sp, #72]	; 0x48
 80154ca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80154cc:	bf08      	it	eq
 80154ce:	4613      	moveq	r3, r2
 80154d0:	e731      	b.n	8015336 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80154d2:	1427      	asrs	r7, r4, #16
 80154d4:	d456      	bmi.n	8015584 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 80154d6:	f8dc 6008 	ldr.w	r6, [ip, #8]
 80154da:	42be      	cmp	r6, r7
 80154dc:	dd52      	ble.n	8015584 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 80154de:	ea5f 4920 	movs.w	r9, r0, asr #16
 80154e2:	d44f      	bmi.n	8015584 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 80154e4:	f8dc 200c 	ldr.w	r2, [ip, #12]
 80154e8:	454a      	cmp	r2, r9
 80154ea:	dd4b      	ble.n	8015584 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 80154ec:	9a00      	ldr	r2, [sp, #0]
 80154ee:	b236      	sxth	r6, r6
 80154f0:	fb09 2606 	mla	r6, r9, r6, r2
 80154f4:	5df2      	ldrb	r2, [r6, r7]
 80154f6:	9e01      	ldr	r6, [sp, #4]
 80154f8:	f856 7022 	ldr.w	r7, [r6, r2, lsl #2]
 80154fc:	0e3a      	lsrs	r2, r7, #24
 80154fe:	d041      	beq.n	8015584 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 8015500:	9e03      	ldr	r6, [sp, #12]
 8015502:	fa5f fb87 	uxtb.w	fp, r7
 8015506:	4372      	muls	r2, r6
 8015508:	1c56      	adds	r6, r2, #1
 801550a:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801550e:	eb08 0648 	add.w	r6, r8, r8, lsl #1
 8015512:	1212      	asrs	r2, r2, #8
 8015514:	f815 9006 	ldrb.w	r9, [r5, r6]
 8015518:	fa1f fa82 	uxth.w	sl, r2
 801551c:	43d2      	mvns	r2, r2
 801551e:	fb1b fb0a 	smulbb	fp, fp, sl
 8015522:	b2d2      	uxtb	r2, r2
 8015524:	fb09 b902 	mla	r9, r9, r2, fp
 8015528:	fa1f f989 	uxth.w	r9, r9
 801552c:	f109 0b01 	add.w	fp, r9, #1
 8015530:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 8015534:	f3c7 2b07 	ubfx	fp, r7, #8, #8
 8015538:	f3c7 4707 	ubfx	r7, r7, #16, #8
 801553c:	fb1b fb0a 	smulbb	fp, fp, sl
 8015540:	ea4f 2929 	mov.w	r9, r9, asr #8
 8015544:	fb17 fa0a 	smulbb	sl, r7, sl
 8015548:	f805 9006 	strb.w	r9, [r5, r6]
 801554c:	442e      	add	r6, r5
 801554e:	78b7      	ldrb	r7, [r6, #2]
 8015550:	f896 9001 	ldrb.w	r9, [r6, #1]
 8015554:	fb07 aa02 	mla	sl, r7, r2, sl
 8015558:	fb09 b902 	mla	r9, r9, r2, fp
 801555c:	fa1f fa8a 	uxth.w	sl, sl
 8015560:	fa1f f989 	uxth.w	r9, r9
 8015564:	f10a 0701 	add.w	r7, sl, #1
 8015568:	f109 0b01 	add.w	fp, r9, #1
 801556c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8015570:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 8015574:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 8015578:	ea4f 2929 	mov.w	r9, r9, asr #8
 801557c:	f886 a002 	strb.w	sl, [r6, #2]
 8015580:	f886 9001 	strb.w	r9, [r6, #1]
 8015584:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015586:	4474      	add	r4, lr
 8015588:	f108 0801 	add.w	r8, r8, #1
 801558c:	4410      	add	r0, r2
 801558e:	e760      	b.n	8015452 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x158>
 8015590:	b005      	add	sp, #20
 8015592:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015596 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015596:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801559a:	b085      	sub	sp, #20
 801559c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80155a0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80155a2:	9203      	str	r2, [sp, #12]
 80155a4:	6868      	ldr	r0, [r5, #4]
 80155a6:	f8dd c058 	ldr.w	ip, [sp, #88]	; 0x58
 80155aa:	f8dd e044 	ldr.w	lr, [sp, #68]	; 0x44
 80155ae:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80155b2:	fb00 2404 	mla	r4, r0, r4, r2
 80155b6:	682a      	ldr	r2, [r5, #0]
 80155b8:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80155bc:	4414      	add	r4, r2
 80155be:	f8dc 2000 	ldr.w	r2, [ip]
 80155c2:	9201      	str	r2, [sp, #4]
 80155c4:	f8dc 2004 	ldr.w	r2, [ip, #4]
 80155c8:	3204      	adds	r2, #4
 80155ca:	9202      	str	r2, [sp, #8]
 80155cc:	2900      	cmp	r1, #0
 80155ce:	dc03      	bgt.n	80155d8 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 80155d0:	9a03      	ldr	r2, [sp, #12]
 80155d2:	2a00      	cmp	r2, #0
 80155d4:	f340 8137 	ble.w	8015846 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 80155d8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80155da:	f9bc 8008 	ldrsh.w	r8, [ip, #8]
 80155de:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80155e2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80155e4:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 80155e8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80155ec:	2b00      	cmp	r3, #0
 80155ee:	dd0d      	ble.n	801560c <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80155f0:	1405      	asrs	r5, r0, #16
 80155f2:	d405      	bmi.n	8015600 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 80155f4:	4545      	cmp	r5, r8
 80155f6:	da03      	bge.n	8015600 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 80155f8:	1415      	asrs	r5, r2, #16
 80155fa:	d401      	bmi.n	8015600 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 80155fc:	42bd      	cmp	r5, r7
 80155fe:	db06      	blt.n	801560e <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8015600:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8015602:	4470      	add	r0, lr
 8015604:	3b01      	subs	r3, #1
 8015606:	3403      	adds	r4, #3
 8015608:	442a      	add	r2, r5
 801560a:	e7ef      	b.n	80155ec <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801560c:	d070      	beq.n	80156f0 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15a>
 801560e:	1e5d      	subs	r5, r3, #1
 8015610:	fb0e 0605 	mla	r6, lr, r5, r0
 8015614:	1436      	asrs	r6, r6, #16
 8015616:	d462      	bmi.n	80156de <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 8015618:	4546      	cmp	r6, r8
 801561a:	da60      	bge.n	80156de <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 801561c:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801561e:	fb06 2505 	mla	r5, r6, r5, r2
 8015622:	142d      	asrs	r5, r5, #16
 8015624:	d45b      	bmi.n	80156de <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 8015626:	42bd      	cmp	r5, r7
 8015628:	da59      	bge.n	80156de <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 801562a:	1ce5      	adds	r5, r4, #3
 801562c:	469a      	mov	sl, r3
 801562e:	f1ba 0f00 	cmp.w	sl, #0
 8015632:	dd58      	ble.n	80156e6 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x150>
 8015634:	1416      	asrs	r6, r2, #16
 8015636:	f9bc 8008 	ldrsh.w	r8, [ip, #8]
 801563a:	1407      	asrs	r7, r0, #16
 801563c:	46b1      	mov	r9, r6
 801563e:	9e01      	ldr	r6, [sp, #4]
 8015640:	fb08 6609 	mla	r6, r8, r9, r6
 8015644:	5df6      	ldrb	r6, [r6, r7]
 8015646:	9f02      	ldr	r7, [sp, #8]
 8015648:	f857 6026 	ldr.w	r6, [r7, r6, lsl #2]
 801564c:	0e37      	lsrs	r7, r6, #24
 801564e:	2fff      	cmp	r7, #255	; 0xff
 8015650:	f000 80f0 	beq.w	8015834 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29e>
 8015654:	fa5f f887 	uxtb.w	r8, r7
 8015658:	b3d7      	cbz	r7, 80156d0 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 801565a:	fa1f f788 	uxth.w	r7, r8
 801565e:	ea6f 0808 	mvn.w	r8, r8
 8015662:	fa5f fb86 	uxtb.w	fp, r6
 8015666:	f815 9c03 	ldrb.w	r9, [r5, #-3]
 801566a:	fa5f f888 	uxtb.w	r8, r8
 801566e:	fb1b fb07 	smulbb	fp, fp, r7
 8015672:	fb09 b908 	mla	r9, r9, r8, fp
 8015676:	fa1f f989 	uxth.w	r9, r9
 801567a:	f109 0b01 	add.w	fp, r9, #1
 801567e:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 8015682:	f815 bc02 	ldrb.w	fp, [r5, #-2]
 8015686:	fb1b fb08 	smulbb	fp, fp, r8
 801568a:	ea4f 2929 	mov.w	r9, r9, asr #8
 801568e:	f805 9c03 	strb.w	r9, [r5, #-3]
 8015692:	f3c6 2907 	ubfx	r9, r6, #8, #8
 8015696:	f3c6 4607 	ubfx	r6, r6, #16, #8
 801569a:	fb09 b907 	mla	r9, r9, r7, fp
 801569e:	fa1f f989 	uxth.w	r9, r9
 80156a2:	f109 0b01 	add.w	fp, r9, #1
 80156a6:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 80156aa:	ea4f 2929 	mov.w	r9, r9, asr #8
 80156ae:	f805 9c02 	strb.w	r9, [r5, #-2]
 80156b2:	f815 9c01 	ldrb.w	r9, [r5, #-1]
 80156b6:	fb19 f808 	smulbb	r8, r9, r8
 80156ba:	fb06 8607 	mla	r6, r6, r7, r8
 80156be:	b2b6      	uxth	r6, r6
 80156c0:	f106 0801 	add.w	r8, r6, #1
 80156c4:	eb08 2816 	add.w	r8, r8, r6, lsr #8
 80156c8:	ea4f 2828 	mov.w	r8, r8, asr #8
 80156cc:	f805 8c01 	strb.w	r8, [r5, #-1]
 80156d0:	9e12      	ldr	r6, [sp, #72]	; 0x48
 80156d2:	4470      	add	r0, lr
 80156d4:	3503      	adds	r5, #3
 80156d6:	f10a 3aff 	add.w	sl, sl, #4294967295
 80156da:	4432      	add	r2, r6
 80156dc:	e7a7      	b.n	801562e <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80156de:	2600      	movs	r6, #0
 80156e0:	1b9d      	subs	r5, r3, r6
 80156e2:	2d00      	cmp	r5, #0
 80156e4:	dc3b      	bgt.n	801575e <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80156e6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80156ea:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80156ee:	441c      	add	r4, r3
 80156f0:	2900      	cmp	r1, #0
 80156f2:	f340 80a8 	ble.w	8015846 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 80156f6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80156fa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80156fc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015700:	3901      	subs	r1, #1
 8015702:	eeb0 6a62 	vmov.f32	s12, s5
 8015706:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801570a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801570e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015712:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8015716:	eeb0 6a43 	vmov.f32	s12, s6
 801571a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801571e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8015722:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015726:	ee61 7a27 	vmul.f32	s15, s2, s15
 801572a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801572e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015732:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015736:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801573a:	ee12 2a90 	vmov	r2, s5
 801573e:	eef0 2a47 	vmov.f32	s5, s14
 8015742:	fb92 fef3 	sdiv	lr, r2, r3
 8015746:	ee13 2a10 	vmov	r2, s6
 801574a:	eeb0 3a67 	vmov.f32	s6, s15
 801574e:	fb92 f3f3 	sdiv	r3, r2, r3
 8015752:	9a03      	ldr	r2, [sp, #12]
 8015754:	9312      	str	r3, [sp, #72]	; 0x48
 8015756:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015758:	bf08      	it	eq
 801575a:	4613      	moveq	r3, r2
 801575c:	e736      	b.n	80155cc <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801575e:	ea5f 4820 	movs.w	r8, r0, asr #16
 8015762:	d457      	bmi.n	8015814 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8015764:	f8dc 7008 	ldr.w	r7, [ip, #8]
 8015768:	4547      	cmp	r7, r8
 801576a:	dd53      	ble.n	8015814 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 801576c:	ea5f 4922 	movs.w	r9, r2, asr #16
 8015770:	d450      	bmi.n	8015814 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8015772:	f8dc 500c 	ldr.w	r5, [ip, #12]
 8015776:	454d      	cmp	r5, r9
 8015778:	dd4c      	ble.n	8015814 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 801577a:	9d01      	ldr	r5, [sp, #4]
 801577c:	b23f      	sxth	r7, r7
 801577e:	fb09 5707 	mla	r7, r9, r7, r5
 8015782:	f817 5008 	ldrb.w	r5, [r7, r8]
 8015786:	9f02      	ldr	r7, [sp, #8]
 8015788:	f857 5025 	ldr.w	r5, [r7, r5, lsl #2]
 801578c:	0e2f      	lsrs	r7, r5, #24
 801578e:	2fff      	cmp	r7, #255	; 0xff
 8015790:	d045      	beq.n	801581e <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8015792:	fa5f f987 	uxtb.w	r9, r7
 8015796:	b3ef      	cbz	r7, 8015814 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8015798:	fa1f f889 	uxth.w	r8, r9
 801579c:	ea6f 0909 	mvn.w	r9, r9
 80157a0:	eb06 0746 	add.w	r7, r6, r6, lsl #1
 80157a4:	fa5f fb85 	uxtb.w	fp, r5
 80157a8:	f814 a007 	ldrb.w	sl, [r4, r7]
 80157ac:	fa5f f989 	uxtb.w	r9, r9
 80157b0:	fb1b fb08 	smulbb	fp, fp, r8
 80157b4:	fb0a ba09 	mla	sl, sl, r9, fp
 80157b8:	fa1f fa8a 	uxth.w	sl, sl
 80157bc:	f10a 0b01 	add.w	fp, sl, #1
 80157c0:	eb0b 2a1a 	add.w	sl, fp, sl, lsr #8
 80157c4:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 80157c8:	f804 a007 	strb.w	sl, [r4, r7]
 80157cc:	4427      	add	r7, r4
 80157ce:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80157d2:	f3c5 4507 	ubfx	r5, r5, #16, #8
 80157d6:	f897 b001 	ldrb.w	fp, [r7, #1]
 80157da:	fb1b fb09 	smulbb	fp, fp, r9
 80157de:	fb0a ba08 	mla	sl, sl, r8, fp
 80157e2:	fa1f fa8a 	uxth.w	sl, sl
 80157e6:	f10a 0b01 	add.w	fp, sl, #1
 80157ea:	eb0b 2a1a 	add.w	sl, fp, sl, lsr #8
 80157ee:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 80157f2:	f887 a001 	strb.w	sl, [r7, #1]
 80157f6:	f897 a002 	ldrb.w	sl, [r7, #2]
 80157fa:	fb1a f909 	smulbb	r9, sl, r9
 80157fe:	fb05 9508 	mla	r5, r5, r8, r9
 8015802:	b2ad      	uxth	r5, r5
 8015804:	f105 0901 	add.w	r9, r5, #1
 8015808:	eb09 2915 	add.w	r9, r9, r5, lsr #8
 801580c:	ea4f 2929 	mov.w	r9, r9, asr #8
 8015810:	f887 9002 	strb.w	r9, [r7, #2]
 8015814:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8015816:	4470      	add	r0, lr
 8015818:	3601      	adds	r6, #1
 801581a:	442a      	add	r2, r5
 801581c:	e760      	b.n	80156e0 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801581e:	eb06 0746 	add.w	r7, r6, r6, lsl #1
 8015822:	ea4f 2815 	mov.w	r8, r5, lsr #8
 8015826:	55e5      	strb	r5, [r4, r7]
 8015828:	4427      	add	r7, r4
 801582a:	0c2d      	lsrs	r5, r5, #16
 801582c:	f887 8001 	strb.w	r8, [r7, #1]
 8015830:	70bd      	strb	r5, [r7, #2]
 8015832:	e7ef      	b.n	8015814 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8015834:	0a37      	lsrs	r7, r6, #8
 8015836:	f805 6c03 	strb.w	r6, [r5, #-3]
 801583a:	0c36      	lsrs	r6, r6, #16
 801583c:	f805 7c02 	strb.w	r7, [r5, #-2]
 8015840:	f805 6c01 	strb.w	r6, [r5, #-1]
 8015844:	e744      	b.n	80156d0 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8015846:	b005      	add	sp, #20
 8015848:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801584c <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801584c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015850:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8015852:	9201      	str	r2, [sp, #4]
 8015854:	6870      	ldr	r0, [r6, #4]
 8015856:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 801585a:	f8dd c050 	ldr.w	ip, [sp, #80]	; 0x50
 801585e:	fa1f fe85 	uxth.w	lr, r5
 8015862:	43ed      	mvns	r5, r5
 8015864:	f8dc 8000 	ldr.w	r8, [ip]
 8015868:	b2ed      	uxtb	r5, r5
 801586a:	e9dd 2412 	ldrd	r2, r4, [sp, #72]	; 0x48
 801586e:	fb00 2404 	mla	r4, r0, r4, r2
 8015872:	6832      	ldr	r2, [r6, #0]
 8015874:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8015878:	4414      	add	r4, r2
 801587a:	2900      	cmp	r1, #0
 801587c:	dc03      	bgt.n	8015886 <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801587e:	9a01      	ldr	r2, [sp, #4]
 8015880:	2a00      	cmp	r2, #0
 8015882:	f340 810d 	ble.w	8015aa0 <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8015886:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8015888:	f9bc a008 	ldrsh.w	sl, [ip, #8]
 801588c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8015890:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8015892:	f9bc 900c 	ldrsh.w	r9, [ip, #12]
 8015896:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801589a:	2b00      	cmp	r3, #0
 801589c:	dd0e      	ble.n	80158bc <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801589e:	1406      	asrs	r6, r0, #16
 80158a0:	d405      	bmi.n	80158ae <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 80158a2:	4556      	cmp	r6, sl
 80158a4:	da03      	bge.n	80158ae <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 80158a6:	1416      	asrs	r6, r2, #16
 80158a8:	d401      	bmi.n	80158ae <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 80158aa:	454e      	cmp	r6, r9
 80158ac:	db07      	blt.n	80158be <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80158ae:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 80158b0:	3b01      	subs	r3, #1
 80158b2:	3403      	adds	r4, #3
 80158b4:	4430      	add	r0, r6
 80158b6:	9e10      	ldr	r6, [sp, #64]	; 0x40
 80158b8:	4432      	add	r2, r6
 80158ba:	e7ee      	b.n	801589a <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 80158bc:	d060      	beq.n	8015980 <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 80158be:	1e5e      	subs	r6, r3, #1
 80158c0:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80158c2:	fb07 0706 	mla	r7, r7, r6, r0
 80158c6:	143f      	asrs	r7, r7, #16
 80158c8:	d451      	bmi.n	801596e <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x122>
 80158ca:	4557      	cmp	r7, sl
 80158cc:	da4f      	bge.n	801596e <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x122>
 80158ce:	9f10      	ldr	r7, [sp, #64]	; 0x40
 80158d0:	fb07 2606 	mla	r6, r7, r6, r2
 80158d4:	1436      	asrs	r6, r6, #16
 80158d6:	d44a      	bmi.n	801596e <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x122>
 80158d8:	454e      	cmp	r6, r9
 80158da:	da48      	bge.n	801596e <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x122>
 80158dc:	1ce6      	adds	r6, r4, #3
 80158de:	4699      	mov	r9, r3
 80158e0:	f1b9 0f00 	cmp.w	r9, #0
 80158e4:	f106 0603 	add.w	r6, r6, #3
 80158e8:	dd45      	ble.n	8015976 <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 80158ea:	f9bc b008 	ldrsh.w	fp, [ip, #8]
 80158ee:	ea4f 4a20 	mov.w	sl, r0, asr #16
 80158f2:	1417      	asrs	r7, r2, #16
 80158f4:	f109 39ff 	add.w	r9, r9, #4294967295
 80158f8:	fb0b a707 	mla	r7, fp, r7, sl
 80158fc:	f816 bc06 	ldrb.w	fp, [r6, #-6]
 8015900:	fb1b fb05 	smulbb	fp, fp, r5
 8015904:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8015908:	eb08 0a07 	add.w	sl, r8, r7
 801590c:	f818 7007 	ldrb.w	r7, [r8, r7]
 8015910:	fb07 b70e 	mla	r7, r7, lr, fp
 8015914:	b2bf      	uxth	r7, r7
 8015916:	f107 0b01 	add.w	fp, r7, #1
 801591a:	eb0b 2717 	add.w	r7, fp, r7, lsr #8
 801591e:	f816 bc05 	ldrb.w	fp, [r6, #-5]
 8015922:	fb1b fb05 	smulbb	fp, fp, r5
 8015926:	123f      	asrs	r7, r7, #8
 8015928:	f806 7c06 	strb.w	r7, [r6, #-6]
 801592c:	f89a 7001 	ldrb.w	r7, [sl, #1]
 8015930:	fb07 b70e 	mla	r7, r7, lr, fp
 8015934:	b2bf      	uxth	r7, r7
 8015936:	f107 0b01 	add.w	fp, r7, #1
 801593a:	eb0b 2717 	add.w	r7, fp, r7, lsr #8
 801593e:	123f      	asrs	r7, r7, #8
 8015940:	f806 7c05 	strb.w	r7, [r6, #-5]
 8015944:	f89a 7002 	ldrb.w	r7, [sl, #2]
 8015948:	f816 ac04 	ldrb.w	sl, [r6, #-4]
 801594c:	fb1a fa05 	smulbb	sl, sl, r5
 8015950:	fb07 a70e 	mla	r7, r7, lr, sl
 8015954:	b2bf      	uxth	r7, r7
 8015956:	f107 0a01 	add.w	sl, r7, #1
 801595a:	eb0a 2717 	add.w	r7, sl, r7, lsr #8
 801595e:	123f      	asrs	r7, r7, #8
 8015960:	f806 7c04 	strb.w	r7, [r6, #-4]
 8015964:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8015966:	4438      	add	r0, r7
 8015968:	9f10      	ldr	r7, [sp, #64]	; 0x40
 801596a:	443a      	add	r2, r7
 801596c:	e7b8      	b.n	80158e0 <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801596e:	2700      	movs	r7, #0
 8015970:	1bde      	subs	r6, r3, r7
 8015972:	2e00      	cmp	r6, #0
 8015974:	dc3f      	bgt.n	80159f6 <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8015976:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801597a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801597e:	441c      	add	r4, r3
 8015980:	2900      	cmp	r1, #0
 8015982:	f340 808d 	ble.w	8015aa0 <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8015986:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801598a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801598c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015990:	3901      	subs	r1, #1
 8015992:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015996:	eef0 6a62 	vmov.f32	s13, s5
 801599a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801599e:	ee31 1a05 	vadd.f32	s2, s2, s10
 80159a2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80159a6:	edcd 6a0d 	vstr	s13, [sp, #52]	; 0x34
 80159aa:	eef0 6a43 	vmov.f32	s13, s6
 80159ae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80159b2:	edcd 6a0e 	vstr	s13, [sp, #56]	; 0x38
 80159b6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80159ba:	ee61 7a27 	vmul.f32	s15, s2, s15
 80159be:	ee77 2a62 	vsub.f32	s5, s14, s5
 80159c2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80159c6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80159ca:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80159ce:	ee12 2a90 	vmov	r2, s5
 80159d2:	eef0 2a47 	vmov.f32	s5, s14
 80159d6:	fb92 f3f3 	sdiv	r3, r2, r3
 80159da:	ee13 2a10 	vmov	r2, s6
 80159de:	930f      	str	r3, [sp, #60]	; 0x3c
 80159e0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80159e2:	eeb0 3a67 	vmov.f32	s6, s15
 80159e6:	fb92 f3f3 	sdiv	r3, r2, r3
 80159ea:	9a01      	ldr	r2, [sp, #4]
 80159ec:	9310      	str	r3, [sp, #64]	; 0x40
 80159ee:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80159f0:	bf08      	it	eq
 80159f2:	4613      	moveq	r3, r2
 80159f4:	e741      	b.n	801587a <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 80159f6:	ea5f 4920 	movs.w	r9, r0, asr #16
 80159fa:	d44b      	bmi.n	8015a94 <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 80159fc:	f8dc b008 	ldr.w	fp, [ip, #8]
 8015a00:	45cb      	cmp	fp, r9
 8015a02:	dd47      	ble.n	8015a94 <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8015a04:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8015a08:	d444      	bmi.n	8015a94 <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8015a0a:	f8dc 600c 	ldr.w	r6, [ip, #12]
 8015a0e:	4556      	cmp	r6, sl
 8015a10:	dd40      	ble.n	8015a94 <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8015a12:	fa0f f68b 	sxth.w	r6, fp
 8015a16:	fb0a 9906 	mla	r9, sl, r6, r9
 8015a1a:	eb07 0647 	add.w	r6, r7, r7, lsl #1
 8015a1e:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 8015a22:	f814 b006 	ldrb.w	fp, [r4, r6]
 8015a26:	fb1b fb05 	smulbb	fp, fp, r5
 8015a2a:	eb08 0a09 	add.w	sl, r8, r9
 8015a2e:	f818 9009 	ldrb.w	r9, [r8, r9]
 8015a32:	fb09 b90e 	mla	r9, r9, lr, fp
 8015a36:	fa1f f989 	uxth.w	r9, r9
 8015a3a:	f109 0b01 	add.w	fp, r9, #1
 8015a3e:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 8015a42:	ea4f 2929 	mov.w	r9, r9, asr #8
 8015a46:	f804 9006 	strb.w	r9, [r4, r6]
 8015a4a:	4426      	add	r6, r4
 8015a4c:	f89a 9001 	ldrb.w	r9, [sl, #1]
 8015a50:	f896 b001 	ldrb.w	fp, [r6, #1]
 8015a54:	fb1b fb05 	smulbb	fp, fp, r5
 8015a58:	fb09 b90e 	mla	r9, r9, lr, fp
 8015a5c:	fa1f f989 	uxth.w	r9, r9
 8015a60:	f109 0b01 	add.w	fp, r9, #1
 8015a64:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 8015a68:	ea4f 2929 	mov.w	r9, r9, asr #8
 8015a6c:	f886 9001 	strb.w	r9, [r6, #1]
 8015a70:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8015a74:	f896 a002 	ldrb.w	sl, [r6, #2]
 8015a78:	fb1a fa05 	smulbb	sl, sl, r5
 8015a7c:	fb09 a90e 	mla	r9, r9, lr, sl
 8015a80:	fa1f f989 	uxth.w	r9, r9
 8015a84:	f109 0a01 	add.w	sl, r9, #1
 8015a88:	eb0a 2919 	add.w	r9, sl, r9, lsr #8
 8015a8c:	ea4f 2929 	mov.w	r9, r9, asr #8
 8015a90:	f886 9002 	strb.w	r9, [r6, #2]
 8015a94:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8015a96:	3701      	adds	r7, #1
 8015a98:	4430      	add	r0, r6
 8015a9a:	9e10      	ldr	r6, [sp, #64]	; 0x40
 8015a9c:	4432      	add	r2, r6
 8015a9e:	e767      	b.n	8015970 <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 8015aa0:	b003      	add	sp, #12
 8015aa2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015aa6 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015aa6:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015aaa:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8015aac:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015ab0:	9201      	str	r2, [sp, #4]
 8015ab2:	6868      	ldr	r0, [r5, #4]
 8015ab4:	9f14      	ldr	r7, [sp, #80]	; 0x50
 8015ab6:	e9dd 2412 	ldrd	r2, r4, [sp, #72]	; 0x48
 8015aba:	e9dd ec0f 	ldrd	lr, ip, [sp, #60]	; 0x3c
 8015abe:	fb00 2404 	mla	r4, r0, r4, r2
 8015ac2:	682a      	ldr	r2, [r5, #0]
 8015ac4:	f8d7 8000 	ldr.w	r8, [r7]
 8015ac8:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8015acc:	4414      	add	r4, r2
 8015ace:	2900      	cmp	r1, #0
 8015ad0:	dc03      	bgt.n	8015ada <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8015ad2:	9a01      	ldr	r2, [sp, #4]
 8015ad4:	2a00      	cmp	r2, #0
 8015ad6:	f340 80af 	ble.w	8015c38 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8015ada:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8015adc:	f9b7 a008 	ldrsh.w	sl, [r7, #8]
 8015ae0:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8015ae4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8015ae6:	f9b7 900c 	ldrsh.w	r9, [r7, #12]
 8015aea:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015aee:	2b00      	cmp	r3, #0
 8015af0:	dd0c      	ble.n	8015b0c <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015af2:	1405      	asrs	r5, r0, #16
 8015af4:	d405      	bmi.n	8015b02 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8015af6:	4555      	cmp	r5, sl
 8015af8:	da03      	bge.n	8015b02 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8015afa:	1415      	asrs	r5, r2, #16
 8015afc:	d401      	bmi.n	8015b02 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8015afe:	454d      	cmp	r5, r9
 8015b00:	db05      	blt.n	8015b0e <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015b02:	4470      	add	r0, lr
 8015b04:	4462      	add	r2, ip
 8015b06:	3b01      	subs	r3, #1
 8015b08:	3403      	adds	r4, #3
 8015b0a:	e7f0      	b.n	8015aee <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8015b0c:	d038      	beq.n	8015b80 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xda>
 8015b0e:	1e5d      	subs	r5, r3, #1
 8015b10:	fb0e 0605 	mla	r6, lr, r5, r0
 8015b14:	1436      	asrs	r6, r6, #16
 8015b16:	d42a      	bmi.n	8015b6e <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc8>
 8015b18:	4556      	cmp	r6, sl
 8015b1a:	da28      	bge.n	8015b6e <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc8>
 8015b1c:	fb0c 2505 	mla	r5, ip, r5, r2
 8015b20:	142d      	asrs	r5, r5, #16
 8015b22:	d424      	bmi.n	8015b6e <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc8>
 8015b24:	454d      	cmp	r5, r9
 8015b26:	da22      	bge.n	8015b6e <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc8>
 8015b28:	1ce6      	adds	r6, r4, #3
 8015b2a:	4699      	mov	r9, r3
 8015b2c:	f1b9 0f00 	cmp.w	r9, #0
 8015b30:	f106 0603 	add.w	r6, r6, #3
 8015b34:	dd1f      	ble.n	8015b76 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xd0>
 8015b36:	f9b7 b008 	ldrsh.w	fp, [r7, #8]
 8015b3a:	ea4f 4a20 	mov.w	sl, r0, asr #16
 8015b3e:	1415      	asrs	r5, r2, #16
 8015b40:	4470      	add	r0, lr
 8015b42:	4462      	add	r2, ip
 8015b44:	f109 39ff 	add.w	r9, r9, #4294967295
 8015b48:	fb0b a505 	mla	r5, fp, r5, sl
 8015b4c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8015b50:	eb08 0a05 	add.w	sl, r8, r5
 8015b54:	f818 5005 	ldrb.w	r5, [r8, r5]
 8015b58:	f806 5c06 	strb.w	r5, [r6, #-6]
 8015b5c:	f89a 5001 	ldrb.w	r5, [sl, #1]
 8015b60:	f806 5c05 	strb.w	r5, [r6, #-5]
 8015b64:	f89a 5002 	ldrb.w	r5, [sl, #2]
 8015b68:	f806 5c04 	strb.w	r5, [r6, #-4]
 8015b6c:	e7de      	b.n	8015b2c <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8015b6e:	2600      	movs	r6, #0
 8015b70:	1b9d      	subs	r5, r3, r6
 8015b72:	2d00      	cmp	r5, #0
 8015b74:	dc38      	bgt.n	8015be8 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x142>
 8015b76:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015b7a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8015b7e:	441c      	add	r4, r3
 8015b80:	2900      	cmp	r1, #0
 8015b82:	dd59      	ble.n	8015c38 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8015b84:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015b88:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015b8a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015b8e:	3901      	subs	r1, #1
 8015b90:	eeb0 6a62 	vmov.f32	s12, s5
 8015b94:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015b98:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015b9c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015ba0:	ed8d 6a0d 	vstr	s12, [sp, #52]	; 0x34
 8015ba4:	eeb0 6a43 	vmov.f32	s12, s6
 8015ba8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015bac:	ed8d 6a0e 	vstr	s12, [sp, #56]	; 0x38
 8015bb0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015bb4:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015bb8:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015bbc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015bc0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015bc4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015bc8:	ee12 2a90 	vmov	r2, s5
 8015bcc:	eef0 2a47 	vmov.f32	s5, s14
 8015bd0:	fb92 fef3 	sdiv	lr, r2, r3
 8015bd4:	ee13 2a10 	vmov	r2, s6
 8015bd8:	eeb0 3a67 	vmov.f32	s6, s15
 8015bdc:	fb92 fcf3 	sdiv	ip, r2, r3
 8015be0:	9a01      	ldr	r2, [sp, #4]
 8015be2:	bf08      	it	eq
 8015be4:	4613      	moveq	r3, r2
 8015be6:	e772      	b.n	8015ace <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28>
 8015be8:	ea5f 4920 	movs.w	r9, r0, asr #16
 8015bec:	d420      	bmi.n	8015c30 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8015bee:	f8d7 b008 	ldr.w	fp, [r7, #8]
 8015bf2:	45cb      	cmp	fp, r9
 8015bf4:	dd1c      	ble.n	8015c30 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8015bf6:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8015bfa:	d419      	bmi.n	8015c30 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8015bfc:	68fd      	ldr	r5, [r7, #12]
 8015bfe:	4555      	cmp	r5, sl
 8015c00:	dd16      	ble.n	8015c30 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8015c02:	fa0f f58b 	sxth.w	r5, fp
 8015c06:	fb0a 9505 	mla	r5, sl, r5, r9
 8015c0a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8015c0e:	f818 9005 	ldrb.w	r9, [r8, r5]
 8015c12:	eb08 0b05 	add.w	fp, r8, r5
 8015c16:	eb06 0546 	add.w	r5, r6, r6, lsl #1
 8015c1a:	f804 9005 	strb.w	r9, [r4, r5]
 8015c1e:	4425      	add	r5, r4
 8015c20:	f89b 9001 	ldrb.w	r9, [fp, #1]
 8015c24:	f885 9001 	strb.w	r9, [r5, #1]
 8015c28:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8015c2c:	f885 9002 	strb.w	r9, [r5, #2]
 8015c30:	4470      	add	r0, lr
 8015c32:	4462      	add	r2, ip
 8015c34:	3601      	adds	r6, #1
 8015c36:	e79b      	b.n	8015b70 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xca>
 8015c38:	b003      	add	sp, #12
 8015c3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015c3e <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015c3e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015c42:	b085      	sub	sp, #20
 8015c44:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015c48:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015c4a:	9202      	str	r2, [sp, #8]
 8015c4c:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8015c50:	6860      	ldr	r0, [r4, #4]
 8015c52:	9203      	str	r2, [sp, #12]
 8015c54:	f8dd c058 	ldr.w	ip, [sp, #88]	; 0x58
 8015c58:	f8dd e044 	ldr.w	lr, [sp, #68]	; 0x44
 8015c5c:	e9dd 2514 	ldrd	r2, r5, [sp, #80]	; 0x50
 8015c60:	fb00 2505 	mla	r5, r0, r5, r2
 8015c64:	6822      	ldr	r2, [r4, #0]
 8015c66:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8015c6a:	4415      	add	r5, r2
 8015c6c:	f8dc 2000 	ldr.w	r2, [ip]
 8015c70:	9201      	str	r2, [sp, #4]
 8015c72:	2900      	cmp	r1, #0
 8015c74:	dc03      	bgt.n	8015c7e <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8015c76:	9a02      	ldr	r2, [sp, #8]
 8015c78:	2a00      	cmp	r2, #0
 8015c7a:	f340 8122 	ble.w	8015ec2 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8015c7e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015c80:	f9bc 8008 	ldrsh.w	r8, [ip, #8]
 8015c84:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 8015c88:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015c8a:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8015c8e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8015c92:	2b00      	cmp	r3, #0
 8015c94:	dd0d      	ble.n	8015cb2 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8015c96:	1422      	asrs	r2, r4, #16
 8015c98:	d405      	bmi.n	8015ca6 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015c9a:	4542      	cmp	r2, r8
 8015c9c:	da03      	bge.n	8015ca6 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015c9e:	1402      	asrs	r2, r0, #16
 8015ca0:	d401      	bmi.n	8015ca6 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015ca2:	42ba      	cmp	r2, r7
 8015ca4:	db06      	blt.n	8015cb4 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015ca6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015ca8:	4474      	add	r4, lr
 8015caa:	3b01      	subs	r3, #1
 8015cac:	3503      	adds	r5, #3
 8015cae:	4410      	add	r0, r2
 8015cb0:	e7ef      	b.n	8015c92 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8015cb2:	d072      	beq.n	8015d9a <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8015cb4:	1e5a      	subs	r2, r3, #1
 8015cb6:	fb0e 4602 	mla	r6, lr, r2, r4
 8015cba:	1436      	asrs	r6, r6, #16
 8015cbc:	d462      	bmi.n	8015d84 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8015cbe:	4546      	cmp	r6, r8
 8015cc0:	da60      	bge.n	8015d84 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8015cc2:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8015cc4:	fb06 0202 	mla	r2, r6, r2, r0
 8015cc8:	1412      	asrs	r2, r2, #16
 8015cca:	d45b      	bmi.n	8015d84 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8015ccc:	42ba      	cmp	r2, r7
 8015cce:	da59      	bge.n	8015d84 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8015cd0:	1cef      	adds	r7, r5, #3
 8015cd2:	4699      	mov	r9, r3
 8015cd4:	f1b9 0f00 	cmp.w	r9, #0
 8015cd8:	dd5a      	ble.n	8015d90 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015cda:	f9bc 8008 	ldrsh.w	r8, [ip, #8]
 8015cde:	1426      	asrs	r6, r4, #16
 8015ce0:	1402      	asrs	r2, r0, #16
 8015ce2:	fb08 6202 	mla	r2, r8, r2, r6
 8015ce6:	9e01      	ldr	r6, [sp, #4]
 8015ce8:	f856 6022 	ldr.w	r6, [r6, r2, lsl #2]
 8015cec:	ea5f 6816 	movs.w	r8, r6, lsr #24
 8015cf0:	d041      	beq.n	8015d76 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8015cf2:	9a03      	ldr	r2, [sp, #12]
 8015cf4:	fa5f fb86 	uxtb.w	fp, r6
 8015cf8:	fb02 f808 	mul.w	r8, r2, r8
 8015cfc:	f108 0201 	add.w	r2, r8, #1
 8015d00:	eb02 2228 	add.w	r2, r2, r8, asr #8
 8015d04:	f817 8c03 	ldrb.w	r8, [r7, #-3]
 8015d08:	1212      	asrs	r2, r2, #8
 8015d0a:	fa1f fa82 	uxth.w	sl, r2
 8015d0e:	43d2      	mvns	r2, r2
 8015d10:	fb1b fb0a 	smulbb	fp, fp, sl
 8015d14:	b2d2      	uxtb	r2, r2
 8015d16:	fb08 b802 	mla	r8, r8, r2, fp
 8015d1a:	fa1f f888 	uxth.w	r8, r8
 8015d1e:	f108 0b01 	add.w	fp, r8, #1
 8015d22:	eb0b 2818 	add.w	r8, fp, r8, lsr #8
 8015d26:	f3c6 2b07 	ubfx	fp, r6, #8, #8
 8015d2a:	f3c6 4607 	ubfx	r6, r6, #16, #8
 8015d2e:	fb1b fb0a 	smulbb	fp, fp, sl
 8015d32:	ea4f 2828 	mov.w	r8, r8, asr #8
 8015d36:	fb16 fa0a 	smulbb	sl, r6, sl
 8015d3a:	f817 6c01 	ldrb.w	r6, [r7, #-1]
 8015d3e:	f807 8c03 	strb.w	r8, [r7, #-3]
 8015d42:	f817 8c02 	ldrb.w	r8, [r7, #-2]
 8015d46:	fb06 aa02 	mla	sl, r6, r2, sl
 8015d4a:	fb08 b802 	mla	r8, r8, r2, fp
 8015d4e:	fa1f fa8a 	uxth.w	sl, sl
 8015d52:	fa1f f888 	uxth.w	r8, r8
 8015d56:	f10a 0601 	add.w	r6, sl, #1
 8015d5a:	f108 0b01 	add.w	fp, r8, #1
 8015d5e:	eb06 2a1a 	add.w	sl, r6, sl, lsr #8
 8015d62:	eb0b 2818 	add.w	r8, fp, r8, lsr #8
 8015d66:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 8015d6a:	ea4f 2828 	mov.w	r8, r8, asr #8
 8015d6e:	f807 ac01 	strb.w	sl, [r7, #-1]
 8015d72:	f807 8c02 	strb.w	r8, [r7, #-2]
 8015d76:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015d78:	4474      	add	r4, lr
 8015d7a:	3703      	adds	r7, #3
 8015d7c:	f109 39ff 	add.w	r9, r9, #4294967295
 8015d80:	4410      	add	r0, r2
 8015d82:	e7a7      	b.n	8015cd4 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015d84:	f04f 0800 	mov.w	r8, #0
 8015d88:	eba3 0208 	sub.w	r2, r3, r8
 8015d8c:	2a00      	cmp	r2, #0
 8015d8e:	dc3b      	bgt.n	8015e08 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8015d90:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015d94:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8015d98:	441d      	add	r5, r3
 8015d9a:	2900      	cmp	r1, #0
 8015d9c:	f340 8091 	ble.w	8015ec2 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8015da0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015da4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015da6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015daa:	3901      	subs	r1, #1
 8015dac:	eeb0 6a62 	vmov.f32	s12, s5
 8015db0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015db4:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015db8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015dbc:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8015dc0:	eeb0 6a43 	vmov.f32	s12, s6
 8015dc4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015dc8:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8015dcc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015dd0:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015dd4:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015dd8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015ddc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015de0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015de4:	ee12 2a90 	vmov	r2, s5
 8015de8:	eef0 2a47 	vmov.f32	s5, s14
 8015dec:	fb92 fef3 	sdiv	lr, r2, r3
 8015df0:	ee13 2a10 	vmov	r2, s6
 8015df4:	eeb0 3a67 	vmov.f32	s6, s15
 8015df8:	fb92 f3f3 	sdiv	r3, r2, r3
 8015dfc:	9a02      	ldr	r2, [sp, #8]
 8015dfe:	9312      	str	r3, [sp, #72]	; 0x48
 8015e00:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015e02:	bf08      	it	eq
 8015e04:	4613      	moveq	r3, r2
 8015e06:	e734      	b.n	8015c72 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8015e08:	1427      	asrs	r7, r4, #16
 8015e0a:	d454      	bmi.n	8015eb6 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 8015e0c:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8015e10:	42be      	cmp	r6, r7
 8015e12:	dd50      	ble.n	8015eb6 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 8015e14:	ea5f 4920 	movs.w	r9, r0, asr #16
 8015e18:	d44d      	bmi.n	8015eb6 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 8015e1a:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8015e1e:	454a      	cmp	r2, r9
 8015e20:	dd49      	ble.n	8015eb6 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 8015e22:	b236      	sxth	r6, r6
 8015e24:	9a01      	ldr	r2, [sp, #4]
 8015e26:	fb09 7606 	mla	r6, r9, r6, r7
 8015e2a:	f852 7026 	ldr.w	r7, [r2, r6, lsl #2]
 8015e2e:	0e3a      	lsrs	r2, r7, #24
 8015e30:	d041      	beq.n	8015eb6 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 8015e32:	9e03      	ldr	r6, [sp, #12]
 8015e34:	fa5f fb87 	uxtb.w	fp, r7
 8015e38:	4372      	muls	r2, r6
 8015e3a:	1c56      	adds	r6, r2, #1
 8015e3c:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8015e40:	eb08 0648 	add.w	r6, r8, r8, lsl #1
 8015e44:	1212      	asrs	r2, r2, #8
 8015e46:	f815 9006 	ldrb.w	r9, [r5, r6]
 8015e4a:	fa1f fa82 	uxth.w	sl, r2
 8015e4e:	43d2      	mvns	r2, r2
 8015e50:	fb1b fb0a 	smulbb	fp, fp, sl
 8015e54:	b2d2      	uxtb	r2, r2
 8015e56:	fb09 b902 	mla	r9, r9, r2, fp
 8015e5a:	fa1f f989 	uxth.w	r9, r9
 8015e5e:	f109 0b01 	add.w	fp, r9, #1
 8015e62:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 8015e66:	f3c7 2b07 	ubfx	fp, r7, #8, #8
 8015e6a:	f3c7 4707 	ubfx	r7, r7, #16, #8
 8015e6e:	fb1b fb0a 	smulbb	fp, fp, sl
 8015e72:	ea4f 2929 	mov.w	r9, r9, asr #8
 8015e76:	fb17 fa0a 	smulbb	sl, r7, sl
 8015e7a:	f805 9006 	strb.w	r9, [r5, r6]
 8015e7e:	442e      	add	r6, r5
 8015e80:	78b7      	ldrb	r7, [r6, #2]
 8015e82:	f896 9001 	ldrb.w	r9, [r6, #1]
 8015e86:	fb07 aa02 	mla	sl, r7, r2, sl
 8015e8a:	fb09 b902 	mla	r9, r9, r2, fp
 8015e8e:	fa1f fa8a 	uxth.w	sl, sl
 8015e92:	fa1f f989 	uxth.w	r9, r9
 8015e96:	f10a 0701 	add.w	r7, sl, #1
 8015e9a:	f109 0b01 	add.w	fp, r9, #1
 8015e9e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8015ea2:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 8015ea6:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 8015eaa:	ea4f 2929 	mov.w	r9, r9, asr #8
 8015eae:	f886 a002 	strb.w	sl, [r6, #2]
 8015eb2:	f886 9001 	strb.w	r9, [r6, #1]
 8015eb6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015eb8:	4474      	add	r4, lr
 8015eba:	f108 0801 	add.w	r8, r8, #1
 8015ebe:	4410      	add	r0, r2
 8015ec0:	e762      	b.n	8015d88 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8015ec2:	b005      	add	sp, #20
 8015ec4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015ec8 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015ec8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015ecc:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8015ece:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015ed2:	9201      	str	r2, [sp, #4]
 8015ed4:	6860      	ldr	r0, [r4, #4]
 8015ed6:	f8dd c050 	ldr.w	ip, [sp, #80]	; 0x50
 8015eda:	e9dd 2512 	ldrd	r2, r5, [sp, #72]	; 0x48
 8015ede:	fb00 2505 	mla	r5, r0, r5, r2
 8015ee2:	6822      	ldr	r2, [r4, #0]
 8015ee4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8015ee8:	4415      	add	r5, r2
 8015eea:	f8dc 2000 	ldr.w	r2, [ip]
 8015eee:	9200      	str	r2, [sp, #0]
 8015ef0:	2900      	cmp	r1, #0
 8015ef2:	dc03      	bgt.n	8015efc <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8015ef4:	9a01      	ldr	r2, [sp, #4]
 8015ef6:	2a00      	cmp	r2, #0
 8015ef8:	f340 812b 	ble.w	8016152 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 8015efc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8015efe:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8015f02:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 8015f06:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8015f08:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8015f0c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8015f10:	2b00      	cmp	r3, #0
 8015f12:	dd0e      	ble.n	8015f32 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8015f14:	1422      	asrs	r2, r4, #16
 8015f16:	d405      	bmi.n	8015f24 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8015f18:	4572      	cmp	r2, lr
 8015f1a:	da03      	bge.n	8015f24 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8015f1c:	1402      	asrs	r2, r0, #16
 8015f1e:	d401      	bmi.n	8015f24 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8015f20:	42ba      	cmp	r2, r7
 8015f22:	db07      	blt.n	8015f34 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015f24:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015f26:	3b01      	subs	r3, #1
 8015f28:	3503      	adds	r5, #3
 8015f2a:	4414      	add	r4, r2
 8015f2c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015f2e:	4410      	add	r0, r2
 8015f30:	e7ee      	b.n	8015f10 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8015f32:	d06f      	beq.n	8016014 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8015f34:	1e5a      	subs	r2, r3, #1
 8015f36:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8015f38:	fb06 4602 	mla	r6, r6, r2, r4
 8015f3c:	1436      	asrs	r6, r6, #16
 8015f3e:	d45e      	bmi.n	8015ffe <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x136>
 8015f40:	4576      	cmp	r6, lr
 8015f42:	da5c      	bge.n	8015ffe <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x136>
 8015f44:	9e10      	ldr	r6, [sp, #64]	; 0x40
 8015f46:	fb06 0202 	mla	r2, r6, r2, r0
 8015f4a:	1412      	asrs	r2, r2, #16
 8015f4c:	d457      	bmi.n	8015ffe <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x136>
 8015f4e:	42ba      	cmp	r2, r7
 8015f50:	da55      	bge.n	8015ffe <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x136>
 8015f52:	1cee      	adds	r6, r5, #3
 8015f54:	469a      	mov	sl, r3
 8015f56:	f1ba 0f00 	cmp.w	sl, #0
 8015f5a:	dd56      	ble.n	801600a <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x142>
 8015f5c:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8015f60:	1427      	asrs	r7, r4, #16
 8015f62:	1402      	asrs	r2, r0, #16
 8015f64:	fb0e 7202 	mla	r2, lr, r2, r7
 8015f68:	9f00      	ldr	r7, [sp, #0]
 8015f6a:	f857 7022 	ldr.w	r7, [r7, r2, lsl #2]
 8015f6e:	ea5f 6e17 	movs.w	lr, r7, lsr #24
 8015f72:	d03c      	beq.n	8015fee <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8015f74:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8015f78:	f3c7 4b07 	ubfx	fp, r7, #16, #8
 8015f7c:	f3c7 2907 	ubfx	r9, r7, #8, #8
 8015f80:	fa5f f28e 	uxtb.w	r2, lr
 8015f84:	b2ff      	uxtb	r7, r7
 8015f86:	f000 80dd 	beq.w	8016144 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8015f8a:	fa1f f882 	uxth.w	r8, r2
 8015f8e:	43d2      	mvns	r2, r2
 8015f90:	f816 ec03 	ldrb.w	lr, [r6, #-3]
 8015f94:	fb17 f708 	smulbb	r7, r7, r8
 8015f98:	b2d2      	uxtb	r2, r2
 8015f9a:	fb19 f908 	smulbb	r9, r9, r8
 8015f9e:	fb0e 7702 	mla	r7, lr, r2, r7
 8015fa2:	fb1b f808 	smulbb	r8, fp, r8
 8015fa6:	b2bf      	uxth	r7, r7
 8015fa8:	f107 0e01 	add.w	lr, r7, #1
 8015fac:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 8015fb0:	123f      	asrs	r7, r7, #8
 8015fb2:	f806 7c03 	strb.w	r7, [r6, #-3]
 8015fb6:	f816 7c02 	ldrb.w	r7, [r6, #-2]
 8015fba:	fb07 9902 	mla	r9, r7, r2, r9
 8015fbe:	fa1f f989 	uxth.w	r9, r9
 8015fc2:	f109 0701 	add.w	r7, r9, #1
 8015fc6:	eb07 2919 	add.w	r9, r7, r9, lsr #8
 8015fca:	f816 7c01 	ldrb.w	r7, [r6, #-1]
 8015fce:	fb07 8802 	mla	r8, r7, r2, r8
 8015fd2:	ea4f 2929 	mov.w	r9, r9, asr #8
 8015fd6:	fa1f f888 	uxth.w	r8, r8
 8015fda:	f806 9c02 	strb.w	r9, [r6, #-2]
 8015fde:	f108 0201 	add.w	r2, r8, #1
 8015fe2:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8015fe6:	ea4f 2828 	mov.w	r8, r8, asr #8
 8015fea:	f806 8c01 	strb.w	r8, [r6, #-1]
 8015fee:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015ff0:	3603      	adds	r6, #3
 8015ff2:	f10a 3aff 	add.w	sl, sl, #4294967295
 8015ff6:	4414      	add	r4, r2
 8015ff8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015ffa:	4410      	add	r0, r2
 8015ffc:	e7ab      	b.n	8015f56 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8015ffe:	f04f 0e00 	mov.w	lr, #0
 8016002:	eba3 020e 	sub.w	r2, r3, lr
 8016006:	2a00      	cmp	r2, #0
 8016008:	dc3d      	bgt.n	8016086 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 801600a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801600e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8016012:	441d      	add	r5, r3
 8016014:	2900      	cmp	r1, #0
 8016016:	f340 809c 	ble.w	8016152 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 801601a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801601e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016020:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016024:	3901      	subs	r1, #1
 8016026:	eeb0 6a62 	vmov.f32	s12, s5
 801602a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801602e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016032:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016036:	ed8d 6a0d 	vstr	s12, [sp, #52]	; 0x34
 801603a:	eeb0 6a43 	vmov.f32	s12, s6
 801603e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016042:	ed8d 6a0e 	vstr	s12, [sp, #56]	; 0x38
 8016046:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801604a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801604e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016052:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016056:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801605a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801605e:	ee12 2a90 	vmov	r2, s5
 8016062:	eef0 2a47 	vmov.f32	s5, s14
 8016066:	fb92 f3f3 	sdiv	r3, r2, r3
 801606a:	ee13 2a10 	vmov	r2, s6
 801606e:	930f      	str	r3, [sp, #60]	; 0x3c
 8016070:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016072:	eeb0 3a67 	vmov.f32	s6, s15
 8016076:	fb92 f3f3 	sdiv	r3, r2, r3
 801607a:	9a01      	ldr	r2, [sp, #4]
 801607c:	9310      	str	r3, [sp, #64]	; 0x40
 801607e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016080:	bf08      	it	eq
 8016082:	4613      	moveq	r3, r2
 8016084:	e734      	b.n	8015ef0 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28>
 8016086:	1427      	asrs	r7, r4, #16
 8016088:	d44d      	bmi.n	8016126 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 801608a:	f8dc 6008 	ldr.w	r6, [ip, #8]
 801608e:	42be      	cmp	r6, r7
 8016090:	dd49      	ble.n	8016126 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 8016092:	ea5f 4820 	movs.w	r8, r0, asr #16
 8016096:	d446      	bmi.n	8016126 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 8016098:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801609c:	4542      	cmp	r2, r8
 801609e:	dd42      	ble.n	8016126 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 80160a0:	b236      	sxth	r6, r6
 80160a2:	9a00      	ldr	r2, [sp, #0]
 80160a4:	fb08 7606 	mla	r6, r8, r6, r7
 80160a8:	f852 7026 	ldr.w	r7, [r2, r6, lsl #2]
 80160ac:	0e3a      	lsrs	r2, r7, #24
 80160ae:	d03a      	beq.n	8016126 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 80160b0:	2aff      	cmp	r2, #255	; 0xff
 80160b2:	b2d6      	uxtb	r6, r2
 80160b4:	f3c7 4b07 	ubfx	fp, r7, #16, #8
 80160b8:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 80160bc:	ea4f 024e 	mov.w	r2, lr, lsl #1
 80160c0:	b2ff      	uxtb	r7, r7
 80160c2:	d037      	beq.n	8016134 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 80160c4:	fa1f f986 	uxth.w	r9, r6
 80160c8:	4472      	add	r2, lr
 80160ca:	43f6      	mvns	r6, r6
 80160cc:	f815 8002 	ldrb.w	r8, [r5, r2]
 80160d0:	fb17 f709 	smulbb	r7, r7, r9
 80160d4:	fb1a fa09 	smulbb	sl, sl, r9
 80160d8:	b2f6      	uxtb	r6, r6
 80160da:	fb1b f909 	smulbb	r9, fp, r9
 80160de:	fb08 7706 	mla	r7, r8, r6, r7
 80160e2:	b2bf      	uxth	r7, r7
 80160e4:	f107 0801 	add.w	r8, r7, #1
 80160e8:	eb08 2717 	add.w	r7, r8, r7, lsr #8
 80160ec:	123f      	asrs	r7, r7, #8
 80160ee:	54af      	strb	r7, [r5, r2]
 80160f0:	442a      	add	r2, r5
 80160f2:	7857      	ldrb	r7, [r2, #1]
 80160f4:	fb07 aa06 	mla	sl, r7, r6, sl
 80160f8:	fa1f fa8a 	uxth.w	sl, sl
 80160fc:	f10a 0701 	add.w	r7, sl, #1
 8016100:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8016104:	7897      	ldrb	r7, [r2, #2]
 8016106:	fb07 9906 	mla	r9, r7, r6, r9
 801610a:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 801610e:	fa1f f989 	uxth.w	r9, r9
 8016112:	f882 a001 	strb.w	sl, [r2, #1]
 8016116:	f109 0601 	add.w	r6, r9, #1
 801611a:	eb06 2919 	add.w	r9, r6, r9, lsr #8
 801611e:	ea4f 2929 	mov.w	r9, r9, asr #8
 8016122:	f882 9002 	strb.w	r9, [r2, #2]
 8016126:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8016128:	f10e 0e01 	add.w	lr, lr, #1
 801612c:	4414      	add	r4, r2
 801612e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8016130:	4410      	add	r0, r2
 8016132:	e766      	b.n	8016002 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8016134:	4472      	add	r2, lr
 8016136:	54af      	strb	r7, [r5, r2]
 8016138:	442a      	add	r2, r5
 801613a:	f882 a001 	strb.w	sl, [r2, #1]
 801613e:	f882 b002 	strb.w	fp, [r2, #2]
 8016142:	e7f0      	b.n	8016126 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 8016144:	f806 7c03 	strb.w	r7, [r6, #-3]
 8016148:	f806 9c02 	strb.w	r9, [r6, #-2]
 801614c:	f806 bc01 	strb.w	fp, [r6, #-1]
 8016150:	e74d      	b.n	8015fee <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8016152:	b003      	add	sp, #12
 8016154:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016158 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016158:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801615c:	b087      	sub	sp, #28
 801615e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016162:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8016164:	9204      	str	r2, [sp, #16]
 8016166:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801616a:	6860      	ldr	r0, [r4, #4]
 801616c:	9205      	str	r2, [sp, #20]
 801616e:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8016172:	f8dd e04c 	ldr.w	lr, [sp, #76]	; 0x4c
 8016176:	9101      	str	r1, [sp, #4]
 8016178:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801617c:	fb00 2505 	mla	r5, r0, r5, r2
 8016180:	6822      	ldr	r2, [r4, #0]
 8016182:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8016186:	4415      	add	r5, r2
 8016188:	f8dc 2008 	ldr.w	r2, [ip, #8]
 801618c:	3201      	adds	r2, #1
 801618e:	f022 0201 	bic.w	r2, r2, #1
 8016192:	9202      	str	r2, [sp, #8]
 8016194:	f8dc 2000 	ldr.w	r2, [ip]
 8016198:	9203      	str	r2, [sp, #12]
 801619a:	9a01      	ldr	r2, [sp, #4]
 801619c:	2a00      	cmp	r2, #0
 801619e:	dc03      	bgt.n	80161a8 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 80161a0:	9a04      	ldr	r2, [sp, #16]
 80161a2:	2a00      	cmp	r2, #0
 80161a4:	f340 8135 	ble.w	8016412 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 80161a8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80161aa:	f9bc 8008 	ldrsh.w	r8, [ip, #8]
 80161ae:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 80161b2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80161b4:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 80161b8:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80161bc:	2b00      	cmp	r3, #0
 80161be:	dd0d      	ble.n	80161dc <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80161c0:	1422      	asrs	r2, r4, #16
 80161c2:	d405      	bmi.n	80161d0 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80161c4:	4542      	cmp	r2, r8
 80161c6:	da03      	bge.n	80161d0 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80161c8:	1402      	asrs	r2, r0, #16
 80161ca:	d401      	bmi.n	80161d0 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80161cc:	42ba      	cmp	r2, r7
 80161ce:	db06      	blt.n	80161de <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80161d0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80161d2:	4474      	add	r4, lr
 80161d4:	3b01      	subs	r3, #1
 80161d6:	3503      	adds	r5, #3
 80161d8:	4410      	add	r0, r2
 80161da:	e7ef      	b.n	80161bc <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80161dc:	d077      	beq.n	80162ce <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 80161de:	1e5a      	subs	r2, r3, #1
 80161e0:	fb0e 4602 	mla	r6, lr, r2, r4
 80161e4:	1436      	asrs	r6, r6, #16
 80161e6:	d469      	bmi.n	80162bc <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80161e8:	4546      	cmp	r6, r8
 80161ea:	da67      	bge.n	80162bc <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80161ec:	9e14      	ldr	r6, [sp, #80]	; 0x50
 80161ee:	fb06 0202 	mla	r2, r6, r2, r0
 80161f2:	1412      	asrs	r2, r2, #16
 80161f4:	d462      	bmi.n	80162bc <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80161f6:	42ba      	cmp	r2, r7
 80161f8:	da60      	bge.n	80162bc <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80161fa:	1cee      	adds	r6, r5, #3
 80161fc:	4699      	mov	r9, r3
 80161fe:	f1b9 0f00 	cmp.w	r9, #0
 8016202:	dd5f      	ble.n	80162c4 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8016204:	1422      	asrs	r2, r4, #16
 8016206:	9902      	ldr	r1, [sp, #8]
 8016208:	1407      	asrs	r7, r0, #16
 801620a:	fb01 2707 	mla	r7, r1, r7, r2
 801620e:	9903      	ldr	r1, [sp, #12]
 8016210:	087a      	lsrs	r2, r7, #1
 8016212:	5c8a      	ldrb	r2, [r1, r2]
 8016214:	07f9      	lsls	r1, r7, #31
 8016216:	bf54      	ite	pl
 8016218:	f002 020f 	andpl.w	r2, r2, #15
 801621c:	1112      	asrmi	r2, r2, #4
 801621e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8016222:	b2d2      	uxtb	r2, r2
 8016224:	2a00      	cmp	r2, #0
 8016226:	d042      	beq.n	80162ae <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8016228:	497b      	ldr	r1, [pc, #492]	; (8016418 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>)
 801622a:	680f      	ldr	r7, [r1, #0]
 801622c:	9905      	ldr	r1, [sp, #20]
 801622e:	fa5f fb87 	uxtb.w	fp, r7
 8016232:	434a      	muls	r2, r1
 8016234:	f102 0801 	add.w	r8, r2, #1
 8016238:	eb08 2222 	add.w	r2, r8, r2, asr #8
 801623c:	f816 8c03 	ldrb.w	r8, [r6, #-3]
 8016240:	1212      	asrs	r2, r2, #8
 8016242:	fa1f fa82 	uxth.w	sl, r2
 8016246:	43d2      	mvns	r2, r2
 8016248:	fb1b fb0a 	smulbb	fp, fp, sl
 801624c:	b2d2      	uxtb	r2, r2
 801624e:	fb08 b802 	mla	r8, r8, r2, fp
 8016252:	fa1f f888 	uxth.w	r8, r8
 8016256:	f108 0b01 	add.w	fp, r8, #1
 801625a:	eb0b 2818 	add.w	r8, fp, r8, lsr #8
 801625e:	f3c7 2b07 	ubfx	fp, r7, #8, #8
 8016262:	f3c7 4707 	ubfx	r7, r7, #16, #8
 8016266:	fb1b fb0a 	smulbb	fp, fp, sl
 801626a:	ea4f 2828 	mov.w	r8, r8, asr #8
 801626e:	fb17 fa0a 	smulbb	sl, r7, sl
 8016272:	f816 7c01 	ldrb.w	r7, [r6, #-1]
 8016276:	f806 8c03 	strb.w	r8, [r6, #-3]
 801627a:	f816 8c02 	ldrb.w	r8, [r6, #-2]
 801627e:	fb07 aa02 	mla	sl, r7, r2, sl
 8016282:	fb08 b802 	mla	r8, r8, r2, fp
 8016286:	fa1f fa8a 	uxth.w	sl, sl
 801628a:	fa1f f888 	uxth.w	r8, r8
 801628e:	f10a 0701 	add.w	r7, sl, #1
 8016292:	f108 0b01 	add.w	fp, r8, #1
 8016296:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801629a:	eb0b 2818 	add.w	r8, fp, r8, lsr #8
 801629e:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 80162a2:	ea4f 2828 	mov.w	r8, r8, asr #8
 80162a6:	f806 ac01 	strb.w	sl, [r6, #-1]
 80162aa:	f806 8c02 	strb.w	r8, [r6, #-2]
 80162ae:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80162b0:	4474      	add	r4, lr
 80162b2:	3603      	adds	r6, #3
 80162b4:	f109 39ff 	add.w	r9, r9, #4294967295
 80162b8:	4410      	add	r0, r2
 80162ba:	e7a0      	b.n	80161fe <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80162bc:	2700      	movs	r7, #0
 80162be:	1bda      	subs	r2, r3, r7
 80162c0:	2a00      	cmp	r2, #0
 80162c2:	dc3e      	bgt.n	8016342 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 80162c4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80162c8:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80162cc:	441d      	add	r5, r3
 80162ce:	9b01      	ldr	r3, [sp, #4]
 80162d0:	2b00      	cmp	r3, #0
 80162d2:	f340 809e 	ble.w	8016412 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 80162d6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80162da:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80162dc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80162e0:	eeb0 6a62 	vmov.f32	s12, s5
 80162e4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80162e8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80162ec:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80162f0:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80162f4:	eeb0 6a43 	vmov.f32	s12, s6
 80162f8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80162fc:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8016300:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016304:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016308:	ee77 2a62 	vsub.f32	s5, s14, s5
 801630c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016310:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016314:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016318:	ee12 2a90 	vmov	r2, s5
 801631c:	eef0 2a47 	vmov.f32	s5, s14
 8016320:	fb92 fef3 	sdiv	lr, r2, r3
 8016324:	ee13 2a10 	vmov	r2, s6
 8016328:	eeb0 3a67 	vmov.f32	s6, s15
 801632c:	fb92 f3f3 	sdiv	r3, r2, r3
 8016330:	9314      	str	r3, [sp, #80]	; 0x50
 8016332:	9b01      	ldr	r3, [sp, #4]
 8016334:	9a04      	ldr	r2, [sp, #16]
 8016336:	3b01      	subs	r3, #1
 8016338:	9301      	str	r3, [sp, #4]
 801633a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801633c:	bf08      	it	eq
 801633e:	4613      	moveq	r3, r2
 8016340:	e72b      	b.n	801619a <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8016342:	1426      	asrs	r6, r4, #16
 8016344:	d460      	bmi.n	8016408 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 8016346:	f8dc 2008 	ldr.w	r2, [ip, #8]
 801634a:	42b2      	cmp	r2, r6
 801634c:	dd5c      	ble.n	8016408 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 801634e:	ea5f 4820 	movs.w	r8, r0, asr #16
 8016352:	d459      	bmi.n	8016408 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 8016354:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8016358:	4542      	cmp	r2, r8
 801635a:	dd55      	ble.n	8016408 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 801635c:	9a02      	ldr	r2, [sp, #8]
 801635e:	9903      	ldr	r1, [sp, #12]
 8016360:	fb08 6602 	mla	r6, r8, r2, r6
 8016364:	0872      	lsrs	r2, r6, #1
 8016366:	07f6      	lsls	r6, r6, #31
 8016368:	5c8a      	ldrb	r2, [r1, r2]
 801636a:	bf54      	ite	pl
 801636c:	f002 020f 	andpl.w	r2, r2, #15
 8016370:	1112      	asrmi	r2, r2, #4
 8016372:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8016376:	b2d2      	uxtb	r2, r2
 8016378:	2a00      	cmp	r2, #0
 801637a:	d045      	beq.n	8016408 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 801637c:	4926      	ldr	r1, [pc, #152]	; (8016418 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>)
 801637e:	f8d1 8000 	ldr.w	r8, [r1]
 8016382:	9905      	ldr	r1, [sp, #20]
 8016384:	fa5f fb88 	uxtb.w	fp, r8
 8016388:	434a      	muls	r2, r1
 801638a:	1c56      	adds	r6, r2, #1
 801638c:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8016390:	eb07 0647 	add.w	r6, r7, r7, lsl #1
 8016394:	1212      	asrs	r2, r2, #8
 8016396:	f815 9006 	ldrb.w	r9, [r5, r6]
 801639a:	fa1f fa82 	uxth.w	sl, r2
 801639e:	43d2      	mvns	r2, r2
 80163a0:	fb1b fb0a 	smulbb	fp, fp, sl
 80163a4:	b2d2      	uxtb	r2, r2
 80163a6:	fb09 b902 	mla	r9, r9, r2, fp
 80163aa:	fa1f f989 	uxth.w	r9, r9
 80163ae:	f109 0b01 	add.w	fp, r9, #1
 80163b2:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 80163b6:	f3c8 2b07 	ubfx	fp, r8, #8, #8
 80163ba:	f3c8 4807 	ubfx	r8, r8, #16, #8
 80163be:	fb1b fb0a 	smulbb	fp, fp, sl
 80163c2:	ea4f 2929 	mov.w	r9, r9, asr #8
 80163c6:	fb18 fa0a 	smulbb	sl, r8, sl
 80163ca:	f805 9006 	strb.w	r9, [r5, r6]
 80163ce:	442e      	add	r6, r5
 80163d0:	f896 8002 	ldrb.w	r8, [r6, #2]
 80163d4:	f896 9001 	ldrb.w	r9, [r6, #1]
 80163d8:	fb08 aa02 	mla	sl, r8, r2, sl
 80163dc:	fb09 b902 	mla	r9, r9, r2, fp
 80163e0:	fa1f fa8a 	uxth.w	sl, sl
 80163e4:	fa1f f989 	uxth.w	r9, r9
 80163e8:	f10a 0801 	add.w	r8, sl, #1
 80163ec:	f109 0b01 	add.w	fp, r9, #1
 80163f0:	eb08 2a1a 	add.w	sl, r8, sl, lsr #8
 80163f4:	eb0b 2919 	add.w	r9, fp, r9, lsr #8
 80163f8:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 80163fc:	ea4f 2929 	mov.w	r9, r9, asr #8
 8016400:	f886 a002 	strb.w	sl, [r6, #2]
 8016404:	f886 9001 	strb.w	r9, [r6, #1]
 8016408:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801640a:	4474      	add	r4, lr
 801640c:	3701      	adds	r7, #1
 801640e:	4410      	add	r0, r2
 8016410:	e755      	b.n	80162be <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x166>
 8016412:	b007      	add	sp, #28
 8016414:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016418:	2400e0a4 	.word	0x2400e0a4

0801641c <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801641c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016420:	b085      	sub	sp, #20
 8016422:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016426:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016428:	9203      	str	r2, [sp, #12]
 801642a:	6860      	ldr	r0, [r4, #4]
 801642c:	f8dd c058 	ldr.w	ip, [sp, #88]	; 0x58
 8016430:	9100      	str	r1, [sp, #0]
 8016432:	e9dd 2614 	ldrd	r2, r6, [sp, #80]	; 0x50
 8016436:	fb00 2606 	mla	r6, r0, r6, r2
 801643a:	6822      	ldr	r2, [r4, #0]
 801643c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8016440:	4416      	add	r6, r2
 8016442:	f8dc 2008 	ldr.w	r2, [ip, #8]
 8016446:	3201      	adds	r2, #1
 8016448:	f022 0201 	bic.w	r2, r2, #1
 801644c:	9201      	str	r2, [sp, #4]
 801644e:	f8dc 2000 	ldr.w	r2, [ip]
 8016452:	9202      	str	r2, [sp, #8]
 8016454:	9a00      	ldr	r2, [sp, #0]
 8016456:	2a00      	cmp	r2, #0
 8016458:	dc03      	bgt.n	8016462 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801645a:	9a03      	ldr	r2, [sp, #12]
 801645c:	2a00      	cmp	r2, #0
 801645e:	f340 8140 	ble.w	80166e2 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c6>
 8016462:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8016464:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8016468:	f502 4500 	add.w	r5, r2, #32768	; 0x8000
 801646c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801646e:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8016472:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 8016476:	2b00      	cmp	r3, #0
 8016478:	dd0e      	ble.n	8016498 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801647a:	142a      	asrs	r2, r5, #16
 801647c:	d405      	bmi.n	801648a <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801647e:	4572      	cmp	r2, lr
 8016480:	da03      	bge.n	801648a <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8016482:	1422      	asrs	r2, r4, #16
 8016484:	d401      	bmi.n	801648a <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8016486:	42ba      	cmp	r2, r7
 8016488:	db07      	blt.n	801649a <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801648a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801648c:	3b01      	subs	r3, #1
 801648e:	3603      	adds	r6, #3
 8016490:	4415      	add	r5, r2
 8016492:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8016494:	4414      	add	r4, r2
 8016496:	e7ee      	b.n	8016476 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8016498:	d072      	beq.n	8016580 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801649a:	1e5a      	subs	r2, r3, #1
 801649c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801649e:	fb00 5002 	mla	r0, r0, r2, r5
 80164a2:	1400      	asrs	r0, r0, #16
 80164a4:	d463      	bmi.n	801656e <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80164a6:	4570      	cmp	r0, lr
 80164a8:	da61      	bge.n	801656e <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80164aa:	9812      	ldr	r0, [sp, #72]	; 0x48
 80164ac:	fb00 4202 	mla	r2, r0, r2, r4
 80164b0:	1412      	asrs	r2, r2, #16
 80164b2:	d45c      	bmi.n	801656e <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80164b4:	42ba      	cmp	r2, r7
 80164b6:	da5a      	bge.n	801656e <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80164b8:	1cf0      	adds	r0, r6, #3
 80164ba:	469a      	mov	sl, r3
 80164bc:	f1ba 0f00 	cmp.w	sl, #0
 80164c0:	dd59      	ble.n	8016576 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15a>
 80164c2:	142a      	asrs	r2, r5, #16
 80164c4:	9901      	ldr	r1, [sp, #4]
 80164c6:	1427      	asrs	r7, r4, #16
 80164c8:	fb01 2707 	mla	r7, r1, r7, r2
 80164cc:	9902      	ldr	r1, [sp, #8]
 80164ce:	087a      	lsrs	r2, r7, #1
 80164d0:	5c8a      	ldrb	r2, [r1, r2]
 80164d2:	07f9      	lsls	r1, r7, #31
 80164d4:	bf54      	ite	pl
 80164d6:	f002 020f 	andpl.w	r2, r2, #15
 80164da:	1112      	asrmi	r2, r2, #4
 80164dc:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80164e0:	b2d2      	uxtb	r2, r2
 80164e2:	2a00      	cmp	r2, #0
 80164e4:	d03b      	beq.n	801655e <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x142>
 80164e6:	4980      	ldr	r1, [pc, #512]	; (80166e8 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>)
 80164e8:	2aff      	cmp	r2, #255	; 0xff
 80164ea:	680f      	ldr	r7, [r1, #0]
 80164ec:	f3c7 4b07 	ubfx	fp, r7, #16, #8
 80164f0:	f3c7 2907 	ubfx	r9, r7, #8, #8
 80164f4:	b2ff      	uxtb	r7, r7
 80164f6:	f000 80ed 	beq.w	80166d4 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b8>
 80164fa:	fa1f f882 	uxth.w	r8, r2
 80164fe:	43d2      	mvns	r2, r2
 8016500:	f810 ec03 	ldrb.w	lr, [r0, #-3]
 8016504:	fb17 f708 	smulbb	r7, r7, r8
 8016508:	b2d2      	uxtb	r2, r2
 801650a:	fb19 f908 	smulbb	r9, r9, r8
 801650e:	fb0e 7702 	mla	r7, lr, r2, r7
 8016512:	fb1b f808 	smulbb	r8, fp, r8
 8016516:	b2bf      	uxth	r7, r7
 8016518:	f107 0e01 	add.w	lr, r7, #1
 801651c:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 8016520:	123f      	asrs	r7, r7, #8
 8016522:	f800 7c03 	strb.w	r7, [r0, #-3]
 8016526:	f810 7c02 	ldrb.w	r7, [r0, #-2]
 801652a:	fb07 9902 	mla	r9, r7, r2, r9
 801652e:	fa1f f989 	uxth.w	r9, r9
 8016532:	f109 0701 	add.w	r7, r9, #1
 8016536:	eb07 2919 	add.w	r9, r7, r9, lsr #8
 801653a:	f810 7c01 	ldrb.w	r7, [r0, #-1]
 801653e:	fb07 8802 	mla	r8, r7, r2, r8
 8016542:	ea4f 2929 	mov.w	r9, r9, asr #8
 8016546:	fa1f f888 	uxth.w	r8, r8
 801654a:	f800 9c02 	strb.w	r9, [r0, #-2]
 801654e:	f108 0201 	add.w	r2, r8, #1
 8016552:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8016556:	ea4f 2828 	mov.w	r8, r8, asr #8
 801655a:	f800 8c01 	strb.w	r8, [r0, #-1]
 801655e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8016560:	3003      	adds	r0, #3
 8016562:	f10a 3aff 	add.w	sl, sl, #4294967295
 8016566:	4415      	add	r5, r2
 8016568:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801656a:	4414      	add	r4, r2
 801656c:	e7a6      	b.n	80164bc <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801656e:	2700      	movs	r7, #0
 8016570:	1bda      	subs	r2, r3, r7
 8016572:	2a00      	cmp	r2, #0
 8016574:	dc40      	bgt.n	80165f8 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8016576:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801657a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801657e:	441e      	add	r6, r3
 8016580:	9b00      	ldr	r3, [sp, #0]
 8016582:	2b00      	cmp	r3, #0
 8016584:	f340 80ad 	ble.w	80166e2 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c6>
 8016588:	ee30 0a04 	vadd.f32	s0, s0, s8
 801658c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801658e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016592:	eeb0 6a62 	vmov.f32	s12, s5
 8016596:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801659a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801659e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80165a2:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80165a6:	eeb0 6a43 	vmov.f32	s12, s6
 80165aa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80165ae:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80165b2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80165b6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80165ba:	ee77 2a62 	vsub.f32	s5, s14, s5
 80165be:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80165c2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80165c6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80165ca:	ee12 2a90 	vmov	r2, s5
 80165ce:	eef0 2a47 	vmov.f32	s5, s14
 80165d2:	fb92 f3f3 	sdiv	r3, r2, r3
 80165d6:	ee13 2a10 	vmov	r2, s6
 80165da:	9311      	str	r3, [sp, #68]	; 0x44
 80165dc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80165de:	eeb0 3a67 	vmov.f32	s6, s15
 80165e2:	fb92 f3f3 	sdiv	r3, r2, r3
 80165e6:	9312      	str	r3, [sp, #72]	; 0x48
 80165e8:	9b00      	ldr	r3, [sp, #0]
 80165ea:	9a03      	ldr	r2, [sp, #12]
 80165ec:	3b01      	subs	r3, #1
 80165ee:	9300      	str	r3, [sp, #0]
 80165f0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80165f2:	bf08      	it	eq
 80165f4:	4613      	moveq	r3, r2
 80165f6:	e72d      	b.n	8016454 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80165f8:	1428      	asrs	r0, r5, #16
 80165fa:	d45c      	bmi.n	80166b6 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80165fc:	f8dc 2008 	ldr.w	r2, [ip, #8]
 8016600:	4282      	cmp	r2, r0
 8016602:	dd58      	ble.n	80166b6 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8016604:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8016608:	d455      	bmi.n	80166b6 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801660a:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801660e:	4572      	cmp	r2, lr
 8016610:	dd51      	ble.n	80166b6 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8016612:	9a01      	ldr	r2, [sp, #4]
 8016614:	9902      	ldr	r1, [sp, #8]
 8016616:	fb0e 0002 	mla	r0, lr, r2, r0
 801661a:	0842      	lsrs	r2, r0, #1
 801661c:	07c0      	lsls	r0, r0, #31
 801661e:	5c8a      	ldrb	r2, [r1, r2]
 8016620:	bf54      	ite	pl
 8016622:	f002 020f 	andpl.w	r2, r2, #15
 8016626:	1112      	asrmi	r2, r2, #4
 8016628:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801662c:	b2d2      	uxtb	r2, r2
 801662e:	2a00      	cmp	r2, #0
 8016630:	d041      	beq.n	80166b6 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8016632:	492d      	ldr	r1, [pc, #180]	; (80166e8 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>)
 8016634:	2aff      	cmp	r2, #255	; 0xff
 8016636:	6808      	ldr	r0, [r1, #0]
 8016638:	f3c0 4b07 	ubfx	fp, r0, #16, #8
 801663c:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8016640:	fa5f fe80 	uxtb.w	lr, r0
 8016644:	ea4f 0047 	mov.w	r0, r7, lsl #1
 8016648:	d03b      	beq.n	80166c2 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801664a:	fa1f f982 	uxth.w	r9, r2
 801664e:	4438      	add	r0, r7
 8016650:	43d2      	mvns	r2, r2
 8016652:	f816 8000 	ldrb.w	r8, [r6, r0]
 8016656:	fb1e fe09 	smulbb	lr, lr, r9
 801665a:	fb1a fa09 	smulbb	sl, sl, r9
 801665e:	b2d2      	uxtb	r2, r2
 8016660:	fb1b f909 	smulbb	r9, fp, r9
 8016664:	fb08 ee02 	mla	lr, r8, r2, lr
 8016668:	fa1f fe8e 	uxth.w	lr, lr
 801666c:	f10e 0801 	add.w	r8, lr, #1
 8016670:	eb08 2e1e 	add.w	lr, r8, lr, lsr #8
 8016674:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 8016678:	f806 e000 	strb.w	lr, [r6, r0]
 801667c:	4430      	add	r0, r6
 801667e:	f890 e001 	ldrb.w	lr, [r0, #1]
 8016682:	fb0e aa02 	mla	sl, lr, r2, sl
 8016686:	fa1f fa8a 	uxth.w	sl, sl
 801668a:	f10a 0e01 	add.w	lr, sl, #1
 801668e:	eb0e 2a1a 	add.w	sl, lr, sl, lsr #8
 8016692:	f890 e002 	ldrb.w	lr, [r0, #2]
 8016696:	fb0e 9902 	mla	r9, lr, r2, r9
 801669a:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 801669e:	fa1f f989 	uxth.w	r9, r9
 80166a2:	f880 a001 	strb.w	sl, [r0, #1]
 80166a6:	f109 0201 	add.w	r2, r9, #1
 80166aa:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 80166ae:	ea4f 2929 	mov.w	r9, r9, asr #8
 80166b2:	f880 9002 	strb.w	r9, [r0, #2]
 80166b6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80166b8:	3701      	adds	r7, #1
 80166ba:	4415      	add	r5, r2
 80166bc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80166be:	4414      	add	r4, r2
 80166c0:	e756      	b.n	8016570 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 80166c2:	4438      	add	r0, r7
 80166c4:	f806 e000 	strb.w	lr, [r6, r0]
 80166c8:	4430      	add	r0, r6
 80166ca:	f880 a001 	strb.w	sl, [r0, #1]
 80166ce:	f880 b002 	strb.w	fp, [r0, #2]
 80166d2:	e7f0      	b.n	80166b6 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80166d4:	f800 7c03 	strb.w	r7, [r0, #-3]
 80166d8:	f800 9c02 	strb.w	r9, [r0, #-2]
 80166dc:	f800 bc01 	strb.w	fp, [r0, #-1]
 80166e0:	e73d      	b.n	801655e <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x142>
 80166e2:	b005      	add	sp, #20
 80166e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80166e8:	2400e0a4 	.word	0x2400e0a4

080166ec <_ZN8touchgfx8LCD24bppD1Ev>:
 80166ec:	4770      	bx	lr

080166ee <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 80166ee:	4770      	bx	lr

080166f0 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 80166f0:	4770      	bx	lr

080166f2 <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 80166f2:	4770      	bx	lr

080166f4 <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 80166f4:	4770      	bx	lr

080166f6 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80166f6:	4770      	bx	lr

080166f8 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80166f8:	4770      	bx	lr

080166fa <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80166fa:	4770      	bx	lr

080166fc <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 80166fc:	4770      	bx	lr

080166fe <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80166fe:	4770      	bx	lr

08016700 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8016700:	4770      	bx	lr

08016702 <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8016702:	4770      	bx	lr

08016704 <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8016704:	4770      	bx	lr

08016706 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8016706:	4770      	bx	lr

08016708 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8016708:	4770      	bx	lr

0801670a <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801670a:	4770      	bx	lr

0801670c <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801670c:	4770      	bx	lr

0801670e <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801670e:	4770      	bx	lr

08016710 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8016710:	4770      	bx	lr

08016712 <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8016712:	4770      	bx	lr

08016714 <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8016714:	4770      	bx	lr
	...

08016718 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8016718:	2bff      	cmp	r3, #255	; 0xff
 801671a:	b508      	push	{r3, lr}
 801671c:	d04f      	beq.n	80167be <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 801671e:	2a2c      	cmp	r2, #44	; 0x2c
 8016720:	d032      	beq.n	8016788 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x70>
 8016722:	d80f      	bhi.n	8016744 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x2c>
 8016724:	2a08      	cmp	r2, #8
 8016726:	d046      	beq.n	80167b6 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8016728:	d805      	bhi.n	8016736 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1e>
 801672a:	2a04      	cmp	r2, #4
 801672c:	d041      	beq.n	80167b2 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801672e:	2a05      	cmp	r2, #5
 8016730:	d03d      	beq.n	80167ae <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 8016732:	2000      	movs	r0, #0
 8016734:	e027      	b.n	8016786 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8016736:	2a0a      	cmp	r2, #10
 8016738:	d03d      	beq.n	80167b6 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801673a:	d301      	bcc.n	8016740 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 801673c:	2a0b      	cmp	r2, #11
 801673e:	d1f8      	bne.n	8016732 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8016740:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8016742:	e020      	b.n	8016786 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8016744:	2a30      	cmp	r2, #48	; 0x30
 8016746:	d038      	beq.n	80167ba <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8016748:	d808      	bhi.n	801675c <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x44>
 801674a:	2a2e      	cmp	r2, #46	; 0x2e
 801674c:	684b      	ldr	r3, [r1, #4]
 801674e:	d029      	beq.n	80167a4 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8c>
 8016750:	d90b      	bls.n	801676a <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 8016752:	781b      	ldrb	r3, [r3, #0]
 8016754:	2b00      	cmp	r3, #0
 8016756:	d1ec      	bne.n	8016732 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8016758:	6a00      	ldr	r0, [r0, #32]
 801675a:	e014      	b.n	8016786 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 801675c:	2a32      	cmp	r2, #50	; 0x32
 801675e:	d02c      	beq.n	80167ba <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8016760:	d301      	bcc.n	8016766 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4e>
 8016762:	2a33      	cmp	r2, #51	; 0x33
 8016764:	d1e5      	bne.n	8016732 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8016766:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8016768:	e00d      	b.n	8016786 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 801676a:	781b      	ldrb	r3, [r3, #0]
 801676c:	2b01      	cmp	r3, #1
 801676e:	d009      	beq.n	8016784 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6c>
 8016770:	d3f2      	bcc.n	8016758 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x40>
 8016772:	2b02      	cmp	r3, #2
 8016774:	d1dd      	bne.n	8016732 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8016776:	4b39      	ldr	r3, [pc, #228]	; (801685c <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x144>)
 8016778:	f44f 6184 	mov.w	r1, #1056	; 0x420
 801677c:	4a38      	ldr	r2, [pc, #224]	; (8016860 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x148>)
 801677e:	4839      	ldr	r0, [pc, #228]	; (8016864 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x14c>)
 8016780:	f009 fa2a 	bl	801fbd8 <__assert_func>
 8016784:	6900      	ldr	r0, [r0, #16]
 8016786:	bd08      	pop	{r3, pc}
 8016788:	684b      	ldr	r3, [r1, #4]
 801678a:	781b      	ldrb	r3, [r3, #0]
 801678c:	2b01      	cmp	r3, #1
 801678e:	d007      	beq.n	80167a0 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x88>
 8016790:	d30b      	bcc.n	80167aa <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8016792:	2b02      	cmp	r3, #2
 8016794:	d1cd      	bne.n	8016732 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8016796:	4b31      	ldr	r3, [pc, #196]	; (801685c <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x144>)
 8016798:	f240 412c 	movw	r1, #1068	; 0x42c
 801679c:	4a30      	ldr	r2, [pc, #192]	; (8016860 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x148>)
 801679e:	e7ee      	b.n	801677e <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x66>
 80167a0:	6880      	ldr	r0, [r0, #8]
 80167a2:	e7f0      	b.n	8016786 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 80167a4:	781b      	ldrb	r3, [r3, #0]
 80167a6:	2b00      	cmp	r3, #0
 80167a8:	d1c3      	bne.n	8016732 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 80167aa:	6980      	ldr	r0, [r0, #24]
 80167ac:	e7eb      	b.n	8016786 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 80167ae:	6b00      	ldr	r0, [r0, #48]	; 0x30
 80167b0:	e7e9      	b.n	8016786 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 80167b2:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80167b4:	e7e7      	b.n	8016786 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 80167b6:	6b80      	ldr	r0, [r0, #56]	; 0x38
 80167b8:	e7e5      	b.n	8016786 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 80167ba:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80167bc:	e7e3      	b.n	8016786 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 80167be:	2a2c      	cmp	r2, #44	; 0x2c
 80167c0:	d030      	beq.n	8016824 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x10c>
 80167c2:	d80f      	bhi.n	80167e4 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xcc>
 80167c4:	2a08      	cmp	r2, #8
 80167c6:	d044      	beq.n	8016852 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 80167c8:	d805      	bhi.n	80167d6 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 80167ca:	2a04      	cmp	r2, #4
 80167cc:	d03f      	beq.n	801684e <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 80167ce:	2a05      	cmp	r2, #5
 80167d0:	d1af      	bne.n	8016732 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 80167d2:	6b40      	ldr	r0, [r0, #52]	; 0x34
 80167d4:	e7d7      	b.n	8016786 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 80167d6:	2a0a      	cmp	r2, #10
 80167d8:	d03b      	beq.n	8016852 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 80167da:	d301      	bcc.n	80167e0 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc8>
 80167dc:	2a0b      	cmp	r2, #11
 80167de:	d1a8      	bne.n	8016732 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 80167e0:	6c40      	ldr	r0, [r0, #68]	; 0x44
 80167e2:	e7d0      	b.n	8016786 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 80167e4:	2a30      	cmp	r2, #48	; 0x30
 80167e6:	d036      	beq.n	8016856 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80167e8:	d808      	bhi.n	80167fc <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe4>
 80167ea:	2a2e      	cmp	r2, #46	; 0x2e
 80167ec:	684b      	ldr	r3, [r1, #4]
 80167ee:	d028      	beq.n	8016842 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12a>
 80167f0:	d90b      	bls.n	801680a <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xf2>
 80167f2:	781b      	ldrb	r3, [r3, #0]
 80167f4:	2b00      	cmp	r3, #0
 80167f6:	d19c      	bne.n	8016732 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 80167f8:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80167fa:	e7c4      	b.n	8016786 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 80167fc:	2a32      	cmp	r2, #50	; 0x32
 80167fe:	d02a      	beq.n	8016856 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8016800:	d301      	bcc.n	8016806 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xee>
 8016802:	2a33      	cmp	r2, #51	; 0x33
 8016804:	d195      	bne.n	8016732 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8016806:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8016808:	e7bd      	b.n	8016786 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 801680a:	781b      	ldrb	r3, [r3, #0]
 801680c:	2b01      	cmp	r3, #1
 801680e:	d007      	beq.n	8016820 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x108>
 8016810:	d3f2      	bcc.n	80167f8 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe0>
 8016812:	2b02      	cmp	r3, #2
 8016814:	d18d      	bne.n	8016732 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8016816:	4b11      	ldr	r3, [pc, #68]	; (801685c <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x144>)
 8016818:	f240 415d 	movw	r1, #1117	; 0x45d
 801681c:	4a10      	ldr	r2, [pc, #64]	; (8016860 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x148>)
 801681e:	e7ae      	b.n	801677e <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x66>
 8016820:	6940      	ldr	r0, [r0, #20]
 8016822:	e7b0      	b.n	8016786 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8016824:	684b      	ldr	r3, [r1, #4]
 8016826:	781b      	ldrb	r3, [r3, #0]
 8016828:	2b01      	cmp	r3, #1
 801682a:	d008      	beq.n	801683e <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x126>
 801682c:	d30d      	bcc.n	801684a <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 801682e:	2b02      	cmp	r3, #2
 8016830:	f47f af7f 	bne.w	8016732 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8016834:	4b09      	ldr	r3, [pc, #36]	; (801685c <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x144>)
 8016836:	f240 4169 	movw	r1, #1129	; 0x469
 801683a:	4a09      	ldr	r2, [pc, #36]	; (8016860 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x148>)
 801683c:	e79f      	b.n	801677e <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x66>
 801683e:	68c0      	ldr	r0, [r0, #12]
 8016840:	e7a1      	b.n	8016786 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8016842:	781b      	ldrb	r3, [r3, #0]
 8016844:	2b00      	cmp	r3, #0
 8016846:	f47f af74 	bne.w	8016732 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 801684a:	69c0      	ldr	r0, [r0, #28]
 801684c:	e79b      	b.n	8016786 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 801684e:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8016850:	e799      	b.n	8016786 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8016852:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8016854:	e797      	b.n	8016786 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8016856:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8016858:	e795      	b.n	8016786 <_ZN8touchgfx8LCD24bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 801685a:	bf00      	nop
 801685c:	08024bc9 	.word	0x08024bc9
 8016860:	08025343 	.word	0x08025343
 8016864:	08024c15 	.word	0x08024c15

08016868 <_ZNK8touchgfx8LCD24bpp17framebufferStrideEv>:
 8016868:	b508      	push	{r3, lr}
 801686a:	4b06      	ldr	r3, [pc, #24]	; (8016884 <_ZNK8touchgfx8LCD24bpp17framebufferStrideEv+0x1c>)
 801686c:	8818      	ldrh	r0, [r3, #0]
 801686e:	b928      	cbnz	r0, 801687c <_ZNK8touchgfx8LCD24bpp17framebufferStrideEv+0x14>
 8016870:	4b05      	ldr	r3, [pc, #20]	; (8016888 <_ZNK8touchgfx8LCD24bpp17framebufferStrideEv+0x20>)
 8016872:	2151      	movs	r1, #81	; 0x51
 8016874:	4a05      	ldr	r2, [pc, #20]	; (801688c <_ZNK8touchgfx8LCD24bpp17framebufferStrideEv+0x24>)
 8016876:	4806      	ldr	r0, [pc, #24]	; (8016890 <_ZNK8touchgfx8LCD24bpp17framebufferStrideEv+0x28>)
 8016878:	f009 f9ae 	bl	801fbd8 <__assert_func>
 801687c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8016880:	b280      	uxth	r0, r0
 8016882:	bd08      	pop	{r3, pc}
 8016884:	2400e076 	.word	0x2400e076
 8016888:	08024e0f 	.word	0x08024e0f
 801688c:	08025308 	.word	0x08025308
 8016890:	08024e51 	.word	0x08024e51

08016894 <_ZN8touchgfx8LCD24bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8016894:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016896:	4606      	mov	r6, r0
 8016898:	b087      	sub	sp, #28
 801689a:	4615      	mov	r5, r2
 801689c:	461f      	mov	r7, r3
 801689e:	b353      	cbz	r3, 80168f6 <_ZN8touchgfx8LCD24bpp8fillRectERKNS_4RectENS_9colortypeEh+0x62>
 80168a0:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 80168a4:	2b00      	cmp	r3, #0
 80168a6:	dd26      	ble.n	80168f6 <_ZN8touchgfx8LCD24bpp8fillRectERKNS_4RectENS_9colortypeEh+0x62>
 80168a8:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 80168ac:	2b00      	cmp	r3, #0
 80168ae:	dd22      	ble.n	80168f6 <_ZN8touchgfx8LCD24bpp8fillRectERKNS_4RectENS_9colortypeEh+0x62>
 80168b0:	6808      	ldr	r0, [r1, #0]
 80168b2:	aa04      	add	r2, sp, #16
 80168b4:	6849      	ldr	r1, [r1, #4]
 80168b6:	4c1b      	ldr	r4, [pc, #108]	; (8016924 <_ZN8touchgfx8LCD24bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 80168b8:	c203      	stmia	r2!, {r0, r1}
 80168ba:	a804      	add	r0, sp, #16
 80168bc:	f7fa fcba 	bl	8011234 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80168c0:	6820      	ldr	r0, [r4, #0]
 80168c2:	6803      	ldr	r3, [r0, #0]
 80168c4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80168c6:	4798      	blx	r3
 80168c8:	2fff      	cmp	r7, #255	; 0xff
 80168ca:	d016      	beq.n	80168fa <_ZN8touchgfx8LCD24bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 80168cc:	f010 0f08 	tst.w	r0, #8
 80168d0:	6820      	ldr	r0, [r4, #0]
 80168d2:	d015      	beq.n	8016900 <_ZN8touchgfx8LCD24bpp8fillRectERKNS_4RectENS_9colortypeEh+0x6c>
 80168d4:	2400      	movs	r4, #0
 80168d6:	6801      	ldr	r1, [r0, #0]
 80168d8:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80168dc:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80168e0:	e9cd 7402 	strd	r7, r4, [sp, #8]
 80168e4:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 80168e8:	9401      	str	r4, [sp, #4]
 80168ea:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 80168ee:	9400      	str	r4, [sp, #0]
 80168f0:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 80168f2:	4629      	mov	r1, r5
 80168f4:	47a0      	blx	r4
 80168f6:	b007      	add	sp, #28
 80168f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80168fa:	f010 0f02 	tst.w	r0, #2
 80168fe:	e7e7      	b.n	80168d0 <_ZN8touchgfx8LCD24bpp8fillRectERKNS_4RectENS_9colortypeEh+0x3c>
 8016900:	6803      	ldr	r3, [r0, #0]
 8016902:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016904:	4798      	blx	r3
 8016906:	4b08      	ldr	r3, [pc, #32]	; (8016928 <_ZN8touchgfx8LCD24bpp8fillRectERKNS_4RectENS_9colortypeEh+0x94>)
 8016908:	4601      	mov	r1, r0
 801690a:	4630      	mov	r0, r6
 801690c:	881a      	ldrh	r2, [r3, #0]
 801690e:	6833      	ldr	r3, [r6, #0]
 8016910:	e9cd 5700 	strd	r5, r7, [sp]
 8016914:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8016916:	ab04      	add	r3, sp, #16
 8016918:	47a8      	blx	r5
 801691a:	6820      	ldr	r0, [r4, #0]
 801691c:	6803      	ldr	r3, [r0, #0]
 801691e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016920:	4798      	blx	r3
 8016922:	e7e8      	b.n	80168f6 <_ZN8touchgfx8LCD24bpp8fillRectERKNS_4RectENS_9colortypeEh+0x62>
 8016924:	2400e07c 	.word	0x2400e07c
 8016928:	2400e076 	.word	0x2400e076

0801692c <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801692c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8016930:	b08b      	sub	sp, #44	; 0x2c
 8016932:	460d      	mov	r5, r1
 8016934:	4616      	mov	r6, r2
 8016936:	f89d 8048 	ldrb.w	r8, [sp, #72]	; 0x48
 801693a:	f1b8 0f00 	cmp.w	r8, #0
 801693e:	d047      	beq.n	80169d0 <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa4>
 8016940:	6810      	ldr	r0, [r2, #0]
 8016942:	ac06      	add	r4, sp, #24
 8016944:	6851      	ldr	r1, [r2, #4]
 8016946:	4f51      	ldr	r7, [pc, #324]	; (8016a8c <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0x160>)
 8016948:	c403      	stmia	r4!, {r0, r1}
 801694a:	6818      	ldr	r0, [r3, #0]
 801694c:	ac08      	add	r4, sp, #32
 801694e:	6859      	ldr	r1, [r3, #4]
 8016950:	c403      	stmia	r4!, {r0, r1}
 8016952:	a806      	add	r0, sp, #24
 8016954:	f7fa fc6e 	bl	8011234 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016958:	4631      	mov	r1, r6
 801695a:	a808      	add	r0, sp, #32
 801695c:	f7fa fcae 	bl	80112bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016960:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8016964:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8016968:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 801696c:	6838      	ldr	r0, [r7, #0]
 801696e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8016972:	f9bd 6024 	ldrsh.w	r6, [sp, #36]	; 0x24
 8016976:	f9bd 4026 	ldrsh.w	r4, [sp, #38]	; 0x26
 801697a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801697e:	440d      	add	r5, r1
 8016980:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8016984:	440a      	add	r2, r1
 8016986:	f8ad 2020 	strh.w	r2, [sp, #32]
 801698a:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801698e:	4413      	add	r3, r2
 8016990:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8016994:	6803      	ldr	r3, [r0, #0]
 8016996:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016998:	4798      	blx	r3
 801699a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801699e:	d01a      	beq.n	80169d6 <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0xaa>
 80169a0:	f010 0f04 	tst.w	r0, #4
 80169a4:	6838      	ldr	r0, [r7, #0]
 80169a6:	d019      	beq.n	80169dc <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb0>
 80169a8:	2100      	movs	r1, #0
 80169aa:	6807      	ldr	r7, [r0, #0]
 80169ac:	b2a4      	uxth	r4, r4
 80169ae:	f8cd 800c 	str.w	r8, [sp, #12]
 80169b2:	b2b6      	uxth	r6, r6
 80169b4:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 80169b8:	9401      	str	r4, [sp, #4]
 80169ba:	9600      	str	r6, [sp, #0]
 80169bc:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80169c0:	e9cd 1104 	strd	r1, r1, [sp, #16]
 80169c4:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 80169c8:	9102      	str	r1, [sp, #8]
 80169ca:	4629      	mov	r1, r5
 80169cc:	6c7c      	ldr	r4, [r7, #68]	; 0x44
 80169ce:	47a0      	blx	r4
 80169d0:	b00b      	add	sp, #44	; 0x2c
 80169d2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80169d6:	f010 0f01 	tst.w	r0, #1
 80169da:	e7e3      	b.n	80169a4 <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0x78>
 80169dc:	6803      	ldr	r3, [r0, #0]
 80169de:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80169e0:	4798      	blx	r3
 80169e2:	4a2b      	ldr	r2, [pc, #172]	; (8016a90 <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0x164>)
 80169e4:	f9bd 1022 	ldrsh.w	r1, [sp, #34]	; 0x22
 80169e8:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80169ec:	8813      	ldrh	r3, [r2, #0]
 80169ee:	f9bd c020 	ldrsh.w	ip, [sp, #32]
 80169f2:	fb03 f404 	mul.w	r4, r3, r4
 80169f6:	fb03 c101 	mla	r1, r3, r1, ip
 80169fa:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80169fe:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8016a02:	4408      	add	r0, r1
 8016a04:	eb06 0146 	add.w	r1, r6, r6, lsl #1
 8016a08:	4404      	add	r4, r0
 8016a0a:	d02e      	beq.n	8016a6a <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0x13e>
 8016a0c:	f9bd 201c 	ldrsh.w	r2, [sp, #28]
 8016a10:	1b9b      	subs	r3, r3, r6
 8016a12:	f1c8 0cff 	rsb	ip, r8, #255	; 0xff
 8016a16:	1b96      	subs	r6, r2, r6
 8016a18:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8016a1c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8016a20:	42a0      	cmp	r0, r4
 8016a22:	d22d      	bcs.n	8016a80 <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0x154>
 8016a24:	eb00 0e01 	add.w	lr, r0, r1
 8016a28:	4570      	cmp	r0, lr
 8016a2a:	d210      	bcs.n	8016a4e <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0x122>
 8016a2c:	f890 9000 	ldrb.w	r9, [r0]
 8016a30:	f815 2b01 	ldrb.w	r2, [r5], #1
 8016a34:	fb19 f90c 	smulbb	r9, r9, ip
 8016a38:	fb02 9208 	mla	r2, r2, r8, r9
 8016a3c:	b292      	uxth	r2, r2
 8016a3e:	f102 0901 	add.w	r9, r2, #1
 8016a42:	eb09 2212 	add.w	r2, r9, r2, lsr #8
 8016a46:	1212      	asrs	r2, r2, #8
 8016a48:	f800 2b01 	strb.w	r2, [r0], #1
 8016a4c:	e7ec      	b.n	8016a28 <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfc>
 8016a4e:	4418      	add	r0, r3
 8016a50:	4435      	add	r5, r6
 8016a52:	e7e5      	b.n	8016a20 <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0xf4>
 8016a54:	8813      	ldrh	r3, [r2, #0]
 8016a56:	1b9b      	subs	r3, r3, r6
 8016a58:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8016a5c:	4418      	add	r0, r3
 8016a5e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8016a62:	1b9b      	subs	r3, r3, r6
 8016a64:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8016a68:	441d      	add	r5, r3
 8016a6a:	42a0      	cmp	r0, r4
 8016a6c:	d208      	bcs.n	8016a80 <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0x154>
 8016a6e:	eb00 0c01 	add.w	ip, r0, r1
 8016a72:	4560      	cmp	r0, ip
 8016a74:	d2ee      	bcs.n	8016a54 <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0x128>
 8016a76:	f815 3b01 	ldrb.w	r3, [r5], #1
 8016a7a:	f800 3b01 	strb.w	r3, [r0], #1
 8016a7e:	e7f8      	b.n	8016a72 <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0x146>
 8016a80:	6838      	ldr	r0, [r7, #0]
 8016a82:	6803      	ldr	r3, [r0, #0]
 8016a84:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016a86:	4798      	blx	r3
 8016a88:	e7a2      	b.n	80169d0 <_ZN8touchgfx8LCD24bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa4>
 8016a8a:	bf00      	nop
 8016a8c:	2400e07c 	.word	0x2400e07c
 8016a90:	2400e076 	.word	0x2400e076

08016a94 <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8016a94:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016a96:	2300      	movs	r3, #0
 8016a98:	b085      	sub	sp, #20
 8016a9a:	9300      	str	r3, [sp, #0]
 8016a9c:	4b41      	ldr	r3, [pc, #260]	; (8016ba4 <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x110>)
 8016a9e:	781b      	ldrb	r3, [r3, #0]
 8016aa0:	2b00      	cmp	r3, #0
 8016aa2:	d136      	bne.n	8016b12 <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7e>
 8016aa4:	4a40      	ldr	r2, [pc, #256]	; (8016ba8 <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x114>)
 8016aa6:	f9b2 2000 	ldrsh.w	r2, [r2]
 8016aaa:	f8ad 2004 	strh.w	r2, [sp, #4]
 8016aae:	2b00      	cmp	r3, #0
 8016ab0:	d131      	bne.n	8016b16 <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x82>
 8016ab2:	4b3e      	ldr	r3, [pc, #248]	; (8016bac <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x118>)
 8016ab4:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016ab8:	ac02      	add	r4, sp, #8
 8016aba:	6808      	ldr	r0, [r1, #0]
 8016abc:	f8ad 3006 	strh.w	r3, [sp, #6]
 8016ac0:	ab02      	add	r3, sp, #8
 8016ac2:	6849      	ldr	r1, [r1, #4]
 8016ac4:	4d3a      	ldr	r5, [pc, #232]	; (8016bb0 <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x11c>)
 8016ac6:	c303      	stmia	r3!, {r0, r1}
 8016ac8:	4669      	mov	r1, sp
 8016aca:	4620      	mov	r0, r4
 8016acc:	f7fa fbf6 	bl	80112bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016ad0:	4668      	mov	r0, sp
 8016ad2:	f7fa fbaf 	bl	8011234 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016ad6:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8016ada:	f8bd 2000 	ldrh.w	r2, [sp]
 8016ade:	462e      	mov	r6, r5
 8016ae0:	6828      	ldr	r0, [r5, #0]
 8016ae2:	4413      	add	r3, r2
 8016ae4:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8016ae8:	f8ad 3008 	strh.w	r3, [sp, #8]
 8016aec:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8016af0:	4413      	add	r3, r2
 8016af2:	f8ad 300a 	strh.w	r3, [sp, #10]
 8016af6:	6803      	ldr	r3, [r0, #0]
 8016af8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016afa:	4798      	blx	r3
 8016afc:	f010 0f01 	tst.w	r0, #1
 8016b00:	d00b      	beq.n	8016b1a <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x86>
 8016b02:	6828      	ldr	r0, [r5, #0]
 8016b04:	6803      	ldr	r3, [r0, #0]
 8016b06:	e894 0006 	ldmia.w	r4, {r1, r2}
 8016b0a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8016b0c:	4798      	blx	r3
 8016b0e:	b005      	add	sp, #20
 8016b10:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8016b12:	4a26      	ldr	r2, [pc, #152]	; (8016bac <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x118>)
 8016b14:	e7c7      	b.n	8016aa6 <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8016b16:	4b24      	ldr	r3, [pc, #144]	; (8016ba8 <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x114>)
 8016b18:	e7cc      	b.n	8016ab4 <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8016b1a:	6830      	ldr	r0, [r6, #0]
 8016b1c:	f9bd 700e 	ldrsh.w	r7, [sp, #14]
 8016b20:	6803      	ldr	r3, [r0, #0]
 8016b22:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 8016b26:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8016b28:	4798      	blx	r3
 8016b2a:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8016b2e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8016b32:	f8bd 4004 	ldrh.w	r4, [sp, #4]
 8016b36:	fb14 3402 	smlabb	r4, r4, r2, r3
 8016b3a:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8016b3e:	4404      	add	r4, r0
 8016b40:	6830      	ldr	r0, [r6, #0]
 8016b42:	6803      	ldr	r3, [r0, #0]
 8016b44:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016b46:	4798      	blx	r3
 8016b48:	4917      	ldr	r1, [pc, #92]	; (8016ba8 <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x114>)
 8016b4a:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8016b4e:	880b      	ldrh	r3, [r1, #0]
 8016b50:	f9bd c008 	ldrsh.w	ip, [sp, #8]
 8016b54:	fb03 c202 	mla	r2, r3, r2, ip
 8016b58:	437b      	muls	r3, r7
 8016b5a:	eb05 0745 	add.w	r7, r5, r5, lsl #1
 8016b5e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016b62:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8016b66:	4410      	add	r0, r2
 8016b68:	18c2      	adds	r2, r0, r3
 8016b6a:	4290      	cmp	r0, r2
 8016b6c:	d214      	bcs.n	8016b98 <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>
 8016b6e:	eb00 0c07 	add.w	ip, r0, r7
 8016b72:	4560      	cmp	r0, ip
 8016b74:	d204      	bcs.n	8016b80 <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xec>
 8016b76:	f814 3b01 	ldrb.w	r3, [r4], #1
 8016b7a:	f800 3b01 	strb.w	r3, [r0], #1
 8016b7e:	e7f8      	b.n	8016b72 <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xde>
 8016b80:	880b      	ldrh	r3, [r1, #0]
 8016b82:	1b5b      	subs	r3, r3, r5
 8016b84:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8016b88:	4418      	add	r0, r3
 8016b8a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8016b8e:	1b5b      	subs	r3, r3, r5
 8016b90:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8016b94:	441c      	add	r4, r3
 8016b96:	e7e8      	b.n	8016b6a <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd6>
 8016b98:	6830      	ldr	r0, [r6, #0]
 8016b9a:	6803      	ldr	r3, [r0, #0]
 8016b9c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016b9e:	4798      	blx	r3
 8016ba0:	e7b5      	b.n	8016b0e <_ZN8touchgfx8LCD24bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 8016ba2:	bf00      	nop
 8016ba4:	2400e074 	.word	0x2400e074
 8016ba8:	2400e076 	.word	0x2400e076
 8016bac:	2400e078 	.word	0x2400e078
 8016bb0:	2400e07c 	.word	0x2400e07c

08016bb4 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8016bb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016bb8:	4698      	mov	r8, r3
 8016bba:	4b24      	ldr	r3, [pc, #144]	; (8016c4c <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x98>)
 8016bbc:	b089      	sub	sp, #36	; 0x24
 8016bbe:	4605      	mov	r5, r0
 8016bc0:	681b      	ldr	r3, [r3, #0]
 8016bc2:	468a      	mov	sl, r1
 8016bc4:	4693      	mov	fp, r2
 8016bc6:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8016bca:	2b02      	cmp	r3, #2
 8016bcc:	d106      	bne.n	8016bdc <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x28>
 8016bce:	4b20      	ldr	r3, [pc, #128]	; (8016c50 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x9c>)
 8016bd0:	f240 11eb 	movw	r1, #491	; 0x1eb
 8016bd4:	4a1f      	ldr	r2, [pc, #124]	; (8016c54 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xa0>)
 8016bd6:	4820      	ldr	r0, [pc, #128]	; (8016c58 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xa4>)
 8016bd8:	f008 fffe 	bl	801fbd8 <__assert_func>
 8016bdc:	ac08      	add	r4, sp, #32
 8016bde:	f824 8d0c 	strh.w	r8, [r4, #-12]!
 8016be2:	4620      	mov	r0, r4
 8016be4:	f7fe f932 	bl	8014e4c <_ZNK8touchgfx6Bitmap9getFormatEv>
 8016be8:	682b      	ldr	r3, [r5, #0]
 8016bea:	4606      	mov	r6, r0
 8016bec:	4628      	mov	r0, r5
 8016bee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016bf0:	4798      	blx	r3
 8016bf2:	4286      	cmp	r6, r0
 8016bf4:	d004      	beq.n	8016c00 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x4c>
 8016bf6:	4b19      	ldr	r3, [pc, #100]	; (8016c5c <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xa8>)
 8016bf8:	f240 11ed 	movw	r1, #493	; 0x1ed
 8016bfc:	4a15      	ldr	r2, [pc, #84]	; (8016c54 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xa0>)
 8016bfe:	e7ea      	b.n	8016bd6 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x22>
 8016c00:	4620      	mov	r0, r4
 8016c02:	f7fe f899 	bl	8014d38 <_ZNK8touchgfx6Bitmap7getDataEv>
 8016c06:	4606      	mov	r6, r0
 8016c08:	b920      	cbnz	r0, 8016c14 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x60>
 8016c0a:	4b15      	ldr	r3, [pc, #84]	; (8016c60 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xac>)
 8016c0c:	f240 11ef 	movw	r1, #495	; 0x1ef
 8016c10:	4a10      	ldr	r2, [pc, #64]	; (8016c54 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xa0>)
 8016c12:	e7e0      	b.n	8016bd6 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x22>
 8016c14:	682b      	ldr	r3, [r5, #0]
 8016c16:	4620      	mov	r0, r4
 8016c18:	f8d3 9018 	ldr.w	r9, [r3, #24]
 8016c1c:	f7fd ff70 	bl	8014b00 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8016c20:	4607      	mov	r7, r0
 8016c22:	4620      	mov	r0, r4
 8016c24:	f7fd ffb0 	bl	8014b88 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8016c28:	465b      	mov	r3, fp
 8016c2a:	b200      	sxth	r0, r0
 8016c2c:	4652      	mov	r2, sl
 8016c2e:	b23f      	sxth	r7, r7
 8016c30:	4629      	mov	r1, r5
 8016c32:	9002      	str	r0, [sp, #8]
 8016c34:	a806      	add	r0, sp, #24
 8016c36:	e9cd 6700 	strd	r6, r7, [sp]
 8016c3a:	47c8      	blx	r9
 8016c3c:	a906      	add	r1, sp, #24
 8016c3e:	4640      	mov	r0, r8
 8016c40:	f7fd fe26 	bl	8014890 <_ZN8touchgfx6Bitmap25dynamicBitmapAddSolidRectEtRKNS_4RectE>
 8016c44:	4630      	mov	r0, r6
 8016c46:	b009      	add	sp, #36	; 0x24
 8016c48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016c4c:	2400e07c 	.word	0x2400e07c
 8016c50:	08024c95 	.word	0x08024c95
 8016c54:	08025480 	.word	0x08025480
 8016c58:	08024c15 	.word	0x08024c15
 8016c5c:	08024d47 	.word	0x08024d47
 8016c60:	08024d9c 	.word	0x08024d9c

08016c64 <_ZN8touchgfx8LCD24bppD0Ev>:
 8016c64:	b510      	push	{r4, lr}
 8016c66:	4604      	mov	r4, r0
 8016c68:	2158      	movs	r1, #88	; 0x58
 8016c6a:	f008 fdd8 	bl	801f81e <_ZdlPvj>
 8016c6e:	4620      	mov	r0, r4
 8016c70:	bd10      	pop	{r4, pc}

08016c72 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8016c72:	b510      	push	{r4, lr}
 8016c74:	4604      	mov	r4, r0
 8016c76:	2104      	movs	r1, #4
 8016c78:	f008 fdd1 	bl	801f81e <_ZdlPvj>
 8016c7c:	4620      	mov	r0, r4
 8016c7e:	bd10      	pop	{r4, pc}

08016c80 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8016c80:	b510      	push	{r4, lr}
 8016c82:	4604      	mov	r4, r0
 8016c84:	2104      	movs	r1, #4
 8016c86:	f008 fdca 	bl	801f81e <_ZdlPvj>
 8016c8a:	4620      	mov	r0, r4
 8016c8c:	bd10      	pop	{r4, pc}

08016c8e <_ZN8touchgfx8LCD24bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8016c8e:	b510      	push	{r4, lr}
 8016c90:	4604      	mov	r4, r0
 8016c92:	2104      	movs	r1, #4
 8016c94:	f008 fdc3 	bl	801f81e <_ZdlPvj>
 8016c98:	4620      	mov	r0, r4
 8016c9a:	bd10      	pop	{r4, pc}

08016c9c <_ZN8touchgfx8LCD24bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8016c9c:	b510      	push	{r4, lr}
 8016c9e:	4604      	mov	r4, r0
 8016ca0:	2104      	movs	r1, #4
 8016ca2:	f008 fdbc 	bl	801f81e <_ZdlPvj>
 8016ca6:	4620      	mov	r0, r4
 8016ca8:	bd10      	pop	{r4, pc}

08016caa <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8016caa:	b510      	push	{r4, lr}
 8016cac:	4604      	mov	r4, r0
 8016cae:	2104      	movs	r1, #4
 8016cb0:	f008 fdb5 	bl	801f81e <_ZdlPvj>
 8016cb4:	4620      	mov	r0, r4
 8016cb6:	bd10      	pop	{r4, pc}

08016cb8 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8016cb8:	b510      	push	{r4, lr}
 8016cba:	4604      	mov	r4, r0
 8016cbc:	2104      	movs	r1, #4
 8016cbe:	f008 fdae 	bl	801f81e <_ZdlPvj>
 8016cc2:	4620      	mov	r0, r4
 8016cc4:	bd10      	pop	{r4, pc}

08016cc6 <_ZN8touchgfx8LCD24bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8016cc6:	b510      	push	{r4, lr}
 8016cc8:	4604      	mov	r4, r0
 8016cca:	2104      	movs	r1, #4
 8016ccc:	f008 fda7 	bl	801f81e <_ZdlPvj>
 8016cd0:	4620      	mov	r0, r4
 8016cd2:	bd10      	pop	{r4, pc}

08016cd4 <_ZN8touchgfx8LCD24bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8016cd4:	b510      	push	{r4, lr}
 8016cd6:	4604      	mov	r4, r0
 8016cd8:	2104      	movs	r1, #4
 8016cda:	f008 fda0 	bl	801f81e <_ZdlPvj>
 8016cde:	4620      	mov	r0, r4
 8016ce0:	bd10      	pop	{r4, pc}

08016ce2 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8016ce2:	b510      	push	{r4, lr}
 8016ce4:	4604      	mov	r4, r0
 8016ce6:	2104      	movs	r1, #4
 8016ce8:	f008 fd99 	bl	801f81e <_ZdlPvj>
 8016cec:	4620      	mov	r0, r4
 8016cee:	bd10      	pop	{r4, pc}

08016cf0 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8016cf0:	b510      	push	{r4, lr}
 8016cf2:	4604      	mov	r4, r0
 8016cf4:	2104      	movs	r1, #4
 8016cf6:	f008 fd92 	bl	801f81e <_ZdlPvj>
 8016cfa:	4620      	mov	r0, r4
 8016cfc:	bd10      	pop	{r4, pc}

08016cfe <_ZN8touchgfx8LCD24bpp48TextureMapper_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8016cfe:	b510      	push	{r4, lr}
 8016d00:	4604      	mov	r4, r0
 8016d02:	2104      	movs	r1, #4
 8016d04:	f008 fd8b 	bl	801f81e <_ZdlPvj>
 8016d08:	4620      	mov	r0, r4
 8016d0a:	bd10      	pop	{r4, pc}

08016d0c <_ZN8touchgfx8LCD24bpp46TextureMapper_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8016d0c:	b510      	push	{r4, lr}
 8016d0e:	4604      	mov	r4, r0
 8016d10:	2104      	movs	r1, #4
 8016d12:	f008 fd84 	bl	801f81e <_ZdlPvj>
 8016d16:	4620      	mov	r0, r4
 8016d18:	bd10      	pop	{r4, pc}

08016d1a <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8016d1a:	b510      	push	{r4, lr}
 8016d1c:	4604      	mov	r4, r0
 8016d1e:	2104      	movs	r1, #4
 8016d20:	f008 fd7d 	bl	801f81e <_ZdlPvj>
 8016d24:	4620      	mov	r0, r4
 8016d26:	bd10      	pop	{r4, pc}

08016d28 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8016d28:	b510      	push	{r4, lr}
 8016d2a:	4604      	mov	r4, r0
 8016d2c:	2104      	movs	r1, #4
 8016d2e:	f008 fd76 	bl	801f81e <_ZdlPvj>
 8016d32:	4620      	mov	r0, r4
 8016d34:	bd10      	pop	{r4, pc}

08016d36 <_ZN8touchgfx8LCD24bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8016d36:	b510      	push	{r4, lr}
 8016d38:	4604      	mov	r4, r0
 8016d3a:	2104      	movs	r1, #4
 8016d3c:	f008 fd6f 	bl	801f81e <_ZdlPvj>
 8016d40:	4620      	mov	r0, r4
 8016d42:	bd10      	pop	{r4, pc}

08016d44 <_ZN8touchgfx8LCD24bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8016d44:	b510      	push	{r4, lr}
 8016d46:	4604      	mov	r4, r0
 8016d48:	2104      	movs	r1, #4
 8016d4a:	f008 fd68 	bl	801f81e <_ZdlPvj>
 8016d4e:	4620      	mov	r0, r4
 8016d50:	bd10      	pop	{r4, pc}

08016d52 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8016d52:	b510      	push	{r4, lr}
 8016d54:	4604      	mov	r4, r0
 8016d56:	2104      	movs	r1, #4
 8016d58:	f008 fd61 	bl	801f81e <_ZdlPvj>
 8016d5c:	4620      	mov	r0, r4
 8016d5e:	bd10      	pop	{r4, pc}

08016d60 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8016d60:	b510      	push	{r4, lr}
 8016d62:	4604      	mov	r4, r0
 8016d64:	2104      	movs	r1, #4
 8016d66:	f008 fd5a 	bl	801f81e <_ZdlPvj>
 8016d6a:	4620      	mov	r0, r4
 8016d6c:	bd10      	pop	{r4, pc}

08016d6e <_ZN8touchgfx8LCD24bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8016d6e:	b510      	push	{r4, lr}
 8016d70:	4604      	mov	r4, r0
 8016d72:	2104      	movs	r1, #4
 8016d74:	f008 fd53 	bl	801f81e <_ZdlPvj>
 8016d78:	4620      	mov	r0, r4
 8016d7a:	bd10      	pop	{r4, pc}

08016d7c <_ZN8touchgfx8LCD24bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8016d7c:	b510      	push	{r4, lr}
 8016d7e:	4604      	mov	r4, r0
 8016d80:	2104      	movs	r1, #4
 8016d82:	f008 fd4c 	bl	801f81e <_ZdlPvj>
 8016d86:	4620      	mov	r0, r4
 8016d88:	bd10      	pop	{r4, pc}

08016d8a <_ZN8touchgfx8LCD24bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8016d8a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016d8e:	f89d 001c 	ldrb.w	r0, [sp, #28]
 8016d92:	9c06      	ldr	r4, [sp, #24]
 8016d94:	2800      	cmp	r0, #0
 8016d96:	d06e      	beq.n	8016e76 <_ZN8touchgfx8LCD24bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xec>
 8016d98:	f9b3 5004 	ldrsh.w	r5, [r3, #4]
 8016d9c:	2d00      	cmp	r5, #0
 8016d9e:	dd6a      	ble.n	8016e76 <_ZN8touchgfx8LCD24bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xec>
 8016da0:	f9b3 c006 	ldrsh.w	ip, [r3, #6]
 8016da4:	f1bc 0f00 	cmp.w	ip, #0
 8016da8:	dd65      	ble.n	8016e76 <_ZN8touchgfx8LCD24bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xec>
 8016daa:	f9b3 6002 	ldrsh.w	r6, [r3, #2]
 8016dae:	28ff      	cmp	r0, #255	; 0xff
 8016db0:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016db4:	f3c4 2707 	ubfx	r7, r4, #8, #8
 8016db8:	fb02 3306 	mla	r3, r2, r6, r3
 8016dbc:	f3c4 4607 	ubfx	r6, r4, #16, #8
 8016dc0:	b2e4      	uxtb	r4, r4
 8016dc2:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8016dc6:	4419      	add	r1, r3
 8016dc8:	fb02 f30c 	mul.w	r3, r2, ip
 8016dcc:	eba2 0205 	sub.w	r2, r2, r5
 8016dd0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8016dd4:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8016dd8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016ddc:	440b      	add	r3, r1
 8016dde:	d03e      	beq.n	8016e5e <_ZN8touchgfx8LCD24bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xd4>
 8016de0:	fa1f fc80 	uxth.w	ip, r0
 8016de4:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 8016de8:	fb06 f60c 	mul.w	r6, r6, ip
 8016dec:	b280      	uxth	r0, r0
 8016dee:	fb07 f70c 	mul.w	r7, r7, ip
 8016df2:	fb04 f40c 	mul.w	r4, r4, ip
 8016df6:	4299      	cmp	r1, r3
 8016df8:	d23d      	bcs.n	8016e76 <_ZN8touchgfx8LCD24bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xec>
 8016dfa:	eb01 0c05 	add.w	ip, r1, r5
 8016dfe:	458c      	cmp	ip, r1
 8016e00:	f101 0e03 	add.w	lr, r1, #3
 8016e04:	d928      	bls.n	8016e58 <_ZN8touchgfx8LCD24bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xce>
 8016e06:	f81e 1c03 	ldrb.w	r1, [lr, #-3]
 8016e0a:	fb11 f100 	smulbb	r1, r1, r0
 8016e0e:	4421      	add	r1, r4
 8016e10:	b289      	uxth	r1, r1
 8016e12:	f101 0801 	add.w	r8, r1, #1
 8016e16:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8016e1a:	1209      	asrs	r1, r1, #8
 8016e1c:	f80e 1c03 	strb.w	r1, [lr, #-3]
 8016e20:	f81e 1c02 	ldrb.w	r1, [lr, #-2]
 8016e24:	fb11 f100 	smulbb	r1, r1, r0
 8016e28:	4439      	add	r1, r7
 8016e2a:	b289      	uxth	r1, r1
 8016e2c:	f101 0801 	add.w	r8, r1, #1
 8016e30:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8016e34:	1209      	asrs	r1, r1, #8
 8016e36:	f80e 1c02 	strb.w	r1, [lr, #-2]
 8016e3a:	f81e 1c01 	ldrb.w	r1, [lr, #-1]
 8016e3e:	fb11 f100 	smulbb	r1, r1, r0
 8016e42:	4431      	add	r1, r6
 8016e44:	b289      	uxth	r1, r1
 8016e46:	f101 0801 	add.w	r8, r1, #1
 8016e4a:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8016e4e:	1209      	asrs	r1, r1, #8
 8016e50:	f80e 1c01 	strb.w	r1, [lr, #-1]
 8016e54:	4671      	mov	r1, lr
 8016e56:	e7d2      	b.n	8016dfe <_ZN8touchgfx8LCD24bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x74>
 8016e58:	4411      	add	r1, r2
 8016e5a:	e7cc      	b.n	8016df6 <_ZN8touchgfx8LCD24bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6c>
 8016e5c:	4411      	add	r1, r2
 8016e5e:	4299      	cmp	r1, r3
 8016e60:	d209      	bcs.n	8016e76 <_ZN8touchgfx8LCD24bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xec>
 8016e62:	1948      	adds	r0, r1, r5
 8016e64:	4281      	cmp	r1, r0
 8016e66:	d2f9      	bcs.n	8016e5c <_ZN8touchgfx8LCD24bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xd2>
 8016e68:	700c      	strb	r4, [r1, #0]
 8016e6a:	3103      	adds	r1, #3
 8016e6c:	f801 7c02 	strb.w	r7, [r1, #-2]
 8016e70:	f801 6c01 	strb.w	r6, [r1, #-1]
 8016e74:	e7f6      	b.n	8016e64 <_ZN8touchgfx8LCD24bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xda>
 8016e76:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08016e7c <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8016e7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016e80:	b093      	sub	sp, #76	; 0x4c
 8016e82:	4699      	mov	r9, r3
 8016e84:	4605      	mov	r5, r0
 8016e86:	460e      	mov	r6, r1
 8016e88:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 8016e8c:	4617      	mov	r7, r2
 8016e8e:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8016e90:	9304      	str	r3, [sp, #16]
 8016e92:	4b8c      	ldr	r3, [pc, #560]	; (80170c4 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x248>)
 8016e94:	f9bd 8078 	ldrsh.w	r8, [sp, #120]	; 0x78
 8016e98:	681b      	ldr	r3, [r3, #0]
 8016e9a:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8016e9e:	2b02      	cmp	r3, #2
 8016ea0:	d106      	bne.n	8016eb0 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x34>
 8016ea2:	4b89      	ldr	r3, [pc, #548]	; (80170c8 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x24c>)
 8016ea4:	f240 11f7 	movw	r1, #503	; 0x1f7
 8016ea8:	4a88      	ldr	r2, [pc, #544]	; (80170cc <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x250>)
 8016eaa:	4889      	ldr	r0, [pc, #548]	; (80170d0 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x254>)
 8016eac:	f008 fe94 	bl	801fbd8 <__assert_func>
 8016eb0:	b924      	cbnz	r4, 8016ebc <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x40>
 8016eb2:	4b88      	ldr	r3, [pc, #544]	; (80170d4 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x258>)
 8016eb4:	f44f 71fc 	mov.w	r1, #504	; 0x1f8
 8016eb8:	4a84      	ldr	r2, [pc, #528]	; (80170cc <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x250>)
 8016eba:	e7f6      	b.n	8016eaa <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x2e>
 8016ebc:	f9b9 3002 	ldrsh.w	r3, [r9, #2]
 8016ec0:	4649      	mov	r1, r9
 8016ec2:	f9b9 2000 	ldrsh.w	r2, [r9]
 8016ec6:	a80c      	add	r0, sp, #48	; 0x30
 8016ec8:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8016ecc:	9b04      	ldr	r3, [sp, #16]
 8016ece:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8016ed2:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8016ed6:	f8ad 8036 	strh.w	r8, [sp, #54]	; 0x36
 8016eda:	f7f5 fba3 	bl	800c624 <_ZN8touchgfx4RectaNERKS0_>
 8016ede:	4639      	mov	r1, r7
 8016ee0:	a80c      	add	r0, sp, #48	; 0x30
 8016ee2:	f7f5 fb9f 	bl	800c624 <_ZN8touchgfx4RectaNERKS0_>
 8016ee6:	4b7c      	ldr	r3, [pc, #496]	; (80170d8 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x25c>)
 8016ee8:	8818      	ldrh	r0, [r3, #0]
 8016eea:	4b7c      	ldr	r3, [pc, #496]	; (80170dc <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x260>)
 8016eec:	fa0f fc80 	sxth.w	ip, r0
 8016ef0:	8819      	ldrh	r1, [r3, #0]
 8016ef2:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8016ef6:	b20f      	sxth	r7, r1
 8016ef8:	2b00      	cmp	r3, #0
 8016efa:	da07      	bge.n	8016f0c <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x90>
 8016efc:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 8016f00:	4413      	add	r3, r2
 8016f02:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8016f06:	2300      	movs	r3, #0
 8016f08:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8016f0c:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8016f10:	f9bd e034 	ldrsh.w	lr, [sp, #52]	; 0x34
 8016f14:	ebac 0302 	sub.w	r3, ip, r2
 8016f18:	459e      	cmp	lr, r3
 8016f1a:	bfc4      	itt	gt
 8016f1c:	1a83      	subgt	r3, r0, r2
 8016f1e:	f8ad 3034 	strhgt.w	r3, [sp, #52]	; 0x34
 8016f22:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8016f26:	2b00      	cmp	r3, #0
 8016f28:	da07      	bge.n	8016f3a <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xbe>
 8016f2a:	f8bd c036 	ldrh.w	ip, [sp, #54]	; 0x36
 8016f2e:	4463      	add	r3, ip
 8016f30:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8016f34:	2300      	movs	r3, #0
 8016f36:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8016f3a:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8016f3e:	f9bd c036 	ldrsh.w	ip, [sp, #54]	; 0x36
 8016f42:	1aff      	subs	r7, r7, r3
 8016f44:	45bc      	cmp	ip, r7
 8016f46:	f8df c19c 	ldr.w	ip, [pc, #412]	; 80170e4 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x268>
 8016f4a:	bfc8      	it	gt
 8016f4c:	1acf      	subgt	r7, r1, r3
 8016f4e:	f89c c000 	ldrb.w	ip, [ip]
 8016f52:	bfc8      	it	gt
 8016f54:	f8ad 7036 	strhgt.w	r7, [sp, #54]	; 0x36
 8016f58:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 8016f5c:	f1bc 0f00 	cmp.w	ip, #0
 8016f60:	d174      	bne.n	801704c <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1d0>
 8016f62:	4287      	cmp	r7, r0
 8016f64:	bf14      	ite	ne
 8016f66:	2100      	movne	r1, #0
 8016f68:	2101      	moveq	r1, #1
 8016f6a:	2f00      	cmp	r7, #0
 8016f6c:	9107      	str	r1, [sp, #28]
 8016f6e:	dd71      	ble.n	8017054 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1d8>
 8016f70:	f9bd 1036 	ldrsh.w	r1, [sp, #54]	; 0x36
 8016f74:	2900      	cmp	r1, #0
 8016f76:	9103      	str	r1, [sp, #12]
 8016f78:	dd6c      	ble.n	8017054 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1d8>
 8016f7a:	f8b9 1000 	ldrh.w	r1, [r9]
 8016f7e:	a80e      	add	r0, sp, #56	; 0x38
 8016f80:	f8ad 8046 	strh.w	r8, [sp, #70]	; 0x46
 8016f84:	f04f 0803 	mov.w	r8, #3
 8016f88:	1a52      	subs	r2, r2, r1
 8016f8a:	a910      	add	r1, sp, #64	; 0x40
 8016f8c:	f8ad 703c 	strh.w	r7, [sp, #60]	; 0x3c
 8016f90:	b212      	sxth	r2, r2
 8016f92:	9205      	str	r2, [sp, #20]
 8016f94:	f8b9 2002 	ldrh.w	r2, [r9, #2]
 8016f98:	f8df 9128 	ldr.w	r9, [pc, #296]	; 80170c4 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x248>
 8016f9c:	1a9b      	subs	r3, r3, r2
 8016f9e:	b21b      	sxth	r3, r3
 8016fa0:	9306      	str	r3, [sp, #24]
 8016fa2:	9b05      	ldr	r3, [sp, #20]
 8016fa4:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8016fa8:	9b06      	ldr	r3, [sp, #24]
 8016faa:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8016fae:	9b03      	ldr	r3, [sp, #12]
 8016fb0:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8016fb4:	2300      	movs	r3, #0
 8016fb6:	9310      	str	r3, [sp, #64]	; 0x40
 8016fb8:	9b04      	ldr	r3, [sp, #16]
 8016fba:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8016fbe:	f7fa f97d 	bl	80112bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016fc2:	a90c      	add	r1, sp, #48	; 0x30
 8016fc4:	4608      	mov	r0, r1
 8016fc6:	910b      	str	r1, [sp, #44]	; 0x2c
 8016fc8:	f7fa f934 	bl	8011234 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016fcc:	a810      	add	r0, sp, #64	; 0x40
 8016fce:	f7fa f931 	bl	8011234 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016fd2:	4b43      	ldr	r3, [pc, #268]	; (80170e0 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x264>)
 8016fd4:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 8016fd8:	4630      	mov	r0, r6
 8016fda:	881b      	ldrh	r3, [r3, #0]
 8016fdc:	9308      	str	r3, [sp, #32]
 8016fde:	eb0b 034b 	add.w	r3, fp, fp, lsl #1
 8016fe2:	b21b      	sxth	r3, r3
 8016fe4:	9302      	str	r3, [sp, #8]
 8016fe6:	6833      	ldr	r3, [r6, #0]
 8016fe8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8016fea:	4798      	blx	r3
 8016fec:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 8016ff0:	9a02      	ldr	r2, [sp, #8]
 8016ff2:	4682      	mov	sl, r0
 8016ff4:	f8d9 0000 	ldr.w	r0, [r9]
 8016ff8:	fb13 f202 	smulbb	r2, r3, r2
 8016ffc:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8017000:	fb13 2308 	smlabb	r3, r3, r8, r2
 8017004:	441c      	add	r4, r3
 8017006:	6803      	ldr	r3, [r0, #0]
 8017008:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801700a:	4798      	blx	r3
 801700c:	900a      	str	r0, [sp, #40]	; 0x28
 801700e:	f8d9 0000 	ldr.w	r0, [r9]
 8017012:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8017016:	6802      	ldr	r2, [r0, #0]
 8017018:	9309      	str	r3, [sp, #36]	; 0x24
 801701a:	6b92      	ldr	r2, [r2, #56]	; 0x38
 801701c:	f9bd 6032 	ldrsh.w	r6, [sp, #50]	; 0x32
 8017020:	4790      	blx	r2
 8017022:	f010 0f01 	tst.w	r0, #1
 8017026:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017028:	d01d      	beq.n	8017066 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1ea>
 801702a:	f8d9 0000 	ldr.w	r0, [r9]
 801702e:	9a04      	ldr	r2, [sp, #16]
 8017030:	6803      	ldr	r3, [r0, #0]
 8017032:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8017034:	9200      	str	r2, [sp, #0]
 8017036:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8017038:	4623      	mov	r3, r4
 801703a:	c906      	ldmia	r1, {r1, r2}
 801703c:	47b0      	blx	r6
 801703e:	9b05      	ldr	r3, [sp, #20]
 8017040:	80af      	strh	r7, [r5, #4]
 8017042:	802b      	strh	r3, [r5, #0]
 8017044:	9b06      	ldr	r3, [sp, #24]
 8017046:	806b      	strh	r3, [r5, #2]
 8017048:	9b03      	ldr	r3, [sp, #12]
 801704a:	e007      	b.n	801705c <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e0>
 801704c:	f9bd 0036 	ldrsh.w	r0, [sp, #54]	; 0x36
 8017050:	4288      	cmp	r0, r1
 8017052:	e787      	b.n	8016f64 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe8>
 8017054:	2300      	movs	r3, #0
 8017056:	802b      	strh	r3, [r5, #0]
 8017058:	806b      	strh	r3, [r5, #2]
 801705a:	80ab      	strh	r3, [r5, #4]
 801705c:	4628      	mov	r0, r5
 801705e:	80eb      	strh	r3, [r5, #6]
 8017060:	b013      	add	sp, #76	; 0x4c
 8017062:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017066:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8017068:	fb0a f606 	mul.w	r6, sl, r6
 801706c:	fb12 6608 	smlabb	r6, r2, r8, r6
 8017070:	9a07      	ldr	r2, [sp, #28]
 8017072:	441e      	add	r6, r3
 8017074:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	; 0x3e
 8017078:	b16a      	cbz	r2, 8017096 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21a>
 801707a:	9a08      	ldr	r2, [sp, #32]
 801707c:	4593      	cmp	fp, r2
 801707e:	d10a      	bne.n	8017096 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21a>
 8017080:	f8d9 0000 	ldr.w	r0, [r9]
 8017084:	fb03 f30a 	mul.w	r3, r3, sl
 8017088:	4621      	mov	r1, r4
 801708a:	6802      	ldr	r2, [r0, #0]
 801708c:	f8d2 9034 	ldr.w	r9, [r2, #52]	; 0x34
 8017090:	4632      	mov	r2, r6
 8017092:	47c8      	blx	r9
 8017094:	e7d3      	b.n	801703e <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1c2>
 8017096:	9a02      	ldr	r2, [sp, #8]
 8017098:	f8df b028 	ldr.w	fp, [pc, #40]	; 80170c4 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x248>
 801709c:	fb02 4803 	mla	r8, r2, r3, r4
 80170a0:	4544      	cmp	r4, r8
 80170a2:	d2cc      	bcs.n	801703e <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1c2>
 80170a4:	f8db 0000 	ldr.w	r0, [fp]
 80170a8:	4621      	mov	r1, r4
 80170aa:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 80170ae:	6802      	ldr	r2, [r0, #0]
 80170b0:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80170b4:	f8d2 9034 	ldr.w	r9, [r2, #52]	; 0x34
 80170b8:	4632      	mov	r2, r6
 80170ba:	47c8      	blx	r9
 80170bc:	9b02      	ldr	r3, [sp, #8]
 80170be:	4456      	add	r6, sl
 80170c0:	441c      	add	r4, r3
 80170c2:	e7ed      	b.n	80170a0 <_ZN8touchgfx8LCD24bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 80170c4:	2400e07c 	.word	0x2400e07c
 80170c8:	08024c95 	.word	0x08024c95
 80170cc:	080253ed 	.word	0x080253ed
 80170d0:	08024c15 	.word	0x08024c15
 80170d4:	08024c47 	.word	0x08024c47
 80170d8:	2400e070 	.word	0x2400e070
 80170dc:	2400e072 	.word	0x2400e072
 80170e0:	2400e076 	.word	0x2400e076
 80170e4:	2400e074 	.word	0x2400e074

080170e8 <_ZN8touchgfx8LCD24bppC1Ev>:
 80170e8:	2200      	movs	r2, #0
 80170ea:	490c      	ldr	r1, [pc, #48]	; (801711c <_ZN8touchgfx8LCD24bppC1Ev+0x34>)
 80170ec:	6042      	str	r2, [r0, #4]
 80170ee:	6001      	str	r1, [r0, #0]
 80170f0:	e9c0 2202 	strd	r2, r2, [r0, #8]
 80170f4:	e9c0 2204 	strd	r2, r2, [r0, #16]
 80170f8:	e9c0 2206 	strd	r2, r2, [r0, #24]
 80170fc:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8017100:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 8017104:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 8017108:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801710c:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 8017110:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 8017114:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 8017118:	4770      	bx	lr
 801711a:	bf00      	nop
 801711c:	08025030 	.word	0x08025030

08017120 <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8017120:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017124:	b091      	sub	sp, #68	; 0x44
 8017126:	880d      	ldrh	r5, [r1, #0]
 8017128:	4607      	mov	r7, r0
 801712a:	4688      	mov	r8, r1
 801712c:	4616      	mov	r6, r2
 801712e:	f89d 9068 	ldrb.w	r9, [sp, #104]	; 0x68
 8017132:	b12d      	cbz	r5, 8017140 <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x20>
 8017134:	4b69      	ldr	r3, [pc, #420]	; (80172dc <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1bc>)
 8017136:	215e      	movs	r1, #94	; 0x5e
 8017138:	4a69      	ldr	r2, [pc, #420]	; (80172e0 <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c0>)
 801713a:	486a      	ldr	r0, [pc, #424]	; (80172e4 <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801713c:	f008 fd4c 	bl	801fbd8 <__assert_func>
 8017140:	6810      	ldr	r0, [r2, #0]
 8017142:	ac0c      	add	r4, sp, #48	; 0x30
 8017144:	6851      	ldr	r1, [r2, #4]
 8017146:	f8df a1a0 	ldr.w	sl, [pc, #416]	; 80172e8 <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>
 801714a:	f8df b1a0 	ldr.w	fp, [pc, #416]	; 80172ec <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1cc>
 801714e:	c403      	stmia	r4!, {r0, r1}
 8017150:	6818      	ldr	r0, [r3, #0]
 8017152:	ac0e      	add	r4, sp, #56	; 0x38
 8017154:	6859      	ldr	r1, [r3, #4]
 8017156:	c403      	stmia	r4!, {r0, r1}
 8017158:	a80c      	add	r0, sp, #48	; 0x30
 801715a:	f7fa f86b 	bl	8011234 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801715e:	4631      	mov	r1, r6
 8017160:	a80e      	add	r0, sp, #56	; 0x38
 8017162:	f7fa f8ab 	bl	80112bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017166:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801716a:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801716e:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8017172:	f8da 0000 	ldr.w	r0, [sl]
 8017176:	fb11 2103 	smlabb	r1, r1, r3, r2
 801717a:	f9bd 403c 	ldrsh.w	r4, [sp, #60]	; 0x3c
 801717e:	f9bd 603e 	ldrsh.w	r6, [sp, #62]	; 0x3e
 8017182:	440f      	add	r7, r1
 8017184:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 8017188:	440a      	add	r2, r1
 801718a:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801718e:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8017192:	4413      	add	r3, r2
 8017194:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8017198:	6803      	ldr	r3, [r0, #0]
 801719a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801719c:	4798      	blx	r3
 801719e:	f010 0f80 	tst.w	r0, #128	; 0x80
 80171a2:	f8da 0000 	ldr.w	r0, [sl]
 80171a6:	d01e      	beq.n	80171e6 <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xc6>
 80171a8:	6801      	ldr	r1, [r0, #0]
 80171aa:	2201      	movs	r2, #1
 80171ac:	9509      	str	r5, [sp, #36]	; 0x24
 80171ae:	250b      	movs	r5, #11
 80171b0:	b2a4      	uxth	r4, r4
 80171b2:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80171b6:	b2b6      	uxth	r6, r6
 80171b8:	e9cd 5207 	strd	r5, r2, [sp, #28]
 80171bc:	f8bb 5000 	ldrh.w	r5, [fp]
 80171c0:	f8cd 9010 	str.w	r9, [sp, #16]
 80171c4:	9602      	str	r6, [sp, #8]
 80171c6:	9401      	str	r4, [sp, #4]
 80171c8:	e9cd 2505 	strd	r2, r5, [sp, #20]
 80171cc:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 80171d0:	9203      	str	r2, [sp, #12]
 80171d2:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 80171d6:	9200      	str	r2, [sp, #0]
 80171d8:	4642      	mov	r2, r8
 80171da:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 80171dc:	4639      	mov	r1, r7
 80171de:	47a0      	blx	r4
 80171e0:	b011      	add	sp, #68	; 0x44
 80171e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80171e6:	6803      	ldr	r3, [r0, #0]
 80171e8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80171ea:	4798      	blx	r3
 80171ec:	f8bb 5000 	ldrh.w	r5, [fp]
 80171f0:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 80171f4:	f04f 0e04 	mov.w	lr, #4
 80171f8:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 80171fc:	436e      	muls	r6, r5
 80171fe:	fb05 2303 	mla	r3, r5, r3, r2
 8017202:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8017206:	1b2d      	subs	r5, r5, r4
 8017208:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801720c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8017210:	4418      	add	r0, r3
 8017212:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8017216:	1982      	adds	r2, r0, r6
 8017218:	1b1b      	subs	r3, r3, r4
 801721a:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801721e:	930b      	str	r3, [sp, #44]	; 0x2c
 8017220:	4290      	cmp	r0, r2
 8017222:	d254      	bcs.n	80172ce <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ae>
 8017224:	eb00 0a04 	add.w	sl, r0, r4
 8017228:	4550      	cmp	r0, sl
 801722a:	d24c      	bcs.n	80172c6 <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1a6>
 801722c:	f817 1b01 	ldrb.w	r1, [r7], #1
 8017230:	fb1e e101 	smlabb	r1, lr, r1, lr
 8017234:	eb08 0c01 	add.w	ip, r8, r1
 8017238:	f89c 3003 	ldrb.w	r3, [ip, #3]
 801723c:	b173      	cbz	r3, 801725c <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13c>
 801723e:	2bff      	cmp	r3, #255	; 0xff
 8017240:	f818 b001 	ldrb.w	fp, [r8, r1]
 8017244:	d10c      	bne.n	8017260 <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x140>
 8017246:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801724a:	d109      	bne.n	8017260 <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x140>
 801724c:	f880 b000 	strb.w	fp, [r0]
 8017250:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8017254:	7043      	strb	r3, [r0, #1]
 8017256:	f89c 3002 	ldrb.w	r3, [ip, #2]
 801725a:	7083      	strb	r3, [r0, #2]
 801725c:	3003      	adds	r0, #3
 801725e:	e7e3      	b.n	8017228 <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x108>
 8017260:	fb09 f103 	mul.w	r1, r9, r3
 8017264:	1c4b      	adds	r3, r1, #1
 8017266:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801726a:	7801      	ldrb	r1, [r0, #0]
 801726c:	121b      	asrs	r3, r3, #8
 801726e:	b29e      	uxth	r6, r3
 8017270:	43db      	mvns	r3, r3
 8017272:	fb1b fb06 	smulbb	fp, fp, r6
 8017276:	b2db      	uxtb	r3, r3
 8017278:	fb01 b103 	mla	r1, r1, r3, fp
 801727c:	b289      	uxth	r1, r1
 801727e:	f101 0b01 	add.w	fp, r1, #1
 8017282:	eb0b 2111 	add.w	r1, fp, r1, lsr #8
 8017286:	f890 b001 	ldrb.w	fp, [r0, #1]
 801728a:	fb1b fb03 	smulbb	fp, fp, r3
 801728e:	1209      	asrs	r1, r1, #8
 8017290:	7001      	strb	r1, [r0, #0]
 8017292:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8017296:	fb01 b106 	mla	r1, r1, r6, fp
 801729a:	b289      	uxth	r1, r1
 801729c:	f101 0b01 	add.w	fp, r1, #1
 80172a0:	eb0b 2111 	add.w	r1, fp, r1, lsr #8
 80172a4:	1209      	asrs	r1, r1, #8
 80172a6:	7041      	strb	r1, [r0, #1]
 80172a8:	f89c 1002 	ldrb.w	r1, [ip, #2]
 80172ac:	f890 c002 	ldrb.w	ip, [r0, #2]
 80172b0:	fb1c f303 	smulbb	r3, ip, r3
 80172b4:	fb01 3606 	mla	r6, r1, r6, r3
 80172b8:	b2b6      	uxth	r6, r6
 80172ba:	1c73      	adds	r3, r6, #1
 80172bc:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 80172c0:	1236      	asrs	r6, r6, #8
 80172c2:	7086      	strb	r6, [r0, #2]
 80172c4:	e7ca      	b.n	801725c <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13c>
 80172c6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80172c8:	4428      	add	r0, r5
 80172ca:	441f      	add	r7, r3
 80172cc:	e7a8      	b.n	8017220 <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x100>
 80172ce:	4b06      	ldr	r3, [pc, #24]	; (80172e8 <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 80172d0:	6818      	ldr	r0, [r3, #0]
 80172d2:	6803      	ldr	r3, [r0, #0]
 80172d4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80172d6:	4798      	blx	r3
 80172d8:	e782      	b.n	80171e0 <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xc0>
 80172da:	bf00      	nop
 80172dc:	08024b79 	.word	0x08024b79
 80172e0:	0802520f 	.word	0x0802520f
 80172e4:	08024c15 	.word	0x08024c15
 80172e8:	2400e07c 	.word	0x2400e07c
 80172ec:	2400e076 	.word	0x2400e076

080172f0 <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 80172f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80172f4:	f8b1 9000 	ldrh.w	r9, [r1]
 80172f8:	b091      	sub	sp, #68	; 0x44
 80172fa:	4604      	mov	r4, r0
 80172fc:	460e      	mov	r6, r1
 80172fe:	f1b9 0f01 	cmp.w	r9, #1
 8017302:	4690      	mov	r8, r2
 8017304:	f89d 7068 	ldrb.w	r7, [sp, #104]	; 0x68
 8017308:	d005      	beq.n	8017316 <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x26>
 801730a:	4b69      	ldr	r3, [pc, #420]	; (80174b0 <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1c0>)
 801730c:	21ac      	movs	r1, #172	; 0xac
 801730e:	4a69      	ldr	r2, [pc, #420]	; (80174b4 <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 8017310:	4869      	ldr	r0, [pc, #420]	; (80174b8 <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8017312:	f008 fc61 	bl	801fbd8 <__assert_func>
 8017316:	6810      	ldr	r0, [r2, #0]
 8017318:	ad0c      	add	r5, sp, #48	; 0x30
 801731a:	6851      	ldr	r1, [r2, #4]
 801731c:	f8df a19c 	ldr.w	sl, [pc, #412]	; 80174bc <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1cc>
 8017320:	f8df b19c 	ldr.w	fp, [pc, #412]	; 80174c0 <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d0>
 8017324:	c503      	stmia	r5!, {r0, r1}
 8017326:	6818      	ldr	r0, [r3, #0]
 8017328:	ad0e      	add	r5, sp, #56	; 0x38
 801732a:	6859      	ldr	r1, [r3, #4]
 801732c:	c503      	stmia	r5!, {r0, r1}
 801732e:	a80c      	add	r0, sp, #48	; 0x30
 8017330:	f7f9 ff80 	bl	8011234 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017334:	4641      	mov	r1, r8
 8017336:	a80e      	add	r0, sp, #56	; 0x38
 8017338:	f7f9 ffc0 	bl	80112bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801733c:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8017340:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8017344:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8017348:	f8da 0000 	ldr.w	r0, [sl]
 801734c:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017350:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8017354:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 8017358:	440c      	add	r4, r1
 801735a:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801735e:	440a      	add	r2, r1
 8017360:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 8017364:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8017368:	4413      	add	r3, r2
 801736a:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801736e:	6803      	ldr	r3, [r0, #0]
 8017370:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017372:	4798      	blx	r3
 8017374:	f010 0f80 	tst.w	r0, #128	; 0x80
 8017378:	f8da 0000 	ldr.w	r0, [sl]
 801737c:	d020      	beq.n	80173c0 <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xd0>
 801737e:	2200      	movs	r2, #0
 8017380:	f04f 0c0b 	mov.w	ip, #11
 8017384:	6801      	ldr	r1, [r0, #0]
 8017386:	b2ad      	uxth	r5, r5
 8017388:	f8cd c01c 	str.w	ip, [sp, #28]
 801738c:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8017390:	e9cd 9208 	strd	r9, r2, [sp, #32]
 8017394:	f8bb c000 	ldrh.w	ip, [fp]
 8017398:	9704      	str	r7, [sp, #16]
 801739a:	9502      	str	r5, [sp, #8]
 801739c:	e9cd 2c05 	strd	r2, ip, [sp, #20]
 80173a0:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 80173a4:	9203      	str	r2, [sp, #12]
 80173a6:	fa1f f288 	uxth.w	r2, r8
 80173aa:	9201      	str	r2, [sp, #4]
 80173ac:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 80173b0:	9200      	str	r2, [sp, #0]
 80173b2:	4632      	mov	r2, r6
 80173b4:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 80173b6:	4621      	mov	r1, r4
 80173b8:	47a8      	blx	r5
 80173ba:	b011      	add	sp, #68	; 0x44
 80173bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80173c0:	6803      	ldr	r3, [r0, #0]
 80173c2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80173c4:	4798      	blx	r3
 80173c6:	f8bb 2000 	ldrh.w	r2, [fp]
 80173ca:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 80173ce:	f04f 0e03 	mov.w	lr, #3
 80173d2:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 80173d6:	4355      	muls	r5, r2
 80173d8:	fa1f fc87 	uxth.w	ip, r7
 80173dc:	fb02 1303 	mla	r3, r2, r3, r1
 80173e0:	eba2 0208 	sub.w	r2, r2, r8
 80173e4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80173e8:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80173ec:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80173f0:	4418      	add	r0, r3
 80173f2:	920b      	str	r2, [sp, #44]	; 0x2c
 80173f4:	1943      	adds	r3, r0, r5
 80173f6:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 80173fa:	f1c7 05ff 	rsb	r5, r7, #255	; 0xff
 80173fe:	eba2 0208 	sub.w	r2, r2, r8
 8017402:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8017406:	b2ad      	uxth	r5, r5
 8017408:	4298      	cmp	r0, r3
 801740a:	d24a      	bcs.n	80174a2 <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b2>
 801740c:	eb00 0908 	add.w	r9, r0, r8
 8017410:	4621      	mov	r1, r4
 8017412:	4548      	cmp	r0, r9
 8017414:	460c      	mov	r4, r1
 8017416:	d240      	bcs.n	801749a <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8017418:	f04f 0a04 	mov.w	sl, #4
 801741c:	7824      	ldrb	r4, [r4, #0]
 801741e:	2fff      	cmp	r7, #255	; 0xff
 8017420:	f101 0101 	add.w	r1, r1, #1
 8017424:	fb1e a404 	smlabb	r4, lr, r4, sl
 8017428:	eb06 0a04 	add.w	sl, r6, r4
 801742c:	f816 b004 	ldrb.w	fp, [r6, r4]
 8017430:	d02b      	beq.n	801748a <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x19a>
 8017432:	7804      	ldrb	r4, [r0, #0]
 8017434:	fb14 f405 	smulbb	r4, r4, r5
 8017438:	fb0b 440c 	mla	r4, fp, ip, r4
 801743c:	b2a4      	uxth	r4, r4
 801743e:	f104 0b01 	add.w	fp, r4, #1
 8017442:	eb0b 2414 	add.w	r4, fp, r4, lsr #8
 8017446:	f890 b001 	ldrb.w	fp, [r0, #1]
 801744a:	fb1b fb05 	smulbb	fp, fp, r5
 801744e:	1224      	asrs	r4, r4, #8
 8017450:	7004      	strb	r4, [r0, #0]
 8017452:	f89a 4001 	ldrb.w	r4, [sl, #1]
 8017456:	fb04 b40c 	mla	r4, r4, ip, fp
 801745a:	b2a4      	uxth	r4, r4
 801745c:	f104 0b01 	add.w	fp, r4, #1
 8017460:	eb0b 2414 	add.w	r4, fp, r4, lsr #8
 8017464:	1224      	asrs	r4, r4, #8
 8017466:	7044      	strb	r4, [r0, #1]
 8017468:	f89a 4002 	ldrb.w	r4, [sl, #2]
 801746c:	f890 a002 	ldrb.w	sl, [r0, #2]
 8017470:	fb1a fa05 	smulbb	sl, sl, r5
 8017474:	fb04 a40c 	mla	r4, r4, ip, sl
 8017478:	b2a4      	uxth	r4, r4
 801747a:	f104 0a01 	add.w	sl, r4, #1
 801747e:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8017482:	1224      	asrs	r4, r4, #8
 8017484:	7084      	strb	r4, [r0, #2]
 8017486:	3003      	adds	r0, #3
 8017488:	e7c3      	b.n	8017412 <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x122>
 801748a:	f880 b000 	strb.w	fp, [r0]
 801748e:	f89a 4001 	ldrb.w	r4, [sl, #1]
 8017492:	7044      	strb	r4, [r0, #1]
 8017494:	f89a 4002 	ldrb.w	r4, [sl, #2]
 8017498:	e7f4      	b.n	8017484 <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x194>
 801749a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801749c:	4420      	add	r0, r4
 801749e:	188c      	adds	r4, r1, r2
 80174a0:	e7b2      	b.n	8017408 <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x118>
 80174a2:	4b06      	ldr	r3, [pc, #24]	; (80174bc <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1cc>)
 80174a4:	6818      	ldr	r0, [r3, #0]
 80174a6:	6803      	ldr	r3, [r0, #0]
 80174a8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80174aa:	4798      	blx	r3
 80174ac:	e785      	b.n	80173ba <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xca>
 80174ae:	bf00      	nop
 80174b0:	08024af8 	.word	0x08024af8
 80174b4:	08025102 	.word	0x08025102
 80174b8:	08024c15 	.word	0x08024c15
 80174bc:	2400e07c 	.word	0x2400e07c
 80174c0:	2400e076 	.word	0x2400e076

080174c4 <_ZN8touchgfx8LCD24bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 80174c4:	b570      	push	{r4, r5, r6, lr}
 80174c6:	780d      	ldrb	r5, [r1, #0]
 80174c8:	f89d 4010 	ldrb.w	r4, [sp, #16]
 80174cc:	2d01      	cmp	r5, #1
 80174ce:	d00d      	beq.n	80174ec <_ZN8touchgfx8LCD24bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x28>
 80174d0:	d307      	bcc.n	80174e2 <_ZN8touchgfx8LCD24bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1e>
 80174d2:	2d02      	cmp	r5, #2
 80174d4:	d10f      	bne.n	80174f6 <_ZN8touchgfx8LCD24bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x32>
 80174d6:	4b08      	ldr	r3, [pc, #32]	; (80174f8 <_ZN8touchgfx8LCD24bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>)
 80174d8:	2151      	movs	r1, #81	; 0x51
 80174da:	4a08      	ldr	r2, [pc, #32]	; (80174fc <_ZN8touchgfx8LCD24bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x38>)
 80174dc:	4808      	ldr	r0, [pc, #32]	; (8017500 <_ZN8touchgfx8LCD24bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x3c>)
 80174de:	f008 fb7b 	bl	801fbd8 <__assert_func>
 80174e2:	9404      	str	r4, [sp, #16]
 80174e4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80174e8:	f7ff be1a 	b.w	8017120 <_ZN8touchgfx8LCD24bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 80174ec:	9404      	str	r4, [sp, #16]
 80174ee:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80174f2:	f7ff befd 	b.w	80172f0 <_ZN8touchgfx8LCD24bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 80174f6:	bd70      	pop	{r4, r5, r6, pc}
 80174f8:	08024aad 	.word	0x08024aad
 80174fc:	08025080 	.word	0x08025080
 8017500:	08024c15 	.word	0x08024c15

08017504 <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h>:
 8017504:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8017508:	4605      	mov	r5, r0
 801750a:	b08f      	sub	sp, #60	; 0x3c
 801750c:	460c      	mov	r4, r1
 801750e:	461f      	mov	r7, r3
 8017510:	2b00      	cmp	r3, #0
 8017512:	d052      	beq.n	80175ba <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0xb6>
 8017514:	6808      	ldr	r0, [r1, #0]
 8017516:	ab0a      	add	r3, sp, #40	; 0x28
 8017518:	6849      	ldr	r1, [r1, #4]
 801751a:	f8df 81c8 	ldr.w	r8, [pc, #456]	; 80176e4 <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0x1e0>
 801751e:	f8df 91c8 	ldr.w	r9, [pc, #456]	; 80176e8 <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0x1e4>
 8017522:	c303      	stmia	r3!, {r0, r1}
 8017524:	6810      	ldr	r0, [r2, #0]
 8017526:	ab0c      	add	r3, sp, #48	; 0x30
 8017528:	6851      	ldr	r1, [r2, #4]
 801752a:	c303      	stmia	r3!, {r0, r1}
 801752c:	a80a      	add	r0, sp, #40	; 0x28
 801752e:	f7f9 fe81 	bl	8011234 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017532:	4621      	mov	r1, r4
 8017534:	a80c      	add	r0, sp, #48	; 0x30
 8017536:	f7f9 fec1 	bl	80112bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801753a:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801753e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8017542:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8017546:	f8d8 0000 	ldr.w	r0, [r8]
 801754a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801754e:	f9bd 6034 	ldrsh.w	r6, [sp, #52]	; 0x34
 8017552:	f9bd 4036 	ldrsh.w	r4, [sp, #54]	; 0x36
 8017556:	eb05 0541 	add.w	r5, r5, r1, lsl #1
 801755a:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801755e:	440a      	add	r2, r1
 8017560:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8017564:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 8017568:	4413      	add	r3, r2
 801756a:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801756e:	6803      	ldr	r3, [r0, #0]
 8017570:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017572:	4798      	blx	r3
 8017574:	2fff      	cmp	r7, #255	; 0xff
 8017576:	d023      	beq.n	80175c0 <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0xbc>
 8017578:	f010 0f04 	tst.w	r0, #4
 801757c:	f8d8 0000 	ldr.w	r0, [r8]
 8017580:	d021      	beq.n	80175c6 <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0xc2>
 8017582:	2100      	movs	r1, #0
 8017584:	f04f 0e01 	mov.w	lr, #1
 8017588:	f8d0 c000 	ldr.w	ip, [r0]
 801758c:	b2a4      	uxth	r4, r4
 801758e:	9106      	str	r1, [sp, #24]
 8017590:	b2b6      	uxth	r6, r6
 8017592:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8017596:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801759a:	e9cd e107 	strd	lr, r1, [sp, #28]
 801759e:	f8b9 e000 	ldrh.w	lr, [r9]
 80175a2:	9703      	str	r7, [sp, #12]
 80175a4:	9401      	str	r4, [sp, #4]
 80175a6:	9600      	str	r6, [sp, #0]
 80175a8:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 80175ac:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 80175b0:	9102      	str	r1, [sp, #8]
 80175b2:	4629      	mov	r1, r5
 80175b4:	f8dc 4040 	ldr.w	r4, [ip, #64]	; 0x40
 80175b8:	47a0      	blx	r4
 80175ba:	b00f      	add	sp, #60	; 0x3c
 80175bc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80175c0:	f010 0f01 	tst.w	r0, #1
 80175c4:	e7da      	b.n	801757c <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0x78>
 80175c6:	6803      	ldr	r3, [r0, #0]
 80175c8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80175ca:	4798      	blx	r3
 80175cc:	f8b9 1000 	ldrh.w	r1, [r9]
 80175d0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80175d4:	eb06 0c46 	add.w	ip, r6, r6, lsl #1
 80175d8:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 80175dc:	434c      	muls	r4, r1
 80175de:	2fff      	cmp	r7, #255	; 0xff
 80175e0:	fb01 2303 	mla	r3, r1, r3, r2
 80175e4:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80175e8:	eba1 0106 	sub.w	r1, r1, r6
 80175ec:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80175f0:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80175f4:	4418      	add	r0, r3
 80175f6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80175fa:	eba3 0606 	sub.w	r6, r3, r6
 80175fe:	4404      	add	r4, r0
 8017600:	ea4f 0646 	mov.w	r6, r6, lsl #1
 8017604:	d04a      	beq.n	801769c <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0x198>
 8017606:	43fa      	mvns	r2, r7
 8017608:	b2bb      	uxth	r3, r7
 801760a:	b2d7      	uxtb	r7, r2
 801760c:	42a0      	cmp	r0, r4
 801760e:	d263      	bcs.n	80176d8 <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0x1d4>
 8017610:	eb00 0e0c 	add.w	lr, r0, ip
 8017614:	4586      	cmp	lr, r0
 8017616:	f100 0803 	add.w	r8, r0, #3
 801761a:	d93a      	bls.n	8017692 <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0x18e>
 801761c:	f835 2b02 	ldrh.w	r2, [r5], #2
 8017620:	f818 9c03 	ldrb.w	r9, [r8, #-3]
 8017624:	00d0      	lsls	r0, r2, #3
 8017626:	fb19 f907 	smulbb	r9, r9, r7
 801762a:	b2c0      	uxtb	r0, r0
 801762c:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8017630:	fb00 9003 	mla	r0, r0, r3, r9
 8017634:	b280      	uxth	r0, r0
 8017636:	f100 0901 	add.w	r9, r0, #1
 801763a:	eb09 2010 	add.w	r0, r9, r0, lsr #8
 801763e:	f818 9c02 	ldrb.w	r9, [r8, #-2]
 8017642:	fb19 f907 	smulbb	r9, r9, r7
 8017646:	1200      	asrs	r0, r0, #8
 8017648:	f808 0c03 	strb.w	r0, [r8, #-3]
 801764c:	10d0      	asrs	r0, r2, #3
 801764e:	1212      	asrs	r2, r2, #8
 8017650:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8017654:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8017658:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 801765c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8017660:	fb00 9003 	mla	r0, r0, r3, r9
 8017664:	b280      	uxth	r0, r0
 8017666:	f100 0901 	add.w	r9, r0, #1
 801766a:	eb09 2010 	add.w	r0, r9, r0, lsr #8
 801766e:	1200      	asrs	r0, r0, #8
 8017670:	f808 0c02 	strb.w	r0, [r8, #-2]
 8017674:	f818 0c01 	ldrb.w	r0, [r8, #-1]
 8017678:	fb10 f007 	smulbb	r0, r0, r7
 801767c:	fb02 0203 	mla	r2, r2, r3, r0
 8017680:	b292      	uxth	r2, r2
 8017682:	1c50      	adds	r0, r2, #1
 8017684:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8017688:	4640      	mov	r0, r8
 801768a:	1212      	asrs	r2, r2, #8
 801768c:	f808 2c01 	strb.w	r2, [r8, #-1]
 8017690:	e7c0      	b.n	8017614 <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0x110>
 8017692:	4408      	add	r0, r1
 8017694:	4435      	add	r5, r6
 8017696:	e7b9      	b.n	801760c <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0x108>
 8017698:	4408      	add	r0, r1
 801769a:	4435      	add	r5, r6
 801769c:	42a0      	cmp	r0, r4
 801769e:	d21b      	bcs.n	80176d8 <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0x1d4>
 80176a0:	eb00 070c 	add.w	r7, r0, ip
 80176a4:	42b8      	cmp	r0, r7
 80176a6:	d2f7      	bcs.n	8017698 <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0x194>
 80176a8:	f835 3b02 	ldrh.w	r3, [r5], #2
 80176ac:	3003      	adds	r0, #3
 80176ae:	00da      	lsls	r2, r3, #3
 80176b0:	b2d2      	uxtb	r2, r2
 80176b2:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80176b6:	f800 2c03 	strb.w	r2, [r0, #-3]
 80176ba:	10da      	asrs	r2, r3, #3
 80176bc:	121b      	asrs	r3, r3, #8
 80176be:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80176c2:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80176c6:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 80176ca:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 80176ce:	f800 2c02 	strb.w	r2, [r0, #-2]
 80176d2:	f800 3c01 	strb.w	r3, [r0, #-1]
 80176d6:	e7e5      	b.n	80176a4 <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0x1a0>
 80176d8:	4b02      	ldr	r3, [pc, #8]	; (80176e4 <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0x1e0>)
 80176da:	6818      	ldr	r0, [r3, #0]
 80176dc:	6803      	ldr	r3, [r0, #0]
 80176de:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80176e0:	4798      	blx	r3
 80176e2:	e76a      	b.n	80175ba <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h+0xb6>
 80176e4:	2400e07c 	.word	0x2400e07c
 80176e8:	2400e076 	.word	0x2400e076

080176ec <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 80176ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80176f0:	b08a      	sub	sp, #40	; 0x28
 80176f2:	460d      	mov	r5, r1
 80176f4:	4604      	mov	r4, r0
 80176f6:	461e      	mov	r6, r3
 80176f8:	6808      	ldr	r0, [r1, #0]
 80176fa:	ab06      	add	r3, sp, #24
 80176fc:	6849      	ldr	r1, [r1, #4]
 80176fe:	4f5d      	ldr	r7, [pc, #372]	; (8017874 <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x188>)
 8017700:	c303      	stmia	r3!, {r0, r1}
 8017702:	6810      	ldr	r0, [r2, #0]
 8017704:	ab08      	add	r3, sp, #32
 8017706:	6851      	ldr	r1, [r2, #4]
 8017708:	c303      	stmia	r3!, {r0, r1}
 801770a:	a806      	add	r0, sp, #24
 801770c:	f7f9 fd92 	bl	8011234 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017710:	4629      	mov	r1, r5
 8017712:	a808      	add	r0, sp, #32
 8017714:	f7f9 fdd2 	bl	80112bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017718:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801771c:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8017720:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8017724:	6838      	ldr	r0, [r7, #0]
 8017726:	fb11 2103 	smlabb	r1, r1, r3, r2
 801772a:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801772e:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 8017732:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8017736:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801773a:	440a      	add	r2, r1
 801773c:	f8ad 2020 	strh.w	r2, [sp, #32]
 8017740:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8017744:	4413      	add	r3, r2
 8017746:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801774a:	6803      	ldr	r3, [r0, #0]
 801774c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801774e:	4798      	blx	r3
 8017750:	2eff      	cmp	r6, #255	; 0xff
 8017752:	d119      	bne.n	8017788 <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9c>
 8017754:	f010 0f20 	tst.w	r0, #32
 8017758:	6838      	ldr	r0, [r7, #0]
 801775a:	d018      	beq.n	801778e <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa2>
 801775c:	b2ad      	uxth	r5, r5
 801775e:	2700      	movs	r7, #0
 8017760:	6801      	ldr	r1, [r0, #0]
 8017762:	9501      	str	r5, [sp, #4]
 8017764:	fa1f f588 	uxth.w	r5, r8
 8017768:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801776c:	9500      	str	r5, [sp, #0]
 801776e:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8017772:	e9cd 6703 	strd	r6, r7, [sp, #12]
 8017776:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801777a:	9602      	str	r6, [sp, #8]
 801777c:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801777e:	4621      	mov	r1, r4
 8017780:	47a8      	blx	r5
 8017782:	b00a      	add	sp, #40	; 0x28
 8017784:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017788:	f010 0f40 	tst.w	r0, #64	; 0x40
 801778c:	e7e4      	b.n	8017758 <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6c>
 801778e:	6803      	ldr	r3, [r0, #0]
 8017790:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017792:	4798      	blx	r3
 8017794:	4b38      	ldr	r3, [pc, #224]	; (8017878 <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x18c>)
 8017796:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801779a:	f8b3 c000 	ldrh.w	ip, [r3]
 801779e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 80177a2:	fb0c f505 	mul.w	r5, ip, r5
 80177a6:	f9bd e01c 	ldrsh.w	lr, [sp, #28]
 80177aa:	fb0c 2303 	mla	r3, ip, r3, r2
 80177ae:	ebac 0c08 	sub.w	ip, ip, r8
 80177b2:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80177b6:	ebae 0e08 	sub.w	lr, lr, r8
 80177ba:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80177be:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80177c2:	4418      	add	r0, r3
 80177c4:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 80177c8:	eb08 0348 	add.w	r3, r8, r8, lsl #1
 80177cc:	4405      	add	r5, r0
 80177ce:	42a8      	cmp	r0, r5
 80177d0:	d24a      	bcs.n	8017868 <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x17c>
 80177d2:	eb00 0803 	add.w	r8, r0, r3
 80177d6:	4540      	cmp	r0, r8
 80177d8:	d243      	bcs.n	8017862 <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x176>
 80177da:	78e2      	ldrb	r2, [r4, #3]
 80177dc:	b15a      	cbz	r2, 80177f6 <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10a>
 80177de:	2aff      	cmp	r2, #255	; 0xff
 80177e0:	f894 9000 	ldrb.w	r9, [r4]
 80177e4:	d10a      	bne.n	80177fc <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x110>
 80177e6:	2eff      	cmp	r6, #255	; 0xff
 80177e8:	d108      	bne.n	80177fc <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x110>
 80177ea:	f880 9000 	strb.w	r9, [r0]
 80177ee:	7862      	ldrb	r2, [r4, #1]
 80177f0:	7042      	strb	r2, [r0, #1]
 80177f2:	78a2      	ldrb	r2, [r4, #2]
 80177f4:	7082      	strb	r2, [r0, #2]
 80177f6:	3003      	adds	r0, #3
 80177f8:	3404      	adds	r4, #4
 80177fa:	e7ec      	b.n	80177d6 <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xea>
 80177fc:	4372      	muls	r2, r6
 80177fe:	1c51      	adds	r1, r2, #1
 8017800:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8017804:	1209      	asrs	r1, r1, #8
 8017806:	fa1f fa81 	uxth.w	sl, r1
 801780a:	43c9      	mvns	r1, r1
 801780c:	fb19 f90a 	smulbb	r9, r9, sl
 8017810:	b2ca      	uxtb	r2, r1
 8017812:	7801      	ldrb	r1, [r0, #0]
 8017814:	fb01 9902 	mla	r9, r1, r2, r9
 8017818:	fa1f f989 	uxth.w	r9, r9
 801781c:	f109 0101 	add.w	r1, r9, #1
 8017820:	eb01 2919 	add.w	r9, r1, r9, lsr #8
 8017824:	ea4f 2929 	mov.w	r9, r9, asr #8
 8017828:	f880 9000 	strb.w	r9, [r0]
 801782c:	f890 9001 	ldrb.w	r9, [r0, #1]
 8017830:	7861      	ldrb	r1, [r4, #1]
 8017832:	fb19 f902 	smulbb	r9, r9, r2
 8017836:	fb01 910a 	mla	r1, r1, sl, r9
 801783a:	b289      	uxth	r1, r1
 801783c:	f101 0901 	add.w	r9, r1, #1
 8017840:	eb09 2111 	add.w	r1, r9, r1, lsr #8
 8017844:	1209      	asrs	r1, r1, #8
 8017846:	7041      	strb	r1, [r0, #1]
 8017848:	7881      	ldrb	r1, [r0, #2]
 801784a:	f894 9002 	ldrb.w	r9, [r4, #2]
 801784e:	fb11 f202 	smulbb	r2, r1, r2
 8017852:	fb09 220a 	mla	r2, r9, sl, r2
 8017856:	b292      	uxth	r2, r2
 8017858:	1c51      	adds	r1, r2, #1
 801785a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801785e:	1212      	asrs	r2, r2, #8
 8017860:	e7c8      	b.n	80177f4 <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x108>
 8017862:	4460      	add	r0, ip
 8017864:	4474      	add	r4, lr
 8017866:	e7b2      	b.n	80177ce <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xe2>
 8017868:	6838      	ldr	r0, [r7, #0]
 801786a:	6803      	ldr	r3, [r0, #0]
 801786c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801786e:	4798      	blx	r3
 8017870:	e787      	b.n	8017782 <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x96>
 8017872:	bf00      	nop
 8017874:	2400e07c 	.word	0x2400e07c
 8017878:	2400e076 	.word	0x2400e076

0801787c <_ZN8touchgfx8LCD24bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801787c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8017880:	b085      	sub	sp, #20
 8017882:	4606      	mov	r6, r0
 8017884:	460c      	mov	r4, r1
 8017886:	4691      	mov	r9, r2
 8017888:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 801788c:	4698      	mov	r8, r3
 801788e:	b31d      	cbz	r5, 80178d8 <_ZN8touchgfx8LCD24bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 8017890:	4608      	mov	r0, r1
 8017892:	f7fd f935 	bl	8014b00 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8017896:	4607      	mov	r7, r0
 8017898:	4620      	mov	r0, r4
 801789a:	f7fd f975 	bl	8014b88 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801789e:	f8ad 000e 	strh.w	r0, [sp, #14]
 80178a2:	4620      	mov	r0, r4
 80178a4:	f8ad 9008 	strh.w	r9, [sp, #8]
 80178a8:	f8ad 800a 	strh.w	r8, [sp, #10]
 80178ac:	f8ad 700c 	strh.w	r7, [sp, #12]
 80178b0:	f7fd facc 	bl	8014e4c <_ZNK8touchgfx6Bitmap9getFormatEv>
 80178b4:	280b      	cmp	r0, #11
 80178b6:	d838      	bhi.n	801792a <_ZN8touchgfx8LCD24bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xae>
 80178b8:	e8df f000 	tbb	[pc, r0]
 80178bc:	37062920 	.word	0x37062920
 80178c0:	37373737 	.word	0x37373737
 80178c4:	11373737 	.word	0x11373737
 80178c8:	4620      	mov	r0, r4
 80178ca:	f7fd fa35 	bl	8014d38 <_ZNK8touchgfx6Bitmap7getDataEv>
 80178ce:	462b      	mov	r3, r5
 80178d0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80178d2:	a902      	add	r1, sp, #8
 80178d4:	f7ff ff0a 	bl	80176ec <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80178d8:	b005      	add	sp, #20
 80178da:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80178de:	4620      	mov	r0, r4
 80178e0:	f7fd fa2a 	bl	8014d38 <_ZNK8touchgfx6Bitmap7getDataEv>
 80178e4:	4606      	mov	r6, r0
 80178e6:	4620      	mov	r0, r4
 80178e8:	f7fd fa58 	bl	8014d9c <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 80178ec:	9500      	str	r5, [sp, #0]
 80178ee:	4601      	mov	r1, r0
 80178f0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80178f2:	aa02      	add	r2, sp, #8
 80178f4:	4630      	mov	r0, r6
 80178f6:	f7ff fde5 	bl	80174c4 <_ZN8touchgfx8LCD24bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 80178fa:	e7ed      	b.n	80178d8 <_ZN8touchgfx8LCD24bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 80178fc:	4620      	mov	r0, r4
 80178fe:	f7fd fa1b 	bl	8014d38 <_ZNK8touchgfx6Bitmap7getDataEv>
 8017902:	462b      	mov	r3, r5
 8017904:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8017906:	a902      	add	r1, sp, #8
 8017908:	f7ff fdfc 	bl	8017504 <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h>
 801790c:	e7e4      	b.n	80178d8 <_ZN8touchgfx8LCD24bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 801790e:	6833      	ldr	r3, [r6, #0]
 8017910:	4620      	mov	r0, r4
 8017912:	68df      	ldr	r7, [r3, #12]
 8017914:	f7fd fa10 	bl	8014d38 <_ZNK8touchgfx6Bitmap7getDataEv>
 8017918:	2300      	movs	r3, #0
 801791a:	4601      	mov	r1, r0
 801791c:	aa02      	add	r2, sp, #8
 801791e:	4630      	mov	r0, r6
 8017920:	e9cd 5300 	strd	r5, r3, [sp]
 8017924:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017926:	47b8      	blx	r7
 8017928:	e7d6      	b.n	80178d8 <_ZN8touchgfx8LCD24bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 801792a:	4b03      	ldr	r3, [pc, #12]	; (8017938 <_ZN8touchgfx8LCD24bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xbc>)
 801792c:	2145      	movs	r1, #69	; 0x45
 801792e:	4a03      	ldr	r2, [pc, #12]	; (801793c <_ZN8touchgfx8LCD24bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>)
 8017930:	4803      	ldr	r0, [pc, #12]	; (8017940 <_ZN8touchgfx8LCD24bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc4>)
 8017932:	f008 f951 	bl	801fbd8 <__assert_func>
 8017936:	bf00      	nop
 8017938:	08024b46 	.word	0x08024b46
 801793c:	0802518b 	.word	0x0802518b
 8017940:	08024c15 	.word	0x08024c15

08017944 <_ZN8touchgfx8LCD24bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8017944:	b570      	push	{r4, r5, r6, lr}
 8017946:	9c04      	ldr	r4, [sp, #16]
 8017948:	4605      	mov	r5, r0
 801794a:	4608      	mov	r0, r1
 801794c:	4619      	mov	r1, r3
 801794e:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8017952:	2a0d      	cmp	r2, #13
 8017954:	d826      	bhi.n	80179a4 <_ZN8touchgfx8LCD24bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x60>
 8017956:	e8df f002 	tbb	[pc, r2]
 801795a:	1107      	.short	0x1107
 801795c:	1e1e1e0c 	.word	0x1e1e1e0c
 8017960:	1e1e1e1e 	.word	0x1e1e1e1e
 8017964:	1e1e1e1e 	.word	0x1e1e1e1e
 8017968:	4622      	mov	r2, r4
 801796a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801796e:	f7ff bdc9 	b.w	8017504 <_ZN8touchgfx8LCD24bpp14blitCopyRGB565EPKtRKNS_4RectES5_h>
 8017972:	4622      	mov	r2, r4
 8017974:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017978:	f7ff beb8 	b.w	80176ec <_ZN8touchgfx8LCD24bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801797c:	682a      	ldr	r2, [r5, #0]
 801797e:	2600      	movs	r6, #0
 8017980:	e9cd 3604 	strd	r3, r6, [sp, #16]
 8017984:	68d6      	ldr	r6, [r2, #12]
 8017986:	4623      	mov	r3, r4
 8017988:	460a      	mov	r2, r1
 801798a:	4601      	mov	r1, r0
 801798c:	46b4      	mov	ip, r6
 801798e:	4628      	mov	r0, r5
 8017990:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017994:	4760      	bx	ip
 8017996:	4b04      	ldr	r3, [pc, #16]	; (80179a8 <_ZN8touchgfx8LCD24bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x64>)
 8017998:	f44f 71f2 	mov.w	r1, #484	; 0x1e4
 801799c:	4a03      	ldr	r2, [pc, #12]	; (80179ac <_ZN8touchgfx8LCD24bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x68>)
 801799e:	4804      	ldr	r0, [pc, #16]	; (80179b0 <_ZN8touchgfx8LCD24bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x6c>)
 80179a0:	f008 f91a 	bl	801fbd8 <__assert_func>
 80179a4:	bd70      	pop	{r4, r5, r6, pc}
 80179a6:	bf00      	nop
 80179a8:	08024dda 	.word	0x08024dda
 80179ac:	08025506 	.word	0x08025506
 80179b0:	08024c15 	.word	0x08024c15

080179b4 <_ZN8touchgfx8LCD24bpp9nextPixelEbNS_12TextRotationE>:
 80179b4:	b158      	cbz	r0, 80179ce <_ZN8touchgfx8LCD24bpp9nextPixelEbNS_12TextRotationE+0x1a>
 80179b6:	2902      	cmp	r1, #2
 80179b8:	d00f      	beq.n	80179da <_ZN8touchgfx8LCD24bpp9nextPixelEbNS_12TextRotationE+0x26>
 80179ba:	2903      	cmp	r1, #3
 80179bc:	d010      	beq.n	80179e0 <_ZN8touchgfx8LCD24bpp9nextPixelEbNS_12TextRotationE+0x2c>
 80179be:	2901      	cmp	r1, #1
 80179c0:	d101      	bne.n	80179c6 <_ZN8touchgfx8LCD24bpp9nextPixelEbNS_12TextRotationE+0x12>
 80179c2:	2001      	movs	r0, #1
 80179c4:	4770      	bx	lr
 80179c6:	4b08      	ldr	r3, [pc, #32]	; (80179e8 <_ZN8touchgfx8LCD24bpp9nextPixelEbNS_12TextRotationE+0x34>)
 80179c8:	8819      	ldrh	r1, [r3, #0]
 80179ca:	4248      	negs	r0, r1
 80179cc:	4770      	bx	lr
 80179ce:	2902      	cmp	r1, #2
 80179d0:	d006      	beq.n	80179e0 <_ZN8touchgfx8LCD24bpp9nextPixelEbNS_12TextRotationE+0x2c>
 80179d2:	2903      	cmp	r1, #3
 80179d4:	d0f7      	beq.n	80179c6 <_ZN8touchgfx8LCD24bpp9nextPixelEbNS_12TextRotationE+0x12>
 80179d6:	2901      	cmp	r1, #1
 80179d8:	d1f3      	bne.n	80179c2 <_ZN8touchgfx8LCD24bpp9nextPixelEbNS_12TextRotationE+0xe>
 80179da:	4b03      	ldr	r3, [pc, #12]	; (80179e8 <_ZN8touchgfx8LCD24bpp9nextPixelEbNS_12TextRotationE+0x34>)
 80179dc:	8818      	ldrh	r0, [r3, #0]
 80179de:	4770      	bx	lr
 80179e0:	f04f 30ff 	mov.w	r0, #4294967295
 80179e4:	4770      	bx	lr
 80179e6:	bf00      	nop
 80179e8:	2400e076 	.word	0x2400e076

080179ec <_ZN8touchgfx8LCD24bpp8nextLineEbNS_12TextRotationE>:
 80179ec:	b170      	cbz	r0, 8017a0c <_ZN8touchgfx8LCD24bpp8nextLineEbNS_12TextRotationE+0x20>
 80179ee:	2902      	cmp	r1, #2
 80179f0:	d012      	beq.n	8017a18 <_ZN8touchgfx8LCD24bpp8nextLineEbNS_12TextRotationE+0x2c>
 80179f2:	2903      	cmp	r1, #3
 80179f4:	d006      	beq.n	8017a04 <_ZN8touchgfx8LCD24bpp8nextLineEbNS_12TextRotationE+0x18>
 80179f6:	2901      	cmp	r1, #1
 80179f8:	d001      	beq.n	80179fe <_ZN8touchgfx8LCD24bpp8nextLineEbNS_12TextRotationE+0x12>
 80179fa:	2001      	movs	r0, #1
 80179fc:	4770      	bx	lr
 80179fe:	4b08      	ldr	r3, [pc, #32]	; (8017a20 <_ZN8touchgfx8LCD24bpp8nextLineEbNS_12TextRotationE+0x34>)
 8017a00:	8818      	ldrh	r0, [r3, #0]
 8017a02:	4770      	bx	lr
 8017a04:	4b06      	ldr	r3, [pc, #24]	; (8017a20 <_ZN8touchgfx8LCD24bpp8nextLineEbNS_12TextRotationE+0x34>)
 8017a06:	8818      	ldrh	r0, [r3, #0]
 8017a08:	4240      	negs	r0, r0
 8017a0a:	4770      	bx	lr
 8017a0c:	2902      	cmp	r1, #2
 8017a0e:	d0f9      	beq.n	8017a04 <_ZN8touchgfx8LCD24bpp8nextLineEbNS_12TextRotationE+0x18>
 8017a10:	2903      	cmp	r1, #3
 8017a12:	d0f2      	beq.n	80179fa <_ZN8touchgfx8LCD24bpp8nextLineEbNS_12TextRotationE+0xe>
 8017a14:	2901      	cmp	r1, #1
 8017a16:	d1f2      	bne.n	80179fe <_ZN8touchgfx8LCD24bpp8nextLineEbNS_12TextRotationE+0x12>
 8017a18:	f04f 30ff 	mov.w	r0, #4294967295
 8017a1c:	4770      	bx	lr
 8017a1e:	bf00      	nop
 8017a20:	2400e076 	.word	0x2400e076

08017a24 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8017a24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017a28:	b097      	sub	sp, #92	; 0x5c
 8017a2a:	910b      	str	r1, [sp, #44]	; 0x2c
 8017a2c:	a912      	add	r1, sp, #72	; 0x48
 8017a2e:	f9bd 6080 	ldrsh.w	r6, [sp, #128]	; 0x80
 8017a32:	f8bd 7088 	ldrh.w	r7, [sp, #136]	; 0x88
 8017a36:	f8bd 408c 	ldrh.w	r4, [sp, #140]	; 0x8c
 8017a3a:	f89d 80a4 	ldrb.w	r8, [sp, #164]	; 0xa4
 8017a3e:	f89d 90ac 	ldrb.w	r9, [sp, #172]	; 0xac
 8017a42:	e881 000c 	stmia.w	r1, {r2, r3}
 8017a46:	f9bd 3084 	ldrsh.w	r3, [sp, #132]	; 0x84
 8017a4a:	930a      	str	r3, [sp, #40]	; 0x28
 8017a4c:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 8017a50:	e9dd 2124 	ldrd	r2, r1, [sp, #144]	; 0x90
 8017a54:	9311      	str	r3, [sp, #68]	; 0x44
 8017a56:	f89d 30a8 	ldrb.w	r3, [sp, #168]	; 0xa8
 8017a5a:	798d      	ldrb	r5, [r1, #6]
 8017a5c:	930c      	str	r3, [sp, #48]	; 0x30
 8017a5e:	7b4b      	ldrb	r3, [r1, #13]
 8017a60:	0158      	lsls	r0, r3, #5
 8017a62:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8017a66:	4328      	orrs	r0, r5
 8017a68:	9009      	str	r0, [sp, #36]	; 0x24
 8017a6a:	f000 817d 	beq.w	8017d68 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x344>
 8017a6e:	011b      	lsls	r3, r3, #4
 8017a70:	79c8      	ldrb	r0, [r1, #7]
 8017a72:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8017a76:	4303      	orrs	r3, r0
 8017a78:	930e      	str	r3, [sp, #56]	; 0x38
 8017a7a:	f000 8175 	beq.w	8017d68 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x344>
 8017a7e:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8017a82:	b29b      	uxth	r3, r3
 8017a84:	2f00      	cmp	r7, #0
 8017a86:	f000 8117 	beq.w	8017cb8 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x294>
 8017a8a:	1aff      	subs	r7, r7, r3
 8017a8c:	b2bf      	uxth	r7, r7
 8017a8e:	043b      	lsls	r3, r7, #16
 8017a90:	d502      	bpl.n	8017a98 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x74>
 8017a92:	1bf6      	subs	r6, r6, r7
 8017a94:	2700      	movs	r7, #0
 8017a96:	b236      	sxth	r6, r6
 8017a98:	f9b2 1000 	ldrsh.w	r1, [r2]
 8017a9c:	a812      	add	r0, sp, #72	; 0x48
 8017a9e:	f8b2 a002 	ldrh.w	sl, [r2, #2]
 8017aa2:	428e      	cmp	r6, r1
 8017aa4:	b28b      	uxth	r3, r1
 8017aa6:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 8017aaa:	bfbf      	itttt	lt
 8017aac:	18ff      	addlt	r7, r7, r3
 8017aae:	1bbe      	sublt	r6, r7, r6
 8017ab0:	b2b7      	uxthlt	r7, r6
 8017ab2:	460e      	movlt	r6, r1
 8017ab4:	8891      	ldrh	r1, [r2, #4]
 8017ab6:	440b      	add	r3, r1
 8017ab8:	4631      	mov	r1, r6
 8017aba:	b21b      	sxth	r3, r3
 8017abc:	9310      	str	r3, [sp, #64]	; 0x40
 8017abe:	88d3      	ldrh	r3, [r2, #6]
 8017ac0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8017ac2:	449a      	add	sl, r3
 8017ac4:	fa0f f38a 	sxth.w	r3, sl
 8017ac8:	f8bd a038 	ldrh.w	sl, [sp, #56]	; 0x38
 8017acc:	930f      	str	r3, [sp, #60]	; 0x3c
 8017ace:	4bb6      	ldr	r3, [pc, #728]	; (8017da8 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x384>)
 8017ad0:	f893 b000 	ldrb.w	fp, [r3]
 8017ad4:	f10b 3cff 	add.w	ip, fp, #4294967295
 8017ad8:	f1dc 0300 	rsbs	r3, ip, #0
 8017adc:	eb43 030c 	adc.w	r3, r3, ip
 8017ae0:	930d      	str	r3, [sp, #52]	; 0x34
 8017ae2:	464b      	mov	r3, r9
 8017ae4:	f7f9 fa2a 	bl	8010f3c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8017ae8:	4631      	mov	r1, r6
 8017aea:	f8ad 0054 	strh.w	r0, [sp, #84]	; 0x54
 8017aee:	464b      	mov	r3, r9
 8017af0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8017af2:	a812      	add	r0, sp, #72	; 0x48
 8017af4:	f7f9 fa3a 	bl	8010f6c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8017af8:	a916      	add	r1, sp, #88	; 0x58
 8017afa:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8017afe:	a815      	add	r0, sp, #84	; 0x54
 8017b00:	f7f9 fb56 	bl	80111b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8017b04:	f1b9 0f00 	cmp.w	r9, #0
 8017b08:	f040 80d9 	bne.w	8017cbe <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x29a>
 8017b0c:	f1bb 0f01 	cmp.w	fp, #1
 8017b10:	f040 80dd 	bne.w	8017cce <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2aa>
 8017b14:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017b16:	b153      	cbz	r3, 8017b2e <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x10a>
 8017b18:	2508      	movs	r5, #8
 8017b1a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8017b1c:	fb95 f3f8 	sdiv	r3, r5, r8
 8017b20:	1e5d      	subs	r5, r3, #1
 8017b22:	4415      	add	r5, r2
 8017b24:	fb95 f5f3 	sdiv	r5, r5, r3
 8017b28:	fb15 f503 	smulbb	r5, r5, r3
 8017b2c:	b2ad      	uxth	r5, r5
 8017b2e:	b907      	cbnz	r7, 8017b32 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x10e>
 8017b30:	b16c      	cbz	r4, 8017b4e <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x12a>
 8017b32:	fb04 7305 	mla	r3, r4, r5, r7
 8017b36:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8017b38:	ebaa 0a04 	sub.w	sl, sl, r4
 8017b3c:	fb08 f303 	mul.w	r3, r8, r3
 8017b40:	fa1f fa8a 	uxth.w	sl, sl
 8017b44:	eb02 02d3 	add.w	r2, r2, r3, lsr #3
 8017b48:	f003 0407 	and.w	r4, r3, #7
 8017b4c:	9226      	str	r2, [sp, #152]	; 0x98
 8017b4e:	4649      	mov	r1, r9
 8017b50:	980d      	ldr	r0, [sp, #52]	; 0x34
 8017b52:	f7ff ff2f 	bl	80179b4 <_ZN8touchgfx8LCD24bpp9nextPixelEbNS_12TextRotationE>
 8017b56:	4649      	mov	r1, r9
 8017b58:	4683      	mov	fp, r0
 8017b5a:	980d      	ldr	r0, [sp, #52]	; 0x34
 8017b5c:	f7ff ff46 	bl	80179ec <_ZN8touchgfx8LCD24bpp8nextLineEbNS_12TextRotationE>
 8017b60:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8017b62:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8017b64:	4681      	mov	r9, r0
 8017b66:	1a9b      	subs	r3, r3, r2
 8017b68:	459a      	cmp	sl, r3
 8017b6a:	bfa8      	it	ge
 8017b6c:	469a      	movge	sl, r3
 8017b6e:	f1ba 0f00 	cmp.w	sl, #0
 8017b72:	f340 80f9 	ble.w	8017d68 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x344>
 8017b76:	1bf6      	subs	r6, r6, r7
 8017b78:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017b7a:	1b9e      	subs	r6, r3, r6
 8017b7c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017b7e:	429e      	cmp	r6, r3
 8017b80:	bfd4      	ite	le
 8017b82:	ebc7 0706 	rsble	r7, r7, r6
 8017b86:	ebc7 0703 	rsbgt	r7, r7, r3
 8017b8a:	2f00      	cmp	r7, #0
 8017b8c:	f340 80ec 	ble.w	8017d68 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x344>
 8017b90:	1bed      	subs	r5, r5, r7
 8017b92:	fb08 f305 	mul.w	r3, r8, r5
 8017b96:	930d      	str	r3, [sp, #52]	; 0x34
 8017b98:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017b9a:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8017b9e:	930e      	str	r3, [sp, #56]	; 0x38
 8017ba0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017ba2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8017ba6:	930f      	str	r3, [sp, #60]	; 0x3c
 8017ba8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017baa:	b2db      	uxtb	r3, r3
 8017bac:	9310      	str	r3, [sp, #64]	; 0x40
 8017bae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017bb0:	2b00      	cmp	r3, #0
 8017bb2:	f040 80de 	bne.w	8017d72 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x34e>
 8017bb6:	4b7d      	ldr	r3, [pc, #500]	; (8017dac <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x388>)
 8017bb8:	6818      	ldr	r0, [r3, #0]
 8017bba:	6803      	ldr	r3, [r0, #0]
 8017bbc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017bbe:	4798      	blx	r3
 8017bc0:	2301      	movs	r3, #1
 8017bc2:	4a7b      	ldr	r2, [pc, #492]	; (8017db0 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x38c>)
 8017bc4:	eb0b 064b 	add.w	r6, fp, fp, lsl #1
 8017bc8:	fb07 9b1b 	mls	fp, r7, fp, r9
 8017bcc:	fa03 f308 	lsl.w	r3, r3, r8
 8017bd0:	8811      	ldrh	r1, [r2, #0]
 8017bd2:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 8017bd6:	eb0b 0b4b 	add.w	fp, fp, fp, lsl #1
 8017bda:	3b01      	subs	r3, #1
 8017bdc:	fb06 bb07 	mla	fp, r6, r7, fp
 8017be0:	b2db      	uxtb	r3, r3
 8017be2:	930a      	str	r3, [sp, #40]	; 0x28
 8017be4:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8017be8:	fb01 2303 	mla	r3, r1, r3, r2
 8017bec:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8017bf0:	18c3      	adds	r3, r0, r3
 8017bf2:	9309      	str	r3, [sp, #36]	; 0x24
 8017bf4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8017bf6:	781a      	ldrb	r2, [r3, #0]
 8017bf8:	4122      	asrs	r2, r4
 8017bfa:	b2d2      	uxtb	r2, r2
 8017bfc:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8017c00:	f0c0 80d8 	bcc.w	8017db4 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 8017c04:	46be      	mov	lr, r7
 8017c06:	9909      	ldr	r1, [sp, #36]	; 0x24
 8017c08:	f11e 3eff 	adds.w	lr, lr, #4294967295
 8017c0c:	f0c0 80ba 	bcc.w	8017d84 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x360>
 8017c10:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017c12:	4013      	ands	r3, r2
 8017c14:	d041      	beq.n	8017c9a <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x276>
 8017c16:	20ff      	movs	r0, #255	; 0xff
 8017c18:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8017c1a:	fb90 f5f5 	sdiv	r5, r0, r5
 8017c1e:	436b      	muls	r3, r5
 8017c20:	2bfe      	cmp	r3, #254	; 0xfe
 8017c22:	dd03      	ble.n	8017c2c <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x208>
 8017c24:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8017c26:	4285      	cmp	r5, r0
 8017c28:	f000 80a5 	beq.w	8017d76 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x352>
 8017c2c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8017c2e:	9810      	ldr	r0, [sp, #64]	; 0x40
 8017c30:	fb15 f303 	smulbb	r3, r5, r3
 8017c34:	b29b      	uxth	r3, r3
 8017c36:	1c5d      	adds	r5, r3, #1
 8017c38:	eb05 2313 	add.w	r3, r5, r3, lsr #8
 8017c3c:	780d      	ldrb	r5, [r1, #0]
 8017c3e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8017c42:	fa1f fc83 	uxth.w	ip, r3
 8017c46:	43db      	mvns	r3, r3
 8017c48:	fb10 f90c 	smulbb	r9, r0, ip
 8017c4c:	b2db      	uxtb	r3, r3
 8017c4e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8017c50:	fb05 9503 	mla	r5, r5, r3, r9
 8017c54:	b2ad      	uxth	r5, r5
 8017c56:	f105 0901 	add.w	r9, r5, #1
 8017c5a:	eb09 2515 	add.w	r5, r9, r5, lsr #8
 8017c5e:	fb10 f90c 	smulbb	r9, r0, ip
 8017c62:	980e      	ldr	r0, [sp, #56]	; 0x38
 8017c64:	122d      	asrs	r5, r5, #8
 8017c66:	fb10 fc0c 	smulbb	ip, r0, ip
 8017c6a:	700d      	strb	r5, [r1, #0]
 8017c6c:	784d      	ldrb	r5, [r1, #1]
 8017c6e:	fb05 9503 	mla	r5, r5, r3, r9
 8017c72:	b2ad      	uxth	r5, r5
 8017c74:	f105 0901 	add.w	r9, r5, #1
 8017c78:	eb09 2515 	add.w	r5, r9, r5, lsr #8
 8017c7c:	122d      	asrs	r5, r5, #8
 8017c7e:	704d      	strb	r5, [r1, #1]
 8017c80:	788d      	ldrb	r5, [r1, #2]
 8017c82:	fb05 cc03 	mla	ip, r5, r3, ip
 8017c86:	fa1f fc8c 	uxth.w	ip, ip
 8017c8a:	f10c 0301 	add.w	r3, ip, #1
 8017c8e:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8017c92:	ea4f 2c2c 	mov.w	ip, ip, asr #8
 8017c96:	f881 c002 	strb.w	ip, [r1, #2]
 8017c9a:	4444      	add	r4, r8
 8017c9c:	4431      	add	r1, r6
 8017c9e:	b2a4      	uxth	r4, r4
 8017ca0:	2c07      	cmp	r4, #7
 8017ca2:	bf89      	itett	hi
 8017ca4:	9b26      	ldrhi	r3, [sp, #152]	; 0x98
 8017ca6:	fa42 f208 	asrls.w	r2, r2, r8
 8017caa:	2400      	movhi	r4, #0
 8017cac:	785a      	ldrbhi	r2, [r3, #1]
 8017cae:	bf8a      	itet	hi
 8017cb0:	3301      	addhi	r3, #1
 8017cb2:	b2d2      	uxtbls	r2, r2
 8017cb4:	9326      	strhi	r3, [sp, #152]	; 0x98
 8017cb6:	e7a7      	b.n	8017c08 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e4>
 8017cb8:	441e      	add	r6, r3
 8017cba:	b236      	sxth	r6, r6
 8017cbc:	e6ec      	b.n	8017a98 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x74>
 8017cbe:	f1b9 0f01 	cmp.w	r9, #1
 8017cc2:	f47f af27 	bne.w	8017b14 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8017cc6:	f1bb 0f01 	cmp.w	fp, #1
 8017cca:	f47f af23 	bne.w	8017b14 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8017cce:	f8df b0dc 	ldr.w	fp, [pc, #220]	; 8017dac <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x388>
 8017cd2:	f8db 0000 	ldr.w	r0, [fp]
 8017cd6:	6803      	ldr	r3, [r0, #0]
 8017cd8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017cda:	4798      	blx	r3
 8017cdc:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 8017ce0:	465a      	mov	r2, fp
 8017ce2:	d006      	beq.n	8017cf2 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 8017ce4:	f1b8 0f04 	cmp.w	r8, #4
 8017ce8:	d141      	bne.n	8017d6e <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x34a>
 8017cea:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017cec:	3300      	adds	r3, #0
 8017cee:	bf18      	it	ne
 8017cf0:	2301      	movne	r3, #1
 8017cf2:	0580      	lsls	r0, r0, #22
 8017cf4:	d567      	bpl.n	8017dc6 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a2>
 8017cf6:	f1b8 0f08 	cmp.w	r8, #8
 8017cfa:	d164      	bne.n	8017dc6 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a2>
 8017cfc:	2b00      	cmp	r3, #0
 8017cfe:	bf0c      	ite	eq
 8017d00:	f44f 7100 	moveq.w	r1, #512	; 0x200
 8017d04:	f44f 7180 	movne.w	r1, #256	; 0x100
 8017d08:	2f00      	cmp	r7, #0
 8017d0a:	f47f af03 	bne.w	8017b14 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8017d0e:	2c00      	cmp	r4, #0
 8017d10:	f47f af00 	bne.w	8017b14 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8017d14:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017d16:	9810      	ldr	r0, [sp, #64]	; 0x40
 8017d18:	18f3      	adds	r3, r6, r3
 8017d1a:	4283      	cmp	r3, r0
 8017d1c:	f73f aefa 	bgt.w	8017b14 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8017d20:	980a      	ldr	r0, [sp, #40]	; 0x28
 8017d22:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017d24:	4403      	add	r3, r0
 8017d26:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8017d28:	4283      	cmp	r3, r0
 8017d2a:	f73f aef3 	bgt.w	8017b14 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8017d2e:	f1b8 0f08 	cmp.w	r8, #8
 8017d32:	6810      	ldr	r0, [r2, #0]
 8017d34:	f04f 0600 	mov.w	r6, #0
 8017d38:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 8017d3c:	bf18      	it	ne
 8017d3e:	3501      	addne	r5, #1
 8017d40:	6804      	ldr	r4, [r0, #0]
 8017d42:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 8017d46:	bf18      	it	ne
 8017d48:	f025 0501 	bicne.w	r5, r5, #1
 8017d4c:	e9cd 1605 	strd	r1, r6, [sp, #20]
 8017d50:	990c      	ldr	r1, [sp, #48]	; 0x30
 8017d52:	bf18      	it	ne
 8017d54:	b2ad      	uxthne	r5, r5
 8017d56:	9104      	str	r1, [sp, #16]
 8017d58:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8017d5a:	e9cd 5a00 	strd	r5, sl, [sp]
 8017d5e:	e9cd 5102 	strd	r5, r1, [sp, #8]
 8017d62:	9926      	ldr	r1, [sp, #152]	; 0x98
 8017d64:	6d64      	ldr	r4, [r4, #84]	; 0x54
 8017d66:	47a0      	blx	r4
 8017d68:	b017      	add	sp, #92	; 0x5c
 8017d6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017d6e:	2300      	movs	r3, #0
 8017d70:	e7bf      	b.n	8017cf2 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 8017d72:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8017d74:	e724      	b.n	8017bc0 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x19c>
 8017d76:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017d78:	700b      	strb	r3, [r1, #0]
 8017d7a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8017d7c:	704b      	strb	r3, [r1, #1]
 8017d7e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017d80:	708b      	strb	r3, [r1, #2]
 8017d82:	e78a      	b.n	8017c9a <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x276>
 8017d84:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017d86:	b153      	cbz	r3, 8017d9e <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37a>
 8017d88:	441c      	add	r4, r3
 8017d8a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8017d8c:	b2a4      	uxth	r4, r4
 8017d8e:	eb03 03d4 	add.w	r3, r3, r4, lsr #3
 8017d92:	f004 0407 	and.w	r4, r4, #7
 8017d96:	781a      	ldrb	r2, [r3, #0]
 8017d98:	9326      	str	r3, [sp, #152]	; 0x98
 8017d9a:	4122      	asrs	r2, r4
 8017d9c:	b2d2      	uxtb	r2, r2
 8017d9e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017da0:	445b      	add	r3, fp
 8017da2:	9309      	str	r3, [sp, #36]	; 0x24
 8017da4:	e72a      	b.n	8017bfc <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1d8>
 8017da6:	bf00      	nop
 8017da8:	2400e074 	.word	0x2400e074
 8017dac:	2400e07c 	.word	0x2400e07c
 8017db0:	2400e076 	.word	0x2400e076
 8017db4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017db6:	2b00      	cmp	r3, #0
 8017db8:	d1d6      	bne.n	8017d68 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x344>
 8017dba:	4b06      	ldr	r3, [pc, #24]	; (8017dd4 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>)
 8017dbc:	6818      	ldr	r0, [r3, #0]
 8017dbe:	6803      	ldr	r3, [r0, #0]
 8017dc0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017dc2:	4798      	blx	r3
 8017dc4:	e7d0      	b.n	8017d68 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x344>
 8017dc6:	2b00      	cmp	r3, #0
 8017dc8:	f43f aea4 	beq.w	8017b14 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8017dcc:	f44f 7180 	mov.w	r1, #256	; 0x100
 8017dd0:	e79a      	b.n	8017d08 <_ZN8touchgfx8LCD24bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e4>
 8017dd2:	bf00      	nop
 8017dd4:	2400e07c 	.word	0x2400e07c

08017dd8 <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8017dd8:	b538      	push	{r3, r4, r5, lr}
 8017dda:	4c15      	ldr	r4, [pc, #84]	; (8017e30 <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8017ddc:	4605      	mov	r5, r0
 8017dde:	7823      	ldrb	r3, [r4, #0]
 8017de0:	f3bf 8f5b 	dmb	ish
 8017de4:	07da      	lsls	r2, r3, #31
 8017de6:	d40b      	bmi.n	8017e00 <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8017de8:	4620      	mov	r0, r4
 8017dea:	f007 fd1a 	bl	801f822 <__cxa_guard_acquire>
 8017dee:	b138      	cbz	r0, 8017e00 <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8017df0:	4620      	mov	r0, r4
 8017df2:	f007 fd22 	bl	801f83a <__cxa_guard_release>
 8017df6:	4a0f      	ldr	r2, [pc, #60]	; (8017e34 <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8017df8:	490f      	ldr	r1, [pc, #60]	; (8017e38 <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8017dfa:	4810      	ldr	r0, [pc, #64]	; (8017e3c <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8017dfc:	f007 fd0a 	bl	801f814 <__aeabi_atexit>
 8017e00:	4c0f      	ldr	r4, [pc, #60]	; (8017e40 <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8017e02:	7823      	ldrb	r3, [r4, #0]
 8017e04:	f3bf 8f5b 	dmb	ish
 8017e08:	07db      	lsls	r3, r3, #31
 8017e0a:	d40b      	bmi.n	8017e24 <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8017e0c:	4620      	mov	r0, r4
 8017e0e:	f007 fd08 	bl	801f822 <__cxa_guard_acquire>
 8017e12:	b138      	cbz	r0, 8017e24 <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8017e14:	4620      	mov	r0, r4
 8017e16:	f007 fd10 	bl	801f83a <__cxa_guard_release>
 8017e1a:	4a06      	ldr	r2, [pc, #24]	; (8017e34 <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8017e1c:	4909      	ldr	r1, [pc, #36]	; (8017e44 <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8017e1e:	480a      	ldr	r0, [pc, #40]	; (8017e48 <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8017e20:	f007 fcf8 	bl	801f814 <__aeabi_atexit>
 8017e24:	4b05      	ldr	r3, [pc, #20]	; (8017e3c <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8017e26:	612b      	str	r3, [r5, #16]
 8017e28:	4b07      	ldr	r3, [pc, #28]	; (8017e48 <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8017e2a:	616b      	str	r3, [r5, #20]
 8017e2c:	bd38      	pop	{r3, r4, r5, pc}
 8017e2e:	bf00      	nop
 8017e30:	2400e168 	.word	0x2400e168
 8017e34:	24000000 	.word	0x24000000
 8017e38:	08016711 	.word	0x08016711
 8017e3c:	240000a0 	.word	0x240000a0
 8017e40:	2400e16c 	.word	0x2400e16c
 8017e44:	0801670f 	.word	0x0801670f
 8017e48:	240000a4 	.word	0x240000a4

08017e4c <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8017e4c:	b538      	push	{r3, r4, r5, lr}
 8017e4e:	4c15      	ldr	r4, [pc, #84]	; (8017ea4 <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8017e50:	4605      	mov	r5, r0
 8017e52:	7823      	ldrb	r3, [r4, #0]
 8017e54:	f3bf 8f5b 	dmb	ish
 8017e58:	07da      	lsls	r2, r3, #31
 8017e5a:	d40b      	bmi.n	8017e74 <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8017e5c:	4620      	mov	r0, r4
 8017e5e:	f007 fce0 	bl	801f822 <__cxa_guard_acquire>
 8017e62:	b138      	cbz	r0, 8017e74 <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8017e64:	4620      	mov	r0, r4
 8017e66:	f007 fce8 	bl	801f83a <__cxa_guard_release>
 8017e6a:	4a0f      	ldr	r2, [pc, #60]	; (8017ea8 <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8017e6c:	490f      	ldr	r1, [pc, #60]	; (8017eac <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8017e6e:	4810      	ldr	r0, [pc, #64]	; (8017eb0 <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8017e70:	f007 fcd0 	bl	801f814 <__aeabi_atexit>
 8017e74:	4c0f      	ldr	r4, [pc, #60]	; (8017eb4 <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8017e76:	7823      	ldrb	r3, [r4, #0]
 8017e78:	f3bf 8f5b 	dmb	ish
 8017e7c:	07db      	lsls	r3, r3, #31
 8017e7e:	d40b      	bmi.n	8017e98 <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8017e80:	4620      	mov	r0, r4
 8017e82:	f007 fcce 	bl	801f822 <__cxa_guard_acquire>
 8017e86:	b138      	cbz	r0, 8017e98 <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8017e88:	4620      	mov	r0, r4
 8017e8a:	f007 fcd6 	bl	801f83a <__cxa_guard_release>
 8017e8e:	4a06      	ldr	r2, [pc, #24]	; (8017ea8 <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8017e90:	4909      	ldr	r1, [pc, #36]	; (8017eb8 <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8017e92:	480a      	ldr	r0, [pc, #40]	; (8017ebc <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8017e94:	f007 fcbe 	bl	801f814 <__aeabi_atexit>
 8017e98:	4b05      	ldr	r3, [pc, #20]	; (8017eb0 <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8017e9a:	60ab      	str	r3, [r5, #8]
 8017e9c:	4b07      	ldr	r3, [pc, #28]	; (8017ebc <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8017e9e:	60eb      	str	r3, [r5, #12]
 8017ea0:	bd38      	pop	{r3, r4, r5, pc}
 8017ea2:	bf00      	nop
 8017ea4:	2400e148 	.word	0x2400e148
 8017ea8:	24000000 	.word	0x24000000
 8017eac:	08016715 	.word	0x08016715
 8017eb0:	24000080 	.word	0x24000080
 8017eb4:	2400e14c 	.word	0x2400e14c
 8017eb8:	08016713 	.word	0x08016713
 8017ebc:	24000084 	.word	0x24000084

08017ec0 <_ZN8touchgfx8LCD24bpp28enableTextureMapperL8_RGB888Ev>:
 8017ec0:	b510      	push	{r4, lr}
 8017ec2:	4604      	mov	r4, r0
 8017ec4:	f7ff ff88 	bl	8017dd8 <_ZN8touchgfx8LCD24bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8017ec8:	4620      	mov	r0, r4
 8017eca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017ece:	f7ff bfbd 	b.w	8017e4c <_ZN8touchgfx8LCD24bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08017ed4 <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8017ed4:	b538      	push	{r3, r4, r5, lr}
 8017ed6:	4c15      	ldr	r4, [pc, #84]	; (8017f2c <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8017ed8:	4605      	mov	r5, r0
 8017eda:	7823      	ldrb	r3, [r4, #0]
 8017edc:	f3bf 8f5b 	dmb	ish
 8017ee0:	07da      	lsls	r2, r3, #31
 8017ee2:	d40b      	bmi.n	8017efc <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8017ee4:	4620      	mov	r0, r4
 8017ee6:	f007 fc9c 	bl	801f822 <__cxa_guard_acquire>
 8017eea:	b138      	cbz	r0, 8017efc <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8017eec:	4620      	mov	r0, r4
 8017eee:	f007 fca4 	bl	801f83a <__cxa_guard_release>
 8017ef2:	4a0f      	ldr	r2, [pc, #60]	; (8017f30 <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8017ef4:	490f      	ldr	r1, [pc, #60]	; (8017f34 <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8017ef6:	4810      	ldr	r0, [pc, #64]	; (8017f38 <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8017ef8:	f007 fc8c 	bl	801f814 <__aeabi_atexit>
 8017efc:	4c0f      	ldr	r4, [pc, #60]	; (8017f3c <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8017efe:	7823      	ldrb	r3, [r4, #0]
 8017f00:	f3bf 8f5b 	dmb	ish
 8017f04:	07db      	lsls	r3, r3, #31
 8017f06:	d40b      	bmi.n	8017f20 <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8017f08:	4620      	mov	r0, r4
 8017f0a:	f007 fc8a 	bl	801f822 <__cxa_guard_acquire>
 8017f0e:	b138      	cbz	r0, 8017f20 <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8017f10:	4620      	mov	r0, r4
 8017f12:	f007 fc92 	bl	801f83a <__cxa_guard_release>
 8017f16:	4a06      	ldr	r2, [pc, #24]	; (8017f30 <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8017f18:	4909      	ldr	r1, [pc, #36]	; (8017f40 <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8017f1a:	480a      	ldr	r0, [pc, #40]	; (8017f44 <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8017f1c:	f007 fc7a 	bl	801f814 <__aeabi_atexit>
 8017f20:	4b05      	ldr	r3, [pc, #20]	; (8017f38 <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8017f22:	622b      	str	r3, [r5, #32]
 8017f24:	4b07      	ldr	r3, [pc, #28]	; (8017f44 <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8017f26:	626b      	str	r3, [r5, #36]	; 0x24
 8017f28:	bd38      	pop	{r3, r4, r5, pc}
 8017f2a:	bf00      	nop
 8017f2c:	2400e170 	.word	0x2400e170
 8017f30:	24000000 	.word	0x24000000
 8017f34:	08016709 	.word	0x08016709
 8017f38:	240000a8 	.word	0x240000a8
 8017f3c:	2400e174 	.word	0x2400e174
 8017f40:	08016707 	.word	0x08016707
 8017f44:	240000ac 	.word	0x240000ac

08017f48 <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8017f48:	b538      	push	{r3, r4, r5, lr}
 8017f4a:	4c15      	ldr	r4, [pc, #84]	; (8017fa0 <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8017f4c:	4605      	mov	r5, r0
 8017f4e:	7823      	ldrb	r3, [r4, #0]
 8017f50:	f3bf 8f5b 	dmb	ish
 8017f54:	07da      	lsls	r2, r3, #31
 8017f56:	d40b      	bmi.n	8017f70 <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8017f58:	4620      	mov	r0, r4
 8017f5a:	f007 fc62 	bl	801f822 <__cxa_guard_acquire>
 8017f5e:	b138      	cbz	r0, 8017f70 <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8017f60:	4620      	mov	r0, r4
 8017f62:	f007 fc6a 	bl	801f83a <__cxa_guard_release>
 8017f66:	4a0f      	ldr	r2, [pc, #60]	; (8017fa4 <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8017f68:	490f      	ldr	r1, [pc, #60]	; (8017fa8 <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8017f6a:	4810      	ldr	r0, [pc, #64]	; (8017fac <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8017f6c:	f007 fc52 	bl	801f814 <__aeabi_atexit>
 8017f70:	4c0f      	ldr	r4, [pc, #60]	; (8017fb0 <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8017f72:	7823      	ldrb	r3, [r4, #0]
 8017f74:	f3bf 8f5b 	dmb	ish
 8017f78:	07db      	lsls	r3, r3, #31
 8017f7a:	d40b      	bmi.n	8017f94 <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8017f7c:	4620      	mov	r0, r4
 8017f7e:	f007 fc50 	bl	801f822 <__cxa_guard_acquire>
 8017f82:	b138      	cbz	r0, 8017f94 <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8017f84:	4620      	mov	r0, r4
 8017f86:	f007 fc58 	bl	801f83a <__cxa_guard_release>
 8017f8a:	4a06      	ldr	r2, [pc, #24]	; (8017fa4 <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8017f8c:	4909      	ldr	r1, [pc, #36]	; (8017fb4 <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8017f8e:	480a      	ldr	r0, [pc, #40]	; (8017fb8 <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8017f90:	f007 fc40 	bl	801f814 <__aeabi_atexit>
 8017f94:	4b05      	ldr	r3, [pc, #20]	; (8017fac <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8017f96:	61ab      	str	r3, [r5, #24]
 8017f98:	4b07      	ldr	r3, [pc, #28]	; (8017fb8 <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8017f9a:	61eb      	str	r3, [r5, #28]
 8017f9c:	bd38      	pop	{r3, r4, r5, pc}
 8017f9e:	bf00      	nop
 8017fa0:	2400e150 	.word	0x2400e150
 8017fa4:	24000000 	.word	0x24000000
 8017fa8:	0801670d 	.word	0x0801670d
 8017fac:	24000088 	.word	0x24000088
 8017fb0:	2400e154 	.word	0x2400e154
 8017fb4:	0801670b 	.word	0x0801670b
 8017fb8:	2400008c 	.word	0x2400008c

08017fbc <_ZN8touchgfx8LCD24bpp30enableTextureMapperL8_ARGB8888Ev>:
 8017fbc:	b510      	push	{r4, lr}
 8017fbe:	4604      	mov	r4, r0
 8017fc0:	f7ff ff88 	bl	8017ed4 <_ZN8touchgfx8LCD24bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8017fc4:	4620      	mov	r0, r4
 8017fc6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017fca:	f7ff bfbd 	b.w	8017f48 <_ZN8touchgfx8LCD24bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08017fd0 <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv>:
 8017fd0:	b538      	push	{r3, r4, r5, lr}
 8017fd2:	4c15      	ldr	r4, [pc, #84]	; (8018028 <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x58>)
 8017fd4:	4605      	mov	r5, r0
 8017fd6:	7823      	ldrb	r3, [r4, #0]
 8017fd8:	f3bf 8f5b 	dmb	ish
 8017fdc:	07da      	lsls	r2, r3, #31
 8017fde:	d40b      	bmi.n	8017ff8 <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x28>
 8017fe0:	4620      	mov	r0, r4
 8017fe2:	f007 fc1e 	bl	801f822 <__cxa_guard_acquire>
 8017fe6:	b138      	cbz	r0, 8017ff8 <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x28>
 8017fe8:	4620      	mov	r0, r4
 8017fea:	f007 fc26 	bl	801f83a <__cxa_guard_release>
 8017fee:	4a0f      	ldr	r2, [pc, #60]	; (801802c <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x5c>)
 8017ff0:	490f      	ldr	r1, [pc, #60]	; (8018030 <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x60>)
 8017ff2:	4810      	ldr	r0, [pc, #64]	; (8018034 <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x64>)
 8017ff4:	f007 fc0e 	bl	801f814 <__aeabi_atexit>
 8017ff8:	4c0f      	ldr	r4, [pc, #60]	; (8018038 <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x68>)
 8017ffa:	7823      	ldrb	r3, [r4, #0]
 8017ffc:	f3bf 8f5b 	dmb	ish
 8018000:	07db      	lsls	r3, r3, #31
 8018002:	d40b      	bmi.n	801801c <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x4c>
 8018004:	4620      	mov	r0, r4
 8018006:	f007 fc0c 	bl	801f822 <__cxa_guard_acquire>
 801800a:	b138      	cbz	r0, 801801c <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x4c>
 801800c:	4620      	mov	r0, r4
 801800e:	f007 fc14 	bl	801f83a <__cxa_guard_release>
 8018012:	4a06      	ldr	r2, [pc, #24]	; (801802c <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x5c>)
 8018014:	4909      	ldr	r1, [pc, #36]	; (801803c <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x6c>)
 8018016:	480a      	ldr	r0, [pc, #40]	; (8018040 <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x70>)
 8018018:	f007 fbfc 	bl	801f814 <__aeabi_atexit>
 801801c:	4b05      	ldr	r3, [pc, #20]	; (8018034 <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x64>)
 801801e:	632b      	str	r3, [r5, #48]	; 0x30
 8018020:	4b07      	ldr	r3, [pc, #28]	; (8018040 <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv+0x70>)
 8018022:	636b      	str	r3, [r5, #52]	; 0x34
 8018024:	bd38      	pop	{r3, r4, r5, pc}
 8018026:	bf00      	nop
 8018028:	2400e158 	.word	0x2400e158
 801802c:	24000000 	.word	0x24000000
 8018030:	08016701 	.word	0x08016701
 8018034:	24000090 	.word	0x24000090
 8018038:	2400e15c 	.word	0x2400e15c
 801803c:	080166ff 	.word	0x080166ff
 8018040:	24000094 	.word	0x24000094

08018044 <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv>:
 8018044:	b538      	push	{r3, r4, r5, lr}
 8018046:	4c15      	ldr	r4, [pc, #84]	; (801809c <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x58>)
 8018048:	4605      	mov	r5, r0
 801804a:	7823      	ldrb	r3, [r4, #0]
 801804c:	f3bf 8f5b 	dmb	ish
 8018050:	07da      	lsls	r2, r3, #31
 8018052:	d40b      	bmi.n	801806c <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x28>
 8018054:	4620      	mov	r0, r4
 8018056:	f007 fbe4 	bl	801f822 <__cxa_guard_acquire>
 801805a:	b138      	cbz	r0, 801806c <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x28>
 801805c:	4620      	mov	r0, r4
 801805e:	f007 fbec 	bl	801f83a <__cxa_guard_release>
 8018062:	4a0f      	ldr	r2, [pc, #60]	; (80180a0 <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x5c>)
 8018064:	490f      	ldr	r1, [pc, #60]	; (80180a4 <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x60>)
 8018066:	4810      	ldr	r0, [pc, #64]	; (80180a8 <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x64>)
 8018068:	f007 fbd4 	bl	801f814 <__aeabi_atexit>
 801806c:	4c0f      	ldr	r4, [pc, #60]	; (80180ac <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x68>)
 801806e:	7823      	ldrb	r3, [r4, #0]
 8018070:	f3bf 8f5b 	dmb	ish
 8018074:	07db      	lsls	r3, r3, #31
 8018076:	d40b      	bmi.n	8018090 <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x4c>
 8018078:	4620      	mov	r0, r4
 801807a:	f007 fbd2 	bl	801f822 <__cxa_guard_acquire>
 801807e:	b138      	cbz	r0, 8018090 <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x4c>
 8018080:	4620      	mov	r0, r4
 8018082:	f007 fbda 	bl	801f83a <__cxa_guard_release>
 8018086:	4a06      	ldr	r2, [pc, #24]	; (80180a0 <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x5c>)
 8018088:	4909      	ldr	r1, [pc, #36]	; (80180b0 <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x6c>)
 801808a:	480a      	ldr	r0, [pc, #40]	; (80180b4 <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x70>)
 801808c:	f007 fbc2 	bl	801f814 <__aeabi_atexit>
 8018090:	4b05      	ldr	r3, [pc, #20]	; (80180a8 <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x64>)
 8018092:	62ab      	str	r3, [r5, #40]	; 0x28
 8018094:	4b07      	ldr	r3, [pc, #28]	; (80180b4 <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv+0x70>)
 8018096:	62eb      	str	r3, [r5, #44]	; 0x2c
 8018098:	bd38      	pop	{r3, r4, r5, pc}
 801809a:	bf00      	nop
 801809c:	2400e130 	.word	0x2400e130
 80180a0:	24000000 	.word	0x24000000
 80180a4:	08016705 	.word	0x08016705
 80180a8:	24000068 	.word	0x24000068
 80180ac:	2400e134 	.word	0x2400e134
 80180b0:	08016703 	.word	0x08016703
 80180b4:	2400006c 	.word	0x2400006c

080180b8 <_ZN8touchgfx8LCD24bpp25enableTextureMapperRGB888Ev>:
 80180b8:	b510      	push	{r4, lr}
 80180ba:	4604      	mov	r4, r0
 80180bc:	f7ff ff88 	bl	8017fd0 <_ZN8touchgfx8LCD24bpp47enableTextureMapperRGB888_BilinearInterpolationEv>
 80180c0:	4620      	mov	r0, r4
 80180c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80180c6:	f7ff bfbd 	b.w	8018044 <_ZN8touchgfx8LCD24bpp41enableTextureMapperRGB888_NearestNeighborEv>
	...

080180cc <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 80180cc:	b538      	push	{r3, r4, r5, lr}
 80180ce:	4c15      	ldr	r4, [pc, #84]	; (8018124 <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 80180d0:	4605      	mov	r5, r0
 80180d2:	7823      	ldrb	r3, [r4, #0]
 80180d4:	f3bf 8f5b 	dmb	ish
 80180d8:	07da      	lsls	r2, r3, #31
 80180da:	d40b      	bmi.n	80180f4 <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80180dc:	4620      	mov	r0, r4
 80180de:	f007 fba0 	bl	801f822 <__cxa_guard_acquire>
 80180e2:	b138      	cbz	r0, 80180f4 <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80180e4:	4620      	mov	r0, r4
 80180e6:	f007 fba8 	bl	801f83a <__cxa_guard_release>
 80180ea:	4a0f      	ldr	r2, [pc, #60]	; (8018128 <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80180ec:	490f      	ldr	r1, [pc, #60]	; (801812c <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 80180ee:	4810      	ldr	r0, [pc, #64]	; (8018130 <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80180f0:	f007 fb90 	bl	801f814 <__aeabi_atexit>
 80180f4:	4c0f      	ldr	r4, [pc, #60]	; (8018134 <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 80180f6:	7823      	ldrb	r3, [r4, #0]
 80180f8:	f3bf 8f5b 	dmb	ish
 80180fc:	07db      	lsls	r3, r3, #31
 80180fe:	d40b      	bmi.n	8018118 <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8018100:	4620      	mov	r0, r4
 8018102:	f007 fb8e 	bl	801f822 <__cxa_guard_acquire>
 8018106:	b138      	cbz	r0, 8018118 <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8018108:	4620      	mov	r0, r4
 801810a:	f007 fb96 	bl	801f83a <__cxa_guard_release>
 801810e:	4a06      	ldr	r2, [pc, #24]	; (8018128 <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8018110:	4909      	ldr	r1, [pc, #36]	; (8018138 <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 8018112:	480a      	ldr	r0, [pc, #40]	; (801813c <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8018114:	f007 fb7e 	bl	801f814 <__aeabi_atexit>
 8018118:	4b05      	ldr	r3, [pc, #20]	; (8018130 <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801811a:	642b      	str	r3, [r5, #64]	; 0x40
 801811c:	4b07      	ldr	r3, [pc, #28]	; (801813c <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801811e:	646b      	str	r3, [r5, #68]	; 0x44
 8018120:	bd38      	pop	{r3, r4, r5, pc}
 8018122:	bf00      	nop
 8018124:	2400e160 	.word	0x2400e160
 8018128:	24000000 	.word	0x24000000
 801812c:	080166f9 	.word	0x080166f9
 8018130:	24000098 	.word	0x24000098
 8018134:	2400e164 	.word	0x2400e164
 8018138:	080166f7 	.word	0x080166f7
 801813c:	2400009c 	.word	0x2400009c

08018140 <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8018140:	b538      	push	{r3, r4, r5, lr}
 8018142:	4c15      	ldr	r4, [pc, #84]	; (8018198 <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8018144:	4605      	mov	r5, r0
 8018146:	7823      	ldrb	r3, [r4, #0]
 8018148:	f3bf 8f5b 	dmb	ish
 801814c:	07da      	lsls	r2, r3, #31
 801814e:	d40b      	bmi.n	8018168 <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8018150:	4620      	mov	r0, r4
 8018152:	f007 fb66 	bl	801f822 <__cxa_guard_acquire>
 8018156:	b138      	cbz	r0, 8018168 <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8018158:	4620      	mov	r0, r4
 801815a:	f007 fb6e 	bl	801f83a <__cxa_guard_release>
 801815e:	4a0f      	ldr	r2, [pc, #60]	; (801819c <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8018160:	490f      	ldr	r1, [pc, #60]	; (80181a0 <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 8018162:	4810      	ldr	r0, [pc, #64]	; (80181a4 <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8018164:	f007 fb56 	bl	801f814 <__aeabi_atexit>
 8018168:	4c0f      	ldr	r4, [pc, #60]	; (80181a8 <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801816a:	7823      	ldrb	r3, [r4, #0]
 801816c:	f3bf 8f5b 	dmb	ish
 8018170:	07db      	lsls	r3, r3, #31
 8018172:	d40b      	bmi.n	801818c <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8018174:	4620      	mov	r0, r4
 8018176:	f007 fb54 	bl	801f822 <__cxa_guard_acquire>
 801817a:	b138      	cbz	r0, 801818c <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801817c:	4620      	mov	r0, r4
 801817e:	f007 fb5c 	bl	801f83a <__cxa_guard_release>
 8018182:	4a06      	ldr	r2, [pc, #24]	; (801819c <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8018184:	4909      	ldr	r1, [pc, #36]	; (80181ac <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 8018186:	480a      	ldr	r0, [pc, #40]	; (80181b0 <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8018188:	f007 fb44 	bl	801f814 <__aeabi_atexit>
 801818c:	4b05      	ldr	r3, [pc, #20]	; (80181a4 <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801818e:	63ab      	str	r3, [r5, #56]	; 0x38
 8018190:	4b07      	ldr	r3, [pc, #28]	; (80181b0 <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8018192:	63eb      	str	r3, [r5, #60]	; 0x3c
 8018194:	bd38      	pop	{r3, r4, r5, pc}
 8018196:	bf00      	nop
 8018198:	2400e140 	.word	0x2400e140
 801819c:	24000000 	.word	0x24000000
 80181a0:	080166fd 	.word	0x080166fd
 80181a4:	24000078 	.word	0x24000078
 80181a8:	2400e144 	.word	0x2400e144
 80181ac:	080166fb 	.word	0x080166fb
 80181b0:	2400007c 	.word	0x2400007c

080181b4 <_ZN8touchgfx8LCD24bpp27enableTextureMapperARGB8888Ev>:
 80181b4:	b510      	push	{r4, lr}
 80181b6:	4604      	mov	r4, r0
 80181b8:	f7ff ff88 	bl	80180cc <_ZN8touchgfx8LCD24bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 80181bc:	4620      	mov	r0, r4
 80181be:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80181c2:	f7ff bfbd 	b.w	8018140 <_ZN8touchgfx8LCD24bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

080181c8 <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 80181c8:	b538      	push	{r3, r4, r5, lr}
 80181ca:	4c15      	ldr	r4, [pc, #84]	; (8018220 <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 80181cc:	4605      	mov	r5, r0
 80181ce:	7823      	ldrb	r3, [r4, #0]
 80181d0:	f3bf 8f5b 	dmb	ish
 80181d4:	07da      	lsls	r2, r3, #31
 80181d6:	d40b      	bmi.n	80181f0 <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80181d8:	4620      	mov	r0, r4
 80181da:	f007 fb22 	bl	801f822 <__cxa_guard_acquire>
 80181de:	b138      	cbz	r0, 80181f0 <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80181e0:	4620      	mov	r0, r4
 80181e2:	f007 fb2a 	bl	801f83a <__cxa_guard_release>
 80181e6:	4a0f      	ldr	r2, [pc, #60]	; (8018224 <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80181e8:	490f      	ldr	r1, [pc, #60]	; (8018228 <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 80181ea:	4810      	ldr	r0, [pc, #64]	; (801822c <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80181ec:	f007 fb12 	bl	801f814 <__aeabi_atexit>
 80181f0:	4c0f      	ldr	r4, [pc, #60]	; (8018230 <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 80181f2:	7823      	ldrb	r3, [r4, #0]
 80181f4:	f3bf 8f5b 	dmb	ish
 80181f8:	07db      	lsls	r3, r3, #31
 80181fa:	d40b      	bmi.n	8018214 <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80181fc:	4620      	mov	r0, r4
 80181fe:	f007 fb10 	bl	801f822 <__cxa_guard_acquire>
 8018202:	b138      	cbz	r0, 8018214 <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8018204:	4620      	mov	r0, r4
 8018206:	f007 fb18 	bl	801f83a <__cxa_guard_release>
 801820a:	4a06      	ldr	r2, [pc, #24]	; (8018224 <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801820c:	4909      	ldr	r1, [pc, #36]	; (8018234 <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801820e:	480a      	ldr	r0, [pc, #40]	; (8018238 <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8018210:	f007 fb00 	bl	801f814 <__aeabi_atexit>
 8018214:	4b05      	ldr	r3, [pc, #20]	; (801822c <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8018216:	652b      	str	r3, [r5, #80]	; 0x50
 8018218:	4b07      	ldr	r3, [pc, #28]	; (8018238 <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801821a:	656b      	str	r3, [r5, #84]	; 0x54
 801821c:	bd38      	pop	{r3, r4, r5, pc}
 801821e:	bf00      	nop
 8018220:	2400e138 	.word	0x2400e138
 8018224:	24000000 	.word	0x24000000
 8018228:	080166f1 	.word	0x080166f1
 801822c:	24000070 	.word	0x24000070
 8018230:	2400e13c 	.word	0x2400e13c
 8018234:	080166ef 	.word	0x080166ef
 8018238:	24000074 	.word	0x24000074

0801823c <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv>:
 801823c:	b538      	push	{r3, r4, r5, lr}
 801823e:	4c15      	ldr	r4, [pc, #84]	; (8018294 <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8018240:	4605      	mov	r5, r0
 8018242:	7823      	ldrb	r3, [r4, #0]
 8018244:	f3bf 8f5b 	dmb	ish
 8018248:	07da      	lsls	r2, r3, #31
 801824a:	d40b      	bmi.n	8018264 <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801824c:	4620      	mov	r0, r4
 801824e:	f007 fae8 	bl	801f822 <__cxa_guard_acquire>
 8018252:	b138      	cbz	r0, 8018264 <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8018254:	4620      	mov	r0, r4
 8018256:	f007 faf0 	bl	801f83a <__cxa_guard_release>
 801825a:	4a0f      	ldr	r2, [pc, #60]	; (8018298 <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801825c:	490f      	ldr	r1, [pc, #60]	; (801829c <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801825e:	4810      	ldr	r0, [pc, #64]	; (80182a0 <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8018260:	f007 fad8 	bl	801f814 <__aeabi_atexit>
 8018264:	4c0f      	ldr	r4, [pc, #60]	; (80182a4 <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 8018266:	7823      	ldrb	r3, [r4, #0]
 8018268:	f3bf 8f5b 	dmb	ish
 801826c:	07db      	lsls	r3, r3, #31
 801826e:	d40b      	bmi.n	8018288 <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8018270:	4620      	mov	r0, r4
 8018272:	f007 fad6 	bl	801f822 <__cxa_guard_acquire>
 8018276:	b138      	cbz	r0, 8018288 <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8018278:	4620      	mov	r0, r4
 801827a:	f007 fade 	bl	801f83a <__cxa_guard_release>
 801827e:	4a06      	ldr	r2, [pc, #24]	; (8018298 <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8018280:	4909      	ldr	r1, [pc, #36]	; (80182a8 <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 8018282:	480a      	ldr	r0, [pc, #40]	; (80182ac <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8018284:	f007 fac6 	bl	801f814 <__aeabi_atexit>
 8018288:	4b05      	ldr	r3, [pc, #20]	; (80182a0 <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801828a:	64ab      	str	r3, [r5, #72]	; 0x48
 801828c:	4b07      	ldr	r3, [pc, #28]	; (80182ac <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801828e:	64eb      	str	r3, [r5, #76]	; 0x4c
 8018290:	bd38      	pop	{r3, r4, r5, pc}
 8018292:	bf00      	nop
 8018294:	2400e128 	.word	0x2400e128
 8018298:	24000000 	.word	0x24000000
 801829c:	080166f5 	.word	0x080166f5
 80182a0:	24000060 	.word	0x24000060
 80182a4:	2400e12c 	.word	0x2400e12c
 80182a8:	080166f3 	.word	0x080166f3
 80182ac:	24000064 	.word	0x24000064

080182b0 <_ZN8touchgfx8LCD24bpp21enableTextureMapperA4Ev>:
 80182b0:	b510      	push	{r4, lr}
 80182b2:	4604      	mov	r4, r0
 80182b4:	f7ff ff88 	bl	80181c8 <_ZN8touchgfx8LCD24bpp43enableTextureMapperA4_BilinearInterpolationEv>
 80182b8:	4620      	mov	r0, r4
 80182ba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80182be:	f7ff bfbd 	b.w	801823c <_ZN8touchgfx8LCD24bpp37enableTextureMapperA4_NearestNeighborEv>

080182c2 <_ZN8touchgfx8LCD24bpp22enableTextureMapperAllEv>:
 80182c2:	b510      	push	{r4, lr}
 80182c4:	4604      	mov	r4, r0
 80182c6:	f7ff fff3 	bl	80182b0 <_ZN8touchgfx8LCD24bpp21enableTextureMapperA4Ev>
 80182ca:	4620      	mov	r0, r4
 80182cc:	f7ff ff72 	bl	80181b4 <_ZN8touchgfx8LCD24bpp27enableTextureMapperARGB8888Ev>
 80182d0:	4620      	mov	r0, r4
 80182d2:	f7ff fe73 	bl	8017fbc <_ZN8touchgfx8LCD24bpp30enableTextureMapperL8_ARGB8888Ev>
 80182d6:	4620      	mov	r0, r4
 80182d8:	f7ff fdf2 	bl	8017ec0 <_ZN8touchgfx8LCD24bpp28enableTextureMapperL8_RGB888Ev>
 80182dc:	4620      	mov	r0, r4
 80182de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80182e2:	f7ff bee9 	b.w	80180b8 <_ZN8touchgfx8LCD24bpp25enableTextureMapperRGB888Ev>
	...

080182e8 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh>:
 80182e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80182ec:	b087      	sub	sp, #28
 80182ee:	7888      	ldrb	r0, [r1, #2]
 80182f0:	4616      	mov	r6, r2
 80182f2:	9001      	str	r0, [sp, #4]
 80182f4:	7848      	ldrb	r0, [r1, #1]
 80182f6:	9100      	str	r1, [sp, #0]
 80182f8:	9002      	str	r0, [sp, #8]
 80182fa:	7808      	ldrb	r0, [r1, #0]
 80182fc:	9901      	ldr	r1, [sp, #4]
 80182fe:	9003      	str	r0, [sp, #12]
 8018300:	9802      	ldr	r0, [sp, #8]
 8018302:	f9bd e040 	ldrsh.w	lr, [sp, #64]	; 0x40
 8018306:	0200      	lsls	r0, r0, #8
 8018308:	f9bd 9044 	ldrsh.w	r9, [sp, #68]	; 0x44
 801830c:	f89d 2050 	ldrb.w	r2, [sp, #80]	; 0x50
 8018310:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8018314:	9903      	ldr	r1, [sp, #12]
 8018316:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801831a:	4308      	orrs	r0, r1
 801831c:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 8018320:	e9dd c512 	ldrd	ip, r5, [sp, #72]	; 0x48
 8018324:	9005      	str	r0, [sp, #20]
 8018326:	fb05 ca0e 	mla	sl, r5, lr, ip
 801832a:	2d00      	cmp	r5, #0
 801832c:	eb06 080a 	add.w	r8, r6, sl
 8018330:	db4a      	blt.n	80183c8 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0xe0>
 8018332:	45a9      	cmp	r9, r5
 8018334:	dd48      	ble.n	80183c8 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0xe0>
 8018336:	f1bc 0f00 	cmp.w	ip, #0
 801833a:	db43      	blt.n	80183c4 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0xdc>
 801833c:	45e6      	cmp	lr, ip
 801833e:	dd41      	ble.n	80183c4 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0xdc>
 8018340:	f816 600a 	ldrb.w	r6, [r6, sl]
 8018344:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8018348:	441e      	add	r6, r3
 801834a:	f11c 0001 	adds.w	r0, ip, #1
 801834e:	d43e      	bmi.n	80183ce <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0xe6>
 8018350:	4586      	cmp	lr, r0
 8018352:	dd3c      	ble.n	80183ce <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0xe6>
 8018354:	2a00      	cmp	r2, #0
 8018356:	d03a      	beq.n	80183ce <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0xe6>
 8018358:	f898 0001 	ldrb.w	r0, [r8, #1]
 801835c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8018360:	4418      	add	r0, r3
 8018362:	3501      	adds	r5, #1
 8018364:	d437      	bmi.n	80183d6 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0xee>
 8018366:	45a9      	cmp	r9, r5
 8018368:	dd35      	ble.n	80183d6 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0xee>
 801836a:	b3a4      	cbz	r4, 80183d6 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0xee>
 801836c:	f1bc 0f00 	cmp.w	ip, #0
 8018370:	db2f      	blt.n	80183d2 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0xea>
 8018372:	45e6      	cmp	lr, ip
 8018374:	dd2d      	ble.n	80183d2 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0xea>
 8018376:	f818 500e 	ldrb.w	r5, [r8, lr]
 801837a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801837e:	441d      	add	r5, r3
 8018380:	f11c 0c01 	adds.w	ip, ip, #1
 8018384:	d42a      	bmi.n	80183dc <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0xf4>
 8018386:	45e6      	cmp	lr, ip
 8018388:	dd28      	ble.n	80183dc <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0xf4>
 801838a:	b33a      	cbz	r2, 80183dc <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0xf4>
 801838c:	44c6      	add	lr, r8
 801838e:	f89e c001 	ldrb.w	ip, [lr, #1]
 8018392:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8018396:	4463      	add	r3, ip
 8018398:	ea6f 0c07 	mvn.w	ip, r7
 801839c:	2a0f      	cmp	r2, #15
 801839e:	f896 a000 	ldrb.w	sl, [r6]
 80183a2:	fa5f fc8c 	uxtb.w	ip, ip
 80183a6:	f890 b000 	ldrb.w	fp, [r0]
 80183aa:	f895 9000 	ldrb.w	r9, [r5]
 80183ae:	7819      	ldrb	r1, [r3, #0]
 80183b0:	d801      	bhi.n	80183b6 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0xce>
 80183b2:	2c0f      	cmp	r4, #15
 80183b4:	d914      	bls.n	80183e0 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0xf8>
 80183b6:	4b40      	ldr	r3, [pc, #256]	; (80184b8 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1d0>)
 80183b8:	f240 115b 	movw	r1, #347	; 0x15b
 80183bc:	4a3f      	ldr	r2, [pc, #252]	; (80184bc <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1d4>)
 80183be:	4840      	ldr	r0, [pc, #256]	; (80184c0 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x1d8>)
 80183c0:	f007 fc0a 	bl	801fbd8 <__assert_func>
 80183c4:	ae05      	add	r6, sp, #20
 80183c6:	e7c0      	b.n	801834a <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x62>
 80183c8:	a805      	add	r0, sp, #20
 80183ca:	4606      	mov	r6, r0
 80183cc:	e7c9      	b.n	8018362 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x7a>
 80183ce:	a805      	add	r0, sp, #20
 80183d0:	e7c7      	b.n	8018362 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x7a>
 80183d2:	ad05      	add	r5, sp, #20
 80183d4:	e7d4      	b.n	8018380 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0x98>
 80183d6:	ab05      	add	r3, sp, #20
 80183d8:	461d      	mov	r5, r3
 80183da:	e7dd      	b.n	8018398 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0xb0>
 80183dc:	ab05      	add	r3, sp, #20
 80183de:	e7db      	b.n	8018398 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh+0xb0>
 80183e0:	b292      	uxth	r2, r2
 80183e2:	b2a4      	uxth	r4, r4
 80183e4:	fa1f fc8c 	uxth.w	ip, ip
 80183e8:	fb02 f804 	mul.w	r8, r2, r4
 80183ec:	0112      	lsls	r2, r2, #4
 80183ee:	b2bf      	uxth	r7, r7
 80183f0:	ebc8 1404 	rsb	r4, r8, r4, lsl #4
 80183f4:	f5c2 7e80 	rsb	lr, r2, #256	; 0x100
 80183f8:	eba2 0208 	sub.w	r2, r2, r8
 80183fc:	b2a4      	uxth	r4, r4
 80183fe:	b292      	uxth	r2, r2
 8018400:	ebae 0e04 	sub.w	lr, lr, r4
 8018404:	fb02 fb0b 	mul.w	fp, r2, fp
 8018408:	fa1f fe8e 	uxth.w	lr, lr
 801840c:	fb0e ba0a 	mla	sl, lr, sl, fp
 8018410:	fb04 aa09 	mla	sl, r4, r9, sl
 8018414:	fb08 aa01 	mla	sl, r8, r1, sl
 8018418:	9903      	ldr	r1, [sp, #12]
 801841a:	fb11 f90c 	smulbb	r9, r1, ip
 801841e:	f3ca 2a07 	ubfx	sl, sl, #8, #8
 8018422:	9900      	ldr	r1, [sp, #0]
 8018424:	fb0a 9a07 	mla	sl, sl, r7, r9
 8018428:	fa1f fa8a 	uxth.w	sl, sl
 801842c:	f10a 0901 	add.w	r9, sl, #1
 8018430:	eb09 2a1a 	add.w	sl, r9, sl, lsr #8
 8018434:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 8018438:	f881 a000 	strb.w	sl, [r1]
 801843c:	f890 a001 	ldrb.w	sl, [r0, #1]
 8018440:	f896 9001 	ldrb.w	r9, [r6, #1]
 8018444:	fb02 fa0a 	mul.w	sl, r2, sl
 8018448:	9902      	ldr	r1, [sp, #8]
 801844a:	fb0e aa09 	mla	sl, lr, r9, sl
 801844e:	f895 9001 	ldrb.w	r9, [r5, #1]
 8018452:	fb04 aa09 	mla	sl, r4, r9, sl
 8018456:	f893 9001 	ldrb.w	r9, [r3, #1]
 801845a:	fb08 a909 	mla	r9, r8, r9, sl
 801845e:	fb11 fa0c 	smulbb	sl, r1, ip
 8018462:	9900      	ldr	r1, [sp, #0]
 8018464:	f3c9 2907 	ubfx	r9, r9, #8, #8
 8018468:	fb09 a907 	mla	r9, r9, r7, sl
 801846c:	fa1f f989 	uxth.w	r9, r9
 8018470:	f109 0a01 	add.w	sl, r9, #1
 8018474:	eb0a 2919 	add.w	r9, sl, r9, lsr #8
 8018478:	ea4f 2929 	mov.w	r9, r9, asr #8
 801847c:	f881 9001 	strb.w	r9, [r1, #1]
 8018480:	7880      	ldrb	r0, [r0, #2]
 8018482:	78b6      	ldrb	r6, [r6, #2]
 8018484:	4342      	muls	r2, r0
 8018486:	78a8      	ldrb	r0, [r5, #2]
 8018488:	789b      	ldrb	r3, [r3, #2]
 801848a:	fb0e 2206 	mla	r2, lr, r6, r2
 801848e:	fb04 2400 	mla	r4, r4, r0, r2
 8018492:	fb08 4803 	mla	r8, r8, r3, r4
 8018496:	9b01      	ldr	r3, [sp, #4]
 8018498:	fb13 fc0c 	smulbb	ip, r3, ip
 801849c:	f3c8 2807 	ubfx	r8, r8, #8, #8
 80184a0:	fb08 c707 	mla	r7, r8, r7, ip
 80184a4:	b2bf      	uxth	r7, r7
 80184a6:	f107 0c01 	add.w	ip, r7, #1
 80184aa:	eb0c 2717 	add.w	r7, ip, r7, lsr #8
 80184ae:	123f      	asrs	r7, r7, #8
 80184b0:	708f      	strb	r7, [r1, #2]
 80184b2:	b007      	add	sp, #28
 80184b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80184b8:	08024e84 	.word	0x08024e84
 80184bc:	0802529a 	.word	0x0802529a
 80184c0:	08024e51 	.word	0x08024e51

080184c4 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80184c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80184c8:	ed2d 8b08 	vpush	{d8-d11}
 80184cc:	b093      	sub	sp, #76	; 0x4c
 80184ce:	eeb0 aa40 	vmov.f32	s20, s0
 80184d2:	eef0 9a60 	vmov.f32	s19, s1
 80184d6:	9210      	str	r2, [sp, #64]	; 0x40
 80184d8:	eeb0 9a41 	vmov.f32	s18, s2
 80184dc:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80184de:	eeb0 8a62 	vmov.f32	s16, s5
 80184e2:	9309      	str	r3, [sp, #36]	; 0x24
 80184e4:	eef0 8a43 	vmov.f32	s17, s6
 80184e8:	f89d 30b4 	ldrb.w	r3, [sp, #180]	; 0xb4
 80184ec:	eef0 ba44 	vmov.f32	s23, s8
 80184f0:	9011      	str	r0, [sp, #68]	; 0x44
 80184f2:	eeb0 ba64 	vmov.f32	s22, s9
 80184f6:	930e      	str	r3, [sp, #56]	; 0x38
 80184f8:	eef0 aa45 	vmov.f32	s21, s10
 80184fc:	6850      	ldr	r0, [r2, #4]
 80184fe:	910d      	str	r1, [sp, #52]	; 0x34
 8018500:	6812      	ldr	r2, [r2, #0]
 8018502:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8018506:	fb00 1303 	mla	r3, r0, r3, r1
 801850a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801850e:	18d3      	adds	r3, r2, r3
 8018510:	930a      	str	r3, [sp, #40]	; 0x28
 8018512:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018514:	681b      	ldr	r3, [r3, #0]
 8018516:	930c      	str	r3, [sp, #48]	; 0x30
 8018518:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801851a:	685c      	ldr	r4, [r3, #4]
 801851c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801851e:	3404      	adds	r4, #4
 8018520:	43db      	mvns	r3, r3
 8018522:	b2db      	uxtb	r3, r3
 8018524:	930b      	str	r3, [sp, #44]	; 0x2c
 8018526:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018528:	2b00      	cmp	r3, #0
 801852a:	dc03      	bgt.n	8018534 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801852c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801852e:	2b00      	cmp	r3, #0
 8018530:	f340 8250 	ble.w	80189d4 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8018534:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018536:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801853a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801853e:	1e48      	subs	r0, r1, #1
 8018540:	1e55      	subs	r5, r2, #1
 8018542:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018544:	2b00      	cmp	r3, #0
 8018546:	f340 80ee 	ble.w	8018726 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801854a:	9e25      	ldr	r6, [sp, #148]	; 0x94
 801854c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801854e:	1436      	asrs	r6, r6, #16
 8018550:	ea4f 4323 	mov.w	r3, r3, asr #16
 8018554:	d406      	bmi.n	8018564 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8018556:	4286      	cmp	r6, r0
 8018558:	da04      	bge.n	8018564 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801855a:	2b00      	cmp	r3, #0
 801855c:	db02      	blt.n	8018564 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801855e:	42ab      	cmp	r3, r5
 8018560:	f2c0 80e2 	blt.w	8018728 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8018564:	3601      	adds	r6, #1
 8018566:	f100 80cf 	bmi.w	8018708 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x244>
 801856a:	42b1      	cmp	r1, r6
 801856c:	f2c0 80cc 	blt.w	8018708 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x244>
 8018570:	3301      	adds	r3, #1
 8018572:	f100 80c9 	bmi.w	8018708 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x244>
 8018576:	429a      	cmp	r2, r3
 8018578:	f2c0 80c6 	blt.w	8018708 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x244>
 801857c:	e9dd b609 	ldrd	fp, r6, [sp, #36]	; 0x24
 8018580:	f1bb 0f00 	cmp.w	fp, #0
 8018584:	f340 80f1 	ble.w	801876a <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8018588:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801858a:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801858c:	982c      	ldr	r0, [sp, #176]	; 0xb0
 801858e:	141d      	asrs	r5, r3, #16
 8018590:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8018592:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8018596:	68c7      	ldr	r7, [r0, #12]
 8018598:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801859a:	1418      	asrs	r0, r3, #16
 801859c:	f3c3 3803 	ubfx	r8, r3, #12, #4
 80185a0:	6892      	ldr	r2, [r2, #8]
 80185a2:	f100 8137 	bmi.w	8018814 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80185a6:	f102 3cff 	add.w	ip, r2, #4294967295
 80185aa:	4560      	cmp	r0, ip
 80185ac:	f280 8132 	bge.w	8018814 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80185b0:	2d00      	cmp	r5, #0
 80185b2:	f2c0 812f 	blt.w	8018814 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80185b6:	f107 3cff 	add.w	ip, r7, #4294967295
 80185ba:	4565      	cmp	r5, ip
 80185bc:	f280 812a 	bge.w	8018814 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80185c0:	b212      	sxth	r2, r2
 80185c2:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 80185c4:	fb05 0002 	mla	r0, r5, r2, r0
 80185c8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80185ca:	f817 c000 	ldrb.w	ip, [r7, r0]
 80185ce:	4405      	add	r5, r0
 80185d0:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80185d4:	eb04 0e0c 	add.w	lr, r4, ip
 80185d8:	f1b8 0f00 	cmp.w	r8, #0
 80185dc:	f000 810c 	beq.w	80187f8 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x334>
 80185e0:	786f      	ldrb	r7, [r5, #1]
 80185e2:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80185e6:	4427      	add	r7, r4
 80185e8:	2900      	cmp	r1, #0
 80185ea:	f000 810d 	beq.w	8018808 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80185ee:	18a8      	adds	r0, r5, r2
 80185f0:	5caa      	ldrb	r2, [r5, r2]
 80185f2:	7840      	ldrb	r0, [r0, #1]
 80185f4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80185f8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80185fc:	4422      	add	r2, r4
 80185fe:	4420      	add	r0, r4
 8018600:	fa1f f388 	uxth.w	r3, r8
 8018604:	f814 a00c 	ldrb.w	sl, [r4, ip]
 8018608:	b289      	uxth	r1, r1
 801860a:	f897 c000 	ldrb.w	ip, [r7]
 801860e:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8018612:	fb03 f901 	mul.w	r9, r3, r1
 8018616:	011b      	lsls	r3, r3, #4
 8018618:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801861c:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 8018620:	eba3 0309 	sub.w	r3, r3, r9
 8018624:	b289      	uxth	r1, r1
 8018626:	b29b      	uxth	r3, r3
 8018628:	eba8 0801 	sub.w	r8, r8, r1
 801862c:	fb03 fc0c 	mul.w	ip, r3, ip
 8018630:	fa1f f888 	uxth.w	r8, r8
 8018634:	930f      	str	r3, [sp, #60]	; 0x3c
 8018636:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018638:	fb08 cc0a 	mla	ip, r8, sl, ip
 801863c:	f892 a000 	ldrb.w	sl, [r2]
 8018640:	fb01 cc0a 	mla	ip, r1, sl, ip
 8018644:	f890 a000 	ldrb.w	sl, [r0]
 8018648:	fb09 cc0a 	mla	ip, r9, sl, ip
 801864c:	f896 a000 	ldrb.w	sl, [r6]
 8018650:	fb1a fa03 	smulbb	sl, sl, r3
 8018654:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8018658:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801865a:	fb0c ac05 	mla	ip, ip, r5, sl
 801865e:	fa1f fc8c 	uxth.w	ip, ip
 8018662:	f10c 0a01 	add.w	sl, ip, #1
 8018666:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801866a:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 801866e:	f886 a000 	strb.w	sl, [r6]
 8018672:	f897 c001 	ldrb.w	ip, [r7, #1]
 8018676:	f89e a001 	ldrb.w	sl, [lr, #1]
 801867a:	fb03 fc0c 	mul.w	ip, r3, ip
 801867e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018680:	fb08 cc0a 	mla	ip, r8, sl, ip
 8018684:	f892 a001 	ldrb.w	sl, [r2, #1]
 8018688:	fb01 cc0a 	mla	ip, r1, sl, ip
 801868c:	f890 a001 	ldrb.w	sl, [r0, #1]
 8018690:	fb09 cc0a 	mla	ip, r9, sl, ip
 8018694:	f896 a001 	ldrb.w	sl, [r6, #1]
 8018698:	fb1a fa03 	smulbb	sl, sl, r3
 801869c:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 80186a0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80186a2:	fb0c ac05 	mla	ip, ip, r5, sl
 80186a6:	fa1f fc8c 	uxth.w	ip, ip
 80186aa:	f10c 0a01 	add.w	sl, ip, #1
 80186ae:	eb0a 2c1c 	add.w	ip, sl, ip, lsr #8
 80186b2:	ea4f 2c2c 	mov.w	ip, ip, asr #8
 80186b6:	f886 c001 	strb.w	ip, [r6, #1]
 80186ba:	78bf      	ldrb	r7, [r7, #2]
 80186bc:	f89e c002 	ldrb.w	ip, [lr, #2]
 80186c0:	437b      	muls	r3, r7
 80186c2:	fb08 330c 	mla	r3, r8, ip, r3
 80186c6:	f892 c002 	ldrb.w	ip, [r2, #2]
 80186ca:	7882      	ldrb	r2, [r0, #2]
 80186cc:	fb01 310c 	mla	r1, r1, ip, r3
 80186d0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80186d2:	fb09 1902 	mla	r9, r9, r2, r1
 80186d6:	78b1      	ldrb	r1, [r6, #2]
 80186d8:	fb11 f103 	smulbb	r1, r1, r3
 80186dc:	f3c9 2907 	ubfx	r9, r9, #8, #8
 80186e0:	fb09 1505 	mla	r5, r9, r5, r1
 80186e4:	b2ad      	uxth	r5, r5
 80186e6:	1c6b      	adds	r3, r5, #1
 80186e8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80186ec:	122d      	asrs	r5, r5, #8
 80186ee:	70b5      	strb	r5, [r6, #2]
 80186f0:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80186f2:	3603      	adds	r6, #3
 80186f4:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80186f6:	f10b 3bff 	add.w	fp, fp, #4294967295
 80186fa:	4413      	add	r3, r2
 80186fc:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 80186fe:	9325      	str	r3, [sp, #148]	; 0x94
 8018700:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018702:	4413      	add	r3, r2
 8018704:	9326      	str	r3, [sp, #152]	; 0x98
 8018706:	e73b      	b.n	8018580 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbc>
 8018708:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801870a:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 801870c:	4433      	add	r3, r6
 801870e:	9e28      	ldr	r6, [sp, #160]	; 0xa0
 8018710:	9325      	str	r3, [sp, #148]	; 0x94
 8018712:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018714:	4433      	add	r3, r6
 8018716:	9326      	str	r3, [sp, #152]	; 0x98
 8018718:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801871a:	3b01      	subs	r3, #1
 801871c:	9309      	str	r3, [sp, #36]	; 0x24
 801871e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018720:	3303      	adds	r3, #3
 8018722:	930a      	str	r3, [sp, #40]	; 0x28
 8018724:	e70d      	b.n	8018542 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8018726:	d028      	beq.n	801877a <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8018728:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801872a:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801872c:	3b01      	subs	r3, #1
 801872e:	9d25      	ldr	r5, [sp, #148]	; 0x94
 8018730:	fb00 5003 	mla	r0, r0, r3, r5
 8018734:	1400      	asrs	r0, r0, #16
 8018736:	f53f af21 	bmi.w	801857c <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801873a:	3901      	subs	r1, #1
 801873c:	4288      	cmp	r0, r1
 801873e:	f6bf af1d 	bge.w	801857c <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8018742:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8018744:	9826      	ldr	r0, [sp, #152]	; 0x98
 8018746:	fb01 0303 	mla	r3, r1, r3, r0
 801874a:	141b      	asrs	r3, r3, #16
 801874c:	f53f af16 	bmi.w	801857c <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8018750:	3a01      	subs	r2, #1
 8018752:	4293      	cmp	r3, r2
 8018754:	f6bf af12 	bge.w	801857c <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8018758:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801875a:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 801875e:	1cdf      	adds	r7, r3, #3
 8018760:	f8bd a038 	ldrh.w	sl, [sp, #56]	; 0x38
 8018764:	f1b9 0f00 	cmp.w	r9, #0
 8018768:	dc73      	bgt.n	8018852 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38e>
 801876a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801876c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801876e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018772:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8018776:	441a      	add	r2, r3
 8018778:	920a      	str	r2, [sp, #40]	; 0x28
 801877a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801877c:	2b00      	cmp	r3, #0
 801877e:	f340 8129 	ble.w	80189d4 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8018782:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018786:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018788:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801878c:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8018790:	eef0 6a48 	vmov.f32	s13, s16
 8018794:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8018798:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801879c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80187a0:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 80187a4:	eef0 6a68 	vmov.f32	s13, s17
 80187a8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80187ac:	edcd 6a26 	vstr	s13, [sp, #152]	; 0x98
 80187b0:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80187b4:	ee69 7a27 	vmul.f32	s15, s18, s15
 80187b8:	ee37 8a48 	vsub.f32	s16, s14, s16
 80187bc:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80187c0:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80187c4:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80187c8:	ee18 2a10 	vmov	r2, s16
 80187cc:	eeb0 8a47 	vmov.f32	s16, s14
 80187d0:	fb92 f3f3 	sdiv	r3, r2, r3
 80187d4:	ee18 2a90 	vmov	r2, s17
 80187d8:	9327      	str	r3, [sp, #156]	; 0x9c
 80187da:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80187dc:	eef0 8a67 	vmov.f32	s17, s15
 80187e0:	fb92 f3f3 	sdiv	r3, r2, r3
 80187e4:	9328      	str	r3, [sp, #160]	; 0xa0
 80187e6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80187e8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80187ea:	3b01      	subs	r3, #1
 80187ec:	930d      	str	r3, [sp, #52]	; 0x34
 80187ee:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80187f0:	bf08      	it	eq
 80187f2:	4613      	moveq	r3, r2
 80187f4:	9309      	str	r3, [sp, #36]	; 0x24
 80187f6:	e696      	b.n	8018526 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 80187f8:	b149      	cbz	r1, 801880e <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34a>
 80187fa:	5caa      	ldrb	r2, [r5, r2]
 80187fc:	4670      	mov	r0, lr
 80187fe:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8018802:	4422      	add	r2, r4
 8018804:	4677      	mov	r7, lr
 8018806:	e6fb      	b.n	8018600 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13c>
 8018808:	4670      	mov	r0, lr
 801880a:	4672      	mov	r2, lr
 801880c:	e6f8      	b.n	8018600 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13c>
 801880e:	4670      	mov	r0, lr
 8018810:	4672      	mov	r2, lr
 8018812:	e7f7      	b.n	8018804 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x340>
 8018814:	f110 0c01 	adds.w	ip, r0, #1
 8018818:	f53f af6a 	bmi.w	80186f0 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801881c:	4562      	cmp	r2, ip
 801881e:	f6ff af67 	blt.w	80186f0 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8018822:	f115 0c01 	adds.w	ip, r5, #1
 8018826:	f53f af63 	bmi.w	80186f0 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801882a:	4567      	cmp	r7, ip
 801882c:	f6ff af60 	blt.w	80186f0 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8018830:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018832:	b23f      	sxth	r7, r7
 8018834:	b212      	sxth	r2, r2
 8018836:	9002      	str	r0, [sp, #8]
 8018838:	9701      	str	r7, [sp, #4]
 801883a:	9200      	str	r2, [sp, #0]
 801883c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801883e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8018840:	e9cd 1305 	strd	r1, r3, [sp, #20]
 8018844:	e9cd 5803 	strd	r5, r8, [sp, #12]
 8018848:	4623      	mov	r3, r4
 801884a:	4631      	mov	r1, r6
 801884c:	f7ff fd4c 	bl	80182e8 <_ZNK8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh>
 8018850:	e74e      	b.n	80186f0 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8018852:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8018854:	9826      	ldr	r0, [sp, #152]	; 0x98
 8018856:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801885a:	9d25      	ldr	r5, [sp, #148]	; 0x94
 801885c:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801885e:	1400      	asrs	r0, r0, #16
 8018860:	142d      	asrs	r5, r5, #16
 8018862:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8018864:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8018868:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801886c:	fb02 5000 	mla	r0, r2, r0, r5
 8018870:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8018872:	f815 e000 	ldrb.w	lr, [r5, r0]
 8018876:	eb05 0c00 	add.w	ip, r5, r0
 801887a:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801887e:	eb04 060e 	add.w	r6, r4, lr
 8018882:	2b00      	cmp	r3, #0
 8018884:	f000 8097 	beq.w	80189b6 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f2>
 8018888:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801888c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8018890:	4425      	add	r5, r4
 8018892:	2900      	cmp	r1, #0
 8018894:	f000 8098 	beq.w	80189c8 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 8018898:	eb0c 0002 	add.w	r0, ip, r2
 801889c:	f81c 2002 	ldrb.w	r2, [ip, r2]
 80188a0:	7840      	ldrb	r0, [r0, #1]
 80188a2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80188a6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80188aa:	4422      	add	r2, r4
 80188ac:	4420      	add	r0, r4
 80188ae:	b29b      	uxth	r3, r3
 80188b0:	f814 b00e 	ldrb.w	fp, [r4, lr]
 80188b4:	b289      	uxth	r1, r1
 80188b6:	f895 e000 	ldrb.w	lr, [r5]
 80188ba:	3703      	adds	r7, #3
 80188bc:	f109 39ff 	add.w	r9, r9, #4294967295
 80188c0:	fb03 f801 	mul.w	r8, r3, r1
 80188c4:	011b      	lsls	r3, r3, #4
 80188c6:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 80188ca:	f5c3 7c80 	rsb	ip, r3, #256	; 0x100
 80188ce:	eba3 0308 	sub.w	r3, r3, r8
 80188d2:	b289      	uxth	r1, r1
 80188d4:	b29b      	uxth	r3, r3
 80188d6:	ebac 0c01 	sub.w	ip, ip, r1
 80188da:	fb03 fe0e 	mul.w	lr, r3, lr
 80188de:	fa1f fc8c 	uxth.w	ip, ip
 80188e2:	930f      	str	r3, [sp, #60]	; 0x3c
 80188e4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80188e6:	fb0c ee0b 	mla	lr, ip, fp, lr
 80188ea:	f892 b000 	ldrb.w	fp, [r2]
 80188ee:	fb01 ee0b 	mla	lr, r1, fp, lr
 80188f2:	f890 b000 	ldrb.w	fp, [r0]
 80188f6:	fb08 ee0b 	mla	lr, r8, fp, lr
 80188fa:	f817 bc06 	ldrb.w	fp, [r7, #-6]
 80188fe:	fb1b fb03 	smulbb	fp, fp, r3
 8018902:	f3ce 2e07 	ubfx	lr, lr, #8, #8
 8018906:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018908:	fb0e be0a 	mla	lr, lr, sl, fp
 801890c:	fa1f fe8e 	uxth.w	lr, lr
 8018910:	f10e 0b01 	add.w	fp, lr, #1
 8018914:	eb0b 2e1e 	add.w	lr, fp, lr, lsr #8
 8018918:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 801891c:	f807 ec06 	strb.w	lr, [r7, #-6]
 8018920:	f895 e001 	ldrb.w	lr, [r5, #1]
 8018924:	f896 b001 	ldrb.w	fp, [r6, #1]
 8018928:	fb03 fe0e 	mul.w	lr, r3, lr
 801892c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801892e:	fb0c ee0b 	mla	lr, ip, fp, lr
 8018932:	f892 b001 	ldrb.w	fp, [r2, #1]
 8018936:	fb01 ee0b 	mla	lr, r1, fp, lr
 801893a:	f890 b001 	ldrb.w	fp, [r0, #1]
 801893e:	fb08 ee0b 	mla	lr, r8, fp, lr
 8018942:	f817 bc05 	ldrb.w	fp, [r7, #-5]
 8018946:	fb1b fb03 	smulbb	fp, fp, r3
 801894a:	f3ce 2e07 	ubfx	lr, lr, #8, #8
 801894e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018950:	fb0e be0a 	mla	lr, lr, sl, fp
 8018954:	fa1f fe8e 	uxth.w	lr, lr
 8018958:	f10e 0b01 	add.w	fp, lr, #1
 801895c:	eb0b 2e1e 	add.w	lr, fp, lr, lsr #8
 8018960:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 8018964:	f807 ec05 	strb.w	lr, [r7, #-5]
 8018968:	78ad      	ldrb	r5, [r5, #2]
 801896a:	78b6      	ldrb	r6, [r6, #2]
 801896c:	436b      	muls	r3, r5
 801896e:	7895      	ldrb	r5, [r2, #2]
 8018970:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8018972:	fb0c 3306 	mla	r3, ip, r6, r3
 8018976:	fb01 3305 	mla	r3, r1, r5, r3
 801897a:	7885      	ldrb	r5, [r0, #2]
 801897c:	fb08 3805 	mla	r8, r8, r5, r3
 8018980:	f817 3c04 	ldrb.w	r3, [r7, #-4]
 8018984:	fb13 f302 	smulbb	r3, r3, r2
 8018988:	f3c8 2807 	ubfx	r8, r8, #8, #8
 801898c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801898e:	fb08 380a 	mla	r8, r8, sl, r3
 8018992:	fa1f f888 	uxth.w	r8, r8
 8018996:	f108 0301 	add.w	r3, r8, #1
 801899a:	eb03 2818 	add.w	r8, r3, r8, lsr #8
 801899e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80189a0:	4413      	add	r3, r2
 80189a2:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 80189a4:	ea4f 2828 	mov.w	r8, r8, asr #8
 80189a8:	9325      	str	r3, [sp, #148]	; 0x94
 80189aa:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80189ac:	f807 8c04 	strb.w	r8, [r7, #-4]
 80189b0:	4413      	add	r3, r2
 80189b2:	9326      	str	r3, [sp, #152]	; 0x98
 80189b4:	e6d6      	b.n	8018764 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 80189b6:	b151      	cbz	r1, 80189ce <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50a>
 80189b8:	f81c 2002 	ldrb.w	r2, [ip, r2]
 80189bc:	4630      	mov	r0, r6
 80189be:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80189c2:	4422      	add	r2, r4
 80189c4:	4635      	mov	r5, r6
 80189c6:	e772      	b.n	80188ae <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 80189c8:	4630      	mov	r0, r6
 80189ca:	4632      	mov	r2, r6
 80189cc:	e76f      	b.n	80188ae <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 80189ce:	4630      	mov	r0, r6
 80189d0:	4632      	mov	r2, r6
 80189d2:	e7f7      	b.n	80189c4 <_ZN8touchgfx8LCD24bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x500>
 80189d4:	b013      	add	sp, #76	; 0x4c
 80189d6:	ecbd 8b08 	vpop	{d8-d11}
 80189da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080189e0 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh>:
 80189e0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80189e4:	784d      	ldrb	r5, [r1, #1]
 80189e6:	f891 9002 	ldrb.w	r9, [r1, #2]
 80189ea:	022d      	lsls	r5, r5, #8
 80189ec:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 80189f0:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 80189f4:	ea45 4509 	orr.w	r5, r5, r9, lsl #16
 80189f8:	f891 9000 	ldrb.w	r9, [r1]
 80189fc:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 8018a00:	ea45 0509 	orr.w	r5, r5, r9
 8018a04:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
 8018a08:	e9dd 460e 	ldrd	r4, r6, [sp, #56]	; 0x38
 8018a0c:	9501      	str	r5, [sp, #4]
 8018a0e:	fb06 470c 	mla	r7, r6, ip, r4
 8018a12:	2e00      	cmp	r6, #0
 8018a14:	eb02 0e07 	add.w	lr, r2, r7
 8018a18:	db46      	blt.n	8018aa8 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0xc8>
 8018a1a:	45b0      	cmp	r8, r6
 8018a1c:	dd44      	ble.n	8018aa8 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0xc8>
 8018a1e:	2c00      	cmp	r4, #0
 8018a20:	db40      	blt.n	8018aa4 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0xc4>
 8018a22:	45a4      	cmp	ip, r4
 8018a24:	dd3e      	ble.n	8018aa4 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0xc4>
 8018a26:	5dd7      	ldrb	r7, [r2, r7]
 8018a28:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8018a2c:	441f      	add	r7, r3
 8018a2e:	1c62      	adds	r2, r4, #1
 8018a30:	d43d      	bmi.n	8018aae <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0xce>
 8018a32:	4594      	cmp	ip, r2
 8018a34:	dd3b      	ble.n	8018aae <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0xce>
 8018a36:	f1ba 0f00 	cmp.w	sl, #0
 8018a3a:	d038      	beq.n	8018aae <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0xce>
 8018a3c:	f89e 5001 	ldrb.w	r5, [lr, #1]
 8018a40:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8018a44:	441d      	add	r5, r3
 8018a46:	3601      	adds	r6, #1
 8018a48:	d435      	bmi.n	8018ab6 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0xd6>
 8018a4a:	45b0      	cmp	r8, r6
 8018a4c:	dd33      	ble.n	8018ab6 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0xd6>
 8018a4e:	b390      	cbz	r0, 8018ab6 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0xd6>
 8018a50:	2c00      	cmp	r4, #0
 8018a52:	db2e      	blt.n	8018ab2 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0xd2>
 8018a54:	45a4      	cmp	ip, r4
 8018a56:	dd2c      	ble.n	8018ab2 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0xd2>
 8018a58:	f81e 600c 	ldrb.w	r6, [lr, ip]
 8018a5c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8018a60:	441e      	add	r6, r3
 8018a62:	1c62      	adds	r2, r4, #1
 8018a64:	d42a      	bmi.n	8018abc <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0xdc>
 8018a66:	4594      	cmp	ip, r2
 8018a68:	dd28      	ble.n	8018abc <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0xdc>
 8018a6a:	f1ba 0f00 	cmp.w	sl, #0
 8018a6e:	d025      	beq.n	8018abc <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0xdc>
 8018a70:	44f4      	add	ip, lr
 8018a72:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8018a76:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8018a7a:	4413      	add	r3, r2
 8018a7c:	f1ba 0f0f 	cmp.w	sl, #15
 8018a80:	f897 8000 	ldrb.w	r8, [r7]
 8018a84:	f895 9000 	ldrb.w	r9, [r5]
 8018a88:	f896 e000 	ldrb.w	lr, [r6]
 8018a8c:	f893 c000 	ldrb.w	ip, [r3]
 8018a90:	d801      	bhi.n	8018a96 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0xb6>
 8018a92:	280f      	cmp	r0, #15
 8018a94:	d914      	bls.n	8018ac0 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0xe0>
 8018a96:	4b29      	ldr	r3, [pc, #164]	; (8018b3c <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x15c>)
 8018a98:	f240 115b 	movw	r1, #347	; 0x15b
 8018a9c:	4a28      	ldr	r2, [pc, #160]	; (8018b40 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x160>)
 8018a9e:	4829      	ldr	r0, [pc, #164]	; (8018b44 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x164>)
 8018aa0:	f007 f89a 	bl	801fbd8 <__assert_func>
 8018aa4:	af01      	add	r7, sp, #4
 8018aa6:	e7c2      	b.n	8018a2e <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x4e>
 8018aa8:	ad01      	add	r5, sp, #4
 8018aaa:	462f      	mov	r7, r5
 8018aac:	e7cb      	b.n	8018a46 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x66>
 8018aae:	ad01      	add	r5, sp, #4
 8018ab0:	e7c9      	b.n	8018a46 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x66>
 8018ab2:	ae01      	add	r6, sp, #4
 8018ab4:	e7d5      	b.n	8018a62 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x82>
 8018ab6:	ab01      	add	r3, sp, #4
 8018ab8:	461e      	mov	r6, r3
 8018aba:	e7df      	b.n	8018a7c <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x9c>
 8018abc:	ab01      	add	r3, sp, #4
 8018abe:	e7dd      	b.n	8018a7c <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh+0x9c>
 8018ac0:	fa1f f48a 	uxth.w	r4, sl
 8018ac4:	b280      	uxth	r0, r0
 8018ac6:	fb04 fa00 	mul.w	sl, r4, r0
 8018aca:	0124      	lsls	r4, r4, #4
 8018acc:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 8018ad0:	f5c4 7b80 	rsb	fp, r4, #256	; 0x100
 8018ad4:	b282      	uxth	r2, r0
 8018ad6:	eba4 000a 	sub.w	r0, r4, sl
 8018ada:	ebab 0b02 	sub.w	fp, fp, r2
 8018ade:	b280      	uxth	r0, r0
 8018ae0:	fa1f fb8b 	uxth.w	fp, fp
 8018ae4:	fb00 f909 	mul.w	r9, r0, r9
 8018ae8:	fb0b 9808 	mla	r8, fp, r8, r9
 8018aec:	fb02 8e0e 	mla	lr, r2, lr, r8
 8018af0:	fb0a ec0c 	mla	ip, sl, ip, lr
 8018af4:	ea4f 2c2c 	mov.w	ip, ip, asr #8
 8018af8:	f881 c000 	strb.w	ip, [r1]
 8018afc:	786c      	ldrb	r4, [r5, #1]
 8018afe:	f897 c001 	ldrb.w	ip, [r7, #1]
 8018b02:	4344      	muls	r4, r0
 8018b04:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8018b08:	7874      	ldrb	r4, [r6, #1]
 8018b0a:	fb02 cc04 	mla	ip, r2, r4, ip
 8018b0e:	785c      	ldrb	r4, [r3, #1]
 8018b10:	fb0a c404 	mla	r4, sl, r4, ip
 8018b14:	1224      	asrs	r4, r4, #8
 8018b16:	704c      	strb	r4, [r1, #1]
 8018b18:	78ad      	ldrb	r5, [r5, #2]
 8018b1a:	78bc      	ldrb	r4, [r7, #2]
 8018b1c:	4368      	muls	r0, r5
 8018b1e:	fb0b 0b04 	mla	fp, fp, r4, r0
 8018b22:	78b0      	ldrb	r0, [r6, #2]
 8018b24:	fb02 b000 	mla	r0, r2, r0, fp
 8018b28:	789a      	ldrb	r2, [r3, #2]
 8018b2a:	fb0a 0a02 	mla	sl, sl, r2, r0
 8018b2e:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 8018b32:	f881 a002 	strb.w	sl, [r1, #2]
 8018b36:	b003      	add	sp, #12
 8018b38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018b3c:	08024e84 	.word	0x08024e84
 8018b40:	0802529a 	.word	0x0802529a
 8018b44:	08024e51 	.word	0x08024e51

08018b48 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018b48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018b4c:	ed2d 8b0a 	vpush	{d8-d12}
 8018b50:	b08d      	sub	sp, #52	; 0x34
 8018b52:	eeb0 aa40 	vmov.f32	s20, s0
 8018b56:	eef0 9a60 	vmov.f32	s19, s1
 8018b5a:	900b      	str	r0, [sp, #44]	; 0x2c
 8018b5c:	eeb0 9a41 	vmov.f32	s18, s2
 8018b60:	9306      	str	r3, [sp, #24]
 8018b62:	eeb0 8a62 	vmov.f32	s16, s5
 8018b66:	eef0 8a43 	vmov.f32	s17, s6
 8018b6a:	9c21      	ldr	r4, [sp, #132]	; 0x84
 8018b6c:	eeb0 ca44 	vmov.f32	s24, s8
 8018b70:	eef0 ba64 	vmov.f32	s23, s9
 8018b74:	eeb0 ba45 	vmov.f32	s22, s10
 8018b78:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 8018b7c:	e9cd 1209 	strd	r1, r2, [sp, #36]	; 0x24
 8018b80:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8018b82:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8018b86:	6850      	ldr	r0, [r2, #4]
 8018b88:	6812      	ldr	r2, [r2, #0]
 8018b8a:	fb00 1303 	mla	r3, r0, r3, r1
 8018b8e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8018b92:	18d3      	adds	r3, r2, r3
 8018b94:	9307      	str	r3, [sp, #28]
 8018b96:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018b98:	681b      	ldr	r3, [r3, #0]
 8018b9a:	9308      	str	r3, [sp, #32]
 8018b9c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018b9e:	685d      	ldr	r5, [r3, #4]
 8018ba0:	3504      	adds	r5, #4
 8018ba2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018ba4:	2b00      	cmp	r3, #0
 8018ba6:	dc03      	bgt.n	8018bb0 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8018ba8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018baa:	2b00      	cmp	r3, #0
 8018bac:	f340 81e6 	ble.w	8018f7c <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x434>
 8018bb0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018bb2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018bb6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8018bba:	1e48      	subs	r0, r1, #1
 8018bbc:	1e56      	subs	r6, r2, #1
 8018bbe:	9b06      	ldr	r3, [sp, #24]
 8018bc0:	2b00      	cmp	r3, #0
 8018bc2:	f340 80bd 	ble.w	8018d40 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 8018bc6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8018bc8:	1427      	asrs	r7, r4, #16
 8018bca:	ea4f 4323 	mov.w	r3, r3, asr #16
 8018bce:	d406      	bmi.n	8018bde <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8018bd0:	4287      	cmp	r7, r0
 8018bd2:	da04      	bge.n	8018bde <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8018bd4:	2b00      	cmp	r3, #0
 8018bd6:	db02      	blt.n	8018bde <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8018bd8:	42b3      	cmp	r3, r6
 8018bda:	f2c0 80b2 	blt.w	8018d42 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8018bde:	3701      	adds	r7, #1
 8018be0:	f100 80a1 	bmi.w	8018d26 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8018be4:	42b9      	cmp	r1, r7
 8018be6:	f2c0 809e 	blt.w	8018d26 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8018bea:	3301      	adds	r3, #1
 8018bec:	f100 809b 	bmi.w	8018d26 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8018bf0:	429a      	cmp	r2, r3
 8018bf2:	f2c0 8098 	blt.w	8018d26 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8018bf6:	e9dd b606 	ldrd	fp, r6, [sp, #24]
 8018bfa:	f1bb 0f00 	cmp.w	fp, #0
 8018bfe:	f340 80bf 	ble.w	8018d80 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8018c02:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8018c04:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8018c06:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8018c08:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8018c0c:	f8d0 c00c 	ldr.w	ip, [r0, #12]
 8018c10:	1420      	asrs	r0, r4, #16
 8018c12:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8018c14:	ea4f 4723 	mov.w	r7, r3, asr #16
 8018c18:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8018c1c:	6892      	ldr	r2, [r2, #8]
 8018c1e:	f100 8103 	bmi.w	8018e28 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8018c22:	f102 3eff 	add.w	lr, r2, #4294967295
 8018c26:	4570      	cmp	r0, lr
 8018c28:	f280 80fe 	bge.w	8018e28 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8018c2c:	2f00      	cmp	r7, #0
 8018c2e:	f2c0 80fb 	blt.w	8018e28 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8018c32:	f10c 3eff 	add.w	lr, ip, #4294967295
 8018c36:	4577      	cmp	r7, lr
 8018c38:	f280 80f6 	bge.w	8018e28 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8018c3c:	b212      	sxth	r2, r2
 8018c3e:	fb07 0002 	mla	r0, r7, r2, r0
 8018c42:	9f08      	ldr	r7, [sp, #32]
 8018c44:	f817 8000 	ldrb.w	r8, [r7, r0]
 8018c48:	eb07 0e00 	add.w	lr, r7, r0
 8018c4c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8018c50:	eb05 0c08 	add.w	ip, r5, r8
 8018c54:	2b00      	cmp	r3, #0
 8018c56:	f000 80d8 	beq.w	8018e0a <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c2>
 8018c5a:	f89e 7001 	ldrb.w	r7, [lr, #1]
 8018c5e:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8018c62:	442f      	add	r7, r5
 8018c64:	2900      	cmp	r1, #0
 8018c66:	f000 80d9 	beq.w	8018e1c <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 8018c6a:	eb0e 0002 	add.w	r0, lr, r2
 8018c6e:	f81e 2002 	ldrb.w	r2, [lr, r2]
 8018c72:	7840      	ldrb	r0, [r0, #1]
 8018c74:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8018c78:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8018c7c:	442a      	add	r2, r5
 8018c7e:	4428      	add	r0, r5
 8018c80:	b29b      	uxth	r3, r3
 8018c82:	f815 a008 	ldrb.w	sl, [r5, r8]
 8018c86:	b289      	uxth	r1, r1
 8018c88:	f897 8000 	ldrb.w	r8, [r7]
 8018c8c:	fb03 f901 	mul.w	r9, r3, r1
 8018c90:	011b      	lsls	r3, r3, #4
 8018c92:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8018c96:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8018c9a:	eba3 0309 	sub.w	r3, r3, r9
 8018c9e:	b289      	uxth	r1, r1
 8018ca0:	b29b      	uxth	r3, r3
 8018ca2:	ebae 0e01 	sub.w	lr, lr, r1
 8018ca6:	fb03 f808 	mul.w	r8, r3, r8
 8018caa:	fa1f fe8e 	uxth.w	lr, lr
 8018cae:	fb0e 880a 	mla	r8, lr, sl, r8
 8018cb2:	f892 a000 	ldrb.w	sl, [r2]
 8018cb6:	fb01 880a 	mla	r8, r1, sl, r8
 8018cba:	f890 a000 	ldrb.w	sl, [r0]
 8018cbe:	fb09 880a 	mla	r8, r9, sl, r8
 8018cc2:	ea4f 2828 	mov.w	r8, r8, asr #8
 8018cc6:	f886 8000 	strb.w	r8, [r6]
 8018cca:	f897 8001 	ldrb.w	r8, [r7, #1]
 8018cce:	f89c a001 	ldrb.w	sl, [ip, #1]
 8018cd2:	fb03 f808 	mul.w	r8, r3, r8
 8018cd6:	fb0e 880a 	mla	r8, lr, sl, r8
 8018cda:	f892 a001 	ldrb.w	sl, [r2, #1]
 8018cde:	fb01 880a 	mla	r8, r1, sl, r8
 8018ce2:	f890 a001 	ldrb.w	sl, [r0, #1]
 8018ce6:	fb09 880a 	mla	r8, r9, sl, r8
 8018cea:	ea4f 2828 	mov.w	r8, r8, asr #8
 8018cee:	f886 8001 	strb.w	r8, [r6, #1]
 8018cf2:	78bf      	ldrb	r7, [r7, #2]
 8018cf4:	f89c c002 	ldrb.w	ip, [ip, #2]
 8018cf8:	437b      	muls	r3, r7
 8018cfa:	7892      	ldrb	r2, [r2, #2]
 8018cfc:	fb0e 330c 	mla	r3, lr, ip, r3
 8018d00:	fb01 3102 	mla	r1, r1, r2, r3
 8018d04:	7882      	ldrb	r2, [r0, #2]
 8018d06:	fb09 1902 	mla	r9, r9, r2, r1
 8018d0a:	ea4f 2929 	mov.w	r9, r9, asr #8
 8018d0e:	f886 9002 	strb.w	r9, [r6, #2]
 8018d12:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8018d14:	3603      	adds	r6, #3
 8018d16:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8018d18:	f10b 3bff 	add.w	fp, fp, #4294967295
 8018d1c:	441c      	add	r4, r3
 8018d1e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8018d20:	4413      	add	r3, r2
 8018d22:	9322      	str	r3, [sp, #136]	; 0x88
 8018d24:	e769      	b.n	8018bfa <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8018d26:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8018d28:	9f24      	ldr	r7, [sp, #144]	; 0x90
 8018d2a:	441c      	add	r4, r3
 8018d2c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8018d2e:	443b      	add	r3, r7
 8018d30:	9322      	str	r3, [sp, #136]	; 0x88
 8018d32:	9b06      	ldr	r3, [sp, #24]
 8018d34:	3b01      	subs	r3, #1
 8018d36:	9306      	str	r3, [sp, #24]
 8018d38:	9b07      	ldr	r3, [sp, #28]
 8018d3a:	3303      	adds	r3, #3
 8018d3c:	9307      	str	r3, [sp, #28]
 8018d3e:	e73e      	b.n	8018bbe <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8018d40:	d026      	beq.n	8018d90 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8018d42:	9b06      	ldr	r3, [sp, #24]
 8018d44:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8018d46:	3b01      	subs	r3, #1
 8018d48:	fb00 4003 	mla	r0, r0, r3, r4
 8018d4c:	1400      	asrs	r0, r0, #16
 8018d4e:	f53f af52 	bmi.w	8018bf6 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8018d52:	3901      	subs	r1, #1
 8018d54:	4288      	cmp	r0, r1
 8018d56:	f6bf af4e 	bge.w	8018bf6 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8018d5a:	9924      	ldr	r1, [sp, #144]	; 0x90
 8018d5c:	9822      	ldr	r0, [sp, #136]	; 0x88
 8018d5e:	fb01 0303 	mla	r3, r1, r3, r0
 8018d62:	141b      	asrs	r3, r3, #16
 8018d64:	f53f af47 	bmi.w	8018bf6 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8018d68:	3a01      	subs	r2, #1
 8018d6a:	4293      	cmp	r3, r2
 8018d6c:	f6bf af43 	bge.w	8018bf6 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8018d70:	9b07      	ldr	r3, [sp, #28]
 8018d72:	f8dd a018 	ldr.w	sl, [sp, #24]
 8018d76:	f103 0803 	add.w	r8, r3, #3
 8018d7a:	f1ba 0f00 	cmp.w	sl, #0
 8018d7e:	dc71      	bgt.n	8018e64 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8018d80:	9b06      	ldr	r3, [sp, #24]
 8018d82:	9a07      	ldr	r2, [sp, #28]
 8018d84:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018d88:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8018d8c:	441a      	add	r2, r3
 8018d8e:	9207      	str	r2, [sp, #28]
 8018d90:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018d92:	2b00      	cmp	r3, #0
 8018d94:	f340 80f2 	ble.w	8018f7c <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x434>
 8018d98:	ee3a aa0c 	vadd.f32	s20, s20, s24
 8018d9c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8018d9e:	ee79 9aab 	vadd.f32	s19, s19, s23
 8018da2:	eef0 6a48 	vmov.f32	s13, s16
 8018da6:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 8018daa:	ee39 9a0b 	vadd.f32	s18, s18, s22
 8018dae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018db2:	ee16 4a90 	vmov	r4, s13
 8018db6:	eef0 6a68 	vmov.f32	s13, s17
 8018dba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018dbe:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 8018dc2:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8018dc6:	ee69 7a27 	vmul.f32	s15, s18, s15
 8018dca:	ee37 8a48 	vsub.f32	s16, s14, s16
 8018dce:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8018dd2:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8018dd6:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8018dda:	ee18 2a10 	vmov	r2, s16
 8018dde:	eeb0 8a47 	vmov.f32	s16, s14
 8018de2:	fb92 f3f3 	sdiv	r3, r2, r3
 8018de6:	ee18 2a90 	vmov	r2, s17
 8018dea:	9323      	str	r3, [sp, #140]	; 0x8c
 8018dec:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8018dee:	eef0 8a67 	vmov.f32	s17, s15
 8018df2:	fb92 f3f3 	sdiv	r3, r2, r3
 8018df6:	9324      	str	r3, [sp, #144]	; 0x90
 8018df8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018dfa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8018dfc:	3b01      	subs	r3, #1
 8018dfe:	9309      	str	r3, [sp, #36]	; 0x24
 8018e00:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8018e02:	bf08      	it	eq
 8018e04:	4613      	moveq	r3, r2
 8018e06:	9306      	str	r3, [sp, #24]
 8018e08:	e6cb      	b.n	8018ba2 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8018e0a:	b151      	cbz	r1, 8018e22 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 8018e0c:	f81e 2002 	ldrb.w	r2, [lr, r2]
 8018e10:	4660      	mov	r0, ip
 8018e12:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8018e16:	442a      	add	r2, r5
 8018e18:	4667      	mov	r7, ip
 8018e1a:	e731      	b.n	8018c80 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8018e1c:	4660      	mov	r0, ip
 8018e1e:	4662      	mov	r2, ip
 8018e20:	e72e      	b.n	8018c80 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8018e22:	4660      	mov	r0, ip
 8018e24:	4662      	mov	r2, ip
 8018e26:	e7f7      	b.n	8018e18 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d0>
 8018e28:	f110 0e01 	adds.w	lr, r0, #1
 8018e2c:	f53f af71 	bmi.w	8018d12 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8018e30:	4572      	cmp	r2, lr
 8018e32:	f6ff af6e 	blt.w	8018d12 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8018e36:	f117 0e01 	adds.w	lr, r7, #1
 8018e3a:	f53f af6a 	bmi.w	8018d12 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8018e3e:	45f4      	cmp	ip, lr
 8018e40:	f6ff af67 	blt.w	8018d12 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8018e44:	b212      	sxth	r2, r2
 8018e46:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8018e4a:	fa0f f38c 	sxth.w	r3, ip
 8018e4e:	9200      	str	r2, [sp, #0]
 8018e50:	4631      	mov	r1, r6
 8018e52:	9a08      	ldr	r2, [sp, #32]
 8018e54:	9301      	str	r3, [sp, #4]
 8018e56:	462b      	mov	r3, r5
 8018e58:	e9cd 0702 	strd	r0, r7, [sp, #8]
 8018e5c:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8018e5e:	f7ff fdbf 	bl	80189e0 <_ZNK8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh>
 8018e62:	e756      	b.n	8018d12 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8018e64:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8018e66:	1426      	asrs	r6, r4, #16
 8018e68:	9822      	ldr	r0, [sp, #136]	; 0x88
 8018e6a:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8018e6e:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8018e72:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8018e74:	1400      	asrs	r0, r0, #16
 8018e76:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8018e7a:	fb02 6000 	mla	r0, r2, r0, r6
 8018e7e:	9e08      	ldr	r6, [sp, #32]
 8018e80:	f816 e000 	ldrb.w	lr, [r6, r0]
 8018e84:	eb06 0c00 	add.w	ip, r6, r0
 8018e88:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8018e8c:	eb05 070e 	add.w	r7, r5, lr
 8018e90:	2b00      	cmp	r3, #0
 8018e92:	d064      	beq.n	8018f5e <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x416>
 8018e94:	f89c 6001 	ldrb.w	r6, [ip, #1]
 8018e98:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8018e9c:	442e      	add	r6, r5
 8018e9e:	2900      	cmp	r1, #0
 8018ea0:	d066      	beq.n	8018f70 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x428>
 8018ea2:	eb0c 0002 	add.w	r0, ip, r2
 8018ea6:	f81c 2002 	ldrb.w	r2, [ip, r2]
 8018eaa:	7840      	ldrb	r0, [r0, #1]
 8018eac:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8018eb0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8018eb4:	442a      	add	r2, r5
 8018eb6:	4428      	add	r0, r5
 8018eb8:	b29b      	uxth	r3, r3
 8018eba:	f815 b00e 	ldrb.w	fp, [r5, lr]
 8018ebe:	b289      	uxth	r1, r1
 8018ec0:	f896 e000 	ldrb.w	lr, [r6]
 8018ec4:	f108 0803 	add.w	r8, r8, #3
 8018ec8:	f10a 3aff 	add.w	sl, sl, #4294967295
 8018ecc:	fb03 f901 	mul.w	r9, r3, r1
 8018ed0:	011b      	lsls	r3, r3, #4
 8018ed2:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8018ed6:	f5c3 7c80 	rsb	ip, r3, #256	; 0x100
 8018eda:	eba3 0309 	sub.w	r3, r3, r9
 8018ede:	b289      	uxth	r1, r1
 8018ee0:	b29b      	uxth	r3, r3
 8018ee2:	ebac 0c01 	sub.w	ip, ip, r1
 8018ee6:	fb03 fe0e 	mul.w	lr, r3, lr
 8018eea:	fa1f fc8c 	uxth.w	ip, ip
 8018eee:	fb0c ee0b 	mla	lr, ip, fp, lr
 8018ef2:	f892 b000 	ldrb.w	fp, [r2]
 8018ef6:	fb01 ee0b 	mla	lr, r1, fp, lr
 8018efa:	f890 b000 	ldrb.w	fp, [r0]
 8018efe:	fb09 ee0b 	mla	lr, r9, fp, lr
 8018f02:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 8018f06:	f808 ec06 	strb.w	lr, [r8, #-6]
 8018f0a:	f896 e001 	ldrb.w	lr, [r6, #1]
 8018f0e:	f897 b001 	ldrb.w	fp, [r7, #1]
 8018f12:	fb03 fe0e 	mul.w	lr, r3, lr
 8018f16:	fb0c ee0b 	mla	lr, ip, fp, lr
 8018f1a:	f892 b001 	ldrb.w	fp, [r2, #1]
 8018f1e:	fb01 ee0b 	mla	lr, r1, fp, lr
 8018f22:	f890 b001 	ldrb.w	fp, [r0, #1]
 8018f26:	fb09 ee0b 	mla	lr, r9, fp, lr
 8018f2a:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 8018f2e:	f808 ec05 	strb.w	lr, [r8, #-5]
 8018f32:	78b6      	ldrb	r6, [r6, #2]
 8018f34:	78bf      	ldrb	r7, [r7, #2]
 8018f36:	4373      	muls	r3, r6
 8018f38:	7896      	ldrb	r6, [r2, #2]
 8018f3a:	7882      	ldrb	r2, [r0, #2]
 8018f3c:	fb0c 3307 	mla	r3, ip, r7, r3
 8018f40:	fb01 3306 	mla	r3, r1, r6, r3
 8018f44:	fb09 3902 	mla	r9, r9, r2, r3
 8018f48:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8018f4a:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8018f4c:	441c      	add	r4, r3
 8018f4e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8018f50:	ea4f 2929 	mov.w	r9, r9, asr #8
 8018f54:	4413      	add	r3, r2
 8018f56:	f808 9c04 	strb.w	r9, [r8, #-4]
 8018f5a:	9322      	str	r3, [sp, #136]	; 0x88
 8018f5c:	e70d      	b.n	8018d7a <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 8018f5e:	b151      	cbz	r1, 8018f76 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 8018f60:	f81c 2002 	ldrb.w	r2, [ip, r2]
 8018f64:	4638      	mov	r0, r7
 8018f66:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8018f6a:	442a      	add	r2, r5
 8018f6c:	463e      	mov	r6, r7
 8018f6e:	e7a3      	b.n	8018eb8 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8018f70:	4638      	mov	r0, r7
 8018f72:	463a      	mov	r2, r7
 8018f74:	e7a0      	b.n	8018eb8 <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8018f76:	4638      	mov	r0, r7
 8018f78:	463a      	mov	r2, r7
 8018f7a:	e7f7      	b.n	8018f6c <_ZN8touchgfx8LCD24bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x424>
 8018f7c:	b00d      	add	sp, #52	; 0x34
 8018f7e:	ecbd 8b0a 	vpop	{d8-d12}
 8018f82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08018f88 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh>:
 8018f88:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018f8c:	e9dd 050e 	ldrd	r0, r5, [sp, #56]	; 0x38
 8018f90:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 8018f94:	2d00      	cmp	r5, #0
 8018f96:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8018f9a:	fb05 040e 	mla	r4, r5, lr, r0
 8018f9e:	f89d 7040 	ldrb.w	r7, [sp, #64]	; 0x40
 8018fa2:	f89d c044 	ldrb.w	ip, [sp, #68]	; 0x44
 8018fa6:	eb02 0804 	add.w	r8, r2, r4
 8018faa:	db40      	blt.n	801902e <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0xa6>
 8018fac:	45a9      	cmp	r9, r5
 8018fae:	dd3e      	ble.n	801902e <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0xa6>
 8018fb0:	2800      	cmp	r0, #0
 8018fb2:	db3a      	blt.n	801902a <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0xa2>
 8018fb4:	4586      	cmp	lr, r0
 8018fb6:	dd38      	ble.n	801902a <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0xa2>
 8018fb8:	5d12      	ldrb	r2, [r2, r4]
 8018fba:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8018fbe:	1c42      	adds	r2, r0, #1
 8018fc0:	d438      	bmi.n	8019034 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0xac>
 8018fc2:	4596      	cmp	lr, r2
 8018fc4:	dd36      	ble.n	8019034 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0xac>
 8018fc6:	b3bf      	cbz	r7, 8019038 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0xb0>
 8018fc8:	f898 2001 	ldrb.w	r2, [r8, #1]
 8018fcc:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8018fd0:	3501      	adds	r5, #1
 8018fd2:	d435      	bmi.n	8019040 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0xb8>
 8018fd4:	45a9      	cmp	r9, r5
 8018fd6:	dd33      	ble.n	8019040 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0xb8>
 8018fd8:	f1bc 0f00 	cmp.w	ip, #0
 8018fdc:	d033      	beq.n	8019046 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0xbe>
 8018fde:	2800      	cmp	r0, #0
 8018fe0:	db2c      	blt.n	801903c <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0xb4>
 8018fe2:	4586      	cmp	lr, r0
 8018fe4:	dd2a      	ble.n	801903c <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0xb4>
 8018fe6:	f818 200e 	ldrb.w	r2, [r8, lr]
 8018fea:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8018fee:	3001      	adds	r0, #1
 8018ff0:	d42c      	bmi.n	801904c <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0xc4>
 8018ff2:	4586      	cmp	lr, r0
 8018ff4:	dd2a      	ble.n	801904c <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0xc4>
 8018ff6:	b35f      	cbz	r7, 8019050 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0xc8>
 8018ff8:	44c6      	add	lr, r8
 8018ffa:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8018ffe:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8019002:	2f0f      	cmp	r7, #15
 8019004:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 8019008:	ea4f 6a14 	mov.w	sl, r4, lsr #24
 801900c:	ea4f 6915 	mov.w	r9, r5, lsr #24
 8019010:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8019014:	d802      	bhi.n	801901c <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x94>
 8019016:	f1bc 0f0f 	cmp.w	ip, #15
 801901a:	d91b      	bls.n	8019054 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0xcc>
 801901c:	4b77      	ldr	r3, [pc, #476]	; (80191fc <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x274>)
 801901e:	f240 115b 	movw	r1, #347	; 0x15b
 8019022:	4a77      	ldr	r2, [pc, #476]	; (8019200 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x278>)
 8019024:	4877      	ldr	r0, [pc, #476]	; (8019204 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x27c>)
 8019026:	f006 fdd7 	bl	801fbd8 <__assert_func>
 801902a:	2600      	movs	r6, #0
 801902c:	e7c7      	b.n	8018fbe <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x36>
 801902e:	2400      	movs	r4, #0
 8019030:	4626      	mov	r6, r4
 8019032:	e7cd      	b.n	8018fd0 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x48>
 8019034:	2400      	movs	r4, #0
 8019036:	e7cb      	b.n	8018fd0 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x48>
 8019038:	463c      	mov	r4, r7
 801903a:	e7c9      	b.n	8018fd0 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x48>
 801903c:	2500      	movs	r5, #0
 801903e:	e7d6      	b.n	8018fee <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x66>
 8019040:	2200      	movs	r2, #0
 8019042:	4615      	mov	r5, r2
 8019044:	e7dd      	b.n	8019002 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x7a>
 8019046:	4662      	mov	r2, ip
 8019048:	4665      	mov	r5, ip
 801904a:	e7da      	b.n	8019002 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x7a>
 801904c:	2200      	movs	r2, #0
 801904e:	e7d8      	b.n	8019002 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x7a>
 8019050:	463a      	mov	r2, r7
 8019052:	e7d6      	b.n	8019002 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x7a>
 8019054:	b2bf      	uxth	r7, r7
 8019056:	fa1f f08c 	uxth.w	r0, ip
 801905a:	ea4f 1c07 	mov.w	ip, r7, lsl #4
 801905e:	fb00 fe07 	mul.w	lr, r0, r7
 8019062:	f5cc 7380 	rsb	r3, ip, #256	; 0x100
 8019066:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801906a:	ebac 070e 	sub.w	r7, ip, lr
 801906e:	b280      	uxth	r0, r0
 8019070:	b2bf      	uxth	r7, r7
 8019072:	1a1b      	subs	r3, r3, r0
 8019074:	fb07 fc0a 	mul.w	ip, r7, sl
 8019078:	b29b      	uxth	r3, r3
 801907a:	fb03 cc0b 	mla	ip, r3, fp, ip
 801907e:	9300      	str	r3, [sp, #0]
 8019080:	fb00 cc09 	mla	ip, r0, r9, ip
 8019084:	fb0e cc08 	mla	ip, lr, r8, ip
 8019088:	f3cc 2307 	ubfx	r3, ip, #8, #8
 801908c:	9301      	str	r3, [sp, #4]
 801908e:	2b00      	cmp	r3, #0
 8019090:	f000 80b0 	beq.w	80191f4 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh+0x26c>
 8019094:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8019098:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801909c:	fb0b fc0c 	mul.w	ip, fp, ip
 80190a0:	fb0b f606 	mul.w	r6, fp, r6
 80190a4:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 80190a8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80190ac:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 80190b0:	44dc      	add	ip, fp
 80190b2:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80190b6:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80190ba:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80190be:	fb0a fb0b 	mul.w	fp, sl, fp
 80190c2:	fb0a fa04 	mul.w	sl, sl, r4
 80190c6:	f00c 13ff 	and.w	r3, ip, #16711935	; 0xff00ff
 80190ca:	f506 7c80 	add.w	ip, r6, #256	; 0x100
 80190ce:	f50a 7480 	add.w	r4, sl, #256	; 0x100
 80190d2:	eb0c 2616 	add.w	r6, ip, r6, lsr #8
 80190d6:	ea4f 2c1b 	mov.w	ip, fp, lsr #8
 80190da:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80190de:	eb04 2a1a 	add.w	sl, r4, sl, lsr #8
 80190e2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80190e6:	0a36      	lsrs	r6, r6, #8
 80190e8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80190ec:	44dc      	add	ip, fp
 80190ee:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80190f2:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 80190f6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80190fa:	fb09 fb0b 	mul.w	fp, r9, fp
 80190fe:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019102:	fb09 f905 	mul.w	r9, r9, r5
 8019106:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801910a:	ea4f 241b 	mov.w	r4, fp, lsr #8
 801910e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019112:	f509 7580 	add.w	r5, r9, #256	; 0x100
 8019116:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801911a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801911e:	fb0c fc07 	mul.w	ip, ip, r7
 8019122:	eb05 2919 	add.w	r9, r5, r9, lsr #8
 8019126:	f002 15ff 	and.w	r5, r2, #16711935	; 0xff00ff
 801912a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801912e:	445c      	add	r4, fp
 8019130:	fb08 f505 	mul.w	r5, r8, r5
 8019134:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8019138:	fb08 f802 	mul.w	r8, r8, r2
 801913c:	0a24      	lsrs	r4, r4, #8
 801913e:	0a2a      	lsrs	r2, r5, #8
 8019140:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 8019144:	fb07 f70a 	mul.w	r7, r7, sl
 8019148:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801914c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019150:	4415      	add	r5, r2
 8019152:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8019156:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801915a:	9a00      	ldr	r2, [sp, #0]
 801915c:	0a2d      	lsrs	r5, r5, #8
 801915e:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8019162:	fb03 cc02 	mla	ip, r3, r2, ip
 8019166:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801916a:	fb02 7306 	mla	r3, r2, r6, r7
 801916e:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8019172:	9a01      	ldr	r2, [sp, #4]
 8019174:	fb05 c50e 	mla	r5, r5, lr, ip
 8019178:	fb0e 3e08 	mla	lr, lr, r8, r3
 801917c:	f409 437f 	and.w	r3, r9, #65280	; 0xff00
 8019180:	fb04 5400 	mla	r4, r4, r0, r5
 8019184:	fb00 e303 	mla	r3, r0, r3, lr
 8019188:	0a24      	lsrs	r4, r4, #8
 801918a:	0a1b      	lsrs	r3, r3, #8
 801918c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8019190:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019194:	431c      	orrs	r4, r3
 8019196:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 801919a:	b29b      	uxth	r3, r3
 801919c:	b2e0      	uxtb	r0, r4
 801919e:	435a      	muls	r2, r3
 80191a0:	fb10 f003 	smulbb	r0, r0, r3
 80191a4:	1c55      	adds	r5, r2, #1
 80191a6:	eb05 2512 	add.w	r5, r5, r2, lsr #8
 80191aa:	780a      	ldrb	r2, [r1, #0]
 80191ac:	ea6f 2515 	mvn.w	r5, r5, lsr #8
 80191b0:	b2ed      	uxtb	r5, r5
 80191b2:	fb02 0205 	mla	r2, r2, r5, r0
 80191b6:	b292      	uxth	r2, r2
 80191b8:	1c50      	adds	r0, r2, #1
 80191ba:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80191be:	7848      	ldrb	r0, [r1, #1]
 80191c0:	fb10 f005 	smulbb	r0, r0, r5
 80191c4:	1212      	asrs	r2, r2, #8
 80191c6:	700a      	strb	r2, [r1, #0]
 80191c8:	f3c4 2207 	ubfx	r2, r4, #8, #8
 80191cc:	0c24      	lsrs	r4, r4, #16
 80191ce:	fb02 0203 	mla	r2, r2, r3, r0
 80191d2:	b292      	uxth	r2, r2
 80191d4:	1c50      	adds	r0, r2, #1
 80191d6:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80191da:	1212      	asrs	r2, r2, #8
 80191dc:	704a      	strb	r2, [r1, #1]
 80191de:	788a      	ldrb	r2, [r1, #2]
 80191e0:	fb12 f505 	smulbb	r5, r2, r5
 80191e4:	fb04 5303 	mla	r3, r4, r3, r5
 80191e8:	b29b      	uxth	r3, r3
 80191ea:	1c5a      	adds	r2, r3, #1
 80191ec:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80191f0:	121b      	asrs	r3, r3, #8
 80191f2:	708b      	strb	r3, [r1, #2]
 80191f4:	b003      	add	sp, #12
 80191f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80191fa:	bf00      	nop
 80191fc:	08024e84 	.word	0x08024e84
 8019200:	0802529a 	.word	0x0802529a
 8019204:	08024e51 	.word	0x08024e51

08019208 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019208:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801920c:	ed2d 8b08 	vpush	{d8-d11}
 8019210:	b09f      	sub	sp, #124	; 0x7c
 8019212:	eeb0 aa40 	vmov.f32	s20, s0
 8019216:	eef0 9a60 	vmov.f32	s19, s1
 801921a:	921b      	str	r2, [sp, #108]	; 0x6c
 801921c:	eeb0 9a41 	vmov.f32	s18, s2
 8019220:	9a35      	ldr	r2, [sp, #212]	; 0xd4
 8019222:	eeb0 8a62 	vmov.f32	s16, s5
 8019226:	9309      	str	r3, [sp, #36]	; 0x24
 8019228:	eef0 8a43 	vmov.f32	s17, s6
 801922c:	f89d 30e4 	ldrb.w	r3, [sp, #228]	; 0xe4
 8019230:	eef0 ba44 	vmov.f32	s23, s8
 8019234:	901d      	str	r0, [sp, #116]	; 0x74
 8019236:	eeb0 ba64 	vmov.f32	s22, s9
 801923a:	931c      	str	r3, [sp, #112]	; 0x70
 801923c:	eef0 aa45 	vmov.f32	s21, s10
 8019240:	6850      	ldr	r0, [r2, #4]
 8019242:	9119      	str	r1, [sp, #100]	; 0x64
 8019244:	6812      	ldr	r2, [r2, #0]
 8019246:	9d32      	ldr	r5, [sp, #200]	; 0xc8
 8019248:	e9dd 1336 	ldrd	r1, r3, [sp, #216]	; 0xd8
 801924c:	fb00 1303 	mla	r3, r0, r3, r1
 8019250:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8019254:	18d3      	adds	r3, r2, r3
 8019256:	930c      	str	r3, [sp, #48]	; 0x30
 8019258:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 801925a:	681b      	ldr	r3, [r3, #0]
 801925c:	9312      	str	r3, [sp, #72]	; 0x48
 801925e:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8019260:	685e      	ldr	r6, [r3, #4]
 8019262:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 8019266:	3604      	adds	r6, #4
 8019268:	930d      	str	r3, [sp, #52]	; 0x34
 801926a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801926c:	2b00      	cmp	r3, #0
 801926e:	dc03      	bgt.n	8019278 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019270:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8019272:	2b00      	cmp	r3, #0
 8019274:	f340 8378 	ble.w	8019968 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x760>
 8019278:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 801927a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801927e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019282:	1e48      	subs	r0, r1, #1
 8019284:	1e57      	subs	r7, r2, #1
 8019286:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019288:	2b00      	cmp	r3, #0
 801928a:	f340 818c 	ble.w	80195a6 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 801928e:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8019290:	142b      	asrs	r3, r5, #16
 8019292:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8019296:	d406      	bmi.n	80192a6 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019298:	4584      	cmp	ip, r0
 801929a:	da04      	bge.n	80192a6 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801929c:	2b00      	cmp	r3, #0
 801929e:	db02      	blt.n	80192a6 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80192a0:	42bb      	cmp	r3, r7
 80192a2:	f2c0 8181 	blt.w	80195a8 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a0>
 80192a6:	f11c 0c01 	adds.w	ip, ip, #1
 80192aa:	f100 816f 	bmi.w	801958c <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x384>
 80192ae:	4561      	cmp	r1, ip
 80192b0:	f2c0 816c 	blt.w	801958c <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x384>
 80192b4:	3301      	adds	r3, #1
 80192b6:	f100 8169 	bmi.w	801958c <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x384>
 80192ba:	429a      	cmp	r2, r3
 80192bc:	f2c0 8166 	blt.w	801958c <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x384>
 80192c0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80192c2:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 80192c4:	931a      	str	r3, [sp, #104]	; 0x68
 80192c6:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80192c8:	2b00      	cmp	r3, #0
 80192ca:	f340 818c 	ble.w	80195e6 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
 80192ce:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 80192d0:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80192d4:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80192d8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80192dc:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 80192de:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 80192e2:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 80192e4:	141b      	asrs	r3, r3, #16
 80192e6:	f100 81d0 	bmi.w	801968a <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x482>
 80192ea:	f100 38ff 	add.w	r8, r0, #4294967295
 80192ee:	4543      	cmp	r3, r8
 80192f0:	f280 81cb 	bge.w	801968a <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x482>
 80192f4:	f1bc 0f00 	cmp.w	ip, #0
 80192f8:	f2c0 81c7 	blt.w	801968a <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x482>
 80192fc:	f10e 38ff 	add.w	r8, lr, #4294967295
 8019300:	45c4      	cmp	ip, r8
 8019302:	f280 81c2 	bge.w	801968a <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x482>
 8019306:	b200      	sxth	r0, r0
 8019308:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801930a:	fb0c 3300 	mla	r3, ip, r0, r3
 801930e:	eb04 0803 	add.w	r8, r4, r3
 8019312:	5ce3      	ldrb	r3, [r4, r3]
 8019314:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8019318:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801931c:	2a00      	cmp	r2, #0
 801931e:	f000 81a9 	beq.w	8019674 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46c>
 8019322:	f898 c001 	ldrb.w	ip, [r8, #1]
 8019326:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801932a:	940e      	str	r4, [sp, #56]	; 0x38
 801932c:	0e24      	lsrs	r4, r4, #24
 801932e:	9415      	str	r4, [sp, #84]	; 0x54
 8019330:	b179      	cbz	r1, 8019352 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8019332:	eb08 0c00 	add.w	ip, r8, r0
 8019336:	f818 0000 	ldrb.w	r0, [r8, r0]
 801933a:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801933e:	900a      	str	r0, [sp, #40]	; 0x28
 8019340:	0e00      	lsrs	r0, r0, #24
 8019342:	9013      	str	r0, [sp, #76]	; 0x4c
 8019344:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8019348:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801934c:	900f      	str	r0, [sp, #60]	; 0x3c
 801934e:	0e00      	lsrs	r0, r0, #24
 8019350:	9016      	str	r0, [sp, #88]	; 0x58
 8019352:	b292      	uxth	r2, r2
 8019354:	9815      	ldr	r0, [sp, #84]	; 0x54
 8019356:	b289      	uxth	r1, r1
 8019358:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801935a:	fb02 f901 	mul.w	r9, r2, r1
 801935e:	0112      	lsls	r2, r2, #4
 8019360:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8019364:	eba2 0809 	sub.w	r8, r2, r9
 8019368:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801936c:	b289      	uxth	r1, r1
 801936e:	fa1f f888 	uxth.w	r8, r8
 8019372:	1a52      	subs	r2, r2, r1
 8019374:	fb08 f000 	mul.w	r0, r8, r0
 8019378:	b292      	uxth	r2, r2
 801937a:	fb02 000e 	mla	r0, r2, lr, r0
 801937e:	fb01 0004 	mla	r0, r1, r4, r0
 8019382:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8019384:	fb09 0004 	mla	r0, r9, r4, r0
 8019388:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801938c:	2800      	cmp	r0, #0
 801938e:	f000 80f2 	beq.w	8019576 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 8019392:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8019396:	d01b      	beq.n	80193d0 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8019398:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801939c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80193a0:	fb0e fa0a 	mul.w	sl, lr, sl
 80193a4:	fb0e fe03 	mul.w	lr, lr, r3
 80193a8:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80193ac:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80193b0:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80193b4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80193b8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80193bc:	4453      	add	r3, sl
 80193be:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80193c2:	0a1b      	lsrs	r3, r3, #8
 80193c4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80193c8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80193cc:	ea43 030c 	orr.w	r3, r3, ip
 80193d0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80193d2:	2cff      	cmp	r4, #255	; 0xff
 80193d4:	d021      	beq.n	801941a <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 80193d6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80193d8:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80193dc:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80193de:	fb04 fb0b 	mul.w	fp, r4, fp
 80193e2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80193e4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80193e8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80193ea:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80193ee:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80193f2:	fb04 fa0a 	mul.w	sl, r4, sl
 80193f6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80193fa:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80193fe:	44de      	add	lr, fp
 8019400:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019404:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019408:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801940c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019410:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019414:	ea4e 040a 	orr.w	r4, lr, sl
 8019418:	940e      	str	r4, [sp, #56]	; 0x38
 801941a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801941c:	2cff      	cmp	r4, #255	; 0xff
 801941e:	d021      	beq.n	8019464 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25c>
 8019420:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8019422:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8019426:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019428:	fb04 fb0b 	mul.w	fp, r4, fp
 801942c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801942e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8019432:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019434:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019438:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801943c:	fb04 fa0a 	mul.w	sl, r4, sl
 8019440:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019444:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019448:	44de      	add	lr, fp
 801944a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801944e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019452:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019456:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801945a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801945e:	ea4e 040a 	orr.w	r4, lr, sl
 8019462:	940a      	str	r4, [sp, #40]	; 0x28
 8019464:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8019466:	2cff      	cmp	r4, #255	; 0xff
 8019468:	d021      	beq.n	80194ae <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801946a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801946c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8019470:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8019472:	fb04 fb0b 	mul.w	fp, r4, fp
 8019476:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8019478:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801947c:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801947e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019482:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019486:	fb04 fa0a 	mul.w	sl, r4, sl
 801948a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801948e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019492:	44de      	add	lr, fp
 8019494:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019498:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801949c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80194a0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80194a4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80194a8:	ea4e 040a 	orr.w	r4, lr, sl
 80194ac:	940f      	str	r4, [sp, #60]	; 0x3c
 80194ae:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80194b0:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 80194b4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80194b8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80194bc:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80194be:	fb08 fc0c 	mul.w	ip, r8, ip
 80194c2:	fb02 cc0e 	mla	ip, r2, lr, ip
 80194c6:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80194ca:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80194cc:	fb01 cc0e 	mla	ip, r1, lr, ip
 80194d0:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80194d4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80194d6:	fb09 cc0e 	mla	ip, r9, lr, ip
 80194da:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 80194de:	fb08 f80e 	mul.w	r8, r8, lr
 80194e2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80194e6:	fb02 8303 	mla	r3, r2, r3, r8
 80194ea:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80194ec:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80194f0:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80194f4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80194f6:	fb01 330a 	mla	r3, r1, sl, r3
 80194fa:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 80194fe:	fb09 3901 	mla	r9, r9, r1, r3
 8019502:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019504:	990d      	ldr	r1, [sp, #52]	; 0x34
 8019506:	4343      	muls	r3, r0
 8019508:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801950c:	1c58      	adds	r0, r3, #1
 801950e:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8019512:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8019516:	ea4c 0c09 	orr.w	ip, ip, r9
 801951a:	783b      	ldrb	r3, [r7, #0]
 801951c:	fa5f f28c 	uxtb.w	r2, ip
 8019520:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8019524:	fb12 f201 	smulbb	r2, r2, r1
 8019528:	b2c0      	uxtb	r0, r0
 801952a:	fb03 2300 	mla	r3, r3, r0, r2
 801952e:	b29b      	uxth	r3, r3
 8019530:	1c5a      	adds	r2, r3, #1
 8019532:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8019536:	787a      	ldrb	r2, [r7, #1]
 8019538:	fb12 f200 	smulbb	r2, r2, r0
 801953c:	121b      	asrs	r3, r3, #8
 801953e:	703b      	strb	r3, [r7, #0]
 8019540:	f3cc 2307 	ubfx	r3, ip, #8, #8
 8019544:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 8019548:	fb03 2301 	mla	r3, r3, r1, r2
 801954c:	b29b      	uxth	r3, r3
 801954e:	1c5a      	adds	r2, r3, #1
 8019550:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8019554:	121b      	asrs	r3, r3, #8
 8019556:	707b      	strb	r3, [r7, #1]
 8019558:	78bb      	ldrb	r3, [r7, #2]
 801955a:	fb13 f000 	smulbb	r0, r3, r0
 801955e:	fb0c 0c01 	mla	ip, ip, r1, r0
 8019562:	fa1f fc8c 	uxth.w	ip, ip
 8019566:	f10c 0301 	add.w	r3, ip, #1
 801956a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801956e:	ea4f 2c2c 	mov.w	ip, ip, asr #8
 8019572:	f887 c002 	strb.w	ip, [r7, #2]
 8019576:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8019578:	3703      	adds	r7, #3
 801957a:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 801957c:	441a      	add	r2, r3
 801957e:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8019580:	441d      	add	r5, r3
 8019582:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8019584:	9231      	str	r2, [sp, #196]	; 0xc4
 8019586:	3b01      	subs	r3, #1
 8019588:	931a      	str	r3, [sp, #104]	; 0x68
 801958a:	e69c      	b.n	80192c6 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 801958c:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 801958e:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8019590:	441c      	add	r4, r3
 8019592:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8019594:	441d      	add	r5, r3
 8019596:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019598:	9431      	str	r4, [sp, #196]	; 0xc4
 801959a:	3b01      	subs	r3, #1
 801959c:	9309      	str	r3, [sp, #36]	; 0x24
 801959e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80195a0:	3303      	adds	r3, #3
 80195a2:	930c      	str	r3, [sp, #48]	; 0x30
 80195a4:	e66f      	b.n	8019286 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80195a6:	d026      	beq.n	80195f6 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 80195a8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80195aa:	9833      	ldr	r0, [sp, #204]	; 0xcc
 80195ac:	3b01      	subs	r3, #1
 80195ae:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 80195b0:	fb00 4003 	mla	r0, r0, r3, r4
 80195b4:	1400      	asrs	r0, r0, #16
 80195b6:	f53f ae83 	bmi.w	80192c0 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 80195ba:	3901      	subs	r1, #1
 80195bc:	4288      	cmp	r0, r1
 80195be:	f6bf ae7f 	bge.w	80192c0 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 80195c2:	9934      	ldr	r1, [sp, #208]	; 0xd0
 80195c4:	fb01 5303 	mla	r3, r1, r3, r5
 80195c8:	141b      	asrs	r3, r3, #16
 80195ca:	f53f ae79 	bmi.w	80192c0 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 80195ce:	3a01      	subs	r2, #1
 80195d0:	4293      	cmp	r3, r2
 80195d2:	f6bf ae75 	bge.w	80192c0 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 80195d6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80195d8:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80195dc:	f103 0e03 	add.w	lr, r3, #3
 80195e0:	f1bb 0f00 	cmp.w	fp, #0
 80195e4:	dc71      	bgt.n	80196ca <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c2>
 80195e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80195e8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80195ec:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80195ee:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80195f2:	4423      	add	r3, r4
 80195f4:	930c      	str	r3, [sp, #48]	; 0x30
 80195f6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80195f8:	2b00      	cmp	r3, #0
 80195fa:	f340 81b5 	ble.w	8019968 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x760>
 80195fe:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019602:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8019604:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8019608:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801960c:	eef0 6a48 	vmov.f32	s13, s16
 8019610:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8019614:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8019618:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801961c:	edcd 6a31 	vstr	s13, [sp, #196]	; 0xc4
 8019620:	eef0 6a68 	vmov.f32	s13, s17
 8019624:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019628:	ee16 5a90 	vmov	r5, s13
 801962c:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8019630:	ee69 7a27 	vmul.f32	s15, s18, s15
 8019634:	ee37 8a48 	vsub.f32	s16, s14, s16
 8019638:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801963c:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8019640:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8019644:	ee18 2a10 	vmov	r2, s16
 8019648:	eeb0 8a47 	vmov.f32	s16, s14
 801964c:	fb92 f3f3 	sdiv	r3, r2, r3
 8019650:	ee18 2a90 	vmov	r2, s17
 8019654:	9333      	str	r3, [sp, #204]	; 0xcc
 8019656:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8019658:	eef0 8a67 	vmov.f32	s17, s15
 801965c:	fb92 f3f3 	sdiv	r3, r2, r3
 8019660:	9334      	str	r3, [sp, #208]	; 0xd0
 8019662:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8019664:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8019666:	3b01      	subs	r3, #1
 8019668:	9319      	str	r3, [sp, #100]	; 0x64
 801966a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801966c:	bf08      	it	eq
 801966e:	4613      	moveq	r3, r2
 8019670:	9309      	str	r3, [sp, #36]	; 0x24
 8019672:	e5fa      	b.n	801926a <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8019674:	2900      	cmp	r1, #0
 8019676:	f43f ae6c 	beq.w	8019352 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801967a:	f818 0000 	ldrb.w	r0, [r8, r0]
 801967e:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8019682:	900a      	str	r0, [sp, #40]	; 0x28
 8019684:	0e00      	lsrs	r0, r0, #24
 8019686:	9013      	str	r0, [sp, #76]	; 0x4c
 8019688:	e663      	b.n	8019352 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801968a:	f113 0801 	adds.w	r8, r3, #1
 801968e:	f53f af72 	bmi.w	8019576 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 8019692:	4540      	cmp	r0, r8
 8019694:	f6ff af6f 	blt.w	8019576 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 8019698:	f11c 0801 	adds.w	r8, ip, #1
 801969c:	f53f af6b 	bmi.w	8019576 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 80196a0:	45c6      	cmp	lr, r8
 80196a2:	f6ff af68 	blt.w	8019576 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 80196a6:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 80196a8:	b200      	sxth	r0, r0
 80196aa:	9302      	str	r3, [sp, #8]
 80196ac:	fa0f f38e 	sxth.w	r3, lr
 80196b0:	9000      	str	r0, [sp, #0]
 80196b2:	9301      	str	r3, [sp, #4]
 80196b4:	4633      	mov	r3, r6
 80196b6:	981d      	ldr	r0, [sp, #116]	; 0x74
 80196b8:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80196bc:	e9cd c203 	strd	ip, r2, [sp, #12]
 80196c0:	4639      	mov	r1, r7
 80196c2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80196c4:	f7ff fc60 	bl	8018f88 <_ZNK8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKmssiihhh>
 80196c8:	e755      	b.n	8019576 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 80196ca:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 80196cc:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80196d0:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 80196d2:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80196d6:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 80196d8:	1427      	asrs	r7, r4, #16
 80196da:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80196dc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80196e0:	142b      	asrs	r3, r5, #16
 80196e2:	fb01 7303 	mla	r3, r1, r3, r7
 80196e6:	18e7      	adds	r7, r4, r3
 80196e8:	5ce3      	ldrb	r3, [r4, r3]
 80196ea:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80196ee:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80196f2:	2a00      	cmp	r2, #0
 80196f4:	f000 812e 	beq.w	8019954 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>
 80196f8:	f897 8001 	ldrb.w	r8, [r7, #1]
 80196fc:	f856 4028 	ldr.w	r4, [r6, r8, lsl #2]
 8019700:	9410      	str	r4, [sp, #64]	; 0x40
 8019702:	0e24      	lsrs	r4, r4, #24
 8019704:	9417      	str	r4, [sp, #92]	; 0x5c
 8019706:	b170      	cbz	r0, 8019726 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x51e>
 8019708:	eb07 0801 	add.w	r8, r7, r1
 801970c:	5c79      	ldrb	r1, [r7, r1]
 801970e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8019712:	910b      	str	r1, [sp, #44]	; 0x2c
 8019714:	0e09      	lsrs	r1, r1, #24
 8019716:	9114      	str	r1, [sp, #80]	; 0x50
 8019718:	f898 1001 	ldrb.w	r1, [r8, #1]
 801971c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8019720:	9111      	str	r1, [sp, #68]	; 0x44
 8019722:	0e09      	lsrs	r1, r1, #24
 8019724:	9118      	str	r1, [sp, #96]	; 0x60
 8019726:	b292      	uxth	r2, r2
 8019728:	9917      	ldr	r1, [sp, #92]	; 0x5c
 801972a:	b280      	uxth	r0, r0
 801972c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801972e:	fb02 f900 	mul.w	r9, r2, r0
 8019732:	0112      	lsls	r2, r2, #4
 8019734:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8019738:	eba2 0809 	sub.w	r8, r2, r9
 801973c:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8019740:	b280      	uxth	r0, r0
 8019742:	fa1f f888 	uxth.w	r8, r8
 8019746:	1a12      	subs	r2, r2, r0
 8019748:	fb08 f101 	mul.w	r1, r8, r1
 801974c:	b292      	uxth	r2, r2
 801974e:	fb02 110c 	mla	r1, r2, ip, r1
 8019752:	fb00 1104 	mla	r1, r0, r4, r1
 8019756:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8019758:	fb09 1104 	mla	r1, r9, r4, r1
 801975c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8019760:	2900      	cmp	r1, #0
 8019762:	f000 80ec 	beq.w	801993e <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 8019766:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801976a:	d019      	beq.n	80197a0 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x598>
 801976c:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8019770:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019774:	fb0c fa0a 	mul.w	sl, ip, sl
 8019778:	fb0c fc03 	mul.w	ip, ip, r3
 801977c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8019780:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8019784:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8019788:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801978c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8019790:	4453      	add	r3, sl
 8019792:	0a3f      	lsrs	r7, r7, #8
 8019794:	0a1b      	lsrs	r3, r3, #8
 8019796:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801979a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801979e:	433b      	orrs	r3, r7
 80197a0:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80197a2:	2cff      	cmp	r4, #255	; 0xff
 80197a4:	d020      	beq.n	80197e8 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e0>
 80197a6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80197a8:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80197ac:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80197ae:	4367      	muls	r7, r4
 80197b0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80197b2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80197b6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80197ba:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80197bc:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80197c0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80197c4:	fb04 fa0a 	mul.w	sl, r4, sl
 80197c8:	44bc      	add	ip, r7
 80197ca:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80197ce:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80197d2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80197d6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80197da:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80197de:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80197e2:	ea4c 040a 	orr.w	r4, ip, sl
 80197e6:	9410      	str	r4, [sp, #64]	; 0x40
 80197e8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80197ea:	2cff      	cmp	r4, #255	; 0xff
 80197ec:	d020      	beq.n	8019830 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x628>
 80197ee:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80197f0:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80197f4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80197f6:	4367      	muls	r7, r4
 80197f8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80197fa:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80197fe:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8019802:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019804:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8019808:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801980c:	fb04 fa0a 	mul.w	sl, r4, sl
 8019810:	44bc      	add	ip, r7
 8019812:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8019816:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801981a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801981e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019822:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019826:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801982a:	ea4c 040a 	orr.w	r4, ip, sl
 801982e:	940b      	str	r4, [sp, #44]	; 0x2c
 8019830:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8019832:	2cff      	cmp	r4, #255	; 0xff
 8019834:	d020      	beq.n	8019878 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x670>
 8019836:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019838:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801983c:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801983e:	4367      	muls	r7, r4
 8019840:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019842:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019846:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801984a:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801984c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8019850:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019854:	fb04 fa0a 	mul.w	sl, r4, sl
 8019858:	44bc      	add	ip, r7
 801985a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801985e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019862:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8019866:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801986a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801986e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019872:	ea4c 040a 	orr.w	r4, ip, sl
 8019876:	9411      	str	r4, [sp, #68]	; 0x44
 8019878:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801987a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801987e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019882:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8019886:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8019888:	fb08 f707 	mul.w	r7, r8, r7
 801988c:	fb02 770c 	mla	r7, r2, ip, r7
 8019890:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8019894:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019896:	fb00 770c 	mla	r7, r0, ip, r7
 801989a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801989e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80198a0:	fb09 770c 	mla	r7, r9, ip, r7
 80198a4:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80198a8:	fb08 f80c 	mul.w	r8, r8, ip
 80198ac:	0a3f      	lsrs	r7, r7, #8
 80198ae:	fb02 8303 	mla	r3, r2, r3, r8
 80198b2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80198b4:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80198b8:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80198bc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80198be:	fb00 330a 	mla	r3, r0, sl, r3
 80198c2:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80198c6:	980d      	ldr	r0, [sp, #52]	; 0x34
 80198c8:	fb09 3c0c 	mla	ip, r9, ip, r3
 80198cc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80198ce:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80198d2:	434b      	muls	r3, r1
 80198d4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80198d8:	1c59      	adds	r1, r3, #1
 80198da:	ea47 070c 	orr.w	r7, r7, ip
 80198de:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80198e2:	f81e 3c03 	ldrb.w	r3, [lr, #-3]
 80198e6:	b2fa      	uxtb	r2, r7
 80198e8:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80198ec:	fb12 f200 	smulbb	r2, r2, r0
 80198f0:	b2c9      	uxtb	r1, r1
 80198f2:	fb03 2301 	mla	r3, r3, r1, r2
 80198f6:	b29b      	uxth	r3, r3
 80198f8:	1c5a      	adds	r2, r3, #1
 80198fa:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80198fe:	f81e 2c02 	ldrb.w	r2, [lr, #-2]
 8019902:	fb12 f201 	smulbb	r2, r2, r1
 8019906:	121b      	asrs	r3, r3, #8
 8019908:	f80e 3c03 	strb.w	r3, [lr, #-3]
 801990c:	f3c7 2307 	ubfx	r3, r7, #8, #8
 8019910:	0c3f      	lsrs	r7, r7, #16
 8019912:	fb03 2300 	mla	r3, r3, r0, r2
 8019916:	b29b      	uxth	r3, r3
 8019918:	1c5a      	adds	r2, r3, #1
 801991a:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801991e:	121b      	asrs	r3, r3, #8
 8019920:	f80e 3c02 	strb.w	r3, [lr, #-2]
 8019924:	f81e 3c01 	ldrb.w	r3, [lr, #-1]
 8019928:	fb13 f101 	smulbb	r1, r3, r1
 801992c:	fb07 1700 	mla	r7, r7, r0, r1
 8019930:	b2bf      	uxth	r7, r7
 8019932:	1c7b      	adds	r3, r7, #1
 8019934:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8019938:	123f      	asrs	r7, r7, #8
 801993a:	f80e 7c01 	strb.w	r7, [lr, #-1]
 801993e:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8019940:	f10e 0e03 	add.w	lr, lr, #3
 8019944:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8019946:	f10b 3bff 	add.w	fp, fp, #4294967295
 801994a:	441a      	add	r2, r3
 801994c:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801994e:	9231      	str	r2, [sp, #196]	; 0xc4
 8019950:	441d      	add	r5, r3
 8019952:	e645      	b.n	80195e0 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d8>
 8019954:	2800      	cmp	r0, #0
 8019956:	f43f aee6 	beq.w	8019726 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x51e>
 801995a:	5c79      	ldrb	r1, [r7, r1]
 801995c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8019960:	910b      	str	r1, [sp, #44]	; 0x2c
 8019962:	0e09      	lsrs	r1, r1, #24
 8019964:	9114      	str	r1, [sp, #80]	; 0x50
 8019966:	e6de      	b.n	8019726 <_ZN8touchgfx8LCD24bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x51e>
 8019968:	b01f      	add	sp, #124	; 0x7c
 801996a:	ecbd 8b08 	vpop	{d8-d11}
 801996e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08019974 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh>:
 8019974:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019978:	e9dd 040e 	ldrd	r0, r4, [sp, #56]	; 0x38
 801997c:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 8019980:	2c00      	cmp	r4, #0
 8019982:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 8019986:	fb04 060c 	mla	r6, r4, ip, r0
 801998a:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 801998e:	f89d 7044 	ldrb.w	r7, [sp, #68]	; 0x44
 8019992:	eb02 0e06 	add.w	lr, r2, r6
 8019996:	db3d      	blt.n	8019a14 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0xa0>
 8019998:	45a0      	cmp	r8, r4
 801999a:	dd3b      	ble.n	8019a14 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0xa0>
 801999c:	2800      	cmp	r0, #0
 801999e:	db37      	blt.n	8019a10 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x9c>
 80199a0:	4584      	cmp	ip, r0
 80199a2:	dd35      	ble.n	8019a10 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x9c>
 80199a4:	5d92      	ldrb	r2, [r2, r6]
 80199a6:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80199aa:	1c46      	adds	r6, r0, #1
 80199ac:	d435      	bmi.n	8019a1a <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0xa6>
 80199ae:	45b4      	cmp	ip, r6
 80199b0:	dd33      	ble.n	8019a1a <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0xa6>
 80199b2:	b3a5      	cbz	r5, 8019a1e <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0xaa>
 80199b4:	f89e 6001 	ldrb.w	r6, [lr, #1]
 80199b8:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 80199bc:	3401      	adds	r4, #1
 80199be:	d432      	bmi.n	8019a26 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0xb2>
 80199c0:	45a0      	cmp	r8, r4
 80199c2:	dd30      	ble.n	8019a26 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0xb2>
 80199c4:	b397      	cbz	r7, 8019a2c <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0xb8>
 80199c6:	2800      	cmp	r0, #0
 80199c8:	db2b      	blt.n	8019a22 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0xae>
 80199ca:	4584      	cmp	ip, r0
 80199cc:	dd29      	ble.n	8019a22 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0xae>
 80199ce:	f81e 400c 	ldrb.w	r4, [lr, ip]
 80199d2:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 80199d6:	3001      	adds	r0, #1
 80199d8:	d42b      	bmi.n	8019a32 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0xbe>
 80199da:	4584      	cmp	ip, r0
 80199dc:	dd29      	ble.n	8019a32 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0xbe>
 80199de:	b355      	cbz	r5, 8019a36 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0xc2>
 80199e0:	44f4      	add	ip, lr
 80199e2:	f89c 0001 	ldrb.w	r0, [ip, #1]
 80199e6:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 80199ea:	2d0f      	cmp	r5, #15
 80199ec:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 80199f0:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 80199f4:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80199f8:	ea4f 6813 	mov.w	r8, r3, lsr #24
 80199fc:	d801      	bhi.n	8019a02 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x8e>
 80199fe:	2f0f      	cmp	r7, #15
 8019a00:	d91b      	bls.n	8019a3a <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0xc6>
 8019a02:	4b7f      	ldr	r3, [pc, #508]	; (8019c00 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x28c>)
 8019a04:	f240 115b 	movw	r1, #347	; 0x15b
 8019a08:	4a7e      	ldr	r2, [pc, #504]	; (8019c04 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x290>)
 8019a0a:	487f      	ldr	r0, [pc, #508]	; (8019c08 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x294>)
 8019a0c:	f006 f8e4 	bl	801fbd8 <__assert_func>
 8019a10:	2200      	movs	r2, #0
 8019a12:	e7ca      	b.n	80199aa <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x36>
 8019a14:	2600      	movs	r6, #0
 8019a16:	4632      	mov	r2, r6
 8019a18:	e7d0      	b.n	80199bc <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x48>
 8019a1a:	2600      	movs	r6, #0
 8019a1c:	e7ce      	b.n	80199bc <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x48>
 8019a1e:	462e      	mov	r6, r5
 8019a20:	e7cc      	b.n	80199bc <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x48>
 8019a22:	2400      	movs	r4, #0
 8019a24:	e7d7      	b.n	80199d6 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x62>
 8019a26:	2300      	movs	r3, #0
 8019a28:	461c      	mov	r4, r3
 8019a2a:	e7de      	b.n	80199ea <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x76>
 8019a2c:	463b      	mov	r3, r7
 8019a2e:	463c      	mov	r4, r7
 8019a30:	e7db      	b.n	80199ea <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x76>
 8019a32:	2300      	movs	r3, #0
 8019a34:	e7d9      	b.n	80199ea <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x76>
 8019a36:	462b      	mov	r3, r5
 8019a38:	e7d7      	b.n	80199ea <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x76>
 8019a3a:	b2a8      	uxth	r0, r5
 8019a3c:	b2bf      	uxth	r7, r7
 8019a3e:	fb07 fe00 	mul.w	lr, r7, r0
 8019a42:	0100      	lsls	r0, r0, #4
 8019a44:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8019a48:	eba0 0c0e 	sub.w	ip, r0, lr
 8019a4c:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8019a50:	b2bf      	uxth	r7, r7
 8019a52:	fa1f fc8c 	uxth.w	ip, ip
 8019a56:	1bc5      	subs	r5, r0, r7
 8019a58:	fb0c f00a 	mul.w	r0, ip, sl
 8019a5c:	b2ad      	uxth	r5, r5
 8019a5e:	fb05 000b 	mla	r0, r5, fp, r0
 8019a62:	fb07 0009 	mla	r0, r7, r9, r0
 8019a66:	fb0e 0008 	mla	r0, lr, r8, r0
 8019a6a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8019a6e:	9001      	str	r0, [sp, #4]
 8019a70:	2800      	cmp	r0, #0
 8019a72:	f000 80c2 	beq.w	8019bfa <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x286>
 8019a76:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8019a7a:	d018      	beq.n	8019aae <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x13a>
 8019a7c:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8019a80:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019a84:	fb0b f000 	mul.w	r0, fp, r0
 8019a88:	fb0b fb02 	mul.w	fp, fp, r2
 8019a8c:	0a02      	lsrs	r2, r0, #8
 8019a8e:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8019a92:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019a96:	4402      	add	r2, r0
 8019a98:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8019a9c:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8019aa0:	0a12      	lsrs	r2, r2, #8
 8019aa2:	0a00      	lsrs	r0, r0, #8
 8019aa4:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019aa8:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8019aac:	4302      	orrs	r2, r0
 8019aae:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8019ab2:	d01a      	beq.n	8019aea <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x176>
 8019ab4:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 8019ab8:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8019abc:	fb0a f000 	mul.w	r0, sl, r0
 8019ac0:	fb0a fa06 	mul.w	sl, sl, r6
 8019ac4:	0a06      	lsrs	r6, r0, #8
 8019ac6:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8019aca:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8019ace:	4406      	add	r6, r0
 8019ad0:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8019ad4:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 8019ad8:	0a36      	lsrs	r6, r6, #8
 8019ada:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019ade:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8019ae2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019ae6:	ea46 060a 	orr.w	r6, r6, sl
 8019aea:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8019aee:	d01b      	beq.n	8019b28 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x1b4>
 8019af0:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8019af4:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8019af8:	fb09 fa0a 	mul.w	sl, r9, sl
 8019afc:	fb09 f004 	mul.w	r0, r9, r4
 8019b00:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8019b04:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8019b08:	f500 7980 	add.w	r9, r0, #256	; 0x100
 8019b0c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8019b10:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 8019b14:	4454      	add	r4, sl
 8019b16:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8019b1a:	0a24      	lsrs	r4, r4, #8
 8019b1c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8019b20:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8019b24:	ea44 0409 	orr.w	r4, r4, r9
 8019b28:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8019b2c:	d01b      	beq.n	8019b66 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh+0x1f2>
 8019b2e:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8019b32:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019b36:	fb08 f909 	mul.w	r9, r8, r9
 8019b3a:	fb08 f003 	mul.w	r0, r8, r3
 8019b3e:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8019b42:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8019b46:	f500 7880 	add.w	r8, r0, #256	; 0x100
 8019b4a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019b4e:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 8019b52:	444b      	add	r3, r9
 8019b54:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8019b58:	0a1b      	lsrs	r3, r3, #8
 8019b5a:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8019b5e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019b62:	ea43 0308 	orr.w	r3, r3, r8
 8019b66:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 8019b6a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8019b6e:	f002 18ff 	and.w	r8, r2, #16711935	; 0xff00ff
 8019b72:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019b76:	fb0c f000 	mul.w	r0, ip, r0
 8019b7a:	fb0c f606 	mul.w	r6, ip, r6
 8019b7e:	fb05 0808 	mla	r8, r5, r8, r0
 8019b82:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 8019b86:	fb05 6502 	mla	r5, r5, r2, r6
 8019b8a:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8019b8e:	fb07 8800 	mla	r8, r7, r0, r8
 8019b92:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 8019b96:	fb07 5704 	mla	r7, r7, r4, r5
 8019b9a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019b9e:	fb0e 8000 	mla	r0, lr, r0, r8
 8019ba2:	780a      	ldrb	r2, [r1, #0]
 8019ba4:	fb0e 7e03 	mla	lr, lr, r3, r7
 8019ba8:	9b01      	ldr	r3, [sp, #4]
 8019baa:	0a00      	lsrs	r0, r0, #8
 8019bac:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019bb0:	43db      	mvns	r3, r3
 8019bb2:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8019bb6:	b2db      	uxtb	r3, r3
 8019bb8:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8019bbc:	ea40 0e0e 	orr.w	lr, r0, lr
 8019bc0:	fb02 f003 	mul.w	r0, r2, r3
 8019bc4:	1c42      	adds	r2, r0, #1
 8019bc6:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8019bca:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 8019bce:	700a      	strb	r2, [r1, #0]
 8019bd0:	784a      	ldrb	r2, [r1, #1]
 8019bd2:	435a      	muls	r2, r3
 8019bd4:	1c50      	adds	r0, r2, #1
 8019bd6:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8019bda:	ea4f 221e 	mov.w	r2, lr, lsr #8
 8019bde:	ea4f 4e1e 	mov.w	lr, lr, lsr #16
 8019be2:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8019be6:	704a      	strb	r2, [r1, #1]
 8019be8:	788a      	ldrb	r2, [r1, #2]
 8019bea:	4353      	muls	r3, r2
 8019bec:	1c5a      	adds	r2, r3, #1
 8019bee:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8019bf2:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 8019bf6:	f881 e002 	strb.w	lr, [r1, #2]
 8019bfa:	b003      	add	sp, #12
 8019bfc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019c00:	08024e84 	.word	0x08024e84
 8019c04:	0802529a 	.word	0x0802529a
 8019c08:	08024e51 	.word	0x08024e51

08019c0c <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019c0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019c10:	ed2d 8b0a 	vpush	{d8-d12}
 8019c14:	b09b      	sub	sp, #108	; 0x6c
 8019c16:	eeb0 aa40 	vmov.f32	s20, s0
 8019c1a:	eef0 9a60 	vmov.f32	s19, s1
 8019c1e:	9218      	str	r2, [sp, #96]	; 0x60
 8019c20:	eeb0 9a41 	vmov.f32	s18, s2
 8019c24:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 8019c26:	eeb0 8a62 	vmov.f32	s16, s5
 8019c2a:	9019      	str	r0, [sp, #100]	; 0x64
 8019c2c:	eef0 8a43 	vmov.f32	s17, s6
 8019c30:	6850      	ldr	r0, [r2, #4]
 8019c32:	eeb0 ca44 	vmov.f32	s24, s8
 8019c36:	9116      	str	r1, [sp, #88]	; 0x58
 8019c38:	eef0 ba64 	vmov.f32	s23, s9
 8019c3c:	9307      	str	r3, [sp, #28]
 8019c3e:	eeb0 ba45 	vmov.f32	s22, s10
 8019c42:	6812      	ldr	r2, [r2, #0]
 8019c44:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 8019c48:	9d30      	ldr	r5, [sp, #192]	; 0xc0
 8019c4a:	e9dd 1334 	ldrd	r1, r3, [sp, #208]	; 0xd0
 8019c4e:	fb00 1303 	mla	r3, r0, r3, r1
 8019c52:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8019c56:	18d3      	adds	r3, r2, r3
 8019c58:	930a      	str	r3, [sp, #40]	; 0x28
 8019c5a:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8019c5c:	681b      	ldr	r3, [r3, #0]
 8019c5e:	930f      	str	r3, [sp, #60]	; 0x3c
 8019c60:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8019c62:	685e      	ldr	r6, [r3, #4]
 8019c64:	3604      	adds	r6, #4
 8019c66:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8019c68:	2b00      	cmp	r3, #0
 8019c6a:	dc03      	bgt.n	8019c74 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019c6c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8019c6e:	2b00      	cmp	r3, #0
 8019c70:	f340 834f 	ble.w	801a312 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 8019c74:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8019c76:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019c7a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019c7e:	1e48      	subs	r0, r1, #1
 8019c80:	1e57      	subs	r7, r2, #1
 8019c82:	9b07      	ldr	r3, [sp, #28]
 8019c84:	2b00      	cmp	r3, #0
 8019c86:	f340 8178 	ble.w	8019f7a <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 8019c8a:	9c2f      	ldr	r4, [sp, #188]	; 0xbc
 8019c8c:	142b      	asrs	r3, r5, #16
 8019c8e:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8019c92:	d406      	bmi.n	8019ca2 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019c94:	4584      	cmp	ip, r0
 8019c96:	da04      	bge.n	8019ca2 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019c98:	2b00      	cmp	r3, #0
 8019c9a:	db02      	blt.n	8019ca2 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019c9c:	42bb      	cmp	r3, r7
 8019c9e:	f2c0 816d 	blt.w	8019f7c <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8019ca2:	f11c 0c01 	adds.w	ip, ip, #1
 8019ca6:	f100 815b 	bmi.w	8019f60 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 8019caa:	4561      	cmp	r1, ip
 8019cac:	f2c0 8158 	blt.w	8019f60 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 8019cb0:	3301      	adds	r3, #1
 8019cb2:	f100 8155 	bmi.w	8019f60 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 8019cb6:	429a      	cmp	r2, r3
 8019cb8:	f2c0 8152 	blt.w	8019f60 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 8019cbc:	9b07      	ldr	r3, [sp, #28]
 8019cbe:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8019cc0:	9317      	str	r3, [sp, #92]	; 0x5c
 8019cc2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8019cc4:	2b00      	cmp	r3, #0
 8019cc6:	f340 8178 	ble.w	8019fba <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8019cca:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8019ccc:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8019cd0:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8019cd4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8019cd8:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8019cda:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8019cde:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8019ce0:	141b      	asrs	r3, r3, #16
 8019ce2:	f100 81ba 	bmi.w	801a05a <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8019ce6:	f101 38ff 	add.w	r8, r1, #4294967295
 8019cea:	4543      	cmp	r3, r8
 8019cec:	f280 81b5 	bge.w	801a05a <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8019cf0:	f1bc 0f00 	cmp.w	ip, #0
 8019cf4:	f2c0 81b1 	blt.w	801a05a <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8019cf8:	f10e 38ff 	add.w	r8, lr, #4294967295
 8019cfc:	45c4      	cmp	ip, r8
 8019cfe:	f280 81ac 	bge.w	801a05a <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8019d02:	b209      	sxth	r1, r1
 8019d04:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8019d06:	fb0c 3301 	mla	r3, ip, r1, r3
 8019d0a:	eb04 0803 	add.w	r8, r4, r3
 8019d0e:	5ce3      	ldrb	r3, [r4, r3]
 8019d10:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8019d14:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8019d18:	2a00      	cmp	r2, #0
 8019d1a:	f000 8193 	beq.w	801a044 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x438>
 8019d1e:	f898 c001 	ldrb.w	ip, [r8, #1]
 8019d22:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8019d26:	940b      	str	r4, [sp, #44]	; 0x2c
 8019d28:	0e24      	lsrs	r4, r4, #24
 8019d2a:	9412      	str	r4, [sp, #72]	; 0x48
 8019d2c:	b178      	cbz	r0, 8019d4e <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x142>
 8019d2e:	eb08 0c01 	add.w	ip, r8, r1
 8019d32:	f818 1001 	ldrb.w	r1, [r8, r1]
 8019d36:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8019d3a:	9108      	str	r1, [sp, #32]
 8019d3c:	0e09      	lsrs	r1, r1, #24
 8019d3e:	9110      	str	r1, [sp, #64]	; 0x40
 8019d40:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8019d44:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8019d48:	910c      	str	r1, [sp, #48]	; 0x30
 8019d4a:	0e09      	lsrs	r1, r1, #24
 8019d4c:	9113      	str	r1, [sp, #76]	; 0x4c
 8019d4e:	b292      	uxth	r2, r2
 8019d50:	9912      	ldr	r1, [sp, #72]	; 0x48
 8019d52:	b280      	uxth	r0, r0
 8019d54:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8019d56:	fb02 f900 	mul.w	r9, r2, r0
 8019d5a:	0112      	lsls	r2, r2, #4
 8019d5c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8019d60:	eba2 0809 	sub.w	r8, r2, r9
 8019d64:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8019d68:	b280      	uxth	r0, r0
 8019d6a:	fa1f f888 	uxth.w	r8, r8
 8019d6e:	1a12      	subs	r2, r2, r0
 8019d70:	fb08 f101 	mul.w	r1, r8, r1
 8019d74:	b292      	uxth	r2, r2
 8019d76:	fb02 110e 	mla	r1, r2, lr, r1
 8019d7a:	fb00 1104 	mla	r1, r0, r4, r1
 8019d7e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019d80:	fb09 1104 	mla	r1, r9, r4, r1
 8019d84:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8019d88:	2900      	cmp	r1, #0
 8019d8a:	f000 80de 	beq.w	8019f4a <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8019d8e:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8019d92:	d01b      	beq.n	8019dcc <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8019d94:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8019d98:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019d9c:	fb0e fa0a 	mul.w	sl, lr, sl
 8019da0:	fb0e fe03 	mul.w	lr, lr, r3
 8019da4:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8019da8:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8019dac:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8019db0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019db4:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8019db8:	4453      	add	r3, sl
 8019dba:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019dbe:	0a1b      	lsrs	r3, r3, #8
 8019dc0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8019dc4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019dc8:	ea43 030c 	orr.w	r3, r3, ip
 8019dcc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019dce:	2cff      	cmp	r4, #255	; 0xff
 8019dd0:	d021      	beq.n	8019e16 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20a>
 8019dd2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8019dd4:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8019dd8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019dda:	fb04 fb0b 	mul.w	fp, r4, fp
 8019dde:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8019de0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8019de4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019de6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019dea:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019dee:	fb04 fa0a 	mul.w	sl, r4, sl
 8019df2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019df6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019dfa:	44de      	add	lr, fp
 8019dfc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019e00:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019e04:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019e08:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019e0c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019e10:	ea4e 040a 	orr.w	r4, lr, sl
 8019e14:	940b      	str	r4, [sp, #44]	; 0x2c
 8019e16:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8019e18:	2cff      	cmp	r4, #255	; 0xff
 8019e1a:	d021      	beq.n	8019e60 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8019e1c:	9c08      	ldr	r4, [sp, #32]
 8019e1e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8019e22:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8019e24:	fb04 fb0b 	mul.w	fp, r4, fp
 8019e28:	9c08      	ldr	r4, [sp, #32]
 8019e2a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8019e2e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8019e30:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019e34:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019e38:	fb04 fa0a 	mul.w	sl, r4, sl
 8019e3c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019e40:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019e44:	44de      	add	lr, fp
 8019e46:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019e4a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019e4e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019e52:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019e56:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019e5a:	ea4e 040a 	orr.w	r4, lr, sl
 8019e5e:	9408      	str	r4, [sp, #32]
 8019e60:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019e62:	2cff      	cmp	r4, #255	; 0xff
 8019e64:	d021      	beq.n	8019eaa <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29e>
 8019e66:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8019e68:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8019e6c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019e6e:	fb04 fb0b 	mul.w	fp, r4, fp
 8019e72:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8019e74:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8019e78:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019e7a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019e7e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019e82:	fb04 fa0a 	mul.w	sl, r4, sl
 8019e86:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019e8a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019e8e:	44de      	add	lr, fp
 8019e90:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019e94:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019e98:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019e9c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019ea0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019ea4:	ea4e 040a 	orr.w	r4, lr, sl
 8019ea8:	940c      	str	r4, [sp, #48]	; 0x30
 8019eaa:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8019eac:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8019eb0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019eb4:	43c9      	mvns	r1, r1
 8019eb6:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8019eba:	9c08      	ldr	r4, [sp, #32]
 8019ebc:	b2c9      	uxtb	r1, r1
 8019ebe:	fb08 fc0c 	mul.w	ip, r8, ip
 8019ec2:	fb02 cc0e 	mla	ip, r2, lr, ip
 8019ec6:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8019eca:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8019ecc:	fb00 cc0e 	mla	ip, r0, lr, ip
 8019ed0:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8019ed4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8019ed6:	fb09 cc0e 	mla	ip, r9, lr, ip
 8019eda:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8019ede:	fb08 f80e 	mul.w	r8, r8, lr
 8019ee2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019ee6:	fb02 8303 	mla	r3, r2, r3, r8
 8019eea:	9a08      	ldr	r2, [sp, #32]
 8019eec:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019ef0:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8019ef4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8019ef6:	fb00 330a 	mla	r3, r0, sl, r3
 8019efa:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8019efe:	fb09 3900 	mla	r9, r9, r0, r3
 8019f02:	783b      	ldrb	r3, [r7, #0]
 8019f04:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8019f08:	fb03 f201 	mul.w	r2, r3, r1
 8019f0c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8019f10:	1c53      	adds	r3, r2, #1
 8019f12:	ea4c 0c09 	orr.w	ip, ip, r9
 8019f16:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8019f1a:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8019f1e:	703b      	strb	r3, [r7, #0]
 8019f20:	787b      	ldrb	r3, [r7, #1]
 8019f22:	434b      	muls	r3, r1
 8019f24:	1c5a      	adds	r2, r3, #1
 8019f26:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8019f2a:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8019f2e:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 8019f32:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8019f36:	707b      	strb	r3, [r7, #1]
 8019f38:	78bb      	ldrb	r3, [r7, #2]
 8019f3a:	4359      	muls	r1, r3
 8019f3c:	1c4b      	adds	r3, r1, #1
 8019f3e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8019f42:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8019f46:	f887 c002 	strb.w	ip, [r7, #2]
 8019f4a:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8019f4c:	3703      	adds	r7, #3
 8019f4e:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8019f50:	441a      	add	r2, r3
 8019f52:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8019f54:	441d      	add	r5, r3
 8019f56:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8019f58:	922f      	str	r2, [sp, #188]	; 0xbc
 8019f5a:	3b01      	subs	r3, #1
 8019f5c:	9317      	str	r3, [sp, #92]	; 0x5c
 8019f5e:	e6b0      	b.n	8019cc2 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8019f60:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8019f62:	9c2f      	ldr	r4, [sp, #188]	; 0xbc
 8019f64:	441c      	add	r4, r3
 8019f66:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8019f68:	441d      	add	r5, r3
 8019f6a:	9b07      	ldr	r3, [sp, #28]
 8019f6c:	942f      	str	r4, [sp, #188]	; 0xbc
 8019f6e:	3b01      	subs	r3, #1
 8019f70:	9307      	str	r3, [sp, #28]
 8019f72:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019f74:	3303      	adds	r3, #3
 8019f76:	930a      	str	r3, [sp, #40]	; 0x28
 8019f78:	e683      	b.n	8019c82 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019f7a:	d026      	beq.n	8019fca <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3be>
 8019f7c:	9b07      	ldr	r3, [sp, #28]
 8019f7e:	9831      	ldr	r0, [sp, #196]	; 0xc4
 8019f80:	3b01      	subs	r3, #1
 8019f82:	9c2f      	ldr	r4, [sp, #188]	; 0xbc
 8019f84:	fb00 4003 	mla	r0, r0, r3, r4
 8019f88:	1400      	asrs	r0, r0, #16
 8019f8a:	f53f ae97 	bmi.w	8019cbc <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8019f8e:	3901      	subs	r1, #1
 8019f90:	4288      	cmp	r0, r1
 8019f92:	f6bf ae93 	bge.w	8019cbc <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8019f96:	9932      	ldr	r1, [sp, #200]	; 0xc8
 8019f98:	fb01 5303 	mla	r3, r1, r3, r5
 8019f9c:	141b      	asrs	r3, r3, #16
 8019f9e:	f53f ae8d 	bmi.w	8019cbc <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8019fa2:	3a01      	subs	r2, #1
 8019fa4:	4293      	cmp	r3, r2
 8019fa6:	f6bf ae89 	bge.w	8019cbc <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8019faa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019fac:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8019fb0:	f103 0e03 	add.w	lr, r3, #3
 8019fb4:	f1bb 0f00 	cmp.w	fp, #0
 8019fb8:	dc6d      	bgt.n	801a096 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48a>
 8019fba:	9b07      	ldr	r3, [sp, #28]
 8019fbc:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8019fc0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019fc2:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8019fc6:	4423      	add	r3, r4
 8019fc8:	930a      	str	r3, [sp, #40]	; 0x28
 8019fca:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8019fcc:	2b00      	cmp	r3, #0
 8019fce:	f340 81a0 	ble.w	801a312 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 8019fd2:	ee3a aa0c 	vadd.f32	s20, s20, s24
 8019fd6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8019fd8:	ee79 9aab 	vadd.f32	s19, s19, s23
 8019fdc:	eef0 6a48 	vmov.f32	s13, s16
 8019fe0:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 8019fe4:	ee39 9a0b 	vadd.f32	s18, s18, s22
 8019fe8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019fec:	edcd 6a2f 	vstr	s13, [sp, #188]	; 0xbc
 8019ff0:	eef0 6a68 	vmov.f32	s13, s17
 8019ff4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019ff8:	ee16 5a90 	vmov	r5, s13
 8019ffc:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801a000:	ee69 7a27 	vmul.f32	s15, s18, s15
 801a004:	ee37 8a48 	vsub.f32	s16, s14, s16
 801a008:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801a00c:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801a010:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801a014:	ee18 2a10 	vmov	r2, s16
 801a018:	eeb0 8a47 	vmov.f32	s16, s14
 801a01c:	fb92 f3f3 	sdiv	r3, r2, r3
 801a020:	ee18 2a90 	vmov	r2, s17
 801a024:	9331      	str	r3, [sp, #196]	; 0xc4
 801a026:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801a028:	eef0 8a67 	vmov.f32	s17, s15
 801a02c:	fb92 f3f3 	sdiv	r3, r2, r3
 801a030:	9332      	str	r3, [sp, #200]	; 0xc8
 801a032:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801a034:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801a036:	3b01      	subs	r3, #1
 801a038:	9316      	str	r3, [sp, #88]	; 0x58
 801a03a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801a03c:	bf08      	it	eq
 801a03e:	4613      	moveq	r3, r2
 801a040:	9307      	str	r3, [sp, #28]
 801a042:	e610      	b.n	8019c66 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801a044:	2800      	cmp	r0, #0
 801a046:	f43f ae82 	beq.w	8019d4e <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x142>
 801a04a:	f818 1001 	ldrb.w	r1, [r8, r1]
 801a04e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801a052:	9108      	str	r1, [sp, #32]
 801a054:	0e09      	lsrs	r1, r1, #24
 801a056:	9110      	str	r1, [sp, #64]	; 0x40
 801a058:	e679      	b.n	8019d4e <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x142>
 801a05a:	f113 0801 	adds.w	r8, r3, #1
 801a05e:	f53f af74 	bmi.w	8019f4a <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a062:	4541      	cmp	r1, r8
 801a064:	f6ff af71 	blt.w	8019f4a <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a068:	f11c 0801 	adds.w	r8, ip, #1
 801a06c:	f53f af6d 	bmi.w	8019f4a <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a070:	45c6      	cmp	lr, r8
 801a072:	f6ff af6a 	blt.w	8019f4a <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a076:	b209      	sxth	r1, r1
 801a078:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801a07c:	fa0f f38e 	sxth.w	r3, lr
 801a080:	9100      	str	r1, [sp, #0]
 801a082:	4639      	mov	r1, r7
 801a084:	9301      	str	r3, [sp, #4]
 801a086:	4633      	mov	r3, r6
 801a088:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801a08c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a08e:	9819      	ldr	r0, [sp, #100]	; 0x64
 801a090:	f7ff fc70 	bl	8019974 <_ZNK8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKmssiihh>
 801a094:	e759      	b.n	8019f4a <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a096:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801a098:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801a09c:	9c2f      	ldr	r4, [sp, #188]	; 0xbc
 801a09e:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801a0a2:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 801a0a4:	1427      	asrs	r7, r4, #16
 801a0a6:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801a0a8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a0ac:	142b      	asrs	r3, r5, #16
 801a0ae:	fb01 7303 	mla	r3, r1, r3, r7
 801a0b2:	18e7      	adds	r7, r4, r3
 801a0b4:	5ce3      	ldrb	r3, [r4, r3]
 801a0b6:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801a0ba:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801a0be:	2a00      	cmp	r2, #0
 801a0c0:	f000 811d 	beq.w	801a2fe <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6f2>
 801a0c4:	f897 8001 	ldrb.w	r8, [r7, #1]
 801a0c8:	f856 4028 	ldr.w	r4, [r6, r8, lsl #2]
 801a0cc:	940d      	str	r4, [sp, #52]	; 0x34
 801a0ce:	0e24      	lsrs	r4, r4, #24
 801a0d0:	9414      	str	r4, [sp, #80]	; 0x50
 801a0d2:	b170      	cbz	r0, 801a0f2 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e6>
 801a0d4:	eb07 0801 	add.w	r8, r7, r1
 801a0d8:	5c79      	ldrb	r1, [r7, r1]
 801a0da:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801a0de:	9109      	str	r1, [sp, #36]	; 0x24
 801a0e0:	0e09      	lsrs	r1, r1, #24
 801a0e2:	9111      	str	r1, [sp, #68]	; 0x44
 801a0e4:	f898 1001 	ldrb.w	r1, [r8, #1]
 801a0e8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801a0ec:	910e      	str	r1, [sp, #56]	; 0x38
 801a0ee:	0e09      	lsrs	r1, r1, #24
 801a0f0:	9115      	str	r1, [sp, #84]	; 0x54
 801a0f2:	b292      	uxth	r2, r2
 801a0f4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801a0f6:	b280      	uxth	r0, r0
 801a0f8:	fb02 f900 	mul.w	r9, r2, r0
 801a0fc:	0112      	lsls	r2, r2, #4
 801a0fe:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801a102:	eba2 0809 	sub.w	r8, r2, r9
 801a106:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801a10a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a10c:	b280      	uxth	r0, r0
 801a10e:	fa1f f888 	uxth.w	r8, r8
 801a112:	1a09      	subs	r1, r1, r0
 801a114:	fb08 f202 	mul.w	r2, r8, r2
 801a118:	b289      	uxth	r1, r1
 801a11a:	fb01 220c 	mla	r2, r1, ip, r2
 801a11e:	fb00 2204 	mla	r2, r0, r4, r2
 801a122:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801a124:	fb09 2204 	mla	r2, r9, r4, r2
 801a128:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801a12c:	2a00      	cmp	r2, #0
 801a12e:	f000 80db 	beq.w	801a2e8 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
 801a132:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801a136:	d019      	beq.n	801a16c <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x560>
 801a138:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801a13c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a140:	fb0c fa0a 	mul.w	sl, ip, sl
 801a144:	fb0c fc03 	mul.w	ip, ip, r3
 801a148:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801a14c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801a150:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801a154:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a158:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801a15c:	4453      	add	r3, sl
 801a15e:	0a3f      	lsrs	r7, r7, #8
 801a160:	0a1b      	lsrs	r3, r3, #8
 801a162:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801a166:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a16a:	433b      	orrs	r3, r7
 801a16c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a16e:	2cff      	cmp	r4, #255	; 0xff
 801a170:	d020      	beq.n	801a1b4 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a8>
 801a172:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801a174:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801a178:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a17a:	4367      	muls	r7, r4
 801a17c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801a17e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a182:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801a186:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a188:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a18c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a190:	fb04 fa0a 	mul.w	sl, r4, sl
 801a194:	44bc      	add	ip, r7
 801a196:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a19a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a19e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a1a2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a1a6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a1aa:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a1ae:	ea4c 040a 	orr.w	r4, ip, sl
 801a1b2:	940d      	str	r4, [sp, #52]	; 0x34
 801a1b4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801a1b6:	2cff      	cmp	r4, #255	; 0xff
 801a1b8:	d020      	beq.n	801a1fc <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5f0>
 801a1ba:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801a1bc:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801a1c0:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801a1c2:	4367      	muls	r7, r4
 801a1c4:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801a1c6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a1ca:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801a1ce:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801a1d0:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a1d4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a1d8:	fb04 fa0a 	mul.w	sl, r4, sl
 801a1dc:	44bc      	add	ip, r7
 801a1de:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a1e2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a1e6:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a1ea:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a1ee:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a1f2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a1f6:	ea4c 040a 	orr.w	r4, ip, sl
 801a1fa:	9409      	str	r4, [sp, #36]	; 0x24
 801a1fc:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801a1fe:	2cff      	cmp	r4, #255	; 0xff
 801a200:	d020      	beq.n	801a244 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x638>
 801a202:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801a204:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801a208:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801a20a:	4367      	muls	r7, r4
 801a20c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801a20e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a212:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801a216:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801a218:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a21c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a220:	fb04 fa0a 	mul.w	sl, r4, sl
 801a224:	44bc      	add	ip, r7
 801a226:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a22a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a22e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a232:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a236:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a23a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a23e:	ea4c 040a 	orr.w	r4, ip, sl
 801a242:	940e      	str	r4, [sp, #56]	; 0x38
 801a244:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801a246:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801a24a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a24e:	43d2      	mvns	r2, r2
 801a250:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801a254:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801a256:	b2d2      	uxtb	r2, r2
 801a258:	fb08 f707 	mul.w	r7, r8, r7
 801a25c:	fb01 770c 	mla	r7, r1, ip, r7
 801a260:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801a264:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801a266:	fb00 770c 	mla	r7, r0, ip, r7
 801a26a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801a26e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801a270:	fb09 770c 	mla	r7, r9, ip, r7
 801a274:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801a278:	fb08 f80c 	mul.w	r8, r8, ip
 801a27c:	0a3f      	lsrs	r7, r7, #8
 801a27e:	fb01 8303 	mla	r3, r1, r3, r8
 801a282:	9909      	ldr	r1, [sp, #36]	; 0x24
 801a284:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801a288:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801a28c:	990e      	ldr	r1, [sp, #56]	; 0x38
 801a28e:	fb00 330a 	mla	r3, r0, sl, r3
 801a292:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801a296:	fb09 3c0c 	mla	ip, r9, ip, r3
 801a29a:	f81e 3c03 	ldrb.w	r3, [lr, #-3]
 801a29e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a2a2:	fb03 f102 	mul.w	r1, r3, r2
 801a2a6:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801a2aa:	1c4b      	adds	r3, r1, #1
 801a2ac:	ea47 070c 	orr.w	r7, r7, ip
 801a2b0:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801a2b4:	eb07 2313 	add.w	r3, r7, r3, lsr #8
 801a2b8:	f80e 3c03 	strb.w	r3, [lr, #-3]
 801a2bc:	f81e 3c02 	ldrb.w	r3, [lr, #-2]
 801a2c0:	4353      	muls	r3, r2
 801a2c2:	1c59      	adds	r1, r3, #1
 801a2c4:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801a2c8:	0a3b      	lsrs	r3, r7, #8
 801a2ca:	0c3f      	lsrs	r7, r7, #16
 801a2cc:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801a2d0:	f80e 3c02 	strb.w	r3, [lr, #-2]
 801a2d4:	f81e 3c01 	ldrb.w	r3, [lr, #-1]
 801a2d8:	435a      	muls	r2, r3
 801a2da:	1c53      	adds	r3, r2, #1
 801a2dc:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801a2e0:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801a2e4:	f80e 7c01 	strb.w	r7, [lr, #-1]
 801a2e8:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801a2ea:	f10e 0e03 	add.w	lr, lr, #3
 801a2ee:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801a2f0:	f10b 3bff 	add.w	fp, fp, #4294967295
 801a2f4:	441a      	add	r2, r3
 801a2f6:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801a2f8:	922f      	str	r2, [sp, #188]	; 0xbc
 801a2fa:	441d      	add	r5, r3
 801a2fc:	e65a      	b.n	8019fb4 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
 801a2fe:	2800      	cmp	r0, #0
 801a300:	f43f aef7 	beq.w	801a0f2 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e6>
 801a304:	5c79      	ldrb	r1, [r7, r1]
 801a306:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801a30a:	9109      	str	r1, [sp, #36]	; 0x24
 801a30c:	0e09      	lsrs	r1, r1, #24
 801a30e:	9111      	str	r1, [sp, #68]	; 0x44
 801a310:	e6ef      	b.n	801a0f2 <_ZN8touchgfx8LCD24bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e6>
 801a312:	b01b      	add	sp, #108	; 0x6c
 801a314:	ecbd 8b0a 	vpop	{d8-d12}
 801a318:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a31c <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh>:
 801a31c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a320:	b08d      	sub	sp, #52	; 0x34
 801a322:	e9dd 5717 	ldrd	r5, r7, [sp, #92]	; 0x5c
 801a326:	9103      	str	r1, [sp, #12]
 801a328:	fb07 5803 	mla	r8, r7, r3, r5
 801a32c:	f89d 106c 	ldrb.w	r1, [sp, #108]	; 0x6c
 801a330:	9803      	ldr	r0, [sp, #12]
 801a332:	2f00      	cmp	r7, #0
 801a334:	910b      	str	r1, [sp, #44]	; 0x2c
 801a336:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801a33a:	9903      	ldr	r1, [sp, #12]
 801a33c:	9c03      	ldr	r4, [sp, #12]
 801a33e:	eb02 0608 	add.w	r6, r2, r8
 801a342:	f9bd e058 	ldrsh.w	lr, [sp, #88]	; 0x58
 801a346:	f89d c064 	ldrb.w	ip, [sp, #100]	; 0x64
 801a34a:	f89d 9068 	ldrb.w	r9, [sp, #104]	; 0x68
 801a34e:	7809      	ldrb	r1, [r1, #0]
 801a350:	7840      	ldrb	r0, [r0, #1]
 801a352:	78a4      	ldrb	r4, [r4, #2]
 801a354:	db51      	blt.n	801a3fa <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0xde>
 801a356:	45be      	cmp	lr, r7
 801a358:	dd4f      	ble.n	801a3fa <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0xde>
 801a35a:	2d00      	cmp	r5, #0
 801a35c:	db49      	blt.n	801a3f2 <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0xd6>
 801a35e:	42ab      	cmp	r3, r5
 801a360:	dd47      	ble.n	801a3f2 <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0xd6>
 801a362:	f812 2008 	ldrb.w	r2, [r2, r8]
 801a366:	9204      	str	r2, [sp, #16]
 801a368:	7872      	ldrb	r2, [r6, #1]
 801a36a:	9205      	str	r2, [sp, #20]
 801a36c:	78b2      	ldrb	r2, [r6, #2]
 801a36e:	9206      	str	r2, [sp, #24]
 801a370:	1c6a      	adds	r2, r5, #1
 801a372:	d449      	bmi.n	801a408 <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0xec>
 801a374:	4293      	cmp	r3, r2
 801a376:	dd47      	ble.n	801a408 <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0xec>
 801a378:	f1bc 0f00 	cmp.w	ip, #0
 801a37c:	d044      	beq.n	801a408 <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0xec>
 801a37e:	7972      	ldrb	r2, [r6, #5]
 801a380:	f896 b003 	ldrb.w	fp, [r6, #3]
 801a384:	f896 a004 	ldrb.w	sl, [r6, #4]
 801a388:	9201      	str	r2, [sp, #4]
 801a38a:	3701      	adds	r7, #1
 801a38c:	d444      	bmi.n	801a418 <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0xfc>
 801a38e:	45be      	cmp	lr, r7
 801a390:	dd42      	ble.n	801a418 <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0xfc>
 801a392:	f1b9 0f00 	cmp.w	r9, #0
 801a396:	f000 80c1 	beq.w	801a51c <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x200>
 801a39a:	2d00      	cmp	r5, #0
 801a39c:	db38      	blt.n	801a410 <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0xf4>
 801a39e:	42ab      	cmp	r3, r5
 801a3a0:	dd36      	ble.n	801a410 <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0xf4>
 801a3a2:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 801a3a6:	f816 8002 	ldrb.w	r8, [r6, r2]
 801a3aa:	2203      	movs	r2, #3
 801a3ac:	fb03 6702 	mla	r7, r3, r2, r6
 801a3b0:	fb03 6202 	mla	r2, r3, r2, r6
 801a3b4:	787f      	ldrb	r7, [r7, #1]
 801a3b6:	f892 e002 	ldrb.w	lr, [r2, #2]
 801a3ba:	9702      	str	r7, [sp, #8]
 801a3bc:	3501      	adds	r5, #1
 801a3be:	d432      	bmi.n	801a426 <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x10a>
 801a3c0:	42ab      	cmp	r3, r5
 801a3c2:	dd30      	ble.n	801a426 <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x10a>
 801a3c4:	f1bc 0f00 	cmp.w	ip, #0
 801a3c8:	d031      	beq.n	801a42e <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x112>
 801a3ca:	2703      	movs	r7, #3
 801a3cc:	fb13 7207 	smlabb	r2, r3, r7, r7
 801a3d0:	5cb5      	ldrb	r5, [r6, r2]
 801a3d2:	fb03 6207 	mla	r2, r3, r7, r6
 801a3d6:	fb03 6307 	mla	r3, r3, r7, r6
 801a3da:	7912      	ldrb	r2, [r2, #4]
 801a3dc:	795e      	ldrb	r6, [r3, #5]
 801a3de:	f1bc 0f0f 	cmp.w	ip, #15
 801a3e2:	d927      	bls.n	801a434 <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x118>
 801a3e4:	4b53      	ldr	r3, [pc, #332]	; (801a534 <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x218>)
 801a3e6:	f240 115b 	movw	r1, #347	; 0x15b
 801a3ea:	4a53      	ldr	r2, [pc, #332]	; (801a538 <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x21c>)
 801a3ec:	4853      	ldr	r0, [pc, #332]	; (801a53c <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x220>)
 801a3ee:	f005 fbf3 	bl	801fbd8 <__assert_func>
 801a3f2:	e9cd 0405 	strd	r0, r4, [sp, #20]
 801a3f6:	9104      	str	r1, [sp, #16]
 801a3f8:	e7ba      	b.n	801a370 <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x54>
 801a3fa:	9401      	str	r4, [sp, #4]
 801a3fc:	4682      	mov	sl, r0
 801a3fe:	468b      	mov	fp, r1
 801a400:	9104      	str	r1, [sp, #16]
 801a402:	e9cd 0405 	strd	r0, r4, [sp, #20]
 801a406:	e7c0      	b.n	801a38a <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x6e>
 801a408:	9401      	str	r4, [sp, #4]
 801a40a:	4682      	mov	sl, r0
 801a40c:	468b      	mov	fp, r1
 801a40e:	e7bc      	b.n	801a38a <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x6e>
 801a410:	46a6      	mov	lr, r4
 801a412:	9002      	str	r0, [sp, #8]
 801a414:	4688      	mov	r8, r1
 801a416:	e7d1      	b.n	801a3bc <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0xa0>
 801a418:	4626      	mov	r6, r4
 801a41a:	4602      	mov	r2, r0
 801a41c:	460d      	mov	r5, r1
 801a41e:	46a6      	mov	lr, r4
 801a420:	9002      	str	r0, [sp, #8]
 801a422:	4688      	mov	r8, r1
 801a424:	e7db      	b.n	801a3de <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0xc2>
 801a426:	4626      	mov	r6, r4
 801a428:	4602      	mov	r2, r0
 801a42a:	460d      	mov	r5, r1
 801a42c:	e7d7      	b.n	801a3de <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0xc2>
 801a42e:	4626      	mov	r6, r4
 801a430:	4602      	mov	r2, r0
 801a432:	460d      	mov	r5, r1
 801a434:	f1b9 0f0f 	cmp.w	r9, #15
 801a438:	d8d4      	bhi.n	801a3e4 <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0xc8>
 801a43a:	fa1f f38c 	uxth.w	r3, ip
 801a43e:	fa1f fc89 	uxth.w	ip, r9
 801a442:	fb03 f70c 	mul.w	r7, r3, ip
 801a446:	011b      	lsls	r3, r3, #4
 801a448:	ebc7 1c0c 	rsb	ip, r7, ip, lsl #4
 801a44c:	9707      	str	r7, [sp, #28]
 801a44e:	f5c3 7780 	rsb	r7, r3, #256	; 0x100
 801a452:	fa1f fc8c 	uxth.w	ip, ip
 801a456:	eba7 070c 	sub.w	r7, r7, ip
 801a45a:	b2bf      	uxth	r7, r7
 801a45c:	9709      	str	r7, [sp, #36]	; 0x24
 801a45e:	9f07      	ldr	r7, [sp, #28]
 801a460:	1bdb      	subs	r3, r3, r7
 801a462:	f8bd 702c 	ldrh.w	r7, [sp, #44]	; 0x2c
 801a466:	b29b      	uxth	r3, r3
 801a468:	9708      	str	r7, [sp, #32]
 801a46a:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801a46c:	930a      	str	r3, [sp, #40]	; 0x28
 801a46e:	ea6f 0907 	mvn.w	r9, r7
 801a472:	fb03 fb0b 	mul.w	fp, r3, fp
 801a476:	9f04      	ldr	r7, [sp, #16]
 801a478:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a47a:	fa5f f989 	uxtb.w	r9, r9
 801a47e:	fb03 bb07 	mla	fp, r3, r7, fp
 801a482:	9f07      	ldr	r7, [sp, #28]
 801a484:	fb11 f109 	smulbb	r1, r1, r9
 801a488:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a48a:	fb0c b808 	mla	r8, ip, r8, fp
 801a48e:	fb10 f009 	smulbb	r0, r0, r9
 801a492:	fb14 f409 	smulbb	r4, r4, r9
 801a496:	fb07 8805 	mla	r8, r7, r5, r8
 801a49a:	9d08      	ldr	r5, [sp, #32]
 801a49c:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801a49e:	f3c8 2807 	ubfx	r8, r8, #8, #8
 801a4a2:	fb08 1805 	mla	r8, r8, r5, r1
 801a4a6:	9d05      	ldr	r5, [sp, #20]
 801a4a8:	fa1f f888 	uxth.w	r8, r8
 801a4ac:	f108 0101 	add.w	r1, r8, #1
 801a4b0:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801a4b4:	9903      	ldr	r1, [sp, #12]
 801a4b6:	ea4f 2828 	mov.w	r8, r8, asr #8
 801a4ba:	f881 8000 	strb.w	r8, [r1]
 801a4be:	fb03 f10a 	mul.w	r1, r3, sl
 801a4c2:	fb07 1105 	mla	r1, r7, r5, r1
 801a4c6:	9d02      	ldr	r5, [sp, #8]
 801a4c8:	fb0c 1105 	mla	r1, ip, r5, r1
 801a4cc:	9d07      	ldr	r5, [sp, #28]
 801a4ce:	fb05 1102 	mla	r1, r5, r2, r1
 801a4d2:	9a08      	ldr	r2, [sp, #32]
 801a4d4:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801a4d8:	fb01 0102 	mla	r1, r1, r2, r0
 801a4dc:	9a03      	ldr	r2, [sp, #12]
 801a4de:	b289      	uxth	r1, r1
 801a4e0:	1c48      	adds	r0, r1, #1
 801a4e2:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 801a4e6:	1209      	asrs	r1, r1, #8
 801a4e8:	7051      	strb	r1, [r2, #1]
 801a4ea:	9a01      	ldr	r2, [sp, #4]
 801a4ec:	4353      	muls	r3, r2
 801a4ee:	9a06      	ldr	r2, [sp, #24]
 801a4f0:	fb07 3702 	mla	r7, r7, r2, r3
 801a4f4:	9b08      	ldr	r3, [sp, #32]
 801a4f6:	fb0c 7c0e 	mla	ip, ip, lr, r7
 801a4fa:	fb05 c606 	mla	r6, r5, r6, ip
 801a4fe:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801a502:	fb06 4603 	mla	r6, r6, r3, r4
 801a506:	9b03      	ldr	r3, [sp, #12]
 801a508:	b2b6      	uxth	r6, r6
 801a50a:	f106 0e01 	add.w	lr, r6, #1
 801a50e:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801a512:	1236      	asrs	r6, r6, #8
 801a514:	709e      	strb	r6, [r3, #2]
 801a516:	b00d      	add	sp, #52	; 0x34
 801a518:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a51c:	f1bc 0f0f 	cmp.w	ip, #15
 801a520:	f63f af60 	bhi.w	801a3e4 <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0xc8>
 801a524:	4626      	mov	r6, r4
 801a526:	4602      	mov	r2, r0
 801a528:	460d      	mov	r5, r1
 801a52a:	46a6      	mov	lr, r4
 801a52c:	9002      	str	r0, [sp, #8]
 801a52e:	4688      	mov	r8, r1
 801a530:	e783      	b.n	801a43a <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh+0x11e>
 801a532:	bf00      	nop
 801a534:	08024e84 	.word	0x08024e84
 801a538:	0802529a 	.word	0x0802529a
 801a53c:	08024e51 	.word	0x08024e51

0801a540 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a540:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a544:	ed2d 8b08 	vpush	{d8-d11}
 801a548:	b09f      	sub	sp, #124	; 0x7c
 801a54a:	eeb0 aa40 	vmov.f32	s20, s0
 801a54e:	eef0 9a60 	vmov.f32	s19, s1
 801a552:	920e      	str	r2, [sp, #56]	; 0x38
 801a554:	eeb0 9a41 	vmov.f32	s18, s2
 801a558:	9a35      	ldr	r2, [sp, #212]	; 0xd4
 801a55a:	eeb0 8a62 	vmov.f32	s16, s5
 801a55e:	9307      	str	r3, [sp, #28]
 801a560:	eef0 8a43 	vmov.f32	s17, s6
 801a564:	f89d 30e4 	ldrb.w	r3, [sp, #228]	; 0xe4
 801a568:	eef0 ba44 	vmov.f32	s23, s8
 801a56c:	901d      	str	r0, [sp, #116]	; 0x74
 801a56e:	eeb0 ba64 	vmov.f32	s22, s9
 801a572:	930c      	str	r3, [sp, #48]	; 0x30
 801a574:	eef0 aa45 	vmov.f32	s21, s10
 801a578:	6850      	ldr	r0, [r2, #4]
 801a57a:	910b      	str	r1, [sp, #44]	; 0x2c
 801a57c:	6812      	ldr	r2, [r2, #0]
 801a57e:	e9dd 1336 	ldrd	r1, r3, [sp, #216]	; 0xd8
 801a582:	e9dd a831 	ldrd	sl, r8, [sp, #196]	; 0xc4
 801a586:	fb00 1303 	mla	r3, r0, r3, r1
 801a58a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801a58e:	18d3      	adds	r3, r2, r3
 801a590:	9308      	str	r3, [sp, #32]
 801a592:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 801a594:	681b      	ldr	r3, [r3, #0]
 801a596:	930a      	str	r3, [sp, #40]	; 0x28
 801a598:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a59a:	43db      	mvns	r3, r3
 801a59c:	b2db      	uxtb	r3, r3
 801a59e:	9309      	str	r3, [sp, #36]	; 0x24
 801a5a0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a5a2:	2b00      	cmp	r3, #0
 801a5a4:	dc03      	bgt.n	801a5ae <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a5a6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a5a8:	2b00      	cmp	r3, #0
 801a5aa:	f340 81f5 	ble.w	801a998 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x458>
 801a5ae:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 801a5b0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a5b4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a5b8:	1e48      	subs	r0, r1, #1
 801a5ba:	1e54      	subs	r4, r2, #1
 801a5bc:	9b07      	ldr	r3, [sp, #28]
 801a5be:	2b00      	cmp	r3, #0
 801a5c0:	f340 80d5 	ble.w	801a76e <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801a5c4:	ea5f 452a 	movs.w	r5, sl, asr #16
 801a5c8:	ea4f 4328 	mov.w	r3, r8, asr #16
 801a5cc:	d406      	bmi.n	801a5dc <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801a5ce:	4285      	cmp	r5, r0
 801a5d0:	da04      	bge.n	801a5dc <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801a5d2:	2b00      	cmp	r3, #0
 801a5d4:	db02      	blt.n	801a5dc <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801a5d6:	42a3      	cmp	r3, r4
 801a5d8:	f2c0 80ca 	blt.w	801a770 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801a5dc:	3501      	adds	r5, #1
 801a5de:	f100 80bb 	bmi.w	801a758 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801a5e2:	42a9      	cmp	r1, r5
 801a5e4:	f2c0 80b8 	blt.w	801a758 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801a5e8:	3301      	adds	r3, #1
 801a5ea:	f100 80b5 	bmi.w	801a758 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801a5ee:	429a      	cmp	r2, r3
 801a5f0:	f2c0 80b2 	blt.w	801a758 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801a5f4:	9b07      	ldr	r3, [sp, #28]
 801a5f6:	9d08      	ldr	r5, [sp, #32]
 801a5f8:	930d      	str	r3, [sp, #52]	; 0x34
 801a5fa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a5fc:	2b00      	cmp	r3, #0
 801a5fe:	f340 80d6 	ble.w	801a7ae <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26e>
 801a602:	9838      	ldr	r0, [sp, #224]	; 0xe0
 801a604:	ea4f 4428 	mov.w	r4, r8, asr #16
 801a608:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 801a60a:	f3ca 3203 	ubfx	r2, sl, #12, #4
 801a60e:	68c6      	ldr	r6, [r0, #12]
 801a610:	ea5f 402a 	movs.w	r0, sl, asr #16
 801a614:	f3c8 3103 	ubfx	r1, r8, #12, #4
 801a618:	689b      	ldr	r3, [r3, #8]
 801a61a:	f100 810f 	bmi.w	801a83c <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 801a61e:	1e5f      	subs	r7, r3, #1
 801a620:	42b8      	cmp	r0, r7
 801a622:	f280 810b 	bge.w	801a83c <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 801a626:	2c00      	cmp	r4, #0
 801a628:	f2c0 8108 	blt.w	801a83c <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 801a62c:	1e77      	subs	r7, r6, #1
 801a62e:	42bc      	cmp	r4, r7
 801a630:	f280 8104 	bge.w	801a83c <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 801a634:	b21b      	sxth	r3, r3
 801a636:	fb04 0003 	mla	r0, r4, r3, r0
 801a63a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801a63c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a640:	1826      	adds	r6, r4, r0
 801a642:	5c24      	ldrb	r4, [r4, r0]
 801a644:	78b7      	ldrb	r7, [r6, #2]
 801a646:	7870      	ldrb	r0, [r6, #1]
 801a648:	970f      	str	r7, [sp, #60]	; 0x3c
 801a64a:	7977      	ldrb	r7, [r6, #5]
 801a64c:	f896 e003 	ldrb.w	lr, [r6, #3]
 801a650:	f896 c004 	ldrb.w	ip, [r6, #4]
 801a654:	9710      	str	r7, [sp, #64]	; 0x40
 801a656:	b1c9      	cbz	r1, 801a68c <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801a658:	f04f 0b03 	mov.w	fp, #3
 801a65c:	f06f 0904 	mvn.w	r9, #4
 801a660:	3605      	adds	r6, #5
 801a662:	fb13 930b 	smlabb	r3, r3, fp, r9
 801a666:	eb06 0b03 	add.w	fp, r6, r3
 801a66a:	5cf3      	ldrb	r3, [r6, r3]
 801a66c:	9311      	str	r3, [sp, #68]	; 0x44
 801a66e:	f89b 3001 	ldrb.w	r3, [fp, #1]
 801a672:	9313      	str	r3, [sp, #76]	; 0x4c
 801a674:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801a678:	9315      	str	r3, [sp, #84]	; 0x54
 801a67a:	f89b 3003 	ldrb.w	r3, [fp, #3]
 801a67e:	9312      	str	r3, [sp, #72]	; 0x48
 801a680:	f89b 3004 	ldrb.w	r3, [fp, #4]
 801a684:	9314      	str	r3, [sp, #80]	; 0x50
 801a686:	f89b 3005 	ldrb.w	r3, [fp, #5]
 801a68a:	9316      	str	r3, [sp, #88]	; 0x58
 801a68c:	b292      	uxth	r2, r2
 801a68e:	9f11      	ldr	r7, [sp, #68]	; 0x44
 801a690:	b289      	uxth	r1, r1
 801a692:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 801a696:	fb02 f601 	mul.w	r6, r2, r1
 801a69a:	0112      	lsls	r2, r2, #4
 801a69c:	ebc6 1101 	rsb	r1, r6, r1, lsl #4
 801a6a0:	f5c2 7980 	rsb	r9, r2, #256	; 0x100
 801a6a4:	1b92      	subs	r2, r2, r6
 801a6a6:	b289      	uxth	r1, r1
 801a6a8:	b292      	uxth	r2, r2
 801a6aa:	eba9 0901 	sub.w	r9, r9, r1
 801a6ae:	fb02 fe0e 	mul.w	lr, r2, lr
 801a6b2:	fa1f f989 	uxth.w	r9, r9
 801a6b6:	fb02 fc0c 	mul.w	ip, r2, ip
 801a6ba:	fb09 e404 	mla	r4, r9, r4, lr
 801a6be:	f895 e000 	ldrb.w	lr, [r5]
 801a6c2:	fb09 c000 	mla	r0, r9, r0, ip
 801a6c6:	fb01 4407 	mla	r4, r1, r7, r4
 801a6ca:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801a6cc:	fb06 4407 	mla	r4, r6, r7, r4
 801a6d0:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801a6d2:	fb1e fe07 	smulbb	lr, lr, r7
 801a6d6:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801a6da:	fb04 e403 	mla	r4, r4, r3, lr
 801a6de:	b2a4      	uxth	r4, r4
 801a6e0:	f104 0e01 	add.w	lr, r4, #1
 801a6e4:	eb0e 2e14 	add.w	lr, lr, r4, lsr #8
 801a6e8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a6ea:	fb01 0004 	mla	r0, r1, r4, r0
 801a6ee:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a6f0:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 801a6f4:	fb06 0004 	mla	r0, r6, r4, r0
 801a6f8:	786c      	ldrb	r4, [r5, #1]
 801a6fa:	f885 e000 	strb.w	lr, [r5]
 801a6fe:	fb14 f407 	smulbb	r4, r4, r7
 801a702:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801a706:	fb00 4003 	mla	r0, r0, r3, r4
 801a70a:	b280      	uxth	r0, r0
 801a70c:	1c44      	adds	r4, r0, #1
 801a70e:	eb04 2010 	add.w	r0, r4, r0, lsr #8
 801a712:	1200      	asrs	r0, r0, #8
 801a714:	7068      	strb	r0, [r5, #1]
 801a716:	9810      	ldr	r0, [sp, #64]	; 0x40
 801a718:	4342      	muls	r2, r0
 801a71a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801a71c:	fb09 2200 	mla	r2, r9, r0, r2
 801a720:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a722:	fb01 2100 	mla	r1, r1, r0, r2
 801a726:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801a728:	fb06 1602 	mla	r6, r6, r2, r1
 801a72c:	78a9      	ldrb	r1, [r5, #2]
 801a72e:	fb11 f107 	smulbb	r1, r1, r7
 801a732:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801a736:	fb06 1303 	mla	r3, r6, r3, r1
 801a73a:	b29b      	uxth	r3, r3
 801a73c:	1c5e      	adds	r6, r3, #1
 801a73e:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 801a742:	121b      	asrs	r3, r3, #8
 801a744:	70ab      	strb	r3, [r5, #2]
 801a746:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 801a748:	3503      	adds	r5, #3
 801a74a:	449a      	add	sl, r3
 801a74c:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801a74e:	4498      	add	r8, r3
 801a750:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a752:	3b01      	subs	r3, #1
 801a754:	930d      	str	r3, [sp, #52]	; 0x34
 801a756:	e750      	b.n	801a5fa <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 801a758:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 801a75a:	449a      	add	sl, r3
 801a75c:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801a75e:	4498      	add	r8, r3
 801a760:	9b07      	ldr	r3, [sp, #28]
 801a762:	3b01      	subs	r3, #1
 801a764:	9307      	str	r3, [sp, #28]
 801a766:	9b08      	ldr	r3, [sp, #32]
 801a768:	3303      	adds	r3, #3
 801a76a:	9308      	str	r3, [sp, #32]
 801a76c:	e726      	b.n	801a5bc <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a76e:	d026      	beq.n	801a7be <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 801a770:	9b07      	ldr	r3, [sp, #28]
 801a772:	9833      	ldr	r0, [sp, #204]	; 0xcc
 801a774:	3b01      	subs	r3, #1
 801a776:	fb00 a003 	mla	r0, r0, r3, sl
 801a77a:	1400      	asrs	r0, r0, #16
 801a77c:	f53f af3a 	bmi.w	801a5f4 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801a780:	3901      	subs	r1, #1
 801a782:	4288      	cmp	r0, r1
 801a784:	f6bf af36 	bge.w	801a5f4 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801a788:	9934      	ldr	r1, [sp, #208]	; 0xd0
 801a78a:	fb01 8303 	mla	r3, r1, r3, r8
 801a78e:	141b      	asrs	r3, r3, #16
 801a790:	f53f af30 	bmi.w	801a5f4 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801a794:	3a01      	subs	r2, #1
 801a796:	4293      	cmp	r3, r2
 801a798:	f6bf af2c 	bge.w	801a5f4 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801a79c:	9b08      	ldr	r3, [sp, #32]
 801a79e:	f8dd c01c 	ldr.w	ip, [sp, #28]
 801a7a2:	1cdd      	adds	r5, r3, #3
 801a7a4:	f8bd e030 	ldrh.w	lr, [sp, #48]	; 0x30
 801a7a8:	f1bc 0f00 	cmp.w	ip, #0
 801a7ac:	dc5f      	bgt.n	801a86e <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801a7ae:	9b07      	ldr	r3, [sp, #28]
 801a7b0:	9a08      	ldr	r2, [sp, #32]
 801a7b2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a7b6:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801a7ba:	441a      	add	r2, r3
 801a7bc:	9208      	str	r2, [sp, #32]
 801a7be:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a7c0:	2b00      	cmp	r3, #0
 801a7c2:	f340 80e9 	ble.w	801a998 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x458>
 801a7c6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a7ca:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a7cc:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801a7d0:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801a7d4:	eef0 6a48 	vmov.f32	s13, s16
 801a7d8:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801a7dc:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801a7e0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a7e4:	ee16 aa90 	vmov	sl, s13
 801a7e8:	eef0 6a68 	vmov.f32	s13, s17
 801a7ec:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a7f0:	ee16 8a90 	vmov	r8, s13
 801a7f4:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801a7f8:	ee69 7a27 	vmul.f32	s15, s18, s15
 801a7fc:	ee37 8a48 	vsub.f32	s16, s14, s16
 801a800:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801a804:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801a808:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801a80c:	ee18 2a10 	vmov	r2, s16
 801a810:	eeb0 8a47 	vmov.f32	s16, s14
 801a814:	fb92 f3f3 	sdiv	r3, r2, r3
 801a818:	ee18 2a90 	vmov	r2, s17
 801a81c:	9333      	str	r3, [sp, #204]	; 0xcc
 801a81e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a820:	eef0 8a67 	vmov.f32	s17, s15
 801a824:	fb92 f3f3 	sdiv	r3, r2, r3
 801a828:	9334      	str	r3, [sp, #208]	; 0xd0
 801a82a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a82c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801a82e:	3b01      	subs	r3, #1
 801a830:	930b      	str	r3, [sp, #44]	; 0x2c
 801a832:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a834:	bf08      	it	eq
 801a836:	4613      	moveq	r3, r2
 801a838:	9307      	str	r3, [sp, #28]
 801a83a:	e6b1      	b.n	801a5a0 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a83c:	1c47      	adds	r7, r0, #1
 801a83e:	d482      	bmi.n	801a746 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 801a840:	42bb      	cmp	r3, r7
 801a842:	db80      	blt.n	801a746 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 801a844:	1c67      	adds	r7, r4, #1
 801a846:	f53f af7e 	bmi.w	801a746 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 801a84a:	42be      	cmp	r6, r7
 801a84c:	f6ff af7b 	blt.w	801a746 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 801a850:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801a852:	b236      	sxth	r6, r6
 801a854:	9001      	str	r0, [sp, #4]
 801a856:	b21b      	sxth	r3, r3
 801a858:	9600      	str	r6, [sp, #0]
 801a85a:	981d      	ldr	r0, [sp, #116]	; 0x74
 801a85c:	e9cd 1704 	strd	r1, r7, [sp, #16]
 801a860:	e9cd 4202 	strd	r4, r2, [sp, #8]
 801a864:	4629      	mov	r1, r5
 801a866:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801a868:	f7ff fd58 	bl	801a31c <_ZNK8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhssiihhh>
 801a86c:	e76b      	b.n	801a746 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 801a86e:	9938      	ldr	r1, [sp, #224]	; 0xe0
 801a870:	ea4f 402a 	mov.w	r0, sl, asr #16
 801a874:	f3c8 3203 	ubfx	r2, r8, #12, #4
 801a878:	f3ca 3303 	ubfx	r3, sl, #12, #4
 801a87c:	f9b1 7008 	ldrsh.w	r7, [r1, #8]
 801a880:	ea4f 4128 	mov.w	r1, r8, asr #16
 801a884:	fb07 0101 	mla	r1, r7, r1, r0
 801a888:	980a      	ldr	r0, [sp, #40]	; 0x28
 801a88a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801a88e:	1844      	adds	r4, r0, r1
 801a890:	5c40      	ldrb	r0, [r0, r1]
 801a892:	78a6      	ldrb	r6, [r4, #2]
 801a894:	7861      	ldrb	r1, [r4, #1]
 801a896:	960f      	str	r6, [sp, #60]	; 0x3c
 801a898:	78e6      	ldrb	r6, [r4, #3]
 801a89a:	910d      	str	r1, [sp, #52]	; 0x34
 801a89c:	9610      	str	r6, [sp, #64]	; 0x40
 801a89e:	f894 9004 	ldrb.w	r9, [r4, #4]
 801a8a2:	f894 b005 	ldrb.w	fp, [r4, #5]
 801a8a6:	b192      	cbz	r2, 801a8ce <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38e>
 801a8a8:	f06f 0604 	mvn.w	r6, #4
 801a8ac:	2103      	movs	r1, #3
 801a8ae:	3405      	adds	r4, #5
 801a8b0:	fb17 6701 	smlabb	r7, r7, r1, r6
 801a8b4:	19e6      	adds	r6, r4, r7
 801a8b6:	5de4      	ldrb	r4, [r4, r7]
 801a8b8:	9417      	str	r4, [sp, #92]	; 0x5c
 801a8ba:	7874      	ldrb	r4, [r6, #1]
 801a8bc:	9419      	str	r4, [sp, #100]	; 0x64
 801a8be:	78b4      	ldrb	r4, [r6, #2]
 801a8c0:	941b      	str	r4, [sp, #108]	; 0x6c
 801a8c2:	78f4      	ldrb	r4, [r6, #3]
 801a8c4:	9418      	str	r4, [sp, #96]	; 0x60
 801a8c6:	7934      	ldrb	r4, [r6, #4]
 801a8c8:	941a      	str	r4, [sp, #104]	; 0x68
 801a8ca:	7974      	ldrb	r4, [r6, #5]
 801a8cc:	941c      	str	r4, [sp, #112]	; 0x70
 801a8ce:	b29b      	uxth	r3, r3
 801a8d0:	9f10      	ldr	r7, [sp, #64]	; 0x40
 801a8d2:	b292      	uxth	r2, r2
 801a8d4:	9909      	ldr	r1, [sp, #36]	; 0x24
 801a8d6:	3503      	adds	r5, #3
 801a8d8:	f10c 3cff 	add.w	ip, ip, #4294967295
 801a8dc:	fb03 f402 	mul.w	r4, r3, r2
 801a8e0:	011b      	lsls	r3, r3, #4
 801a8e2:	ebc4 1202 	rsb	r2, r4, r2, lsl #4
 801a8e6:	f5c3 7680 	rsb	r6, r3, #256	; 0x100
 801a8ea:	1b1b      	subs	r3, r3, r4
 801a8ec:	b292      	uxth	r2, r2
 801a8ee:	b29b      	uxth	r3, r3
 801a8f0:	1ab6      	subs	r6, r6, r2
 801a8f2:	435f      	muls	r7, r3
 801a8f4:	b2b6      	uxth	r6, r6
 801a8f6:	fb03 f909 	mul.w	r9, r3, r9
 801a8fa:	fb03 fb0b 	mul.w	fp, r3, fp
 801a8fe:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801a900:	fb06 7000 	mla	r0, r6, r0, r7
 801a904:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 801a906:	fb06 bb03 	mla	fp, r6, r3, fp
 801a90a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801a90c:	fb02 0007 	mla	r0, r2, r7, r0
 801a910:	9f18      	ldr	r7, [sp, #96]	; 0x60
 801a912:	fb02 bb03 	mla	fp, r2, r3, fp
 801a916:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a918:	fb04 0007 	mla	r0, r4, r7, r0
 801a91c:	f815 7c06 	ldrb.w	r7, [r5, #-6]
 801a920:	fb17 f701 	smulbb	r7, r7, r1
 801a924:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801a928:	990d      	ldr	r1, [sp, #52]	; 0x34
 801a92a:	fb00 700e 	mla	r0, r0, lr, r7
 801a92e:	fb06 9101 	mla	r1, r6, r1, r9
 801a932:	b280      	uxth	r0, r0
 801a934:	1c47      	adds	r7, r0, #1
 801a936:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 801a93a:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801a93c:	1200      	asrs	r0, r0, #8
 801a93e:	f805 0c06 	strb.w	r0, [r5, #-6]
 801a942:	9819      	ldr	r0, [sp, #100]	; 0x64
 801a944:	fb02 1100 	mla	r1, r2, r0, r1
 801a948:	981a      	ldr	r0, [sp, #104]	; 0x68
 801a94a:	fb04 1100 	mla	r1, r4, r0, r1
 801a94e:	f815 0c05 	ldrb.w	r0, [r5, #-5]
 801a952:	fb04 b403 	mla	r4, r4, r3, fp
 801a956:	f815 3c04 	ldrb.w	r3, [r5, #-4]
 801a95a:	fb10 f007 	smulbb	r0, r0, r7
 801a95e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801a962:	fb13 f307 	smulbb	r3, r3, r7
 801a966:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801a96a:	fb01 010e 	mla	r1, r1, lr, r0
 801a96e:	fb04 340e 	mla	r4, r4, lr, r3
 801a972:	b289      	uxth	r1, r1
 801a974:	b2a4      	uxth	r4, r4
 801a976:	1c48      	adds	r0, r1, #1
 801a978:	1c63      	adds	r3, r4, #1
 801a97a:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 801a97e:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801a982:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 801a984:	1209      	asrs	r1, r1, #8
 801a986:	1224      	asrs	r4, r4, #8
 801a988:	449a      	add	sl, r3
 801a98a:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801a98c:	f805 1c05 	strb.w	r1, [r5, #-5]
 801a990:	f805 4c04 	strb.w	r4, [r5, #-4]
 801a994:	4498      	add	r8, r3
 801a996:	e707      	b.n	801a7a8 <_ZN8touchgfx8LCD24bpp52TextureMapper_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801a998:	b01f      	add	sp, #124	; 0x7c
 801a99a:	ecbd 8b08 	vpop	{d8-d11}
 801a99e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801a9a4 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh>:
 801a9a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a9a8:	b085      	sub	sp, #20
 801a9aa:	784d      	ldrb	r5, [r1, #1]
 801a9ac:	788e      	ldrb	r6, [r1, #2]
 801a9ae:	f89d 4048 	ldrb.w	r4, [sp, #72]	; 0x48
 801a9b2:	f9bd 9038 	ldrsh.w	r9, [sp, #56]	; 0x38
 801a9b6:	9403      	str	r4, [sp, #12]
 801a9b8:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
 801a9bc:	780c      	ldrb	r4, [r1, #0]
 801a9be:	e9dd c70f 	ldrd	ip, r7, [sp, #60]	; 0x3c
 801a9c2:	fb07 ce03 	mla	lr, r7, r3, ip
 801a9c6:	2f00      	cmp	r7, #0
 801a9c8:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801a9cc:	eb02 0b0e 	add.w	fp, r2, lr
 801a9d0:	db56      	blt.n	801aa80 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0xdc>
 801a9d2:	45b9      	cmp	r9, r7
 801a9d4:	dd54      	ble.n	801aa80 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0xdc>
 801a9d6:	f1bc 0f00 	cmp.w	ip, #0
 801a9da:	db4d      	blt.n	801aa78 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0xd4>
 801a9dc:	4563      	cmp	r3, ip
 801a9de:	dd4b      	ble.n	801aa78 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0xd4>
 801a9e0:	f812 200e 	ldrb.w	r2, [r2, lr]
 801a9e4:	9200      	str	r2, [sp, #0]
 801a9e6:	f89b 2001 	ldrb.w	r2, [fp, #1]
 801a9ea:	9201      	str	r2, [sp, #4]
 801a9ec:	f89b 2002 	ldrb.w	r2, [fp, #2]
 801a9f0:	9202      	str	r2, [sp, #8]
 801a9f2:	f11c 0201 	adds.w	r2, ip, #1
 801a9f6:	d44a      	bmi.n	801aa8e <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0xea>
 801a9f8:	4293      	cmp	r3, r2
 801a9fa:	dd48      	ble.n	801aa8e <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0xea>
 801a9fc:	2800      	cmp	r0, #0
 801a9fe:	d046      	beq.n	801aa8e <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0xea>
 801aa00:	f89b e003 	ldrb.w	lr, [fp, #3]
 801aa04:	f89b 8004 	ldrb.w	r8, [fp, #4]
 801aa08:	f89b a005 	ldrb.w	sl, [fp, #5]
 801aa0c:	3701      	adds	r7, #1
 801aa0e:	d446      	bmi.n	801aa9e <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0xfa>
 801aa10:	45b9      	cmp	r9, r7
 801aa12:	dd44      	ble.n	801aa9e <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0xfa>
 801aa14:	9a03      	ldr	r2, [sp, #12]
 801aa16:	2a00      	cmp	r2, #0
 801aa18:	d045      	beq.n	801aaa6 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0x102>
 801aa1a:	f1bc 0f00 	cmp.w	ip, #0
 801aa1e:	db3a      	blt.n	801aa96 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0xf2>
 801aa20:	4563      	cmp	r3, ip
 801aa22:	dd38      	ble.n	801aa96 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0xf2>
 801aa24:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 801aa28:	f04f 0903 	mov.w	r9, #3
 801aa2c:	f81b 7002 	ldrb.w	r7, [fp, r2]
 801aa30:	fb03 b209 	mla	r2, r3, r9, fp
 801aa34:	fb03 b909 	mla	r9, r3, r9, fp
 801aa38:	7852      	ldrb	r2, [r2, #1]
 801aa3a:	f899 9002 	ldrb.w	r9, [r9, #2]
 801aa3e:	f11c 0c01 	adds.w	ip, ip, #1
 801aa42:	d40d      	bmi.n	801aa60 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0xbc>
 801aa44:	4563      	cmp	r3, ip
 801aa46:	dd0b      	ble.n	801aa60 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0xbc>
 801aa48:	b160      	cbz	r0, 801aa64 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0xc0>
 801aa4a:	2603      	movs	r6, #3
 801aa4c:	fb13 6406 	smlabb	r4, r3, r6, r6
 801aa50:	fb03 b506 	mla	r5, r3, r6, fp
 801aa54:	fb03 b306 	mla	r3, r3, r6, fp
 801aa58:	f81b 4004 	ldrb.w	r4, [fp, r4]
 801aa5c:	792d      	ldrb	r5, [r5, #4]
 801aa5e:	795e      	ldrb	r6, [r3, #5]
 801aa60:	280f      	cmp	r0, #15
 801aa62:	d802      	bhi.n	801aa6a <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0xc6>
 801aa64:	9b03      	ldr	r3, [sp, #12]
 801aa66:	2b0f      	cmp	r3, #15
 801aa68:	d922      	bls.n	801aab0 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0x10c>
 801aa6a:	4b2f      	ldr	r3, [pc, #188]	; (801ab28 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0x184>)
 801aa6c:	f240 115b 	movw	r1, #347	; 0x15b
 801aa70:	4a2e      	ldr	r2, [pc, #184]	; (801ab2c <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0x188>)
 801aa72:	482f      	ldr	r0, [pc, #188]	; (801ab30 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0x18c>)
 801aa74:	f005 f8b0 	bl	801fbd8 <__assert_func>
 801aa78:	e9cd 5601 	strd	r5, r6, [sp, #4]
 801aa7c:	9400      	str	r4, [sp, #0]
 801aa7e:	e7b8      	b.n	801a9f2 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0x4e>
 801aa80:	46b2      	mov	sl, r6
 801aa82:	46a8      	mov	r8, r5
 801aa84:	46a6      	mov	lr, r4
 801aa86:	9400      	str	r4, [sp, #0]
 801aa88:	e9cd 5601 	strd	r5, r6, [sp, #4]
 801aa8c:	e7be      	b.n	801aa0c <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0x68>
 801aa8e:	46b2      	mov	sl, r6
 801aa90:	46a8      	mov	r8, r5
 801aa92:	46a6      	mov	lr, r4
 801aa94:	e7ba      	b.n	801aa0c <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0x68>
 801aa96:	46b1      	mov	r9, r6
 801aa98:	462a      	mov	r2, r5
 801aa9a:	4627      	mov	r7, r4
 801aa9c:	e7cf      	b.n	801aa3e <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0x9a>
 801aa9e:	46b1      	mov	r9, r6
 801aaa0:	462a      	mov	r2, r5
 801aaa2:	4627      	mov	r7, r4
 801aaa4:	e7dc      	b.n	801aa60 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0xbc>
 801aaa6:	280f      	cmp	r0, #15
 801aaa8:	d8df      	bhi.n	801aa6a <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh+0xc6>
 801aaaa:	46b1      	mov	r9, r6
 801aaac:	462a      	mov	r2, r5
 801aaae:	4627      	mov	r7, r4
 801aab0:	f8bd b00c 	ldrh.w	fp, [sp, #12]
 801aab4:	b280      	uxth	r0, r0
 801aab6:	fb00 f30b 	mul.w	r3, r0, fp
 801aaba:	0100      	lsls	r0, r0, #4
 801aabc:	ebc3 1b0b 	rsb	fp, r3, fp, lsl #4
 801aac0:	f5c0 7c80 	rsb	ip, r0, #256	; 0x100
 801aac4:	1ac0      	subs	r0, r0, r3
 801aac6:	fa1f fb8b 	uxth.w	fp, fp
 801aaca:	b280      	uxth	r0, r0
 801aacc:	ebac 0c0b 	sub.w	ip, ip, fp
 801aad0:	9003      	str	r0, [sp, #12]
 801aad2:	fa1f fc8c 	uxth.w	ip, ip
 801aad6:	fb00 fe0e 	mul.w	lr, r0, lr
 801aada:	9800      	ldr	r0, [sp, #0]
 801aadc:	fb0c ee00 	mla	lr, ip, r0, lr
 801aae0:	9803      	ldr	r0, [sp, #12]
 801aae2:	fb00 f808 	mul.w	r8, r0, r8
 801aae6:	9801      	ldr	r0, [sp, #4]
 801aae8:	fb0b ee07 	mla	lr, fp, r7, lr
 801aaec:	fb0c 8800 	mla	r8, ip, r0, r8
 801aaf0:	fb03 ee04 	mla	lr, r3, r4, lr
 801aaf4:	fb0b 8202 	mla	r2, fp, r2, r8
 801aaf8:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 801aafc:	fb03 2505 	mla	r5, r3, r5, r2
 801ab00:	9a03      	ldr	r2, [sp, #12]
 801ab02:	f881 e000 	strb.w	lr, [r1]
 801ab06:	fb02 f00a 	mul.w	r0, r2, sl
 801ab0a:	9a02      	ldr	r2, [sp, #8]
 801ab0c:	122d      	asrs	r5, r5, #8
 801ab0e:	fb0c 0c02 	mla	ip, ip, r2, r0
 801ab12:	704d      	strb	r5, [r1, #1]
 801ab14:	fb0b c909 	mla	r9, fp, r9, ip
 801ab18:	fb03 9606 	mla	r6, r3, r6, r9
 801ab1c:	1236      	asrs	r6, r6, #8
 801ab1e:	708e      	strb	r6, [r1, #2]
 801ab20:	b005      	add	sp, #20
 801ab22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ab26:	bf00      	nop
 801ab28:	08024e84 	.word	0x08024e84
 801ab2c:	0802529a 	.word	0x0802529a
 801ab30:	08024e51 	.word	0x08024e51

0801ab34 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ab34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ab38:	ed2d 8b08 	vpush	{d8-d11}
 801ab3c:	b09b      	sub	sp, #108	; 0x6c
 801ab3e:	eeb0 aa40 	vmov.f32	s20, s0
 801ab42:	eef0 9a60 	vmov.f32	s19, s1
 801ab46:	920b      	str	r2, [sp, #44]	; 0x2c
 801ab48:	eeb0 9a41 	vmov.f32	s18, s2
 801ab4c:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 801ab4e:	eeb0 8a62 	vmov.f32	s16, s5
 801ab52:	9019      	str	r0, [sp, #100]	; 0x64
 801ab54:	eef0 8a43 	vmov.f32	s17, s6
 801ab58:	6850      	ldr	r0, [r2, #4]
 801ab5a:	eef0 ba44 	vmov.f32	s23, s8
 801ab5e:	9109      	str	r1, [sp, #36]	; 0x24
 801ab60:	eeb0 ba64 	vmov.f32	s22, s9
 801ab64:	9306      	str	r3, [sp, #24]
 801ab66:	eef0 aa45 	vmov.f32	s21, s10
 801ab6a:	6812      	ldr	r2, [r2, #0]
 801ab6c:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 801ab70:	e9dd b42d 	ldrd	fp, r4, [sp, #180]	; 0xb4
 801ab74:	fb00 1303 	mla	r3, r0, r3, r1
 801ab78:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801ab7c:	18d3      	adds	r3, r2, r3
 801ab7e:	9307      	str	r3, [sp, #28]
 801ab80:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801ab82:	681b      	ldr	r3, [r3, #0]
 801ab84:	9308      	str	r3, [sp, #32]
 801ab86:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ab88:	2b00      	cmp	r3, #0
 801ab8a:	dc03      	bgt.n	801ab94 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801ab8c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ab8e:	2b00      	cmp	r3, #0
 801ab90:	f340 81ab 	ble.w	801aeea <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b6>
 801ab94:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801ab96:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ab9a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ab9e:	1e48      	subs	r0, r1, #1
 801aba0:	1e55      	subs	r5, r2, #1
 801aba2:	9b06      	ldr	r3, [sp, #24]
 801aba4:	2b00      	cmp	r3, #0
 801aba6:	f340 80b1 	ble.w	801ad0c <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801abaa:	ea5f 462b 	movs.w	r6, fp, asr #16
 801abae:	ea4f 4324 	mov.w	r3, r4, asr #16
 801abb2:	d406      	bmi.n	801abc2 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801abb4:	4286      	cmp	r6, r0
 801abb6:	da04      	bge.n	801abc2 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801abb8:	2b00      	cmp	r3, #0
 801abba:	db02      	blt.n	801abc2 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801abbc:	42ab      	cmp	r3, r5
 801abbe:	f2c0 80a6 	blt.w	801ad0e <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 801abc2:	3601      	adds	r6, #1
 801abc4:	f100 8097 	bmi.w	801acf6 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801abc8:	42b1      	cmp	r1, r6
 801abca:	f2c0 8094 	blt.w	801acf6 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801abce:	3301      	adds	r3, #1
 801abd0:	f100 8091 	bmi.w	801acf6 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801abd4:	429a      	cmp	r2, r3
 801abd6:	f2c0 808e 	blt.w	801acf6 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801abda:	9b06      	ldr	r3, [sp, #24]
 801abdc:	9e07      	ldr	r6, [sp, #28]
 801abde:	930a      	str	r3, [sp, #40]	; 0x28
 801abe0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801abe2:	2b00      	cmp	r3, #0
 801abe4:	f340 80b0 	ble.w	801ad48 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801abe8:	9834      	ldr	r0, [sp, #208]	; 0xd0
 801abea:	1425      	asrs	r5, r4, #16
 801abec:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801abee:	f3cb 3203 	ubfx	r2, fp, #12, #4
 801abf2:	68c7      	ldr	r7, [r0, #12]
 801abf4:	ea5f 402b 	movs.w	r0, fp, asr #16
 801abf8:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801abfc:	689b      	ldr	r3, [r3, #8]
 801abfe:	f100 80ea 	bmi.w	801add6 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801ac02:	f103 3cff 	add.w	ip, r3, #4294967295
 801ac06:	4560      	cmp	r0, ip
 801ac08:	f280 80e5 	bge.w	801add6 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801ac0c:	2d00      	cmp	r5, #0
 801ac0e:	f2c0 80e2 	blt.w	801add6 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801ac12:	f107 3cff 	add.w	ip, r7, #4294967295
 801ac16:	4565      	cmp	r5, ip
 801ac18:	f280 80dd 	bge.w	801add6 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801ac1c:	b21b      	sxth	r3, r3
 801ac1e:	fb05 0003 	mla	r0, r5, r3, r0
 801ac22:	9d08      	ldr	r5, [sp, #32]
 801ac24:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801ac28:	182f      	adds	r7, r5, r0
 801ac2a:	5c2d      	ldrb	r5, [r5, r0]
 801ac2c:	7878      	ldrb	r0, [r7, #1]
 801ac2e:	f897 e002 	ldrb.w	lr, [r7, #2]
 801ac32:	900c      	str	r0, [sp, #48]	; 0x30
 801ac34:	f897 9003 	ldrb.w	r9, [r7, #3]
 801ac38:	f897 8004 	ldrb.w	r8, [r7, #4]
 801ac3c:	f897 a005 	ldrb.w	sl, [r7, #5]
 801ac40:	b1c9      	cbz	r1, 801ac76 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x142>
 801ac42:	f04f 0c03 	mov.w	ip, #3
 801ac46:	f06f 0004 	mvn.w	r0, #4
 801ac4a:	3705      	adds	r7, #5
 801ac4c:	fb13 030c 	smlabb	r3, r3, ip, r0
 801ac50:	eb07 0c03 	add.w	ip, r7, r3
 801ac54:	5cfb      	ldrb	r3, [r7, r3]
 801ac56:	930d      	str	r3, [sp, #52]	; 0x34
 801ac58:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801ac5c:	930f      	str	r3, [sp, #60]	; 0x3c
 801ac5e:	f89c 3002 	ldrb.w	r3, [ip, #2]
 801ac62:	9311      	str	r3, [sp, #68]	; 0x44
 801ac64:	f89c 3003 	ldrb.w	r3, [ip, #3]
 801ac68:	930e      	str	r3, [sp, #56]	; 0x38
 801ac6a:	f89c 3004 	ldrb.w	r3, [ip, #4]
 801ac6e:	9310      	str	r3, [sp, #64]	; 0x40
 801ac70:	f89c 3005 	ldrb.w	r3, [ip, #5]
 801ac74:	9312      	str	r3, [sp, #72]	; 0x48
 801ac76:	b292      	uxth	r2, r2
 801ac78:	980c      	ldr	r0, [sp, #48]	; 0x30
 801ac7a:	b289      	uxth	r1, r1
 801ac7c:	fb02 f301 	mul.w	r3, r2, r1
 801ac80:	0112      	lsls	r2, r2, #4
 801ac82:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801ac86:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801ac8a:	1ad2      	subs	r2, r2, r3
 801ac8c:	b289      	uxth	r1, r1
 801ac8e:	b292      	uxth	r2, r2
 801ac90:	1a7f      	subs	r7, r7, r1
 801ac92:	fb02 f909 	mul.w	r9, r2, r9
 801ac96:	b2bf      	uxth	r7, r7
 801ac98:	fb02 f808 	mul.w	r8, r2, r8
 801ac9c:	fb02 fa0a 	mul.w	sl, r2, sl
 801aca0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801aca2:	fb07 9905 	mla	r9, r7, r5, r9
 801aca6:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801aca8:	fb07 8800 	mla	r8, r7, r0, r8
 801acac:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801acae:	fb07 aa0e 	mla	sl, r7, lr, sl
 801acb2:	fb01 9905 	mla	r9, r1, r5, r9
 801acb6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801acb8:	fb01 8800 	mla	r8, r1, r0, r8
 801acbc:	9810      	ldr	r0, [sp, #64]	; 0x40
 801acbe:	fb01 a102 	mla	r1, r1, r2, sl
 801acc2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801acc4:	fb03 9905 	mla	r9, r3, r5, r9
 801acc8:	fb03 8800 	mla	r8, r3, r0, r8
 801accc:	fb03 1302 	mla	r3, r3, r2, r1
 801acd0:	ea4f 2929 	mov.w	r9, r9, asr #8
 801acd4:	ea4f 2828 	mov.w	r8, r8, asr #8
 801acd8:	121b      	asrs	r3, r3, #8
 801acda:	f886 9000 	strb.w	r9, [r6]
 801acde:	f886 8001 	strb.w	r8, [r6, #1]
 801ace2:	70b3      	strb	r3, [r6, #2]
 801ace4:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801ace6:	3603      	adds	r6, #3
 801ace8:	449b      	add	fp, r3
 801acea:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801acec:	441c      	add	r4, r3
 801acee:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801acf0:	3b01      	subs	r3, #1
 801acf2:	930a      	str	r3, [sp, #40]	; 0x28
 801acf4:	e774      	b.n	801abe0 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 801acf6:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801acf8:	449b      	add	fp, r3
 801acfa:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801acfc:	441c      	add	r4, r3
 801acfe:	9b06      	ldr	r3, [sp, #24]
 801ad00:	3b01      	subs	r3, #1
 801ad02:	9306      	str	r3, [sp, #24]
 801ad04:	9b07      	ldr	r3, [sp, #28]
 801ad06:	3303      	adds	r3, #3
 801ad08:	9307      	str	r3, [sp, #28]
 801ad0a:	e74a      	b.n	801aba2 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801ad0c:	d024      	beq.n	801ad58 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 801ad0e:	9b06      	ldr	r3, [sp, #24]
 801ad10:	982f      	ldr	r0, [sp, #188]	; 0xbc
 801ad12:	3b01      	subs	r3, #1
 801ad14:	fb00 b003 	mla	r0, r0, r3, fp
 801ad18:	1400      	asrs	r0, r0, #16
 801ad1a:	f53f af5e 	bmi.w	801abda <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801ad1e:	3901      	subs	r1, #1
 801ad20:	4288      	cmp	r0, r1
 801ad22:	f6bf af5a 	bge.w	801abda <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801ad26:	9930      	ldr	r1, [sp, #192]	; 0xc0
 801ad28:	fb01 4303 	mla	r3, r1, r3, r4
 801ad2c:	141b      	asrs	r3, r3, #16
 801ad2e:	f53f af54 	bmi.w	801abda <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801ad32:	3a01      	subs	r2, #1
 801ad34:	4293      	cmp	r3, r2
 801ad36:	f6bf af50 	bge.w	801abda <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801ad3a:	9b07      	ldr	r3, [sp, #28]
 801ad3c:	f8dd e018 	ldr.w	lr, [sp, #24]
 801ad40:	1cde      	adds	r6, r3, #3
 801ad42:	f1be 0f00 	cmp.w	lr, #0
 801ad46:	dc5f      	bgt.n	801ae08 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 801ad48:	9b06      	ldr	r3, [sp, #24]
 801ad4a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801ad4e:	9b07      	ldr	r3, [sp, #28]
 801ad50:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801ad54:	4423      	add	r3, r4
 801ad56:	9307      	str	r3, [sp, #28]
 801ad58:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ad5a:	2b00      	cmp	r3, #0
 801ad5c:	f340 80c5 	ble.w	801aeea <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b6>
 801ad60:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ad64:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ad66:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801ad6a:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801ad6e:	eef0 6a48 	vmov.f32	s13, s16
 801ad72:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801ad76:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801ad7a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ad7e:	ee16 ba90 	vmov	fp, s13
 801ad82:	eef0 6a68 	vmov.f32	s13, s17
 801ad86:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ad8a:	ee16 4a90 	vmov	r4, s13
 801ad8e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801ad92:	ee69 7a27 	vmul.f32	s15, s18, s15
 801ad96:	ee37 8a48 	vsub.f32	s16, s14, s16
 801ad9a:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801ad9e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801ada2:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801ada6:	ee18 2a10 	vmov	r2, s16
 801adaa:	eeb0 8a47 	vmov.f32	s16, s14
 801adae:	fb92 f3f3 	sdiv	r3, r2, r3
 801adb2:	ee18 2a90 	vmov	r2, s17
 801adb6:	932f      	str	r3, [sp, #188]	; 0xbc
 801adb8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801adba:	eef0 8a67 	vmov.f32	s17, s15
 801adbe:	fb92 f3f3 	sdiv	r3, r2, r3
 801adc2:	9330      	str	r3, [sp, #192]	; 0xc0
 801adc4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801adc6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801adc8:	3b01      	subs	r3, #1
 801adca:	9309      	str	r3, [sp, #36]	; 0x24
 801adcc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801adce:	bf08      	it	eq
 801add0:	4613      	moveq	r3, r2
 801add2:	9306      	str	r3, [sp, #24]
 801add4:	e6d7      	b.n	801ab86 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801add6:	f110 0c01 	adds.w	ip, r0, #1
 801adda:	d483      	bmi.n	801ace4 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b0>
 801addc:	4563      	cmp	r3, ip
 801adde:	db81      	blt.n	801ace4 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b0>
 801ade0:	f115 0c01 	adds.w	ip, r5, #1
 801ade4:	f53f af7e 	bmi.w	801ace4 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b0>
 801ade8:	4567      	cmp	r7, ip
 801adea:	f6ff af7b 	blt.w	801ace4 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b0>
 801adee:	b23f      	sxth	r7, r7
 801adf0:	b21b      	sxth	r3, r3
 801adf2:	9700      	str	r7, [sp, #0]
 801adf4:	e9cd 2103 	strd	r2, r1, [sp, #12]
 801adf8:	e9cd 0501 	strd	r0, r5, [sp, #4]
 801adfc:	9a08      	ldr	r2, [sp, #32]
 801adfe:	4631      	mov	r1, r6
 801ae00:	9819      	ldr	r0, [sp, #100]	; 0x64
 801ae02:	f7ff fdcf 	bl	801a9a4 <_ZNK8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhssiihh>
 801ae06:	e76d      	b.n	801ace4 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b0>
 801ae08:	9934      	ldr	r1, [sp, #208]	; 0xd0
 801ae0a:	ea4f 402b 	mov.w	r0, fp, asr #16
 801ae0e:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801ae12:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801ae16:	f9b1 c008 	ldrsh.w	ip, [r1, #8]
 801ae1a:	1421      	asrs	r1, r4, #16
 801ae1c:	930a      	str	r3, [sp, #40]	; 0x28
 801ae1e:	fb0c 0101 	mla	r1, ip, r1, r0
 801ae22:	9808      	ldr	r0, [sp, #32]
 801ae24:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801ae28:	1845      	adds	r5, r0, r1
 801ae2a:	5c40      	ldrb	r0, [r0, r1]
 801ae2c:	796f      	ldrb	r7, [r5, #5]
 801ae2e:	7869      	ldrb	r1, [r5, #1]
 801ae30:	f895 8002 	ldrb.w	r8, [r5, #2]
 801ae34:	f895 a003 	ldrb.w	sl, [r5, #3]
 801ae38:	f895 9004 	ldrb.w	r9, [r5, #4]
 801ae3c:	970c      	str	r7, [sp, #48]	; 0x30
 801ae3e:	b1a2      	cbz	r2, 801ae6a <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x336>
 801ae40:	2703      	movs	r7, #3
 801ae42:	f06f 0304 	mvn.w	r3, #4
 801ae46:	3505      	adds	r5, #5
 801ae48:	fb1c 3c07 	smlabb	ip, ip, r7, r3
 801ae4c:	eb05 070c 	add.w	r7, r5, ip
 801ae50:	f815 500c 	ldrb.w	r5, [r5, ip]
 801ae54:	9513      	str	r5, [sp, #76]	; 0x4c
 801ae56:	787d      	ldrb	r5, [r7, #1]
 801ae58:	9515      	str	r5, [sp, #84]	; 0x54
 801ae5a:	78bd      	ldrb	r5, [r7, #2]
 801ae5c:	9517      	str	r5, [sp, #92]	; 0x5c
 801ae5e:	78fd      	ldrb	r5, [r7, #3]
 801ae60:	9514      	str	r5, [sp, #80]	; 0x50
 801ae62:	793d      	ldrb	r5, [r7, #4]
 801ae64:	9516      	str	r5, [sp, #88]	; 0x58
 801ae66:	797d      	ldrb	r5, [r7, #5]
 801ae68:	9518      	str	r5, [sp, #96]	; 0x60
 801ae6a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801ae6e:	b292      	uxth	r2, r2
 801ae70:	3603      	adds	r6, #3
 801ae72:	f10e 3eff 	add.w	lr, lr, #4294967295
 801ae76:	fb03 f502 	mul.w	r5, r3, r2
 801ae7a:	011b      	lsls	r3, r3, #4
 801ae7c:	ebc5 1202 	rsb	r2, r5, r2, lsl #4
 801ae80:	f5c3 7780 	rsb	r7, r3, #256	; 0x100
 801ae84:	1b5b      	subs	r3, r3, r5
 801ae86:	b292      	uxth	r2, r2
 801ae88:	b29b      	uxth	r3, r3
 801ae8a:	1abf      	subs	r7, r7, r2
 801ae8c:	fb03 f909 	mul.w	r9, r3, r9
 801ae90:	b2bf      	uxth	r7, r7
 801ae92:	fb03 fa0a 	mul.w	sl, r3, sl
 801ae96:	fb07 9901 	mla	r9, r7, r1, r9
 801ae9a:	9915      	ldr	r1, [sp, #84]	; 0x54
 801ae9c:	fb07 aa00 	mla	sl, r7, r0, sl
 801aea0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801aea2:	fb02 9901 	mla	r9, r2, r1, r9
 801aea6:	9916      	ldr	r1, [sp, #88]	; 0x58
 801aea8:	fb02 aa00 	mla	sl, r2, r0, sl
 801aeac:	9814      	ldr	r0, [sp, #80]	; 0x50
 801aeae:	fb05 9901 	mla	r9, r5, r1, r9
 801aeb2:	990c      	ldr	r1, [sp, #48]	; 0x30
 801aeb4:	fb05 aa00 	mla	sl, r5, r0, sl
 801aeb8:	434b      	muls	r3, r1
 801aeba:	9917      	ldr	r1, [sp, #92]	; 0x5c
 801aebc:	ea4f 2a2a 	mov.w	sl, sl, asr #8
 801aec0:	fb07 3308 	mla	r3, r7, r8, r3
 801aec4:	ea4f 2929 	mov.w	r9, r9, asr #8
 801aec8:	f806 ac06 	strb.w	sl, [r6, #-6]
 801aecc:	fb02 3201 	mla	r2, r2, r1, r3
 801aed0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801aed2:	f806 9c05 	strb.w	r9, [r6, #-5]
 801aed6:	fb05 2503 	mla	r5, r5, r3, r2
 801aeda:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801aedc:	122d      	asrs	r5, r5, #8
 801aede:	449b      	add	fp, r3
 801aee0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801aee2:	f806 5c04 	strb.w	r5, [r6, #-4]
 801aee6:	441c      	add	r4, r3
 801aee8:	e72b      	b.n	801ad42 <_ZN8touchgfx8LCD24bpp54TextureMapper_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801aeea:	b01b      	add	sp, #108	; 0x6c
 801aeec:	ecbd 8b08 	vpop	{d8-d11}
 801aef0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801aef4 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh>:
 801aef4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aef8:	e9dd 540d 	ldrd	r5, r4, [sp, #52]	; 0x34
 801aefc:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801af00:	fb04 5603 	mla	r6, r4, r3, r5
 801af04:	2c00      	cmp	r4, #0
 801af06:	f89d 003c 	ldrb.w	r0, [sp, #60]	; 0x3c
 801af0a:	f89d 7040 	ldrb.w	r7, [sp, #64]	; 0x40
 801af0e:	eb02 0c86 	add.w	ip, r2, r6, lsl #2
 801af12:	db36      	blt.n	801af82 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x8e>
 801af14:	45a6      	cmp	lr, r4
 801af16:	dd34      	ble.n	801af82 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x8e>
 801af18:	2d00      	cmp	r5, #0
 801af1a:	db30      	blt.n	801af7e <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x8a>
 801af1c:	42ab      	cmp	r3, r5
 801af1e:	dd2e      	ble.n	801af7e <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x8a>
 801af20:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 801af24:	1c6e      	adds	r6, r5, #1
 801af26:	d42f      	bmi.n	801af88 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x94>
 801af28:	42b3      	cmp	r3, r6
 801af2a:	dd2d      	ble.n	801af88 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x94>
 801af2c:	b370      	cbz	r0, 801af8c <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x98>
 801af2e:	f8dc 6004 	ldr.w	r6, [ip, #4]
 801af32:	3401      	adds	r4, #1
 801af34:	d42e      	bmi.n	801af94 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0xa0>
 801af36:	45a6      	cmp	lr, r4
 801af38:	dd2c      	ble.n	801af94 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0xa0>
 801af3a:	b377      	cbz	r7, 801af9a <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0xa6>
 801af3c:	2d00      	cmp	r5, #0
 801af3e:	db27      	blt.n	801af90 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x9c>
 801af40:	42ab      	cmp	r3, r5
 801af42:	dd25      	ble.n	801af90 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x9c>
 801af44:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801af48:	3501      	adds	r5, #1
 801af4a:	d429      	bmi.n	801afa0 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0xac>
 801af4c:	42ab      	cmp	r3, r5
 801af4e:	dd27      	ble.n	801afa0 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0xac>
 801af50:	b340      	cbz	r0, 801afa4 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0xb0>
 801af52:	3301      	adds	r3, #1
 801af54:	f85c 3023 	ldr.w	r3, [ip, r3, lsl #2]
 801af58:	280f      	cmp	r0, #15
 801af5a:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 801af5e:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801af62:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801af66:	ea4f 6813 	mov.w	r8, r3, lsr #24
 801af6a:	d801      	bhi.n	801af70 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x7c>
 801af6c:	2f0f      	cmp	r7, #15
 801af6e:	d91b      	bls.n	801afa8 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0xb4>
 801af70:	4b89      	ldr	r3, [pc, #548]	; (801b198 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x2a4>)
 801af72:	f240 115b 	movw	r1, #347	; 0x15b
 801af76:	4a89      	ldr	r2, [pc, #548]	; (801b19c <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x2a8>)
 801af78:	4889      	ldr	r0, [pc, #548]	; (801b1a0 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x2ac>)
 801af7a:	f004 fe2d 	bl	801fbd8 <__assert_func>
 801af7e:	2200      	movs	r2, #0
 801af80:	e7d0      	b.n	801af24 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x30>
 801af82:	2600      	movs	r6, #0
 801af84:	4632      	mov	r2, r6
 801af86:	e7d4      	b.n	801af32 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x3e>
 801af88:	2600      	movs	r6, #0
 801af8a:	e7d2      	b.n	801af32 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x3e>
 801af8c:	4606      	mov	r6, r0
 801af8e:	e7d0      	b.n	801af32 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x3e>
 801af90:	2400      	movs	r4, #0
 801af92:	e7d9      	b.n	801af48 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x54>
 801af94:	2300      	movs	r3, #0
 801af96:	461c      	mov	r4, r3
 801af98:	e7de      	b.n	801af58 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x64>
 801af9a:	463b      	mov	r3, r7
 801af9c:	463c      	mov	r4, r7
 801af9e:	e7db      	b.n	801af58 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x64>
 801afa0:	2300      	movs	r3, #0
 801afa2:	e7d9      	b.n	801af58 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x64>
 801afa4:	4603      	mov	r3, r0
 801afa6:	e7d7      	b.n	801af58 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x64>
 801afa8:	b280      	uxth	r0, r0
 801afaa:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801afae:	b2bf      	uxth	r7, r7
 801afb0:	fb00 fe07 	mul.w	lr, r0, r7
 801afb4:	ea4f 1000 	mov.w	r0, r0, lsl #4
 801afb8:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 801afbc:	eba0 0c0e 	sub.w	ip, r0, lr
 801afc0:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 801afc4:	b2bf      	uxth	r7, r7
 801afc6:	fa1f fc8c 	uxth.w	ip, ip
 801afca:	eba5 0507 	sub.w	r5, r5, r7
 801afce:	fb0c f00a 	mul.w	r0, ip, sl
 801afd2:	b2ad      	uxth	r5, r5
 801afd4:	fb05 000b 	mla	r0, r5, fp, r0
 801afd8:	fb07 0009 	mla	r0, r7, r9, r0
 801afdc:	fb0e 0008 	mla	r0, lr, r8, r0
 801afe0:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801afe4:	9001      	str	r0, [sp, #4]
 801afe6:	d018      	beq.n	801b01a <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x126>
 801afe8:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801afec:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801aff0:	fb0b f000 	mul.w	r0, fp, r0
 801aff4:	fb0b fb02 	mul.w	fp, fp, r2
 801aff8:	0a02      	lsrs	r2, r0, #8
 801affa:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801affe:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801b002:	4402      	add	r2, r0
 801b004:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 801b008:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801b00c:	0a12      	lsrs	r2, r2, #8
 801b00e:	0a00      	lsrs	r0, r0, #8
 801b010:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801b014:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801b018:	4302      	orrs	r2, r0
 801b01a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801b01e:	d01a      	beq.n	801b056 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x162>
 801b020:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 801b024:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801b028:	fb0a f000 	mul.w	r0, sl, r0
 801b02c:	fb0a fa06 	mul.w	sl, sl, r6
 801b030:	0a06      	lsrs	r6, r0, #8
 801b032:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801b036:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801b03a:	4406      	add	r6, r0
 801b03c:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 801b040:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 801b044:	0a36      	lsrs	r6, r6, #8
 801b046:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b04a:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801b04e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b052:	ea46 060a 	orr.w	r6, r6, sl
 801b056:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801b05a:	d01b      	beq.n	801b094 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x1a0>
 801b05c:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801b060:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801b064:	fb09 fa0a 	mul.w	sl, r9, sl
 801b068:	fb09 f004 	mul.w	r0, r9, r4
 801b06c:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801b070:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b074:	f500 7980 	add.w	r9, r0, #256	; 0x100
 801b078:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801b07c:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 801b080:	4454      	add	r4, sl
 801b082:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b086:	0a24      	lsrs	r4, r4, #8
 801b088:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801b08c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801b090:	ea44 0409 	orr.w	r4, r4, r9
 801b094:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801b098:	d01b      	beq.n	801b0d2 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh+0x1de>
 801b09a:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 801b09e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b0a2:	fb08 f909 	mul.w	r9, r8, r9
 801b0a6:	fb08 f003 	mul.w	r0, r8, r3
 801b0aa:	ea4f 2319 	mov.w	r3, r9, lsr #8
 801b0ae:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 801b0b2:	f500 7880 	add.w	r8, r0, #256	; 0x100
 801b0b6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b0ba:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 801b0be:	444b      	add	r3, r9
 801b0c0:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801b0c4:	0a1b      	lsrs	r3, r3, #8
 801b0c6:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801b0ca:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b0ce:	ea43 0308 	orr.w	r3, r3, r8
 801b0d2:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 801b0d6:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801b0da:	f002 18ff 	and.w	r8, r2, #16711935	; 0xff00ff
 801b0de:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801b0e2:	fb0c f000 	mul.w	r0, ip, r0
 801b0e6:	fb0c f606 	mul.w	r6, ip, r6
 801b0ea:	fb05 0808 	mla	r8, r5, r8, r0
 801b0ee:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 801b0f2:	fb05 6502 	mla	r5, r5, r2, r6
 801b0f6:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801b0fa:	fb07 8800 	mla	r8, r7, r0, r8
 801b0fe:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 801b102:	fb07 5704 	mla	r7, r7, r4, r5
 801b106:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b10a:	fb0e 8000 	mla	r0, lr, r0, r8
 801b10e:	fb0e 7e03 	mla	lr, lr, r3, r7
 801b112:	9b01      	ldr	r3, [sp, #4]
 801b114:	0a00      	lsrs	r0, r0, #8
 801b116:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b11a:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801b11e:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801b122:	ea40 0e0e 	orr.w	lr, r0, lr
 801b126:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
 801b12a:	b280      	uxth	r0, r0
 801b12c:	fa5f f48e 	uxtb.w	r4, lr
 801b130:	4343      	muls	r3, r0
 801b132:	fb14 f400 	smulbb	r4, r4, r0
 801b136:	1c5a      	adds	r2, r3, #1
 801b138:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801b13c:	780b      	ldrb	r3, [r1, #0]
 801b13e:	ea6f 2212 	mvn.w	r2, r2, lsr #8
 801b142:	b2d2      	uxtb	r2, r2
 801b144:	fb03 4302 	mla	r3, r3, r2, r4
 801b148:	b29b      	uxth	r3, r3
 801b14a:	1c5c      	adds	r4, r3, #1
 801b14c:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 801b150:	784c      	ldrb	r4, [r1, #1]
 801b152:	fb14 f402 	smulbb	r4, r4, r2
 801b156:	121b      	asrs	r3, r3, #8
 801b158:	700b      	strb	r3, [r1, #0]
 801b15a:	f3ce 2307 	ubfx	r3, lr, #8, #8
 801b15e:	fb03 4300 	mla	r3, r3, r0, r4
 801b162:	b29b      	uxth	r3, r3
 801b164:	1c5c      	adds	r4, r3, #1
 801b166:	eb04 2313 	add.w	r3, r4, r3, lsr #8
 801b16a:	121b      	asrs	r3, r3, #8
 801b16c:	704b      	strb	r3, [r1, #1]
 801b16e:	ea4f 431e 	mov.w	r3, lr, lsr #16
 801b172:	f891 e002 	ldrb.w	lr, [r1, #2]
 801b176:	fb1e fe02 	smulbb	lr, lr, r2
 801b17a:	fb03 ee00 	mla	lr, r3, r0, lr
 801b17e:	fa1f fe8e 	uxth.w	lr, lr
 801b182:	f10e 0301 	add.w	r3, lr, #1
 801b186:	eb03 2e1e 	add.w	lr, r3, lr, lsr #8
 801b18a:	ea4f 2e2e 	mov.w	lr, lr, asr #8
 801b18e:	f881 e002 	strb.w	lr, [r1, #2]
 801b192:	b003      	add	sp, #12
 801b194:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b198:	08024e84 	.word	0x08024e84
 801b19c:	0802529a 	.word	0x0802529a
 801b1a0:	08024e51 	.word	0x08024e51

0801b1a4 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b1a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b1a8:	ed2d 8b08 	vpush	{d8-d11}
 801b1ac:	b09d      	sub	sp, #116	; 0x74
 801b1ae:	eeb0 aa40 	vmov.f32	s20, s0
 801b1b2:	eef0 9a60 	vmov.f32	s19, s1
 801b1b6:	9219      	str	r2, [sp, #100]	; 0x64
 801b1b8:	eeb0 9a41 	vmov.f32	s18, s2
 801b1bc:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 801b1be:	eeb0 8a62 	vmov.f32	s16, s5
 801b1c2:	9307      	str	r3, [sp, #28]
 801b1c4:	eef0 8a43 	vmov.f32	s17, s6
 801b1c8:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 801b1cc:	eef0 ba44 	vmov.f32	s23, s8
 801b1d0:	901b      	str	r0, [sp, #108]	; 0x6c
 801b1d2:	eeb0 ba64 	vmov.f32	s22, s9
 801b1d6:	931a      	str	r3, [sp, #104]	; 0x68
 801b1d8:	eef0 aa45 	vmov.f32	s21, s10
 801b1dc:	6850      	ldr	r0, [r2, #4]
 801b1de:	9117      	str	r1, [sp, #92]	; 0x5c
 801b1e0:	6812      	ldr	r2, [r2, #0]
 801b1e2:	e9dd 1334 	ldrd	r1, r3, [sp, #208]	; 0xd0
 801b1e6:	e9dd 562f 	ldrd	r5, r6, [sp, #188]	; 0xbc
 801b1ea:	fb00 1303 	mla	r3, r0, r3, r1
 801b1ee:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801b1f2:	18d3      	adds	r3, r2, r3
 801b1f4:	930a      	str	r3, [sp, #40]	; 0x28
 801b1f6:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 801b1f8:	681b      	ldr	r3, [r3, #0]
 801b1fa:	9310      	str	r3, [sp, #64]	; 0x40
 801b1fc:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801b200:	930b      	str	r3, [sp, #44]	; 0x2c
 801b202:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801b204:	2b00      	cmp	r3, #0
 801b206:	dc03      	bgt.n	801b210 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b208:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801b20a:	2b00      	cmp	r3, #0
 801b20c:	f340 8368 	ble.w	801b8e0 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73c>
 801b210:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 801b212:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b216:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b21a:	1e48      	subs	r0, r1, #1
 801b21c:	1e57      	subs	r7, r2, #1
 801b21e:	9b07      	ldr	r3, [sp, #28]
 801b220:	2b00      	cmp	r3, #0
 801b222:	f340 8187 	ble.w	801b534 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 801b226:	ea5f 4c25 	movs.w	ip, r5, asr #16
 801b22a:	ea4f 4326 	mov.w	r3, r6, asr #16
 801b22e:	d406      	bmi.n	801b23e <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801b230:	4584      	cmp	ip, r0
 801b232:	da04      	bge.n	801b23e <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801b234:	2b00      	cmp	r3, #0
 801b236:	db02      	blt.n	801b23e <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801b238:	42bb      	cmp	r3, r7
 801b23a:	f2c0 817c 	blt.w	801b536 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x392>
 801b23e:	f11c 0c01 	adds.w	ip, ip, #1
 801b242:	f100 816c 	bmi.w	801b51e <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801b246:	4561      	cmp	r1, ip
 801b248:	f2c0 8169 	blt.w	801b51e <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801b24c:	3301      	adds	r3, #1
 801b24e:	f100 8166 	bmi.w	801b51e <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801b252:	429a      	cmp	r2, r3
 801b254:	f2c0 8163 	blt.w	801b51e <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801b258:	9b07      	ldr	r3, [sp, #28]
 801b25a:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801b25c:	9318      	str	r3, [sp, #96]	; 0x60
 801b25e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b260:	2b00      	cmp	r3, #0
 801b262:	f340 8186 	ble.w	801b572 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
 801b266:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 801b268:	142a      	asrs	r2, r5, #16
 801b26a:	ea4f 4026 	mov.w	r0, r6, asr #16
 801b26e:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801b272:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801b276:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801b27a:	f100 81cb 	bmi.w	801b614 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x470>
 801b27e:	f10e 38ff 	add.w	r8, lr, #4294967295
 801b282:	4542      	cmp	r2, r8
 801b284:	f280 81c6 	bge.w	801b614 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x470>
 801b288:	2800      	cmp	r0, #0
 801b28a:	f2c0 81c3 	blt.w	801b614 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x470>
 801b28e:	f103 38ff 	add.w	r8, r3, #4294967295
 801b292:	4540      	cmp	r0, r8
 801b294:	f280 81be 	bge.w	801b614 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x470>
 801b298:	fa0f f38e 	sxth.w	r3, lr
 801b29c:	fb00 2203 	mla	r2, r0, r3, r2
 801b2a0:	9810      	ldr	r0, [sp, #64]	; 0x40
 801b2a2:	eb00 0882 	add.w	r8, r0, r2, lsl #2
 801b2a6:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 801b2aa:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801b2ae:	2900      	cmp	r1, #0
 801b2b0:	f000 81a6 	beq.w	801b600 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x45c>
 801b2b4:	f8d8 0004 	ldr.w	r0, [r8, #4]
 801b2b8:	900c      	str	r0, [sp, #48]	; 0x30
 801b2ba:	0e00      	lsrs	r0, r0, #24
 801b2bc:	9013      	str	r0, [sp, #76]	; 0x4c
 801b2be:	f1bc 0f00 	cmp.w	ip, #0
 801b2c2:	d00f      	beq.n	801b2e4 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 801b2c4:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801b2c8:	3b01      	subs	r3, #1
 801b2ca:	009b      	lsls	r3, r3, #2
 801b2cc:	3304      	adds	r3, #4
 801b2ce:	eb08 0003 	add.w	r0, r8, r3
 801b2d2:	f858 3003 	ldr.w	r3, [r8, r3]
 801b2d6:	9308      	str	r3, [sp, #32]
 801b2d8:	0e1b      	lsrs	r3, r3, #24
 801b2da:	9311      	str	r3, [sp, #68]	; 0x44
 801b2dc:	6843      	ldr	r3, [r0, #4]
 801b2de:	930d      	str	r3, [sp, #52]	; 0x34
 801b2e0:	0e1b      	lsrs	r3, r3, #24
 801b2e2:	9314      	str	r3, [sp, #80]	; 0x50
 801b2e4:	b289      	uxth	r1, r1
 801b2e6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b2e8:	fa1f fc8c 	uxth.w	ip, ip
 801b2ec:	0108      	lsls	r0, r1, #4
 801b2ee:	fb01 f90c 	mul.w	r9, r1, ip
 801b2f2:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801b2f6:	ebc9 1c0c 	rsb	ip, r9, ip, lsl #4
 801b2fa:	eba0 0809 	sub.w	r8, r0, r9
 801b2fe:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801b300:	fa1f f18c 	uxth.w	r1, ip
 801b304:	fa1f f888 	uxth.w	r8, r8
 801b308:	1a5b      	subs	r3, r3, r1
 801b30a:	fb08 f000 	mul.w	r0, r8, r0
 801b30e:	b29b      	uxth	r3, r3
 801b310:	fb03 000e 	mla	r0, r3, lr, r0
 801b314:	fb01 0004 	mla	r0, r1, r4, r0
 801b318:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b31a:	fb09 0004 	mla	r0, r9, r4, r0
 801b31e:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801b322:	2800      	cmp	r0, #0
 801b324:	f000 80f2 	beq.w	801b50c <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801b328:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801b32c:	d01b      	beq.n	801b366 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801b32e:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801b332:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801b336:	fb0e fa0a 	mul.w	sl, lr, sl
 801b33a:	fb0e fe02 	mul.w	lr, lr, r2
 801b33e:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801b342:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b346:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801b34a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801b34e:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801b352:	4452      	add	r2, sl
 801b354:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b358:	0a12      	lsrs	r2, r2, #8
 801b35a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801b35e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801b362:	ea42 020c 	orr.w	r2, r2, ip
 801b366:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b368:	2cff      	cmp	r4, #255	; 0xff
 801b36a:	d021      	beq.n	801b3b0 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 801b36c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801b36e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b372:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b374:	fb04 fb0b 	mul.w	fp, r4, fp
 801b378:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801b37a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b37e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b380:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b384:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b388:	fb04 fa0a 	mul.w	sl, r4, sl
 801b38c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b390:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b394:	44de      	add	lr, fp
 801b396:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b39a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b39e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b3a2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b3a6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b3aa:	ea4e 040a 	orr.w	r4, lr, sl
 801b3ae:	940c      	str	r4, [sp, #48]	; 0x30
 801b3b0:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b3b2:	2cff      	cmp	r4, #255	; 0xff
 801b3b4:	d021      	beq.n	801b3fa <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x256>
 801b3b6:	9c08      	ldr	r4, [sp, #32]
 801b3b8:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b3bc:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b3be:	fb04 fb0b 	mul.w	fp, r4, fp
 801b3c2:	9c08      	ldr	r4, [sp, #32]
 801b3c4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b3c8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b3ca:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b3ce:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b3d2:	fb04 fa0a 	mul.w	sl, r4, sl
 801b3d6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b3da:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b3de:	44de      	add	lr, fp
 801b3e0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b3e4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b3e8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b3ec:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b3f0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b3f4:	ea4e 040a 	orr.w	r4, lr, sl
 801b3f8:	9408      	str	r4, [sp, #32]
 801b3fa:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b3fc:	2cff      	cmp	r4, #255	; 0xff
 801b3fe:	d021      	beq.n	801b444 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801b400:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b402:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b406:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b408:	fb04 fb0b 	mul.w	fp, r4, fp
 801b40c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b40e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b412:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b414:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b418:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b41c:	fb04 fa0a 	mul.w	sl, r4, sl
 801b420:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b424:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b428:	44de      	add	lr, fp
 801b42a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b42e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b432:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b436:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b43a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b43e:	ea4e 040a 	orr.w	r4, lr, sl
 801b442:	940d      	str	r4, [sp, #52]	; 0x34
 801b444:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801b446:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801b44a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801b44e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b452:	9c08      	ldr	r4, [sp, #32]
 801b454:	fb08 fc0c 	mul.w	ip, r8, ip
 801b458:	fb03 cc0e 	mla	ip, r3, lr, ip
 801b45c:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801b460:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b462:	fb01 cc0e 	mla	ip, r1, lr, ip
 801b466:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801b46a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801b46c:	fb09 cc0e 	mla	ip, r9, lr, ip
 801b470:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801b474:	fb08 f80e 	mul.w	r8, r8, lr
 801b478:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b47c:	fb03 8202 	mla	r2, r3, r2, r8
 801b480:	9b08      	ldr	r3, [sp, #32]
 801b482:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b486:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 801b48a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b48c:	fb01 220a 	mla	r2, r1, sl, r2
 801b490:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 801b494:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801b496:	fb09 2901 	mla	r9, r9, r1, r2
 801b49a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801b49c:	4343      	muls	r3, r0
 801b49e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b4a2:	1c58      	adds	r0, r3, #1
 801b4a4:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801b4a8:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801b4ac:	783b      	ldrb	r3, [r7, #0]
 801b4ae:	ea4c 0c09 	orr.w	ip, ip, r9
 801b4b2:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801b4b6:	fa5f f28c 	uxtb.w	r2, ip
 801b4ba:	b2c0      	uxtb	r0, r0
 801b4bc:	fb12 f201 	smulbb	r2, r2, r1
 801b4c0:	fb03 2300 	mla	r3, r3, r0, r2
 801b4c4:	b29b      	uxth	r3, r3
 801b4c6:	1c5a      	adds	r2, r3, #1
 801b4c8:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801b4cc:	787a      	ldrb	r2, [r7, #1]
 801b4ce:	fb12 f200 	smulbb	r2, r2, r0
 801b4d2:	121b      	asrs	r3, r3, #8
 801b4d4:	703b      	strb	r3, [r7, #0]
 801b4d6:	f3cc 2307 	ubfx	r3, ip, #8, #8
 801b4da:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 801b4de:	fb03 2301 	mla	r3, r3, r1, r2
 801b4e2:	b29b      	uxth	r3, r3
 801b4e4:	1c5a      	adds	r2, r3, #1
 801b4e6:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801b4ea:	121b      	asrs	r3, r3, #8
 801b4ec:	707b      	strb	r3, [r7, #1]
 801b4ee:	78bb      	ldrb	r3, [r7, #2]
 801b4f0:	fb13 f000 	smulbb	r0, r3, r0
 801b4f4:	fb0c 0c01 	mla	ip, ip, r1, r0
 801b4f8:	fa1f fc8c 	uxth.w	ip, ip
 801b4fc:	f10c 0301 	add.w	r3, ip, #1
 801b500:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801b504:	ea4f 2c2c 	mov.w	ip, ip, asr #8
 801b508:	f887 c002 	strb.w	ip, [r7, #2]
 801b50c:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801b50e:	3703      	adds	r7, #3
 801b510:	441d      	add	r5, r3
 801b512:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801b514:	441e      	add	r6, r3
 801b516:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b518:	3b01      	subs	r3, #1
 801b51a:	9318      	str	r3, [sp, #96]	; 0x60
 801b51c:	e69f      	b.n	801b25e <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 801b51e:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801b520:	441d      	add	r5, r3
 801b522:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801b524:	441e      	add	r6, r3
 801b526:	9b07      	ldr	r3, [sp, #28]
 801b528:	3b01      	subs	r3, #1
 801b52a:	9307      	str	r3, [sp, #28]
 801b52c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b52e:	3303      	adds	r3, #3
 801b530:	930a      	str	r3, [sp, #40]	; 0x28
 801b532:	e674      	b.n	801b21e <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b534:	d025      	beq.n	801b582 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
 801b536:	9b07      	ldr	r3, [sp, #28]
 801b538:	9831      	ldr	r0, [sp, #196]	; 0xc4
 801b53a:	3b01      	subs	r3, #1
 801b53c:	fb00 5003 	mla	r0, r0, r3, r5
 801b540:	1400      	asrs	r0, r0, #16
 801b542:	f53f ae89 	bmi.w	801b258 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801b546:	3901      	subs	r1, #1
 801b548:	4288      	cmp	r0, r1
 801b54a:	f6bf ae85 	bge.w	801b258 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801b54e:	9932      	ldr	r1, [sp, #200]	; 0xc8
 801b550:	fb01 6303 	mla	r3, r1, r3, r6
 801b554:	141b      	asrs	r3, r3, #16
 801b556:	f53f ae7f 	bmi.w	801b258 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801b55a:	3a01      	subs	r2, #1
 801b55c:	4293      	cmp	r3, r2
 801b55e:	f6bf ae7b 	bge.w	801b258 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801b562:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b564:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801b568:	f103 0e03 	add.w	lr, r3, #3
 801b56c:	f1bb 0f00 	cmp.w	fp, #0
 801b570:	dc6e      	bgt.n	801b650 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 801b572:	9b07      	ldr	r3, [sp, #28]
 801b574:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801b578:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b57a:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801b57e:	4423      	add	r3, r4
 801b580:	930a      	str	r3, [sp, #40]	; 0x28
 801b582:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801b584:	2b00      	cmp	r3, #0
 801b586:	f340 81ab 	ble.w	801b8e0 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73c>
 801b58a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b58e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801b590:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801b594:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801b598:	eef0 6a48 	vmov.f32	s13, s16
 801b59c:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801b5a0:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801b5a4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b5a8:	ee16 5a90 	vmov	r5, s13
 801b5ac:	eef0 6a68 	vmov.f32	s13, s17
 801b5b0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b5b4:	ee16 6a90 	vmov	r6, s13
 801b5b8:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801b5bc:	ee69 7a27 	vmul.f32	s15, s18, s15
 801b5c0:	ee37 8a48 	vsub.f32	s16, s14, s16
 801b5c4:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801b5c8:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801b5cc:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801b5d0:	ee18 2a10 	vmov	r2, s16
 801b5d4:	eeb0 8a47 	vmov.f32	s16, s14
 801b5d8:	fb92 f3f3 	sdiv	r3, r2, r3
 801b5dc:	ee18 2a90 	vmov	r2, s17
 801b5e0:	9331      	str	r3, [sp, #196]	; 0xc4
 801b5e2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801b5e4:	eef0 8a67 	vmov.f32	s17, s15
 801b5e8:	fb92 f3f3 	sdiv	r3, r2, r3
 801b5ec:	9332      	str	r3, [sp, #200]	; 0xc8
 801b5ee:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801b5f0:	9a19      	ldr	r2, [sp, #100]	; 0x64
 801b5f2:	3b01      	subs	r3, #1
 801b5f4:	9317      	str	r3, [sp, #92]	; 0x5c
 801b5f6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801b5f8:	bf08      	it	eq
 801b5fa:	4613      	moveq	r3, r2
 801b5fc:	9307      	str	r3, [sp, #28]
 801b5fe:	e600      	b.n	801b202 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801b600:	f1bc 0f00 	cmp.w	ip, #0
 801b604:	f43f ae6e 	beq.w	801b2e4 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 801b608:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801b60c:	9308      	str	r3, [sp, #32]
 801b60e:	0e1b      	lsrs	r3, r3, #24
 801b610:	9311      	str	r3, [sp, #68]	; 0x44
 801b612:	e667      	b.n	801b2e4 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 801b614:	f112 0801 	adds.w	r8, r2, #1
 801b618:	f53f af78 	bmi.w	801b50c <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801b61c:	45c6      	cmp	lr, r8
 801b61e:	f6ff af75 	blt.w	801b50c <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801b622:	f110 0801 	adds.w	r8, r0, #1
 801b626:	f53f af71 	bmi.w	801b50c <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801b62a:	4543      	cmp	r3, r8
 801b62c:	f6ff af6e 	blt.w	801b50c <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801b630:	9c1a      	ldr	r4, [sp, #104]	; 0x68
 801b632:	b21b      	sxth	r3, r3
 801b634:	9201      	str	r2, [sp, #4]
 801b636:	9300      	str	r3, [sp, #0]
 801b638:	fa0f f38e 	sxth.w	r3, lr
 801b63c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b63e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 801b642:	e9cd c404 	strd	ip, r4, [sp, #16]
 801b646:	4639      	mov	r1, r7
 801b648:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801b64a:	f7ff fc53 	bl	801aef4 <_ZNK8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKmssiihhh>
 801b64e:	e75d      	b.n	801b50c <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801b650:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 801b652:	142f      	asrs	r7, r5, #16
 801b654:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b656:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801b65a:	f9b3 2008 	ldrsh.w	r2, [r3, #8]
 801b65e:	1433      	asrs	r3, r6, #16
 801b660:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801b664:	fb02 7303 	mla	r3, r2, r3, r7
 801b668:	eb04 0783 	add.w	r7, r4, r3, lsl #2
 801b66c:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 801b670:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801b674:	2900      	cmp	r1, #0
 801b676:	f000 812a 	beq.w	801b8ce <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72a>
 801b67a:	687c      	ldr	r4, [r7, #4]
 801b67c:	940e      	str	r4, [sp, #56]	; 0x38
 801b67e:	0e24      	lsrs	r4, r4, #24
 801b680:	9415      	str	r4, [sp, #84]	; 0x54
 801b682:	b178      	cbz	r0, 801b6a4 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x500>
 801b684:	f102 4280 	add.w	r2, r2, #1073741824	; 0x40000000
 801b688:	3a01      	subs	r2, #1
 801b68a:	0092      	lsls	r2, r2, #2
 801b68c:	3204      	adds	r2, #4
 801b68e:	eb07 0802 	add.w	r8, r7, r2
 801b692:	58ba      	ldr	r2, [r7, r2]
 801b694:	9209      	str	r2, [sp, #36]	; 0x24
 801b696:	0e12      	lsrs	r2, r2, #24
 801b698:	9212      	str	r2, [sp, #72]	; 0x48
 801b69a:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801b69e:	920f      	str	r2, [sp, #60]	; 0x3c
 801b6a0:	0e12      	lsrs	r2, r2, #24
 801b6a2:	9216      	str	r2, [sp, #88]	; 0x58
 801b6a4:	b289      	uxth	r1, r1
 801b6a6:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b6a8:	b280      	uxth	r0, r0
 801b6aa:	fb01 f900 	mul.w	r9, r1, r0
 801b6ae:	0109      	lsls	r1, r1, #4
 801b6b0:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801b6b4:	eba1 0809 	sub.w	r8, r1, r9
 801b6b8:	f5c1 7280 	rsb	r2, r1, #256	; 0x100
 801b6bc:	9915      	ldr	r1, [sp, #84]	; 0x54
 801b6be:	b280      	uxth	r0, r0
 801b6c0:	fa1f f888 	uxth.w	r8, r8
 801b6c4:	1a12      	subs	r2, r2, r0
 801b6c6:	fb08 f101 	mul.w	r1, r8, r1
 801b6ca:	b292      	uxth	r2, r2
 801b6cc:	fb02 110c 	mla	r1, r2, ip, r1
 801b6d0:	fb00 1104 	mla	r1, r0, r4, r1
 801b6d4:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801b6d6:	fb09 1104 	mla	r1, r9, r4, r1
 801b6da:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801b6de:	2900      	cmp	r1, #0
 801b6e0:	f000 80ec 	beq.w	801b8bc <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
 801b6e4:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801b6e8:	d019      	beq.n	801b71e <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57a>
 801b6ea:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801b6ee:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b6f2:	fb0c fa0a 	mul.w	sl, ip, sl
 801b6f6:	fb0c fc03 	mul.w	ip, ip, r3
 801b6fa:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b6fe:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b702:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801b706:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b70a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801b70e:	4453      	add	r3, sl
 801b710:	0a3f      	lsrs	r7, r7, #8
 801b712:	0a1b      	lsrs	r3, r3, #8
 801b714:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801b718:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b71c:	433b      	orrs	r3, r7
 801b71e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801b720:	2cff      	cmp	r4, #255	; 0xff
 801b722:	d020      	beq.n	801b766 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c2>
 801b724:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801b726:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b72a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801b72c:	4367      	muls	r7, r4
 801b72e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801b730:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b734:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b738:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801b73a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b73e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b742:	fb04 fa0a 	mul.w	sl, r4, sl
 801b746:	44bc      	add	ip, r7
 801b748:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b74c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b750:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b754:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b758:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b75c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b760:	ea4c 040a 	orr.w	r4, ip, sl
 801b764:	940e      	str	r4, [sp, #56]	; 0x38
 801b766:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b768:	2cff      	cmp	r4, #255	; 0xff
 801b76a:	d020      	beq.n	801b7ae <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60a>
 801b76c:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801b76e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b772:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b774:	4367      	muls	r7, r4
 801b776:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801b778:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b77c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b780:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b782:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b786:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b78a:	fb04 fa0a 	mul.w	sl, r4, sl
 801b78e:	44bc      	add	ip, r7
 801b790:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b794:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b798:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b79c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b7a0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b7a4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b7a8:	ea4c 040a 	orr.w	r4, ip, sl
 801b7ac:	9409      	str	r4, [sp, #36]	; 0x24
 801b7ae:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801b7b0:	2cff      	cmp	r4, #255	; 0xff
 801b7b2:	d020      	beq.n	801b7f6 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x652>
 801b7b4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801b7b6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b7ba:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801b7bc:	4367      	muls	r7, r4
 801b7be:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801b7c0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b7c4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b7c8:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801b7ca:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b7ce:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b7d2:	fb04 fa0a 	mul.w	sl, r4, sl
 801b7d6:	44bc      	add	ip, r7
 801b7d8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b7dc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b7e0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b7e4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b7e8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b7ec:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b7f0:	ea4c 040a 	orr.w	r4, ip, sl
 801b7f4:	940f      	str	r4, [sp, #60]	; 0x3c
 801b7f6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801b7f8:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801b7fc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b800:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b804:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801b806:	fb08 f707 	mul.w	r7, r8, r7
 801b80a:	fb02 770c 	mla	r7, r2, ip, r7
 801b80e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b812:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801b814:	fb00 770c 	mla	r7, r0, ip, r7
 801b818:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b81c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801b81e:	fb09 770c 	mla	r7, r9, ip, r7
 801b822:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801b826:	fb08 f80c 	mul.w	r8, r8, ip
 801b82a:	0a3f      	lsrs	r7, r7, #8
 801b82c:	fb02 8303 	mla	r3, r2, r3, r8
 801b830:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801b832:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801b836:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801b83a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b83c:	fb00 330a 	mla	r3, r0, sl, r3
 801b840:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801b844:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801b846:	fb09 3c0c 	mla	ip, r9, ip, r3
 801b84a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801b84c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b850:	434b      	muls	r3, r1
 801b852:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801b856:	1c59      	adds	r1, r3, #1
 801b858:	ea47 070c 	orr.w	r7, r7, ip
 801b85c:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801b860:	f81e 3c03 	ldrb.w	r3, [lr, #-3]
 801b864:	b2fa      	uxtb	r2, r7
 801b866:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801b86a:	fb12 f200 	smulbb	r2, r2, r0
 801b86e:	b2c9      	uxtb	r1, r1
 801b870:	fb03 2301 	mla	r3, r3, r1, r2
 801b874:	b29b      	uxth	r3, r3
 801b876:	1c5a      	adds	r2, r3, #1
 801b878:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801b87c:	f81e 2c02 	ldrb.w	r2, [lr, #-2]
 801b880:	fb12 f201 	smulbb	r2, r2, r1
 801b884:	121b      	asrs	r3, r3, #8
 801b886:	f80e 3c03 	strb.w	r3, [lr, #-3]
 801b88a:	f3c7 2307 	ubfx	r3, r7, #8, #8
 801b88e:	0c3f      	lsrs	r7, r7, #16
 801b890:	fb03 2300 	mla	r3, r3, r0, r2
 801b894:	b29b      	uxth	r3, r3
 801b896:	1c5a      	adds	r2, r3, #1
 801b898:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801b89c:	121b      	asrs	r3, r3, #8
 801b89e:	f80e 3c02 	strb.w	r3, [lr, #-2]
 801b8a2:	f81e 3c01 	ldrb.w	r3, [lr, #-1]
 801b8a6:	fb13 f101 	smulbb	r1, r3, r1
 801b8aa:	fb07 1700 	mla	r7, r7, r0, r1
 801b8ae:	b2bf      	uxth	r7, r7
 801b8b0:	1c79      	adds	r1, r7, #1
 801b8b2:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801b8b6:	123f      	asrs	r7, r7, #8
 801b8b8:	f80e 7c01 	strb.w	r7, [lr, #-1]
 801b8bc:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801b8be:	f10e 0e03 	add.w	lr, lr, #3
 801b8c2:	f10b 3bff 	add.w	fp, fp, #4294967295
 801b8c6:	441d      	add	r5, r3
 801b8c8:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801b8ca:	441e      	add	r6, r3
 801b8cc:	e64e      	b.n	801b56c <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 801b8ce:	2800      	cmp	r0, #0
 801b8d0:	f43f aee8 	beq.w	801b6a4 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x500>
 801b8d4:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 801b8d8:	9209      	str	r2, [sp, #36]	; 0x24
 801b8da:	0e12      	lsrs	r2, r2, #24
 801b8dc:	9212      	str	r2, [sp, #72]	; 0x48
 801b8de:	e6e1      	b.n	801b6a4 <_ZN8touchgfx8LCD24bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x500>
 801b8e0:	b01d      	add	sp, #116	; 0x74
 801b8e2:	ecbd 8b08 	vpop	{d8-d11}
 801b8e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801b8ec <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh>:
 801b8ec:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b8f0:	e9dd 540d 	ldrd	r5, r4, [sp, #52]	; 0x34
 801b8f4:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801b8f8:	fb04 5603 	mla	r6, r4, r3, r5
 801b8fc:	2c00      	cmp	r4, #0
 801b8fe:	f89d 003c 	ldrb.w	r0, [sp, #60]	; 0x3c
 801b902:	f89d 7040 	ldrb.w	r7, [sp, #64]	; 0x40
 801b906:	eb02 0c86 	add.w	ip, r2, r6, lsl #2
 801b90a:	db36      	blt.n	801b97a <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x8e>
 801b90c:	45a6      	cmp	lr, r4
 801b90e:	dd34      	ble.n	801b97a <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x8e>
 801b910:	2d00      	cmp	r5, #0
 801b912:	db30      	blt.n	801b976 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x8a>
 801b914:	42ab      	cmp	r3, r5
 801b916:	dd2e      	ble.n	801b976 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x8a>
 801b918:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 801b91c:	1c6e      	adds	r6, r5, #1
 801b91e:	d42f      	bmi.n	801b980 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x94>
 801b920:	42b3      	cmp	r3, r6
 801b922:	dd2d      	ble.n	801b980 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x94>
 801b924:	b370      	cbz	r0, 801b984 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x98>
 801b926:	f8dc 6004 	ldr.w	r6, [ip, #4]
 801b92a:	3401      	adds	r4, #1
 801b92c:	d42e      	bmi.n	801b98c <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0xa0>
 801b92e:	45a6      	cmp	lr, r4
 801b930:	dd2c      	ble.n	801b98c <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0xa0>
 801b932:	b377      	cbz	r7, 801b992 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0xa6>
 801b934:	2d00      	cmp	r5, #0
 801b936:	db27      	blt.n	801b988 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x9c>
 801b938:	42ab      	cmp	r3, r5
 801b93a:	dd25      	ble.n	801b988 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x9c>
 801b93c:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801b940:	3501      	adds	r5, #1
 801b942:	d429      	bmi.n	801b998 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0xac>
 801b944:	42ab      	cmp	r3, r5
 801b946:	dd27      	ble.n	801b998 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0xac>
 801b948:	b340      	cbz	r0, 801b99c <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0xb0>
 801b94a:	3301      	adds	r3, #1
 801b94c:	f85c 3023 	ldr.w	r3, [ip, r3, lsl #2]
 801b950:	280f      	cmp	r0, #15
 801b952:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 801b956:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801b95a:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801b95e:	ea4f 6813 	mov.w	r8, r3, lsr #24
 801b962:	d801      	bhi.n	801b968 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x7c>
 801b964:	2f0f      	cmp	r7, #15
 801b966:	d91b      	bls.n	801b9a0 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0xb4>
 801b968:	4b7e      	ldr	r3, [pc, #504]	; (801bb64 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x278>)
 801b96a:	f240 115b 	movw	r1, #347	; 0x15b
 801b96e:	4a7e      	ldr	r2, [pc, #504]	; (801bb68 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x27c>)
 801b970:	487e      	ldr	r0, [pc, #504]	; (801bb6c <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x280>)
 801b972:	f004 f931 	bl	801fbd8 <__assert_func>
 801b976:	2200      	movs	r2, #0
 801b978:	e7d0      	b.n	801b91c <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x30>
 801b97a:	2600      	movs	r6, #0
 801b97c:	4632      	mov	r2, r6
 801b97e:	e7d4      	b.n	801b92a <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x3e>
 801b980:	2600      	movs	r6, #0
 801b982:	e7d2      	b.n	801b92a <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x3e>
 801b984:	4606      	mov	r6, r0
 801b986:	e7d0      	b.n	801b92a <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x3e>
 801b988:	2400      	movs	r4, #0
 801b98a:	e7d9      	b.n	801b940 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x54>
 801b98c:	2300      	movs	r3, #0
 801b98e:	461c      	mov	r4, r3
 801b990:	e7de      	b.n	801b950 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x64>
 801b992:	463b      	mov	r3, r7
 801b994:	463c      	mov	r4, r7
 801b996:	e7db      	b.n	801b950 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x64>
 801b998:	2300      	movs	r3, #0
 801b99a:	e7d9      	b.n	801b950 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x64>
 801b99c:	4603      	mov	r3, r0
 801b99e:	e7d7      	b.n	801b950 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x64>
 801b9a0:	b280      	uxth	r0, r0
 801b9a2:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801b9a6:	b2bf      	uxth	r7, r7
 801b9a8:	fb00 fe07 	mul.w	lr, r0, r7
 801b9ac:	ea4f 1000 	mov.w	r0, r0, lsl #4
 801b9b0:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 801b9b4:	eba0 0c0e 	sub.w	ip, r0, lr
 801b9b8:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 801b9bc:	b2bf      	uxth	r7, r7
 801b9be:	fa1f fc8c 	uxth.w	ip, ip
 801b9c2:	eba0 0507 	sub.w	r5, r0, r7
 801b9c6:	fb0c f00a 	mul.w	r0, ip, sl
 801b9ca:	b2ad      	uxth	r5, r5
 801b9cc:	fb05 000b 	mla	r0, r5, fp, r0
 801b9d0:	fb07 0009 	mla	r0, r7, r9, r0
 801b9d4:	fb0e 0008 	mla	r0, lr, r8, r0
 801b9d8:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801b9dc:	9001      	str	r0, [sp, #4]
 801b9de:	d018      	beq.n	801ba12 <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x126>
 801b9e0:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801b9e4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801b9e8:	fb0b f000 	mul.w	r0, fp, r0
 801b9ec:	fb0b fb02 	mul.w	fp, fp, r2
 801b9f0:	0a02      	lsrs	r2, r0, #8
 801b9f2:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801b9f6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801b9fa:	4402      	add	r2, r0
 801b9fc:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 801ba00:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801ba04:	0a12      	lsrs	r2, r2, #8
 801ba06:	0a00      	lsrs	r0, r0, #8
 801ba08:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801ba0c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801ba10:	4302      	orrs	r2, r0
 801ba12:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801ba16:	d01a      	beq.n	801ba4e <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x162>
 801ba18:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 801ba1c:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801ba20:	fb0a f000 	mul.w	r0, sl, r0
 801ba24:	fb0a fa06 	mul.w	sl, sl, r6
 801ba28:	0a06      	lsrs	r6, r0, #8
 801ba2a:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801ba2e:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801ba32:	4406      	add	r6, r0
 801ba34:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 801ba38:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 801ba3c:	0a36      	lsrs	r6, r6, #8
 801ba3e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ba42:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801ba46:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ba4a:	ea46 060a 	orr.w	r6, r6, sl
 801ba4e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801ba52:	d01b      	beq.n	801ba8c <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x1a0>
 801ba54:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801ba58:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801ba5c:	fb09 fa0a 	mul.w	sl, r9, sl
 801ba60:	fb09 f004 	mul.w	r0, r9, r4
 801ba64:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801ba68:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801ba6c:	f500 7980 	add.w	r9, r0, #256	; 0x100
 801ba70:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801ba74:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 801ba78:	4454      	add	r4, sl
 801ba7a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ba7e:	0a24      	lsrs	r4, r4, #8
 801ba80:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801ba84:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801ba88:	ea44 0409 	orr.w	r4, r4, r9
 801ba8c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801ba90:	d01b      	beq.n	801baca <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh+0x1de>
 801ba92:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 801ba96:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801ba9a:	fb08 f909 	mul.w	r9, r8, r9
 801ba9e:	fb08 f003 	mul.w	r0, r8, r3
 801baa2:	ea4f 2319 	mov.w	r3, r9, lsr #8
 801baa6:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 801baaa:	f500 7880 	add.w	r8, r0, #256	; 0x100
 801baae:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801bab2:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 801bab6:	444b      	add	r3, r9
 801bab8:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801babc:	0a1b      	lsrs	r3, r3, #8
 801babe:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801bac2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801bac6:	ea43 0308 	orr.w	r3, r3, r8
 801baca:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 801bace:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801bad2:	f002 18ff 	and.w	r8, r2, #16711935	; 0xff00ff
 801bad6:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801bada:	fb0c f000 	mul.w	r0, ip, r0
 801bade:	fb0c f606 	mul.w	r6, ip, r6
 801bae2:	fb05 0808 	mla	r8, r5, r8, r0
 801bae6:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 801baea:	fb05 6502 	mla	r5, r5, r2, r6
 801baee:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801baf2:	fb07 8800 	mla	r8, r7, r0, r8
 801baf6:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 801bafa:	fb07 5704 	mla	r7, r7, r4, r5
 801bafe:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801bb02:	fb0e 8000 	mla	r0, lr, r0, r8
 801bb06:	780a      	ldrb	r2, [r1, #0]
 801bb08:	fb0e 7e03 	mla	lr, lr, r3, r7
 801bb0c:	9b01      	ldr	r3, [sp, #4]
 801bb0e:	0a00      	lsrs	r0, r0, #8
 801bb10:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801bb14:	43db      	mvns	r3, r3
 801bb16:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801bb1a:	b2db      	uxtb	r3, r3
 801bb1c:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801bb20:	ea40 0e0e 	orr.w	lr, r0, lr
 801bb24:	fb02 f003 	mul.w	r0, r2, r3
 801bb28:	1c42      	adds	r2, r0, #1
 801bb2a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801bb2e:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801bb32:	700a      	strb	r2, [r1, #0]
 801bb34:	784a      	ldrb	r2, [r1, #1]
 801bb36:	435a      	muls	r2, r3
 801bb38:	1c50      	adds	r0, r2, #1
 801bb3a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801bb3e:	ea4f 221e 	mov.w	r2, lr, lsr #8
 801bb42:	ea4f 4e1e 	mov.w	lr, lr, lsr #16
 801bb46:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801bb4a:	704a      	strb	r2, [r1, #1]
 801bb4c:	788a      	ldrb	r2, [r1, #2]
 801bb4e:	4353      	muls	r3, r2
 801bb50:	1c5a      	adds	r2, r3, #1
 801bb52:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801bb56:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801bb5a:	f881 e002 	strb.w	lr, [r1, #2]
 801bb5e:	b003      	add	sp, #12
 801bb60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bb64:	08024e84 	.word	0x08024e84
 801bb68:	0802529a 	.word	0x0802529a
 801bb6c:	08024e51 	.word	0x08024e51

0801bb70 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bb70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bb74:	ed2d 8b08 	vpush	{d8-d11}
 801bb78:	b099      	sub	sp, #100	; 0x64
 801bb7a:	eeb0 aa40 	vmov.f32	s20, s0
 801bb7e:	eef0 9a60 	vmov.f32	s19, s1
 801bb82:	9017      	str	r0, [sp, #92]	; 0x5c
 801bb84:	eeb0 9a41 	vmov.f32	s18, s2
 801bb88:	9306      	str	r3, [sp, #24]
 801bb8a:	eeb0 8a62 	vmov.f32	s16, s5
 801bb8e:	eef0 8a43 	vmov.f32	s17, s6
 801bb92:	eef0 ba44 	vmov.f32	s23, s8
 801bb96:	eeb0 ba64 	vmov.f32	s22, s9
 801bb9a:	eef0 aa45 	vmov.f32	s21, s10
 801bb9e:	e9cd 1215 	strd	r1, r2, [sp, #84]	; 0x54
 801bba2:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801bba4:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 801bba8:	6850      	ldr	r0, [r2, #4]
 801bbaa:	6812      	ldr	r2, [r2, #0]
 801bbac:	fb00 1303 	mla	r3, r0, r3, r1
 801bbb0:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801bbb4:	18d3      	adds	r3, r2, r3
 801bbb6:	9309      	str	r3, [sp, #36]	; 0x24
 801bbb8:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801bbba:	e9dd 562b 	ldrd	r5, r6, [sp, #172]	; 0xac
 801bbbe:	681b      	ldr	r3, [r3, #0]
 801bbc0:	930e      	str	r3, [sp, #56]	; 0x38
 801bbc2:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801bbc4:	2b00      	cmp	r3, #0
 801bbc6:	dc03      	bgt.n	801bbd0 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801bbc8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801bbca:	2b00      	cmp	r3, #0
 801bbcc:	f340 8360 	ble.w	801c290 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x720>
 801bbd0:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801bbd2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801bbd6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801bbda:	1e48      	subs	r0, r1, #1
 801bbdc:	1e57      	subs	r7, r2, #1
 801bbde:	9b06      	ldr	r3, [sp, #24]
 801bbe0:	2b00      	cmp	r3, #0
 801bbe2:	f340 817b 	ble.w	801bedc <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801bbe6:	ea5f 4c25 	movs.w	ip, r5, asr #16
 801bbea:	ea4f 4326 	mov.w	r3, r6, asr #16
 801bbee:	d406      	bmi.n	801bbfe <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801bbf0:	4584      	cmp	ip, r0
 801bbf2:	da04      	bge.n	801bbfe <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801bbf4:	2b00      	cmp	r3, #0
 801bbf6:	db02      	blt.n	801bbfe <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801bbf8:	42bb      	cmp	r3, r7
 801bbfa:	f2c0 8170 	blt.w	801bede <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801bbfe:	f11c 0c01 	adds.w	ip, ip, #1
 801bc02:	f100 8160 	bmi.w	801bec6 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801bc06:	4561      	cmp	r1, ip
 801bc08:	f2c0 815d 	blt.w	801bec6 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801bc0c:	3301      	adds	r3, #1
 801bc0e:	f100 815a 	bmi.w	801bec6 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801bc12:	429a      	cmp	r2, r3
 801bc14:	f2c0 8157 	blt.w	801bec6 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801bc18:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801bc1c:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801bc1e:	f1b8 0f00 	cmp.w	r8, #0
 801bc22:	f340 8179 	ble.w	801bf18 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
 801bc26:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 801bc28:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801bc2c:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801bc2e:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801bc32:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801bc36:	142a      	asrs	r2, r5, #16
 801bc38:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801bc3c:	689b      	ldr	r3, [r3, #8]
 801bc3e:	f100 81be 	bmi.w	801bfbe <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801bc42:	f103 39ff 	add.w	r9, r3, #4294967295
 801bc46:	454a      	cmp	r2, r9
 801bc48:	f280 81b9 	bge.w	801bfbe <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801bc4c:	f1bc 0f00 	cmp.w	ip, #0
 801bc50:	f2c0 81b5 	blt.w	801bfbe <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801bc54:	f10e 39ff 	add.w	r9, lr, #4294967295
 801bc58:	45cc      	cmp	ip, r9
 801bc5a:	f280 81b0 	bge.w	801bfbe <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801bc5e:	b21b      	sxth	r3, r3
 801bc60:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801bc62:	fb0c 2203 	mla	r2, ip, r3, r2
 801bc66:	eb04 0982 	add.w	r9, r4, r2, lsl #2
 801bc6a:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 801bc6e:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801bc72:	2900      	cmp	r1, #0
 801bc74:	f000 8197 	beq.w	801bfa6 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x436>
 801bc78:	f8d9 4004 	ldr.w	r4, [r9, #4]
 801bc7c:	940a      	str	r4, [sp, #40]	; 0x28
 801bc7e:	0e24      	lsrs	r4, r4, #24
 801bc80:	9411      	str	r4, [sp, #68]	; 0x44
 801bc82:	b180      	cbz	r0, 801bca6 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x136>
 801bc84:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801bc88:	3b01      	subs	r3, #1
 801bc8a:	009b      	lsls	r3, r3, #2
 801bc8c:	3304      	adds	r3, #4
 801bc8e:	eb09 0c03 	add.w	ip, r9, r3
 801bc92:	f859 3003 	ldr.w	r3, [r9, r3]
 801bc96:	9307      	str	r3, [sp, #28]
 801bc98:	0e1b      	lsrs	r3, r3, #24
 801bc9a:	930f      	str	r3, [sp, #60]	; 0x3c
 801bc9c:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801bca0:	930b      	str	r3, [sp, #44]	; 0x2c
 801bca2:	0e1b      	lsrs	r3, r3, #24
 801bca4:	9312      	str	r3, [sp, #72]	; 0x48
 801bca6:	b289      	uxth	r1, r1
 801bca8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801bcaa:	b280      	uxth	r0, r0
 801bcac:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801bcae:	fb01 fa00 	mul.w	sl, r1, r0
 801bcb2:	0109      	lsls	r1, r1, #4
 801bcb4:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 801bcb8:	eba1 090a 	sub.w	r9, r1, sl
 801bcbc:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 801bcc0:	b280      	uxth	r0, r0
 801bcc2:	fa1f f989 	uxth.w	r9, r9
 801bcc6:	1a09      	subs	r1, r1, r0
 801bcc8:	fb09 f303 	mul.w	r3, r9, r3
 801bccc:	b289      	uxth	r1, r1
 801bcce:	fb01 330e 	mla	r3, r1, lr, r3
 801bcd2:	fb00 3304 	mla	r3, r0, r4, r3
 801bcd6:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801bcd8:	fb0a 3304 	mla	r3, sl, r4, r3
 801bcdc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801bce0:	2b00      	cmp	r3, #0
 801bce2:	f000 80e8 	beq.w	801beb6 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 801bce6:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801bcea:	d01b      	beq.n	801bd24 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801bcec:	f002 1bff 	and.w	fp, r2, #16711935	; 0xff00ff
 801bcf0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801bcf4:	fb0e fb0b 	mul.w	fp, lr, fp
 801bcf8:	fb0e fe02 	mul.w	lr, lr, r2
 801bcfc:	ea4f 221b 	mov.w	r2, fp, lsr #8
 801bd00:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801bd04:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801bd08:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801bd0c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801bd10:	445a      	add	r2, fp
 801bd12:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bd16:	0a12      	lsrs	r2, r2, #8
 801bd18:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801bd1c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801bd20:	ea42 020c 	orr.w	r2, r2, ip
 801bd24:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801bd26:	2cff      	cmp	r4, #255	; 0xff
 801bd28:	d021      	beq.n	801bd6e <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801bd2a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801bd2c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801bd30:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801bd32:	fb04 fc0c 	mul.w	ip, r4, ip
 801bd36:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801bd38:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 801bd3c:	f404 4b7f 	and.w	fp, r4, #65280	; 0xff00
 801bd40:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801bd42:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801bd46:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801bd4a:	fb04 fb0b 	mul.w	fp, r4, fp
 801bd4e:	44e6      	add	lr, ip
 801bd50:	f50b 7c80 	add.w	ip, fp, #256	; 0x100
 801bd54:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801bd58:	eb0c 2b1b 	add.w	fp, ip, fp, lsr #8
 801bd5c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801bd60:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 801bd64:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 801bd68:	ea4e 040b 	orr.w	r4, lr, fp
 801bd6c:	940a      	str	r4, [sp, #40]	; 0x28
 801bd6e:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801bd70:	2cff      	cmp	r4, #255	; 0xff
 801bd72:	d021      	beq.n	801bdb8 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801bd74:	9c07      	ldr	r4, [sp, #28]
 801bd76:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801bd7a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801bd7c:	fb04 fc0c 	mul.w	ip, r4, ip
 801bd80:	9c07      	ldr	r4, [sp, #28]
 801bd82:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 801bd86:	f404 4b7f 	and.w	fp, r4, #65280	; 0xff00
 801bd8a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801bd8c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801bd90:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801bd94:	fb04 fb0b 	mul.w	fp, r4, fp
 801bd98:	44e6      	add	lr, ip
 801bd9a:	f50b 7c80 	add.w	ip, fp, #256	; 0x100
 801bd9e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801bda2:	eb0c 2b1b 	add.w	fp, ip, fp, lsr #8
 801bda6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801bdaa:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 801bdae:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 801bdb2:	ea4e 040b 	orr.w	r4, lr, fp
 801bdb6:	9407      	str	r4, [sp, #28]
 801bdb8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801bdba:	2cff      	cmp	r4, #255	; 0xff
 801bdbc:	d021      	beq.n	801be02 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801bdbe:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801bdc0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801bdc4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801bdc6:	fb04 fc0c 	mul.w	ip, r4, ip
 801bdca:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801bdcc:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 801bdd0:	f404 4b7f 	and.w	fp, r4, #65280	; 0xff00
 801bdd4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801bdd6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801bdda:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801bdde:	fb04 fb0b 	mul.w	fp, r4, fp
 801bde2:	44e6      	add	lr, ip
 801bde4:	f50b 7c80 	add.w	ip, fp, #256	; 0x100
 801bde8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801bdec:	eb0c 2b1b 	add.w	fp, ip, fp, lsr #8
 801bdf0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801bdf4:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 801bdf8:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 801bdfc:	ea4e 040b 	orr.w	r4, lr, fp
 801be00:	940b      	str	r4, [sp, #44]	; 0x2c
 801be02:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801be04:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801be08:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801be0c:	2bff      	cmp	r3, #255	; 0xff
 801be0e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801be12:	9c07      	ldr	r4, [sp, #28]
 801be14:	fb09 fc0c 	mul.w	ip, r9, ip
 801be18:	fb01 cc0e 	mla	ip, r1, lr, ip
 801be1c:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801be20:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801be22:	fb00 cc0e 	mla	ip, r0, lr, ip
 801be26:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801be2a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801be2c:	fb0a cc0e 	mla	ip, sl, lr, ip
 801be30:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801be34:	fb09 f90e 	mul.w	r9, r9, lr
 801be38:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801be3c:	fb01 9202 	mla	r2, r1, r2, r9
 801be40:	9907      	ldr	r1, [sp, #28]
 801be42:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801be46:	f401 4b7f 	and.w	fp, r1, #65280	; 0xff00
 801be4a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801be4c:	fb00 220b 	mla	r2, r0, fp, r2
 801be50:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 801be54:	fb0a 2a00 	mla	sl, sl, r0, r2
 801be58:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801be5c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801be60:	ea4c 0c0a 	orr.w	ip, ip, sl
 801be64:	fa5f f08c 	uxtb.w	r0, ip
 801be68:	f3cc 2107 	ubfx	r1, ip, #8, #8
 801be6c:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 801be70:	f000 80a2 	beq.w	801bfb8 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x448>
 801be74:	43db      	mvns	r3, r3
 801be76:	783a      	ldrb	r2, [r7, #0]
 801be78:	f897 a002 	ldrb.w	sl, [r7, #2]
 801be7c:	b2db      	uxtb	r3, r3
 801be7e:	fb02 fe03 	mul.w	lr, r2, r3
 801be82:	fb0a fa03 	mul.w	sl, sl, r3
 801be86:	f10e 0201 	add.w	r2, lr, #1
 801be8a:	eb02 221e 	add.w	r2, r2, lr, lsr #8
 801be8e:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801be92:	703a      	strb	r2, [r7, #0]
 801be94:	787a      	ldrb	r2, [r7, #1]
 801be96:	fb02 f003 	mul.w	r0, r2, r3
 801be9a:	f10a 0301 	add.w	r3, sl, #1
 801be9e:	1c42      	adds	r2, r0, #1
 801bea0:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 801bea4:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801bea8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801beac:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801beb0:	707a      	strb	r2, [r7, #1]
 801beb2:	f887 c002 	strb.w	ip, [r7, #2]
 801beb6:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801beb8:	3703      	adds	r7, #3
 801beba:	f108 38ff 	add.w	r8, r8, #4294967295
 801bebe:	441d      	add	r5, r3
 801bec0:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801bec2:	441e      	add	r6, r3
 801bec4:	e6ab      	b.n	801bc1e <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801bec6:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801bec8:	441d      	add	r5, r3
 801beca:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801becc:	441e      	add	r6, r3
 801bece:	9b06      	ldr	r3, [sp, #24]
 801bed0:	3b01      	subs	r3, #1
 801bed2:	9306      	str	r3, [sp, #24]
 801bed4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bed6:	3303      	adds	r3, #3
 801bed8:	9309      	str	r3, [sp, #36]	; 0x24
 801beda:	e680      	b.n	801bbde <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801bedc:	d024      	beq.n	801bf28 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b8>
 801bede:	9b06      	ldr	r3, [sp, #24]
 801bee0:	982d      	ldr	r0, [sp, #180]	; 0xb4
 801bee2:	3b01      	subs	r3, #1
 801bee4:	fb00 5003 	mla	r0, r0, r3, r5
 801bee8:	1400      	asrs	r0, r0, #16
 801beea:	f53f ae95 	bmi.w	801bc18 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801beee:	3901      	subs	r1, #1
 801bef0:	4288      	cmp	r0, r1
 801bef2:	f6bf ae91 	bge.w	801bc18 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801bef6:	992e      	ldr	r1, [sp, #184]	; 0xb8
 801bef8:	fb01 6303 	mla	r3, r1, r3, r6
 801befc:	141b      	asrs	r3, r3, #16
 801befe:	f53f ae8b 	bmi.w	801bc18 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801bf02:	3a01      	subs	r2, #1
 801bf04:	4293      	cmp	r3, r2
 801bf06:	f6bf ae87 	bge.w	801bc18 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801bf0a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bf0c:	f8dd b018 	ldr.w	fp, [sp, #24]
 801bf10:	1cdf      	adds	r7, r3, #3
 801bf12:	f1bb 0f00 	cmp.w	fp, #0
 801bf16:	dc6e      	bgt.n	801bff6 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801bf18:	9b06      	ldr	r3, [sp, #24]
 801bf1a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801bf1e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bf20:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801bf24:	4423      	add	r3, r4
 801bf26:	9309      	str	r3, [sp, #36]	; 0x24
 801bf28:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801bf2a:	2b00      	cmp	r3, #0
 801bf2c:	f340 81b0 	ble.w	801c290 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x720>
 801bf30:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801bf34:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801bf36:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801bf3a:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801bf3e:	eef0 6a48 	vmov.f32	s13, s16
 801bf42:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801bf46:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801bf4a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bf4e:	ee16 5a90 	vmov	r5, s13
 801bf52:	eef0 6a68 	vmov.f32	s13, s17
 801bf56:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bf5a:	ee16 6a90 	vmov	r6, s13
 801bf5e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801bf62:	ee69 7a27 	vmul.f32	s15, s18, s15
 801bf66:	ee37 8a48 	vsub.f32	s16, s14, s16
 801bf6a:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801bf6e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801bf72:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801bf76:	ee18 2a10 	vmov	r2, s16
 801bf7a:	eeb0 8a47 	vmov.f32	s16, s14
 801bf7e:	fb92 f3f3 	sdiv	r3, r2, r3
 801bf82:	ee18 2a90 	vmov	r2, s17
 801bf86:	932d      	str	r3, [sp, #180]	; 0xb4
 801bf88:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801bf8a:	eef0 8a67 	vmov.f32	s17, s15
 801bf8e:	fb92 f3f3 	sdiv	r3, r2, r3
 801bf92:	932e      	str	r3, [sp, #184]	; 0xb8
 801bf94:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801bf96:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801bf98:	3b01      	subs	r3, #1
 801bf9a:	9315      	str	r3, [sp, #84]	; 0x54
 801bf9c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801bf9e:	bf08      	it	eq
 801bfa0:	4613      	moveq	r3, r2
 801bfa2:	9306      	str	r3, [sp, #24]
 801bfa4:	e60d      	b.n	801bbc2 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801bfa6:	2800      	cmp	r0, #0
 801bfa8:	f43f ae7d 	beq.w	801bca6 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x136>
 801bfac:	f859 3023 	ldr.w	r3, [r9, r3, lsl #2]
 801bfb0:	9307      	str	r3, [sp, #28]
 801bfb2:	0e1b      	lsrs	r3, r3, #24
 801bfb4:	930f      	str	r3, [sp, #60]	; 0x3c
 801bfb6:	e676      	b.n	801bca6 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x136>
 801bfb8:	7038      	strb	r0, [r7, #0]
 801bfba:	7079      	strb	r1, [r7, #1]
 801bfbc:	e779      	b.n	801beb2 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801bfbe:	f112 0901 	adds.w	r9, r2, #1
 801bfc2:	f53f af78 	bmi.w	801beb6 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 801bfc6:	454b      	cmp	r3, r9
 801bfc8:	f6ff af75 	blt.w	801beb6 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 801bfcc:	f11c 0901 	adds.w	r9, ip, #1
 801bfd0:	f53f af71 	bmi.w	801beb6 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 801bfd4:	45ce      	cmp	lr, r9
 801bfd6:	f6ff af6e 	blt.w	801beb6 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 801bfda:	b21b      	sxth	r3, r3
 801bfdc:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801bfe0:	fa0f f28e 	sxth.w	r2, lr
 801bfe4:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801bfe8:	9200      	str	r2, [sp, #0]
 801bfea:	4639      	mov	r1, r7
 801bfec:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801bfee:	9817      	ldr	r0, [sp, #92]	; 0x5c
 801bff0:	f7ff fc7c 	bl	801b8ec <_ZNK8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKmssiihh>
 801bff4:	e75f      	b.n	801beb6 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 801bff6:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801bff8:	1429      	asrs	r1, r5, #16
 801bffa:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801bffc:	f3c5 3203 	ubfx	r2, r5, #12, #4
 801c000:	f9b3 c008 	ldrsh.w	ip, [r3, #8]
 801c004:	1433      	asrs	r3, r6, #16
 801c006:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801c00a:	fb0c 1303 	mla	r3, ip, r3, r1
 801c00e:	990e      	ldr	r1, [sp, #56]	; 0x38
 801c010:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801c014:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 801c018:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801c01c:	2a00      	cmp	r2, #0
 801c01e:	f000 8129 	beq.w	801c274 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 801c022:	684c      	ldr	r4, [r1, #4]
 801c024:	940c      	str	r4, [sp, #48]	; 0x30
 801c026:	0e24      	lsrs	r4, r4, #24
 801c028:	9413      	str	r4, [sp, #76]	; 0x4c
 801c02a:	b198      	cbz	r0, 801c054 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801c02c:	f10c 4c80 	add.w	ip, ip, #1073741824	; 0x40000000
 801c030:	f10c 3cff 	add.w	ip, ip, #4294967295
 801c034:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 801c038:	f10c 0c04 	add.w	ip, ip, #4
 801c03c:	eb01 080c 	add.w	r8, r1, ip
 801c040:	f851 100c 	ldr.w	r1, [r1, ip]
 801c044:	9108      	str	r1, [sp, #32]
 801c046:	0e09      	lsrs	r1, r1, #24
 801c048:	9110      	str	r1, [sp, #64]	; 0x40
 801c04a:	f8d8 1004 	ldr.w	r1, [r8, #4]
 801c04e:	910d      	str	r1, [sp, #52]	; 0x34
 801c050:	0e09      	lsrs	r1, r1, #24
 801c052:	9114      	str	r1, [sp, #80]	; 0x50
 801c054:	b292      	uxth	r2, r2
 801c056:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801c058:	b280      	uxth	r0, r0
 801c05a:	fb02 f900 	mul.w	r9, r2, r0
 801c05e:	0112      	lsls	r2, r2, #4
 801c060:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801c064:	eba2 0809 	sub.w	r8, r2, r9
 801c068:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801c06c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c06e:	b280      	uxth	r0, r0
 801c070:	fa1f f888 	uxth.w	r8, r8
 801c074:	1a09      	subs	r1, r1, r0
 801c076:	fb08 f202 	mul.w	r2, r8, r2
 801c07a:	b289      	uxth	r1, r1
 801c07c:	fb01 220e 	mla	r2, r1, lr, r2
 801c080:	fb00 2204 	mla	r2, r0, r4, r2
 801c084:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801c086:	fb09 2204 	mla	r2, r9, r4, r2
 801c08a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801c08e:	2a00      	cmp	r2, #0
 801c090:	f000 80e8 	beq.w	801c264 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6f4>
 801c094:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801c098:	d01b      	beq.n	801c0d2 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x562>
 801c09a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801c09e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801c0a2:	fb0e fa0a 	mul.w	sl, lr, sl
 801c0a6:	fb0e fe03 	mul.w	lr, lr, r3
 801c0aa:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801c0ae:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801c0b2:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801c0b6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801c0ba:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801c0be:	4453      	add	r3, sl
 801c0c0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c0c4:	0a1b      	lsrs	r3, r3, #8
 801c0c6:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801c0ca:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801c0ce:	ea43 030c 	orr.w	r3, r3, ip
 801c0d2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801c0d4:	2cff      	cmp	r4, #255	; 0xff
 801c0d6:	d021      	beq.n	801c11c <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ac>
 801c0d8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801c0da:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801c0de:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801c0e0:	fb04 fc0c 	mul.w	ip, r4, ip
 801c0e4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801c0e6:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 801c0ea:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801c0ee:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801c0f0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801c0f4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801c0f8:	fb04 fa0a 	mul.w	sl, r4, sl
 801c0fc:	44e6      	add	lr, ip
 801c0fe:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801c102:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c106:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c10a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801c10e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c112:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c116:	ea4e 040a 	orr.w	r4, lr, sl
 801c11a:	940c      	str	r4, [sp, #48]	; 0x30
 801c11c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801c11e:	2cff      	cmp	r4, #255	; 0xff
 801c120:	d021      	beq.n	801c166 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5f6>
 801c122:	9c08      	ldr	r4, [sp, #32]
 801c124:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801c128:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801c12a:	fb04 fc0c 	mul.w	ip, r4, ip
 801c12e:	9c08      	ldr	r4, [sp, #32]
 801c130:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801c134:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801c136:	fb04 fa0e 	mul.w	sl, r4, lr
 801c13a:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 801c13e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801c142:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801c146:	44e6      	add	lr, ip
 801c148:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801c14c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c150:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c154:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c158:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801c15c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c160:	ea4e 040a 	orr.w	r4, lr, sl
 801c164:	9408      	str	r4, [sp, #32]
 801c166:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801c168:	2cff      	cmp	r4, #255	; 0xff
 801c16a:	d021      	beq.n	801c1b0 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x640>
 801c16c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c16e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801c172:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801c174:	fb04 fc0c 	mul.w	ip, r4, ip
 801c178:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c17a:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 801c17e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801c182:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801c184:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801c188:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801c18c:	fb04 fa0a 	mul.w	sl, r4, sl
 801c190:	44e6      	add	lr, ip
 801c192:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801c196:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c19a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c19e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801c1a2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c1a6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c1aa:	ea4e 040a 	orr.w	r4, lr, sl
 801c1ae:	940d      	str	r4, [sp, #52]	; 0x34
 801c1b0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801c1b2:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801c1b6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801c1ba:	2aff      	cmp	r2, #255	; 0xff
 801c1bc:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801c1c0:	9c08      	ldr	r4, [sp, #32]
 801c1c2:	fb08 fc0c 	mul.w	ip, r8, ip
 801c1c6:	fb01 cc0e 	mla	ip, r1, lr, ip
 801c1ca:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801c1ce:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c1d0:	fb00 cc0e 	mla	ip, r0, lr, ip
 801c1d4:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801c1d8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801c1da:	fb09 cc0e 	mla	ip, r9, lr, ip
 801c1de:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801c1e2:	fb08 f80e 	mul.w	r8, r8, lr
 801c1e6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c1ea:	fb01 8303 	mla	r3, r1, r3, r8
 801c1ee:	9908      	ldr	r1, [sp, #32]
 801c1f0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c1f4:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801c1f8:	990d      	ldr	r1, [sp, #52]	; 0x34
 801c1fa:	fb00 330a 	mla	r3, r0, sl, r3
 801c1fe:	f401 4e7f 	and.w	lr, r1, #65280	; 0xff00
 801c202:	fb09 3e0e 	mla	lr, r9, lr, r3
 801c206:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c20a:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801c20e:	ea4c 0c0e 	orr.w	ip, ip, lr
 801c212:	fa5f f08c 	uxtb.w	r0, ip
 801c216:	f3cc 2107 	ubfx	r1, ip, #8, #8
 801c21a:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 801c21e:	d032      	beq.n	801c286 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x716>
 801c220:	43d2      	mvns	r2, r2
 801c222:	f817 ec03 	ldrb.w	lr, [r7, #-3]
 801c226:	b2d2      	uxtb	r2, r2
 801c228:	fb0e fe02 	mul.w	lr, lr, r2
 801c22c:	f10e 0301 	add.w	r3, lr, #1
 801c230:	eb03 231e 	add.w	r3, r3, lr, lsr #8
 801c234:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801c238:	f817 0c02 	ldrb.w	r0, [r7, #-2]
 801c23c:	4350      	muls	r0, r2
 801c23e:	f807 3c03 	strb.w	r3, [r7, #-3]
 801c242:	1c43      	adds	r3, r0, #1
 801c244:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801c248:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801c24c:	f817 3c01 	ldrb.w	r3, [r7, #-1]
 801c250:	4353      	muls	r3, r2
 801c252:	f807 1c02 	strb.w	r1, [r7, #-2]
 801c256:	1c5a      	adds	r2, r3, #1
 801c258:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801c25c:	eb0c 2c12 	add.w	ip, ip, r2, lsr #8
 801c260:	f807 cc01 	strb.w	ip, [r7, #-1]
 801c264:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801c266:	3703      	adds	r7, #3
 801c268:	f10b 3bff 	add.w	fp, fp, #4294967295
 801c26c:	441d      	add	r5, r3
 801c26e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801c270:	441e      	add	r6, r3
 801c272:	e64e      	b.n	801bf12 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a2>
 801c274:	2800      	cmp	r0, #0
 801c276:	f43f aeed 	beq.w	801c054 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801c27a:	f851 102c 	ldr.w	r1, [r1, ip, lsl #2]
 801c27e:	9108      	str	r1, [sp, #32]
 801c280:	0e09      	lsrs	r1, r1, #24
 801c282:	9110      	str	r1, [sp, #64]	; 0x40
 801c284:	e6e6      	b.n	801c054 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801c286:	f807 0c03 	strb.w	r0, [r7, #-3]
 801c28a:	f807 1c02 	strb.w	r1, [r7, #-2]
 801c28e:	e7e7      	b.n	801c260 <_ZN8touchgfx8LCD24bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6f0>
 801c290:	b019      	add	sp, #100	; 0x64
 801c292:	ecbd 8b08 	vpop	{d8-d11}
 801c296:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801c29c <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh>:
 801c29c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c2a0:	e9dd 0c0c 	ldrd	r0, ip, [sp, #48]	; 0x30
 801c2a4:	f9bd 8028 	ldrsh.w	r8, [sp, #40]	; 0x28
 801c2a8:	2800      	cmp	r0, #0
 801c2aa:	f9bd 902c 	ldrsh.w	r9, [sp, #44]	; 0x2c
 801c2ae:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 801c2b2:	fb0c 0e03 	mla	lr, ip, r3, r0
 801c2b6:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 801c2ba:	db6b      	blt.n	801c394 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0xf8>
 801c2bc:	4580      	cmp	r8, r0
 801c2be:	dd69      	ble.n	801c394 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0xf8>
 801c2c0:	f1bc 0f00 	cmp.w	ip, #0
 801c2c4:	db66      	blt.n	801c394 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0xf8>
 801c2c6:	45e1      	cmp	r9, ip
 801c2c8:	dd64      	ble.n	801c394 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0xf8>
 801c2ca:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801c2ce:	f01e 0f01 	tst.w	lr, #1
 801c2d2:	5d16      	ldrb	r6, [r2, r4]
 801c2d4:	bf0c      	ite	eq
 801c2d6:	f006 060f 	andeq.w	r6, r6, #15
 801c2da:	1136      	asrne	r6, r6, #4
 801c2dc:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801c2e0:	b2f6      	uxtb	r6, r6
 801c2e2:	f110 0a01 	adds.w	sl, r0, #1
 801c2e6:	d457      	bmi.n	801c398 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0xfc>
 801c2e8:	45d0      	cmp	r8, sl
 801c2ea:	dd55      	ble.n	801c398 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0xfc>
 801c2ec:	f1bc 0f00 	cmp.w	ip, #0
 801c2f0:	db52      	blt.n	801c398 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0xfc>
 801c2f2:	45e1      	cmp	r9, ip
 801c2f4:	dd50      	ble.n	801c398 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0xfc>
 801c2f6:	2f00      	cmp	r7, #0
 801c2f8:	f000 80ac 	beq.w	801c454 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x1b8>
 801c2fc:	f10e 0b01 	add.w	fp, lr, #1
 801c300:	ea4f 045b 	mov.w	r4, fp, lsr #1
 801c304:	f01b 0f01 	tst.w	fp, #1
 801c308:	5d14      	ldrb	r4, [r2, r4]
 801c30a:	bf0c      	ite	eq
 801c30c:	f004 040f 	andeq.w	r4, r4, #15
 801c310:	1124      	asrne	r4, r4, #4
 801c312:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801c316:	b2e4      	uxtb	r4, r4
 801c318:	2d00      	cmp	r5, #0
 801c31a:	f000 8096 	beq.w	801c44a <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x1ae>
 801c31e:	2800      	cmp	r0, #0
 801c320:	f10c 0c01 	add.w	ip, ip, #1
 801c324:	db3c      	blt.n	801c3a0 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x104>
 801c326:	4580      	cmp	r8, r0
 801c328:	dd3a      	ble.n	801c3a0 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x104>
 801c32a:	f1bc 0f00 	cmp.w	ip, #0
 801c32e:	db37      	blt.n	801c3a0 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x104>
 801c330:	45e1      	cmp	r9, ip
 801c332:	dd35      	ble.n	801c3a0 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x104>
 801c334:	eb03 0b0e 	add.w	fp, r3, lr
 801c338:	ea4f 005b 	mov.w	r0, fp, lsr #1
 801c33c:	f01b 0f01 	tst.w	fp, #1
 801c340:	5c10      	ldrb	r0, [r2, r0]
 801c342:	bf0c      	ite	eq
 801c344:	f000 000f 	andeq.w	r0, r0, #15
 801c348:	1100      	asrne	r0, r0, #4
 801c34a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801c34e:	b2c0      	uxtb	r0, r0
 801c350:	f1ba 0f00 	cmp.w	sl, #0
 801c354:	db26      	blt.n	801c3a4 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x108>
 801c356:	45d0      	cmp	r8, sl
 801c358:	dd24      	ble.n	801c3a4 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x108>
 801c35a:	f1bc 0f00 	cmp.w	ip, #0
 801c35e:	db21      	blt.n	801c3a4 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x108>
 801c360:	45e1      	cmp	r9, ip
 801c362:	dd1f      	ble.n	801c3a4 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x108>
 801c364:	b307      	cbz	r7, 801c3a8 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x10c>
 801c366:	3301      	adds	r3, #1
 801c368:	449e      	add	lr, r3
 801c36a:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801c36e:	f01e 0f01 	tst.w	lr, #1
 801c372:	5cd3      	ldrb	r3, [r2, r3]
 801c374:	bf0c      	ite	eq
 801c376:	f003 030f 	andeq.w	r3, r3, #15
 801c37a:	111b      	asrne	r3, r3, #4
 801c37c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801c380:	b2db      	uxtb	r3, r3
 801c382:	2f0f      	cmp	r7, #15
 801c384:	d911      	bls.n	801c3aa <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x10e>
 801c386:	4b35      	ldr	r3, [pc, #212]	; (801c45c <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x1c0>)
 801c388:	f240 115b 	movw	r1, #347	; 0x15b
 801c38c:	4a34      	ldr	r2, [pc, #208]	; (801c460 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x1c4>)
 801c38e:	4835      	ldr	r0, [pc, #212]	; (801c464 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x1c8>)
 801c390:	f003 fc22 	bl	801fbd8 <__assert_func>
 801c394:	2600      	movs	r6, #0
 801c396:	e7a4      	b.n	801c2e2 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x46>
 801c398:	2400      	movs	r4, #0
 801c39a:	e7bd      	b.n	801c318 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x7c>
 801c39c:	463c      	mov	r4, r7
 801c39e:	e7be      	b.n	801c31e <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x82>
 801c3a0:	2000      	movs	r0, #0
 801c3a2:	e7d5      	b.n	801c350 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0xb4>
 801c3a4:	2300      	movs	r3, #0
 801c3a6:	e7ec      	b.n	801c382 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0xe6>
 801c3a8:	463b      	mov	r3, r7
 801c3aa:	2d0f      	cmp	r5, #15
 801c3ac:	d8eb      	bhi.n	801c386 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0xea>
 801c3ae:	b2bf      	uxth	r7, r7
 801c3b0:	b2ad      	uxth	r5, r5
 801c3b2:	fb07 f205 	mul.w	r2, r7, r5
 801c3b6:	013f      	lsls	r7, r7, #4
 801c3b8:	ebc2 1505 	rsb	r5, r2, r5, lsl #4
 801c3bc:	f5c7 7c80 	rsb	ip, r7, #256	; 0x100
 801c3c0:	1abf      	subs	r7, r7, r2
 801c3c2:	b2ad      	uxth	r5, r5
 801c3c4:	b2bf      	uxth	r7, r7
 801c3c6:	ebac 0c05 	sub.w	ip, ip, r5
 801c3ca:	437c      	muls	r4, r7
 801c3cc:	fa1f fc8c 	uxth.w	ip, ip
 801c3d0:	fb06 440c 	mla	r4, r6, ip, r4
 801c3d4:	fb05 4400 	mla	r4, r5, r0, r4
 801c3d8:	fb02 4203 	mla	r2, r2, r3, r4
 801c3dc:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801c3e0:	b38a      	cbz	r2, 801c446 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x1aa>
 801c3e2:	4b21      	ldr	r3, [pc, #132]	; (801c468 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x1cc>)
 801c3e4:	681c      	ldr	r4, [r3, #0]
 801c3e6:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 801c3ea:	b2e5      	uxtb	r5, r4
 801c3ec:	4353      	muls	r3, r2
 801c3ee:	1c5a      	adds	r2, r3, #1
 801c3f0:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801c3f4:	1212      	asrs	r2, r2, #8
 801c3f6:	b290      	uxth	r0, r2
 801c3f8:	43d2      	mvns	r2, r2
 801c3fa:	fb15 f500 	smulbb	r5, r5, r0
 801c3fe:	b2d3      	uxtb	r3, r2
 801c400:	780a      	ldrb	r2, [r1, #0]
 801c402:	fb02 5203 	mla	r2, r2, r3, r5
 801c406:	b292      	uxth	r2, r2
 801c408:	1c55      	adds	r5, r2, #1
 801c40a:	eb05 2212 	add.w	r2, r5, r2, lsr #8
 801c40e:	784d      	ldrb	r5, [r1, #1]
 801c410:	fb15 f503 	smulbb	r5, r5, r3
 801c414:	1212      	asrs	r2, r2, #8
 801c416:	700a      	strb	r2, [r1, #0]
 801c418:	f3c4 2207 	ubfx	r2, r4, #8, #8
 801c41c:	f3c4 4407 	ubfx	r4, r4, #16, #8
 801c420:	fb02 5200 	mla	r2, r2, r0, r5
 801c424:	b292      	uxth	r2, r2
 801c426:	1c55      	adds	r5, r2, #1
 801c428:	eb05 2212 	add.w	r2, r5, r2, lsr #8
 801c42c:	1212      	asrs	r2, r2, #8
 801c42e:	704a      	strb	r2, [r1, #1]
 801c430:	788a      	ldrb	r2, [r1, #2]
 801c432:	fb12 f303 	smulbb	r3, r2, r3
 801c436:	fb04 3300 	mla	r3, r4, r0, r3
 801c43a:	b29b      	uxth	r3, r3
 801c43c:	1c5a      	adds	r2, r3, #1
 801c43e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801c442:	121b      	asrs	r3, r3, #8
 801c444:	708b      	strb	r3, [r1, #2]
 801c446:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c44a:	2f0f      	cmp	r7, #15
 801c44c:	d89b      	bhi.n	801c386 <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0xea>
 801c44e:	462b      	mov	r3, r5
 801c450:	4628      	mov	r0, r5
 801c452:	e7ac      	b.n	801c3ae <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x112>
 801c454:	2d00      	cmp	r5, #0
 801c456:	d1a1      	bne.n	801c39c <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x100>
 801c458:	462c      	mov	r4, r5
 801c45a:	e7f8      	b.n	801c44e <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh+0x1b2>
 801c45c:	08024e84 	.word	0x08024e84
 801c460:	0802529a 	.word	0x0802529a
 801c464:	08024e51 	.word	0x08024e51
 801c468:	2400e0a4 	.word	0x2400e0a4

0801c46c <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c46c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c470:	ed2d 8b08 	vpush	{d8-d11}
 801c474:	b097      	sub	sp, #92	; 0x5c
 801c476:	eeb0 aa40 	vmov.f32	s20, s0
 801c47a:	eef0 9a60 	vmov.f32	s19, s1
 801c47e:	9214      	str	r2, [sp, #80]	; 0x50
 801c480:	eeb0 9a41 	vmov.f32	s18, s2
 801c484:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801c486:	eeb0 8a62 	vmov.f32	s16, s5
 801c48a:	9309      	str	r3, [sp, #36]	; 0x24
 801c48c:	eef0 8a43 	vmov.f32	s17, s6
 801c490:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801c494:	eef0 ba44 	vmov.f32	s23, s8
 801c498:	9015      	str	r0, [sp, #84]	; 0x54
 801c49a:	eeb0 ba64 	vmov.f32	s22, s9
 801c49e:	6850      	ldr	r0, [r2, #4]
 801c4a0:	eef0 aa45 	vmov.f32	s21, s10
 801c4a4:	910c      	str	r1, [sp, #48]	; 0x30
 801c4a6:	930e      	str	r3, [sp, #56]	; 0x38
 801c4a8:	6812      	ldr	r2, [r2, #0]
 801c4aa:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801c4ae:	e9dd 5629 	ldrd	r5, r6, [sp, #164]	; 0xa4
 801c4b2:	fb00 1303 	mla	r3, r0, r3, r1
 801c4b6:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801c4ba:	eb02 0a03 	add.w	sl, r2, r3
 801c4be:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801c4c0:	689b      	ldr	r3, [r3, #8]
 801c4c2:	3301      	adds	r3, #1
 801c4c4:	f023 0301 	bic.w	r3, r3, #1
 801c4c8:	930f      	str	r3, [sp, #60]	; 0x3c
 801c4ca:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801c4cc:	681f      	ldr	r7, [r3, #0]
 801c4ce:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c4d0:	2b00      	cmp	r3, #0
 801c4d2:	dc03      	bgt.n	801c4dc <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c4d4:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801c4d6:	2b00      	cmp	r3, #0
 801c4d8:	f340 8247 	ble.w	801c96a <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4fe>
 801c4dc:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801c4de:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c4e2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c4e6:	1e48      	subs	r0, r1, #1
 801c4e8:	f102 3cff 	add.w	ip, r2, #4294967295
 801c4ec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c4ee:	2b00      	cmp	r3, #0
 801c4f0:	f340 80e5 	ble.w	801c6be <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801c4f4:	ea5f 4e25 	movs.w	lr, r5, asr #16
 801c4f8:	ea4f 4326 	mov.w	r3, r6, asr #16
 801c4fc:	d406      	bmi.n	801c50c <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801c4fe:	4586      	cmp	lr, r0
 801c500:	da04      	bge.n	801c50c <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801c502:	2b00      	cmp	r3, #0
 801c504:	db02      	blt.n	801c50c <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801c506:	4563      	cmp	r3, ip
 801c508:	f2c0 80da 	blt.w	801c6c0 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801c50c:	f11e 0e01 	adds.w	lr, lr, #1
 801c510:	f100 80cb 	bmi.w	801c6aa <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23e>
 801c514:	4571      	cmp	r1, lr
 801c516:	f2c0 80c8 	blt.w	801c6aa <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23e>
 801c51a:	3301      	adds	r3, #1
 801c51c:	f100 80c5 	bmi.w	801c6aa <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23e>
 801c520:	429a      	cmp	r2, r3
 801c522:	f2c0 80c2 	blt.w	801c6aa <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23e>
 801c526:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c528:	46d0      	mov	r8, sl
 801c52a:	f9bd 903c 	ldrsh.w	r9, [sp, #60]	; 0x3c
 801c52e:	930d      	str	r3, [sp, #52]	; 0x34
 801c530:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c532:	2b00      	cmp	r3, #0
 801c534:	f340 80e3 	ble.w	801c6fe <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801c538:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801c53a:	1430      	asrs	r0, r6, #16
 801c53c:	f3c5 3203 	ubfx	r2, r5, #12, #4
 801c540:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801c544:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801c548:	142b      	asrs	r3, r5, #16
 801c54a:	f100 812e 	bmi.w	801c7aa <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801c54e:	f10c 3bff 	add.w	fp, ip, #4294967295
 801c552:	455b      	cmp	r3, fp
 801c554:	f280 8129 	bge.w	801c7aa <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801c558:	2800      	cmp	r0, #0
 801c55a:	f2c0 8126 	blt.w	801c7aa <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801c55e:	f10e 3bff 	add.w	fp, lr, #4294967295
 801c562:	4558      	cmp	r0, fp
 801c564:	f280 8121 	bge.w	801c7aa <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801c568:	fb00 3309 	mla	r3, r0, r9, r3
 801c56c:	0858      	lsrs	r0, r3, #1
 801c56e:	07dc      	lsls	r4, r3, #31
 801c570:	f817 c000 	ldrb.w	ip, [r7, r0]
 801c574:	bf54      	ite	pl
 801c576:	f00c 0c0f 	andpl.w	ip, ip, #15
 801c57a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801c57e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801c582:	fa5f fc8c 	uxtb.w	ip, ip
 801c586:	2a00      	cmp	r2, #0
 801c588:	f000 80fe 	beq.w	801c788 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801c58c:	1c58      	adds	r0, r3, #1
 801c58e:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801c592:	07c0      	lsls	r0, r0, #31
 801c594:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801c598:	bf54      	ite	pl
 801c59a:	f00e 0e0f 	andpl.w	lr, lr, #15
 801c59e:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801c5a2:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801c5a6:	fa5f f08e 	uxtb.w	r0, lr
 801c5aa:	9010      	str	r0, [sp, #64]	; 0x40
 801c5ac:	b1d9      	cbz	r1, 801c5e6 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17a>
 801c5ae:	444b      	add	r3, r9
 801c5b0:	0858      	lsrs	r0, r3, #1
 801c5b2:	07dc      	lsls	r4, r3, #31
 801c5b4:	f103 0301 	add.w	r3, r3, #1
 801c5b8:	5c38      	ldrb	r0, [r7, r0]
 801c5ba:	bf54      	ite	pl
 801c5bc:	f000 000f 	andpl.w	r0, r0, #15
 801c5c0:	1100      	asrmi	r0, r0, #4
 801c5c2:	07dc      	lsls	r4, r3, #31
 801c5c4:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801c5c8:	b2c0      	uxtb	r0, r0
 801c5ca:	900a      	str	r0, [sp, #40]	; 0x28
 801c5cc:	ea4f 0053 	mov.w	r0, r3, lsr #1
 801c5d0:	f817 e000 	ldrb.w	lr, [r7, r0]
 801c5d4:	bf54      	ite	pl
 801c5d6:	f00e 030f 	andpl.w	r3, lr, #15
 801c5da:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801c5de:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801c5e2:	b2db      	uxtb	r3, r3
 801c5e4:	9311      	str	r3, [sp, #68]	; 0x44
 801c5e6:	b292      	uxth	r2, r2
 801c5e8:	b289      	uxth	r1, r1
 801c5ea:	0113      	lsls	r3, r2, #4
 801c5ec:	fb02 f001 	mul.w	r0, r2, r1
 801c5f0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801c5f2:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801c5f6:	ebc0 1101 	rsb	r1, r0, r1, lsl #4
 801c5fa:	1a1b      	subs	r3, r3, r0
 801c5fc:	b289      	uxth	r1, r1
 801c5fe:	b29b      	uxth	r3, r3
 801c600:	ebae 0e01 	sub.w	lr, lr, r1
 801c604:	4353      	muls	r3, r2
 801c606:	fa1f fe8e 	uxth.w	lr, lr
 801c60a:	fb0c 320e 	mla	r2, ip, lr, r3
 801c60e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c610:	fb01 2203 	mla	r2, r1, r3, r2
 801c614:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c616:	fb00 2203 	mla	r2, r0, r3, r2
 801c61a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801c61e:	2a00      	cmp	r2, #0
 801c620:	d039      	beq.n	801c696 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801c622:	4bc7      	ldr	r3, [pc, #796]	; (801c940 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>)
 801c624:	6819      	ldr	r1, [r3, #0]
 801c626:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c628:	fa5f fc81 	uxtb.w	ip, r1
 801c62c:	435a      	muls	r2, r3
 801c62e:	1c53      	adds	r3, r2, #1
 801c630:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801c634:	1212      	asrs	r2, r2, #8
 801c636:	b290      	uxth	r0, r2
 801c638:	43d2      	mvns	r2, r2
 801c63a:	fb1c fc00 	smulbb	ip, ip, r0
 801c63e:	b2d3      	uxtb	r3, r2
 801c640:	f898 2000 	ldrb.w	r2, [r8]
 801c644:	fb02 c203 	mla	r2, r2, r3, ip
 801c648:	b292      	uxth	r2, r2
 801c64a:	f102 0c01 	add.w	ip, r2, #1
 801c64e:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801c652:	f898 c001 	ldrb.w	ip, [r8, #1]
 801c656:	fb1c fc03 	smulbb	ip, ip, r3
 801c65a:	1212      	asrs	r2, r2, #8
 801c65c:	f888 2000 	strb.w	r2, [r8]
 801c660:	f3c1 2207 	ubfx	r2, r1, #8, #8
 801c664:	f3c1 4107 	ubfx	r1, r1, #16, #8
 801c668:	fb02 c200 	mla	r2, r2, r0, ip
 801c66c:	b292      	uxth	r2, r2
 801c66e:	f102 0c01 	add.w	ip, r2, #1
 801c672:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801c676:	1212      	asrs	r2, r2, #8
 801c678:	f888 2001 	strb.w	r2, [r8, #1]
 801c67c:	f898 2002 	ldrb.w	r2, [r8, #2]
 801c680:	fb12 f303 	smulbb	r3, r2, r3
 801c684:	fb01 3300 	mla	r3, r1, r0, r3
 801c688:	b29b      	uxth	r3, r3
 801c68a:	1c5a      	adds	r2, r3, #1
 801c68c:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801c690:	121b      	asrs	r3, r3, #8
 801c692:	f888 3002 	strb.w	r3, [r8, #2]
 801c696:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801c698:	f108 0803 	add.w	r8, r8, #3
 801c69c:	441d      	add	r5, r3
 801c69e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c6a0:	441e      	add	r6, r3
 801c6a2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c6a4:	3b01      	subs	r3, #1
 801c6a6:	930d      	str	r3, [sp, #52]	; 0x34
 801c6a8:	e742      	b.n	801c530 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc4>
 801c6aa:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801c6ac:	f10a 0a03 	add.w	sl, sl, #3
 801c6b0:	441d      	add	r5, r3
 801c6b2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c6b4:	441e      	add	r6, r3
 801c6b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c6b8:	3b01      	subs	r3, #1
 801c6ba:	9309      	str	r3, [sp, #36]	; 0x24
 801c6bc:	e716      	b.n	801c4ec <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801c6be:	d024      	beq.n	801c70a <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29e>
 801c6c0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c6c2:	982b      	ldr	r0, [sp, #172]	; 0xac
 801c6c4:	3b01      	subs	r3, #1
 801c6c6:	fb00 5003 	mla	r0, r0, r3, r5
 801c6ca:	1400      	asrs	r0, r0, #16
 801c6cc:	f53f af2b 	bmi.w	801c526 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 801c6d0:	3901      	subs	r1, #1
 801c6d2:	4288      	cmp	r0, r1
 801c6d4:	f6bf af27 	bge.w	801c526 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 801c6d8:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801c6da:	fb01 6303 	mla	r3, r1, r3, r6
 801c6de:	141b      	asrs	r3, r3, #16
 801c6e0:	f53f af21 	bmi.w	801c526 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 801c6e4:	3a01      	subs	r2, #1
 801c6e6:	4293      	cmp	r3, r2
 801c6e8:	f6bf af1d 	bge.w	801c526 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 801c6ec:	f10a 0e03 	add.w	lr, sl, #3
 801c6f0:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
 801c6f4:	f9bd 903c 	ldrsh.w	r9, [sp, #60]	; 0x3c
 801c6f8:	f1b8 0f00 	cmp.w	r8, #0
 801c6fc:	dc76      	bgt.n	801c7ec <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
 801c6fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c700:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801c704:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801c708:	44a2      	add	sl, r4
 801c70a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c70c:	2b00      	cmp	r3, #0
 801c70e:	f340 812c 	ble.w	801c96a <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4fe>
 801c712:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c716:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c718:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801c71c:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801c720:	eef0 6a48 	vmov.f32	s13, s16
 801c724:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801c728:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801c72c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c730:	ee16 5a90 	vmov	r5, s13
 801c734:	eef0 6a68 	vmov.f32	s13, s17
 801c738:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c73c:	ee16 6a90 	vmov	r6, s13
 801c740:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801c744:	ee69 7a27 	vmul.f32	s15, s18, s15
 801c748:	ee37 8a48 	vsub.f32	s16, s14, s16
 801c74c:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801c750:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801c754:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801c758:	ee18 2a10 	vmov	r2, s16
 801c75c:	eeb0 8a47 	vmov.f32	s16, s14
 801c760:	fb92 f3f3 	sdiv	r3, r2, r3
 801c764:	ee18 2a90 	vmov	r2, s17
 801c768:	932b      	str	r3, [sp, #172]	; 0xac
 801c76a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c76c:	eef0 8a67 	vmov.f32	s17, s15
 801c770:	fb92 f3f3 	sdiv	r3, r2, r3
 801c774:	932c      	str	r3, [sp, #176]	; 0xb0
 801c776:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c778:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c77a:	3b01      	subs	r3, #1
 801c77c:	930c      	str	r3, [sp, #48]	; 0x30
 801c77e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c780:	bf08      	it	eq
 801c782:	4613      	moveq	r3, r2
 801c784:	9309      	str	r3, [sp, #36]	; 0x24
 801c786:	e6a2      	b.n	801c4ce <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 801c788:	2900      	cmp	r1, #0
 801c78a:	f43f af2c 	beq.w	801c5e6 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17a>
 801c78e:	eb09 0003 	add.w	r0, r9, r3
 801c792:	0843      	lsrs	r3, r0, #1
 801c794:	07c0      	lsls	r0, r0, #31
 801c796:	5cfb      	ldrb	r3, [r7, r3]
 801c798:	bf54      	ite	pl
 801c79a:	f003 030f 	andpl.w	r3, r3, #15
 801c79e:	111b      	asrmi	r3, r3, #4
 801c7a0:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801c7a4:	b2db      	uxtb	r3, r3
 801c7a6:	930a      	str	r3, [sp, #40]	; 0x28
 801c7a8:	e71d      	b.n	801c5e6 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17a>
 801c7aa:	f113 0b01 	adds.w	fp, r3, #1
 801c7ae:	f53f af72 	bmi.w	801c696 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801c7b2:	45dc      	cmp	ip, fp
 801c7b4:	f6ff af6f 	blt.w	801c696 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801c7b8:	f110 0b01 	adds.w	fp, r0, #1
 801c7bc:	f53f af6b 	bmi.w	801c696 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801c7c0:	45de      	cmp	lr, fp
 801c7c2:	f6ff af68 	blt.w	801c696 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801c7c6:	9302      	str	r3, [sp, #8]
 801c7c8:	fa0f f38e 	sxth.w	r3, lr
 801c7cc:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801c7ce:	9301      	str	r3, [sp, #4]
 801c7d0:	fa0f f38c 	sxth.w	r3, ip
 801c7d4:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801c7d8:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801c7dc:	9300      	str	r3, [sp, #0]
 801c7de:	463a      	mov	r2, r7
 801c7e0:	464b      	mov	r3, r9
 801c7e2:	4641      	mov	r1, r8
 801c7e4:	9815      	ldr	r0, [sp, #84]	; 0x54
 801c7e6:	f7ff fd59 	bl	801c29c <_ZNK8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPhPKtsssiihhh>
 801c7ea:	e754      	b.n	801c696 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801c7ec:	142a      	asrs	r2, r5, #16
 801c7ee:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801c7f2:	1433      	asrs	r3, r6, #16
 801c7f4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801c7f8:	fb09 2303 	mla	r3, r9, r3, r2
 801c7fc:	085a      	lsrs	r2, r3, #1
 801c7fe:	07dc      	lsls	r4, r3, #31
 801c800:	5cba      	ldrb	r2, [r7, r2]
 801c802:	bf54      	ite	pl
 801c804:	f002 020f 	andpl.w	r2, r2, #15
 801c808:	1112      	asrmi	r2, r2, #4
 801c80a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801c80e:	b2d2      	uxtb	r2, r2
 801c810:	2900      	cmp	r1, #0
 801c812:	f000 8097 	beq.w	801c944 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801c816:	f103 0b01 	add.w	fp, r3, #1
 801c81a:	ea4f 0c5b 	mov.w	ip, fp, lsr #1
 801c81e:	f01b 0f01 	tst.w	fp, #1
 801c822:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801c826:	bf0c      	ite	eq
 801c828:	f00c 0c0f 	andeq.w	ip, ip, #15
 801c82c:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801c830:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801c834:	fa5f f48c 	uxtb.w	r4, ip
 801c838:	9412      	str	r4, [sp, #72]	; 0x48
 801c83a:	b300      	cbz	r0, 801c87e <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x412>
 801c83c:	444b      	add	r3, r9
 801c83e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801c842:	07dc      	lsls	r4, r3, #31
 801c844:	f103 0301 	add.w	r3, r3, #1
 801c848:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801c84c:	bf54      	ite	pl
 801c84e:	f00c 0c0f 	andpl.w	ip, ip, #15
 801c852:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801c856:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801c85a:	fa5f f48c 	uxtb.w	r4, ip
 801c85e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801c862:	940b      	str	r4, [sp, #44]	; 0x2c
 801c864:	07dc      	lsls	r4, r3, #31
 801c866:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801c86a:	bf54      	ite	pl
 801c86c:	f00c 0c0f 	andpl.w	ip, ip, #15
 801c870:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801c874:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801c878:	fa5f f38c 	uxtb.w	r3, ip
 801c87c:	9313      	str	r3, [sp, #76]	; 0x4c
 801c87e:	b289      	uxth	r1, r1
 801c880:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801c882:	b280      	uxth	r0, r0
 801c884:	fb01 f300 	mul.w	r3, r1, r0
 801c888:	0109      	lsls	r1, r1, #4
 801c88a:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801c88e:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801c892:	1ac9      	subs	r1, r1, r3
 801c894:	b280      	uxth	r0, r0
 801c896:	b289      	uxth	r1, r1
 801c898:	ebac 0c00 	sub.w	ip, ip, r0
 801c89c:	4361      	muls	r1, r4
 801c89e:	fa1f fc8c 	uxth.w	ip, ip
 801c8a2:	fb02 120c 	mla	r2, r2, ip, r1
 801c8a6:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801c8a8:	fb00 2001 	mla	r0, r0, r1, r2
 801c8ac:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c8ae:	fb03 0302 	mla	r3, r3, r2, r0
 801c8b2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c8b6:	2b00      	cmp	r3, #0
 801c8b8:	d039      	beq.n	801c92e <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c2>
 801c8ba:	4a21      	ldr	r2, [pc, #132]	; (801c940 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>)
 801c8bc:	f81e 1c03 	ldrb.w	r1, [lr, #-3]
 801c8c0:	6810      	ldr	r0, [r2, #0]
 801c8c2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801c8c4:	fa5f fc80 	uxtb.w	ip, r0
 801c8c8:	4353      	muls	r3, r2
 801c8ca:	1c5a      	adds	r2, r3, #1
 801c8cc:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801c8d0:	121b      	asrs	r3, r3, #8
 801c8d2:	b29a      	uxth	r2, r3
 801c8d4:	43db      	mvns	r3, r3
 801c8d6:	fb1c fc02 	smulbb	ip, ip, r2
 801c8da:	b2db      	uxtb	r3, r3
 801c8dc:	fb01 c103 	mla	r1, r1, r3, ip
 801c8e0:	b289      	uxth	r1, r1
 801c8e2:	f101 0c01 	add.w	ip, r1, #1
 801c8e6:	eb0c 2111 	add.w	r1, ip, r1, lsr #8
 801c8ea:	f81e cc02 	ldrb.w	ip, [lr, #-2]
 801c8ee:	fb1c fc03 	smulbb	ip, ip, r3
 801c8f2:	1209      	asrs	r1, r1, #8
 801c8f4:	f80e 1c03 	strb.w	r1, [lr, #-3]
 801c8f8:	f3c0 2107 	ubfx	r1, r0, #8, #8
 801c8fc:	f3c0 4007 	ubfx	r0, r0, #16, #8
 801c900:	fb01 c102 	mla	r1, r1, r2, ip
 801c904:	b289      	uxth	r1, r1
 801c906:	f101 0c01 	add.w	ip, r1, #1
 801c90a:	eb0c 2111 	add.w	r1, ip, r1, lsr #8
 801c90e:	1209      	asrs	r1, r1, #8
 801c910:	f80e 1c02 	strb.w	r1, [lr, #-2]
 801c914:	f81e 1c01 	ldrb.w	r1, [lr, #-1]
 801c918:	fb11 f303 	smulbb	r3, r1, r3
 801c91c:	fb00 3002 	mla	r0, r0, r2, r3
 801c920:	b280      	uxth	r0, r0
 801c922:	1c42      	adds	r2, r0, #1
 801c924:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801c928:	1200      	asrs	r0, r0, #8
 801c92a:	f80e 0c01 	strb.w	r0, [lr, #-1]
 801c92e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801c930:	f10e 0e03 	add.w	lr, lr, #3
 801c934:	f108 38ff 	add.w	r8, r8, #4294967295
 801c938:	441d      	add	r5, r3
 801c93a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c93c:	441e      	add	r6, r3
 801c93e:	e6db      	b.n	801c6f8 <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801c940:	2400e0a4 	.word	0x2400e0a4
 801c944:	2800      	cmp	r0, #0
 801c946:	d09a      	beq.n	801c87e <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x412>
 801c948:	444b      	add	r3, r9
 801c94a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801c94e:	07db      	lsls	r3, r3, #31
 801c950:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801c954:	bf54      	ite	pl
 801c956:	f00c 0c0f 	andpl.w	ip, ip, #15
 801c95a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801c95e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801c962:	fa5f f38c 	uxtb.w	r3, ip
 801c966:	930b      	str	r3, [sp, #44]	; 0x2c
 801c968:	e789      	b.n	801c87e <_ZN8touchgfx8LCD24bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x412>
 801c96a:	b017      	add	sp, #92	; 0x5c
 801c96c:	ecbd 8b08 	vpop	{d8-d11}
 801c970:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c974 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh>:
 801c974:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c978:	e9dd 0c0c 	ldrd	r0, ip, [sp, #48]	; 0x30
 801c97c:	f9bd 8028 	ldrsh.w	r8, [sp, #40]	; 0x28
 801c980:	2800      	cmp	r0, #0
 801c982:	f9bd 902c 	ldrsh.w	r9, [sp, #44]	; 0x2c
 801c986:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 801c98a:	fb0c 0e03 	mla	lr, ip, r3, r0
 801c98e:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 801c992:	db6b      	blt.n	801ca6c <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0xf8>
 801c994:	4580      	cmp	r8, r0
 801c996:	dd69      	ble.n	801ca6c <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0xf8>
 801c998:	f1bc 0f00 	cmp.w	ip, #0
 801c99c:	db66      	blt.n	801ca6c <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0xf8>
 801c99e:	45e1      	cmp	r9, ip
 801c9a0:	dd64      	ble.n	801ca6c <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0xf8>
 801c9a2:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801c9a6:	f01e 0f01 	tst.w	lr, #1
 801c9aa:	5d16      	ldrb	r6, [r2, r4]
 801c9ac:	bf0c      	ite	eq
 801c9ae:	f006 060f 	andeq.w	r6, r6, #15
 801c9b2:	1136      	asrne	r6, r6, #4
 801c9b4:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801c9b8:	b2f6      	uxtb	r6, r6
 801c9ba:	f110 0a01 	adds.w	sl, r0, #1
 801c9be:	d457      	bmi.n	801ca70 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0xfc>
 801c9c0:	45d0      	cmp	r8, sl
 801c9c2:	dd55      	ble.n	801ca70 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0xfc>
 801c9c4:	f1bc 0f00 	cmp.w	ip, #0
 801c9c8:	db52      	blt.n	801ca70 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0xfc>
 801c9ca:	45e1      	cmp	r9, ip
 801c9cc:	dd50      	ble.n	801ca70 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0xfc>
 801c9ce:	2f00      	cmp	r7, #0
 801c9d0:	f000 80a5 	beq.w	801cb1e <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x1aa>
 801c9d4:	f10e 0b01 	add.w	fp, lr, #1
 801c9d8:	ea4f 045b 	mov.w	r4, fp, lsr #1
 801c9dc:	f01b 0f01 	tst.w	fp, #1
 801c9e0:	5d14      	ldrb	r4, [r2, r4]
 801c9e2:	bf0c      	ite	eq
 801c9e4:	f004 040f 	andeq.w	r4, r4, #15
 801c9e8:	1124      	asrne	r4, r4, #4
 801c9ea:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801c9ee:	b2e4      	uxtb	r4, r4
 801c9f0:	2d00      	cmp	r5, #0
 801c9f2:	f000 808f 	beq.w	801cb14 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x1a0>
 801c9f6:	2800      	cmp	r0, #0
 801c9f8:	f10c 0c01 	add.w	ip, ip, #1
 801c9fc:	db3c      	blt.n	801ca78 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x104>
 801c9fe:	4580      	cmp	r8, r0
 801ca00:	dd3a      	ble.n	801ca78 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x104>
 801ca02:	f1bc 0f00 	cmp.w	ip, #0
 801ca06:	db37      	blt.n	801ca78 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x104>
 801ca08:	45e1      	cmp	r9, ip
 801ca0a:	dd35      	ble.n	801ca78 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x104>
 801ca0c:	eb03 0b0e 	add.w	fp, r3, lr
 801ca10:	ea4f 005b 	mov.w	r0, fp, lsr #1
 801ca14:	f01b 0f01 	tst.w	fp, #1
 801ca18:	5c10      	ldrb	r0, [r2, r0]
 801ca1a:	bf0c      	ite	eq
 801ca1c:	f000 000f 	andeq.w	r0, r0, #15
 801ca20:	1100      	asrne	r0, r0, #4
 801ca22:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801ca26:	b2c0      	uxtb	r0, r0
 801ca28:	f1ba 0f00 	cmp.w	sl, #0
 801ca2c:	db26      	blt.n	801ca7c <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x108>
 801ca2e:	45d0      	cmp	r8, sl
 801ca30:	dd24      	ble.n	801ca7c <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x108>
 801ca32:	f1bc 0f00 	cmp.w	ip, #0
 801ca36:	db21      	blt.n	801ca7c <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x108>
 801ca38:	45e1      	cmp	r9, ip
 801ca3a:	dd1f      	ble.n	801ca7c <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x108>
 801ca3c:	b307      	cbz	r7, 801ca80 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x10c>
 801ca3e:	3301      	adds	r3, #1
 801ca40:	449e      	add	lr, r3
 801ca42:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801ca46:	f01e 0f01 	tst.w	lr, #1
 801ca4a:	5cd3      	ldrb	r3, [r2, r3]
 801ca4c:	bf0c      	ite	eq
 801ca4e:	f003 030f 	andeq.w	r3, r3, #15
 801ca52:	111b      	asrne	r3, r3, #4
 801ca54:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801ca58:	b2db      	uxtb	r3, r3
 801ca5a:	2f0f      	cmp	r7, #15
 801ca5c:	d911      	bls.n	801ca82 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x10e>
 801ca5e:	4b32      	ldr	r3, [pc, #200]	; (801cb28 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x1b4>)
 801ca60:	f240 115b 	movw	r1, #347	; 0x15b
 801ca64:	4a31      	ldr	r2, [pc, #196]	; (801cb2c <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x1b8>)
 801ca66:	4832      	ldr	r0, [pc, #200]	; (801cb30 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x1bc>)
 801ca68:	f003 f8b6 	bl	801fbd8 <__assert_func>
 801ca6c:	2600      	movs	r6, #0
 801ca6e:	e7a4      	b.n	801c9ba <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x46>
 801ca70:	2400      	movs	r4, #0
 801ca72:	e7bd      	b.n	801c9f0 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x7c>
 801ca74:	463c      	mov	r4, r7
 801ca76:	e7be      	b.n	801c9f6 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x82>
 801ca78:	2000      	movs	r0, #0
 801ca7a:	e7d5      	b.n	801ca28 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0xb4>
 801ca7c:	2300      	movs	r3, #0
 801ca7e:	e7ec      	b.n	801ca5a <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0xe6>
 801ca80:	463b      	mov	r3, r7
 801ca82:	2d0f      	cmp	r5, #15
 801ca84:	d8eb      	bhi.n	801ca5e <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0xea>
 801ca86:	b2bf      	uxth	r7, r7
 801ca88:	b2ad      	uxth	r5, r5
 801ca8a:	fb07 f205 	mul.w	r2, r7, r5
 801ca8e:	013f      	lsls	r7, r7, #4
 801ca90:	ebc2 1505 	rsb	r5, r2, r5, lsl #4
 801ca94:	f5c7 7c80 	rsb	ip, r7, #256	; 0x100
 801ca98:	1abf      	subs	r7, r7, r2
 801ca9a:	b2ad      	uxth	r5, r5
 801ca9c:	b2bf      	uxth	r7, r7
 801ca9e:	ebac 0c05 	sub.w	ip, ip, r5
 801caa2:	437c      	muls	r4, r7
 801caa4:	fa1f fc8c 	uxth.w	ip, ip
 801caa8:	fb06 440c 	mla	r4, r6, ip, r4
 801caac:	fb05 4400 	mla	r4, r5, r0, r4
 801cab0:	fb02 4303 	mla	r3, r2, r3, r4
 801cab4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801cab8:	b353      	cbz	r3, 801cb10 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x19c>
 801caba:	4a1e      	ldr	r2, [pc, #120]	; (801cb34 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x1c0>)
 801cabc:	7808      	ldrb	r0, [r1, #0]
 801cabe:	6814      	ldr	r4, [r2, #0]
 801cac0:	b29a      	uxth	r2, r3
 801cac2:	43db      	mvns	r3, r3
 801cac4:	b2e5      	uxtb	r5, r4
 801cac6:	b2db      	uxtb	r3, r3
 801cac8:	fb15 f502 	smulbb	r5, r5, r2
 801cacc:	fb00 5003 	mla	r0, r0, r3, r5
 801cad0:	b280      	uxth	r0, r0
 801cad2:	1c45      	adds	r5, r0, #1
 801cad4:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801cad8:	784d      	ldrb	r5, [r1, #1]
 801cada:	fb15 f503 	smulbb	r5, r5, r3
 801cade:	1200      	asrs	r0, r0, #8
 801cae0:	7008      	strb	r0, [r1, #0]
 801cae2:	f3c4 2007 	ubfx	r0, r4, #8, #8
 801cae6:	f3c4 4407 	ubfx	r4, r4, #16, #8
 801caea:	fb00 5002 	mla	r0, r0, r2, r5
 801caee:	b280      	uxth	r0, r0
 801caf0:	1c45      	adds	r5, r0, #1
 801caf2:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801caf6:	1200      	asrs	r0, r0, #8
 801caf8:	7048      	strb	r0, [r1, #1]
 801cafa:	7888      	ldrb	r0, [r1, #2]
 801cafc:	fb10 f303 	smulbb	r3, r0, r3
 801cb00:	fb04 3202 	mla	r2, r4, r2, r3
 801cb04:	b292      	uxth	r2, r2
 801cb06:	1c53      	adds	r3, r2, #1
 801cb08:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801cb0c:	1212      	asrs	r2, r2, #8
 801cb0e:	708a      	strb	r2, [r1, #2]
 801cb10:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cb14:	2f0f      	cmp	r7, #15
 801cb16:	d8a2      	bhi.n	801ca5e <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0xea>
 801cb18:	462b      	mov	r3, r5
 801cb1a:	4628      	mov	r0, r5
 801cb1c:	e7b3      	b.n	801ca86 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x112>
 801cb1e:	2d00      	cmp	r5, #0
 801cb20:	d1a8      	bne.n	801ca74 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x100>
 801cb22:	462c      	mov	r4, r5
 801cb24:	e7f8      	b.n	801cb18 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh+0x1a4>
 801cb26:	bf00      	nop
 801cb28:	08024e84 	.word	0x08024e84
 801cb2c:	0802529a 	.word	0x0802529a
 801cb30:	08024e51 	.word	0x08024e51
 801cb34:	2400e0a4 	.word	0x2400e0a4

0801cb38 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cb38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cb3c:	ed2d 8b08 	vpush	{d8-d11}
 801cb40:	b093      	sub	sp, #76	; 0x4c
 801cb42:	461c      	mov	r4, r3
 801cb44:	eeb0 aa40 	vmov.f32	s20, s0
 801cb48:	920c      	str	r2, [sp, #48]	; 0x30
 801cb4a:	eef0 9a60 	vmov.f32	s19, s1
 801cb4e:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801cb50:	eeb0 9a41 	vmov.f32	s18, s2
 801cb54:	9011      	str	r0, [sp, #68]	; 0x44
 801cb56:	eeb0 8a62 	vmov.f32	s16, s5
 801cb5a:	6850      	ldr	r0, [r2, #4]
 801cb5c:	eef0 8a43 	vmov.f32	s17, s6
 801cb60:	9107      	str	r1, [sp, #28]
 801cb62:	eef0 ba44 	vmov.f32	s23, s8
 801cb66:	6812      	ldr	r2, [r2, #0]
 801cb68:	eeb0 ba64 	vmov.f32	s22, s9
 801cb6c:	eef0 aa45 	vmov.f32	s21, s10
 801cb70:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801cb74:	e9dd 5625 	ldrd	r5, r6, [sp, #148]	; 0x94
 801cb78:	fb00 1303 	mla	r3, r0, r3, r1
 801cb7c:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801cb80:	eb02 0b03 	add.w	fp, r2, r3
 801cb84:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801cb86:	689b      	ldr	r3, [r3, #8]
 801cb88:	3301      	adds	r3, #1
 801cb8a:	f023 0301 	bic.w	r3, r3, #1
 801cb8e:	9309      	str	r3, [sp, #36]	; 0x24
 801cb90:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801cb92:	f8d3 8000 	ldr.w	r8, [r3]
 801cb96:	9b07      	ldr	r3, [sp, #28]
 801cb98:	2b00      	cmp	r3, #0
 801cb9a:	dc03      	bgt.n	801cba4 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801cb9c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801cb9e:	2b00      	cmp	r3, #0
 801cba0:	f340 822b 	ble.w	801cffa <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c2>
 801cba4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801cba6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801cbaa:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801cbae:	1e48      	subs	r0, r1, #1
 801cbb0:	1e57      	subs	r7, r2, #1
 801cbb2:	2c00      	cmp	r4, #0
 801cbb4:	f340 80d7 	ble.w	801cd66 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801cbb8:	ea5f 4c25 	movs.w	ip, r5, asr #16
 801cbbc:	ea4f 4326 	mov.w	r3, r6, asr #16
 801cbc0:	d406      	bmi.n	801cbd0 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801cbc2:	4584      	cmp	ip, r0
 801cbc4:	da04      	bge.n	801cbd0 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801cbc6:	2b00      	cmp	r3, #0
 801cbc8:	db02      	blt.n	801cbd0 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801cbca:	42bb      	cmp	r3, r7
 801cbcc:	f2c0 80cc 	blt.w	801cd68 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801cbd0:	f11c 0c01 	adds.w	ip, ip, #1
 801cbd4:	f100 80bf 	bmi.w	801cd56 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21e>
 801cbd8:	4561      	cmp	r1, ip
 801cbda:	f2c0 80bc 	blt.w	801cd56 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21e>
 801cbde:	3301      	adds	r3, #1
 801cbe0:	f100 80b9 	bmi.w	801cd56 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21e>
 801cbe4:	429a      	cmp	r2, r3
 801cbe6:	f2c0 80b6 	blt.w	801cd56 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21e>
 801cbea:	46a2      	mov	sl, r4
 801cbec:	465f      	mov	r7, fp
 801cbee:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801cbf2:	f1ba 0f00 	cmp.w	sl, #0
 801cbf6:	f340 80d4 	ble.w	801cda2 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801cbfa:	f3c5 3303 	ubfx	r3, r5, #12, #4
 801cbfe:	1430      	asrs	r0, r6, #16
 801cc00:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801cc04:	9308      	str	r3, [sp, #32]
 801cc06:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801cc08:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801cc0c:	142b      	asrs	r3, r5, #16
 801cc0e:	f100 8124 	bmi.w	801ce5a <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801cc12:	f10c 32ff 	add.w	r2, ip, #4294967295
 801cc16:	4293      	cmp	r3, r2
 801cc18:	f280 811f 	bge.w	801ce5a <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801cc1c:	2800      	cmp	r0, #0
 801cc1e:	f2c0 811c 	blt.w	801ce5a <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801cc22:	f10e 32ff 	add.w	r2, lr, #4294967295
 801cc26:	4290      	cmp	r0, r2
 801cc28:	f280 8117 	bge.w	801ce5a <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801cc2c:	fb00 3309 	mla	r3, r0, r9, r3
 801cc30:	0858      	lsrs	r0, r3, #1
 801cc32:	07da      	lsls	r2, r3, #31
 801cc34:	9a08      	ldr	r2, [sp, #32]
 801cc36:	f818 c000 	ldrb.w	ip, [r8, r0]
 801cc3a:	bf54      	ite	pl
 801cc3c:	f00c 0c0f 	andpl.w	ip, ip, #15
 801cc40:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801cc44:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801cc48:	fa5f fc8c 	uxtb.w	ip, ip
 801cc4c:	2a00      	cmp	r2, #0
 801cc4e:	f000 80ed 	beq.w	801ce2c <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801cc52:	1c58      	adds	r0, r3, #1
 801cc54:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801cc58:	07c0      	lsls	r0, r0, #31
 801cc5a:	f818 e00e 	ldrb.w	lr, [r8, lr]
 801cc5e:	bf54      	ite	pl
 801cc60:	f00e 0e0f 	andpl.w	lr, lr, #15
 801cc64:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801cc68:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801cc6c:	fa5f fe8e 	uxtb.w	lr, lr
 801cc70:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 801cc74:	b1c9      	cbz	r1, 801ccaa <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x172>
 801cc76:	444b      	add	r3, r9
 801cc78:	0858      	lsrs	r0, r3, #1
 801cc7a:	07da      	lsls	r2, r3, #31
 801cc7c:	f818 0000 	ldrb.w	r0, [r8, r0]
 801cc80:	bf54      	ite	pl
 801cc82:	f000 000f 	andpl.w	r0, r0, #15
 801cc86:	1100      	asrmi	r0, r0, #4
 801cc88:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801cc8c:	b2c0      	uxtb	r0, r0
 801cc8e:	900a      	str	r0, [sp, #40]	; 0x28
 801cc90:	1c58      	adds	r0, r3, #1
 801cc92:	0843      	lsrs	r3, r0, #1
 801cc94:	07c2      	lsls	r2, r0, #31
 801cc96:	f818 3003 	ldrb.w	r3, [r8, r3]
 801cc9a:	bf54      	ite	pl
 801cc9c:	f003 030f 	andpl.w	r3, r3, #15
 801cca0:	111b      	asrmi	r3, r3, #4
 801cca2:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801cca6:	b2db      	uxtb	r3, r3
 801cca8:	930e      	str	r3, [sp, #56]	; 0x38
 801ccaa:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801ccae:	b289      	uxth	r1, r1
 801ccb0:	fb02 f301 	mul.w	r3, r2, r1
 801ccb4:	0112      	lsls	r2, r2, #4
 801ccb6:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801ccba:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801ccbe:	1ad2      	subs	r2, r2, r3
 801ccc0:	b289      	uxth	r1, r1
 801ccc2:	b292      	uxth	r2, r2
 801ccc4:	1a40      	subs	r0, r0, r1
 801ccc6:	fa1f fe80 	uxth.w	lr, r0
 801ccca:	980d      	ldr	r0, [sp, #52]	; 0x34
 801cccc:	4342      	muls	r2, r0
 801ccce:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801ccd2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801ccd4:	fb01 c102 	mla	r1, r1, r2, ip
 801ccd8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801ccda:	fb03 1302 	mla	r3, r3, r2, r1
 801ccde:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801cce2:	b383      	cbz	r3, 801cd46 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801cce4:	4ac7      	ldr	r2, [pc, #796]	; (801d004 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4cc>)
 801cce6:	2bff      	cmp	r3, #255	; 0xff
 801cce8:	6812      	ldr	r2, [r2, #0]
 801ccea:	f3c2 4e07 	ubfx	lr, r2, #16, #8
 801ccee:	f3c2 2007 	ubfx	r0, r2, #8, #8
 801ccf2:	b2d2      	uxtb	r2, r2
 801ccf4:	f000 80ac 	beq.w	801ce50 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801ccf8:	b299      	uxth	r1, r3
 801ccfa:	43db      	mvns	r3, r3
 801ccfc:	f897 c000 	ldrb.w	ip, [r7]
 801cd00:	fb12 f201 	smulbb	r2, r2, r1
 801cd04:	b2db      	uxtb	r3, r3
 801cd06:	fb10 f001 	smulbb	r0, r0, r1
 801cd0a:	fb0c 2203 	mla	r2, ip, r3, r2
 801cd0e:	fb1e f101 	smulbb	r1, lr, r1
 801cd12:	b292      	uxth	r2, r2
 801cd14:	f102 0c01 	add.w	ip, r2, #1
 801cd18:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801cd1c:	1212      	asrs	r2, r2, #8
 801cd1e:	703a      	strb	r2, [r7, #0]
 801cd20:	787a      	ldrb	r2, [r7, #1]
 801cd22:	fb02 0003 	mla	r0, r2, r3, r0
 801cd26:	b280      	uxth	r0, r0
 801cd28:	1c42      	adds	r2, r0, #1
 801cd2a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801cd2e:	78ba      	ldrb	r2, [r7, #2]
 801cd30:	fb02 1303 	mla	r3, r2, r3, r1
 801cd34:	1200      	asrs	r0, r0, #8
 801cd36:	b29b      	uxth	r3, r3
 801cd38:	7078      	strb	r0, [r7, #1]
 801cd3a:	f103 0e01 	add.w	lr, r3, #1
 801cd3e:	eb0e 2313 	add.w	r3, lr, r3, lsr #8
 801cd42:	121b      	asrs	r3, r3, #8
 801cd44:	70bb      	strb	r3, [r7, #2]
 801cd46:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801cd48:	3703      	adds	r7, #3
 801cd4a:	f10a 3aff 	add.w	sl, sl, #4294967295
 801cd4e:	441d      	add	r5, r3
 801cd50:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801cd52:	441e      	add	r6, r3
 801cd54:	e74d      	b.n	801cbf2 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 801cd56:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801cd58:	3c01      	subs	r4, #1
 801cd5a:	f10b 0b03 	add.w	fp, fp, #3
 801cd5e:	441d      	add	r5, r3
 801cd60:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801cd62:	441e      	add	r6, r3
 801cd64:	e725      	b.n	801cbb2 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801cd66:	d021      	beq.n	801cdac <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801cd68:	1e63      	subs	r3, r4, #1
 801cd6a:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801cd6c:	fb00 5003 	mla	r0, r0, r3, r5
 801cd70:	1400      	asrs	r0, r0, #16
 801cd72:	f53f af3a 	bmi.w	801cbea <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801cd76:	3901      	subs	r1, #1
 801cd78:	4288      	cmp	r0, r1
 801cd7a:	f6bf af36 	bge.w	801cbea <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801cd7e:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801cd80:	fb01 6303 	mla	r3, r1, r3, r6
 801cd84:	141b      	asrs	r3, r3, #16
 801cd86:	f53f af30 	bmi.w	801cbea <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801cd8a:	3a01      	subs	r2, #1
 801cd8c:	4293      	cmp	r3, r2
 801cd8e:	f6bf af2c 	bge.w	801cbea <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801cd92:	f10b 0c03 	add.w	ip, fp, #3
 801cd96:	46a6      	mov	lr, r4
 801cd98:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801cd9c:	f1be 0f00 	cmp.w	lr, #0
 801cda0:	dc79      	bgt.n	801ce96 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801cda2:	ea24 74e4 	bic.w	r4, r4, r4, asr #31
 801cda6:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801cdaa:	44a3      	add	fp, r4
 801cdac:	9b07      	ldr	r3, [sp, #28]
 801cdae:	2b00      	cmp	r3, #0
 801cdb0:	f340 8123 	ble.w	801cffa <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c2>
 801cdb4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801cdb8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cdba:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801cdbe:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801cdc2:	eef0 6a48 	vmov.f32	s13, s16
 801cdc6:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801cdca:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801cdce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cdd2:	ee16 5a90 	vmov	r5, s13
 801cdd6:	eef0 6a68 	vmov.f32	s13, s17
 801cdda:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cdde:	ee16 6a90 	vmov	r6, s13
 801cde2:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801cde6:	ee69 7a27 	vmul.f32	s15, s18, s15
 801cdea:	ee37 8a48 	vsub.f32	s16, s14, s16
 801cdee:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801cdf2:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801cdf6:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801cdfa:	ee18 2a10 	vmov	r2, s16
 801cdfe:	eeb0 8a47 	vmov.f32	s16, s14
 801ce02:	fb92 f3f3 	sdiv	r3, r2, r3
 801ce06:	ee18 2a90 	vmov	r2, s17
 801ce0a:	9327      	str	r3, [sp, #156]	; 0x9c
 801ce0c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ce0e:	eef0 8a67 	vmov.f32	s17, s15
 801ce12:	fb92 f3f3 	sdiv	r3, r2, r3
 801ce16:	9328      	str	r3, [sp, #160]	; 0xa0
 801ce18:	9b07      	ldr	r3, [sp, #28]
 801ce1a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801ce1c:	3b01      	subs	r3, #1
 801ce1e:	9307      	str	r3, [sp, #28]
 801ce20:	bf08      	it	eq
 801ce22:	4614      	moveq	r4, r2
 801ce24:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ce26:	bf18      	it	ne
 801ce28:	461c      	movne	r4, r3
 801ce2a:	e6b4      	b.n	801cb96 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801ce2c:	2900      	cmp	r1, #0
 801ce2e:	f43f af3c 	beq.w	801ccaa <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x172>
 801ce32:	eb09 0003 	add.w	r0, r9, r3
 801ce36:	0843      	lsrs	r3, r0, #1
 801ce38:	07c0      	lsls	r0, r0, #31
 801ce3a:	f818 3003 	ldrb.w	r3, [r8, r3]
 801ce3e:	bf54      	ite	pl
 801ce40:	f003 030f 	andpl.w	r3, r3, #15
 801ce44:	111b      	asrmi	r3, r3, #4
 801ce46:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801ce4a:	b2db      	uxtb	r3, r3
 801ce4c:	930a      	str	r3, [sp, #40]	; 0x28
 801ce4e:	e72c      	b.n	801ccaa <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x172>
 801ce50:	703a      	strb	r2, [r7, #0]
 801ce52:	7078      	strb	r0, [r7, #1]
 801ce54:	f887 e002 	strb.w	lr, [r7, #2]
 801ce58:	e775      	b.n	801cd46 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801ce5a:	1c5a      	adds	r2, r3, #1
 801ce5c:	f53f af73 	bmi.w	801cd46 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801ce60:	4594      	cmp	ip, r2
 801ce62:	f6ff af70 	blt.w	801cd46 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801ce66:	1c42      	adds	r2, r0, #1
 801ce68:	f53f af6d 	bmi.w	801cd46 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801ce6c:	4596      	cmp	lr, r2
 801ce6e:	f6ff af6a 	blt.w	801cd46 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801ce72:	9302      	str	r3, [sp, #8]
 801ce74:	fa0f f38e 	sxth.w	r3, lr
 801ce78:	9a08      	ldr	r2, [sp, #32]
 801ce7a:	9301      	str	r3, [sp, #4]
 801ce7c:	fa0f f38c 	sxth.w	r3, ip
 801ce80:	9105      	str	r1, [sp, #20]
 801ce82:	4639      	mov	r1, r7
 801ce84:	9300      	str	r3, [sp, #0]
 801ce86:	464b      	mov	r3, r9
 801ce88:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801ce8c:	4642      	mov	r2, r8
 801ce8e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801ce90:	f7ff fd70 	bl	801c974 <_ZNK8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKtsssiihh>
 801ce94:	e757      	b.n	801cd46 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801ce96:	142a      	asrs	r2, r5, #16
 801ce98:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801ce9c:	1433      	asrs	r3, r6, #16
 801ce9e:	f3c6 3703 	ubfx	r7, r6, #12, #4
 801cea2:	fb09 2303 	mla	r3, r9, r3, r2
 801cea6:	085a      	lsrs	r2, r3, #1
 801cea8:	07d9      	lsls	r1, r3, #31
 801ceaa:	f818 2002 	ldrb.w	r2, [r8, r2]
 801ceae:	bf54      	ite	pl
 801ceb0:	f002 020f 	andpl.w	r2, r2, #15
 801ceb4:	1112      	asrmi	r2, r2, #4
 801ceb6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ceba:	b2d2      	uxtb	r2, r2
 801cebc:	2800      	cmp	r0, #0
 801cebe:	f000 8085 	beq.w	801cfcc <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801cec2:	f103 0a01 	add.w	sl, r3, #1
 801cec6:	ea4f 015a 	mov.w	r1, sl, lsr #1
 801ceca:	f01a 0f01 	tst.w	sl, #1
 801cece:	f818 1001 	ldrb.w	r1, [r8, r1]
 801ced2:	bf0c      	ite	eq
 801ced4:	f001 010f 	andeq.w	r1, r1, #15
 801ced8:	1109      	asrne	r1, r1, #4
 801ceda:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801cede:	b2c9      	uxtb	r1, r1
 801cee0:	910f      	str	r1, [sp, #60]	; 0x3c
 801cee2:	b1df      	cbz	r7, 801cf1c <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 801cee4:	444b      	add	r3, r9
 801cee6:	0859      	lsrs	r1, r3, #1
 801cee8:	f013 0f01 	tst.w	r3, #1
 801ceec:	f103 0301 	add.w	r3, r3, #1
 801cef0:	f818 1001 	ldrb.w	r1, [r8, r1]
 801cef4:	bf0c      	ite	eq
 801cef6:	f001 010f 	andeq.w	r1, r1, #15
 801cefa:	1109      	asrne	r1, r1, #4
 801cefc:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801cf00:	b2c9      	uxtb	r1, r1
 801cf02:	910b      	str	r1, [sp, #44]	; 0x2c
 801cf04:	0859      	lsrs	r1, r3, #1
 801cf06:	07db      	lsls	r3, r3, #31
 801cf08:	f818 1001 	ldrb.w	r1, [r8, r1]
 801cf0c:	bf54      	ite	pl
 801cf0e:	f001 010f 	andpl.w	r1, r1, #15
 801cf12:	1109      	asrmi	r1, r1, #4
 801cf14:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801cf18:	b2c9      	uxtb	r1, r1
 801cf1a:	9110      	str	r1, [sp, #64]	; 0x40
 801cf1c:	b280      	uxth	r0, r0
 801cf1e:	b2bf      	uxth	r7, r7
 801cf20:	fb00 f307 	mul.w	r3, r0, r7
 801cf24:	0100      	lsls	r0, r0, #4
 801cf26:	ebc3 1707 	rsb	r7, r3, r7, lsl #4
 801cf2a:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 801cf2e:	1ac0      	subs	r0, r0, r3
 801cf30:	b2bf      	uxth	r7, r7
 801cf32:	b280      	uxth	r0, r0
 801cf34:	1bc9      	subs	r1, r1, r7
 801cf36:	fa1f fa81 	uxth.w	sl, r1
 801cf3a:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801cf3c:	4348      	muls	r0, r1
 801cf3e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801cf40:	fb02 020a 	mla	r2, r2, sl, r0
 801cf44:	fb07 2701 	mla	r7, r7, r1, r2
 801cf48:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801cf4a:	fb03 7302 	mla	r3, r3, r2, r7
 801cf4e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801cf52:	b393      	cbz	r3, 801cfba <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x482>
 801cf54:	4a2b      	ldr	r2, [pc, #172]	; (801d004 <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4cc>)
 801cf56:	2bff      	cmp	r3, #255	; 0xff
 801cf58:	6811      	ldr	r1, [r2, #0]
 801cf5a:	f3c1 4a07 	ubfx	sl, r1, #16, #8
 801cf5e:	f3c1 2707 	ubfx	r7, r1, #8, #8
 801cf62:	b2c9      	uxtb	r1, r1
 801cf64:	d042      	beq.n	801cfec <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801cf66:	b298      	uxth	r0, r3
 801cf68:	43db      	mvns	r3, r3
 801cf6a:	f81c 2c03 	ldrb.w	r2, [ip, #-3]
 801cf6e:	fb11 f100 	smulbb	r1, r1, r0
 801cf72:	b2db      	uxtb	r3, r3
 801cf74:	fb17 f700 	smulbb	r7, r7, r0
 801cf78:	fb02 1103 	mla	r1, r2, r3, r1
 801cf7c:	fb1a f000 	smulbb	r0, sl, r0
 801cf80:	b289      	uxth	r1, r1
 801cf82:	1c4a      	adds	r2, r1, #1
 801cf84:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801cf88:	f81c 2c02 	ldrb.w	r2, [ip, #-2]
 801cf8c:	fb02 7703 	mla	r7, r2, r3, r7
 801cf90:	1209      	asrs	r1, r1, #8
 801cf92:	b2bf      	uxth	r7, r7
 801cf94:	f80c 1c03 	strb.w	r1, [ip, #-3]
 801cf98:	1c7a      	adds	r2, r7, #1
 801cf9a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801cf9e:	f81c 2c01 	ldrb.w	r2, [ip, #-1]
 801cfa2:	fb02 0303 	mla	r3, r2, r3, r0
 801cfa6:	123f      	asrs	r7, r7, #8
 801cfa8:	b29b      	uxth	r3, r3
 801cfaa:	f80c 7c02 	strb.w	r7, [ip, #-2]
 801cfae:	1c5a      	adds	r2, r3, #1
 801cfb0:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801cfb4:	121b      	asrs	r3, r3, #8
 801cfb6:	f80c 3c01 	strb.w	r3, [ip, #-1]
 801cfba:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801cfbc:	f10c 0c03 	add.w	ip, ip, #3
 801cfc0:	f10e 3eff 	add.w	lr, lr, #4294967295
 801cfc4:	441d      	add	r5, r3
 801cfc6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801cfc8:	441e      	add	r6, r3
 801cfca:	e6e7      	b.n	801cd9c <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 801cfcc:	2f00      	cmp	r7, #0
 801cfce:	d0a5      	beq.n	801cf1c <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 801cfd0:	444b      	add	r3, r9
 801cfd2:	0859      	lsrs	r1, r3, #1
 801cfd4:	07db      	lsls	r3, r3, #31
 801cfd6:	f818 1001 	ldrb.w	r1, [r8, r1]
 801cfda:	bf54      	ite	pl
 801cfdc:	f001 010f 	andpl.w	r1, r1, #15
 801cfe0:	1109      	asrmi	r1, r1, #4
 801cfe2:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801cfe6:	b2c9      	uxtb	r1, r1
 801cfe8:	910b      	str	r1, [sp, #44]	; 0x2c
 801cfea:	e797      	b.n	801cf1c <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 801cfec:	f80c 1c03 	strb.w	r1, [ip, #-3]
 801cff0:	f80c 7c02 	strb.w	r7, [ip, #-2]
 801cff4:	f80c ac01 	strb.w	sl, [ip, #-1]
 801cff8:	e7df      	b.n	801cfba <_ZN8touchgfx8LCD24bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x482>
 801cffa:	b013      	add	sp, #76	; 0x4c
 801cffc:	ecbd 8b08 	vpop	{d8-d11}
 801d000:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d004:	2400e0a4 	.word	0x2400e0a4

0801d008 <CRC_Lock>:
 801d008:	4a20      	ldr	r2, [pc, #128]	; (801d08c <CRC_Lock+0x84>)
 801d00a:	b530      	push	{r4, r5, lr}
 801d00c:	6813      	ldr	r3, [r2, #0]
 801d00e:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 801d012:	f24c 2540 	movw	r5, #49728	; 0xc240
 801d016:	f023 0301 	bic.w	r3, r3, #1
 801d01a:	6013      	str	r3, [r2, #0]
 801d01c:	4b1c      	ldr	r3, [pc, #112]	; (801d090 <CRC_Lock+0x88>)
 801d01e:	681a      	ldr	r2, [r3, #0]
 801d020:	4022      	ands	r2, r4
 801d022:	42aa      	cmp	r2, r5
 801d024:	d005      	beq.n	801d032 <CRC_Lock+0x2a>
 801d026:	681b      	ldr	r3, [r3, #0]
 801d028:	f24c 2270 	movw	r2, #49776	; 0xc270
 801d02c:	4023      	ands	r3, r4
 801d02e:	4293      	cmp	r3, r2
 801d030:	d124      	bne.n	801d07c <CRC_Lock+0x74>
 801d032:	4b18      	ldr	r3, [pc, #96]	; (801d094 <CRC_Lock+0x8c>)
 801d034:	681b      	ldr	r3, [r3, #0]
 801d036:	bb0b      	cbnz	r3, 801d07c <CRC_Lock+0x74>
 801d038:	4b17      	ldr	r3, [pc, #92]	; (801d098 <CRC_Lock+0x90>)
 801d03a:	681a      	ldr	r2, [r3, #0]
 801d03c:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801d040:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 801d044:	d00d      	beq.n	801d062 <CRC_Lock+0x5a>
 801d046:	681a      	ldr	r2, [r3, #0]
 801d048:	f240 4483 	movw	r4, #1155	; 0x483
 801d04c:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801d050:	42a2      	cmp	r2, r4
 801d052:	d006      	beq.n	801d062 <CRC_Lock+0x5a>
 801d054:	681b      	ldr	r3, [r3, #0]
 801d056:	f240 4285 	movw	r2, #1157	; 0x485
 801d05a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801d05e:	4293      	cmp	r3, r2
 801d060:	d10c      	bne.n	801d07c <CRC_Lock+0x74>
 801d062:	4b0e      	ldr	r3, [pc, #56]	; (801d09c <CRC_Lock+0x94>)
 801d064:	2201      	movs	r2, #1
 801d066:	601a      	str	r2, [r3, #0]
 801d068:	681a      	ldr	r2, [r3, #0]
 801d06a:	2a00      	cmp	r2, #0
 801d06c:	d1fc      	bne.n	801d068 <CRC_Lock+0x60>
 801d06e:	4b0c      	ldr	r3, [pc, #48]	; (801d0a0 <CRC_Lock+0x98>)
 801d070:	6018      	str	r0, [r3, #0]
 801d072:	6818      	ldr	r0, [r3, #0]
 801d074:	1a43      	subs	r3, r0, r1
 801d076:	4258      	negs	r0, r3
 801d078:	4158      	adcs	r0, r3
 801d07a:	bd30      	pop	{r4, r5, pc}
 801d07c:	4b09      	ldr	r3, [pc, #36]	; (801d0a4 <CRC_Lock+0x9c>)
 801d07e:	2201      	movs	r2, #1
 801d080:	601a      	str	r2, [r3, #0]
 801d082:	681a      	ldr	r2, [r3, #0]
 801d084:	2a00      	cmp	r2, #0
 801d086:	d1fc      	bne.n	801d082 <CRC_Lock+0x7a>
 801d088:	4b07      	ldr	r3, [pc, #28]	; (801d0a8 <CRC_Lock+0xa0>)
 801d08a:	e7f1      	b.n	801d070 <CRC_Lock+0x68>
 801d08c:	e0002000 	.word	0xe0002000
 801d090:	e000ed00 	.word	0xe000ed00
 801d094:	e0042000 	.word	0xe0042000
 801d098:	5c001000 	.word	0x5c001000
 801d09c:	58024c08 	.word	0x58024c08
 801d0a0:	58024c00 	.word	0x58024c00
 801d0a4:	40023008 	.word	0x40023008
 801d0a8:	40023000 	.word	0x40023000

0801d0ac <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801d0ac:	6101      	str	r1, [r0, #16]
 801d0ae:	4770      	bx	lr

0801d0b0 <_ZN8touchgfx8Gestures4tickEv>:
 801d0b0:	7b83      	ldrb	r3, [r0, #14]
 801d0b2:	b14b      	cbz	r3, 801d0c8 <_ZN8touchgfx8Gestures4tickEv+0x18>
 801d0b4:	8903      	ldrh	r3, [r0, #8]
 801d0b6:	3301      	adds	r3, #1
 801d0b8:	b29b      	uxth	r3, r3
 801d0ba:	2b07      	cmp	r3, #7
 801d0bc:	8103      	strh	r3, [r0, #8]
 801d0be:	bf81      	itttt	hi
 801d0c0:	2300      	movhi	r3, #0
 801d0c2:	8143      	strhhi	r3, [r0, #10]
 801d0c4:	8183      	strhhi	r3, [r0, #12]
 801d0c6:	7383      	strbhi	r3, [r0, #14]
 801d0c8:	4770      	bx	lr
	...

0801d0cc <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801d0cc:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801d0d0:	4698      	mov	r8, r3
 801d0d2:	8883      	ldrh	r3, [r0, #4]
 801d0d4:	4604      	mov	r4, r0
 801d0d6:	4617      	mov	r7, r2
 801d0d8:	f8ad 3006 	strh.w	r3, [sp, #6]
 801d0dc:	eba8 0303 	sub.w	r3, r8, r3
 801d0e0:	4a19      	ldr	r2, [pc, #100]	; (801d148 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 801d0e2:	460e      	mov	r6, r1
 801d0e4:	b21b      	sxth	r3, r3
 801d0e6:	88c1      	ldrh	r1, [r0, #6]
 801d0e8:	9200      	str	r2, [sp, #0]
 801d0ea:	2000      	movs	r0, #0
 801d0ec:	2b00      	cmp	r3, #0
 801d0ee:	8aa2      	ldrh	r2, [r4, #20]
 801d0f0:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 801d0f4:	bfb8      	it	lt
 801d0f6:	425b      	neglt	r3, r3
 801d0f8:	f88d 0004 	strb.w	r0, [sp, #4]
 801d0fc:	f8ad 1008 	strh.w	r1, [sp, #8]
 801d100:	b21b      	sxth	r3, r3
 801d102:	f8ad 800a 	strh.w	r8, [sp, #10]
 801d106:	f8ad 500c 	strh.w	r5, [sp, #12]
 801d10a:	4293      	cmp	r3, r2
 801d10c:	dc07      	bgt.n	801d11e <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
 801d10e:	1a69      	subs	r1, r5, r1
 801d110:	b209      	sxth	r1, r1
 801d112:	2900      	cmp	r1, #0
 801d114:	bfb8      	it	lt
 801d116:	4249      	neglt	r1, r1
 801d118:	b209      	sxth	r1, r1
 801d11a:	428a      	cmp	r2, r1
 801d11c:	da10      	bge.n	801d140 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
 801d11e:	6920      	ldr	r0, [r4, #16]
 801d120:	4669      	mov	r1, sp
 801d122:	eba8 0606 	sub.w	r6, r8, r6
 801d126:	1bef      	subs	r7, r5, r7
 801d128:	6803      	ldr	r3, [r0, #0]
 801d12a:	685b      	ldr	r3, [r3, #4]
 801d12c:	4798      	blx	r3
 801d12e:	2300      	movs	r3, #0
 801d130:	2001      	movs	r0, #1
 801d132:	8166      	strh	r6, [r4, #10]
 801d134:	8123      	strh	r3, [r4, #8]
 801d136:	81a7      	strh	r7, [r4, #12]
 801d138:	f8a4 8004 	strh.w	r8, [r4, #4]
 801d13c:	80e5      	strh	r5, [r4, #6]
 801d13e:	73a0      	strb	r0, [r4, #14]
 801d140:	b004      	add	sp, #16
 801d142:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801d146:	bf00      	nop
 801d148:	08024294 	.word	0x08024294

0801d14c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801d14c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801d14e:	461e      	mov	r6, r3
 801d150:	1e4b      	subs	r3, r1, #1
 801d152:	b085      	sub	sp, #20
 801d154:	4604      	mov	r4, r0
 801d156:	2b01      	cmp	r3, #1
 801d158:	460d      	mov	r5, r1
 801d15a:	4617      	mov	r7, r2
 801d15c:	d84b      	bhi.n	801d1f6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801d15e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801d162:	1cd3      	adds	r3, r2, #3
 801d164:	b29b      	uxth	r3, r3
 801d166:	2b06      	cmp	r3, #6
 801d168:	d916      	bls.n	801d198 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801d16a:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 801d20c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801d16e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801d172:	f8cd c004 	str.w	ip, [sp, #4]
 801d176:	f04f 0c00 	mov.w	ip, #0
 801d17a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801d17e:	6900      	ldr	r0, [r0, #16]
 801d180:	f8ad 100c 	strh.w	r1, [sp, #12]
 801d184:	a901      	add	r1, sp, #4
 801d186:	f88d c008 	strb.w	ip, [sp, #8]
 801d18a:	f8ad 200a 	strh.w	r2, [sp, #10]
 801d18e:	f8ad 300e 	strh.w	r3, [sp, #14]
 801d192:	6803      	ldr	r3, [r0, #0]
 801d194:	689b      	ldr	r3, [r3, #8]
 801d196:	4798      	blx	r3
 801d198:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801d19c:	1cd3      	adds	r3, r2, #3
 801d19e:	b29b      	uxth	r3, r3
 801d1a0:	2b06      	cmp	r3, #6
 801d1a2:	d916      	bls.n	801d1d2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801d1a4:	f8df c064 	ldr.w	ip, [pc, #100]	; 801d20c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801d1a8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801d1ac:	f8cd c004 	str.w	ip, [sp, #4]
 801d1b0:	f04f 0c01 	mov.w	ip, #1
 801d1b4:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801d1b8:	6920      	ldr	r0, [r4, #16]
 801d1ba:	f8ad 100c 	strh.w	r1, [sp, #12]
 801d1be:	a901      	add	r1, sp, #4
 801d1c0:	f88d c008 	strb.w	ip, [sp, #8]
 801d1c4:	f8ad 200a 	strh.w	r2, [sp, #10]
 801d1c8:	f8ad 300e 	strh.w	r3, [sp, #14]
 801d1cc:	6803      	ldr	r3, [r0, #0]
 801d1ce:	689b      	ldr	r3, [r3, #8]
 801d1d0:	4798      	blx	r3
 801d1d2:	4b0d      	ldr	r3, [pc, #52]	; (801d208 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 801d1d4:	a901      	add	r1, sp, #4
 801d1d6:	6920      	ldr	r0, [r4, #16]
 801d1d8:	9301      	str	r3, [sp, #4]
 801d1da:	2300      	movs	r3, #0
 801d1dc:	f88d 5008 	strb.w	r5, [sp, #8]
 801d1e0:	f8ad 700a 	strh.w	r7, [sp, #10]
 801d1e4:	f8ad 600c 	strh.w	r6, [sp, #12]
 801d1e8:	f8ad 300e 	strh.w	r3, [sp, #14]
 801d1ec:	6803      	ldr	r3, [r0, #0]
 801d1ee:	681b      	ldr	r3, [r3, #0]
 801d1f0:	4798      	blx	r3
 801d1f2:	b005      	add	sp, #20
 801d1f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801d1f6:	2900      	cmp	r1, #0
 801d1f8:	d1eb      	bne.n	801d1d2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801d1fa:	80a2      	strh	r2, [r4, #4]
 801d1fc:	80c6      	strh	r6, [r0, #6]
 801d1fe:	60a1      	str	r1, [r4, #8]
 801d200:	81a1      	strh	r1, [r4, #12]
 801d202:	73a1      	strb	r1, [r4, #14]
 801d204:	e7e5      	b.n	801d1d2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801d206:	bf00      	nop
 801d208:	08024280 	.word	0x08024280
 801d20c:	080242a8 	.word	0x080242a8

0801d210 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.14>:
 801d210:	10c9      	asrs	r1, r1, #3
 801d212:	2900      	cmp	r1, #0
 801d214:	bfb8      	it	lt
 801d216:	4249      	neglt	r1, r1
 801d218:	2801      	cmp	r0, #1
 801d21a:	d108      	bne.n	801d22e <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.14+0x1e>
 801d21c:	f3c1 0008 	ubfx	r0, r1, #0, #9
 801d220:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 801d224:	4601      	mov	r1, r0
 801d226:	dd02      	ble.n	801d22e <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.14+0x1e>
 801d228:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 801d22c:	4770      	bx	lr
 801d22e:	29ff      	cmp	r1, #255	; 0xff
 801d230:	bfa8      	it	ge
 801d232:	21ff      	movge	r1, #255	; 0xff
 801d234:	4608      	mov	r0, r1
 801d236:	4770      	bx	lr

0801d238 <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE>:
 801d238:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d23c:	688c      	ldr	r4, [r1, #8]
 801d23e:	b087      	sub	sp, #28
 801d240:	4607      	mov	r7, r0
 801d242:	2c00      	cmp	r4, #0
 801d244:	db2b      	blt.n	801d29e <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE+0x66>
 801d246:	6803      	ldr	r3, [r0, #0]
 801d248:	691a      	ldr	r2, [r3, #16]
 801d24a:	42a2      	cmp	r2, r4
 801d24c:	dd27      	ble.n	801d29e <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE+0x66>
 801d24e:	685a      	ldr	r2, [r3, #4]
 801d250:	695e      	ldr	r6, [r3, #20]
 801d252:	68cd      	ldr	r5, [r1, #12]
 801d254:	fb06 2604 	mla	r6, r6, r4, r2
 801d258:	f8d1 901c 	ldr.w	r9, [r1, #28]
 801d25c:	698a      	ldr	r2, [r1, #24]
 801d25e:	f893 a008 	ldrb.w	sl, [r3, #8]
 801d262:	f8d1 8020 	ldr.w	r8, [r1, #32]
 801d266:	9205      	str	r2, [sp, #20]
 801d268:	f839 2f02 	ldrh.w	r2, [r9, #2]!
 801d26c:	9b05      	ldr	r3, [sp, #20]
 801d26e:	6839      	ldr	r1, [r7, #0]
 801d270:	eb03 0c02 	add.w	ip, r3, r2
 801d274:	f838 3f02 	ldrh.w	r3, [r8, #2]!
 801d278:	68c9      	ldr	r1, [r1, #12]
 801d27a:	1898      	adds	r0, r3, r2
 801d27c:	4288      	cmp	r0, r1
 801d27e:	db02      	blt.n	801d286 <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE+0x4e>
 801d280:	1a8b      	subs	r3, r1, r2
 801d282:	2b00      	cmp	r3, #0
 801d284:	dd09      	ble.n	801d29a <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE+0x62>
 801d286:	6878      	ldr	r0, [r7, #4]
 801d288:	6801      	ldr	r1, [r0, #0]
 801d28a:	9400      	str	r4, [sp, #0]
 801d28c:	e9cd 3c01 	strd	r3, ip, [sp, #4]
 801d290:	4653      	mov	r3, sl
 801d292:	f8d1 b008 	ldr.w	fp, [r1, #8]
 801d296:	4631      	mov	r1, r6
 801d298:	47d8      	blx	fp
 801d29a:	3d01      	subs	r5, #1
 801d29c:	d1e4      	bne.n	801d268 <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE+0x30>
 801d29e:	b007      	add	sp, #28
 801d2a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d2a4 <_ZN8touchgfx10Rasterizer6lineToEii>:
 801d2a4:	f890 3044 	ldrb.w	r3, [r0, #68]	; 0x44
 801d2a8:	b90b      	cbnz	r3, 801d2ae <_ZN8touchgfx10Rasterizer6lineToEii+0xa>
 801d2aa:	f001 bf29 	b.w	801f100 <_ZN8touchgfx7Outline6lineToEii>
 801d2ae:	4770      	bx	lr

0801d2b0 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 801d2b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801d2b4:	4604      	mov	r4, r0
 801d2b6:	2600      	movs	r6, #0
 801d2b8:	4b8f      	ldr	r3, [pc, #572]	; (801d4f8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x248>)
 801d2ba:	f100 0518 	add.w	r5, r0, #24
 801d2be:	f104 0730 	add.w	r7, r4, #48	; 0x30
 801d2c2:	b086      	sub	sp, #24
 801d2c4:	4690      	mov	r8, r2
 801d2c6:	e9c0 3100 	strd	r3, r1, [r0]
 801d2ca:	e9c0 6602 	strd	r6, r6, [r0, #8]
 801d2ce:	e9c0 6604 	strd	r6, r6, [r0, #16]
 801d2d2:	4628      	mov	r0, r5
 801d2d4:	f002 f938 	bl	801f548 <_ZN8touchgfx15RenderingBufferC1Ev>
 801d2d8:	4638      	mov	r0, r7
 801d2da:	f001 f8dd 	bl	801e498 <_ZN8touchgfx7OutlineC1Ev>
 801d2de:	f104 0078 	add.w	r0, r4, #120	; 0x78
 801d2e2:	f002 f8d9 	bl	801f498 <_ZN8touchgfx8ScanlineC1Ev>
 801d2e6:	2301      	movs	r3, #1
 801d2e8:	f884 609c 	strb.w	r6, [r4, #156]	; 0x9c
 801d2ec:	f8c4 60a0 	str.w	r6, [r4, #160]	; 0xa0
 801d2f0:	f884 60a4 	strb.w	r6, [r4, #164]	; 0xa4
 801d2f4:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 801d2f8:	f884 60a6 	strb.w	r6, [r4, #166]	; 0xa6
 801d2fc:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 801d300:	e9c4 662a 	strd	r6, r6, [r4, #168]	; 0xa8
 801d304:	e9c4 662d 	strd	r6, r6, [r4, #180]	; 0xb4
 801d308:	f7f2 fc84 	bl	800fc14 <_ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv>
 801d30c:	b928      	cbnz	r0, 801d31a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x6a>
 801d30e:	4b7b      	ldr	r3, [pc, #492]	; (801d4fc <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x24c>)
 801d310:	212a      	movs	r1, #42	; 0x2a
 801d312:	4a7b      	ldr	r2, [pc, #492]	; (801d500 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x250>)
 801d314:	487b      	ldr	r0, [pc, #492]	; (801d504 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x254>)
 801d316:	f002 fc5f 	bl	801fbd8 <__assert_func>
 801d31a:	f9b8 2000 	ldrsh.w	r2, [r8]
 801d31e:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 801d322:	f8d4 c004 	ldr.w	ip, [r4, #4]
 801d326:	4410      	add	r0, r2
 801d328:	9602      	str	r6, [sp, #8]
 801d32a:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 801d32e:	b280      	uxth	r0, r0
 801d330:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 801d334:	fa0f fa80 	sxth.w	sl, r0
 801d338:	f1ba 0f00 	cmp.w	sl, #0
 801d33c:	dd70      	ble.n	801d420 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x170>
 801d33e:	4591      	cmp	r9, r2
 801d340:	dd6e      	ble.n	801d420 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x170>
 801d342:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 801d346:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 801d34a:	440b      	add	r3, r1
 801d34c:	b29b      	uxth	r3, r3
 801d34e:	b21e      	sxth	r6, r3
 801d350:	2e00      	cmp	r6, #0
 801d352:	dd65      	ble.n	801d420 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x170>
 801d354:	458e      	cmp	lr, r1
 801d356:	dd63      	ble.n	801d420 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x170>
 801d358:	45d1      	cmp	r9, sl
 801d35a:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 801d35e:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 801d362:	bfb8      	it	lt
 801d364:	fa1f f089 	uxthlt.w	r0, r9
 801d368:	45b6      	cmp	lr, r6
 801d36a:	f8ad 2008 	strh.w	r2, [sp, #8]
 801d36e:	bfb8      	it	lt
 801d370:	fa1f f38e 	uxthlt.w	r3, lr
 801d374:	1a80      	subs	r0, r0, r2
 801d376:	f8ad 100a 	strh.w	r1, [sp, #10]
 801d37a:	1a5b      	subs	r3, r3, r1
 801d37c:	f8ad 000c 	strh.w	r0, [sp, #12]
 801d380:	f8ad 300e 	strh.w	r3, [sp, #14]
 801d384:	f10d 0808 	add.w	r8, sp, #8
 801d388:	ae04      	add	r6, sp, #16
 801d38a:	e898 0003 	ldmia.w	r8, {r0, r1}
 801d38e:	e886 0003 	stmia.w	r6, {r0, r1}
 801d392:	f8dc 3000 	ldr.w	r3, [ip]
 801d396:	4660      	mov	r0, ip
 801d398:	4631      	mov	r1, r6
 801d39a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d39c:	4798      	blx	r3
 801d39e:	6861      	ldr	r1, [r4, #4]
 801d3a0:	4640      	mov	r0, r8
 801d3a2:	3104      	adds	r1, #4
 801d3a4:	f7f3 ff8a 	bl	80112bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d3a8:	4630      	mov	r0, r6
 801d3aa:	f7f3 ff43 	bl	8011234 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d3ae:	f9bd 000c 	ldrsh.w	r0, [sp, #12]
 801d3b2:	f7f2 fbbf 	bl	800fb34 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj>
 801d3b6:	f884 00a4 	strb.w	r0, [r4, #164]	; 0xa4
 801d3ba:	4638      	mov	r0, r7
 801d3bc:	f001 f848 	bl	801e450 <_ZN8touchgfx7Outline5resetEv>
 801d3c0:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801d3c4:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801d3c8:	f8a4 30a2 	strh.w	r3, [r4, #162]	; 0xa2
 801d3cc:	015b      	lsls	r3, r3, #5
 801d3ce:	f8a4 20a0 	strh.w	r2, [r4, #160]	; 0xa0
 801d3d2:	0152      	lsls	r2, r2, #5
 801d3d4:	60e3      	str	r3, [r4, #12]
 801d3d6:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801d3da:	60a2      	str	r2, [r4, #8]
 801d3dc:	015b      	lsls	r3, r3, #5
 801d3de:	6123      	str	r3, [r4, #16]
 801d3e0:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 801d3e4:	015b      	lsls	r3, r3, #5
 801d3e6:	6163      	str	r3, [r4, #20]
 801d3e8:	4b47      	ldr	r3, [pc, #284]	; (801d508 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x258>)
 801d3ea:	6818      	ldr	r0, [r3, #0]
 801d3ec:	6803      	ldr	r3, [r0, #0]
 801d3ee:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d3f0:	4798      	blx	r3
 801d3f2:	4606      	mov	r6, r0
 801d3f4:	f7e5 fdd2 	bl	8002f9c <_ZN8touchgfx3HAL3lcdEv>
 801d3f8:	6803      	ldr	r3, [r0, #0]
 801d3fa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801d3fc:	4798      	blx	r3
 801d3fe:	4607      	mov	r7, r0
 801d400:	f7e5 fdcc 	bl	8002f9c <_ZN8touchgfx3HAL3lcdEv>
 801d404:	6803      	ldr	r3, [r0, #0]
 801d406:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d408:	4798      	blx	r3
 801d40a:	280d      	cmp	r0, #13
 801d40c:	d854      	bhi.n	801d4b8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x208>
 801d40e:	e8df f000 	tbb	[pc, r0]
 801d412:	554b      	.short	0x554b
 801d414:	2b6e0a66 	.word	0x2b6e0a66
 801d418:	5f5f5f3b 	.word	0x5f5f5f3b
 801d41c:	6e6e5f5f 	.word	0x6e6e5f5f
 801d420:	2300      	movs	r3, #0
 801d422:	9303      	str	r3, [sp, #12]
 801d424:	e7ae      	b.n	801d384 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xd4>
 801d426:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d42a:	2108      	movs	r1, #8
 801d42c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d430:	fb92 f1f1 	sdiv	r1, r2, r1
 801d434:	fb07 1303 	mla	r3, r7, r3, r1
 801d438:	441e      	add	r6, r3
 801d43a:	4253      	negs	r3, r2
 801d43c:	f002 0207 	and.w	r2, r2, #7
 801d440:	f003 0307 	and.w	r3, r3, #7
 801d444:	bf58      	it	pl
 801d446:	425a      	negpl	r2, r3
 801d448:	b2d2      	uxtb	r2, r2
 801d44a:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801d44e:	4628      	mov	r0, r5
 801d450:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 801d454:	6721      	str	r1, [r4, #112]	; 0x70
 801d456:	e9cd 1700 	strd	r1, r7, [sp]
 801d45a:	4631      	mov	r1, r6
 801d45c:	f002 f880 	bl	801f560 <_ZN8touchgfx15RenderingBuffer6attachEPhhjji>
 801d460:	4620      	mov	r0, r4
 801d462:	b006      	add	sp, #24
 801d464:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d468:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d46c:	2104      	movs	r1, #4
 801d46e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d472:	fb92 f1f1 	sdiv	r1, r2, r1
 801d476:	fb07 1303 	mla	r3, r7, r3, r1
 801d47a:	441e      	add	r6, r3
 801d47c:	4253      	negs	r3, r2
 801d47e:	f002 0203 	and.w	r2, r2, #3
 801d482:	f003 0303 	and.w	r3, r3, #3
 801d486:	e7dd      	b.n	801d444 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x194>
 801d488:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d48c:	2102      	movs	r1, #2
 801d48e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d492:	2a00      	cmp	r2, #0
 801d494:	fb92 f1f1 	sdiv	r1, r2, r1
 801d498:	f002 0201 	and.w	r2, r2, #1
 801d49c:	fb07 1303 	mla	r3, r7, r3, r1
 801d4a0:	bfb8      	it	lt
 801d4a2:	4252      	neglt	r2, r2
 801d4a4:	441e      	add	r6, r3
 801d4a6:	e7cf      	b.n	801d448 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x198>
 801d4a8:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d4ac:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d4b0:	437b      	muls	r3, r7
 801d4b2:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 801d4b6:	441e      	add	r6, r3
 801d4b8:	2200      	movs	r2, #0
 801d4ba:	e7c6      	b.n	801d44a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x19a>
 801d4bc:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d4c0:	2103      	movs	r1, #3
 801d4c2:	fb07 f203 	mul.w	r2, r7, r3
 801d4c6:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 801d4ca:	fb13 2301 	smlabb	r3, r3, r1, r2
 801d4ce:	e7f2      	b.n	801d4b6 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x206>
 801d4d0:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d4d4:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d4d8:	fb07 2303 	mla	r3, r7, r3, r2
 801d4dc:	e7eb      	b.n	801d4b6 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x206>
 801d4de:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d4e2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d4e6:	437b      	muls	r3, r7
 801d4e8:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 801d4ec:	e7e3      	b.n	801d4b6 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x206>
 801d4ee:	4b07      	ldr	r3, [pc, #28]	; (801d50c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x25c>)
 801d4f0:	2169      	movs	r1, #105	; 0x69
 801d4f2:	4a03      	ldr	r2, [pc, #12]	; (801d500 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x250>)
 801d4f4:	e70e      	b.n	801d314 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x64>
 801d4f6:	bf00      	nop
 801d4f8:	08025654 	.word	0x08025654
 801d4fc:	0802559d 	.word	0x0802559d
 801d500:	0802565c 	.word	0x0802565c
 801d504:	080255f9 	.word	0x080255f9
 801d508:	2400e07c 	.word	0x2400e07c
 801d50c:	0802562d 	.word	0x0802562d

0801d510 <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_>:
 801d510:	6812      	ldr	r2, [r2, #0]
 801d512:	2a00      	cmp	r2, #0
 801d514:	db0b      	blt.n	801d52e <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_+0x1e>
 801d516:	9800      	ldr	r0, [sp, #0]
 801d518:	6800      	ldr	r0, [r0, #0]
 801d51a:	4290      	cmp	r0, r2
 801d51c:	bfd4      	ite	le
 801d51e:	2002      	movle	r0, #2
 801d520:	2000      	movgt	r0, #0
 801d522:	680a      	ldr	r2, [r1, #0]
 801d524:	2a00      	cmp	r2, #0
 801d526:	da04      	bge.n	801d532 <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_+0x22>
 801d528:	f040 0004 	orr.w	r0, r0, #4
 801d52c:	4770      	bx	lr
 801d52e:	2001      	movs	r0, #1
 801d530:	e7f7      	b.n	801d522 <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_+0x12>
 801d532:	681b      	ldr	r3, [r3, #0]
 801d534:	4293      	cmp	r3, r2
 801d536:	bfd8      	it	le
 801d538:	f040 0008 	orrle.w	r0, r0, #8
 801d53c:	4770      	bx	lr
	...

0801d540 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 801d540:	4b07      	ldr	r3, [pc, #28]	; (801d560 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 801d542:	b510      	push	{r4, lr}
 801d544:	781b      	ldrb	r3, [r3, #0]
 801d546:	2b01      	cmp	r3, #1
 801d548:	d108      	bne.n	801d55c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 801d54a:	6843      	ldr	r3, [r0, #4]
 801d54c:	6814      	ldr	r4, [r2, #0]
 801d54e:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 801d552:	680b      	ldr	r3, [r1, #0]
 801d554:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 801d558:	6013      	str	r3, [r2, #0]
 801d55a:	600c      	str	r4, [r1, #0]
 801d55c:	bd10      	pop	{r4, pc}
 801d55e:	bf00      	nop
 801d560:	2400e074 	.word	0x2400e074

0801d564 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 801d564:	b5f0      	push	{r4, r5, r6, r7, lr}
 801d566:	b085      	sub	sp, #20
 801d568:	f890 30a4 	ldrb.w	r3, [r0, #164]	; 0xa4
 801d56c:	4604      	mov	r4, r0
 801d56e:	e9cd 2102 	strd	r2, r1, [sp, #8]
 801d572:	b33b      	cbz	r3, 801d5c4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x60>
 801d574:	aa02      	add	r2, sp, #8
 801d576:	a903      	add	r1, sp, #12
 801d578:	f7ff ffe2 	bl	801d540 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 801d57c:	68a3      	ldr	r3, [r4, #8]
 801d57e:	9e03      	ldr	r6, [sp, #12]
 801d580:	aa02      	add	r2, sp, #8
 801d582:	9f02      	ldr	r7, [sp, #8]
 801d584:	a903      	add	r1, sp, #12
 801d586:	1af6      	subs	r6, r6, r3
 801d588:	68e3      	ldr	r3, [r4, #12]
 801d58a:	4620      	mov	r0, r4
 801d58c:	1aff      	subs	r7, r7, r3
 801d58e:	f104 0314 	add.w	r3, r4, #20
 801d592:	9603      	str	r6, [sp, #12]
 801d594:	9300      	str	r3, [sp, #0]
 801d596:	f104 0310 	add.w	r3, r4, #16
 801d59a:	9702      	str	r7, [sp, #8]
 801d59c:	f7ff ffb8 	bl	801d510 <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_>
 801d5a0:	f894 30b0 	ldrb.w	r3, [r4, #176]	; 0xb0
 801d5a4:	4605      	mov	r5, r0
 801d5a6:	b97b      	cbnz	r3, 801d5c8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x64>
 801d5a8:	463a      	mov	r2, r7
 801d5aa:	4631      	mov	r1, r6
 801d5ac:	f104 0030 	add.w	r0, r4, #48	; 0x30
 801d5b0:	f7ff fe78 	bl	801d2a4 <_ZN8touchgfx10Rasterizer6lineToEii>
 801d5b4:	9b03      	ldr	r3, [sp, #12]
 801d5b6:	f884 50b0 	strb.w	r5, [r4, #176]	; 0xb0
 801d5ba:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 801d5be:	9b02      	ldr	r3, [sp, #8]
 801d5c0:	f8c4 30ac 	str.w	r3, [r4, #172]	; 0xac
 801d5c4:	b005      	add	sp, #20
 801d5c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801d5c8:	b110      	cbz	r0, 801d5d0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6c>
 801d5ca:	ea13 0200 	ands.w	r2, r3, r0
 801d5ce:	d11c      	bne.n	801d60a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa6>
 801d5d0:	f894 00a5 	ldrb.w	r0, [r4, #165]	; 0xa5
 801d5d4:	f104 0630 	add.w	r6, r4, #48	; 0x30
 801d5d8:	e9d4 122a 	ldrd	r1, r2, [r4, #168]	; 0xa8
 801d5dc:	b188      	cbz	r0, 801d602 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9e>
 801d5de:	f884 30b1 	strb.w	r3, [r4, #177]	; 0xb1
 801d5e2:	f894 3074 	ldrb.w	r3, [r4, #116]	; 0x74
 801d5e6:	b913      	cbnz	r3, 801d5ee <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x8a>
 801d5e8:	4630      	mov	r0, r6
 801d5ea:	f001 fdb9 	bl	801f160 <_ZN8touchgfx7Outline6moveToEii>
 801d5ee:	2300      	movs	r3, #0
 801d5f0:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 801d5f4:	2301      	movs	r3, #1
 801d5f6:	f884 30a6 	strb.w	r3, [r4, #166]	; 0xa6
 801d5fa:	4630      	mov	r0, r6
 801d5fc:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 801d600:	e7d6      	b.n	801d5b0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4c>
 801d602:	4630      	mov	r0, r6
 801d604:	f7ff fe4e 	bl	801d2a4 <_ZN8touchgfx10Rasterizer6lineToEii>
 801d608:	e7f7      	b.n	801d5fa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x96>
 801d60a:	4615      	mov	r5, r2
 801d60c:	e7d2      	b.n	801d5b4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x50>

0801d60e <_ZN8touchgfx6Canvas5closeEv>:
 801d60e:	b538      	push	{r3, r4, r5, lr}
 801d610:	f890 30a5 	ldrb.w	r3, [r0, #165]	; 0xa5
 801d614:	4604      	mov	r4, r0
 801d616:	b993      	cbnz	r3, 801d63e <_ZN8touchgfx6Canvas5closeEv+0x30>
 801d618:	f890 30b0 	ldrb.w	r3, [r0, #176]	; 0xb0
 801d61c:	f890 20b1 	ldrb.w	r2, [r0, #177]	; 0xb1
 801d620:	4213      	tst	r3, r2
 801d622:	d10c      	bne.n	801d63e <_ZN8touchgfx6Canvas5closeEv+0x30>
 801d624:	f100 0530 	add.w	r5, r0, #48	; 0x30
 801d628:	b123      	cbz	r3, 801d634 <_ZN8touchgfx6Canvas5closeEv+0x26>
 801d62a:	e9d0 122a 	ldrd	r1, r2, [r0, #168]	; 0xa8
 801d62e:	4628      	mov	r0, r5
 801d630:	f7ff fe38 	bl	801d2a4 <_ZN8touchgfx10Rasterizer6lineToEii>
 801d634:	4628      	mov	r0, r5
 801d636:	e9d4 122d 	ldrd	r1, r2, [r4, #180]	; 0xb4
 801d63a:	f7ff fe33 	bl	801d2a4 <_ZN8touchgfx10Rasterizer6lineToEii>
 801d63e:	2300      	movs	r3, #0
 801d640:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 801d644:	bd38      	pop	{r3, r4, r5, pc}

0801d646 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 801d646:	b5f0      	push	{r4, r5, r6, r7, lr}
 801d648:	b085      	sub	sp, #20
 801d64a:	f890 30a4 	ldrb.w	r3, [r0, #164]	; 0xa4
 801d64e:	4604      	mov	r4, r0
 801d650:	e9cd 2102 	strd	r2, r1, [sp, #8]
 801d654:	b353      	cbz	r3, 801d6ac <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>
 801d656:	f890 30a5 	ldrb.w	r3, [r0, #165]	; 0xa5
 801d65a:	b90b      	cbnz	r3, 801d660 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x1a>
 801d65c:	f7ff ffd7 	bl	801d60e <_ZN8touchgfx6Canvas5closeEv>
 801d660:	aa02      	add	r2, sp, #8
 801d662:	a903      	add	r1, sp, #12
 801d664:	4620      	mov	r0, r4
 801d666:	f7ff ff6b 	bl	801d540 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 801d66a:	68a3      	ldr	r3, [r4, #8]
 801d66c:	9d03      	ldr	r5, [sp, #12]
 801d66e:	aa02      	add	r2, sp, #8
 801d670:	9e02      	ldr	r6, [sp, #8]
 801d672:	a903      	add	r1, sp, #12
 801d674:	1aed      	subs	r5, r5, r3
 801d676:	68e3      	ldr	r3, [r4, #12]
 801d678:	4620      	mov	r0, r4
 801d67a:	1af6      	subs	r6, r6, r3
 801d67c:	f104 0314 	add.w	r3, r4, #20
 801d680:	9503      	str	r5, [sp, #12]
 801d682:	9300      	str	r3, [sp, #0]
 801d684:	f104 0310 	add.w	r3, r4, #16
 801d688:	9602      	str	r6, [sp, #8]
 801d68a:	f7ff ff41 	bl	801d510 <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_>
 801d68e:	4607      	mov	r7, r0
 801d690:	b170      	cbz	r0, 801d6b0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x6a>
 801d692:	2301      	movs	r3, #1
 801d694:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 801d698:	9a03      	ldr	r2, [sp, #12]
 801d69a:	9b02      	ldr	r3, [sp, #8]
 801d69c:	f8c4 20b4 	str.w	r2, [r4, #180]	; 0xb4
 801d6a0:	f8c4 30b8 	str.w	r3, [r4, #184]	; 0xb8
 801d6a4:	f884 70b0 	strb.w	r7, [r4, #176]	; 0xb0
 801d6a8:	e9c4 232a 	strd	r2, r3, [r4, #168]	; 0xa8
 801d6ac:	b005      	add	sp, #20
 801d6ae:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801d6b0:	f894 3074 	ldrb.w	r3, [r4, #116]	; 0x74
 801d6b4:	f884 00b1 	strb.w	r0, [r4, #177]	; 0xb1
 801d6b8:	b92b      	cbnz	r3, 801d6c6 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x80>
 801d6ba:	4632      	mov	r2, r6
 801d6bc:	4629      	mov	r1, r5
 801d6be:	f104 0030 	add.w	r0, r4, #48	; 0x30
 801d6c2:	f001 fd4d 	bl	801f160 <_ZN8touchgfx7Outline6moveToEii>
 801d6c6:	2300      	movs	r3, #0
 801d6c8:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 801d6cc:	2301      	movs	r3, #1
 801d6ce:	f884 30a6 	strb.w	r3, [r4, #166]	; 0xa6
 801d6d2:	e7e1      	b.n	801d698 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x52>

0801d6d4 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_>:
 801d6d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d6d8:	4604      	mov	r4, r0
 801d6da:	b087      	sub	sp, #28
 801d6dc:	9105      	str	r1, [sp, #20]
 801d6de:	f001 fe84 	bl	801f3ea <_ZN8touchgfx7Outline8getCellsEv>
 801d6e2:	f8d4 9008 	ldr.w	r9, [r4, #8]
 801d6e6:	4605      	mov	r5, r0
 801d6e8:	f1b9 0f00 	cmp.w	r9, #0
 801d6ec:	d103      	bne.n	801d6f6 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x22>
 801d6ee:	2001      	movs	r0, #1
 801d6f0:	b007      	add	sp, #28
 801d6f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d6f6:	f894 6044 	ldrb.w	r6, [r4, #68]	; 0x44
 801d6fa:	2e00      	cmp	r6, #0
 801d6fc:	d139      	bne.n	801d772 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x9e>
 801d6fe:	f104 0848 	add.w	r8, r4, #72	; 0x48
 801d702:	f105 0708 	add.w	r7, r5, #8
 801d706:	4640      	mov	r0, r8
 801d708:	f001 feb1 	bl	801f46e <_ZN8touchgfx8Scanline5resetEv>
 801d70c:	f109 33ff 	add.w	r3, r9, #4294967295
 801d710:	9303      	str	r3, [sp, #12]
 801d712:	f9b5 b000 	ldrsh.w	fp, [r5]
 801d716:	f9b5 9002 	ldrsh.w	r9, [r5, #2]
 801d71a:	46da      	mov	sl, fp
 801d71c:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801d720:	eb0b 4009 	add.w	r0, fp, r9, lsl #16
 801d724:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 801d728:	9b03      	ldr	r3, [sp, #12]
 801d72a:	4416      	add	r6, r2
 801d72c:	9504      	str	r5, [sp, #16]
 801d72e:	463d      	mov	r5, r7
 801d730:	3b01      	subs	r3, #1
 801d732:	9303      	str	r3, [sp, #12]
 801d734:	3301      	adds	r3, #1
 801d736:	d01e      	beq.n	801d776 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xa2>
 801d738:	3708      	adds	r7, #8
 801d73a:	f937 cc06 	ldrsh.w	ip, [r7, #-6]
 801d73e:	f937 2c08 	ldrsh.w	r2, [r7, #-8]
 801d742:	eb02 420c 	add.w	r2, r2, ip, lsl #16
 801d746:	4290      	cmp	r0, r2
 801d748:	d11e      	bne.n	801d788 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xb4>
 801d74a:	f937 2c02 	ldrsh.w	r2, [r7, #-2]
 801d74e:	4411      	add	r1, r2
 801d750:	f937 2c04 	ldrsh.w	r2, [r7, #-4]
 801d754:	e7e8      	b.n	801d728 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x54>
 801d756:	1c91      	adds	r1, r2, #2
 801d758:	f04f 0301 	mov.w	r3, #1
 801d75c:	65e1      	str	r1, [r4, #92]	; 0x5c
 801d75e:	8053      	strh	r3, [r2, #2]
 801d760:	6da2      	ldr	r2, [r4, #88]	; 0x58
 801d762:	1c91      	adds	r1, r2, #2
 801d764:	65a1      	str	r1, [r4, #88]	; 0x58
 801d766:	f8a2 b002 	strh.w	fp, [r2, #2]
 801d76a:	6d62      	ldr	r2, [r4, #84]	; 0x54
 801d76c:	3201      	adds	r2, #1
 801d76e:	6562      	str	r2, [r4, #84]	; 0x54
 801d770:	e03a      	b.n	801d7e8 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x114>
 801d772:	2000      	movs	r0, #0
 801d774:	e7bc      	b.n	801d6f0 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x1c>
 801d776:	b951      	cbnz	r1, 801d78e <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xba>
 801d778:	6d63      	ldr	r3, [r4, #84]	; 0x54
 801d77a:	2b00      	cmp	r3, #0
 801d77c:	d0b7      	beq.n	801d6ee <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x1a>
 801d77e:	4641      	mov	r1, r8
 801d780:	9805      	ldr	r0, [sp, #20]
 801d782:	f7ff fd59 	bl	801d238 <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE>
 801d786:	e7b2      	b.n	801d6ee <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x1a>
 801d788:	2900      	cmp	r1, #0
 801d78a:	d035      	beq.n	801d7f8 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x124>
 801d78c:	9504      	str	r5, [sp, #16]
 801d78e:	ebc1 1186 	rsb	r1, r1, r6, lsl #6
 801d792:	f894 006c 	ldrb.w	r0, [r4, #108]	; 0x6c
 801d796:	f7ff fd3b 	bl	801d210 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.14>
 801d79a:	4605      	mov	r5, r0
 801d79c:	b330      	cbz	r0, 801d7ec <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x118>
 801d79e:	6d62      	ldr	r2, [r4, #84]	; 0x54
 801d7a0:	b182      	cbz	r2, 801d7c4 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xf0>
 801d7a2:	6d22      	ldr	r2, [r4, #80]	; 0x50
 801d7a4:	4591      	cmp	r9, r2
 801d7a6:	d00d      	beq.n	801d7c4 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xf0>
 801d7a8:	4641      	mov	r1, r8
 801d7aa:	9805      	ldr	r0, [sp, #20]
 801d7ac:	f7ff fd44 	bl	801d238 <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE>
 801d7b0:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801d7b4:	6ea2      	ldr	r2, [r4, #104]	; 0x68
 801d7b6:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 801d7ba:	65e2      	str	r2, [r4, #92]	; 0x5c
 801d7bc:	2300      	movs	r3, #0
 801d7be:	6e62      	ldr	r2, [r4, #100]	; 0x64
 801d7c0:	6563      	str	r3, [r4, #84]	; 0x54
 801d7c2:	65a2      	str	r2, [r4, #88]	; 0x58
 801d7c4:	f1bb 0f00 	cmp.w	fp, #0
 801d7c8:	db10      	blt.n	801d7ec <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x118>
 801d7ca:	f7f2 fa31 	bl	800fc30 <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv>
 801d7ce:	4583      	cmp	fp, r0
 801d7d0:	da0c      	bge.n	801d7ec <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x118>
 801d7d2:	6e22      	ldr	r2, [r4, #96]	; 0x60
 801d7d4:	f802 500b 	strb.w	r5, [r2, fp]
 801d7d8:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
 801d7da:	3201      	adds	r2, #1
 801d7dc:	4593      	cmp	fp, r2
 801d7de:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 801d7e0:	d1b9      	bne.n	801d756 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x82>
 801d7e2:	8811      	ldrh	r1, [r2, #0]
 801d7e4:	3101      	adds	r1, #1
 801d7e6:	8011      	strh	r1, [r2, #0]
 801d7e8:	e9c4 b913 	strd	fp, r9, [r4, #76]	; 0x4c
 801d7ec:	9b03      	ldr	r3, [sp, #12]
 801d7ee:	3301      	adds	r3, #1
 801d7f0:	d0c2      	beq.n	801d778 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xa4>
 801d7f2:	f10b 0a01 	add.w	sl, fp, #1
 801d7f6:	9d04      	ldr	r5, [sp, #16]
 801d7f8:	f9b5 3000 	ldrsh.w	r3, [r5]
 801d7fc:	4553      	cmp	r3, sl
 801d7fe:	dd88      	ble.n	801d712 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x3e>
 801d800:	01b1      	lsls	r1, r6, #6
 801d802:	f894 006c 	ldrb.w	r0, [r4, #108]	; 0x6c
 801d806:	f7ff fd03 	bl	801d210 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.14>
 801d80a:	4683      	mov	fp, r0
 801d80c:	2800      	cmp	r0, #0
 801d80e:	d080      	beq.n	801d712 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x3e>
 801d810:	6d63      	ldr	r3, [r4, #84]	; 0x54
 801d812:	b183      	cbz	r3, 801d836 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x162>
 801d814:	6d23      	ldr	r3, [r4, #80]	; 0x50
 801d816:	4599      	cmp	r9, r3
 801d818:	d00d      	beq.n	801d836 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x162>
 801d81a:	4641      	mov	r1, r8
 801d81c:	9805      	ldr	r0, [sp, #20]
 801d81e:	f7ff fd0b 	bl	801d238 <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE>
 801d822:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801d826:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 801d82a:	6ea3      	ldr	r3, [r4, #104]	; 0x68
 801d82c:	65e3      	str	r3, [r4, #92]	; 0x5c
 801d82e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 801d830:	65a3      	str	r3, [r4, #88]	; 0x58
 801d832:	2300      	movs	r3, #0
 801d834:	6563      	str	r3, [r4, #84]	; 0x54
 801d836:	f9b5 3000 	ldrsh.w	r3, [r5]
 801d83a:	464a      	mov	r2, r9
 801d83c:	f8cd b000 	str.w	fp, [sp]
 801d840:	4651      	mov	r1, sl
 801d842:	eba3 030a 	sub.w	r3, r3, sl
 801d846:	4640      	mov	r0, r8
 801d848:	f001 fe3c 	bl	801f4c4 <_ZN8touchgfx8Scanline7addSpanEiijj>
 801d84c:	e761      	b.n	801d712 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x3e>

0801d84e <_ZN8touchgfx6Canvas6renderEh>:
 801d84e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801d850:	f890 30a4 	ldrb.w	r3, [r0, #164]	; 0xa4
 801d854:	4604      	mov	r4, r0
 801d856:	460d      	mov	r5, r1
 801d858:	b913      	cbnz	r3, 801d860 <_ZN8touchgfx6Canvas6renderEh+0x12>
 801d85a:	2001      	movs	r0, #1
 801d85c:	b003      	add	sp, #12
 801d85e:	bd30      	pop	{r4, r5, pc}
 801d860:	f890 3074 	ldrb.w	r3, [r0, #116]	; 0x74
 801d864:	2b00      	cmp	r3, #0
 801d866:	d12f      	bne.n	801d8c8 <_ZN8touchgfx6Canvas6renderEh+0x7a>
 801d868:	f890 30a6 	ldrb.w	r3, [r0, #166]	; 0xa6
 801d86c:	2b00      	cmp	r3, #0
 801d86e:	d0f4      	beq.n	801d85a <_ZN8touchgfx6Canvas6renderEh+0xc>
 801d870:	6840      	ldr	r0, [r0, #4]
 801d872:	6803      	ldr	r3, [r0, #0]
 801d874:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 801d876:	4798      	blx	r3
 801d878:	fb10 f105 	smulbb	r1, r0, r5
 801d87c:	b288      	uxth	r0, r1
 801d87e:	1c41      	adds	r1, r0, #1
 801d880:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801d884:	120d      	asrs	r5, r1, #8
 801d886:	d0e8      	beq.n	801d85a <_ZN8touchgfx6Canvas6renderEh+0xc>
 801d888:	4620      	mov	r0, r4
 801d88a:	f7ff fec0 	bl	801d60e <_ZN8touchgfx6Canvas5closeEv>
 801d88e:	6860      	ldr	r0, [r4, #4]
 801d890:	6803      	ldr	r3, [r0, #0]
 801d892:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 801d894:	4798      	blx	r3
 801d896:	f9b4 20a0 	ldrsh.w	r2, [r4, #160]	; 0xa0
 801d89a:	f9b4 30a2 	ldrsh.w	r3, [r4, #162]	; 0xa2
 801d89e:	8082      	strh	r2, [r0, #4]
 801d8a0:	80c3      	strh	r3, [r0, #6]
 801d8a2:	6860      	ldr	r0, [r4, #4]
 801d8a4:	6803      	ldr	r3, [r0, #0]
 801d8a6:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 801d8a8:	4798      	blx	r3
 801d8aa:	7205      	strb	r5, [r0, #8]
 801d8ac:	6860      	ldr	r0, [r4, #4]
 801d8ae:	6803      	ldr	r3, [r0, #0]
 801d8b0:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 801d8b2:	4798      	blx	r3
 801d8b4:	f104 0318 	add.w	r3, r4, #24
 801d8b8:	4669      	mov	r1, sp
 801d8ba:	e9cd 3000 	strd	r3, r0, [sp]
 801d8be:	f104 0030 	add.w	r0, r4, #48	; 0x30
 801d8c2:	f7ff ff07 	bl	801d6d4 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_>
 801d8c6:	e7c9      	b.n	801d85c <_ZN8touchgfx6Canvas6renderEh+0xe>
 801d8c8:	2000      	movs	r0, #0
 801d8ca:	e7c7      	b.n	801d85c <_ZN8touchgfx6Canvas6renderEh+0xe>

0801d8cc <_ZN8touchgfx6CanvasD1Ev>:
 801d8cc:	b538      	push	{r3, r4, r5, lr}
 801d8ce:	4605      	mov	r5, r0
 801d8d0:	4b08      	ldr	r3, [pc, #32]	; (801d8f4 <_ZN8touchgfx6CanvasD1Ev+0x28>)
 801d8d2:	4604      	mov	r4, r0
 801d8d4:	f845 3b30 	str.w	r3, [r5], #48
 801d8d8:	4b07      	ldr	r3, [pc, #28]	; (801d8f8 <_ZN8touchgfx6CanvasD1Ev+0x2c>)
 801d8da:	6818      	ldr	r0, [r3, #0]
 801d8dc:	6803      	ldr	r3, [r0, #0]
 801d8de:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d8e0:	4798      	blx	r3
 801d8e2:	4628      	mov	r0, r5
 801d8e4:	f000 fdac 	bl	801e440 <_ZN8touchgfx7OutlineD1Ev>
 801d8e8:	f104 0018 	add.w	r0, r4, #24
 801d8ec:	f001 fe23 	bl	801f536 <_ZN8touchgfx15RenderingBufferD1Ev>
 801d8f0:	4620      	mov	r0, r4
 801d8f2:	bd38      	pop	{r3, r4, r5, pc}
 801d8f4:	08025654 	.word	0x08025654
 801d8f8:	2400e07c 	.word	0x2400e07c

0801d8fc <_ZN8touchgfx6CanvasD0Ev>:
 801d8fc:	b510      	push	{r4, lr}
 801d8fe:	4604      	mov	r4, r0
 801d900:	f7ff ffe4 	bl	801d8cc <_ZN8touchgfx6CanvasD1Ev>
 801d904:	21bc      	movs	r1, #188	; 0xbc
 801d906:	4620      	mov	r0, r4
 801d908:	f001 ff89 	bl	801f81e <_ZdlPvj>
 801d90c:	4620      	mov	r0, r4
 801d90e:	bd10      	pop	{r4, pc}

0801d910 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 801d910:	790b      	ldrb	r3, [r1, #4]
 801d912:	2b00      	cmp	r3, #0
 801d914:	bf0c      	ite	eq
 801d916:	2301      	moveq	r3, #1
 801d918:	2300      	movne	r3, #0
 801d91a:	b570      	push	{r4, r5, r6, lr}
 801d91c:	4604      	mov	r4, r0
 801d91e:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 801d922:	460e      	mov	r6, r1
 801d924:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 801d928:	d109      	bne.n	801d93e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 801d92a:	b14d      	cbz	r5, 801d940 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 801d92c:	7933      	ldrb	r3, [r6, #4]
 801d92e:	2b01      	cmp	r3, #1
 801d930:	d10c      	bne.n	801d94c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801d932:	6823      	ldr	r3, [r4, #0]
 801d934:	4620      	mov	r0, r4
 801d936:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 801d938:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801d93c:	4718      	bx	r3
 801d93e:	b12d      	cbz	r5, 801d94c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801d940:	6823      	ldr	r3, [r4, #0]
 801d942:	4620      	mov	r0, r4
 801d944:	695b      	ldr	r3, [r3, #20]
 801d946:	4798      	blx	r3
 801d948:	2d00      	cmp	r5, #0
 801d94a:	d1ef      	bne.n	801d92c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 801d94c:	bd70      	pop	{r4, r5, r6, pc}

0801d94e <_ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE>:
 801d94e:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 801d952:	4770      	bx	lr

0801d954 <_ZNK8touchgfx13TextureMapper21getRenderingAlgorithmEv>:
 801d954:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 801d958:	4770      	bx	lr

0801d95a <_ZN8touchgfx13TextureMapper9setXAngleEf>:
 801d95a:	6802      	ldr	r2, [r0, #0]
 801d95c:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 801d960:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 801d962:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 801d966:	4710      	bx	r2

0801d968 <_ZN8touchgfx13TextureMapper9setYAngleEf>:
 801d968:	6802      	ldr	r2, [r0, #0]
 801d96a:	eef0 0a40 	vmov.f32	s1, s0
 801d96e:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 801d972:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 801d974:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 801d978:	4710      	bx	r2

0801d97a <_ZN8touchgfx13TextureMapper9setZAngleEf>:
 801d97a:	6802      	ldr	r2, [r0, #0]
 801d97c:	eeb0 1a40 	vmov.f32	s2, s0
 801d980:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 801d984:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 801d986:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 801d98a:	4710      	bx	r2

0801d98c <_ZN8touchgfx13TextureMapper12updateXAngleEf>:
 801d98c:	6802      	ldr	r2, [r0, #0]
 801d98e:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 801d992:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 801d994:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 801d998:	4710      	bx	r2

0801d99a <_ZN8touchgfx13TextureMapper12updateYAngleEf>:
 801d99a:	6802      	ldr	r2, [r0, #0]
 801d99c:	eef0 0a40 	vmov.f32	s1, s0
 801d9a0:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 801d9a4:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 801d9a6:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 801d9aa:	4710      	bx	r2

0801d9ac <_ZN8touchgfx13TextureMapper12updateZAngleEf>:
 801d9ac:	6802      	ldr	r2, [r0, #0]
 801d9ae:	eeb0 1a40 	vmov.f32	s2, s0
 801d9b2:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 801d9b6:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 801d9b8:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 801d9bc:	4710      	bx	r2

0801d9be <_ZNK8touchgfx13TextureMapper9getXAngleEv>:
 801d9be:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 801d9c2:	4770      	bx	lr

0801d9c4 <_ZNK8touchgfx13TextureMapper9getYAngleEv>:
 801d9c4:	ed90 0a0e 	vldr	s0, [r0, #56]	; 0x38
 801d9c8:	4770      	bx	lr

0801d9ca <_ZNK8touchgfx13TextureMapper9getZAngleEv>:
 801d9ca:	ed90 0a0f 	vldr	s0, [r0, #60]	; 0x3c
 801d9ce:	4770      	bx	lr

0801d9d0 <_ZNK8touchgfx13TextureMapper8getScaleEv>:
 801d9d0:	ed90 0a10 	vldr	s0, [r0, #64]	; 0x40
 801d9d4:	4770      	bx	lr

0801d9d6 <_ZNK8touchgfx13TextureMapper9getOrigoXEv>:
 801d9d6:	ed90 0a11 	vldr	s0, [r0, #68]	; 0x44
 801d9da:	4770      	bx	lr

0801d9dc <_ZNK8touchgfx13TextureMapper9getOrigoYEv>:
 801d9dc:	ed90 0a12 	vldr	s0, [r0, #72]	; 0x48
 801d9e0:	4770      	bx	lr

0801d9e2 <_ZNK8touchgfx13TextureMapper9getOrigoZEv>:
 801d9e2:	ed90 0a13 	vldr	s0, [r0, #76]	; 0x4c
 801d9e6:	4770      	bx	lr

0801d9e8 <_ZNK8touchgfx13TextureMapper10getCameraXEv>:
 801d9e8:	ed90 0a14 	vldr	s0, [r0, #80]	; 0x50
 801d9ec:	4770      	bx	lr

0801d9ee <_ZNK8touchgfx13TextureMapper10getCameraYEv>:
 801d9ee:	ed90 0a15 	vldr	s0, [r0, #84]	; 0x54
 801d9f2:	4770      	bx	lr

0801d9f4 <_ZNK8touchgfx13TextureMapper17getCameraDistanceEv>:
 801d9f4:	ed90 0a16 	vldr	s0, [r0, #88]	; 0x58
 801d9f8:	4770      	bx	lr

0801d9fa <_ZN8touchgfx13TextureMapper17setBitmapPositionEii>:
 801d9fa:	ee07 2a90 	vmov	s15, r2
 801d9fe:	6803      	ldr	r3, [r0, #0]
 801da00:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 801da04:	ee07 1a90 	vmov	s15, r1
 801da08:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 801da0c:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 801da10:	4718      	bx	r3

0801da12 <_ZNK8touchgfx13TextureMapper18getBitmapPositionXEv>:
 801da12:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 801da16:	4770      	bx	lr

0801da18 <_ZNK8touchgfx13TextureMapper18getBitmapPositionYEv>:
 801da18:	ed90 0a0c 	vldr	s0, [r0, #48]	; 0x30
 801da1c:	4770      	bx	lr

0801da1e <_ZNK8touchgfx13TextureMapper5getX0Ev>:
 801da1e:	ed90 0a17 	vldr	s0, [r0, #92]	; 0x5c
 801da22:	4770      	bx	lr

0801da24 <_ZNK8touchgfx13TextureMapper5getX1Ev>:
 801da24:	ed90 0a1a 	vldr	s0, [r0, #104]	; 0x68
 801da28:	4770      	bx	lr

0801da2a <_ZNK8touchgfx13TextureMapper5getX2Ev>:
 801da2a:	ed90 0a1d 	vldr	s0, [r0, #116]	; 0x74
 801da2e:	4770      	bx	lr

0801da30 <_ZNK8touchgfx13TextureMapper5getX3Ev>:
 801da30:	ed90 0a20 	vldr	s0, [r0, #128]	; 0x80
 801da34:	4770      	bx	lr

0801da36 <_ZNK8touchgfx13TextureMapper5getY0Ev>:
 801da36:	ed90 0a18 	vldr	s0, [r0, #96]	; 0x60
 801da3a:	4770      	bx	lr

0801da3c <_ZNK8touchgfx13TextureMapper5getY1Ev>:
 801da3c:	ed90 0a1b 	vldr	s0, [r0, #108]	; 0x6c
 801da40:	4770      	bx	lr

0801da42 <_ZNK8touchgfx13TextureMapper5getY2Ev>:
 801da42:	ed90 0a1e 	vldr	s0, [r0, #120]	; 0x78
 801da46:	4770      	bx	lr

0801da48 <_ZNK8touchgfx13TextureMapper5getY3Ev>:
 801da48:	ed90 0a21 	vldr	s0, [r0, #132]	; 0x84
 801da4c:	4770      	bx	lr

0801da4e <_ZNK8touchgfx13TextureMapper5getZ0Ev>:
 801da4e:	ed90 0a19 	vldr	s0, [r0, #100]	; 0x64
 801da52:	4770      	bx	lr

0801da54 <_ZNK8touchgfx13TextureMapper5getZ1Ev>:
 801da54:	ed90 0a1c 	vldr	s0, [r0, #112]	; 0x70
 801da58:	4770      	bx	lr

0801da5a <_ZNK8touchgfx13TextureMapper5getZ2Ev>:
 801da5a:	ed90 0a1f 	vldr	s0, [r0, #124]	; 0x7c
 801da5e:	4770      	bx	lr

0801da60 <_ZNK8touchgfx13TextureMapper5getZ3Ev>:
 801da60:	ed90 0a22 	vldr	s0, [r0, #136]	; 0x88
 801da64:	4770      	bx	lr

0801da66 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>:
 801da66:	b510      	push	{r4, lr}
 801da68:	ed2d 8b04 	vpush	{d8-d9}
 801da6c:	6803      	ldr	r3, [r0, #0]
 801da6e:	4604      	mov	r4, r0
 801da70:	eeb0 8a40 	vmov.f32	s16, s0
 801da74:	eef0 8a60 	vmov.f32	s17, s1
 801da78:	699b      	ldr	r3, [r3, #24]
 801da7a:	eeb0 9a41 	vmov.f32	s18, s2
 801da7e:	4798      	blx	r3
 801da80:	6823      	ldr	r3, [r4, #0]
 801da82:	4620      	mov	r0, r4
 801da84:	eef0 0a68 	vmov.f32	s1, s17
 801da88:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 801da8a:	eeb0 1a49 	vmov.f32	s2, s18
 801da8e:	eeb0 0a48 	vmov.f32	s0, s16
 801da92:	4798      	blx	r3
 801da94:	6823      	ldr	r3, [r4, #0]
 801da96:	4620      	mov	r0, r4
 801da98:	699b      	ldr	r3, [r3, #24]
 801da9a:	ecbd 8b04 	vpop	{d8-d9}
 801da9e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801daa2:	4718      	bx	r3

0801daa4 <_ZN8touchgfx13TextureMapper11updateScaleEf>:
 801daa4:	b510      	push	{r4, lr}
 801daa6:	ed2d 8b02 	vpush	{d8}
 801daaa:	6803      	ldr	r3, [r0, #0]
 801daac:	4604      	mov	r4, r0
 801daae:	eeb0 8a40 	vmov.f32	s16, s0
 801dab2:	699b      	ldr	r3, [r3, #24]
 801dab4:	4798      	blx	r3
 801dab6:	6823      	ldr	r3, [r4, #0]
 801dab8:	4620      	mov	r0, r4
 801daba:	eeb0 0a48 	vmov.f32	s0, s16
 801dabe:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 801dac2:	4798      	blx	r3
 801dac4:	6823      	ldr	r3, [r4, #0]
 801dac6:	4620      	mov	r0, r4
 801dac8:	699b      	ldr	r3, [r3, #24]
 801daca:	ecbd 8b02 	vpop	{d8}
 801dace:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801dad2:	4718      	bx	r3

0801dad4 <_ZNK8touchgfx13TextureMapper12getSolidRectEv>:
 801dad4:	2200      	movs	r2, #0
 801dad6:	8002      	strh	r2, [r0, #0]
 801dad8:	8042      	strh	r2, [r0, #2]
 801dada:	8082      	strh	r2, [r0, #4]
 801dadc:	80c2      	strh	r2, [r0, #6]
 801dade:	4770      	bx	lr

0801dae0 <_ZN8touchgfx13TextureMapperD1Ev>:
 801dae0:	4770      	bx	lr

0801dae2 <_ZN8touchgfx13TextureMapperD0Ev>:
 801dae2:	b510      	push	{r4, lr}
 801dae4:	4604      	mov	r4, r0
 801dae6:	2190      	movs	r1, #144	; 0x90
 801dae8:	f001 fe99 	bl	801f81e <_ZdlPvj>
 801daec:	4620      	mov	r0, r4
 801daee:	bd10      	pop	{r4, pc}

0801daf0 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>:
 801daf0:	b538      	push	{r3, r4, r5, lr}
 801daf2:	2301      	movs	r3, #1
 801daf4:	2500      	movs	r5, #0
 801daf6:	4604      	mov	r4, r0
 801daf8:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 801dafc:	4b1f      	ldr	r3, [pc, #124]	; (801db7c <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x8c>)
 801dafe:	8085      	strh	r5, [r0, #4]
 801db00:	80c5      	strh	r5, [r0, #6]
 801db02:	8105      	strh	r5, [r0, #8]
 801db04:	8145      	strh	r5, [r0, #10]
 801db06:	8185      	strh	r5, [r0, #12]
 801db08:	81c5      	strh	r5, [r0, #14]
 801db0a:	8205      	strh	r5, [r0, #16]
 801db0c:	8245      	strh	r5, [r0, #18]
 801db0e:	61c5      	str	r5, [r0, #28]
 801db10:	8405      	strh	r5, [r0, #32]
 801db12:	8445      	strh	r5, [r0, #34]	; 0x22
 801db14:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 801db18:	6003      	str	r3, [r0, #0]
 801db1a:	e9c0 5505 	strd	r5, r5, [r0, #20]
 801db1e:	880b      	ldrh	r3, [r1, #0]
 801db20:	84c3      	strh	r3, [r0, #38]	; 0x26
 801db22:	23ff      	movs	r3, #255	; 0xff
 801db24:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 801db28:	f7f1 ff7d 	bl	800fa26 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 801db2c:	4b14      	ldr	r3, [pc, #80]	; (801db80 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x90>)
 801db2e:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 801db32:	4914      	ldr	r1, [pc, #80]	; (801db84 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x94>)
 801db34:	6023      	str	r3, [r4, #0]
 801db36:	2300      	movs	r3, #0
 801db38:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 801db3c:	4620      	mov	r0, r4
 801db3e:	62e3      	str	r3, [r4, #44]	; 0x2c
 801db40:	6323      	str	r3, [r4, #48]	; 0x30
 801db42:	6363      	str	r3, [r4, #52]	; 0x34
 801db44:	63a3      	str	r3, [r4, #56]	; 0x38
 801db46:	63e3      	str	r3, [r4, #60]	; 0x3c
 801db48:	6463      	str	r3, [r4, #68]	; 0x44
 801db4a:	64a3      	str	r3, [r4, #72]	; 0x48
 801db4c:	6523      	str	r3, [r4, #80]	; 0x50
 801db4e:	6563      	str	r3, [r4, #84]	; 0x54
 801db50:	65e3      	str	r3, [r4, #92]	; 0x5c
 801db52:	6623      	str	r3, [r4, #96]	; 0x60
 801db54:	66a3      	str	r3, [r4, #104]	; 0x68
 801db56:	66e3      	str	r3, [r4, #108]	; 0x6c
 801db58:	6763      	str	r3, [r4, #116]	; 0x74
 801db5a:	67a3      	str	r3, [r4, #120]	; 0x78
 801db5c:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 801db60:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 801db64:	230c      	movs	r3, #12
 801db66:	6422      	str	r2, [r4, #64]	; 0x40
 801db68:	64e1      	str	r1, [r4, #76]	; 0x4c
 801db6a:	65a1      	str	r1, [r4, #88]	; 0x58
 801db6c:	6662      	str	r2, [r4, #100]	; 0x64
 801db6e:	6722      	str	r2, [r4, #112]	; 0x70
 801db70:	67e2      	str	r2, [r4, #124]	; 0x7c
 801db72:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
 801db76:	f8a4 308c 	strh.w	r3, [r4, #140]	; 0x8c
 801db7a:	bd38      	pop	{r3, r4, r5, pc}
 801db7c:	08023d14 	.word	0x08023d14
 801db80:	080256b4 	.word	0x080256b4
 801db84:	447a0000 	.word	0x447a0000

0801db88 <_ZN8touchgfx13TextureMapper19applyTransformationEv>:
 801db88:	b570      	push	{r4, r5, r6, lr}
 801db8a:	ed2d 8b04 	vpush	{d8-d9}
 801db8e:	f5ad 7d50 	sub.w	sp, sp, #832	; 0x340
 801db92:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 801db94:	4604      	mov	r4, r0
 801db96:	add0      	add	r5, sp, #832	; 0x340
 801db98:	f825 3d40 	strh.w	r3, [r5, #-64]!
 801db9c:	4628      	mov	r0, r5
 801db9e:	f7f6 ffaf 	bl	8014b00 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801dba2:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 801dba4:	4606      	mov	r6, r0
 801dba6:	4628      	mov	r0, r5
 801dba8:	f8ad 3300 	strh.w	r3, [sp, #768]	; 0x300
 801dbac:	f7f6 ffec 	bl	8014b88 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801dbb0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801dbb4:	1c72      	adds	r2, r6, #1
 801dbb6:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 801dbba:	3001      	adds	r0, #1
 801dbbc:	ee07 2a90 	vmov	s15, r2
 801dbc0:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
 801dbc4:	ee76 5ac7 	vsub.f32	s11, s13, s14
 801dbc8:	ee06 0a90 	vmov	s13, r0
 801dbcc:	ee36 6a47 	vsub.f32	s12, s12, s14
 801dbd0:	6da3      	ldr	r3, [r4, #88]	; 0x58
 801dbd2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801dbd6:	ed94 9a11 	vldr	s18, [r4, #68]	; 0x44
 801dbda:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801dbde:	9312      	str	r3, [sp, #72]	; 0x48
 801dbe0:	9316      	str	r3, [sp, #88]	; 0x58
 801dbe2:	a830      	add	r0, sp, #192	; 0xc0
 801dbe4:	ee77 7a86 	vadd.f32	s15, s15, s12
 801dbe8:	931a      	str	r3, [sp, #104]	; 0x68
 801dbea:	ee76 6aa5 	vadd.f32	s13, s13, s11
 801dbee:	931e      	str	r3, [sp, #120]	; 0x78
 801dbf0:	2300      	movs	r3, #0
 801dbf2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801dbf6:	edcd 5a11 	vstr	s11, [sp, #68]	; 0x44
 801dbfa:	ae70      	add	r6, sp, #448	; 0x1c0
 801dbfc:	9320      	str	r3, [sp, #128]	; 0x80
 801dbfe:	9321      	str	r3, [sp, #132]	; 0x84
 801dc00:	9322      	str	r3, [sp, #136]	; 0x88
 801dc02:	9324      	str	r3, [sp, #144]	; 0x90
 801dc04:	9325      	str	r3, [sp, #148]	; 0x94
 801dc06:	9326      	str	r3, [sp, #152]	; 0x98
 801dc08:	9328      	str	r3, [sp, #160]	; 0xa0
 801dc0a:	9329      	str	r3, [sp, #164]	; 0xa4
 801dc0c:	932a      	str	r3, [sp, #168]	; 0xa8
 801dc0e:	932c      	str	r3, [sp, #176]	; 0xb0
 801dc10:	932d      	str	r3, [sp, #180]	; 0xb4
 801dc12:	932e      	str	r3, [sp, #184]	; 0xb8
 801dc14:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 801dc18:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 801dc1c:	edcd 5a15 	vstr	s11, [sp, #84]	; 0x54
 801dc20:	ed8d 7a17 	vstr	s14, [sp, #92]	; 0x5c
 801dc24:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
 801dc28:	edcd 6a19 	vstr	s13, [sp, #100]	; 0x64
 801dc2c:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 801dc30:	ed8d 6a1c 	vstr	s12, [sp, #112]	; 0x70
 801dc34:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 801dc38:	ed8d 7a1f 	vstr	s14, [sp, #124]	; 0x7c
 801dc3c:	edd4 8a12 	vldr	s17, [r4, #72]	; 0x48
 801dc40:	ed94 8a13 	vldr	s16, [r4, #76]	; 0x4c
 801dc44:	f001 fcc4 	bl	801f5d0 <_ZN8touchgfx9Matrix4x4C1Ev>
 801dc48:	eeb1 0a49 	vneg.f32	s0, s18
 801dc4c:	a830      	add	r0, sp, #192	; 0xc0
 801dc4e:	f001 fd8f 	bl	801f770 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 801dc52:	eeb1 0a68 	vneg.f32	s0, s17
 801dc56:	f001 fd99 	bl	801f78c <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 801dc5a:	eeb1 0a48 	vneg.f32	s0, s16
 801dc5e:	f001 fda4 	bl	801f7aa <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 801dc62:	a840      	add	r0, sp, #256	; 0x100
 801dc64:	f001 fcb4 	bl	801f5d0 <_ZN8touchgfx9Matrix4x4C1Ev>
 801dc68:	ed94 0a0d 	vldr	s0, [r4, #52]	; 0x34
 801dc6c:	a840      	add	r0, sp, #256	; 0x100
 801dc6e:	f001 fd03 	bl	801f678 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>
 801dc72:	ed94 0a0e 	vldr	s0, [r4, #56]	; 0x38
 801dc76:	f001 fd29 	bl	801f6cc <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>
 801dc7a:	ed94 0a0f 	vldr	s0, [r4, #60]	; 0x3c
 801dc7e:	f001 fd4e 	bl	801f71e <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>
 801dc82:	a850      	add	r0, sp, #320	; 0x140
 801dc84:	f001 fca4 	bl	801f5d0 <_ZN8touchgfx9Matrix4x4C1Ev>
 801dc88:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 801dc8c:	a850      	add	r0, sp, #320	; 0x140
 801dc8e:	f001 fd9b 	bl	801f7c8 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>
 801dc92:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 801dc96:	f001 fda3 	bl	801f7e0 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>
 801dc9a:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 801dc9e:	f001 fdac 	bl	801f7fa <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>
 801dca2:	a860      	add	r0, sp, #384	; 0x180
 801dca4:	f001 fc94 	bl	801f5d0 <_ZN8touchgfx9Matrix4x4C1Ev>
 801dca8:	eeb0 0a49 	vmov.f32	s0, s18
 801dcac:	a860      	add	r0, sp, #384	; 0x180
 801dcae:	f001 fd5f 	bl	801f770 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 801dcb2:	eeb0 0a68 	vmov.f32	s0, s17
 801dcb6:	f001 fd69 	bl	801f78c <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 801dcba:	eeb0 0a48 	vmov.f32	s0, s16
 801dcbe:	f001 fd74 	bl	801f7aa <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 801dcc2:	aa50      	add	r2, sp, #320	; 0x140
 801dcc4:	a960      	add	r1, sp, #384	; 0x180
 801dcc6:	a8b0      	add	r0, sp, #704	; 0x2c0
 801dcc8:	f001 fc9a 	bl	801f600 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 801dccc:	4628      	mov	r0, r5
 801dcce:	aa40      	add	r2, sp, #256	; 0x100
 801dcd0:	a9b0      	add	r1, sp, #704	; 0x2c0
 801dcd2:	f001 fc95 	bl	801f600 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 801dcd6:	4629      	mov	r1, r5
 801dcd8:	aa30      	add	r2, sp, #192	; 0xc0
 801dcda:	a870      	add	r0, sp, #448	; 0x1c0
 801dcdc:	f001 fc90 	bl	801f600 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 801dce0:	a880      	add	r0, sp, #512	; 0x200
 801dce2:	f001 fc75 	bl	801f5d0 <_ZN8touchgfx9Matrix4x4C1Ev>
 801dce6:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 801dcea:	a880      	add	r0, sp, #512	; 0x200
 801dcec:	eeb1 0a40 	vneg.f32	s0, s0
 801dcf0:	f001 fd3e 	bl	801f770 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 801dcf4:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 801dcf8:	a880      	add	r0, sp, #512	; 0x200
 801dcfa:	eeb1 0a40 	vneg.f32	s0, s0
 801dcfe:	f001 fd45 	bl	801f78c <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 801dd02:	a890      	add	r0, sp, #576	; 0x240
 801dd04:	f001 fc64 	bl	801f5d0 <_ZN8touchgfx9Matrix4x4C1Ev>
 801dd08:	ed94 0a16 	vldr	s0, [r4, #88]	; 0x58
 801dd0c:	a890      	add	r0, sp, #576	; 0x240
 801dd0e:	f001 fca3 	bl	801f658 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>
 801dd12:	a8a0      	add	r0, sp, #640	; 0x280
 801dd14:	f001 fc5c 	bl	801f5d0 <_ZN8touchgfx9Matrix4x4C1Ev>
 801dd18:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 801dd1c:	a8a0      	add	r0, sp, #640	; 0x280
 801dd1e:	f001 fd27 	bl	801f770 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 801dd22:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 801dd26:	f001 fd31 	bl	801f78c <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 801dd2a:	aa90      	add	r2, sp, #576	; 0x240
 801dd2c:	a9a0      	add	r1, sp, #640	; 0x280
 801dd2e:	a8b0      	add	r0, sp, #704	; 0x2c0
 801dd30:	f001 fc66 	bl	801f600 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 801dd34:	4628      	mov	r0, r5
 801dd36:	aa80      	add	r2, sp, #512	; 0x200
 801dd38:	a9b0      	add	r1, sp, #704	; 0x2c0
 801dd3a:	f001 fc61 	bl	801f600 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 801dd3e:	4629      	mov	r1, r5
 801dd40:	466d      	mov	r5, sp
 801dd42:	aa70      	add	r2, sp, #448	; 0x1c0
 801dd44:	4668      	mov	r0, sp
 801dd46:	f001 fc5b 	bl	801f600 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 801dd4a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 801dd4c:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 801dd4e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 801dd50:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 801dd52:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 801dd54:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 801dd56:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 801dd5a:	2500      	movs	r5, #0
 801dd5c:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 801dd60:	0129      	lsls	r1, r5, #4
 801dd62:	ab20      	add	r3, sp, #128	; 0x80
 801dd64:	3501      	adds	r5, #1
 801dd66:	a870      	add	r0, sp, #448	; 0x1c0
 801dd68:	185e      	adds	r6, r3, r1
 801dd6a:	ab10      	add	r3, sp, #64	; 0x40
 801dd6c:	4419      	add	r1, r3
 801dd6e:	f001 fbff 	bl	801f570 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>
 801dd72:	2d04      	cmp	r5, #4
 801dd74:	ed86 0a00 	vstr	s0, [r6]
 801dd78:	edc6 0a01 	vstr	s1, [r6, #4]
 801dd7c:	ed86 1a02 	vstr	s2, [r6, #8]
 801dd80:	edc6 1a03 	vstr	s3, [r6, #12]
 801dd84:	d1ec      	bne.n	801dd60 <_ZN8touchgfx13TextureMapper19applyTransformationEv+0x1d8>
 801dd86:	edd4 7a16 	vldr	s15, [r4, #88]	; 0x58
 801dd8a:	eddd 6a20 	vldr	s13, [sp, #128]	; 0x80
 801dd8e:	ed9d 7a22 	vldr	s14, [sp, #136]	; 0x88
 801dd92:	ee67 6aa6 	vmul.f32	s13, s15, s13
 801dd96:	ed84 7a19 	vstr	s14, [r4, #100]	; 0x64
 801dd9a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 801dd9e:	eddd 6a21 	vldr	s13, [sp, #132]	; 0x84
 801dda2:	ee67 6aa6 	vmul.f32	s13, s15, s13
 801dda6:	ed84 6a17 	vstr	s12, [r4, #92]	; 0x5c
 801ddaa:	ee86 6a87 	vdiv.f32	s12, s13, s14
 801ddae:	eddd 6a24 	vldr	s13, [sp, #144]	; 0x90
 801ddb2:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 801ddb6:	ed84 7a1c 	vstr	s14, [r4, #112]	; 0x70
 801ddba:	ee67 6aa6 	vmul.f32	s13, s15, s13
 801ddbe:	ed84 6a18 	vstr	s12, [r4, #96]	; 0x60
 801ddc2:	ee86 6a87 	vdiv.f32	s12, s13, s14
 801ddc6:	eddd 6a25 	vldr	s13, [sp, #148]	; 0x94
 801ddca:	ee67 6aa6 	vmul.f32	s13, s15, s13
 801ddce:	ed84 6a1a 	vstr	s12, [r4, #104]	; 0x68
 801ddd2:	ee86 6a87 	vdiv.f32	s12, s13, s14
 801ddd6:	eddd 6a28 	vldr	s13, [sp, #160]	; 0xa0
 801ddda:	ed9d 7a2a 	vldr	s14, [sp, #168]	; 0xa8
 801ddde:	ed84 7a1f 	vstr	s14, [r4, #124]	; 0x7c
 801dde2:	ee67 6aa6 	vmul.f32	s13, s15, s13
 801dde6:	ed84 6a1b 	vstr	s12, [r4, #108]	; 0x6c
 801ddea:	ee86 6a87 	vdiv.f32	s12, s13, s14
 801ddee:	eddd 6a29 	vldr	s13, [sp, #164]	; 0xa4
 801ddf2:	ee67 6aa6 	vmul.f32	s13, s15, s13
 801ddf6:	ed84 6a1d 	vstr	s12, [r4, #116]	; 0x74
 801ddfa:	ee86 6a87 	vdiv.f32	s12, s13, s14
 801ddfe:	eddd 6a2c 	vldr	s13, [sp, #176]	; 0xb0
 801de02:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 801de06:	ed84 7a22 	vstr	s14, [r4, #136]	; 0x88
 801de0a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 801de0e:	ed84 6a1e 	vstr	s12, [r4, #120]	; 0x78
 801de12:	ee86 6a87 	vdiv.f32	s12, s13, s14
 801de16:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 801de1a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801de1e:	eec7 6a87 	vdiv.f32	s13, s15, s14
 801de22:	ed84 6a20 	vstr	s12, [r4, #128]	; 0x80
 801de26:	edc4 6a21 	vstr	s13, [r4, #132]	; 0x84
 801de2a:	f50d 7d50 	add.w	sp, sp, #832	; 0x340
 801de2e:	ecbd 8b04 	vpop	{d8-d9}
 801de32:	bd70      	pop	{r4, r5, r6, pc}

0801de34 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>:
 801de34:	b510      	push	{r4, lr}
 801de36:	4604      	mov	r4, r0
 801de38:	f7f1 fdf5 	bl	800fa26 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 801de3c:	4620      	mov	r0, r4
 801de3e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801de42:	f7ff bea1 	b.w	801db88 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0801de46 <_ZN8touchgfx13TextureMapper9setAnglesEfff>:
 801de46:	ed80 0a0d 	vstr	s0, [r0, #52]	; 0x34
 801de4a:	edc0 0a0e 	vstr	s1, [r0, #56]	; 0x38
 801de4e:	ed80 1a0f 	vstr	s2, [r0, #60]	; 0x3c
 801de52:	f7ff be99 	b.w	801db88 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0801de56 <_ZN8touchgfx13TextureMapper8setScaleEf>:
 801de56:	ed80 0a10 	vstr	s0, [r0, #64]	; 0x40
 801de5a:	f7ff be95 	b.w	801db88 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0801de5e <_ZN8touchgfx13TextureMapper17setBitmapPositionEff>:
 801de5e:	ed80 0a0b 	vstr	s0, [r0, #44]	; 0x2c
 801de62:	edc0 0a0c 	vstr	s1, [r0, #48]	; 0x30
 801de66:	f7ff be8f 	b.w	801db88 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0801de6a <_ZN8touchgfx13TextureMapper17setCameraDistanceEf>:
 801de6a:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 801de6e:	eeb4 0ae7 	vcmpe.f32	s0, s15
 801de72:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801de76:	fe30 0a27 	vselgt.f32	s0, s0, s15
 801de7a:	ed80 0a16 	vstr	s0, [r0, #88]	; 0x58
 801de7e:	f7ff be83 	b.w	801db88 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0801de82 <_ZN8touchgfx13TextureMapper9setCameraEff>:
 801de82:	ed80 0a14 	vstr	s0, [r0, #80]	; 0x50
 801de86:	edc0 0a15 	vstr	s1, [r0, #84]	; 0x54
 801de8a:	f7ff be7d 	b.w	801db88 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0801de8e <_ZN8touchgfx13TextureMapper8setOrigoEff>:
 801de8e:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 801de92:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 801de96:	f7ff be77 	b.w	801db88 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0801de9a <_ZN8touchgfx13TextureMapper8setOrigoEfff>:
 801de9a:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 801de9e:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 801dea2:	ed80 1a13 	vstr	s2, [r0, #76]	; 0x4c
 801dea6:	f7ff be6f 	b.w	801db88 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0801deaa <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>:
 801deaa:	b510      	push	{r4, lr}
 801deac:	edd1 5a1a 	vldr	s11, [r1, #104]	; 0x68
 801deb0:	edd1 7a17 	vldr	s15, [r1, #92]	; 0x5c
 801deb4:	ed91 6a1d 	vldr	s12, [r1, #116]	; 0x74
 801deb8:	eef4 7ae5 	vcmpe.f32	s15, s11
 801debc:	edd1 6a20 	vldr	s13, [r1, #128]	; 0x80
 801dec0:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 801dec4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801dec8:	bf54      	ite	pl
 801deca:	eeb0 7a65 	vmovpl.f32	s14, s11
 801dece:	eeb0 7a67 	vmovmi.f32	s14, s15
 801ded2:	eeb4 6ac7 	vcmpe.f32	s12, s14
 801ded6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801deda:	fe37 7a06 	vselgt.f32	s14, s14, s12
 801dede:	eef4 6ac7 	vcmpe.f32	s13, s14
 801dee2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801dee6:	fe37 7a26 	vselgt.f32	s14, s14, s13
 801deea:	febb 7a47 	vrintm.f32	s14, s14
 801deee:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801def2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801def6:	eef4 7ae5 	vcmpe.f32	s15, s11
 801defa:	bf56      	itet	pl
 801defc:	eebd 7ac7 	vcvtpl.s32.f32	s14, s14
 801df00:	2200      	movmi	r2, #0
 801df02:	ee17 3a10 	vmovpl	r3, s14
 801df06:	ee07 4a10 	vmov	s14, r4
 801df0a:	bf58      	it	pl
 801df0c:	b21a      	sxthpl	r2, r3
 801df0e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801df12:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801df16:	8002      	strh	r2, [r0, #0]
 801df18:	fe77 7aa5 	vselgt.f32	s15, s15, s11
 801df1c:	eeb4 6ae7 	vcmpe.f32	s12, s15
 801df20:	edd1 5a1b 	vldr	s11, [r1, #108]	; 0x6c
 801df24:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801df28:	bf58      	it	pl
 801df2a:	eef0 7a46 	vmovpl.f32	s15, s12
 801df2e:	ed91 6a1e 	vldr	s12, [r1, #120]	; 0x78
 801df32:	eef4 6ae7 	vcmpe.f32	s13, s15
 801df36:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801df3a:	bf58      	it	pl
 801df3c:	eef0 7a66 	vmovpl.f32	s15, s13
 801df40:	edd1 6a21 	vldr	s13, [r1, #132]	; 0x84
 801df44:	fefa 7a67 	vrintp.f32	s15, s15
 801df48:	eef4 7ac7 	vcmpe.f32	s15, s14
 801df4c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801df50:	bfdc      	itt	le
 801df52:	eefd 7ae7 	vcvtle.s32.f32	s15, s15
 801df56:	ee17 3a90 	vmovle	r3, s15
 801df5a:	edd1 7a18 	vldr	s15, [r1, #96]	; 0x60
 801df5e:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 801df62:	eef4 7ae5 	vcmpe.f32	s15, s11
 801df66:	bfd8      	it	le
 801df68:	b21c      	sxthle	r4, r3
 801df6a:	1aa2      	subs	r2, r4, r2
 801df6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801df70:	8082      	strh	r2, [r0, #4]
 801df72:	bf54      	ite	pl
 801df74:	eeb0 7a65 	vmovpl.f32	s14, s11
 801df78:	eeb0 7a67 	vmovmi.f32	s14, s15
 801df7c:	eeb4 6ac7 	vcmpe.f32	s12, s14
 801df80:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801df84:	fe37 7a06 	vselgt.f32	s14, s14, s12
 801df88:	eef4 6ac7 	vcmpe.f32	s13, s14
 801df8c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801df90:	fe37 7a26 	vselgt.f32	s14, s14, s13
 801df94:	febb 7a47 	vrintm.f32	s14, s14
 801df98:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801df9c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801dfa0:	eef4 7ae5 	vcmpe.f32	s15, s11
 801dfa4:	bf56      	itet	pl
 801dfa6:	eebd 7ac7 	vcvtpl.s32.f32	s14, s14
 801dfaa:	2300      	movmi	r3, #0
 801dfac:	ee17 3a10 	vmovpl	r3, s14
 801dfb0:	ee07 1a10 	vmov	s14, r1
 801dfb4:	bf58      	it	pl
 801dfb6:	b21b      	sxthpl	r3, r3
 801dfb8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801dfbc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801dfc0:	8043      	strh	r3, [r0, #2]
 801dfc2:	fe77 7aa5 	vselgt.f32	s15, s15, s11
 801dfc6:	eeb4 6ae7 	vcmpe.f32	s12, s15
 801dfca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801dfce:	bf58      	it	pl
 801dfd0:	eef0 7a46 	vmovpl.f32	s15, s12
 801dfd4:	eef4 6ae7 	vcmpe.f32	s13, s15
 801dfd8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801dfdc:	bf58      	it	pl
 801dfde:	eef0 7a66 	vmovpl.f32	s15, s13
 801dfe2:	fefa 7a67 	vrintp.f32	s15, s15
 801dfe6:	eef4 7ac7 	vcmpe.f32	s15, s14
 801dfea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801dfee:	bfde      	ittt	le
 801dff0:	eefd 7ae7 	vcvtle.s32.f32	s15, s15
 801dff4:	ee17 1a90 	vmovle	r1, s15
 801dff8:	b209      	sxthle	r1, r1
 801dffa:	1acb      	subs	r3, r1, r3
 801dffc:	80c3      	strh	r3, [r0, #6]
 801dffe:	bd10      	pop	{r4, pc}

0801e000 <_ZNK8touchgfx13TextureMapper17invalidateContentEv>:
 801e000:	b513      	push	{r0, r1, r4, lr}
 801e002:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 801e006:	4604      	mov	r4, r0
 801e008:	b143      	cbz	r3, 801e01c <_ZNK8touchgfx13TextureMapper17invalidateContentEv+0x1c>
 801e00a:	4601      	mov	r1, r0
 801e00c:	4668      	mov	r0, sp
 801e00e:	f7ff ff4c 	bl	801deaa <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
 801e012:	6823      	ldr	r3, [r4, #0]
 801e014:	4669      	mov	r1, sp
 801e016:	4620      	mov	r0, r4
 801e018:	691b      	ldr	r3, [r3, #16]
 801e01a:	4798      	blx	r3
 801e01c:	b002      	add	sp, #8
 801e01e:	bd10      	pop	{r4, pc}

0801e020 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>:
 801e020:	4603      	mov	r3, r0
 801e022:	3026      	adds	r0, #38	; 0x26
 801e024:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 801e028:	b90b      	cbnz	r3, 801e02e <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv+0xe>
 801e02a:	f7f4 bc60 	b.w	80128ee <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 801e02e:	f7f4 bc6e 	b.w	801290e <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>
	...

0801e034 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 801e034:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e038:	4604      	mov	r4, r0
 801e03a:	469b      	mov	fp, r3
 801e03c:	ed2d 8b04 	vpush	{d8-d9}
 801e040:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 801e044:	b0b3      	sub	sp, #204	; 0xcc
 801e046:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 801e04a:	f9b1 6000 	ldrsh.w	r6, [r1]
 801e04e:	8888      	ldrh	r0, [r1, #4]
 801e050:	9206      	str	r2, [sp, #24]
 801e052:	2200      	movs	r2, #0
 801e054:	4430      	add	r0, r6
 801e056:	f8dd a100 	ldr.w	sl, [sp, #256]	; 0x100
 801e05a:	f8dd 9104 	ldr.w	r9, [sp, #260]	; 0x104
 801e05e:	b280      	uxth	r0, r0
 801e060:	f8dd 8108 	ldr.w	r8, [sp, #264]	; 0x108
 801e064:	9f43      	ldr	r7, [sp, #268]	; 0x10c
 801e066:	fa0f fe80 	sxth.w	lr, r0
 801e06a:	9211      	str	r2, [sp, #68]	; 0x44
 801e06c:	4596      	cmp	lr, r2
 801e06e:	f340 8129 	ble.w	801e2c4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 801e072:	45b4      	cmp	ip, r6
 801e074:	f340 8126 	ble.w	801e2c4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 801e078:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 801e07c:	88ca      	ldrh	r2, [r1, #6]
 801e07e:	442a      	add	r2, r5
 801e080:	b292      	uxth	r2, r2
 801e082:	b211      	sxth	r1, r2
 801e084:	2900      	cmp	r1, #0
 801e086:	f340 811d 	ble.w	801e2c4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 801e08a:	42ab      	cmp	r3, r5
 801e08c:	f340 811a 	ble.w	801e2c4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 801e090:	45f4      	cmp	ip, lr
 801e092:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 801e096:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801e09a:	bfb8      	it	lt
 801e09c:	fa1f f08c 	uxthlt.w	r0, ip
 801e0a0:	428b      	cmp	r3, r1
 801e0a2:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 801e0a6:	bfb8      	it	lt
 801e0a8:	b29a      	uxthlt	r2, r3
 801e0aa:	1b80      	subs	r0, r0, r6
 801e0ac:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 801e0b0:	1b52      	subs	r2, r2, r5
 801e0b2:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 801e0b6:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 801e0ba:	ab11      	add	r3, sp, #68	; 0x44
 801e0bc:	ad13      	add	r5, sp, #76	; 0x4c
 801e0be:	6822      	ldr	r2, [r4, #0]
 801e0c0:	1d26      	adds	r6, r4, #4
 801e0c2:	9307      	str	r3, [sp, #28]
 801e0c4:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 801e0c6:	e893 0003 	ldmia.w	r3, {r0, r1}
 801e0ca:	e885 0003 	stmia.w	r5, {r0, r1}
 801e0ce:	4629      	mov	r1, r5
 801e0d0:	4620      	mov	r0, r4
 801e0d2:	4790      	blx	r2
 801e0d4:	4621      	mov	r1, r4
 801e0d6:	a815      	add	r0, sp, #84	; 0x54
 801e0d8:	f7f4 fb64 	bl	80127a4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801e0dc:	a815      	add	r0, sp, #84	; 0x54
 801e0de:	f7f3 f8a9 	bl	8011234 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e0e2:	9b07      	ldr	r3, [sp, #28]
 801e0e4:	4631      	mov	r1, r6
 801e0e6:	4618      	mov	r0, r3
 801e0e8:	f7f3 f8e8 	bl	80112bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e0ec:	4628      	mov	r0, r5
 801e0ee:	f104 0526 	add.w	r5, r4, #38	; 0x26
 801e0f2:	f7f3 f89f 	bl	8011234 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e0f6:	4628      	mov	r0, r5
 801e0f8:	f7f6 fe1e 	bl	8014d38 <_ZNK8touchgfx6Bitmap7getDataEv>
 801e0fc:	9007      	str	r0, [sp, #28]
 801e0fe:	2800      	cmp	r0, #0
 801e100:	f000 80db 	beq.w	801e2ba <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x286>
 801e104:	f8db 2000 	ldr.w	r2, [fp]
 801e108:	a90d      	add	r1, sp, #52	; 0x34
 801e10a:	a809      	add	r0, sp, #36	; 0x24
 801e10c:	9209      	str	r2, [sp, #36]	; 0x24
 801e10e:	f8db 2004 	ldr.w	r2, [fp, #4]
 801e112:	920a      	str	r2, [sp, #40]	; 0x28
 801e114:	f8db 2008 	ldr.w	r2, [fp, #8]
 801e118:	920b      	str	r2, [sp, #44]	; 0x2c
 801e11a:	f8db 200c 	ldr.w	r2, [fp, #12]
 801e11e:	920c      	str	r2, [sp, #48]	; 0x30
 801e120:	f8da 2000 	ldr.w	r2, [sl]
 801e124:	920d      	str	r2, [sp, #52]	; 0x34
 801e126:	f8da 2004 	ldr.w	r2, [sl, #4]
 801e12a:	920e      	str	r2, [sp, #56]	; 0x38
 801e12c:	f8da 2008 	ldr.w	r2, [sl, #8]
 801e130:	920f      	str	r2, [sp, #60]	; 0x3c
 801e132:	f8da 200c 	ldr.w	r2, [sl, #12]
 801e136:	9210      	str	r2, [sp, #64]	; 0x40
 801e138:	4632      	mov	r2, r6
 801e13a:	f7f3 f8a3 	bl	8011284 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 801e13e:	4632      	mov	r2, r6
 801e140:	a90e      	add	r1, sp, #56	; 0x38
 801e142:	a80a      	add	r0, sp, #40	; 0x28
 801e144:	f7f3 f89e 	bl	8011284 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 801e148:	4632      	mov	r2, r6
 801e14a:	a90f      	add	r1, sp, #60	; 0x3c
 801e14c:	a80b      	add	r0, sp, #44	; 0x2c
 801e14e:	f7f3 f899 	bl	8011284 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 801e152:	4632      	mov	r2, r6
 801e154:	a910      	add	r1, sp, #64	; 0x40
 801e156:	a80c      	add	r0, sp, #48	; 0x30
 801e158:	f7f3 f894 	bl	8011284 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 801e15c:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 801e160:	edd7 4a00 	vldr	s9, [r7]
 801e164:	eef0 6a67 	vmov.f32	s13, s15
 801e168:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 801e16c:	edd7 5a01 	vldr	s11, [r7, #4]
 801e170:	eeb0 7a67 	vmov.f32	s14, s15
 801e174:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 801e178:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 801e17c:	ed98 4a00 	vldr	s8, [r8]
 801e180:	eeb0 6a67 	vmov.f32	s12, s15
 801e184:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 801e188:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 801e18c:	ed98 5a01 	vldr	s10, [r8, #4]
 801e190:	ed99 9a00 	vldr	s18, [r9]
 801e194:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 801e198:	ed99 8a01 	vldr	s16, [r9, #4]
 801e19c:	edd9 8a02 	vldr	s17, [r9, #8]
 801e1a0:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 801e1a4:	ee16 6a10 	vmov	r6, s12
 801e1a8:	eeb0 6a67 	vmov.f32	s12, s15
 801e1ac:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 801e1b0:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 801e1b4:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 801e1b8:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 801e1bc:	ed8d 4a21 	vstr	s8, [sp, #132]	; 0x84
 801e1c0:	edcd 4a22 	vstr	s9, [sp, #136]	; 0x88
 801e1c4:	ee16 0a10 	vmov	r0, s12
 801e1c8:	eeb0 6a67 	vmov.f32	s12, s15
 801e1cc:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 801e1d0:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 801e1d4:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 801e1d8:	ed8d 5a26 	vstr	s10, [sp, #152]	; 0x98
 801e1dc:	edcd 5a27 	vstr	s11, [sp, #156]	; 0x9c
 801e1e0:	f8d7 a008 	ldr.w	sl, [r7, #8]
 801e1e4:	ee16 1a10 	vmov	r1, s12
 801e1e8:	eeb0 6a67 	vmov.f32	s12, s15
 801e1ec:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 801e1f0:	f8d8 b008 	ldr.w	fp, [r8, #8]
 801e1f4:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 801e1f8:	68ff      	ldr	r7, [r7, #12]
 801e1fa:	9624      	str	r6, [sp, #144]	; 0x90
 801e1fc:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 801e200:	ed8d 9a20 	vstr	s18, [sp, #128]	; 0x80
 801e204:	ee16 2a10 	vmov	r2, s12
 801e208:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 801e20c:	ed8d 8a25 	vstr	s16, [sp, #148]	; 0x94
 801e210:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 801e214:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 801e218:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 801e21c:	4628      	mov	r0, r5
 801e21e:	edcd 8a2a 	vstr	s17, [sp, #168]	; 0xa8
 801e222:	9b06      	ldr	r3, [sp, #24]
 801e224:	922d      	str	r2, [sp, #180]	; 0xb4
 801e226:	4a29      	ldr	r2, [pc, #164]	; (801e2cc <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x298>)
 801e228:	9317      	str	r3, [sp, #92]	; 0x5c
 801e22a:	8812      	ldrh	r2, [r2, #0]
 801e22c:	9b07      	ldr	r3, [sp, #28]
 801e22e:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 801e232:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 801e236:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 801e23a:	9218      	str	r2, [sp, #96]	; 0x60
 801e23c:	9319      	str	r3, [sp, #100]	; 0x64
 801e23e:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 801e242:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 801e246:	9731      	str	r7, [sp, #196]	; 0xc4
 801e248:	f7f6 fda8 	bl	8014d9c <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801e24c:	901a      	str	r0, [sp, #104]	; 0x68
 801e24e:	4628      	mov	r0, r5
 801e250:	f7f6 fc56 	bl	8014b00 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801e254:	901b      	str	r0, [sp, #108]	; 0x6c
 801e256:	4628      	mov	r0, r5
 801e258:	f7f6 fc96 	bl	8014b88 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801e25c:	901c      	str	r0, [sp, #112]	; 0x70
 801e25e:	4628      	mov	r0, r5
 801e260:	f7f6 fc4e 	bl	8014b00 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801e264:	eeb4 9a48 	vcmp.f32	s18, s16
 801e268:	901d      	str	r0, [sp, #116]	; 0x74
 801e26a:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 801e26e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e272:	d107      	bne.n	801e284 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x250>
 801e274:	eeb4 8a68 	vcmp.f32	s16, s17
 801e278:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801e27c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e280:	bf08      	it	eq
 801e282:	461e      	moveq	r6, r3
 801e284:	4b12      	ldr	r3, [pc, #72]	; (801e2d0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x29c>)
 801e286:	681b      	ldr	r3, [r3, #0]
 801e288:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 801e28c:	b10a      	cbz	r2, 801e292 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x25e>
 801e28e:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 801e290:	b905      	cbnz	r5, 801e294 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x260>
 801e292:	689d      	ldr	r5, [r3, #8]
 801e294:	682b      	ldr	r3, [r5, #0]
 801e296:	4620      	mov	r0, r4
 801e298:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 801e29a:	f7ff fec1 	bl	801e020 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>
 801e29e:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 801e2a2:	aa1e      	add	r2, sp, #120	; 0x78
 801e2a4:	9604      	str	r6, [sp, #16]
 801e2a6:	a917      	add	r1, sp, #92	; 0x5c
 801e2a8:	e9cd 0302 	strd	r0, r3, [sp, #8]
 801e2ac:	ab13      	add	r3, sp, #76	; 0x4c
 801e2ae:	4628      	mov	r0, r5
 801e2b0:	9301      	str	r3, [sp, #4]
 801e2b2:	ab15      	add	r3, sp, #84	; 0x54
 801e2b4:	9300      	str	r3, [sp, #0]
 801e2b6:	ab19      	add	r3, sp, #100	; 0x64
 801e2b8:	47b8      	blx	r7
 801e2ba:	b033      	add	sp, #204	; 0xcc
 801e2bc:	ecbd 8b04 	vpop	{d8-d9}
 801e2c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e2c4:	2300      	movs	r3, #0
 801e2c6:	9312      	str	r3, [sp, #72]	; 0x48
 801e2c8:	e6f7      	b.n	801e0ba <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x86>
 801e2ca:	bf00      	nop
 801e2cc:	2400e076 	.word	0x2400e076
 801e2d0:	2400e07c 	.word	0x2400e07c

0801e2d4 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE>:
 801e2d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801e2d8:	ed2d 8b02 	vpush	{d8}
 801e2dc:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 801e2e0:	b098      	sub	sp, #96	; 0x60
 801e2e2:	4604      	mov	r4, r0
 801e2e4:	4688      	mov	r8, r1
 801e2e6:	2b00      	cmp	r3, #0
 801e2e8:	d077      	beq.n	801e3da <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x106>
 801e2ea:	f100 0526 	add.w	r5, r0, #38	; 0x26
 801e2ee:	4628      	mov	r0, r5
 801e2f0:	f7f6 fc06 	bl	8014b00 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801e2f4:	ee07 0a90 	vmov	s15, r0
 801e2f8:	4628      	mov	r0, r5
 801e2fa:	eeb8 8a67 	vcvt.f32.u32	s16, s15
 801e2fe:	f7f6 fc43 	bl	8014b88 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801e302:	4b4e      	ldr	r3, [pc, #312]	; (801e43c <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x168>)
 801e304:	ee07 0a90 	vmov	s15, r0
 801e308:	781b      	ldrb	r3, [r3, #0]
 801e30a:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 801e30e:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 801e312:	2b01      	cmp	r3, #1
 801e314:	d066      	beq.n	801e3e4 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x110>
 801e316:	eeb0 6a47 	vmov.f32	s12, s14
 801e31a:	ee17 3a10 	vmov	r3, s14
 801e31e:	eeb0 4a48 	vmov.f32	s8, s16
 801e322:	eeb0 7a48 	vmov.f32	s14, s16
 801e326:	eef0 4a67 	vmov.f32	s9, s15
 801e32a:	eeb0 8a67 	vmov.f32	s16, s15
 801e32e:	ed94 5a17 	vldr	s10, [r4, #92]	; 0x5c
 801e332:	edd4 5a18 	vldr	s11, [r4, #96]	; 0x60
 801e336:	ed94 3a1b 	vldr	s6, [r4, #108]	; 0x6c
 801e33a:	edd4 2a1d 	vldr	s5, [r4, #116]	; 0x74
 801e33e:	ee73 1a65 	vsub.f32	s3, s6, s11
 801e342:	ed94 2a1a 	vldr	s4, [r4, #104]	; 0x68
 801e346:	ee72 6ac5 	vsub.f32	s13, s5, s10
 801e34a:	edd4 3a1e 	vldr	s7, [r4, #120]	; 0x78
 801e34e:	ee32 1a45 	vsub.f32	s2, s4, s10
 801e352:	6f25      	ldr	r5, [r4, #112]	; 0x70
 801e354:	6e66      	ldr	r6, [r4, #100]	; 0x64
 801e356:	ee66 6ae1 	vnmul.f32	s13, s13, s3
 801e35a:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 801e35c:	ee73 1ae5 	vsub.f32	s3, s7, s11
 801e360:	f8d4 c080 	ldr.w	ip, [r4, #128]	; 0x80
 801e364:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
 801e368:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 801e36c:	eee1 6a21 	vfma.f32	s13, s2, s3
 801e370:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 801e374:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801e378:	dd3d      	ble.n	801e3f6 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x122>
 801e37a:	ed8d 5a04 	vstr	s10, [sp, #16]
 801e37e:	ed8d 2a05 	vstr	s4, [sp, #20]
 801e382:	edcd 2a06 	vstr	s5, [sp, #24]
 801e386:	f8cd c01c 	str.w	ip, [sp, #28]
 801e38a:	edcd 5a08 	vstr	s11, [sp, #32]
 801e38e:	ed8d 3a09 	vstr	s6, [sp, #36]	; 0x24
 801e392:	edcd 3a0a 	vstr	s7, [sp, #40]	; 0x28
 801e396:	970b      	str	r7, [sp, #44]	; 0x2c
 801e398:	960c      	str	r6, [sp, #48]	; 0x30
 801e39a:	950d      	str	r5, [sp, #52]	; 0x34
 801e39c:	920e      	str	r2, [sp, #56]	; 0x38
 801e39e:	900f      	str	r0, [sp, #60]	; 0x3c
 801e3a0:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 801e3a4:	ed8d 4a11 	vstr	s8, [sp, #68]	; 0x44
 801e3a8:	ed8d 7a12 	vstr	s14, [sp, #72]	; 0x48
 801e3ac:	edcd 4a13 	vstr	s9, [sp, #76]	; 0x4c
 801e3b0:	ed8d 8a14 	vstr	s16, [sp, #80]	; 0x50
 801e3b4:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 801e3b8:	9316      	str	r3, [sp, #88]	; 0x58
 801e3ba:	ed8d 6a17 	vstr	s12, [sp, #92]	; 0x5c
 801e3be:	ab14      	add	r3, sp, #80	; 0x50
 801e3c0:	2200      	movs	r2, #0
 801e3c2:	4641      	mov	r1, r8
 801e3c4:	4620      	mov	r0, r4
 801e3c6:	9303      	str	r3, [sp, #12]
 801e3c8:	ab10      	add	r3, sp, #64	; 0x40
 801e3ca:	9302      	str	r3, [sp, #8]
 801e3cc:	ab0c      	add	r3, sp, #48	; 0x30
 801e3ce:	9301      	str	r3, [sp, #4]
 801e3d0:	ab08      	add	r3, sp, #32
 801e3d2:	9300      	str	r3, [sp, #0]
 801e3d4:	ab04      	add	r3, sp, #16
 801e3d6:	f7ff fe2d 	bl	801e034 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 801e3da:	b018      	add	sp, #96	; 0x60
 801e3dc:	ecbd 8b02 	vpop	{d8}
 801e3e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801e3e4:	eeb0 6a48 	vmov.f32	s12, s16
 801e3e8:	ee17 3a90 	vmov	r3, s15
 801e3ec:	eef0 4a47 	vmov.f32	s9, s14
 801e3f0:	eeb0 4a67 	vmov.f32	s8, s15
 801e3f4:	e79b      	b.n	801e32e <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x5a>
 801e3f6:	ed8d 5a05 	vstr	s10, [sp, #20]
 801e3fa:	ed8d 2a04 	vstr	s4, [sp, #16]
 801e3fe:	f8cd c018 	str.w	ip, [sp, #24]
 801e402:	edcd 2a07 	vstr	s5, [sp, #28]
 801e406:	edcd 5a09 	vstr	s11, [sp, #36]	; 0x24
 801e40a:	ed8d 3a08 	vstr	s6, [sp, #32]
 801e40e:	970a      	str	r7, [sp, #40]	; 0x28
 801e410:	edcd 3a0b 	vstr	s7, [sp, #44]	; 0x2c
 801e414:	960d      	str	r6, [sp, #52]	; 0x34
 801e416:	950c      	str	r5, [sp, #48]	; 0x30
 801e418:	900e      	str	r0, [sp, #56]	; 0x38
 801e41a:	920f      	str	r2, [sp, #60]	; 0x3c
 801e41c:	edcd 7a11 	vstr	s15, [sp, #68]	; 0x44
 801e420:	ed8d 4a10 	vstr	s8, [sp, #64]	; 0x40
 801e424:	edcd 4a12 	vstr	s9, [sp, #72]	; 0x48
 801e428:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 801e42c:	ed8d 8a15 	vstr	s16, [sp, #84]	; 0x54
 801e430:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 801e434:	ed8d 6a16 	vstr	s12, [sp, #88]	; 0x58
 801e438:	9317      	str	r3, [sp, #92]	; 0x5c
 801e43a:	e7c0      	b.n	801e3be <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0xea>
 801e43c:	2400e074 	.word	0x2400e074

0801e440 <_ZN8touchgfx7OutlineD1Ev>:
 801e440:	4770      	bx	lr

0801e442 <_ZN8touchgfx7OutlineD0Ev>:
 801e442:	b510      	push	{r4, lr}
 801e444:	4604      	mov	r4, r0
 801e446:	2148      	movs	r1, #72	; 0x48
 801e448:	f001 f9e9 	bl	801f81e <_ZdlPvj>
 801e44c:	4620      	mov	r0, r4
 801e44e:	bd10      	pop	{r4, pc}

0801e450 <_ZN8touchgfx7Outline5resetEv>:
 801e450:	b510      	push	{r4, lr}
 801e452:	4604      	mov	r4, r0
 801e454:	f7f1 fc04 	bl	800fc60 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 801e458:	60e0      	str	r0, [r4, #12]
 801e45a:	f7f1 fc07 	bl	800fc6c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 801e45e:	68e3      	ldr	r3, [r4, #12]
 801e460:	2200      	movs	r2, #0
 801e462:	08c0      	lsrs	r0, r0, #3
 801e464:	6123      	str	r3, [r4, #16]
 801e466:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801e46a:	6060      	str	r0, [r4, #4]
 801e46c:	82a3      	strh	r3, [r4, #20]
 801e46e:	82e3      	strh	r3, [r4, #22]
 801e470:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801e472:	60a2      	str	r2, [r4, #8]
 801e474:	f023 0301 	bic.w	r3, r3, #1
 801e478:	8322      	strh	r2, [r4, #24]
 801e47a:	8362      	strh	r2, [r4, #26]
 801e47c:	f043 0302 	orr.w	r3, r3, #2
 801e480:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 801e484:	63e3      	str	r3, [r4, #60]	; 0x3c
 801e486:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 801e48a:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 801e48e:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 801e492:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 801e496:	bd10      	pop	{r4, pc}

0801e498 <_ZN8touchgfx7OutlineC1Ev>:
 801e498:	4b0f      	ldr	r3, [pc, #60]	; (801e4d8 <_ZN8touchgfx7OutlineC1Ev+0x40>)
 801e49a:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
 801e49e:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
 801e4a2:	b510      	push	{r4, lr}
 801e4a4:	6003      	str	r3, [r0, #0]
 801e4a6:	2300      	movs	r3, #0
 801e4a8:	4604      	mov	r4, r0
 801e4aa:	f880 3044 	strb.w	r3, [r0, #68]	; 0x44
 801e4ae:	e9c0 3301 	strd	r3, r3, [r0, #4]
 801e4b2:	e9c0 3303 	strd	r3, r3, [r0, #12]
 801e4b6:	e9c0 3305 	strd	r3, r3, [r0, #20]
 801e4ba:	e9c0 3307 	strd	r3, r3, [r0, #28]
 801e4be:	e9c0 3309 	strd	r3, r3, [r0, #36]	; 0x24
 801e4c2:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
 801e4c6:	e9c0 110d 	strd	r1, r1, [r0, #52]	; 0x34
 801e4ca:	e9c0 320f 	strd	r3, r2, [r0, #60]	; 0x3c
 801e4ce:	f7ff ffbf 	bl	801e450 <_ZN8touchgfx7Outline5resetEv>
 801e4d2:	4620      	mov	r0, r4
 801e4d4:	bd10      	pop	{r4, pc}
 801e4d6:	bf00      	nop
 801e4d8:	08025838 	.word	0x08025838

0801e4dc <_ZN8touchgfx7Outline10renderLineEiiii>:
 801e4dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e4e0:	b095      	sub	sp, #84	; 0x54
 801e4e2:	4604      	mov	r4, r0
 801e4e4:	1155      	asrs	r5, r2, #5
 801e4e6:	f002 061f 	and.w	r6, r2, #31
 801e4ea:	981e      	ldr	r0, [sp, #120]	; 0x78
 801e4ec:	1157      	asrs	r7, r2, #5
 801e4ee:	9304      	str	r3, [sp, #16]
 801e4f0:	1153      	asrs	r3, r2, #5
 801e4f2:	9300      	str	r3, [sp, #0]
 801e4f4:	1143      	asrs	r3, r0, #5
 801e4f6:	930c      	str	r3, [sp, #48]	; 0x30
 801e4f8:	f000 031f 	and.w	r3, r0, #31
 801e4fc:	9303      	str	r3, [sp, #12]
 801e4fe:	6b23      	ldr	r3, [r4, #48]	; 0x30
 801e500:	42ab      	cmp	r3, r5
 801e502:	bfc8      	it	gt
 801e504:	462b      	movgt	r3, r5
 801e506:	ea4f 1562 	mov.w	r5, r2, asr #5
 801e50a:	bfc8      	it	gt
 801e50c:	6323      	strgt	r3, [r4, #48]	; 0x30
 801e50e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 801e510:	42ab      	cmp	r3, r5
 801e512:	bfd8      	it	le
 801e514:	462b      	movle	r3, r5
 801e516:	ea4f 1560 	mov.w	r5, r0, asr #5
 801e51a:	bfdc      	itt	le
 801e51c:	3301      	addle	r3, #1
 801e51e:	63a3      	strle	r3, [r4, #56]	; 0x38
 801e520:	6b23      	ldr	r3, [r4, #48]	; 0x30
 801e522:	42ab      	cmp	r3, r5
 801e524:	bfc8      	it	gt
 801e526:	462b      	movgt	r3, r5
 801e528:	ea4f 1560 	mov.w	r5, r0, asr #5
 801e52c:	bfc8      	it	gt
 801e52e:	6323      	strgt	r3, [r4, #48]	; 0x30
 801e530:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 801e532:	42ab      	cmp	r3, r5
 801e534:	bfd8      	it	le
 801e536:	462b      	movle	r3, r5
 801e538:	ea4f 1561 	mov.w	r5, r1, asr #5
 801e53c:	bfdc      	itt	le
 801e53e:	3301      	addle	r3, #1
 801e540:	63a3      	strle	r3, [r4, #56]	; 0x38
 801e542:	9b04      	ldr	r3, [sp, #16]
 801e544:	eba3 0a01 	sub.w	sl, r3, r1
 801e548:	1143      	asrs	r3, r0, #5
 801e54a:	429f      	cmp	r7, r3
 801e54c:	f040 811d 	bne.w	801e78a <_ZN8touchgfx7Outline10renderLineEiiii+0x2ae>
 801e550:	9b04      	ldr	r3, [sp, #16]
 801e552:	ea4f 1b63 	mov.w	fp, r3, asr #5
 801e556:	9b03      	ldr	r3, [sp, #12]
 801e558:	429e      	cmp	r6, r3
 801e55a:	d131      	bne.n	801e5c0 <_ZN8touchgfx7Outline10renderLineEiiii+0xe4>
 801e55c:	f9b4 3016 	ldrsh.w	r3, [r4, #22]
 801e560:	fa0f fb8b 	sxth.w	fp, fp
 801e564:	f9bd 2000 	ldrsh.w	r2, [sp]
 801e568:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
 801e56c:	eb0b 4002 	add.w	r0, fp, r2, lsl #16
 801e570:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 801e574:	4281      	cmp	r1, r0
 801e576:	f000 80e6 	beq.w	801e746 <_ZN8touchgfx7Outline10renderLineEiiii+0x26a>
 801e57a:	8b60      	ldrh	r0, [r4, #26]
 801e57c:	8b21      	ldrh	r1, [r4, #24]
 801e57e:	4301      	orrs	r1, r0
 801e580:	d00b      	beq.n	801e59a <_ZN8touchgfx7Outline10renderLineEiiii+0xbe>
 801e582:	2b00      	cmp	r3, #0
 801e584:	db09      	blt.n	801e59a <_ZN8touchgfx7Outline10renderLineEiiii+0xbe>
 801e586:	6c21      	ldr	r1, [r4, #64]	; 0x40
 801e588:	428b      	cmp	r3, r1
 801e58a:	da06      	bge.n	801e59a <_ZN8touchgfx7Outline10renderLineEiiii+0xbe>
 801e58c:	e9d4 3101 	ldrd	r3, r1, [r4, #4]
 801e590:	4299      	cmp	r1, r3
 801e592:	d308      	bcc.n	801e5a6 <_ZN8touchgfx7Outline10renderLineEiiii+0xca>
 801e594:	2301      	movs	r3, #1
 801e596:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 801e59a:	f8a4 b014 	strh.w	fp, [r4, #20]
 801e59e:	2300      	movs	r3, #0
 801e5a0:	82e2      	strh	r2, [r4, #22]
 801e5a2:	8323      	strh	r3, [r4, #24]
 801e5a4:	e01f      	b.n	801e5e6 <_ZN8touchgfx7Outline10renderLineEiiii+0x10a>
 801e5a6:	f104 0314 	add.w	r3, r4, #20
 801e5aa:	6925      	ldr	r5, [r4, #16]
 801e5ac:	cb03      	ldmia	r3!, {r0, r1}
 801e5ae:	6028      	str	r0, [r5, #0]
 801e5b0:	6069      	str	r1, [r5, #4]
 801e5b2:	6923      	ldr	r3, [r4, #16]
 801e5b4:	3308      	adds	r3, #8
 801e5b6:	6123      	str	r3, [r4, #16]
 801e5b8:	68a3      	ldr	r3, [r4, #8]
 801e5ba:	3301      	adds	r3, #1
 801e5bc:	60a3      	str	r3, [r4, #8]
 801e5be:	e7ec      	b.n	801e59a <_ZN8touchgfx7Outline10renderLineEiiii+0xbe>
 801e5c0:	9b04      	ldr	r3, [sp, #16]
 801e5c2:	45ab      	cmp	fp, r5
 801e5c4:	f001 011f 	and.w	r1, r1, #31
 801e5c8:	8b20      	ldrh	r0, [r4, #24]
 801e5ca:	f003 031f 	and.w	r3, r3, #31
 801e5ce:	8b62      	ldrh	r2, [r4, #26]
 801e5d0:	9305      	str	r3, [sp, #20]
 801e5d2:	9b03      	ldr	r3, [sp, #12]
 801e5d4:	eba3 0306 	sub.w	r3, r3, r6
 801e5d8:	d107      	bne.n	801e5ea <_ZN8touchgfx7Outline10renderLineEiiii+0x10e>
 801e5da:	4418      	add	r0, r3
 801e5dc:	8320      	strh	r0, [r4, #24]
 801e5de:	9805      	ldr	r0, [sp, #20]
 801e5e0:	4401      	add	r1, r0
 801e5e2:	fb03 2301 	mla	r3, r3, r1, r2
 801e5e6:	8363      	strh	r3, [r4, #26]
 801e5e8:	e0ad      	b.n	801e746 <_ZN8touchgfx7Outline10renderLineEiiii+0x26a>
 801e5ea:	f1ba 0f00 	cmp.w	sl, #0
 801e5ee:	db33      	blt.n	801e658 <_ZN8touchgfx7Outline10renderLineEiiii+0x17c>
 801e5f0:	2701      	movs	r7, #1
 801e5f2:	f1c1 0c20 	rsb	ip, r1, #32
 801e5f6:	9702      	str	r7, [sp, #8]
 801e5f8:	2720      	movs	r7, #32
 801e5fa:	fb03 f30c 	mul.w	r3, r3, ip
 801e5fe:	9701      	str	r7, [sp, #4]
 801e600:	9f01      	ldr	r7, [sp, #4]
 801e602:	f9b4 8016 	ldrsh.w	r8, [r4, #22]
 801e606:	4439      	add	r1, r7
 801e608:	fb93 fcfa 	sdiv	ip, r3, sl
 801e60c:	fb0a 331c 	mls	r3, sl, ip, r3
 801e610:	2b00      	cmp	r3, #0
 801e612:	bfbc      	itt	lt
 801e614:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 801e618:	4453      	addlt	r3, sl
 801e61a:	fb0c 2101 	mla	r1, ip, r1, r2
 801e61e:	9a02      	ldr	r2, [sp, #8]
 801e620:	4460      	add	r0, ip
 801e622:	4415      	add	r5, r2
 801e624:	f9bd 2000 	ldrsh.w	r2, [sp]
 801e628:	b200      	sxth	r0, r0
 801e62a:	0417      	lsls	r7, r2, #16
 801e62c:	9200      	str	r2, [sp, #0]
 801e62e:	fa0f fe85 	sxth.w	lr, r5
 801e632:	8320      	strh	r0, [r4, #24]
 801e634:	9704      	str	r7, [sp, #16]
 801e636:	b209      	sxth	r1, r1
 801e638:	f9b4 7014 	ldrsh.w	r7, [r4, #20]
 801e63c:	9a04      	ldr	r2, [sp, #16]
 801e63e:	eb07 4708 	add.w	r7, r7, r8, lsl #16
 801e642:	8361      	strh	r1, [r4, #26]
 801e644:	eb0e 0902 	add.w	r9, lr, r2
 801e648:	454f      	cmp	r7, r9
 801e64a:	d10d      	bne.n	801e668 <_ZN8touchgfx7Outline10renderLineEiiii+0x18c>
 801e64c:	4ba0      	ldr	r3, [pc, #640]	; (801e8d0 <_ZN8touchgfx7Outline10renderLineEiiii+0x3f4>)
 801e64e:	2176      	movs	r1, #118	; 0x76
 801e650:	4aa0      	ldr	r2, [pc, #640]	; (801e8d4 <_ZN8touchgfx7Outline10renderLineEiiii+0x3f8>)
 801e652:	48a1      	ldr	r0, [pc, #644]	; (801e8d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x3fc>)
 801e654:	f001 fac0 	bl	801fbd8 <__assert_func>
 801e658:	f04f 37ff 	mov.w	r7, #4294967295
 801e65c:	434b      	muls	r3, r1
 801e65e:	f1ca 0a00 	rsb	sl, sl, #0
 801e662:	9702      	str	r7, [sp, #8]
 801e664:	2700      	movs	r7, #0
 801e666:	e7ca      	b.n	801e5fe <_ZN8touchgfx7Outline10renderLineEiiii+0x122>
 801e668:	ea50 0201 	orrs.w	r2, r0, r1
 801e66c:	d00c      	beq.n	801e688 <_ZN8touchgfx7Outline10renderLineEiiii+0x1ac>
 801e66e:	f1b8 0f00 	cmp.w	r8, #0
 801e672:	db09      	blt.n	801e688 <_ZN8touchgfx7Outline10renderLineEiiii+0x1ac>
 801e674:	6c21      	ldr	r1, [r4, #64]	; 0x40
 801e676:	4588      	cmp	r8, r1
 801e678:	da06      	bge.n	801e688 <_ZN8touchgfx7Outline10renderLineEiiii+0x1ac>
 801e67a:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 801e67e:	4288      	cmp	r0, r1
 801e680:	d364      	bcc.n	801e74c <_ZN8touchgfx7Outline10renderLineEiiii+0x270>
 801e682:	2101      	movs	r1, #1
 801e684:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
 801e688:	2100      	movs	r1, #0
 801e68a:	9a00      	ldr	r2, [sp, #0]
 801e68c:	45ab      	cmp	fp, r5
 801e68e:	f8a4 e014 	strh.w	lr, [r4, #20]
 801e692:	82e2      	strh	r2, [r4, #22]
 801e694:	4466      	add	r6, ip
 801e696:	8321      	strh	r1, [r4, #24]
 801e698:	8361      	strh	r1, [r4, #26]
 801e69a:	d04b      	beq.n	801e734 <_ZN8touchgfx7Outline10renderLineEiiii+0x258>
 801e69c:	9a03      	ldr	r2, [sp, #12]
 801e69e:	eba3 030a 	sub.w	r3, r3, sl
 801e6a2:	f04f 0800 	mov.w	r8, #0
 801e6a6:	1b91      	subs	r1, r2, r6
 801e6a8:	448c      	add	ip, r1
 801e6aa:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
 801e6ae:	fb9c f7fa 	sdiv	r7, ip, sl
 801e6b2:	fb0a cc17 	mls	ip, sl, r7, ip
 801e6b6:	f1bc 0f00 	cmp.w	ip, #0
 801e6ba:	bfbc      	itt	lt
 801e6bc:	f107 37ff 	addlt.w	r7, r7, #4294967295
 801e6c0:	44d4      	addlt	ip, sl
 801e6c2:	1c7a      	adds	r2, r7, #1
 801e6c4:	9207      	str	r2, [sp, #28]
 801e6c6:	eb13 030c 	adds.w	r3, r3, ip
 801e6ca:	9a02      	ldr	r2, [sp, #8]
 801e6cc:	bf54      	ite	pl
 801e6ce:	9807      	ldrpl	r0, [sp, #28]
 801e6d0:	4638      	movmi	r0, r7
 801e6d2:	4415      	add	r5, r2
 801e6d4:	9a04      	ldr	r2, [sp, #16]
 801e6d6:	fa0f fe80 	sxth.w	lr, r0
 801e6da:	4406      	add	r6, r0
 801e6dc:	ea4f 1140 	mov.w	r1, r0, lsl #5
 801e6e0:	f9b4 0014 	ldrsh.w	r0, [r4, #20]
 801e6e4:	fa0f f985 	sxth.w	r9, r5
 801e6e8:	bf58      	it	pl
 801e6ea:	eba3 030a 	subpl.w	r3, r3, sl
 801e6ee:	4410      	add	r0, r2
 801e6f0:	b209      	sxth	r1, r1
 801e6f2:	444a      	add	r2, r9
 801e6f4:	f8a4 e018 	strh.w	lr, [r4, #24]
 801e6f8:	8361      	strh	r1, [r4, #26]
 801e6fa:	4290      	cmp	r0, r2
 801e6fc:	d0a6      	beq.n	801e64c <_ZN8touchgfx7Outline10renderLineEiiii+0x170>
 801e6fe:	ea5e 0201 	orrs.w	r2, lr, r1
 801e702:	d00d      	beq.n	801e720 <_ZN8touchgfx7Outline10renderLineEiiii+0x244>
 801e704:	9a00      	ldr	r2, [sp, #0]
 801e706:	2a00      	cmp	r2, #0
 801e708:	db0a      	blt.n	801e720 <_ZN8touchgfx7Outline10renderLineEiiii+0x244>
 801e70a:	6c21      	ldr	r1, [r4, #64]	; 0x40
 801e70c:	428a      	cmp	r2, r1
 801e70e:	da07      	bge.n	801e720 <_ZN8touchgfx7Outline10renderLineEiiii+0x244>
 801e710:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 801e714:	4288      	cmp	r0, r1
 801e716:	d329      	bcc.n	801e76c <_ZN8touchgfx7Outline10renderLineEiiii+0x290>
 801e718:	f04f 0201 	mov.w	r2, #1
 801e71c:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 801e720:	9a00      	ldr	r2, [sp, #0]
 801e722:	45ab      	cmp	fp, r5
 801e724:	f8a4 9014 	strh.w	r9, [r4, #20]
 801e728:	82e2      	strh	r2, [r4, #22]
 801e72a:	f8a4 8018 	strh.w	r8, [r4, #24]
 801e72e:	f8a4 801a 	strh.w	r8, [r4, #26]
 801e732:	d1c8      	bne.n	801e6c6 <_ZN8touchgfx7Outline10renderLineEiiii+0x1ea>
 801e734:	9b03      	ldr	r3, [sp, #12]
 801e736:	9a01      	ldr	r2, [sp, #4]
 801e738:	1b9e      	subs	r6, r3, r6
 801e73a:	9b05      	ldr	r3, [sp, #20]
 801e73c:	3320      	adds	r3, #32
 801e73e:	8326      	strh	r6, [r4, #24]
 801e740:	1a9b      	subs	r3, r3, r2
 801e742:	435e      	muls	r6, r3
 801e744:	8366      	strh	r6, [r4, #26]
 801e746:	b015      	add	sp, #84	; 0x54
 801e748:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e74c:	f104 0714 	add.w	r7, r4, #20
 801e750:	f8d4 8010 	ldr.w	r8, [r4, #16]
 801e754:	cf03      	ldmia	r7!, {r0, r1}
 801e756:	f8c8 0000 	str.w	r0, [r8]
 801e75a:	f8c8 1004 	str.w	r1, [r8, #4]
 801e75e:	6921      	ldr	r1, [r4, #16]
 801e760:	3108      	adds	r1, #8
 801e762:	6121      	str	r1, [r4, #16]
 801e764:	68a1      	ldr	r1, [r4, #8]
 801e766:	3101      	adds	r1, #1
 801e768:	60a1      	str	r1, [r4, #8]
 801e76a:	e78d      	b.n	801e688 <_ZN8touchgfx7Outline10renderLineEiiii+0x1ac>
 801e76c:	f104 0e14 	add.w	lr, r4, #20
 801e770:	6922      	ldr	r2, [r4, #16]
 801e772:	e8be 0003 	ldmia.w	lr!, {r0, r1}
 801e776:	9206      	str	r2, [sp, #24]
 801e778:	6010      	str	r0, [r2, #0]
 801e77a:	6051      	str	r1, [r2, #4]
 801e77c:	6921      	ldr	r1, [r4, #16]
 801e77e:	3108      	adds	r1, #8
 801e780:	6121      	str	r1, [r4, #16]
 801e782:	68a1      	ldr	r1, [r4, #8]
 801e784:	3101      	adds	r1, #1
 801e786:	60a1      	str	r1, [r4, #8]
 801e788:	e7ca      	b.n	801e720 <_ZN8touchgfx7Outline10renderLineEiiii+0x244>
 801e78a:	eba0 0b02 	sub.w	fp, r0, r2
 801e78e:	f1ba 0f00 	cmp.w	sl, #0
 801e792:	f040 80a3 	bne.w	801e8dc <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
 801e796:	f1bb 0f00 	cmp.w	fp, #0
 801e79a:	ea4f 0141 	mov.w	r1, r1, lsl #1
 801e79e:	8b62      	ldrh	r2, [r4, #26]
 801e7a0:	b22d      	sxth	r5, r5
 801e7a2:	bfa8      	it	ge
 801e7a4:	f04f 0a20 	movge.w	sl, #32
 801e7a8:	f001 033e 	and.w	r3, r1, #62	; 0x3e
 801e7ac:	8b21      	ldrh	r1, [r4, #24]
 801e7ae:	bfb8      	it	lt
 801e7b0:	f04f 39ff 	movlt.w	r9, #4294967295
 801e7b4:	ebaa 0606 	sub.w	r6, sl, r6
 801e7b8:	bfa8      	it	ge
 801e7ba:	f04f 0901 	movge.w	r9, #1
 801e7be:	f9b4 0016 	ldrsh.w	r0, [r4, #22]
 801e7c2:	4431      	add	r1, r6
 801e7c4:	fb06 2603 	mla	r6, r6, r3, r2
 801e7c8:	9a00      	ldr	r2, [sp, #0]
 801e7ca:	f9b4 c014 	ldrsh.w	ip, [r4, #20]
 801e7ce:	b209      	sxth	r1, r1
 801e7d0:	444a      	add	r2, r9
 801e7d2:	b236      	sxth	r6, r6
 801e7d4:	eb0c 4c00 	add.w	ip, ip, r0, lsl #16
 801e7d8:	8321      	strh	r1, [r4, #24]
 801e7da:	b217      	sxth	r7, r2
 801e7dc:	8366      	strh	r6, [r4, #26]
 801e7de:	eb05 4e07 	add.w	lr, r5, r7, lsl #16
 801e7e2:	45f4      	cmp	ip, lr
 801e7e4:	f43f af32 	beq.w	801e64c <_ZN8touchgfx7Outline10renderLineEiiii+0x170>
 801e7e8:	4331      	orrs	r1, r6
 801e7ea:	d00b      	beq.n	801e804 <_ZN8touchgfx7Outline10renderLineEiiii+0x328>
 801e7ec:	2800      	cmp	r0, #0
 801e7ee:	db09      	blt.n	801e804 <_ZN8touchgfx7Outline10renderLineEiiii+0x328>
 801e7f0:	6c21      	ldr	r1, [r4, #64]	; 0x40
 801e7f2:	4288      	cmp	r0, r1
 801e7f4:	da06      	bge.n	801e804 <_ZN8touchgfx7Outline10renderLineEiiii+0x328>
 801e7f6:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 801e7fa:	4288      	cmp	r0, r1
 801e7fc:	d33b      	bcc.n	801e876 <_ZN8touchgfx7Outline10renderLineEiiii+0x39a>
 801e7fe:	2101      	movs	r1, #1
 801e800:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
 801e804:	f1aa 0610 	sub.w	r6, sl, #16
 801e808:	82e7      	strh	r7, [r4, #22]
 801e80a:	2700      	movs	r7, #0
 801e80c:	82a5      	strh	r5, [r4, #20]
 801e80e:	0076      	lsls	r6, r6, #1
 801e810:	8327      	strh	r7, [r4, #24]
 801e812:	fb06 fc03 	mul.w	ip, r6, r3
 801e816:	b236      	sxth	r6, r6
 801e818:	8367      	strh	r7, [r4, #26]
 801e81a:	fa0f fc8c 	sxth.w	ip, ip
 801e81e:	ea46 010c 	orr.w	r1, r6, ip
 801e822:	9100      	str	r1, [sp, #0]
 801e824:	990c      	ldr	r1, [sp, #48]	; 0x30
 801e826:	428a      	cmp	r2, r1
 801e828:	d046      	beq.n	801e8b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x3dc>
 801e82a:	444a      	add	r2, r9
 801e82c:	f9b4 1016 	ldrsh.w	r1, [r4, #22]
 801e830:	f9b4 0014 	ldrsh.w	r0, [r4, #20]
 801e834:	fa0f f882 	sxth.w	r8, r2
 801e838:	8326      	strh	r6, [r4, #24]
 801e83a:	eb00 4001 	add.w	r0, r0, r1, lsl #16
 801e83e:	f8a4 c01a 	strh.w	ip, [r4, #26]
 801e842:	eb05 4e08 	add.w	lr, r5, r8, lsl #16
 801e846:	4570      	cmp	r0, lr
 801e848:	f43f af00 	beq.w	801e64c <_ZN8touchgfx7Outline10renderLineEiiii+0x170>
 801e84c:	9800      	ldr	r0, [sp, #0]
 801e84e:	b160      	cbz	r0, 801e86a <_ZN8touchgfx7Outline10renderLineEiiii+0x38e>
 801e850:	2900      	cmp	r1, #0
 801e852:	db0a      	blt.n	801e86a <_ZN8touchgfx7Outline10renderLineEiiii+0x38e>
 801e854:	6c20      	ldr	r0, [r4, #64]	; 0x40
 801e856:	4281      	cmp	r1, r0
 801e858:	da07      	bge.n	801e86a <_ZN8touchgfx7Outline10renderLineEiiii+0x38e>
 801e85a:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 801e85e:	4288      	cmp	r0, r1
 801e860:	d319      	bcc.n	801e896 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ba>
 801e862:	f04f 0101 	mov.w	r1, #1
 801e866:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
 801e86a:	82a5      	strh	r5, [r4, #20]
 801e86c:	f8a4 8016 	strh.w	r8, [r4, #22]
 801e870:	8327      	strh	r7, [r4, #24]
 801e872:	8367      	strh	r7, [r4, #26]
 801e874:	e7d6      	b.n	801e824 <_ZN8touchgfx7Outline10renderLineEiiii+0x348>
 801e876:	f104 0614 	add.w	r6, r4, #20
 801e87a:	f8d4 c010 	ldr.w	ip, [r4, #16]
 801e87e:	ce03      	ldmia	r6!, {r0, r1}
 801e880:	f8cc 0000 	str.w	r0, [ip]
 801e884:	f8cc 1004 	str.w	r1, [ip, #4]
 801e888:	6921      	ldr	r1, [r4, #16]
 801e88a:	3108      	adds	r1, #8
 801e88c:	6121      	str	r1, [r4, #16]
 801e88e:	68a1      	ldr	r1, [r4, #8]
 801e890:	3101      	adds	r1, #1
 801e892:	60a1      	str	r1, [r4, #8]
 801e894:	e7b6      	b.n	801e804 <_ZN8touchgfx7Outline10renderLineEiiii+0x328>
 801e896:	f104 0e14 	add.w	lr, r4, #20
 801e89a:	f8d4 b010 	ldr.w	fp, [r4, #16]
 801e89e:	e8be 0003 	ldmia.w	lr!, {r0, r1}
 801e8a2:	f8cb 0000 	str.w	r0, [fp]
 801e8a6:	f8cb 1004 	str.w	r1, [fp, #4]
 801e8aa:	6921      	ldr	r1, [r4, #16]
 801e8ac:	3108      	adds	r1, #8
 801e8ae:	6121      	str	r1, [r4, #16]
 801e8b0:	68a1      	ldr	r1, [r4, #8]
 801e8b2:	3101      	adds	r1, #1
 801e8b4:	60a1      	str	r1, [r4, #8]
 801e8b6:	e7d8      	b.n	801e86a <_ZN8touchgfx7Outline10renderLineEiiii+0x38e>
 801e8b8:	9a03      	ldr	r2, [sp, #12]
 801e8ba:	8b61      	ldrh	r1, [r4, #26]
 801e8bc:	f1a2 0e20 	sub.w	lr, r2, #32
 801e8c0:	8b22      	ldrh	r2, [r4, #24]
 801e8c2:	44d6      	add	lr, sl
 801e8c4:	4472      	add	r2, lr
 801e8c6:	fb0e 1303 	mla	r3, lr, r3, r1
 801e8ca:	8322      	strh	r2, [r4, #24]
 801e8cc:	e68b      	b.n	801e5e6 <_ZN8touchgfx7Outline10renderLineEiiii+0x10a>
 801e8ce:	bf00      	nop
 801e8d0:	080257c0 	.word	0x080257c0
 801e8d4:	08025840 	.word	0x08025840
 801e8d8:	080257f1 	.word	0x080257f1
 801e8dc:	f1bb 0f00 	cmp.w	fp, #0
 801e8e0:	f2c0 8124 	blt.w	801eb2c <_ZN8touchgfx7Outline10renderLineEiiii+0x650>
 801e8e4:	2201      	movs	r2, #1
 801e8e6:	f1c6 0320 	rsb	r3, r6, #32
 801e8ea:	920b      	str	r2, [sp, #44]	; 0x2c
 801e8ec:	2220      	movs	r2, #32
 801e8ee:	fb0a f303 	mul.w	r3, sl, r3
 801e8f2:	f9b4 8016 	ldrsh.w	r8, [r4, #22]
 801e8f6:	9202      	str	r2, [sp, #8]
 801e8f8:	fb93 fcfb 	sdiv	ip, r3, fp
 801e8fc:	fb0b 331c 	mls	r3, fp, ip, r3
 801e900:	2b00      	cmp	r3, #0
 801e902:	9308      	str	r3, [sp, #32]
 801e904:	bfbe      	ittt	lt
 801e906:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 801e90a:	445b      	addlt	r3, fp
 801e90c:	9308      	strlt	r3, [sp, #32]
 801e90e:	eb0c 0301 	add.w	r3, ip, r1
 801e912:	9301      	str	r3, [sp, #4]
 801e914:	115b      	asrs	r3, r3, #5
 801e916:	9305      	str	r3, [sp, #20]
 801e918:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 801e91c:	eb03 4308 	add.w	r3, r3, r8, lsl #16
 801e920:	461f      	mov	r7, r3
 801e922:	9b02      	ldr	r3, [sp, #8]
 801e924:	42b3      	cmp	r3, r6
 801e926:	f040 8117 	bne.w	801eb58 <_ZN8touchgfx7Outline10renderLineEiiii+0x67c>
 801e92a:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 801e92e:	f9bd 3000 	ldrsh.w	r3, [sp]
 801e932:	eb02 4103 	add.w	r1, r2, r3, lsl #16
 801e936:	42b9      	cmp	r1, r7
 801e938:	d016      	beq.n	801e968 <_ZN8touchgfx7Outline10renderLineEiiii+0x48c>
 801e93a:	8b60      	ldrh	r0, [r4, #26]
 801e93c:	8b21      	ldrh	r1, [r4, #24]
 801e93e:	4301      	orrs	r1, r0
 801e940:	d00d      	beq.n	801e95e <_ZN8touchgfx7Outline10renderLineEiiii+0x482>
 801e942:	f1b8 0f00 	cmp.w	r8, #0
 801e946:	db0a      	blt.n	801e95e <_ZN8touchgfx7Outline10renderLineEiiii+0x482>
 801e948:	6c21      	ldr	r1, [r4, #64]	; 0x40
 801e94a:	4541      	cmp	r1, r8
 801e94c:	dd07      	ble.n	801e95e <_ZN8touchgfx7Outline10renderLineEiiii+0x482>
 801e94e:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 801e952:	4288      	cmp	r0, r1
 801e954:	f0c0 80f3 	bcc.w	801eb3e <_ZN8touchgfx7Outline10renderLineEiiii+0x662>
 801e958:	2101      	movs	r1, #1
 801e95a:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
 801e95e:	82e3      	strh	r3, [r4, #22]
 801e960:	2300      	movs	r3, #0
 801e962:	82a2      	strh	r2, [r4, #20]
 801e964:	8323      	strh	r3, [r4, #24]
 801e966:	8363      	strh	r3, [r4, #26]
 801e968:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e96a:	9a00      	ldr	r2, [sp, #0]
 801e96c:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
 801e970:	441a      	add	r2, r3
 801e972:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 801e976:	4691      	mov	r9, r2
 801e978:	f9b4 2016 	ldrsh.w	r2, [r4, #22]
 801e97c:	fa0f f589 	sxth.w	r5, r9
 801e980:	eb01 4102 	add.w	r1, r1, r2, lsl #16
 801e984:	eb03 4005 	add.w	r0, r3, r5, lsl #16
 801e988:	4281      	cmp	r1, r0
 801e98a:	d015      	beq.n	801e9b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x4dc>
 801e98c:	8b60      	ldrh	r0, [r4, #26]
 801e98e:	8b21      	ldrh	r1, [r4, #24]
 801e990:	4301      	orrs	r1, r0
 801e992:	d00c      	beq.n	801e9ae <_ZN8touchgfx7Outline10renderLineEiiii+0x4d2>
 801e994:	2a00      	cmp	r2, #0
 801e996:	db0a      	blt.n	801e9ae <_ZN8touchgfx7Outline10renderLineEiiii+0x4d2>
 801e998:	6c21      	ldr	r1, [r4, #64]	; 0x40
 801e99a:	428a      	cmp	r2, r1
 801e99c:	da07      	bge.n	801e9ae <_ZN8touchgfx7Outline10renderLineEiiii+0x4d2>
 801e99e:	e9d4 2101 	ldrd	r2, r1, [r4, #4]
 801e9a2:	4291      	cmp	r1, r2
 801e9a4:	f0c0 81ae 	bcc.w	801ed04 <_ZN8touchgfx7Outline10renderLineEiiii+0x828>
 801e9a8:	2201      	movs	r2, #1
 801e9aa:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 801e9ae:	82a3      	strh	r3, [r4, #20]
 801e9b0:	2300      	movs	r3, #0
 801e9b2:	82e5      	strh	r5, [r4, #22]
 801e9b4:	8323      	strh	r3, [r4, #24]
 801e9b6:	8363      	strh	r3, [r4, #26]
 801e9b8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e9ba:	454b      	cmp	r3, r9
 801e9bc:	f000 808a 	beq.w	801ead4 <_ZN8touchgfx7Outline10renderLineEiiii+0x5f8>
 801e9c0:	ea4f 134a 	mov.w	r3, sl, lsl #5
 801e9c4:	fb93 f2fb 	sdiv	r2, r3, fp
 801e9c8:	fb0b 3312 	mls	r3, fp, r2, r3
 801e9cc:	9205      	str	r2, [sp, #20]
 801e9ce:	2b00      	cmp	r3, #0
 801e9d0:	9307      	str	r3, [sp, #28]
 801e9d2:	da04      	bge.n	801e9de <_ZN8touchgfx7Outline10renderLineEiiii+0x502>
 801e9d4:	1e53      	subs	r3, r2, #1
 801e9d6:	9305      	str	r3, [sp, #20]
 801e9d8:	9b07      	ldr	r3, [sp, #28]
 801e9da:	445b      	add	r3, fp
 801e9dc:	9307      	str	r3, [sp, #28]
 801e9de:	9b08      	ldr	r3, [sp, #32]
 801e9e0:	f04f 0a00 	mov.w	sl, #0
 801e9e4:	eba3 030b 	sub.w	r3, r3, fp
 801e9e8:	9308      	str	r3, [sp, #32]
 801e9ea:	e9dd c301 	ldrd	ip, r3, [sp, #4]
 801e9ee:	f1c3 0320 	rsb	r3, r3, #32
 801e9f2:	930a      	str	r3, [sp, #40]	; 0x28
 801e9f4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801e9f6:	9b02      	ldr	r3, [sp, #8]
 801e9f8:	1a9b      	subs	r3, r3, r2
 801e9fa:	9309      	str	r3, [sp, #36]	; 0x24
 801e9fc:	9902      	ldr	r1, [sp, #8]
 801e9fe:	f9b4 6016 	ldrsh.w	r6, [r4, #22]
 801ea02:	f9b4 8014 	ldrsh.w	r8, [r4, #20]
 801ea06:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 801ea0a:	eb08 4806 	add.w	r8, r8, r6, lsl #16
 801ea0e:	189b      	adds	r3, r3, r2
 801ea10:	9308      	str	r3, [sp, #32]
 801ea12:	bf57      	itett	pl
 801ea14:	eba3 030b 	subpl.w	r3, r3, fp
 801ea18:	9b05      	ldrmi	r3, [sp, #20]
 801ea1a:	9308      	strpl	r3, [sp, #32]
 801ea1c:	9b05      	ldrpl	r3, [sp, #20]
 801ea1e:	bf58      	it	pl
 801ea20:	3301      	addpl	r3, #1
 801ea22:	9300      	str	r3, [sp, #0]
 801ea24:	e9dd 2300 	ldrd	r2, r3, [sp]
 801ea28:	4413      	add	r3, r2
 801ea2a:	9301      	str	r3, [sp, #4]
 801ea2c:	115b      	asrs	r3, r3, #5
 801ea2e:	9306      	str	r3, [sp, #24]
 801ea30:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ea32:	428b      	cmp	r3, r1
 801ea34:	f040 8180 	bne.w	801ed38 <_ZN8touchgfx7Outline10renderLineEiiii+0x85c>
 801ea38:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 801ea3c:	fa0f f389 	sxth.w	r3, r9
 801ea40:	eb02 4103 	add.w	r1, r2, r3, lsl #16
 801ea44:	4541      	cmp	r1, r8
 801ea46:	d017      	beq.n	801ea78 <_ZN8touchgfx7Outline10renderLineEiiii+0x59c>
 801ea48:	8b60      	ldrh	r0, [r4, #26]
 801ea4a:	8b21      	ldrh	r1, [r4, #24]
 801ea4c:	4301      	orrs	r1, r0
 801ea4e:	d00d      	beq.n	801ea6c <_ZN8touchgfx7Outline10renderLineEiiii+0x590>
 801ea50:	2e00      	cmp	r6, #0
 801ea52:	db0b      	blt.n	801ea6c <_ZN8touchgfx7Outline10renderLineEiiii+0x590>
 801ea54:	6c21      	ldr	r1, [r4, #64]	; 0x40
 801ea56:	42b1      	cmp	r1, r6
 801ea58:	dd08      	ble.n	801ea6c <_ZN8touchgfx7Outline10renderLineEiiii+0x590>
 801ea5a:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 801ea5e:	4288      	cmp	r0, r1
 801ea60:	f0c0 815d 	bcc.w	801ed1e <_ZN8touchgfx7Outline10renderLineEiiii+0x842>
 801ea64:	f04f 0101 	mov.w	r1, #1
 801ea68:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
 801ea6c:	82a2      	strh	r2, [r4, #20]
 801ea6e:	82e3      	strh	r3, [r4, #22]
 801ea70:	f8a4 a018 	strh.w	sl, [r4, #24]
 801ea74:	f8a4 a01a 	strh.w	sl, [r4, #26]
 801ea78:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ea7a:	f9b4 2016 	ldrsh.w	r2, [r4, #22]
 801ea7e:	4499      	add	r9, r3
 801ea80:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
 801ea84:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801ea88:	fa0f f589 	sxth.w	r5, r9
 801ea8c:	eb01 4102 	add.w	r1, r1, r2, lsl #16
 801ea90:	eb03 4005 	add.w	r0, r3, r5, lsl #16
 801ea94:	4281      	cmp	r1, r0
 801ea96:	f43f add9 	beq.w	801e64c <_ZN8touchgfx7Outline10renderLineEiiii+0x170>
 801ea9a:	8b60      	ldrh	r0, [r4, #26]
 801ea9c:	8b21      	ldrh	r1, [r4, #24]
 801ea9e:	4301      	orrs	r1, r0
 801eaa0:	d00d      	beq.n	801eabe <_ZN8touchgfx7Outline10renderLineEiiii+0x5e2>
 801eaa2:	2a00      	cmp	r2, #0
 801eaa4:	db0b      	blt.n	801eabe <_ZN8touchgfx7Outline10renderLineEiiii+0x5e2>
 801eaa6:	6c21      	ldr	r1, [r4, #64]	; 0x40
 801eaa8:	428a      	cmp	r2, r1
 801eaaa:	da08      	bge.n	801eabe <_ZN8touchgfx7Outline10renderLineEiiii+0x5e2>
 801eaac:	e9d4 2101 	ldrd	r2, r1, [r4, #4]
 801eab0:	4291      	cmp	r1, r2
 801eab2:	f0c0 8228 	bcc.w	801ef06 <_ZN8touchgfx7Outline10renderLineEiiii+0xa2a>
 801eab6:	f04f 0201 	mov.w	r2, #1
 801eaba:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 801eabe:	82a3      	strh	r3, [r4, #20]
 801eac0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801eac2:	82e5      	strh	r5, [r4, #22]
 801eac4:	454b      	cmp	r3, r9
 801eac6:	f8a4 a018 	strh.w	sl, [r4, #24]
 801eaca:	f8a4 a01a 	strh.w	sl, [r4, #26]
 801eace:	f8dd c004 	ldr.w	ip, [sp, #4]
 801ead2:	d193      	bne.n	801e9fc <_ZN8touchgfx7Outline10renderLineEiiii+0x520>
 801ead4:	9b02      	ldr	r3, [sp, #8]
 801ead6:	f1c3 0e20 	rsb	lr, r3, #32
 801eada:	9b04      	ldr	r3, [sp, #16]
 801eadc:	ea4f 1b63 	mov.w	fp, r3, asr #5
 801eae0:	9b03      	ldr	r3, [sp, #12]
 801eae2:	459e      	cmp	lr, r3
 801eae4:	f040 8229 	bne.w	801ef3a <_ZN8touchgfx7Outline10renderLineEiiii+0xa5e>
 801eae8:	f9b4 3016 	ldrsh.w	r3, [r4, #22]
 801eaec:	fa0f f58b 	sxth.w	r5, fp
 801eaf0:	fa0f f289 	sxth.w	r2, r9
 801eaf4:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
 801eaf8:	eb05 4002 	add.w	r0, r5, r2, lsl #16
 801eafc:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 801eb00:	4281      	cmp	r1, r0
 801eb02:	f43f ae20 	beq.w	801e746 <_ZN8touchgfx7Outline10renderLineEiiii+0x26a>
 801eb06:	8b60      	ldrh	r0, [r4, #26]
 801eb08:	8b21      	ldrh	r1, [r4, #24]
 801eb0a:	4301      	orrs	r1, r0
 801eb0c:	d00c      	beq.n	801eb28 <_ZN8touchgfx7Outline10renderLineEiiii+0x64c>
 801eb0e:	2b00      	cmp	r3, #0
 801eb10:	db0a      	blt.n	801eb28 <_ZN8touchgfx7Outline10renderLineEiiii+0x64c>
 801eb12:	6c21      	ldr	r1, [r4, #64]	; 0x40
 801eb14:	428b      	cmp	r3, r1
 801eb16:	da07      	bge.n	801eb28 <_ZN8touchgfx7Outline10renderLineEiiii+0x64c>
 801eb18:	e9d4 3101 	ldrd	r3, r1, [r4, #4]
 801eb1c:	4299      	cmp	r1, r3
 801eb1e:	f0c0 81ff 	bcc.w	801ef20 <_ZN8touchgfx7Outline10renderLineEiiii+0xa44>
 801eb22:	2301      	movs	r3, #1
 801eb24:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 801eb28:	82a5      	strh	r5, [r4, #20]
 801eb2a:	e538      	b.n	801e59e <_ZN8touchgfx7Outline10renderLineEiiii+0xc2>
 801eb2c:	f04f 32ff 	mov.w	r2, #4294967295
 801eb30:	fb0a f306 	mul.w	r3, sl, r6
 801eb34:	f1cb 0b00 	rsb	fp, fp, #0
 801eb38:	920b      	str	r2, [sp, #44]	; 0x2c
 801eb3a:	2200      	movs	r2, #0
 801eb3c:	e6d9      	b.n	801e8f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x416>
 801eb3e:	f104 0514 	add.w	r5, r4, #20
 801eb42:	6926      	ldr	r6, [r4, #16]
 801eb44:	cd03      	ldmia	r5!, {r0, r1}
 801eb46:	6030      	str	r0, [r6, #0]
 801eb48:	6071      	str	r1, [r6, #4]
 801eb4a:	6921      	ldr	r1, [r4, #16]
 801eb4c:	3108      	adds	r1, #8
 801eb4e:	6121      	str	r1, [r4, #16]
 801eb50:	68a1      	ldr	r1, [r4, #8]
 801eb52:	3101      	adds	r1, #1
 801eb54:	60a1      	str	r1, [r4, #8]
 801eb56:	e702      	b.n	801e95e <_ZN8touchgfx7Outline10renderLineEiiii+0x482>
 801eb58:	9b01      	ldr	r3, [sp, #4]
 801eb5a:	f001 011f 	and.w	r1, r1, #31
 801eb5e:	8b20      	ldrh	r0, [r4, #24]
 801eb60:	f003 031f 	and.w	r3, r3, #31
 801eb64:	f8b4 901a 	ldrh.w	r9, [r4, #26]
 801eb68:	930d      	str	r3, [sp, #52]	; 0x34
 801eb6a:	9b02      	ldr	r3, [sp, #8]
 801eb6c:	1b9a      	subs	r2, r3, r6
 801eb6e:	9b05      	ldr	r3, [sp, #20]
 801eb70:	42ab      	cmp	r3, r5
 801eb72:	d107      	bne.n	801eb84 <_ZN8touchgfx7Outline10renderLineEiiii+0x6a8>
 801eb74:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801eb76:	4410      	add	r0, r2
 801eb78:	4419      	add	r1, r3
 801eb7a:	8320      	strh	r0, [r4, #24]
 801eb7c:	fb02 9201 	mla	r2, r2, r1, r9
 801eb80:	8362      	strh	r2, [r4, #26]
 801eb82:	e6f1      	b.n	801e968 <_ZN8touchgfx7Outline10renderLineEiiii+0x48c>
 801eb84:	f1bc 0f00 	cmp.w	ip, #0
 801eb88:	f2c0 8093 	blt.w	801ecb2 <_ZN8touchgfx7Outline10renderLineEiiii+0x7d6>
 801eb8c:	f1c1 0320 	rsb	r3, r1, #32
 801eb90:	435a      	muls	r2, r3
 801eb92:	2301      	movs	r3, #1
 801eb94:	9309      	str	r3, [sp, #36]	; 0x24
 801eb96:	2320      	movs	r3, #32
 801eb98:	9307      	str	r3, [sp, #28]
 801eb9a:	9b07      	ldr	r3, [sp, #28]
 801eb9c:	fb92 fefc 	sdiv	lr, r2, ip
 801eba0:	fb0c 221e 	mls	r2, ip, lr, r2
 801eba4:	4419      	add	r1, r3
 801eba6:	2a00      	cmp	r2, #0
 801eba8:	bfbc      	itt	lt
 801ebaa:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 801ebae:	4462      	addlt	r2, ip
 801ebb0:	fb0e 9101 	mla	r1, lr, r1, r9
 801ebb4:	4470      	add	r0, lr
 801ebb6:	b20b      	sxth	r3, r1
 801ebb8:	9909      	ldr	r1, [sp, #36]	; 0x24
 801ebba:	b200      	sxth	r0, r0
 801ebbc:	440d      	add	r5, r1
 801ebbe:	f9bd 1000 	ldrsh.w	r1, [sp]
 801ebc2:	8320      	strh	r0, [r4, #24]
 801ebc4:	fa0f f985 	sxth.w	r9, r5
 801ebc8:	9106      	str	r1, [sp, #24]
 801ebca:	0409      	lsls	r1, r1, #16
 801ebcc:	8363      	strh	r3, [r4, #26]
 801ebce:	910a      	str	r1, [sp, #40]	; 0x28
 801ebd0:	4449      	add	r1, r9
 801ebd2:	42b9      	cmp	r1, r7
 801ebd4:	f43f ad3a 	beq.w	801e64c <_ZN8touchgfx7Outline10renderLineEiiii+0x170>
 801ebd8:	4303      	orrs	r3, r0
 801ebda:	d00c      	beq.n	801ebf6 <_ZN8touchgfx7Outline10renderLineEiiii+0x71a>
 801ebdc:	f1b8 0f00 	cmp.w	r8, #0
 801ebe0:	db09      	blt.n	801ebf6 <_ZN8touchgfx7Outline10renderLineEiiii+0x71a>
 801ebe2:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801ebe4:	4543      	cmp	r3, r8
 801ebe6:	dd06      	ble.n	801ebf6 <_ZN8touchgfx7Outline10renderLineEiiii+0x71a>
 801ebe8:	e9d4 3101 	ldrd	r3, r1, [r4, #4]
 801ebec:	4299      	cmp	r1, r3
 801ebee:	d368      	bcc.n	801ecc2 <_ZN8touchgfx7Outline10renderLineEiiii+0x7e6>
 801ebf0:	2301      	movs	r3, #1
 801ebf2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 801ebf6:	9b06      	ldr	r3, [sp, #24]
 801ebf8:	4476      	add	r6, lr
 801ebfa:	f8a4 9014 	strh.w	r9, [r4, #20]
 801ebfe:	82e3      	strh	r3, [r4, #22]
 801ec00:	2300      	movs	r3, #0
 801ec02:	8323      	strh	r3, [r4, #24]
 801ec04:	8363      	strh	r3, [r4, #26]
 801ec06:	9b05      	ldr	r3, [sp, #20]
 801ec08:	42ab      	cmp	r3, r5
 801ec0a:	d048      	beq.n	801ec9e <_ZN8touchgfx7Outline10renderLineEiiii+0x7c2>
 801ec0c:	9b02      	ldr	r3, [sp, #8]
 801ec0e:	eba2 020c 	sub.w	r2, r2, ip
 801ec12:	1b9b      	subs	r3, r3, r6
 801ec14:	4473      	add	r3, lr
 801ec16:	015b      	lsls	r3, r3, #5
 801ec18:	fb93 f8fc 	sdiv	r8, r3, ip
 801ec1c:	fb0c 3318 	mls	r3, ip, r8, r3
 801ec20:	2b00      	cmp	r3, #0
 801ec22:	bfbc      	itt	lt
 801ec24:	f108 38ff 	addlt.w	r8, r8, #4294967295
 801ec28:	4463      	addlt	r3, ip
 801ec2a:	f108 0101 	add.w	r1, r8, #1
 801ec2e:	910f      	str	r1, [sp, #60]	; 0x3c
 801ec30:	18d2      	adds	r2, r2, r3
 801ec32:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801ec34:	bf56      	itet	pl
 801ec36:	980f      	ldrpl	r0, [sp, #60]	; 0x3c
 801ec38:	4640      	movmi	r0, r8
 801ec3a:	eba2 020c 	subpl.w	r2, r2, ip
 801ec3e:	fa0f fe80 	sxth.w	lr, r0
 801ec42:	4406      	add	r6, r0
 801ec44:	0141      	lsls	r1, r0, #5
 801ec46:	9809      	ldr	r0, [sp, #36]	; 0x24
 801ec48:	f8a4 e018 	strh.w	lr, [r4, #24]
 801ec4c:	4405      	add	r5, r0
 801ec4e:	f9b4 0014 	ldrsh.w	r0, [r4, #20]
 801ec52:	b209      	sxth	r1, r1
 801ec54:	fa0f f985 	sxth.w	r9, r5
 801ec58:	4438      	add	r0, r7
 801ec5a:	8361      	strh	r1, [r4, #26]
 801ec5c:	444f      	add	r7, r9
 801ec5e:	42b8      	cmp	r0, r7
 801ec60:	f43f acf4 	beq.w	801e64c <_ZN8touchgfx7Outline10renderLineEiiii+0x170>
 801ec64:	ea5e 0101 	orrs.w	r1, lr, r1
 801ec68:	d00e      	beq.n	801ec88 <_ZN8touchgfx7Outline10renderLineEiiii+0x7ac>
 801ec6a:	9906      	ldr	r1, [sp, #24]
 801ec6c:	2900      	cmp	r1, #0
 801ec6e:	db0b      	blt.n	801ec88 <_ZN8touchgfx7Outline10renderLineEiiii+0x7ac>
 801ec70:	6c21      	ldr	r1, [r4, #64]	; 0x40
 801ec72:	9806      	ldr	r0, [sp, #24]
 801ec74:	4288      	cmp	r0, r1
 801ec76:	da07      	bge.n	801ec88 <_ZN8touchgfx7Outline10renderLineEiiii+0x7ac>
 801ec78:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 801ec7c:	4288      	cmp	r0, r1
 801ec7e:	d330      	bcc.n	801ece2 <_ZN8touchgfx7Outline10renderLineEiiii+0x806>
 801ec80:	f04f 0101 	mov.w	r1, #1
 801ec84:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
 801ec88:	9906      	ldr	r1, [sp, #24]
 801ec8a:	f8a4 9014 	strh.w	r9, [r4, #20]
 801ec8e:	82e1      	strh	r1, [r4, #22]
 801ec90:	f04f 0100 	mov.w	r1, #0
 801ec94:	8321      	strh	r1, [r4, #24]
 801ec96:	8361      	strh	r1, [r4, #26]
 801ec98:	9905      	ldr	r1, [sp, #20]
 801ec9a:	42a9      	cmp	r1, r5
 801ec9c:	d1c8      	bne.n	801ec30 <_ZN8touchgfx7Outline10renderLineEiiii+0x754>
 801ec9e:	9b02      	ldr	r3, [sp, #8]
 801eca0:	990d      	ldr	r1, [sp, #52]	; 0x34
 801eca2:	1b9e      	subs	r6, r3, r6
 801eca4:	9b07      	ldr	r3, [sp, #28]
 801eca6:	3120      	adds	r1, #32
 801eca8:	8326      	strh	r6, [r4, #24]
 801ecaa:	1ac9      	subs	r1, r1, r3
 801ecac:	434e      	muls	r6, r1
 801ecae:	8366      	strh	r6, [r4, #26]
 801ecb0:	e65a      	b.n	801e968 <_ZN8touchgfx7Outline10renderLineEiiii+0x48c>
 801ecb2:	f04f 33ff 	mov.w	r3, #4294967295
 801ecb6:	434a      	muls	r2, r1
 801ecb8:	f1cc 0c00 	rsb	ip, ip, #0
 801ecbc:	9309      	str	r3, [sp, #36]	; 0x24
 801ecbe:	2300      	movs	r3, #0
 801ecc0:	e76a      	b.n	801eb98 <_ZN8touchgfx7Outline10renderLineEiiii+0x6bc>
 801ecc2:	f104 0314 	add.w	r3, r4, #20
 801ecc6:	f8d4 8010 	ldr.w	r8, [r4, #16]
 801ecca:	cb03      	ldmia	r3!, {r0, r1}
 801eccc:	f8c8 0000 	str.w	r0, [r8]
 801ecd0:	f8c8 1004 	str.w	r1, [r8, #4]
 801ecd4:	6923      	ldr	r3, [r4, #16]
 801ecd6:	3308      	adds	r3, #8
 801ecd8:	6123      	str	r3, [r4, #16]
 801ecda:	68a3      	ldr	r3, [r4, #8]
 801ecdc:	3301      	adds	r3, #1
 801ecde:	60a3      	str	r3, [r4, #8]
 801ece0:	e789      	b.n	801ebf6 <_ZN8touchgfx7Outline10renderLineEiiii+0x71a>
 801ece2:	6921      	ldr	r1, [r4, #16]
 801ece4:	f104 0e14 	add.w	lr, r4, #20
 801ece8:	910e      	str	r1, [sp, #56]	; 0x38
 801ecea:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801ecec:	e8be 0003 	ldmia.w	lr!, {r0, r1}
 801ecf0:	6038      	str	r0, [r7, #0]
 801ecf2:	4638      	mov	r0, r7
 801ecf4:	6079      	str	r1, [r7, #4]
 801ecf6:	6921      	ldr	r1, [r4, #16]
 801ecf8:	3108      	adds	r1, #8
 801ecfa:	6121      	str	r1, [r4, #16]
 801ecfc:	68a1      	ldr	r1, [r4, #8]
 801ecfe:	3101      	adds	r1, #1
 801ed00:	60a1      	str	r1, [r4, #8]
 801ed02:	e7c1      	b.n	801ec88 <_ZN8touchgfx7Outline10renderLineEiiii+0x7ac>
 801ed04:	f104 0214 	add.w	r2, r4, #20
 801ed08:	6926      	ldr	r6, [r4, #16]
 801ed0a:	ca03      	ldmia	r2!, {r0, r1}
 801ed0c:	6030      	str	r0, [r6, #0]
 801ed0e:	6071      	str	r1, [r6, #4]
 801ed10:	6922      	ldr	r2, [r4, #16]
 801ed12:	3208      	adds	r2, #8
 801ed14:	6122      	str	r2, [r4, #16]
 801ed16:	68a2      	ldr	r2, [r4, #8]
 801ed18:	3201      	adds	r2, #1
 801ed1a:	60a2      	str	r2, [r4, #8]
 801ed1c:	e647      	b.n	801e9ae <_ZN8touchgfx7Outline10renderLineEiiii+0x4d2>
 801ed1e:	f104 0514 	add.w	r5, r4, #20
 801ed22:	6926      	ldr	r6, [r4, #16]
 801ed24:	cd03      	ldmia	r5!, {r0, r1}
 801ed26:	6030      	str	r0, [r6, #0]
 801ed28:	6071      	str	r1, [r6, #4]
 801ed2a:	6921      	ldr	r1, [r4, #16]
 801ed2c:	3108      	adds	r1, #8
 801ed2e:	6121      	str	r1, [r4, #16]
 801ed30:	68a1      	ldr	r1, [r4, #8]
 801ed32:	3101      	adds	r1, #1
 801ed34:	60a1      	str	r1, [r4, #8]
 801ed36:	e699      	b.n	801ea6c <_ZN8touchgfx7Outline10renderLineEiiii+0x590>
 801ed38:	9b01      	ldr	r3, [sp, #4]
 801ed3a:	ea4f 176c 	mov.w	r7, ip, asr #5
 801ed3e:	8b20      	ldrh	r0, [r4, #24]
 801ed40:	f00c 0c1f 	and.w	ip, ip, #31
 801ed44:	f003 031f 	and.w	r3, r3, #31
 801ed48:	f8b4 e01a 	ldrh.w	lr, [r4, #26]
 801ed4c:	9310      	str	r3, [sp, #64]	; 0x40
 801ed4e:	9b06      	ldr	r3, [sp, #24]
 801ed50:	429f      	cmp	r7, r3
 801ed52:	d10a      	bne.n	801ed6a <_ZN8touchgfx7Outline10renderLineEiiii+0x88e>
 801ed54:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ed56:	4418      	add	r0, r3
 801ed58:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ed5a:	449c      	add	ip, r3
 801ed5c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ed5e:	8320      	strh	r0, [r4, #24]
 801ed60:	fb03 ee0c 	mla	lr, r3, ip, lr
 801ed64:	f8a4 e01a 	strh.w	lr, [r4, #26]
 801ed68:	e686      	b.n	801ea78 <_ZN8touchgfx7Outline10renderLineEiiii+0x59c>
 801ed6a:	9b00      	ldr	r3, [sp, #0]
 801ed6c:	2b00      	cmp	r3, #0
 801ed6e:	f2c0 80a0 	blt.w	801eeb2 <_ZN8touchgfx7Outline10renderLineEiiii+0x9d6>
 801ed72:	9909      	ldr	r1, [sp, #36]	; 0x24
 801ed74:	f1cc 0320 	rsb	r3, ip, #32
 801ed78:	434b      	muls	r3, r1
 801ed7a:	2101      	movs	r1, #1
 801ed7c:	910e      	str	r1, [sp, #56]	; 0x38
 801ed7e:	2120      	movs	r1, #32
 801ed80:	9a00      	ldr	r2, [sp, #0]
 801ed82:	910d      	str	r1, [sp, #52]	; 0x34
 801ed84:	990d      	ldr	r1, [sp, #52]	; 0x34
 801ed86:	fb93 f5f2 	sdiv	r5, r3, r2
 801ed8a:	fb02 3315 	mls	r3, r2, r5, r3
 801ed8e:	448c      	add	ip, r1
 801ed90:	2b00      	cmp	r3, #0
 801ed92:	bfbc      	itt	lt
 801ed94:	f105 35ff 	addlt.w	r5, r5, #4294967295
 801ed98:	189b      	addlt	r3, r3, r2
 801ed9a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801ed9c:	fb05 ec0c 	mla	ip, r5, ip, lr
 801eda0:	4428      	add	r0, r5
 801eda2:	4417      	add	r7, r2
 801eda4:	fa0f f18c 	sxth.w	r1, ip
 801eda8:	fa0f fc89 	sxth.w	ip, r9
 801edac:	fa0f fe87 	sxth.w	lr, r7
 801edb0:	8361      	strh	r1, [r4, #26]
 801edb2:	ea4f 420c 	mov.w	r2, ip, lsl #16
 801edb6:	b200      	sxth	r0, r0
 801edb8:	920f      	str	r2, [sp, #60]	; 0x3c
 801edba:	4472      	add	r2, lr
 801edbc:	8320      	strh	r0, [r4, #24]
 801edbe:	4542      	cmp	r2, r8
 801edc0:	f43f ac44 	beq.w	801e64c <_ZN8touchgfx7Outline10renderLineEiiii+0x170>
 801edc4:	ea50 0201 	orrs.w	r2, r0, r1
 801edc8:	d00c      	beq.n	801ede4 <_ZN8touchgfx7Outline10renderLineEiiii+0x908>
 801edca:	2e00      	cmp	r6, #0
 801edcc:	db0a      	blt.n	801ede4 <_ZN8touchgfx7Outline10renderLineEiiii+0x908>
 801edce:	6c21      	ldr	r1, [r4, #64]	; 0x40
 801edd0:	42b1      	cmp	r1, r6
 801edd2:	dd07      	ble.n	801ede4 <_ZN8touchgfx7Outline10renderLineEiiii+0x908>
 801edd4:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 801edd8:	4288      	cmp	r0, r1
 801edda:	d375      	bcc.n	801eec8 <_ZN8touchgfx7Outline10renderLineEiiii+0x9ec>
 801eddc:	f04f 0201 	mov.w	r2, #1
 801ede0:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 801ede4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801ede6:	f8a4 e014 	strh.w	lr, [r4, #20]
 801edea:	1956      	adds	r6, r2, r5
 801edec:	9a06      	ldr	r2, [sp, #24]
 801edee:	f8a4 c016 	strh.w	ip, [r4, #22]
 801edf2:	42ba      	cmp	r2, r7
 801edf4:	f8a4 a018 	strh.w	sl, [r4, #24]
 801edf8:	f8a4 a01a 	strh.w	sl, [r4, #26]
 801edfc:	d04c      	beq.n	801ee98 <_ZN8touchgfx7Outline10renderLineEiiii+0x9bc>
 801edfe:	9a02      	ldr	r2, [sp, #8]
 801ee00:	1b91      	subs	r1, r2, r6
 801ee02:	9a00      	ldr	r2, [sp, #0]
 801ee04:	440d      	add	r5, r1
 801ee06:	016d      	lsls	r5, r5, #5
 801ee08:	fb95 fef2 	sdiv	lr, r5, r2
 801ee0c:	fb02 551e 	mls	r5, r2, lr, r5
 801ee10:	2d00      	cmp	r5, #0
 801ee12:	bfbc      	itt	lt
 801ee14:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 801ee18:	18ad      	addlt	r5, r5, r2
 801ee1a:	9a00      	ldr	r2, [sp, #0]
 801ee1c:	1a9b      	subs	r3, r3, r2
 801ee1e:	f10e 0201 	add.w	r2, lr, #1
 801ee22:	9213      	str	r2, [sp, #76]	; 0x4c
 801ee24:	195b      	adds	r3, r3, r5
 801ee26:	bf57      	itett	pl
 801ee28:	9a00      	ldrpl	r2, [sp, #0]
 801ee2a:	4670      	movmi	r0, lr
 801ee2c:	9813      	ldrpl	r0, [sp, #76]	; 0x4c
 801ee2e:	1a9b      	subpl	r3, r3, r2
 801ee30:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801ee32:	fa0f f880 	sxth.w	r8, r0
 801ee36:	4406      	add	r6, r0
 801ee38:	4417      	add	r7, r2
 801ee3a:	0141      	lsls	r1, r0, #5
 801ee3c:	f9b4 0014 	ldrsh.w	r0, [r4, #20]
 801ee40:	b23a      	sxth	r2, r7
 801ee42:	f8a4 8018 	strh.w	r8, [r4, #24]
 801ee46:	b209      	sxth	r1, r1
 801ee48:	9211      	str	r2, [sp, #68]	; 0x44
 801ee4a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ee4c:	8361      	strh	r1, [r4, #26]
 801ee4e:	1882      	adds	r2, r0, r2
 801ee50:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801ee52:	9212      	str	r2, [sp, #72]	; 0x48
 801ee54:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801ee56:	4402      	add	r2, r0
 801ee58:	9812      	ldr	r0, [sp, #72]	; 0x48
 801ee5a:	4290      	cmp	r0, r2
 801ee5c:	f43f abf6 	beq.w	801e64c <_ZN8touchgfx7Outline10renderLineEiiii+0x170>
 801ee60:	ea58 0201 	orrs.w	r2, r8, r1
 801ee64:	d00d      	beq.n	801ee82 <_ZN8touchgfx7Outline10renderLineEiiii+0x9a6>
 801ee66:	f1bc 0f00 	cmp.w	ip, #0
 801ee6a:	db0a      	blt.n	801ee82 <_ZN8touchgfx7Outline10renderLineEiiii+0x9a6>
 801ee6c:	6c21      	ldr	r1, [r4, #64]	; 0x40
 801ee6e:	458c      	cmp	ip, r1
 801ee70:	da07      	bge.n	801ee82 <_ZN8touchgfx7Outline10renderLineEiiii+0x9a6>
 801ee72:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 801ee76:	4288      	cmp	r0, r1
 801ee78:	d336      	bcc.n	801eee8 <_ZN8touchgfx7Outline10renderLineEiiii+0xa0c>
 801ee7a:	f04f 0201 	mov.w	r2, #1
 801ee7e:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 801ee82:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801ee84:	f8a4 c016 	strh.w	ip, [r4, #22]
 801ee88:	82a2      	strh	r2, [r4, #20]
 801ee8a:	9a06      	ldr	r2, [sp, #24]
 801ee8c:	f8a4 a018 	strh.w	sl, [r4, #24]
 801ee90:	42ba      	cmp	r2, r7
 801ee92:	f8a4 a01a 	strh.w	sl, [r4, #26]
 801ee96:	d1c5      	bne.n	801ee24 <_ZN8touchgfx7Outline10renderLineEiiii+0x948>
 801ee98:	9b02      	ldr	r3, [sp, #8]
 801ee9a:	1b9e      	subs	r6, r3, r6
 801ee9c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ee9e:	f103 0c20 	add.w	ip, r3, #32
 801eea2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801eea4:	8326      	strh	r6, [r4, #24]
 801eea6:	ebac 0c03 	sub.w	ip, ip, r3
 801eeaa:	fb06 f60c 	mul.w	r6, r6, ip
 801eeae:	8366      	strh	r6, [r4, #26]
 801eeb0:	e5e2      	b.n	801ea78 <_ZN8touchgfx7Outline10renderLineEiiii+0x59c>
 801eeb2:	9a00      	ldr	r2, [sp, #0]
 801eeb4:	f04f 31ff 	mov.w	r1, #4294967295
 801eeb8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801eeba:	4252      	negs	r2, r2
 801eebc:	910e      	str	r1, [sp, #56]	; 0x38
 801eebe:	fb03 f30c 	mul.w	r3, r3, ip
 801eec2:	2100      	movs	r1, #0
 801eec4:	9200      	str	r2, [sp, #0]
 801eec6:	e75b      	b.n	801ed80 <_ZN8touchgfx7Outline10renderLineEiiii+0x8a4>
 801eec8:	f104 0614 	add.w	r6, r4, #20
 801eecc:	f8d4 8010 	ldr.w	r8, [r4, #16]
 801eed0:	ce03      	ldmia	r6!, {r0, r1}
 801eed2:	f8c8 0000 	str.w	r0, [r8]
 801eed6:	f8c8 1004 	str.w	r1, [r8, #4]
 801eeda:	6921      	ldr	r1, [r4, #16]
 801eedc:	3108      	adds	r1, #8
 801eede:	6121      	str	r1, [r4, #16]
 801eee0:	68a1      	ldr	r1, [r4, #8]
 801eee2:	3101      	adds	r1, #1
 801eee4:	60a1      	str	r1, [r4, #8]
 801eee6:	e77d      	b.n	801ede4 <_ZN8touchgfx7Outline10renderLineEiiii+0x908>
 801eee8:	f104 0814 	add.w	r8, r4, #20
 801eeec:	6922      	ldr	r2, [r4, #16]
 801eeee:	e8b8 0003 	ldmia.w	r8!, {r0, r1}
 801eef2:	9212      	str	r2, [sp, #72]	; 0x48
 801eef4:	6010      	str	r0, [r2, #0]
 801eef6:	6051      	str	r1, [r2, #4]
 801eef8:	6921      	ldr	r1, [r4, #16]
 801eefa:	3108      	adds	r1, #8
 801eefc:	6121      	str	r1, [r4, #16]
 801eefe:	68a1      	ldr	r1, [r4, #8]
 801ef00:	3101      	adds	r1, #1
 801ef02:	60a1      	str	r1, [r4, #8]
 801ef04:	e7bd      	b.n	801ee82 <_ZN8touchgfx7Outline10renderLineEiiii+0x9a6>
 801ef06:	f104 0214 	add.w	r2, r4, #20
 801ef0a:	6926      	ldr	r6, [r4, #16]
 801ef0c:	ca03      	ldmia	r2!, {r0, r1}
 801ef0e:	6030      	str	r0, [r6, #0]
 801ef10:	6071      	str	r1, [r6, #4]
 801ef12:	6922      	ldr	r2, [r4, #16]
 801ef14:	3208      	adds	r2, #8
 801ef16:	6122      	str	r2, [r4, #16]
 801ef18:	68a2      	ldr	r2, [r4, #8]
 801ef1a:	3201      	adds	r2, #1
 801ef1c:	60a2      	str	r2, [r4, #8]
 801ef1e:	e5ce      	b.n	801eabe <_ZN8touchgfx7Outline10renderLineEiiii+0x5e2>
 801ef20:	f104 0314 	add.w	r3, r4, #20
 801ef24:	6926      	ldr	r6, [r4, #16]
 801ef26:	cb03      	ldmia	r3!, {r0, r1}
 801ef28:	6030      	str	r0, [r6, #0]
 801ef2a:	6071      	str	r1, [r6, #4]
 801ef2c:	6923      	ldr	r3, [r4, #16]
 801ef2e:	3308      	adds	r3, #8
 801ef30:	6123      	str	r3, [r4, #16]
 801ef32:	68a3      	ldr	r3, [r4, #8]
 801ef34:	3301      	adds	r3, #1
 801ef36:	60a3      	str	r3, [r4, #8]
 801ef38:	e5f6      	b.n	801eb28 <_ZN8touchgfx7Outline10renderLineEiiii+0x64c>
 801ef3a:	9b01      	ldr	r3, [sp, #4]
 801ef3c:	8b20      	ldrh	r0, [r4, #24]
 801ef3e:	ea4f 1c63 	mov.w	ip, r3, asr #5
 801ef42:	f003 021f 	and.w	r2, r3, #31
 801ef46:	9b04      	ldr	r3, [sp, #16]
 801ef48:	45dc      	cmp	ip, fp
 801ef4a:	8b66      	ldrh	r6, [r4, #26]
 801ef4c:	f003 031f 	and.w	r3, r3, #31
 801ef50:	9305      	str	r3, [sp, #20]
 801ef52:	9b03      	ldr	r3, [sp, #12]
 801ef54:	eba3 050e 	sub.w	r5, r3, lr
 801ef58:	d108      	bne.n	801ef6c <_ZN8touchgfx7Outline10renderLineEiiii+0xa90>
 801ef5a:	9b05      	ldr	r3, [sp, #20]
 801ef5c:	4428      	add	r0, r5
 801ef5e:	441a      	add	r2, r3
 801ef60:	8320      	strh	r0, [r4, #24]
 801ef62:	fb05 6502 	mla	r5, r5, r2, r6
 801ef66:	8365      	strh	r5, [r4, #26]
 801ef68:	f7ff bbed 	b.w	801e746 <_ZN8touchgfx7Outline10renderLineEiiii+0x26a>
 801ef6c:	9b04      	ldr	r3, [sp, #16]
 801ef6e:	9901      	ldr	r1, [sp, #4]
 801ef70:	1a5b      	subs	r3, r3, r1
 801ef72:	9300      	str	r3, [sp, #0]
 801ef74:	f100 809c 	bmi.w	801f0b0 <_ZN8touchgfx7Outline10renderLineEiiii+0xbd4>
 801ef78:	f1c2 0120 	rsb	r1, r2, #32
 801ef7c:	434d      	muls	r5, r1
 801ef7e:	2101      	movs	r1, #1
 801ef80:	9102      	str	r1, [sp, #8]
 801ef82:	2120      	movs	r1, #32
 801ef84:	9b00      	ldr	r3, [sp, #0]
 801ef86:	9101      	str	r1, [sp, #4]
 801ef88:	9901      	ldr	r1, [sp, #4]
 801ef8a:	fb95 f7f3 	sdiv	r7, r5, r3
 801ef8e:	fb03 5517 	mls	r5, r3, r7, r5
 801ef92:	440a      	add	r2, r1
 801ef94:	2d00      	cmp	r5, #0
 801ef96:	bfbc      	itt	lt
 801ef98:	f107 37ff 	addlt.w	r7, r7, #4294967295
 801ef9c:	18ed      	addlt	r5, r5, r3
 801ef9e:	fb07 6202 	mla	r2, r7, r2, r6
 801efa2:	f9b4 6016 	ldrsh.w	r6, [r4, #22]
 801efa6:	4438      	add	r0, r7
 801efa8:	b211      	sxth	r1, r2
 801efaa:	9a02      	ldr	r2, [sp, #8]
 801efac:	b200      	sxth	r0, r0
 801efae:	4494      	add	ip, r2
 801efb0:	fa0f f289 	sxth.w	r2, r9
 801efb4:	f9b4 9014 	ldrsh.w	r9, [r4, #20]
 801efb8:	0413      	lsls	r3, r2, #16
 801efba:	8320      	strh	r0, [r4, #24]
 801efbc:	fa0f f88c 	sxth.w	r8, ip
 801efc0:	8361      	strh	r1, [r4, #26]
 801efc2:	eb09 4906 	add.w	r9, r9, r6, lsl #16
 801efc6:	9304      	str	r3, [sp, #16]
 801efc8:	eb08 0a03 	add.w	sl, r8, r3
 801efcc:	45d1      	cmp	r9, sl
 801efce:	f43f ab3d 	beq.w	801e64c <_ZN8touchgfx7Outline10renderLineEiiii+0x170>
 801efd2:	ea50 0301 	orrs.w	r3, r0, r1
 801efd6:	d00b      	beq.n	801eff0 <_ZN8touchgfx7Outline10renderLineEiiii+0xb14>
 801efd8:	2e00      	cmp	r6, #0
 801efda:	db09      	blt.n	801eff0 <_ZN8touchgfx7Outline10renderLineEiiii+0xb14>
 801efdc:	6c21      	ldr	r1, [r4, #64]	; 0x40
 801efde:	428e      	cmp	r6, r1
 801efe0:	da06      	bge.n	801eff0 <_ZN8touchgfx7Outline10renderLineEiiii+0xb14>
 801efe2:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 801efe6:	4288      	cmp	r0, r1
 801efe8:	d36b      	bcc.n	801f0c2 <_ZN8touchgfx7Outline10renderLineEiiii+0xbe6>
 801efea:	2101      	movs	r1, #1
 801efec:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
 801eff0:	2100      	movs	r1, #0
 801eff2:	45e3      	cmp	fp, ip
 801eff4:	f8a4 8014 	strh.w	r8, [r4, #20]
 801eff8:	44be      	add	lr, r7
 801effa:	82e2      	strh	r2, [r4, #22]
 801effc:	8321      	strh	r1, [r4, #24]
 801effe:	8361      	strh	r1, [r4, #26]
 801f000:	d047      	beq.n	801f092 <_ZN8touchgfx7Outline10renderLineEiiii+0xbb6>
 801f002:	9b03      	ldr	r3, [sp, #12]
 801f004:	f04f 0900 	mov.w	r9, #0
 801f008:	eba3 060e 	sub.w	r6, r3, lr
 801f00c:	9b00      	ldr	r3, [sp, #0]
 801f00e:	443e      	add	r6, r7
 801f010:	0176      	lsls	r6, r6, #5
 801f012:	fb96 f7f3 	sdiv	r7, r6, r3
 801f016:	fb03 6617 	mls	r6, r3, r7, r6
 801f01a:	428e      	cmp	r6, r1
 801f01c:	bfbc      	itt	lt
 801f01e:	f107 37ff 	addlt.w	r7, r7, #4294967295
 801f022:	18f6      	addlt	r6, r6, r3
 801f024:	9b00      	ldr	r3, [sp, #0]
 801f026:	1aed      	subs	r5, r5, r3
 801f028:	1c7b      	adds	r3, r7, #1
 801f02a:	9307      	str	r3, [sp, #28]
 801f02c:	19ad      	adds	r5, r5, r6
 801f02e:	bf57      	itett	pl
 801f030:	9b00      	ldrpl	r3, [sp, #0]
 801f032:	4638      	movmi	r0, r7
 801f034:	9807      	ldrpl	r0, [sp, #28]
 801f036:	1aed      	subpl	r5, r5, r3
 801f038:	9b02      	ldr	r3, [sp, #8]
 801f03a:	fa0f f880 	sxth.w	r8, r0
 801f03e:	4486      	add	lr, r0
 801f040:	449c      	add	ip, r3
 801f042:	0141      	lsls	r1, r0, #5
 801f044:	9b04      	ldr	r3, [sp, #16]
 801f046:	fa0f fa8c 	sxth.w	sl, ip
 801f04a:	f9b4 0014 	ldrsh.w	r0, [r4, #20]
 801f04e:	b209      	sxth	r1, r1
 801f050:	f8a4 8018 	strh.w	r8, [r4, #24]
 801f054:	4418      	add	r0, r3
 801f056:	4453      	add	r3, sl
 801f058:	8361      	strh	r1, [r4, #26]
 801f05a:	4298      	cmp	r0, r3
 801f05c:	f43f aaf6 	beq.w	801e64c <_ZN8touchgfx7Outline10renderLineEiiii+0x170>
 801f060:	ea58 0301 	orrs.w	r3, r8, r1
 801f064:	d00c      	beq.n	801f080 <_ZN8touchgfx7Outline10renderLineEiiii+0xba4>
 801f066:	2a00      	cmp	r2, #0
 801f068:	db0a      	blt.n	801f080 <_ZN8touchgfx7Outline10renderLineEiiii+0xba4>
 801f06a:	6c21      	ldr	r1, [r4, #64]	; 0x40
 801f06c:	428a      	cmp	r2, r1
 801f06e:	da07      	bge.n	801f080 <_ZN8touchgfx7Outline10renderLineEiiii+0xba4>
 801f070:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 801f074:	4288      	cmp	r0, r1
 801f076:	d334      	bcc.n	801f0e2 <_ZN8touchgfx7Outline10renderLineEiiii+0xc06>
 801f078:	f04f 0301 	mov.w	r3, #1
 801f07c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 801f080:	45e3      	cmp	fp, ip
 801f082:	f8a4 a014 	strh.w	sl, [r4, #20]
 801f086:	82e2      	strh	r2, [r4, #22]
 801f088:	f8a4 9018 	strh.w	r9, [r4, #24]
 801f08c:	f8a4 901a 	strh.w	r9, [r4, #26]
 801f090:	d1cc      	bne.n	801f02c <_ZN8touchgfx7Outline10renderLineEiiii+0xb50>
 801f092:	9b03      	ldr	r3, [sp, #12]
 801f094:	9e05      	ldr	r6, [sp, #20]
 801f096:	eba3 0e0e 	sub.w	lr, r3, lr
 801f09a:	9b01      	ldr	r3, [sp, #4]
 801f09c:	3620      	adds	r6, #32
 801f09e:	f8a4 e018 	strh.w	lr, [r4, #24]
 801f0a2:	1af6      	subs	r6, r6, r3
 801f0a4:	fb0e fe06 	mul.w	lr, lr, r6
 801f0a8:	f8a4 e01a 	strh.w	lr, [r4, #26]
 801f0ac:	f7ff bb4b 	b.w	801e746 <_ZN8touchgfx7Outline10renderLineEiiii+0x26a>
 801f0b0:	9b00      	ldr	r3, [sp, #0]
 801f0b2:	f04f 31ff 	mov.w	r1, #4294967295
 801f0b6:	4355      	muls	r5, r2
 801f0b8:	425b      	negs	r3, r3
 801f0ba:	9102      	str	r1, [sp, #8]
 801f0bc:	2100      	movs	r1, #0
 801f0be:	9300      	str	r3, [sp, #0]
 801f0c0:	e760      	b.n	801ef84 <_ZN8touchgfx7Outline10renderLineEiiii+0xaa8>
 801f0c2:	f104 0614 	add.w	r6, r4, #20
 801f0c6:	f8d4 9010 	ldr.w	r9, [r4, #16]
 801f0ca:	ce03      	ldmia	r6!, {r0, r1}
 801f0cc:	f8c9 0000 	str.w	r0, [r9]
 801f0d0:	f8c9 1004 	str.w	r1, [r9, #4]
 801f0d4:	6921      	ldr	r1, [r4, #16]
 801f0d6:	3108      	adds	r1, #8
 801f0d8:	6121      	str	r1, [r4, #16]
 801f0da:	68a1      	ldr	r1, [r4, #8]
 801f0dc:	3101      	adds	r1, #1
 801f0de:	60a1      	str	r1, [r4, #8]
 801f0e0:	e786      	b.n	801eff0 <_ZN8touchgfx7Outline10renderLineEiiii+0xb14>
 801f0e2:	f104 0814 	add.w	r8, r4, #20
 801f0e6:	6923      	ldr	r3, [r4, #16]
 801f0e8:	e8b8 0003 	ldmia.w	r8!, {r0, r1}
 801f0ec:	9306      	str	r3, [sp, #24]
 801f0ee:	6018      	str	r0, [r3, #0]
 801f0f0:	6059      	str	r1, [r3, #4]
 801f0f2:	6921      	ldr	r1, [r4, #16]
 801f0f4:	3108      	adds	r1, #8
 801f0f6:	6121      	str	r1, [r4, #16]
 801f0f8:	68a1      	ldr	r1, [r4, #8]
 801f0fa:	3101      	adds	r1, #1
 801f0fc:	60a1      	str	r1, [r4, #8]
 801f0fe:	e7bf      	b.n	801f080 <_ZN8touchgfx7Outline10renderLineEiiii+0xba4>

0801f100 <_ZN8touchgfx7Outline6lineToEii>:
 801f100:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801f102:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 801f104:	4604      	mov	r4, r0
 801f106:	460d      	mov	r5, r1
 801f108:	4616      	mov	r6, r2
 801f10a:	079b      	lsls	r3, r3, #30
 801f10c:	d526      	bpl.n	801f15c <_ZN8touchgfx7Outline6lineToEii+0x5c>
 801f10e:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 801f112:	ea85 0001 	eor.w	r0, r5, r1
 801f116:	ea86 0302 	eor.w	r3, r6, r2
 801f11a:	4303      	orrs	r3, r0
 801f11c:	d01e      	beq.n	801f15c <_ZN8touchgfx7Outline6lineToEii+0x5c>
 801f11e:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 801f120:	114b      	asrs	r3, r1, #5
 801f122:	9600      	str	r6, [sp, #0]
 801f124:	4283      	cmp	r3, r0
 801f126:	6b60      	ldr	r0, [r4, #52]	; 0x34
 801f128:	bfb8      	it	lt
 801f12a:	62e3      	strlt	r3, [r4, #44]	; 0x2c
 801f12c:	3301      	adds	r3, #1
 801f12e:	4283      	cmp	r3, r0
 801f130:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 801f132:	bfc8      	it	gt
 801f134:	6363      	strgt	r3, [r4, #52]	; 0x34
 801f136:	116b      	asrs	r3, r5, #5
 801f138:	4283      	cmp	r3, r0
 801f13a:	6b60      	ldr	r0, [r4, #52]	; 0x34
 801f13c:	bfb8      	it	lt
 801f13e:	62e3      	strlt	r3, [r4, #44]	; 0x2c
 801f140:	3301      	adds	r3, #1
 801f142:	4283      	cmp	r3, r0
 801f144:	4620      	mov	r0, r4
 801f146:	bfc8      	it	gt
 801f148:	6363      	strgt	r3, [r4, #52]	; 0x34
 801f14a:	462b      	mov	r3, r5
 801f14c:	f7ff f9c6 	bl	801e4dc <_ZN8touchgfx7Outline10renderLineEiiii>
 801f150:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801f152:	f043 0301 	orr.w	r3, r3, #1
 801f156:	e9c4 5607 	strd	r5, r6, [r4, #28]
 801f15a:	63e3      	str	r3, [r4, #60]	; 0x3c
 801f15c:	b002      	add	sp, #8
 801f15e:	bd70      	pop	{r4, r5, r6, pc}

0801f160 <_ZN8touchgfx7Outline6moveToEii>:
 801f160:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801f162:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 801f164:	4615      	mov	r5, r2
 801f166:	4604      	mov	r4, r0
 801f168:	460e      	mov	r6, r1
 801f16a:	079a      	lsls	r2, r3, #30
 801f16c:	d401      	bmi.n	801f172 <_ZN8touchgfx7Outline6moveToEii+0x12>
 801f16e:	f7ff f96f 	bl	801e450 <_ZN8touchgfx7Outline5resetEv>
 801f172:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801f174:	07db      	lsls	r3, r3, #31
 801f176:	d504      	bpl.n	801f182 <_ZN8touchgfx7Outline6moveToEii+0x22>
 801f178:	4620      	mov	r0, r4
 801f17a:	e9d4 1209 	ldrd	r1, r2, [r4, #36]	; 0x24
 801f17e:	f7ff ffbf 	bl	801f100 <_ZN8touchgfx7Outline6lineToEii>
 801f182:	f9b4 3016 	ldrsh.w	r3, [r4, #22]
 801f186:	f346 1c4f 	sbfx	ip, r6, #5, #16
 801f18a:	f345 174f 	sbfx	r7, r5, #5, #16
 801f18e:	f9b4 2014 	ldrsh.w	r2, [r4, #20]
 801f192:	eb0c 4107 	add.w	r1, ip, r7, lsl #16
 801f196:	eb02 4203 	add.w	r2, r2, r3, lsl #16
 801f19a:	428a      	cmp	r2, r1
 801f19c:	d015      	beq.n	801f1ca <_ZN8touchgfx7Outline6moveToEii+0x6a>
 801f19e:	8b61      	ldrh	r1, [r4, #26]
 801f1a0:	8b22      	ldrh	r2, [r4, #24]
 801f1a2:	430a      	orrs	r2, r1
 801f1a4:	d00b      	beq.n	801f1be <_ZN8touchgfx7Outline6moveToEii+0x5e>
 801f1a6:	2b00      	cmp	r3, #0
 801f1a8:	db09      	blt.n	801f1be <_ZN8touchgfx7Outline6moveToEii+0x5e>
 801f1aa:	6c22      	ldr	r2, [r4, #64]	; 0x40
 801f1ac:	4293      	cmp	r3, r2
 801f1ae:	da06      	bge.n	801f1be <_ZN8touchgfx7Outline6moveToEii+0x5e>
 801f1b0:	e9d4 3201 	ldrd	r3, r2, [r4, #4]
 801f1b4:	429a      	cmp	r2, r3
 801f1b6:	d30d      	bcc.n	801f1d4 <_ZN8touchgfx7Outline6moveToEii+0x74>
 801f1b8:	2301      	movs	r3, #1
 801f1ba:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 801f1be:	2300      	movs	r3, #0
 801f1c0:	f8a4 c014 	strh.w	ip, [r4, #20]
 801f1c4:	82e7      	strh	r7, [r4, #22]
 801f1c6:	8323      	strh	r3, [r4, #24]
 801f1c8:	8363      	strh	r3, [r4, #26]
 801f1ca:	61e6      	str	r6, [r4, #28]
 801f1cc:	62a5      	str	r5, [r4, #40]	; 0x28
 801f1ce:	e9c4 5608 	strd	r5, r6, [r4, #32]
 801f1d2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801f1d4:	f104 0314 	add.w	r3, r4, #20
 801f1d8:	6922      	ldr	r2, [r4, #16]
 801f1da:	cb03      	ldmia	r3!, {r0, r1}
 801f1dc:	6010      	str	r0, [r2, #0]
 801f1de:	6051      	str	r1, [r2, #4]
 801f1e0:	6923      	ldr	r3, [r4, #16]
 801f1e2:	3308      	adds	r3, #8
 801f1e4:	6123      	str	r3, [r4, #16]
 801f1e6:	68a3      	ldr	r3, [r4, #8]
 801f1e8:	3301      	adds	r3, #1
 801f1ea:	60a3      	str	r3, [r4, #8]
 801f1ec:	e7e7      	b.n	801f1be <_ZN8touchgfx7Outline6moveToEii+0x5e>

0801f1ee <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 801f1ee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f1f2:	b0d1      	sub	sp, #324	; 0x144
 801f1f4:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 801f1f8:	466c      	mov	r4, sp
 801f1fa:	1a0d      	subs	r5, r1, r0
 801f1fc:	f100 0208 	add.w	r2, r0, #8
 801f200:	2d48      	cmp	r5, #72	; 0x48
 801f202:	f340 80ba 	ble.w	801f37a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x18c>
 801f206:	112d      	asrs	r5, r5, #4
 801f208:	f9b0 c004 	ldrsh.w	ip, [r0, #4]
 801f20c:	f9b0 7006 	ldrsh.w	r7, [r0, #6]
 801f210:	eb00 03c5 	add.w	r3, r0, r5, lsl #3
 801f214:	f9b0 8000 	ldrsh.w	r8, [r0]
 801f218:	f9b0 e002 	ldrsh.w	lr, [r0, #2]
 801f21c:	681e      	ldr	r6, [r3, #0]
 801f21e:	6006      	str	r6, [r0, #0]
 801f220:	685e      	ldr	r6, [r3, #4]
 801f222:	6046      	str	r6, [r0, #4]
 801f224:	f820 8035 	strh.w	r8, [r0, r5, lsl #3]
 801f228:	f8a3 e002 	strh.w	lr, [r3, #2]
 801f22c:	f8a3 c004 	strh.w	ip, [r3, #4]
 801f230:	80df      	strh	r7, [r3, #6]
 801f232:	f1a1 0308 	sub.w	r3, r1, #8
 801f236:	f931 cc06 	ldrsh.w	ip, [r1, #-6]
 801f23a:	f9b0 7008 	ldrsh.w	r7, [r0, #8]
 801f23e:	f9b0 600a 	ldrsh.w	r6, [r0, #10]
 801f242:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 801f246:	eb05 450c 	add.w	r5, r5, ip, lsl #16
 801f24a:	eb07 4c06 	add.w	ip, r7, r6, lsl #16
 801f24e:	4565      	cmp	r5, ip
 801f250:	da0f      	bge.n	801f272 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x84>
 801f252:	681d      	ldr	r5, [r3, #0]
 801f254:	f9b0 e00c 	ldrsh.w	lr, [r0, #12]
 801f258:	f9b0 c00e 	ldrsh.w	ip, [r0, #14]
 801f25c:	6015      	str	r5, [r2, #0]
 801f25e:	685d      	ldr	r5, [r3, #4]
 801f260:	6055      	str	r5, [r2, #4]
 801f262:	f821 7c08 	strh.w	r7, [r1, #-8]
 801f266:	f821 6c06 	strh.w	r6, [r1, #-6]
 801f26a:	f821 ec04 	strh.w	lr, [r1, #-4]
 801f26e:	f821 cc02 	strh.w	ip, [r1, #-2]
 801f272:	f9b0 7000 	ldrsh.w	r7, [r0]
 801f276:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 801f27a:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 801f27e:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 801f282:	eb07 4c06 	add.w	ip, r7, r6, lsl #16
 801f286:	eb05 450e 	add.w	r5, r5, lr, lsl #16
 801f28a:	45ac      	cmp	ip, r5
 801f28c:	da0d      	bge.n	801f2aa <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xbc>
 801f28e:	6815      	ldr	r5, [r2, #0]
 801f290:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 801f294:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 801f298:	6005      	str	r5, [r0, #0]
 801f29a:	6855      	ldr	r5, [r2, #4]
 801f29c:	8107      	strh	r7, [r0, #8]
 801f29e:	6045      	str	r5, [r0, #4]
 801f2a0:	8146      	strh	r6, [r0, #10]
 801f2a2:	f8a0 e00c 	strh.w	lr, [r0, #12]
 801f2a6:	f8a0 c00e 	strh.w	ip, [r0, #14]
 801f2aa:	f931 cc06 	ldrsh.w	ip, [r1, #-6]
 801f2ae:	f9b0 7000 	ldrsh.w	r7, [r0]
 801f2b2:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 801f2b6:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 801f2ba:	eb05 450c 	add.w	r5, r5, ip, lsl #16
 801f2be:	eb07 4c06 	add.w	ip, r7, r6, lsl #16
 801f2c2:	4565      	cmp	r5, ip
 801f2c4:	da0f      	bge.n	801f2e6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xf8>
 801f2c6:	681d      	ldr	r5, [r3, #0]
 801f2c8:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 801f2cc:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 801f2d0:	6005      	str	r5, [r0, #0]
 801f2d2:	685d      	ldr	r5, [r3, #4]
 801f2d4:	6045      	str	r5, [r0, #4]
 801f2d6:	f821 7c08 	strh.w	r7, [r1, #-8]
 801f2da:	f821 6c06 	strh.w	r6, [r1, #-6]
 801f2de:	f821 ec04 	strh.w	lr, [r1, #-4]
 801f2e2:	f821 cc02 	strh.w	ip, [r1, #-2]
 801f2e6:	f9b2 9008 	ldrsh.w	r9, [r2, #8]
 801f2ea:	f102 0508 	add.w	r5, r2, #8
 801f2ee:	f9b2 800a 	ldrsh.w	r8, [r2, #10]
 801f2f2:	f9b0 e000 	ldrsh.w	lr, [r0]
 801f2f6:	462f      	mov	r7, r5
 801f2f8:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 801f2fc:	eb09 4608 	add.w	r6, r9, r8, lsl #16
 801f300:	eb0e 4a0c 	add.w	sl, lr, ip, lsl #16
 801f304:	4556      	cmp	r6, sl
 801f306:	db18      	blt.n	801f33a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x14c>
 801f308:	3b08      	subs	r3, #8
 801f30a:	f9b3 b002 	ldrsh.w	fp, [r3, #2]
 801f30e:	f9b3 6000 	ldrsh.w	r6, [r3]
 801f312:	eb06 460b 	add.w	r6, r6, fp, lsl #16
 801f316:	45b2      	cmp	sl, r6
 801f318:	dbf6      	blt.n	801f308 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x11a>
 801f31a:	42ab      	cmp	r3, r5
 801f31c:	681e      	ldr	r6, [r3, #0]
 801f31e:	d30e      	bcc.n	801f33e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x150>
 801f320:	f9b2 700c 	ldrsh.w	r7, [r2, #12]
 801f324:	f9b2 200e 	ldrsh.w	r2, [r2, #14]
 801f328:	602e      	str	r6, [r5, #0]
 801f32a:	685e      	ldr	r6, [r3, #4]
 801f32c:	606e      	str	r6, [r5, #4]
 801f32e:	f8a3 9000 	strh.w	r9, [r3]
 801f332:	f8a3 8002 	strh.w	r8, [r3, #2]
 801f336:	809f      	strh	r7, [r3, #4]
 801f338:	80da      	strh	r2, [r3, #6]
 801f33a:	462a      	mov	r2, r5
 801f33c:	e7d3      	b.n	801f2e6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xf8>
 801f33e:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 801f342:	6006      	str	r6, [r0, #0]
 801f344:	685e      	ldr	r6, [r3, #4]
 801f346:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 801f34a:	6046      	str	r6, [r0, #4]
 801f34c:	1a1e      	subs	r6, r3, r0
 801f34e:	80da      	strh	r2, [r3, #6]
 801f350:	1b4a      	subs	r2, r1, r5
 801f352:	f8a3 e000 	strh.w	lr, [r3]
 801f356:	10d2      	asrs	r2, r2, #3
 801f358:	f8a3 c002 	strh.w	ip, [r3, #2]
 801f35c:	f8a3 8004 	strh.w	r8, [r3, #4]
 801f360:	ebb2 0fe6 	cmp.w	r2, r6, asr #3
 801f364:	bfb5      	itete	lt
 801f366:	e9c4 0300 	strdlt	r0, r3, [r4]
 801f36a:	4607      	movge	r7, r0
 801f36c:	460b      	movlt	r3, r1
 801f36e:	e9c4 5100 	strdge	r5, r1, [r4]
 801f372:	4638      	mov	r0, r7
 801f374:	3408      	adds	r4, #8
 801f376:	4619      	mov	r1, r3
 801f378:	e73f      	b.n	801f1fa <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xc>
 801f37a:	4291      	cmp	r1, r2
 801f37c:	d925      	bls.n	801f3ca <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1dc>
 801f37e:	f1a2 0310 	sub.w	r3, r2, #16
 801f382:	f9b3 c010 	ldrsh.w	ip, [r3, #16]
 801f386:	f9b3 7012 	ldrsh.w	r7, [r3, #18]
 801f38a:	f9b3 e00a 	ldrsh.w	lr, [r3, #10]
 801f38e:	f9b3 5008 	ldrsh.w	r5, [r3, #8]
 801f392:	eb0c 4607 	add.w	r6, ip, r7, lsl #16
 801f396:	eb05 450e 	add.w	r5, r5, lr, lsl #16
 801f39a:	42ae      	cmp	r6, r5
 801f39c:	da13      	bge.n	801f3c6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1d8>
 801f39e:	461d      	mov	r5, r3
 801f3a0:	f9b3 8014 	ldrsh.w	r8, [r3, #20]
 801f3a4:	f9b3 e016 	ldrsh.w	lr, [r3, #22]
 801f3a8:	3b08      	subs	r3, #8
 801f3aa:	f855 6f08 	ldr.w	r6, [r5, #8]!
 801f3ae:	619e      	str	r6, [r3, #24]
 801f3b0:	42a8      	cmp	r0, r5
 801f3b2:	686e      	ldr	r6, [r5, #4]
 801f3b4:	f8a3 c010 	strh.w	ip, [r3, #16]
 801f3b8:	61de      	str	r6, [r3, #28]
 801f3ba:	825f      	strh	r7, [r3, #18]
 801f3bc:	f8a3 8014 	strh.w	r8, [r3, #20]
 801f3c0:	f8a3 e016 	strh.w	lr, [r3, #22]
 801f3c4:	d1dd      	bne.n	801f382 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x194>
 801f3c6:	3208      	adds	r2, #8
 801f3c8:	e7d7      	b.n	801f37a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x18c>
 801f3ca:	466b      	mov	r3, sp
 801f3cc:	429c      	cmp	r4, r3
 801f3ce:	d903      	bls.n	801f3d8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1ea>
 801f3d0:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 801f3d4:	3c08      	subs	r4, #8
 801f3d6:	e710      	b.n	801f1fa <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xc>
 801f3d8:	b051      	add	sp, #324	; 0x144
 801f3da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f3de <_ZN8touchgfx7Outline9sortCellsEv>:
 801f3de:	6881      	ldr	r1, [r0, #8]
 801f3e0:	b111      	cbz	r1, 801f3e8 <_ZN8touchgfx7Outline9sortCellsEv+0xa>
 801f3e2:	68c0      	ldr	r0, [r0, #12]
 801f3e4:	f7ff bf03 	b.w	801f1ee <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 801f3e8:	4770      	bx	lr

0801f3ea <_ZN8touchgfx7Outline8getCellsEv>:
 801f3ea:	b510      	push	{r4, lr}
 801f3ec:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 801f3ee:	4604      	mov	r4, r0
 801f3f0:	07da      	lsls	r2, r3, #31
 801f3f2:	d507      	bpl.n	801f404 <_ZN8touchgfx7Outline8getCellsEv+0x1a>
 801f3f4:	e9d0 1209 	ldrd	r1, r2, [r0, #36]	; 0x24
 801f3f8:	f7ff fe82 	bl	801f100 <_ZN8touchgfx7Outline6lineToEii>
 801f3fc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801f3fe:	f023 0301 	bic.w	r3, r3, #1
 801f402:	63e3      	str	r3, [r4, #60]	; 0x3c
 801f404:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801f406:	079b      	lsls	r3, r3, #30
 801f408:	d51a      	bpl.n	801f440 <_ZN8touchgfx7Outline8getCellsEv+0x56>
 801f40a:	8b62      	ldrh	r2, [r4, #26]
 801f40c:	8b23      	ldrh	r3, [r4, #24]
 801f40e:	4313      	orrs	r3, r2
 801f410:	d00d      	beq.n	801f42e <_ZN8touchgfx7Outline8getCellsEv+0x44>
 801f412:	f9b4 3016 	ldrsh.w	r3, [r4, #22]
 801f416:	2b00      	cmp	r3, #0
 801f418:	db09      	blt.n	801f42e <_ZN8touchgfx7Outline8getCellsEv+0x44>
 801f41a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 801f41c:	4293      	cmp	r3, r2
 801f41e:	da06      	bge.n	801f42e <_ZN8touchgfx7Outline8getCellsEv+0x44>
 801f420:	e9d4 2301 	ldrd	r2, r3, [r4, #4]
 801f424:	429a      	cmp	r2, r3
 801f426:	d80d      	bhi.n	801f444 <_ZN8touchgfx7Outline8getCellsEv+0x5a>
 801f428:	2301      	movs	r3, #1
 801f42a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 801f42e:	68a0      	ldr	r0, [r4, #8]
 801f430:	b138      	cbz	r0, 801f442 <_ZN8touchgfx7Outline8getCellsEv+0x58>
 801f432:	4620      	mov	r0, r4
 801f434:	f7ff ffd3 	bl	801f3de <_ZN8touchgfx7Outline9sortCellsEv>
 801f438:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801f43a:	f023 0302 	bic.w	r3, r3, #2
 801f43e:	63e3      	str	r3, [r4, #60]	; 0x3c
 801f440:	68e0      	ldr	r0, [r4, #12]
 801f442:	bd10      	pop	{r4, pc}
 801f444:	f104 0314 	add.w	r3, r4, #20
 801f448:	6922      	ldr	r2, [r4, #16]
 801f44a:	cb03      	ldmia	r3!, {r0, r1}
 801f44c:	6010      	str	r0, [r2, #0]
 801f44e:	6051      	str	r1, [r2, #4]
 801f450:	6923      	ldr	r3, [r4, #16]
 801f452:	3308      	adds	r3, #8
 801f454:	6123      	str	r3, [r4, #16]
 801f456:	68a3      	ldr	r3, [r4, #8]
 801f458:	3301      	adds	r3, #1
 801f45a:	60a3      	str	r3, [r4, #8]
 801f45c:	e7e7      	b.n	801f42e <_ZN8touchgfx7Outline8getCellsEv+0x44>

0801f45e <_ZN8touchgfx8ScanlineD1Ev>:
 801f45e:	4770      	bx	lr

0801f460 <_ZN8touchgfx8ScanlineD0Ev>:
 801f460:	b510      	push	{r4, lr}
 801f462:	4604      	mov	r4, r0
 801f464:	2124      	movs	r1, #36	; 0x24
 801f466:	f000 f9da 	bl	801f81e <_ZdlPvj>
 801f46a:	4620      	mov	r0, r4
 801f46c:	bd10      	pop	{r4, pc}

0801f46e <_ZN8touchgfx8Scanline5resetEv>:
 801f46e:	b510      	push	{r4, lr}
 801f470:	4604      	mov	r4, r0
 801f472:	f7f0 fbe3 	bl	800fc3c <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCoversEv>
 801f476:	61a0      	str	r0, [r4, #24]
 801f478:	f7f0 fbe6 	bl	800fc48 <_ZN8touchgfx20CanvasWidgetRenderer23getScanlineStartIndicesEv>
 801f47c:	61e0      	str	r0, [r4, #28]
 801f47e:	f7f0 fbe9 	bl	800fc54 <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCountsEv>
 801f482:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801f486:	6220      	str	r0, [r4, #32]
 801f488:	6160      	str	r0, [r4, #20]
 801f48a:	e9c4 3301 	strd	r3, r3, [r4, #4]
 801f48e:	69e3      	ldr	r3, [r4, #28]
 801f490:	6123      	str	r3, [r4, #16]
 801f492:	2300      	movs	r3, #0
 801f494:	60e3      	str	r3, [r4, #12]
 801f496:	bd10      	pop	{r4, pc}

0801f498 <_ZN8touchgfx8ScanlineC1Ev>:
 801f498:	4b09      	ldr	r3, [pc, #36]	; (801f4c0 <_ZN8touchgfx8ScanlineC1Ev+0x28>)
 801f49a:	b510      	push	{r4, lr}
 801f49c:	6003      	str	r3, [r0, #0]
 801f49e:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801f4a2:	4604      	mov	r4, r0
 801f4a4:	e9c0 3301 	strd	r3, r3, [r0, #4]
 801f4a8:	2300      	movs	r3, #0
 801f4aa:	e9c0 3303 	strd	r3, r3, [r0, #12]
 801f4ae:	e9c0 3305 	strd	r3, r3, [r0, #20]
 801f4b2:	e9c0 3307 	strd	r3, r3, [r0, #28]
 801f4b6:	f7ff ffda 	bl	801f46e <_ZN8touchgfx8Scanline5resetEv>
 801f4ba:	4620      	mov	r0, r4
 801f4bc:	bd10      	pop	{r4, pc}
 801f4be:	bf00      	nop
 801f4c0:	08025878 	.word	0x08025878

0801f4c4 <_ZN8touchgfx8Scanline7addSpanEiijj>:
 801f4c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801f4c8:	1e0c      	subs	r4, r1, #0
 801f4ca:	4605      	mov	r5, r0
 801f4cc:	4617      	mov	r7, r2
 801f4ce:	461e      	mov	r6, r3
 801f4d0:	da03      	bge.n	801f4da <_ZN8touchgfx8Scanline7addSpanEiijj+0x16>
 801f4d2:	4426      	add	r6, r4
 801f4d4:	2e01      	cmp	r6, #1
 801f4d6:	d421      	bmi.n	801f51c <_ZN8touchgfx8Scanline7addSpanEiijj+0x58>
 801f4d8:	2400      	movs	r4, #0
 801f4da:	f7f0 fba9 	bl	800fc30 <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv>
 801f4de:	42a0      	cmp	r0, r4
 801f4e0:	dd1c      	ble.n	801f51c <_ZN8touchgfx8Scanline7addSpanEiijj+0x58>
 801f4e2:	eb04 0806 	add.w	r8, r4, r6
 801f4e6:	f7f0 fba3 	bl	800fc30 <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv>
 801f4ea:	4580      	cmp	r8, r0
 801f4ec:	d902      	bls.n	801f4f4 <_ZN8touchgfx8Scanline7addSpanEiijj+0x30>
 801f4ee:	f7f0 fb9f 	bl	800fc30 <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv>
 801f4f2:	1b06      	subs	r6, r0, r4
 801f4f4:	69a8      	ldr	r0, [r5, #24]
 801f4f6:	4632      	mov	r2, r6
 801f4f8:	f89d 1018 	ldrb.w	r1, [sp, #24]
 801f4fc:	4420      	add	r0, r4
 801f4fe:	f7f3 f9ef 	bl	80128e0 <_ZN8touchgfx6memsetEPvhm>
 801f502:	686b      	ldr	r3, [r5, #4]
 801f504:	b2b2      	uxth	r2, r6
 801f506:	3301      	adds	r3, #1
 801f508:	42a3      	cmp	r3, r4
 801f50a:	696b      	ldr	r3, [r5, #20]
 801f50c:	d108      	bne.n	801f520 <_ZN8touchgfx8Scanline7addSpanEiijj+0x5c>
 801f50e:	8819      	ldrh	r1, [r3, #0]
 801f510:	440a      	add	r2, r1
 801f512:	801a      	strh	r2, [r3, #0]
 801f514:	3c01      	subs	r4, #1
 801f516:	4434      	add	r4, r6
 801f518:	e9c5 4701 	strd	r4, r7, [r5, #4]
 801f51c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801f520:	1c99      	adds	r1, r3, #2
 801f522:	6169      	str	r1, [r5, #20]
 801f524:	805a      	strh	r2, [r3, #2]
 801f526:	692b      	ldr	r3, [r5, #16]
 801f528:	1c9a      	adds	r2, r3, #2
 801f52a:	612a      	str	r2, [r5, #16]
 801f52c:	805c      	strh	r4, [r3, #2]
 801f52e:	68eb      	ldr	r3, [r5, #12]
 801f530:	3301      	adds	r3, #1
 801f532:	60eb      	str	r3, [r5, #12]
 801f534:	e7ee      	b.n	801f514 <_ZN8touchgfx8Scanline7addSpanEiijj+0x50>

0801f536 <_ZN8touchgfx15RenderingBufferD1Ev>:
 801f536:	4770      	bx	lr

0801f538 <_ZN8touchgfx15RenderingBufferD0Ev>:
 801f538:	b510      	push	{r4, lr}
 801f53a:	4604      	mov	r4, r0
 801f53c:	2118      	movs	r1, #24
 801f53e:	f000 f96e 	bl	801f81e <_ZdlPvj>
 801f542:	4620      	mov	r0, r4
 801f544:	bd10      	pop	{r4, pc}
	...

0801f548 <_ZN8touchgfx15RenderingBufferC1Ev>:
 801f548:	4a04      	ldr	r2, [pc, #16]	; (801f55c <_ZN8touchgfx15RenderingBufferC1Ev+0x14>)
 801f54a:	6002      	str	r2, [r0, #0]
 801f54c:	2200      	movs	r2, #0
 801f54e:	6042      	str	r2, [r0, #4]
 801f550:	7202      	strb	r2, [r0, #8]
 801f552:	6142      	str	r2, [r0, #20]
 801f554:	e9c0 2203 	strd	r2, r2, [r0, #12]
 801f558:	4770      	bx	lr
 801f55a:	bf00      	nop
 801f55c:	08025888 	.word	0x08025888

0801f560 <_ZN8touchgfx15RenderingBuffer6attachEPhhjji>:
 801f560:	60c3      	str	r3, [r0, #12]
 801f562:	9b00      	ldr	r3, [sp, #0]
 801f564:	6041      	str	r1, [r0, #4]
 801f566:	6103      	str	r3, [r0, #16]
 801f568:	9b01      	ldr	r3, [sp, #4]
 801f56a:	7202      	strb	r2, [r0, #8]
 801f56c:	6143      	str	r3, [r0, #20]
 801f56e:	4770      	bx	lr

0801f570 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>:
 801f570:	b5f0      	push	{r4, r5, r6, r7, lr}
 801f572:	2300      	movs	r3, #0
 801f574:	b08d      	sub	sp, #52	; 0x34
 801f576:	f100 0640 	add.w	r6, r0, #64	; 0x40
 801f57a:	f101 0710 	add.w	r7, r1, #16
 801f57e:	9304      	str	r3, [sp, #16]
 801f580:	aa04      	add	r2, sp, #16
 801f582:	9305      	str	r3, [sp, #20]
 801f584:	9306      	str	r3, [sp, #24]
 801f586:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 801f58a:	9307      	str	r3, [sp, #28]
 801f58c:	4613      	mov	r3, r2
 801f58e:	460c      	mov	r4, r1
 801f590:	4605      	mov	r5, r0
 801f592:	eddf 7a0e 	vldr	s15, [pc, #56]	; 801f5cc <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x5c>
 801f596:	ecb4 7a01 	vldmia	r4!, {s14}
 801f59a:	ecf5 6a01 	vldmia	r5!, {s13}
 801f59e:	42bc      	cmp	r4, r7
 801f5a0:	eee6 7a87 	vfma.f32	s15, s13, s14
 801f5a4:	d1f7      	bne.n	801f596 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x26>
 801f5a6:	3010      	adds	r0, #16
 801f5a8:	ece2 7a01 	vstmia	r2!, {s15}
 801f5ac:	42b0      	cmp	r0, r6
 801f5ae:	d1ee      	bne.n	801f58e <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x1e>
 801f5b0:	ac0c      	add	r4, sp, #48	; 0x30
 801f5b2:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 801f5b4:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 801f5b8:	ed9d 0a08 	vldr	s0, [sp, #32]
 801f5bc:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 801f5c0:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 801f5c4:	eddd 1a0b 	vldr	s3, [sp, #44]	; 0x2c
 801f5c8:	b00d      	add	sp, #52	; 0x34
 801f5ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801f5cc:	00000000 	.word	0x00000000

0801f5d0 <_ZN8touchgfx9Matrix4x4C1Ev>:
 801f5d0:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 801f5d4:	2300      	movs	r3, #0
 801f5d6:	ed9f 7a09 	vldr	s14, [pc, #36]	; 801f5fc <_ZN8touchgfx9Matrix4x4C1Ev+0x2c>
 801f5da:	eb00 1103 	add.w	r1, r0, r3, lsl #4
 801f5de:	2200      	movs	r2, #0
 801f5e0:	4293      	cmp	r3, r2
 801f5e2:	f102 0201 	add.w	r2, r2, #1
 801f5e6:	fe47 6a87 	vseleq.f32	s13, s15, s14
 801f5ea:	2a04      	cmp	r2, #4
 801f5ec:	ece1 6a01 	vstmia	r1!, {s13}
 801f5f0:	d1f6      	bne.n	801f5e0 <_ZN8touchgfx9Matrix4x4C1Ev+0x10>
 801f5f2:	3301      	adds	r3, #1
 801f5f4:	2b04      	cmp	r3, #4
 801f5f6:	d1f0      	bne.n	801f5da <_ZN8touchgfx9Matrix4x4C1Ev+0xa>
 801f5f8:	4770      	bx	lr
 801f5fa:	bf00      	nop
 801f5fc:	00000000 	.word	0x00000000

0801f600 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>:
 801f600:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801f604:	460c      	mov	r4, r1
 801f606:	4605      	mov	r5, r0
 801f608:	4690      	mov	r8, r2
 801f60a:	f7ff ffe1 	bl	801f5d0 <_ZN8touchgfx9Matrix4x4C1Ev>
 801f60e:	4628      	mov	r0, r5
 801f610:	4621      	mov	r1, r4
 801f612:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 801f616:	2300      	movs	r3, #0
 801f618:	eb08 0603 	add.w	r6, r8, r3
 801f61c:	460f      	mov	r7, r1
 801f61e:	2400      	movs	r4, #0
 801f620:	eddf 7a0c 	vldr	s15, [pc, #48]	; 801f654 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x54>
 801f624:	4632      	mov	r2, r6
 801f626:	3401      	adds	r4, #1
 801f628:	ecf7 6a01 	vldmia	r7!, {s13}
 801f62c:	3610      	adds	r6, #16
 801f62e:	ed92 7a00 	vldr	s14, [r2]
 801f632:	2c04      	cmp	r4, #4
 801f634:	eee6 7a87 	vfma.f32	s15, s13, s14
 801f638:	d1f4      	bne.n	801f624 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x24>
 801f63a:	18c2      	adds	r2, r0, r3
 801f63c:	3304      	adds	r3, #4
 801f63e:	2b10      	cmp	r3, #16
 801f640:	edc2 7a00 	vstr	s15, [r2]
 801f644:	d1e8      	bne.n	801f618 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x18>
 801f646:	3110      	adds	r1, #16
 801f648:	3010      	adds	r0, #16
 801f64a:	4561      	cmp	r1, ip
 801f64c:	d1e3      	bne.n	801f616 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x16>
 801f64e:	4628      	mov	r0, r5
 801f650:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801f654:	00000000 	.word	0x00000000

0801f658 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>:
 801f658:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 801f65c:	f100 0320 	add.w	r3, r0, #32
 801f660:	3030      	adds	r0, #48	; 0x30
 801f662:	ee87 0a80 	vdiv.f32	s0, s15, s0
 801f666:	ecf3 7a01 	vldmia	r3!, {s15}
 801f66a:	4283      	cmp	r3, r0
 801f66c:	ee60 7a27 	vmul.f32	s15, s0, s15
 801f670:	edc3 7a03 	vstr	s15, [r3, #12]
 801f674:	d1f7      	bne.n	801f666 <_ZN8touchgfx9Matrix4x415setViewDistanceEf+0xe>
 801f676:	4770      	bx	lr

0801f678 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>:
 801f678:	b510      	push	{r4, lr}
 801f67a:	ed2d 8b02 	vpush	{d8}
 801f67e:	eef0 8a40 	vmov.f32	s17, s0
 801f682:	4604      	mov	r4, r0
 801f684:	f000 fa08 	bl	801fa98 <sinf>
 801f688:	eeb0 8a40 	vmov.f32	s16, s0
 801f68c:	eeb0 0a68 	vmov.f32	s0, s17
 801f690:	f000 f91a 	bl	801f8c8 <cosf>
 801f694:	eeb1 6a48 	vneg.f32	s12, s16
 801f698:	f104 0310 	add.w	r3, r4, #16
 801f69c:	f104 0220 	add.w	r2, r4, #32
 801f6a0:	edd3 7a04 	vldr	s15, [r3, #16]
 801f6a4:	edd3 6a00 	vldr	s13, [r3]
 801f6a8:	ee26 7a27 	vmul.f32	s14, s12, s15
 801f6ac:	ee67 7a80 	vmul.f32	s15, s15, s0
 801f6b0:	eea6 7a80 	vfma.f32	s14, s13, s0
 801f6b4:	eee6 7a88 	vfma.f32	s15, s13, s16
 801f6b8:	eca3 7a01 	vstmia	r3!, {s14}
 801f6bc:	429a      	cmp	r2, r3
 801f6be:	edc3 7a03 	vstr	s15, [r3, #12]
 801f6c2:	d1ed      	bne.n	801f6a0 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf+0x28>
 801f6c4:	4620      	mov	r0, r4
 801f6c6:	ecbd 8b02 	vpop	{d8}
 801f6ca:	bd10      	pop	{r4, pc}

0801f6cc <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>:
 801f6cc:	b510      	push	{r4, lr}
 801f6ce:	ed2d 8b02 	vpush	{d8}
 801f6d2:	eef0 8a40 	vmov.f32	s17, s0
 801f6d6:	4604      	mov	r4, r0
 801f6d8:	f000 f9de 	bl	801fa98 <sinf>
 801f6dc:	eeb0 8a40 	vmov.f32	s16, s0
 801f6e0:	eeb0 0a68 	vmov.f32	s0, s17
 801f6e4:	f000 f8f0 	bl	801f8c8 <cosf>
 801f6e8:	eeb1 6a48 	vneg.f32	s12, s16
 801f6ec:	4623      	mov	r3, r4
 801f6ee:	f104 0210 	add.w	r2, r4, #16
 801f6f2:	edd3 7a08 	vldr	s15, [r3, #32]
 801f6f6:	edd3 6a00 	vldr	s13, [r3]
 801f6fa:	ee27 7a88 	vmul.f32	s14, s15, s16
 801f6fe:	ee67 7a80 	vmul.f32	s15, s15, s0
 801f702:	eea6 7a80 	vfma.f32	s14, s13, s0
 801f706:	eee6 7a26 	vfma.f32	s15, s12, s13
 801f70a:	eca3 7a01 	vstmia	r3!, {s14}
 801f70e:	429a      	cmp	r2, r3
 801f710:	edc3 7a07 	vstr	s15, [r3, #28]
 801f714:	d1ed      	bne.n	801f6f2 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf+0x26>
 801f716:	4620      	mov	r0, r4
 801f718:	ecbd 8b02 	vpop	{d8}
 801f71c:	bd10      	pop	{r4, pc}

0801f71e <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>:
 801f71e:	b510      	push	{r4, lr}
 801f720:	ed2d 8b02 	vpush	{d8}
 801f724:	eef0 8a40 	vmov.f32	s17, s0
 801f728:	4604      	mov	r4, r0
 801f72a:	f000 f9b5 	bl	801fa98 <sinf>
 801f72e:	eeb0 8a40 	vmov.f32	s16, s0
 801f732:	eeb0 0a68 	vmov.f32	s0, s17
 801f736:	f000 f8c7 	bl	801f8c8 <cosf>
 801f73a:	eeb1 6a48 	vneg.f32	s12, s16
 801f73e:	4623      	mov	r3, r4
 801f740:	f104 0210 	add.w	r2, r4, #16
 801f744:	edd3 7a04 	vldr	s15, [r3, #16]
 801f748:	edd3 6a00 	vldr	s13, [r3]
 801f74c:	ee26 7a27 	vmul.f32	s14, s12, s15
 801f750:	ee67 7a80 	vmul.f32	s15, s15, s0
 801f754:	eea6 7a80 	vfma.f32	s14, s13, s0
 801f758:	eee6 7a88 	vfma.f32	s15, s13, s16
 801f75c:	eca3 7a01 	vstmia	r3!, {s14}
 801f760:	429a      	cmp	r2, r3
 801f762:	edc3 7a03 	vstr	s15, [r3, #12]
 801f766:	d1ed      	bne.n	801f744 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf+0x26>
 801f768:	4620      	mov	r0, r4
 801f76a:	ecbd 8b02 	vpop	{d8}
 801f76e:	bd10      	pop	{r4, pc}

0801f770 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>:
 801f770:	4603      	mov	r3, r0
 801f772:	f100 0210 	add.w	r2, r0, #16
 801f776:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 801f77a:	edd3 7a00 	vldr	s15, [r3]
 801f77e:	eee7 7a00 	vfma.f32	s15, s14, s0
 801f782:	ece3 7a01 	vstmia	r3!, {s15}
 801f786:	4293      	cmp	r3, r2
 801f788:	d1f5      	bne.n	801f776 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf+0x6>
 801f78a:	4770      	bx	lr

0801f78c <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>:
 801f78c:	f100 0310 	add.w	r3, r0, #16
 801f790:	f100 0220 	add.w	r2, r0, #32
 801f794:	ed93 7a08 	vldr	s14, [r3, #32]
 801f798:	edd3 7a00 	vldr	s15, [r3]
 801f79c:	eee7 7a00 	vfma.f32	s15, s14, s0
 801f7a0:	ece3 7a01 	vstmia	r3!, {s15}
 801f7a4:	4293      	cmp	r3, r2
 801f7a6:	d1f5      	bne.n	801f794 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf+0x8>
 801f7a8:	4770      	bx	lr

0801f7aa <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>:
 801f7aa:	f100 0320 	add.w	r3, r0, #32
 801f7ae:	f100 0230 	add.w	r2, r0, #48	; 0x30
 801f7b2:	ed93 7a04 	vldr	s14, [r3, #16]
 801f7b6:	edd3 7a00 	vldr	s15, [r3]
 801f7ba:	eee7 7a00 	vfma.f32	s15, s14, s0
 801f7be:	ece3 7a01 	vstmia	r3!, {s15}
 801f7c2:	4293      	cmp	r3, r2
 801f7c4:	d1f5      	bne.n	801f7b2 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf+0x8>
 801f7c6:	4770      	bx	lr

0801f7c8 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>:
 801f7c8:	4603      	mov	r3, r0
 801f7ca:	f100 0210 	add.w	r2, r0, #16
 801f7ce:	edd3 7a00 	vldr	s15, [r3]
 801f7d2:	ee67 7a80 	vmul.f32	s15, s15, s0
 801f7d6:	ece3 7a01 	vstmia	r3!, {s15}
 801f7da:	4293      	cmp	r3, r2
 801f7dc:	d1f7      	bne.n	801f7ce <_ZN8touchgfx9Matrix4x417concatenateXScaleEf+0x6>
 801f7de:	4770      	bx	lr

0801f7e0 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>:
 801f7e0:	f100 0310 	add.w	r3, r0, #16
 801f7e4:	f100 0220 	add.w	r2, r0, #32
 801f7e8:	edd3 7a00 	vldr	s15, [r3]
 801f7ec:	ee67 7a80 	vmul.f32	s15, s15, s0
 801f7f0:	ece3 7a01 	vstmia	r3!, {s15}
 801f7f4:	4293      	cmp	r3, r2
 801f7f6:	d1f7      	bne.n	801f7e8 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf+0x8>
 801f7f8:	4770      	bx	lr

0801f7fa <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>:
 801f7fa:	f100 0320 	add.w	r3, r0, #32
 801f7fe:	f100 0230 	add.w	r2, r0, #48	; 0x30
 801f802:	edd3 7a00 	vldr	s15, [r3]
 801f806:	ee67 7a80 	vmul.f32	s15, s15, s0
 801f80a:	ece3 7a01 	vstmia	r3!, {s15}
 801f80e:	4293      	cmp	r3, r2
 801f810:	d1f7      	bne.n	801f802 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf+0x8>
 801f812:	4770      	bx	lr

0801f814 <__aeabi_atexit>:
 801f814:	460b      	mov	r3, r1
 801f816:	4601      	mov	r1, r0
 801f818:	4618      	mov	r0, r3
 801f81a:	f000 ba01 	b.w	801fc20 <__cxa_atexit>

0801f81e <_ZdlPvj>:
 801f81e:	f000 b812 	b.w	801f846 <_ZdlPv>

0801f822 <__cxa_guard_acquire>:
 801f822:	6803      	ldr	r3, [r0, #0]
 801f824:	07db      	lsls	r3, r3, #31
 801f826:	d406      	bmi.n	801f836 <__cxa_guard_acquire+0x14>
 801f828:	7843      	ldrb	r3, [r0, #1]
 801f82a:	b103      	cbz	r3, 801f82e <__cxa_guard_acquire+0xc>
 801f82c:	deff      	udf	#255	; 0xff
 801f82e:	2301      	movs	r3, #1
 801f830:	7043      	strb	r3, [r0, #1]
 801f832:	4618      	mov	r0, r3
 801f834:	4770      	bx	lr
 801f836:	2000      	movs	r0, #0
 801f838:	4770      	bx	lr

0801f83a <__cxa_guard_release>:
 801f83a:	2301      	movs	r3, #1
 801f83c:	6003      	str	r3, [r0, #0]
 801f83e:	4770      	bx	lr

0801f840 <__cxa_pure_virtual>:
 801f840:	b508      	push	{r3, lr}
 801f842:	f000 f80f 	bl	801f864 <_ZSt9terminatev>

0801f846 <_ZdlPv>:
 801f846:	f000 ba3d 	b.w	801fcc4 <free>

0801f84a <_ZN10__cxxabiv111__terminateEPFvvE>:
 801f84a:	b508      	push	{r3, lr}
 801f84c:	4780      	blx	r0
 801f84e:	f000 f9bb 	bl	801fbc8 <abort>
	...

0801f854 <_ZSt13get_terminatev>:
 801f854:	4b02      	ldr	r3, [pc, #8]	; (801f860 <_ZSt13get_terminatev+0xc>)
 801f856:	6818      	ldr	r0, [r3, #0]
 801f858:	f3bf 8f5b 	dmb	ish
 801f85c:	4770      	bx	lr
 801f85e:	bf00      	nop
 801f860:	240000b0 	.word	0x240000b0

0801f864 <_ZSt9terminatev>:
 801f864:	b508      	push	{r3, lr}
 801f866:	f7ff fff5 	bl	801f854 <_ZSt13get_terminatev>
 801f86a:	f7ff ffee 	bl	801f84a <_ZN10__cxxabiv111__terminateEPFvvE>

0801f86e <sinf_poly>:
 801f86e:	07cb      	lsls	r3, r1, #31
 801f870:	d412      	bmi.n	801f898 <sinf_poly+0x2a>
 801f872:	ee21 5b00 	vmul.f64	d5, d1, d0
 801f876:	ed90 6b1a 	vldr	d6, [r0, #104]	; 0x68
 801f87a:	ed90 7b18 	vldr	d7, [r0, #96]	; 0x60
 801f87e:	eea6 7b01 	vfma.f64	d7, d6, d1
 801f882:	ed90 6b16 	vldr	d6, [r0, #88]	; 0x58
 801f886:	ee21 1b05 	vmul.f64	d1, d1, d5
 801f88a:	eea6 0b05 	vfma.f64	d0, d6, d5
 801f88e:	eea7 0b01 	vfma.f64	d0, d7, d1
 801f892:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
 801f896:	4770      	bx	lr
 801f898:	ed90 6b14 	vldr	d6, [r0, #80]	; 0x50
 801f89c:	ee21 5b01 	vmul.f64	d5, d1, d1
 801f8a0:	ed90 7b12 	vldr	d7, [r0, #72]	; 0x48
 801f8a4:	ed90 0b0c 	vldr	d0, [r0, #48]	; 0x30
 801f8a8:	eea1 7b06 	vfma.f64	d7, d1, d6
 801f8ac:	ed90 6b0e 	vldr	d6, [r0, #56]	; 0x38
 801f8b0:	eea1 0b06 	vfma.f64	d0, d1, d6
 801f8b4:	ed90 6b10 	vldr	d6, [r0, #64]	; 0x40
 801f8b8:	ee21 1b05 	vmul.f64	d1, d1, d5
 801f8bc:	eea5 0b06 	vfma.f64	d0, d5, d6
 801f8c0:	e7e5      	b.n	801f88e <sinf_poly+0x20>
 801f8c2:	0000      	movs	r0, r0
 801f8c4:	0000      	movs	r0, r0
	...

0801f8c8 <cosf>:
 801f8c8:	b538      	push	{r3, r4, r5, lr}
 801f8ca:	ee10 4a10 	vmov	r4, s0
 801f8ce:	f3c4 530a 	ubfx	r3, r4, #20, #11
 801f8d2:	f5b3 7f7d 	cmp.w	r3, #1012	; 0x3f4
 801f8d6:	eeb7 7ac0 	vcvt.f64.f32	d7, s0
 801f8da:	d21f      	bcs.n	801f91c <cosf+0x54>
 801f8dc:	ee27 0b07 	vmul.f64	d0, d7, d7
 801f8e0:	f5b3 7f66 	cmp.w	r3, #920	; 0x398
 801f8e4:	f0c0 8088 	bcc.w	801f9f8 <cosf+0x130>
 801f8e8:	ee20 4b00 	vmul.f64	d4, d0, d0
 801f8ec:	4b46      	ldr	r3, [pc, #280]	; (801fa08 <cosf+0x140>)
 801f8ee:	ed93 5b14 	vldr	d5, [r3, #80]	; 0x50
 801f8f2:	ed93 6b12 	vldr	d6, [r3, #72]	; 0x48
 801f8f6:	ed93 7b0c 	vldr	d7, [r3, #48]	; 0x30
 801f8fa:	eea0 6b05 	vfma.f64	d6, d0, d5
 801f8fe:	ed93 5b0e 	vldr	d5, [r3, #56]	; 0x38
 801f902:	eea0 7b05 	vfma.f64	d7, d0, d5
 801f906:	ed93 5b10 	vldr	d5, [r3, #64]	; 0x40
 801f90a:	ee20 0b04 	vmul.f64	d0, d0, d4
 801f90e:	eea4 7b05 	vfma.f64	d7, d4, d5
 801f912:	eea6 7b00 	vfma.f64	d7, d6, d0
 801f916:	eeb7 0bc7 	vcvt.f32.f64	s0, d7
 801f91a:	bd38      	pop	{r3, r4, r5, pc}
 801f91c:	f240 422e 	movw	r2, #1070	; 0x42e
 801f920:	4293      	cmp	r3, r2
 801f922:	d82b      	bhi.n	801f97c <cosf+0xb4>
 801f924:	4b38      	ldr	r3, [pc, #224]	; (801fa08 <cosf+0x140>)
 801f926:	ed93 6b08 	vldr	d6, [r3, #32]
 801f92a:	ee27 6b06 	vmul.f64	d6, d7, d6
 801f92e:	eefd 6bc6 	vcvt.s32.f64	s13, d6
 801f932:	f103 0070 	add.w	r0, r3, #112	; 0x70
 801f936:	ee16 1a90 	vmov	r1, s13
 801f93a:	f501 0100 	add.w	r1, r1, #8388608	; 0x800000
 801f93e:	1609      	asrs	r1, r1, #24
 801f940:	ee06 1a90 	vmov	s13, r1
 801f944:	eeb8 5be6 	vcvt.f64.s32	d5, s13
 801f948:	ed93 6b0a 	vldr	d6, [r3, #40]	; 0x28
 801f94c:	f001 0203 	and.w	r2, r1, #3
 801f950:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
 801f954:	eea5 7b46 	vfms.f64	d7, d5, d6
 801f958:	eeb0 0b47 	vmov.f64	d0, d7
 801f95c:	ed92 7b00 	vldr	d7, [r2]
 801f960:	ee20 1b00 	vmul.f64	d1, d0, d0
 801f964:	f011 0f02 	tst.w	r1, #2
 801f968:	bf08      	it	eq
 801f96a:	4618      	moveq	r0, r3
 801f96c:	f081 0101 	eor.w	r1, r1, #1
 801f970:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801f974:	ee20 0b07 	vmul.f64	d0, d0, d7
 801f978:	f7ff bf79 	b.w	801f86e <sinf_poly>
 801f97c:	f5b3 6fff 	cmp.w	r3, #2040	; 0x7f8
 801f980:	d236      	bcs.n	801f9f0 <cosf+0x128>
 801f982:	4a22      	ldr	r2, [pc, #136]	; (801fa0c <cosf+0x144>)
 801f984:	f3c4 6183 	ubfx	r1, r4, #26, #4
 801f988:	eb02 0581 	add.w	r5, r2, r1, lsl #2
 801f98c:	f3c4 0316 	ubfx	r3, r4, #0, #23
 801f990:	f3c4 50c2 	ubfx	r0, r4, #23, #3
 801f994:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 801f998:	4083      	lsls	r3, r0
 801f99a:	6a28      	ldr	r0, [r5, #32]
 801f99c:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 801f9a0:	fba3 1000 	umull	r1, r0, r3, r0
 801f9a4:	6929      	ldr	r1, [r5, #16]
 801f9a6:	435a      	muls	r2, r3
 801f9a8:	fbe3 0201 	umlal	r0, r2, r3, r1
 801f9ac:	f102 5100 	add.w	r1, r2, #536870912	; 0x20000000
 801f9b0:	0f8d      	lsrs	r5, r1, #30
 801f9b2:	f001 4140 	and.w	r1, r1, #3221225472	; 0xc0000000
 801f9b6:	1a51      	subs	r1, r2, r1
 801f9b8:	f7e0 fe70 	bl	800069c <__aeabi_l2d>
 801f9bc:	eb05 74d4 	add.w	r4, r5, r4, lsr #31
 801f9c0:	4b11      	ldr	r3, [pc, #68]	; (801fa08 <cosf+0x140>)
 801f9c2:	ed9f 7b0f 	vldr	d7, [pc, #60]	; 801fa00 <cosf+0x138>
 801f9c6:	ec41 0b16 	vmov	d6, r0, r1
 801f9ca:	f004 0203 	and.w	r2, r4, #3
 801f9ce:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
 801f9d2:	f014 0f02 	tst.w	r4, #2
 801f9d6:	f103 0070 	add.w	r0, r3, #112	; 0x70
 801f9da:	ee26 7b07 	vmul.f64	d7, d6, d7
 801f9de:	ed92 0b00 	vldr	d0, [r2]
 801f9e2:	ee27 1b07 	vmul.f64	d1, d7, d7
 801f9e6:	f085 0101 	eor.w	r1, r5, #1
 801f9ea:	bf08      	it	eq
 801f9ec:	4618      	moveq	r0, r3
 801f9ee:	e7bf      	b.n	801f970 <cosf+0xa8>
 801f9f0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801f9f4:	f000 b817 	b.w	801fa26 <__math_invalidf>
 801f9f8:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 801f9fc:	e78d      	b.n	801f91a <cosf+0x52>
 801f9fe:	bf00      	nop
 801fa00:	54442d18 	.word	0x54442d18
 801fa04:	3c1921fb 	.word	0x3c1921fb
 801fa08:	080258f0 	.word	0x080258f0
 801fa0c:	08025890 	.word	0x08025890

0801fa10 <with_errnof>:
 801fa10:	b513      	push	{r0, r1, r4, lr}
 801fa12:	4604      	mov	r4, r0
 801fa14:	ed8d 0a01 	vstr	s0, [sp, #4]
 801fa18:	f000 f910 	bl	801fc3c <__errno>
 801fa1c:	ed9d 0a01 	vldr	s0, [sp, #4]
 801fa20:	6004      	str	r4, [r0, #0]
 801fa22:	b002      	add	sp, #8
 801fa24:	bd10      	pop	{r4, pc}

0801fa26 <__math_invalidf>:
 801fa26:	eef0 7a40 	vmov.f32	s15, s0
 801fa2a:	ee30 7a40 	vsub.f32	s14, s0, s0
 801fa2e:	eef4 7a67 	vcmp.f32	s15, s15
 801fa32:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fa36:	ee87 0a07 	vdiv.f32	s0, s14, s14
 801fa3a:	d602      	bvs.n	801fa42 <__math_invalidf+0x1c>
 801fa3c:	2021      	movs	r0, #33	; 0x21
 801fa3e:	f7ff bfe7 	b.w	801fa10 <with_errnof>
 801fa42:	4770      	bx	lr

0801fa44 <sinf_poly>:
 801fa44:	07cb      	lsls	r3, r1, #31
 801fa46:	d412      	bmi.n	801fa6e <sinf_poly+0x2a>
 801fa48:	ee21 5b00 	vmul.f64	d5, d1, d0
 801fa4c:	ed90 6b1a 	vldr	d6, [r0, #104]	; 0x68
 801fa50:	ed90 7b18 	vldr	d7, [r0, #96]	; 0x60
 801fa54:	eea6 7b01 	vfma.f64	d7, d6, d1
 801fa58:	ed90 6b16 	vldr	d6, [r0, #88]	; 0x58
 801fa5c:	ee21 1b05 	vmul.f64	d1, d1, d5
 801fa60:	eea6 0b05 	vfma.f64	d0, d6, d5
 801fa64:	eea7 0b01 	vfma.f64	d0, d7, d1
 801fa68:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
 801fa6c:	4770      	bx	lr
 801fa6e:	ed90 6b14 	vldr	d6, [r0, #80]	; 0x50
 801fa72:	ee21 5b01 	vmul.f64	d5, d1, d1
 801fa76:	ed90 7b12 	vldr	d7, [r0, #72]	; 0x48
 801fa7a:	ed90 0b0c 	vldr	d0, [r0, #48]	; 0x30
 801fa7e:	eea1 7b06 	vfma.f64	d7, d1, d6
 801fa82:	ed90 6b0e 	vldr	d6, [r0, #56]	; 0x38
 801fa86:	eea1 0b06 	vfma.f64	d0, d1, d6
 801fa8a:	ed90 6b10 	vldr	d6, [r0, #64]	; 0x40
 801fa8e:	ee21 1b05 	vmul.f64	d1, d1, d5
 801fa92:	eea5 0b06 	vfma.f64	d0, d5, d6
 801fa96:	e7e5      	b.n	801fa64 <sinf_poly+0x20>

0801fa98 <sinf>:
 801fa98:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801fa9a:	ee10 4a10 	vmov	r4, s0
 801fa9e:	f3c4 530a 	ubfx	r3, r4, #20, #11
 801faa2:	f5b3 7f7d 	cmp.w	r3, #1012	; 0x3f4
 801faa6:	eeb7 6ac0 	vcvt.f64.f32	d6, s0
 801faaa:	eef0 7a40 	vmov.f32	s15, s0
 801faae:	ea4f 5214 	mov.w	r2, r4, lsr #20
 801fab2:	d218      	bcs.n	801fae6 <sinf+0x4e>
 801fab4:	ee26 1b06 	vmul.f64	d1, d6, d6
 801fab8:	f5b3 7f66 	cmp.w	r3, #920	; 0x398
 801fabc:	d20a      	bcs.n	801fad4 <sinf+0x3c>
 801fabe:	f412 6fff 	tst.w	r2, #2040	; 0x7f8
 801fac2:	d103      	bne.n	801facc <sinf+0x34>
 801fac4:	eeb7 1bc1 	vcvt.f32.f64	s2, d1
 801fac8:	ed8d 1a01 	vstr	s2, [sp, #4]
 801facc:	eeb0 0a67 	vmov.f32	s0, s15
 801fad0:	b003      	add	sp, #12
 801fad2:	bd30      	pop	{r4, r5, pc}
 801fad4:	483a      	ldr	r0, [pc, #232]	; (801fbc0 <sinf+0x128>)
 801fad6:	eeb0 0b46 	vmov.f64	d0, d6
 801fada:	2100      	movs	r1, #0
 801fadc:	b003      	add	sp, #12
 801fade:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801fae2:	f7ff bfaf 	b.w	801fa44 <sinf_poly>
 801fae6:	f240 422e 	movw	r2, #1070	; 0x42e
 801faea:	4293      	cmp	r3, r2
 801faec:	d824      	bhi.n	801fb38 <sinf+0xa0>
 801faee:	4b34      	ldr	r3, [pc, #208]	; (801fbc0 <sinf+0x128>)
 801faf0:	ed93 7b08 	vldr	d7, [r3, #32]
 801faf4:	ee26 7b07 	vmul.f64	d7, d6, d7
 801faf8:	eefd 7bc7 	vcvt.s32.f64	s15, d7
 801fafc:	f103 0070 	add.w	r0, r3, #112	; 0x70
 801fb00:	ee17 1a90 	vmov	r1, s15
 801fb04:	f501 0100 	add.w	r1, r1, #8388608	; 0x800000
 801fb08:	1609      	asrs	r1, r1, #24
 801fb0a:	ee07 1a90 	vmov	s15, r1
 801fb0e:	f001 0203 	and.w	r2, r1, #3
 801fb12:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
 801fb16:	eeb8 5be7 	vcvt.f64.s32	d5, s15
 801fb1a:	ed92 0b00 	vldr	d0, [r2]
 801fb1e:	ed93 7b0a 	vldr	d7, [r3, #40]	; 0x28
 801fb22:	f011 0f02 	tst.w	r1, #2
 801fb26:	eea5 6b47 	vfms.f64	d6, d5, d7
 801fb2a:	bf08      	it	eq
 801fb2c:	4618      	moveq	r0, r3
 801fb2e:	ee26 1b06 	vmul.f64	d1, d6, d6
 801fb32:	ee20 0b06 	vmul.f64	d0, d0, d6
 801fb36:	e7d1      	b.n	801fadc <sinf+0x44>
 801fb38:	f5b3 6fff 	cmp.w	r3, #2040	; 0x7f8
 801fb3c:	d237      	bcs.n	801fbae <sinf+0x116>
 801fb3e:	4a21      	ldr	r2, [pc, #132]	; (801fbc4 <sinf+0x12c>)
 801fb40:	f3c4 6183 	ubfx	r1, r4, #26, #4
 801fb44:	eb02 0581 	add.w	r5, r2, r1, lsl #2
 801fb48:	f3c4 0316 	ubfx	r3, r4, #0, #23
 801fb4c:	f3c4 50c2 	ubfx	r0, r4, #23, #3
 801fb50:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 801fb54:	4083      	lsls	r3, r0
 801fb56:	6a28      	ldr	r0, [r5, #32]
 801fb58:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 801fb5c:	fba3 1000 	umull	r1, r0, r3, r0
 801fb60:	6929      	ldr	r1, [r5, #16]
 801fb62:	435a      	muls	r2, r3
 801fb64:	fbe3 0201 	umlal	r0, r2, r3, r1
 801fb68:	f102 5100 	add.w	r1, r2, #536870912	; 0x20000000
 801fb6c:	0f8d      	lsrs	r5, r1, #30
 801fb6e:	f001 4140 	and.w	r1, r1, #3221225472	; 0xc0000000
 801fb72:	1a51      	subs	r1, r2, r1
 801fb74:	f7e0 fd92 	bl	800069c <__aeabi_l2d>
 801fb78:	eb05 74d4 	add.w	r4, r5, r4, lsr #31
 801fb7c:	4b10      	ldr	r3, [pc, #64]	; (801fbc0 <sinf+0x128>)
 801fb7e:	f004 0203 	and.w	r2, r4, #3
 801fb82:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
 801fb86:	ed9f 7b0c 	vldr	d7, [pc, #48]	; 801fbb8 <sinf+0x120>
 801fb8a:	ed92 0b00 	vldr	d0, [r2]
 801fb8e:	ec41 0b16 	vmov	d6, r0, r1
 801fb92:	f014 0f02 	tst.w	r4, #2
 801fb96:	ee26 7b07 	vmul.f64	d7, d6, d7
 801fb9a:	f103 0070 	add.w	r0, r3, #112	; 0x70
 801fb9e:	4629      	mov	r1, r5
 801fba0:	bf08      	it	eq
 801fba2:	4618      	moveq	r0, r3
 801fba4:	ee27 1b07 	vmul.f64	d1, d7, d7
 801fba8:	ee20 0b07 	vmul.f64	d0, d0, d7
 801fbac:	e796      	b.n	801fadc <sinf+0x44>
 801fbae:	b003      	add	sp, #12
 801fbb0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801fbb4:	f7ff bf37 	b.w	801fa26 <__math_invalidf>
 801fbb8:	54442d18 	.word	0x54442d18
 801fbbc:	3c1921fb 	.word	0x3c1921fb
 801fbc0:	080258f0 	.word	0x080258f0
 801fbc4:	08025890 	.word	0x08025890

0801fbc8 <abort>:
 801fbc8:	b508      	push	{r3, lr}
 801fbca:	2006      	movs	r0, #6
 801fbcc:	f000 fc9e 	bl	802050c <raise>
 801fbd0:	2001      	movs	r0, #1
 801fbd2:	f7e1 fc73 	bl	80014bc <_exit>
	...

0801fbd8 <__assert_func>:
 801fbd8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801fbda:	4614      	mov	r4, r2
 801fbdc:	461a      	mov	r2, r3
 801fbde:	4b09      	ldr	r3, [pc, #36]	; (801fc04 <__assert_func+0x2c>)
 801fbe0:	681b      	ldr	r3, [r3, #0]
 801fbe2:	4605      	mov	r5, r0
 801fbe4:	68d8      	ldr	r0, [r3, #12]
 801fbe6:	b14c      	cbz	r4, 801fbfc <__assert_func+0x24>
 801fbe8:	4b07      	ldr	r3, [pc, #28]	; (801fc08 <__assert_func+0x30>)
 801fbea:	9100      	str	r1, [sp, #0]
 801fbec:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801fbf0:	4906      	ldr	r1, [pc, #24]	; (801fc0c <__assert_func+0x34>)
 801fbf2:	462b      	mov	r3, r5
 801fbf4:	f000 f828 	bl	801fc48 <fiprintf>
 801fbf8:	f7ff ffe6 	bl	801fbc8 <abort>
 801fbfc:	4b04      	ldr	r3, [pc, #16]	; (801fc10 <__assert_func+0x38>)
 801fbfe:	461c      	mov	r4, r3
 801fc00:	e7f3      	b.n	801fbea <__assert_func+0x12>
 801fc02:	bf00      	nop
 801fc04:	240000b4 	.word	0x240000b4
 801fc08:	080259d0 	.word	0x080259d0
 801fc0c:	080259dd 	.word	0x080259dd
 801fc10:	08025a0b 	.word	0x08025a0b

0801fc14 <atexit>:
 801fc14:	2300      	movs	r3, #0
 801fc16:	4601      	mov	r1, r0
 801fc18:	461a      	mov	r2, r3
 801fc1a:	4618      	mov	r0, r3
 801fc1c:	f000 bd52 	b.w	80206c4 <__register_exitproc>

0801fc20 <__cxa_atexit>:
 801fc20:	b510      	push	{r4, lr}
 801fc22:	4c05      	ldr	r4, [pc, #20]	; (801fc38 <__cxa_atexit+0x18>)
 801fc24:	4613      	mov	r3, r2
 801fc26:	b12c      	cbz	r4, 801fc34 <__cxa_atexit+0x14>
 801fc28:	460a      	mov	r2, r1
 801fc2a:	4601      	mov	r1, r0
 801fc2c:	2002      	movs	r0, #2
 801fc2e:	f000 fd49 	bl	80206c4 <__register_exitproc>
 801fc32:	bd10      	pop	{r4, pc}
 801fc34:	4620      	mov	r0, r4
 801fc36:	e7fc      	b.n	801fc32 <__cxa_atexit+0x12>
 801fc38:	080206c5 	.word	0x080206c5

0801fc3c <__errno>:
 801fc3c:	4b01      	ldr	r3, [pc, #4]	; (801fc44 <__errno+0x8>)
 801fc3e:	6818      	ldr	r0, [r3, #0]
 801fc40:	4770      	bx	lr
 801fc42:	bf00      	nop
 801fc44:	240000b4 	.word	0x240000b4

0801fc48 <fiprintf>:
 801fc48:	b40e      	push	{r1, r2, r3}
 801fc4a:	b503      	push	{r0, r1, lr}
 801fc4c:	4601      	mov	r1, r0
 801fc4e:	ab03      	add	r3, sp, #12
 801fc50:	4805      	ldr	r0, [pc, #20]	; (801fc68 <fiprintf+0x20>)
 801fc52:	f853 2b04 	ldr.w	r2, [r3], #4
 801fc56:	6800      	ldr	r0, [r0, #0]
 801fc58:	9301      	str	r3, [sp, #4]
 801fc5a:	f000 f95b 	bl	801ff14 <_vfiprintf_r>
 801fc5e:	b002      	add	sp, #8
 801fc60:	f85d eb04 	ldr.w	lr, [sp], #4
 801fc64:	b003      	add	sp, #12
 801fc66:	4770      	bx	lr
 801fc68:	240000b4 	.word	0x240000b4

0801fc6c <__libc_init_array>:
 801fc6c:	b570      	push	{r4, r5, r6, lr}
 801fc6e:	4d0d      	ldr	r5, [pc, #52]	; (801fca4 <__libc_init_array+0x38>)
 801fc70:	4c0d      	ldr	r4, [pc, #52]	; (801fca8 <__libc_init_array+0x3c>)
 801fc72:	1b64      	subs	r4, r4, r5
 801fc74:	10a4      	asrs	r4, r4, #2
 801fc76:	2600      	movs	r6, #0
 801fc78:	42a6      	cmp	r6, r4
 801fc7a:	d109      	bne.n	801fc90 <__libc_init_array+0x24>
 801fc7c:	4d0b      	ldr	r5, [pc, #44]	; (801fcac <__libc_init_array+0x40>)
 801fc7e:	4c0c      	ldr	r4, [pc, #48]	; (801fcb0 <__libc_init_array+0x44>)
 801fc80:	f001 f85a 	bl	8020d38 <_init>
 801fc84:	1b64      	subs	r4, r4, r5
 801fc86:	10a4      	asrs	r4, r4, #2
 801fc88:	2600      	movs	r6, #0
 801fc8a:	42a6      	cmp	r6, r4
 801fc8c:	d105      	bne.n	801fc9a <__libc_init_array+0x2e>
 801fc8e:	bd70      	pop	{r4, r5, r6, pc}
 801fc90:	f855 3b04 	ldr.w	r3, [r5], #4
 801fc94:	4798      	blx	r3
 801fc96:	3601      	adds	r6, #1
 801fc98:	e7ee      	b.n	801fc78 <__libc_init_array+0xc>
 801fc9a:	f855 3b04 	ldr.w	r3, [r5], #4
 801fc9e:	4798      	blx	r3
 801fca0:	3601      	adds	r6, #1
 801fca2:	e7f2      	b.n	801fc8a <__libc_init_array+0x1e>
 801fca4:	080335f0 	.word	0x080335f0
 801fca8:	080335f0 	.word	0x080335f0
 801fcac:	080335f0 	.word	0x080335f0
 801fcb0:	08033608 	.word	0x08033608

0801fcb4 <malloc>:
 801fcb4:	4b02      	ldr	r3, [pc, #8]	; (801fcc0 <malloc+0xc>)
 801fcb6:	4601      	mov	r1, r0
 801fcb8:	6818      	ldr	r0, [r3, #0]
 801fcba:	f000 b88d 	b.w	801fdd8 <_malloc_r>
 801fcbe:	bf00      	nop
 801fcc0:	240000b4 	.word	0x240000b4

0801fcc4 <free>:
 801fcc4:	4b02      	ldr	r3, [pc, #8]	; (801fcd0 <free+0xc>)
 801fcc6:	4601      	mov	r1, r0
 801fcc8:	6818      	ldr	r0, [r3, #0]
 801fcca:	f000 b819 	b.w	801fd00 <_free_r>
 801fcce:	bf00      	nop
 801fcd0:	240000b4 	.word	0x240000b4

0801fcd4 <memcpy>:
 801fcd4:	440a      	add	r2, r1
 801fcd6:	4291      	cmp	r1, r2
 801fcd8:	f100 33ff 	add.w	r3, r0, #4294967295
 801fcdc:	d100      	bne.n	801fce0 <memcpy+0xc>
 801fcde:	4770      	bx	lr
 801fce0:	b510      	push	{r4, lr}
 801fce2:	f811 4b01 	ldrb.w	r4, [r1], #1
 801fce6:	f803 4f01 	strb.w	r4, [r3, #1]!
 801fcea:	4291      	cmp	r1, r2
 801fcec:	d1f9      	bne.n	801fce2 <memcpy+0xe>
 801fcee:	bd10      	pop	{r4, pc}

0801fcf0 <memset>:
 801fcf0:	4402      	add	r2, r0
 801fcf2:	4603      	mov	r3, r0
 801fcf4:	4293      	cmp	r3, r2
 801fcf6:	d100      	bne.n	801fcfa <memset+0xa>
 801fcf8:	4770      	bx	lr
 801fcfa:	f803 1b01 	strb.w	r1, [r3], #1
 801fcfe:	e7f9      	b.n	801fcf4 <memset+0x4>

0801fd00 <_free_r>:
 801fd00:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801fd02:	2900      	cmp	r1, #0
 801fd04:	d044      	beq.n	801fd90 <_free_r+0x90>
 801fd06:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801fd0a:	9001      	str	r0, [sp, #4]
 801fd0c:	2b00      	cmp	r3, #0
 801fd0e:	f1a1 0404 	sub.w	r4, r1, #4
 801fd12:	bfb8      	it	lt
 801fd14:	18e4      	addlt	r4, r4, r3
 801fd16:	f000 ff57 	bl	8020bc8 <__malloc_lock>
 801fd1a:	4a1e      	ldr	r2, [pc, #120]	; (801fd94 <_free_r+0x94>)
 801fd1c:	9801      	ldr	r0, [sp, #4]
 801fd1e:	6813      	ldr	r3, [r2, #0]
 801fd20:	b933      	cbnz	r3, 801fd30 <_free_r+0x30>
 801fd22:	6063      	str	r3, [r4, #4]
 801fd24:	6014      	str	r4, [r2, #0]
 801fd26:	b003      	add	sp, #12
 801fd28:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801fd2c:	f000 bf52 	b.w	8020bd4 <__malloc_unlock>
 801fd30:	42a3      	cmp	r3, r4
 801fd32:	d908      	bls.n	801fd46 <_free_r+0x46>
 801fd34:	6825      	ldr	r5, [r4, #0]
 801fd36:	1961      	adds	r1, r4, r5
 801fd38:	428b      	cmp	r3, r1
 801fd3a:	bf01      	itttt	eq
 801fd3c:	6819      	ldreq	r1, [r3, #0]
 801fd3e:	685b      	ldreq	r3, [r3, #4]
 801fd40:	1949      	addeq	r1, r1, r5
 801fd42:	6021      	streq	r1, [r4, #0]
 801fd44:	e7ed      	b.n	801fd22 <_free_r+0x22>
 801fd46:	461a      	mov	r2, r3
 801fd48:	685b      	ldr	r3, [r3, #4]
 801fd4a:	b10b      	cbz	r3, 801fd50 <_free_r+0x50>
 801fd4c:	42a3      	cmp	r3, r4
 801fd4e:	d9fa      	bls.n	801fd46 <_free_r+0x46>
 801fd50:	6811      	ldr	r1, [r2, #0]
 801fd52:	1855      	adds	r5, r2, r1
 801fd54:	42a5      	cmp	r5, r4
 801fd56:	d10b      	bne.n	801fd70 <_free_r+0x70>
 801fd58:	6824      	ldr	r4, [r4, #0]
 801fd5a:	4421      	add	r1, r4
 801fd5c:	1854      	adds	r4, r2, r1
 801fd5e:	42a3      	cmp	r3, r4
 801fd60:	6011      	str	r1, [r2, #0]
 801fd62:	d1e0      	bne.n	801fd26 <_free_r+0x26>
 801fd64:	681c      	ldr	r4, [r3, #0]
 801fd66:	685b      	ldr	r3, [r3, #4]
 801fd68:	6053      	str	r3, [r2, #4]
 801fd6a:	4421      	add	r1, r4
 801fd6c:	6011      	str	r1, [r2, #0]
 801fd6e:	e7da      	b.n	801fd26 <_free_r+0x26>
 801fd70:	d902      	bls.n	801fd78 <_free_r+0x78>
 801fd72:	230c      	movs	r3, #12
 801fd74:	6003      	str	r3, [r0, #0]
 801fd76:	e7d6      	b.n	801fd26 <_free_r+0x26>
 801fd78:	6825      	ldr	r5, [r4, #0]
 801fd7a:	1961      	adds	r1, r4, r5
 801fd7c:	428b      	cmp	r3, r1
 801fd7e:	bf04      	itt	eq
 801fd80:	6819      	ldreq	r1, [r3, #0]
 801fd82:	685b      	ldreq	r3, [r3, #4]
 801fd84:	6063      	str	r3, [r4, #4]
 801fd86:	bf04      	itt	eq
 801fd88:	1949      	addeq	r1, r1, r5
 801fd8a:	6021      	streq	r1, [r4, #0]
 801fd8c:	6054      	str	r4, [r2, #4]
 801fd8e:	e7ca      	b.n	801fd26 <_free_r+0x26>
 801fd90:	b003      	add	sp, #12
 801fd92:	bd30      	pop	{r4, r5, pc}
 801fd94:	2400e178 	.word	0x2400e178

0801fd98 <sbrk_aligned>:
 801fd98:	b570      	push	{r4, r5, r6, lr}
 801fd9a:	4e0e      	ldr	r6, [pc, #56]	; (801fdd4 <sbrk_aligned+0x3c>)
 801fd9c:	460c      	mov	r4, r1
 801fd9e:	6831      	ldr	r1, [r6, #0]
 801fda0:	4605      	mov	r5, r0
 801fda2:	b911      	cbnz	r1, 801fdaa <sbrk_aligned+0x12>
 801fda4:	f000 fb7a 	bl	802049c <_sbrk_r>
 801fda8:	6030      	str	r0, [r6, #0]
 801fdaa:	4621      	mov	r1, r4
 801fdac:	4628      	mov	r0, r5
 801fdae:	f000 fb75 	bl	802049c <_sbrk_r>
 801fdb2:	1c43      	adds	r3, r0, #1
 801fdb4:	d00a      	beq.n	801fdcc <sbrk_aligned+0x34>
 801fdb6:	1cc4      	adds	r4, r0, #3
 801fdb8:	f024 0403 	bic.w	r4, r4, #3
 801fdbc:	42a0      	cmp	r0, r4
 801fdbe:	d007      	beq.n	801fdd0 <sbrk_aligned+0x38>
 801fdc0:	1a21      	subs	r1, r4, r0
 801fdc2:	4628      	mov	r0, r5
 801fdc4:	f000 fb6a 	bl	802049c <_sbrk_r>
 801fdc8:	3001      	adds	r0, #1
 801fdca:	d101      	bne.n	801fdd0 <sbrk_aligned+0x38>
 801fdcc:	f04f 34ff 	mov.w	r4, #4294967295
 801fdd0:	4620      	mov	r0, r4
 801fdd2:	bd70      	pop	{r4, r5, r6, pc}
 801fdd4:	2400e17c 	.word	0x2400e17c

0801fdd8 <_malloc_r>:
 801fdd8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801fddc:	1ccd      	adds	r5, r1, #3
 801fdde:	f025 0503 	bic.w	r5, r5, #3
 801fde2:	3508      	adds	r5, #8
 801fde4:	2d0c      	cmp	r5, #12
 801fde6:	bf38      	it	cc
 801fde8:	250c      	movcc	r5, #12
 801fdea:	2d00      	cmp	r5, #0
 801fdec:	4607      	mov	r7, r0
 801fdee:	db01      	blt.n	801fdf4 <_malloc_r+0x1c>
 801fdf0:	42a9      	cmp	r1, r5
 801fdf2:	d905      	bls.n	801fe00 <_malloc_r+0x28>
 801fdf4:	230c      	movs	r3, #12
 801fdf6:	603b      	str	r3, [r7, #0]
 801fdf8:	2600      	movs	r6, #0
 801fdfa:	4630      	mov	r0, r6
 801fdfc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801fe00:	4e2e      	ldr	r6, [pc, #184]	; (801febc <_malloc_r+0xe4>)
 801fe02:	f000 fee1 	bl	8020bc8 <__malloc_lock>
 801fe06:	6833      	ldr	r3, [r6, #0]
 801fe08:	461c      	mov	r4, r3
 801fe0a:	bb34      	cbnz	r4, 801fe5a <_malloc_r+0x82>
 801fe0c:	4629      	mov	r1, r5
 801fe0e:	4638      	mov	r0, r7
 801fe10:	f7ff ffc2 	bl	801fd98 <sbrk_aligned>
 801fe14:	1c43      	adds	r3, r0, #1
 801fe16:	4604      	mov	r4, r0
 801fe18:	d14d      	bne.n	801feb6 <_malloc_r+0xde>
 801fe1a:	6834      	ldr	r4, [r6, #0]
 801fe1c:	4626      	mov	r6, r4
 801fe1e:	2e00      	cmp	r6, #0
 801fe20:	d140      	bne.n	801fea4 <_malloc_r+0xcc>
 801fe22:	6823      	ldr	r3, [r4, #0]
 801fe24:	4631      	mov	r1, r6
 801fe26:	4638      	mov	r0, r7
 801fe28:	eb04 0803 	add.w	r8, r4, r3
 801fe2c:	f000 fb36 	bl	802049c <_sbrk_r>
 801fe30:	4580      	cmp	r8, r0
 801fe32:	d13a      	bne.n	801feaa <_malloc_r+0xd2>
 801fe34:	6821      	ldr	r1, [r4, #0]
 801fe36:	3503      	adds	r5, #3
 801fe38:	1a6d      	subs	r5, r5, r1
 801fe3a:	f025 0503 	bic.w	r5, r5, #3
 801fe3e:	3508      	adds	r5, #8
 801fe40:	2d0c      	cmp	r5, #12
 801fe42:	bf38      	it	cc
 801fe44:	250c      	movcc	r5, #12
 801fe46:	4629      	mov	r1, r5
 801fe48:	4638      	mov	r0, r7
 801fe4a:	f7ff ffa5 	bl	801fd98 <sbrk_aligned>
 801fe4e:	3001      	adds	r0, #1
 801fe50:	d02b      	beq.n	801feaa <_malloc_r+0xd2>
 801fe52:	6823      	ldr	r3, [r4, #0]
 801fe54:	442b      	add	r3, r5
 801fe56:	6023      	str	r3, [r4, #0]
 801fe58:	e00e      	b.n	801fe78 <_malloc_r+0xa0>
 801fe5a:	6822      	ldr	r2, [r4, #0]
 801fe5c:	1b52      	subs	r2, r2, r5
 801fe5e:	d41e      	bmi.n	801fe9e <_malloc_r+0xc6>
 801fe60:	2a0b      	cmp	r2, #11
 801fe62:	d916      	bls.n	801fe92 <_malloc_r+0xba>
 801fe64:	1961      	adds	r1, r4, r5
 801fe66:	42a3      	cmp	r3, r4
 801fe68:	6025      	str	r5, [r4, #0]
 801fe6a:	bf18      	it	ne
 801fe6c:	6059      	strne	r1, [r3, #4]
 801fe6e:	6863      	ldr	r3, [r4, #4]
 801fe70:	bf08      	it	eq
 801fe72:	6031      	streq	r1, [r6, #0]
 801fe74:	5162      	str	r2, [r4, r5]
 801fe76:	604b      	str	r3, [r1, #4]
 801fe78:	4638      	mov	r0, r7
 801fe7a:	f104 060b 	add.w	r6, r4, #11
 801fe7e:	f000 fea9 	bl	8020bd4 <__malloc_unlock>
 801fe82:	f026 0607 	bic.w	r6, r6, #7
 801fe86:	1d23      	adds	r3, r4, #4
 801fe88:	1af2      	subs	r2, r6, r3
 801fe8a:	d0b6      	beq.n	801fdfa <_malloc_r+0x22>
 801fe8c:	1b9b      	subs	r3, r3, r6
 801fe8e:	50a3      	str	r3, [r4, r2]
 801fe90:	e7b3      	b.n	801fdfa <_malloc_r+0x22>
 801fe92:	6862      	ldr	r2, [r4, #4]
 801fe94:	42a3      	cmp	r3, r4
 801fe96:	bf0c      	ite	eq
 801fe98:	6032      	streq	r2, [r6, #0]
 801fe9a:	605a      	strne	r2, [r3, #4]
 801fe9c:	e7ec      	b.n	801fe78 <_malloc_r+0xa0>
 801fe9e:	4623      	mov	r3, r4
 801fea0:	6864      	ldr	r4, [r4, #4]
 801fea2:	e7b2      	b.n	801fe0a <_malloc_r+0x32>
 801fea4:	4634      	mov	r4, r6
 801fea6:	6876      	ldr	r6, [r6, #4]
 801fea8:	e7b9      	b.n	801fe1e <_malloc_r+0x46>
 801feaa:	230c      	movs	r3, #12
 801feac:	603b      	str	r3, [r7, #0]
 801feae:	4638      	mov	r0, r7
 801feb0:	f000 fe90 	bl	8020bd4 <__malloc_unlock>
 801feb4:	e7a1      	b.n	801fdfa <_malloc_r+0x22>
 801feb6:	6025      	str	r5, [r4, #0]
 801feb8:	e7de      	b.n	801fe78 <_malloc_r+0xa0>
 801feba:	bf00      	nop
 801febc:	2400e178 	.word	0x2400e178

0801fec0 <__sfputc_r>:
 801fec0:	6893      	ldr	r3, [r2, #8]
 801fec2:	3b01      	subs	r3, #1
 801fec4:	2b00      	cmp	r3, #0
 801fec6:	b410      	push	{r4}
 801fec8:	6093      	str	r3, [r2, #8]
 801feca:	da08      	bge.n	801fede <__sfputc_r+0x1e>
 801fecc:	6994      	ldr	r4, [r2, #24]
 801fece:	42a3      	cmp	r3, r4
 801fed0:	db01      	blt.n	801fed6 <__sfputc_r+0x16>
 801fed2:	290a      	cmp	r1, #10
 801fed4:	d103      	bne.n	801fede <__sfputc_r+0x1e>
 801fed6:	f85d 4b04 	ldr.w	r4, [sp], #4
 801feda:	f000 bb33 	b.w	8020544 <__swbuf_r>
 801fede:	6813      	ldr	r3, [r2, #0]
 801fee0:	1c58      	adds	r0, r3, #1
 801fee2:	6010      	str	r0, [r2, #0]
 801fee4:	7019      	strb	r1, [r3, #0]
 801fee6:	4608      	mov	r0, r1
 801fee8:	f85d 4b04 	ldr.w	r4, [sp], #4
 801feec:	4770      	bx	lr

0801feee <__sfputs_r>:
 801feee:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801fef0:	4606      	mov	r6, r0
 801fef2:	460f      	mov	r7, r1
 801fef4:	4614      	mov	r4, r2
 801fef6:	18d5      	adds	r5, r2, r3
 801fef8:	42ac      	cmp	r4, r5
 801fefa:	d101      	bne.n	801ff00 <__sfputs_r+0x12>
 801fefc:	2000      	movs	r0, #0
 801fefe:	e007      	b.n	801ff10 <__sfputs_r+0x22>
 801ff00:	f814 1b01 	ldrb.w	r1, [r4], #1
 801ff04:	463a      	mov	r2, r7
 801ff06:	4630      	mov	r0, r6
 801ff08:	f7ff ffda 	bl	801fec0 <__sfputc_r>
 801ff0c:	1c43      	adds	r3, r0, #1
 801ff0e:	d1f3      	bne.n	801fef8 <__sfputs_r+0xa>
 801ff10:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0801ff14 <_vfiprintf_r>:
 801ff14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ff18:	460d      	mov	r5, r1
 801ff1a:	b09d      	sub	sp, #116	; 0x74
 801ff1c:	4614      	mov	r4, r2
 801ff1e:	4698      	mov	r8, r3
 801ff20:	4606      	mov	r6, r0
 801ff22:	b118      	cbz	r0, 801ff2c <_vfiprintf_r+0x18>
 801ff24:	6983      	ldr	r3, [r0, #24]
 801ff26:	b90b      	cbnz	r3, 801ff2c <_vfiprintf_r+0x18>
 801ff28:	f000 fd48 	bl	80209bc <__sinit>
 801ff2c:	4b89      	ldr	r3, [pc, #548]	; (8020154 <_vfiprintf_r+0x240>)
 801ff2e:	429d      	cmp	r5, r3
 801ff30:	d11b      	bne.n	801ff6a <_vfiprintf_r+0x56>
 801ff32:	6875      	ldr	r5, [r6, #4]
 801ff34:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801ff36:	07d9      	lsls	r1, r3, #31
 801ff38:	d405      	bmi.n	801ff46 <_vfiprintf_r+0x32>
 801ff3a:	89ab      	ldrh	r3, [r5, #12]
 801ff3c:	059a      	lsls	r2, r3, #22
 801ff3e:	d402      	bmi.n	801ff46 <_vfiprintf_r+0x32>
 801ff40:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801ff42:	f000 fdd9 	bl	8020af8 <__retarget_lock_acquire_recursive>
 801ff46:	89ab      	ldrh	r3, [r5, #12]
 801ff48:	071b      	lsls	r3, r3, #28
 801ff4a:	d501      	bpl.n	801ff50 <_vfiprintf_r+0x3c>
 801ff4c:	692b      	ldr	r3, [r5, #16]
 801ff4e:	b9eb      	cbnz	r3, 801ff8c <_vfiprintf_r+0x78>
 801ff50:	4629      	mov	r1, r5
 801ff52:	4630      	mov	r0, r6
 801ff54:	f000 fb48 	bl	80205e8 <__swsetup_r>
 801ff58:	b1c0      	cbz	r0, 801ff8c <_vfiprintf_r+0x78>
 801ff5a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801ff5c:	07dc      	lsls	r4, r3, #31
 801ff5e:	d50e      	bpl.n	801ff7e <_vfiprintf_r+0x6a>
 801ff60:	f04f 30ff 	mov.w	r0, #4294967295
 801ff64:	b01d      	add	sp, #116	; 0x74
 801ff66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ff6a:	4b7b      	ldr	r3, [pc, #492]	; (8020158 <_vfiprintf_r+0x244>)
 801ff6c:	429d      	cmp	r5, r3
 801ff6e:	d101      	bne.n	801ff74 <_vfiprintf_r+0x60>
 801ff70:	68b5      	ldr	r5, [r6, #8]
 801ff72:	e7df      	b.n	801ff34 <_vfiprintf_r+0x20>
 801ff74:	4b79      	ldr	r3, [pc, #484]	; (802015c <_vfiprintf_r+0x248>)
 801ff76:	429d      	cmp	r5, r3
 801ff78:	bf08      	it	eq
 801ff7a:	68f5      	ldreq	r5, [r6, #12]
 801ff7c:	e7da      	b.n	801ff34 <_vfiprintf_r+0x20>
 801ff7e:	89ab      	ldrh	r3, [r5, #12]
 801ff80:	0598      	lsls	r0, r3, #22
 801ff82:	d4ed      	bmi.n	801ff60 <_vfiprintf_r+0x4c>
 801ff84:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801ff86:	f000 fdb9 	bl	8020afc <__retarget_lock_release_recursive>
 801ff8a:	e7e9      	b.n	801ff60 <_vfiprintf_r+0x4c>
 801ff8c:	2300      	movs	r3, #0
 801ff8e:	9309      	str	r3, [sp, #36]	; 0x24
 801ff90:	2320      	movs	r3, #32
 801ff92:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801ff96:	f8cd 800c 	str.w	r8, [sp, #12]
 801ff9a:	2330      	movs	r3, #48	; 0x30
 801ff9c:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8020160 <_vfiprintf_r+0x24c>
 801ffa0:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 801ffa4:	f04f 0901 	mov.w	r9, #1
 801ffa8:	4623      	mov	r3, r4
 801ffaa:	469a      	mov	sl, r3
 801ffac:	f813 2b01 	ldrb.w	r2, [r3], #1
 801ffb0:	b10a      	cbz	r2, 801ffb6 <_vfiprintf_r+0xa2>
 801ffb2:	2a25      	cmp	r2, #37	; 0x25
 801ffb4:	d1f9      	bne.n	801ffaa <_vfiprintf_r+0x96>
 801ffb6:	ebba 0b04 	subs.w	fp, sl, r4
 801ffba:	d00b      	beq.n	801ffd4 <_vfiprintf_r+0xc0>
 801ffbc:	465b      	mov	r3, fp
 801ffbe:	4622      	mov	r2, r4
 801ffc0:	4629      	mov	r1, r5
 801ffc2:	4630      	mov	r0, r6
 801ffc4:	f7ff ff93 	bl	801feee <__sfputs_r>
 801ffc8:	3001      	adds	r0, #1
 801ffca:	f000 80aa 	beq.w	8020122 <_vfiprintf_r+0x20e>
 801ffce:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801ffd0:	445a      	add	r2, fp
 801ffd2:	9209      	str	r2, [sp, #36]	; 0x24
 801ffd4:	f89a 3000 	ldrb.w	r3, [sl]
 801ffd8:	2b00      	cmp	r3, #0
 801ffda:	f000 80a2 	beq.w	8020122 <_vfiprintf_r+0x20e>
 801ffde:	2300      	movs	r3, #0
 801ffe0:	f04f 32ff 	mov.w	r2, #4294967295
 801ffe4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801ffe8:	f10a 0a01 	add.w	sl, sl, #1
 801ffec:	9304      	str	r3, [sp, #16]
 801ffee:	9307      	str	r3, [sp, #28]
 801fff0:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 801fff4:	931a      	str	r3, [sp, #104]	; 0x68
 801fff6:	4654      	mov	r4, sl
 801fff8:	2205      	movs	r2, #5
 801fffa:	f814 1b01 	ldrb.w	r1, [r4], #1
 801fffe:	4858      	ldr	r0, [pc, #352]	; (8020160 <_vfiprintf_r+0x24c>)
 8020000:	f7e0 f96e 	bl	80002e0 <memchr>
 8020004:	9a04      	ldr	r2, [sp, #16]
 8020006:	b9d8      	cbnz	r0, 8020040 <_vfiprintf_r+0x12c>
 8020008:	06d1      	lsls	r1, r2, #27
 802000a:	bf44      	itt	mi
 802000c:	2320      	movmi	r3, #32
 802000e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8020012:	0713      	lsls	r3, r2, #28
 8020014:	bf44      	itt	mi
 8020016:	232b      	movmi	r3, #43	; 0x2b
 8020018:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802001c:	f89a 3000 	ldrb.w	r3, [sl]
 8020020:	2b2a      	cmp	r3, #42	; 0x2a
 8020022:	d015      	beq.n	8020050 <_vfiprintf_r+0x13c>
 8020024:	9a07      	ldr	r2, [sp, #28]
 8020026:	4654      	mov	r4, sl
 8020028:	2000      	movs	r0, #0
 802002a:	f04f 0c0a 	mov.w	ip, #10
 802002e:	4621      	mov	r1, r4
 8020030:	f811 3b01 	ldrb.w	r3, [r1], #1
 8020034:	3b30      	subs	r3, #48	; 0x30
 8020036:	2b09      	cmp	r3, #9
 8020038:	d94e      	bls.n	80200d8 <_vfiprintf_r+0x1c4>
 802003a:	b1b0      	cbz	r0, 802006a <_vfiprintf_r+0x156>
 802003c:	9207      	str	r2, [sp, #28]
 802003e:	e014      	b.n	802006a <_vfiprintf_r+0x156>
 8020040:	eba0 0308 	sub.w	r3, r0, r8
 8020044:	fa09 f303 	lsl.w	r3, r9, r3
 8020048:	4313      	orrs	r3, r2
 802004a:	9304      	str	r3, [sp, #16]
 802004c:	46a2      	mov	sl, r4
 802004e:	e7d2      	b.n	801fff6 <_vfiprintf_r+0xe2>
 8020050:	9b03      	ldr	r3, [sp, #12]
 8020052:	1d19      	adds	r1, r3, #4
 8020054:	681b      	ldr	r3, [r3, #0]
 8020056:	9103      	str	r1, [sp, #12]
 8020058:	2b00      	cmp	r3, #0
 802005a:	bfbb      	ittet	lt
 802005c:	425b      	neglt	r3, r3
 802005e:	f042 0202 	orrlt.w	r2, r2, #2
 8020062:	9307      	strge	r3, [sp, #28]
 8020064:	9307      	strlt	r3, [sp, #28]
 8020066:	bfb8      	it	lt
 8020068:	9204      	strlt	r2, [sp, #16]
 802006a:	7823      	ldrb	r3, [r4, #0]
 802006c:	2b2e      	cmp	r3, #46	; 0x2e
 802006e:	d10c      	bne.n	802008a <_vfiprintf_r+0x176>
 8020070:	7863      	ldrb	r3, [r4, #1]
 8020072:	2b2a      	cmp	r3, #42	; 0x2a
 8020074:	d135      	bne.n	80200e2 <_vfiprintf_r+0x1ce>
 8020076:	9b03      	ldr	r3, [sp, #12]
 8020078:	1d1a      	adds	r2, r3, #4
 802007a:	681b      	ldr	r3, [r3, #0]
 802007c:	9203      	str	r2, [sp, #12]
 802007e:	2b00      	cmp	r3, #0
 8020080:	bfb8      	it	lt
 8020082:	f04f 33ff 	movlt.w	r3, #4294967295
 8020086:	3402      	adds	r4, #2
 8020088:	9305      	str	r3, [sp, #20]
 802008a:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8020170 <_vfiprintf_r+0x25c>
 802008e:	7821      	ldrb	r1, [r4, #0]
 8020090:	2203      	movs	r2, #3
 8020092:	4650      	mov	r0, sl
 8020094:	f7e0 f924 	bl	80002e0 <memchr>
 8020098:	b140      	cbz	r0, 80200ac <_vfiprintf_r+0x198>
 802009a:	2340      	movs	r3, #64	; 0x40
 802009c:	eba0 000a 	sub.w	r0, r0, sl
 80200a0:	fa03 f000 	lsl.w	r0, r3, r0
 80200a4:	9b04      	ldr	r3, [sp, #16]
 80200a6:	4303      	orrs	r3, r0
 80200a8:	3401      	adds	r4, #1
 80200aa:	9304      	str	r3, [sp, #16]
 80200ac:	f814 1b01 	ldrb.w	r1, [r4], #1
 80200b0:	482c      	ldr	r0, [pc, #176]	; (8020164 <_vfiprintf_r+0x250>)
 80200b2:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80200b6:	2206      	movs	r2, #6
 80200b8:	f7e0 f912 	bl	80002e0 <memchr>
 80200bc:	2800      	cmp	r0, #0
 80200be:	d03f      	beq.n	8020140 <_vfiprintf_r+0x22c>
 80200c0:	4b29      	ldr	r3, [pc, #164]	; (8020168 <_vfiprintf_r+0x254>)
 80200c2:	bb1b      	cbnz	r3, 802010c <_vfiprintf_r+0x1f8>
 80200c4:	9b03      	ldr	r3, [sp, #12]
 80200c6:	3307      	adds	r3, #7
 80200c8:	f023 0307 	bic.w	r3, r3, #7
 80200cc:	3308      	adds	r3, #8
 80200ce:	9303      	str	r3, [sp, #12]
 80200d0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80200d2:	443b      	add	r3, r7
 80200d4:	9309      	str	r3, [sp, #36]	; 0x24
 80200d6:	e767      	b.n	801ffa8 <_vfiprintf_r+0x94>
 80200d8:	fb0c 3202 	mla	r2, ip, r2, r3
 80200dc:	460c      	mov	r4, r1
 80200de:	2001      	movs	r0, #1
 80200e0:	e7a5      	b.n	802002e <_vfiprintf_r+0x11a>
 80200e2:	2300      	movs	r3, #0
 80200e4:	3401      	adds	r4, #1
 80200e6:	9305      	str	r3, [sp, #20]
 80200e8:	4619      	mov	r1, r3
 80200ea:	f04f 0c0a 	mov.w	ip, #10
 80200ee:	4620      	mov	r0, r4
 80200f0:	f810 2b01 	ldrb.w	r2, [r0], #1
 80200f4:	3a30      	subs	r2, #48	; 0x30
 80200f6:	2a09      	cmp	r2, #9
 80200f8:	d903      	bls.n	8020102 <_vfiprintf_r+0x1ee>
 80200fa:	2b00      	cmp	r3, #0
 80200fc:	d0c5      	beq.n	802008a <_vfiprintf_r+0x176>
 80200fe:	9105      	str	r1, [sp, #20]
 8020100:	e7c3      	b.n	802008a <_vfiprintf_r+0x176>
 8020102:	fb0c 2101 	mla	r1, ip, r1, r2
 8020106:	4604      	mov	r4, r0
 8020108:	2301      	movs	r3, #1
 802010a:	e7f0      	b.n	80200ee <_vfiprintf_r+0x1da>
 802010c:	ab03      	add	r3, sp, #12
 802010e:	9300      	str	r3, [sp, #0]
 8020110:	462a      	mov	r2, r5
 8020112:	4b16      	ldr	r3, [pc, #88]	; (802016c <_vfiprintf_r+0x258>)
 8020114:	a904      	add	r1, sp, #16
 8020116:	4630      	mov	r0, r6
 8020118:	f3af 8000 	nop.w
 802011c:	4607      	mov	r7, r0
 802011e:	1c78      	adds	r0, r7, #1
 8020120:	d1d6      	bne.n	80200d0 <_vfiprintf_r+0x1bc>
 8020122:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8020124:	07d9      	lsls	r1, r3, #31
 8020126:	d405      	bmi.n	8020134 <_vfiprintf_r+0x220>
 8020128:	89ab      	ldrh	r3, [r5, #12]
 802012a:	059a      	lsls	r2, r3, #22
 802012c:	d402      	bmi.n	8020134 <_vfiprintf_r+0x220>
 802012e:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8020130:	f000 fce4 	bl	8020afc <__retarget_lock_release_recursive>
 8020134:	89ab      	ldrh	r3, [r5, #12]
 8020136:	065b      	lsls	r3, r3, #25
 8020138:	f53f af12 	bmi.w	801ff60 <_vfiprintf_r+0x4c>
 802013c:	9809      	ldr	r0, [sp, #36]	; 0x24
 802013e:	e711      	b.n	801ff64 <_vfiprintf_r+0x50>
 8020140:	ab03      	add	r3, sp, #12
 8020142:	9300      	str	r3, [sp, #0]
 8020144:	462a      	mov	r2, r5
 8020146:	4b09      	ldr	r3, [pc, #36]	; (802016c <_vfiprintf_r+0x258>)
 8020148:	a904      	add	r1, sp, #16
 802014a:	4630      	mov	r0, r6
 802014c:	f000 f880 	bl	8020250 <_printf_i>
 8020150:	e7e4      	b.n	802011c <_vfiprintf_r+0x208>
 8020152:	bf00      	nop
 8020154:	08025a68 	.word	0x08025a68
 8020158:	08025a88 	.word	0x08025a88
 802015c:	08025a48 	.word	0x08025a48
 8020160:	08025a10 	.word	0x08025a10
 8020164:	08025a1a 	.word	0x08025a1a
 8020168:	00000000 	.word	0x00000000
 802016c:	0801feef 	.word	0x0801feef
 8020170:	08025a16 	.word	0x08025a16

08020174 <_printf_common>:
 8020174:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8020178:	4616      	mov	r6, r2
 802017a:	4699      	mov	r9, r3
 802017c:	688a      	ldr	r2, [r1, #8]
 802017e:	690b      	ldr	r3, [r1, #16]
 8020180:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8020184:	4293      	cmp	r3, r2
 8020186:	bfb8      	it	lt
 8020188:	4613      	movlt	r3, r2
 802018a:	6033      	str	r3, [r6, #0]
 802018c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8020190:	4607      	mov	r7, r0
 8020192:	460c      	mov	r4, r1
 8020194:	b10a      	cbz	r2, 802019a <_printf_common+0x26>
 8020196:	3301      	adds	r3, #1
 8020198:	6033      	str	r3, [r6, #0]
 802019a:	6823      	ldr	r3, [r4, #0]
 802019c:	0699      	lsls	r1, r3, #26
 802019e:	bf42      	ittt	mi
 80201a0:	6833      	ldrmi	r3, [r6, #0]
 80201a2:	3302      	addmi	r3, #2
 80201a4:	6033      	strmi	r3, [r6, #0]
 80201a6:	6825      	ldr	r5, [r4, #0]
 80201a8:	f015 0506 	ands.w	r5, r5, #6
 80201ac:	d106      	bne.n	80201bc <_printf_common+0x48>
 80201ae:	f104 0a19 	add.w	sl, r4, #25
 80201b2:	68e3      	ldr	r3, [r4, #12]
 80201b4:	6832      	ldr	r2, [r6, #0]
 80201b6:	1a9b      	subs	r3, r3, r2
 80201b8:	42ab      	cmp	r3, r5
 80201ba:	dc26      	bgt.n	802020a <_printf_common+0x96>
 80201bc:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 80201c0:	1e13      	subs	r3, r2, #0
 80201c2:	6822      	ldr	r2, [r4, #0]
 80201c4:	bf18      	it	ne
 80201c6:	2301      	movne	r3, #1
 80201c8:	0692      	lsls	r2, r2, #26
 80201ca:	d42b      	bmi.n	8020224 <_printf_common+0xb0>
 80201cc:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80201d0:	4649      	mov	r1, r9
 80201d2:	4638      	mov	r0, r7
 80201d4:	47c0      	blx	r8
 80201d6:	3001      	adds	r0, #1
 80201d8:	d01e      	beq.n	8020218 <_printf_common+0xa4>
 80201da:	6823      	ldr	r3, [r4, #0]
 80201dc:	68e5      	ldr	r5, [r4, #12]
 80201de:	6832      	ldr	r2, [r6, #0]
 80201e0:	f003 0306 	and.w	r3, r3, #6
 80201e4:	2b04      	cmp	r3, #4
 80201e6:	bf08      	it	eq
 80201e8:	1aad      	subeq	r5, r5, r2
 80201ea:	68a3      	ldr	r3, [r4, #8]
 80201ec:	6922      	ldr	r2, [r4, #16]
 80201ee:	bf0c      	ite	eq
 80201f0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80201f4:	2500      	movne	r5, #0
 80201f6:	4293      	cmp	r3, r2
 80201f8:	bfc4      	itt	gt
 80201fa:	1a9b      	subgt	r3, r3, r2
 80201fc:	18ed      	addgt	r5, r5, r3
 80201fe:	2600      	movs	r6, #0
 8020200:	341a      	adds	r4, #26
 8020202:	42b5      	cmp	r5, r6
 8020204:	d11a      	bne.n	802023c <_printf_common+0xc8>
 8020206:	2000      	movs	r0, #0
 8020208:	e008      	b.n	802021c <_printf_common+0xa8>
 802020a:	2301      	movs	r3, #1
 802020c:	4652      	mov	r2, sl
 802020e:	4649      	mov	r1, r9
 8020210:	4638      	mov	r0, r7
 8020212:	47c0      	blx	r8
 8020214:	3001      	adds	r0, #1
 8020216:	d103      	bne.n	8020220 <_printf_common+0xac>
 8020218:	f04f 30ff 	mov.w	r0, #4294967295
 802021c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020220:	3501      	adds	r5, #1
 8020222:	e7c6      	b.n	80201b2 <_printf_common+0x3e>
 8020224:	18e1      	adds	r1, r4, r3
 8020226:	1c5a      	adds	r2, r3, #1
 8020228:	2030      	movs	r0, #48	; 0x30
 802022a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802022e:	4422      	add	r2, r4
 8020230:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8020234:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8020238:	3302      	adds	r3, #2
 802023a:	e7c7      	b.n	80201cc <_printf_common+0x58>
 802023c:	2301      	movs	r3, #1
 802023e:	4622      	mov	r2, r4
 8020240:	4649      	mov	r1, r9
 8020242:	4638      	mov	r0, r7
 8020244:	47c0      	blx	r8
 8020246:	3001      	adds	r0, #1
 8020248:	d0e6      	beq.n	8020218 <_printf_common+0xa4>
 802024a:	3601      	adds	r6, #1
 802024c:	e7d9      	b.n	8020202 <_printf_common+0x8e>
	...

08020250 <_printf_i>:
 8020250:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8020254:	7e0f      	ldrb	r7, [r1, #24]
 8020256:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8020258:	2f78      	cmp	r7, #120	; 0x78
 802025a:	4691      	mov	r9, r2
 802025c:	4680      	mov	r8, r0
 802025e:	460c      	mov	r4, r1
 8020260:	469a      	mov	sl, r3
 8020262:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8020266:	d807      	bhi.n	8020278 <_printf_i+0x28>
 8020268:	2f62      	cmp	r7, #98	; 0x62
 802026a:	d80a      	bhi.n	8020282 <_printf_i+0x32>
 802026c:	2f00      	cmp	r7, #0
 802026e:	f000 80d8 	beq.w	8020422 <_printf_i+0x1d2>
 8020272:	2f58      	cmp	r7, #88	; 0x58
 8020274:	f000 80a3 	beq.w	80203be <_printf_i+0x16e>
 8020278:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802027c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8020280:	e03a      	b.n	80202f8 <_printf_i+0xa8>
 8020282:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8020286:	2b15      	cmp	r3, #21
 8020288:	d8f6      	bhi.n	8020278 <_printf_i+0x28>
 802028a:	a101      	add	r1, pc, #4	; (adr r1, 8020290 <_printf_i+0x40>)
 802028c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8020290:	080202e9 	.word	0x080202e9
 8020294:	080202fd 	.word	0x080202fd
 8020298:	08020279 	.word	0x08020279
 802029c:	08020279 	.word	0x08020279
 80202a0:	08020279 	.word	0x08020279
 80202a4:	08020279 	.word	0x08020279
 80202a8:	080202fd 	.word	0x080202fd
 80202ac:	08020279 	.word	0x08020279
 80202b0:	08020279 	.word	0x08020279
 80202b4:	08020279 	.word	0x08020279
 80202b8:	08020279 	.word	0x08020279
 80202bc:	08020409 	.word	0x08020409
 80202c0:	0802032d 	.word	0x0802032d
 80202c4:	080203eb 	.word	0x080203eb
 80202c8:	08020279 	.word	0x08020279
 80202cc:	08020279 	.word	0x08020279
 80202d0:	0802042b 	.word	0x0802042b
 80202d4:	08020279 	.word	0x08020279
 80202d8:	0802032d 	.word	0x0802032d
 80202dc:	08020279 	.word	0x08020279
 80202e0:	08020279 	.word	0x08020279
 80202e4:	080203f3 	.word	0x080203f3
 80202e8:	682b      	ldr	r3, [r5, #0]
 80202ea:	1d1a      	adds	r2, r3, #4
 80202ec:	681b      	ldr	r3, [r3, #0]
 80202ee:	602a      	str	r2, [r5, #0]
 80202f0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80202f4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80202f8:	2301      	movs	r3, #1
 80202fa:	e0a3      	b.n	8020444 <_printf_i+0x1f4>
 80202fc:	6820      	ldr	r0, [r4, #0]
 80202fe:	6829      	ldr	r1, [r5, #0]
 8020300:	0606      	lsls	r6, r0, #24
 8020302:	f101 0304 	add.w	r3, r1, #4
 8020306:	d50a      	bpl.n	802031e <_printf_i+0xce>
 8020308:	680e      	ldr	r6, [r1, #0]
 802030a:	602b      	str	r3, [r5, #0]
 802030c:	2e00      	cmp	r6, #0
 802030e:	da03      	bge.n	8020318 <_printf_i+0xc8>
 8020310:	232d      	movs	r3, #45	; 0x2d
 8020312:	4276      	negs	r6, r6
 8020314:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8020318:	485e      	ldr	r0, [pc, #376]	; (8020494 <_printf_i+0x244>)
 802031a:	230a      	movs	r3, #10
 802031c:	e019      	b.n	8020352 <_printf_i+0x102>
 802031e:	680e      	ldr	r6, [r1, #0]
 8020320:	602b      	str	r3, [r5, #0]
 8020322:	f010 0f40 	tst.w	r0, #64	; 0x40
 8020326:	bf18      	it	ne
 8020328:	b236      	sxthne	r6, r6
 802032a:	e7ef      	b.n	802030c <_printf_i+0xbc>
 802032c:	682b      	ldr	r3, [r5, #0]
 802032e:	6820      	ldr	r0, [r4, #0]
 8020330:	1d19      	adds	r1, r3, #4
 8020332:	6029      	str	r1, [r5, #0]
 8020334:	0601      	lsls	r1, r0, #24
 8020336:	d501      	bpl.n	802033c <_printf_i+0xec>
 8020338:	681e      	ldr	r6, [r3, #0]
 802033a:	e002      	b.n	8020342 <_printf_i+0xf2>
 802033c:	0646      	lsls	r6, r0, #25
 802033e:	d5fb      	bpl.n	8020338 <_printf_i+0xe8>
 8020340:	881e      	ldrh	r6, [r3, #0]
 8020342:	4854      	ldr	r0, [pc, #336]	; (8020494 <_printf_i+0x244>)
 8020344:	2f6f      	cmp	r7, #111	; 0x6f
 8020346:	bf0c      	ite	eq
 8020348:	2308      	moveq	r3, #8
 802034a:	230a      	movne	r3, #10
 802034c:	2100      	movs	r1, #0
 802034e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8020352:	6865      	ldr	r5, [r4, #4]
 8020354:	60a5      	str	r5, [r4, #8]
 8020356:	2d00      	cmp	r5, #0
 8020358:	bfa2      	ittt	ge
 802035a:	6821      	ldrge	r1, [r4, #0]
 802035c:	f021 0104 	bicge.w	r1, r1, #4
 8020360:	6021      	strge	r1, [r4, #0]
 8020362:	b90e      	cbnz	r6, 8020368 <_printf_i+0x118>
 8020364:	2d00      	cmp	r5, #0
 8020366:	d04d      	beq.n	8020404 <_printf_i+0x1b4>
 8020368:	4615      	mov	r5, r2
 802036a:	fbb6 f1f3 	udiv	r1, r6, r3
 802036e:	fb03 6711 	mls	r7, r3, r1, r6
 8020372:	5dc7      	ldrb	r7, [r0, r7]
 8020374:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8020378:	4637      	mov	r7, r6
 802037a:	42bb      	cmp	r3, r7
 802037c:	460e      	mov	r6, r1
 802037e:	d9f4      	bls.n	802036a <_printf_i+0x11a>
 8020380:	2b08      	cmp	r3, #8
 8020382:	d10b      	bne.n	802039c <_printf_i+0x14c>
 8020384:	6823      	ldr	r3, [r4, #0]
 8020386:	07de      	lsls	r6, r3, #31
 8020388:	d508      	bpl.n	802039c <_printf_i+0x14c>
 802038a:	6923      	ldr	r3, [r4, #16]
 802038c:	6861      	ldr	r1, [r4, #4]
 802038e:	4299      	cmp	r1, r3
 8020390:	bfde      	ittt	le
 8020392:	2330      	movle	r3, #48	; 0x30
 8020394:	f805 3c01 	strble.w	r3, [r5, #-1]
 8020398:	f105 35ff 	addle.w	r5, r5, #4294967295
 802039c:	1b52      	subs	r2, r2, r5
 802039e:	6122      	str	r2, [r4, #16]
 80203a0:	f8cd a000 	str.w	sl, [sp]
 80203a4:	464b      	mov	r3, r9
 80203a6:	aa03      	add	r2, sp, #12
 80203a8:	4621      	mov	r1, r4
 80203aa:	4640      	mov	r0, r8
 80203ac:	f7ff fee2 	bl	8020174 <_printf_common>
 80203b0:	3001      	adds	r0, #1
 80203b2:	d14c      	bne.n	802044e <_printf_i+0x1fe>
 80203b4:	f04f 30ff 	mov.w	r0, #4294967295
 80203b8:	b004      	add	sp, #16
 80203ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80203be:	4835      	ldr	r0, [pc, #212]	; (8020494 <_printf_i+0x244>)
 80203c0:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 80203c4:	6829      	ldr	r1, [r5, #0]
 80203c6:	6823      	ldr	r3, [r4, #0]
 80203c8:	f851 6b04 	ldr.w	r6, [r1], #4
 80203cc:	6029      	str	r1, [r5, #0]
 80203ce:	061d      	lsls	r5, r3, #24
 80203d0:	d514      	bpl.n	80203fc <_printf_i+0x1ac>
 80203d2:	07df      	lsls	r7, r3, #31
 80203d4:	bf44      	itt	mi
 80203d6:	f043 0320 	orrmi.w	r3, r3, #32
 80203da:	6023      	strmi	r3, [r4, #0]
 80203dc:	b91e      	cbnz	r6, 80203e6 <_printf_i+0x196>
 80203de:	6823      	ldr	r3, [r4, #0]
 80203e0:	f023 0320 	bic.w	r3, r3, #32
 80203e4:	6023      	str	r3, [r4, #0]
 80203e6:	2310      	movs	r3, #16
 80203e8:	e7b0      	b.n	802034c <_printf_i+0xfc>
 80203ea:	6823      	ldr	r3, [r4, #0]
 80203ec:	f043 0320 	orr.w	r3, r3, #32
 80203f0:	6023      	str	r3, [r4, #0]
 80203f2:	2378      	movs	r3, #120	; 0x78
 80203f4:	4828      	ldr	r0, [pc, #160]	; (8020498 <_printf_i+0x248>)
 80203f6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80203fa:	e7e3      	b.n	80203c4 <_printf_i+0x174>
 80203fc:	0659      	lsls	r1, r3, #25
 80203fe:	bf48      	it	mi
 8020400:	b2b6      	uxthmi	r6, r6
 8020402:	e7e6      	b.n	80203d2 <_printf_i+0x182>
 8020404:	4615      	mov	r5, r2
 8020406:	e7bb      	b.n	8020380 <_printf_i+0x130>
 8020408:	682b      	ldr	r3, [r5, #0]
 802040a:	6826      	ldr	r6, [r4, #0]
 802040c:	6961      	ldr	r1, [r4, #20]
 802040e:	1d18      	adds	r0, r3, #4
 8020410:	6028      	str	r0, [r5, #0]
 8020412:	0635      	lsls	r5, r6, #24
 8020414:	681b      	ldr	r3, [r3, #0]
 8020416:	d501      	bpl.n	802041c <_printf_i+0x1cc>
 8020418:	6019      	str	r1, [r3, #0]
 802041a:	e002      	b.n	8020422 <_printf_i+0x1d2>
 802041c:	0670      	lsls	r0, r6, #25
 802041e:	d5fb      	bpl.n	8020418 <_printf_i+0x1c8>
 8020420:	8019      	strh	r1, [r3, #0]
 8020422:	2300      	movs	r3, #0
 8020424:	6123      	str	r3, [r4, #16]
 8020426:	4615      	mov	r5, r2
 8020428:	e7ba      	b.n	80203a0 <_printf_i+0x150>
 802042a:	682b      	ldr	r3, [r5, #0]
 802042c:	1d1a      	adds	r2, r3, #4
 802042e:	602a      	str	r2, [r5, #0]
 8020430:	681d      	ldr	r5, [r3, #0]
 8020432:	6862      	ldr	r2, [r4, #4]
 8020434:	2100      	movs	r1, #0
 8020436:	4628      	mov	r0, r5
 8020438:	f7df ff52 	bl	80002e0 <memchr>
 802043c:	b108      	cbz	r0, 8020442 <_printf_i+0x1f2>
 802043e:	1b40      	subs	r0, r0, r5
 8020440:	6060      	str	r0, [r4, #4]
 8020442:	6863      	ldr	r3, [r4, #4]
 8020444:	6123      	str	r3, [r4, #16]
 8020446:	2300      	movs	r3, #0
 8020448:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802044c:	e7a8      	b.n	80203a0 <_printf_i+0x150>
 802044e:	6923      	ldr	r3, [r4, #16]
 8020450:	462a      	mov	r2, r5
 8020452:	4649      	mov	r1, r9
 8020454:	4640      	mov	r0, r8
 8020456:	47d0      	blx	sl
 8020458:	3001      	adds	r0, #1
 802045a:	d0ab      	beq.n	80203b4 <_printf_i+0x164>
 802045c:	6823      	ldr	r3, [r4, #0]
 802045e:	079b      	lsls	r3, r3, #30
 8020460:	d413      	bmi.n	802048a <_printf_i+0x23a>
 8020462:	68e0      	ldr	r0, [r4, #12]
 8020464:	9b03      	ldr	r3, [sp, #12]
 8020466:	4298      	cmp	r0, r3
 8020468:	bfb8      	it	lt
 802046a:	4618      	movlt	r0, r3
 802046c:	e7a4      	b.n	80203b8 <_printf_i+0x168>
 802046e:	2301      	movs	r3, #1
 8020470:	4632      	mov	r2, r6
 8020472:	4649      	mov	r1, r9
 8020474:	4640      	mov	r0, r8
 8020476:	47d0      	blx	sl
 8020478:	3001      	adds	r0, #1
 802047a:	d09b      	beq.n	80203b4 <_printf_i+0x164>
 802047c:	3501      	adds	r5, #1
 802047e:	68e3      	ldr	r3, [r4, #12]
 8020480:	9903      	ldr	r1, [sp, #12]
 8020482:	1a5b      	subs	r3, r3, r1
 8020484:	42ab      	cmp	r3, r5
 8020486:	dcf2      	bgt.n	802046e <_printf_i+0x21e>
 8020488:	e7eb      	b.n	8020462 <_printf_i+0x212>
 802048a:	2500      	movs	r5, #0
 802048c:	f104 0619 	add.w	r6, r4, #25
 8020490:	e7f5      	b.n	802047e <_printf_i+0x22e>
 8020492:	bf00      	nop
 8020494:	08025a21 	.word	0x08025a21
 8020498:	08025a32 	.word	0x08025a32

0802049c <_sbrk_r>:
 802049c:	b538      	push	{r3, r4, r5, lr}
 802049e:	4d06      	ldr	r5, [pc, #24]	; (80204b8 <_sbrk_r+0x1c>)
 80204a0:	2300      	movs	r3, #0
 80204a2:	4604      	mov	r4, r0
 80204a4:	4608      	mov	r0, r1
 80204a6:	602b      	str	r3, [r5, #0]
 80204a8:	f7e1 f836 	bl	8001518 <_sbrk>
 80204ac:	1c43      	adds	r3, r0, #1
 80204ae:	d102      	bne.n	80204b6 <_sbrk_r+0x1a>
 80204b0:	682b      	ldr	r3, [r5, #0]
 80204b2:	b103      	cbz	r3, 80204b6 <_sbrk_r+0x1a>
 80204b4:	6023      	str	r3, [r4, #0]
 80204b6:	bd38      	pop	{r3, r4, r5, pc}
 80204b8:	2400e31c 	.word	0x2400e31c

080204bc <_raise_r>:
 80204bc:	291f      	cmp	r1, #31
 80204be:	b538      	push	{r3, r4, r5, lr}
 80204c0:	4604      	mov	r4, r0
 80204c2:	460d      	mov	r5, r1
 80204c4:	d904      	bls.n	80204d0 <_raise_r+0x14>
 80204c6:	2316      	movs	r3, #22
 80204c8:	6003      	str	r3, [r0, #0]
 80204ca:	f04f 30ff 	mov.w	r0, #4294967295
 80204ce:	bd38      	pop	{r3, r4, r5, pc}
 80204d0:	6c42      	ldr	r2, [r0, #68]	; 0x44
 80204d2:	b112      	cbz	r2, 80204da <_raise_r+0x1e>
 80204d4:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80204d8:	b94b      	cbnz	r3, 80204ee <_raise_r+0x32>
 80204da:	4620      	mov	r0, r4
 80204dc:	f000 f830 	bl	8020540 <_getpid_r>
 80204e0:	462a      	mov	r2, r5
 80204e2:	4601      	mov	r1, r0
 80204e4:	4620      	mov	r0, r4
 80204e6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80204ea:	f000 b817 	b.w	802051c <_kill_r>
 80204ee:	2b01      	cmp	r3, #1
 80204f0:	d00a      	beq.n	8020508 <_raise_r+0x4c>
 80204f2:	1c59      	adds	r1, r3, #1
 80204f4:	d103      	bne.n	80204fe <_raise_r+0x42>
 80204f6:	2316      	movs	r3, #22
 80204f8:	6003      	str	r3, [r0, #0]
 80204fa:	2001      	movs	r0, #1
 80204fc:	e7e7      	b.n	80204ce <_raise_r+0x12>
 80204fe:	2400      	movs	r4, #0
 8020500:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8020504:	4628      	mov	r0, r5
 8020506:	4798      	blx	r3
 8020508:	2000      	movs	r0, #0
 802050a:	e7e0      	b.n	80204ce <_raise_r+0x12>

0802050c <raise>:
 802050c:	4b02      	ldr	r3, [pc, #8]	; (8020518 <raise+0xc>)
 802050e:	4601      	mov	r1, r0
 8020510:	6818      	ldr	r0, [r3, #0]
 8020512:	f7ff bfd3 	b.w	80204bc <_raise_r>
 8020516:	bf00      	nop
 8020518:	240000b4 	.word	0x240000b4

0802051c <_kill_r>:
 802051c:	b538      	push	{r3, r4, r5, lr}
 802051e:	4d07      	ldr	r5, [pc, #28]	; (802053c <_kill_r+0x20>)
 8020520:	2300      	movs	r3, #0
 8020522:	4604      	mov	r4, r0
 8020524:	4608      	mov	r0, r1
 8020526:	4611      	mov	r1, r2
 8020528:	602b      	str	r3, [r5, #0]
 802052a:	f7e0 ffbf 	bl	80014ac <_kill>
 802052e:	1c43      	adds	r3, r0, #1
 8020530:	d102      	bne.n	8020538 <_kill_r+0x1c>
 8020532:	682b      	ldr	r3, [r5, #0]
 8020534:	b103      	cbz	r3, 8020538 <_kill_r+0x1c>
 8020536:	6023      	str	r3, [r4, #0]
 8020538:	bd38      	pop	{r3, r4, r5, pc}
 802053a:	bf00      	nop
 802053c:	2400e31c 	.word	0x2400e31c

08020540 <_getpid_r>:
 8020540:	f7e0 bfb2 	b.w	80014a8 <_getpid>

08020544 <__swbuf_r>:
 8020544:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8020546:	460e      	mov	r6, r1
 8020548:	4614      	mov	r4, r2
 802054a:	4605      	mov	r5, r0
 802054c:	b118      	cbz	r0, 8020556 <__swbuf_r+0x12>
 802054e:	6983      	ldr	r3, [r0, #24]
 8020550:	b90b      	cbnz	r3, 8020556 <__swbuf_r+0x12>
 8020552:	f000 fa33 	bl	80209bc <__sinit>
 8020556:	4b21      	ldr	r3, [pc, #132]	; (80205dc <__swbuf_r+0x98>)
 8020558:	429c      	cmp	r4, r3
 802055a:	d12b      	bne.n	80205b4 <__swbuf_r+0x70>
 802055c:	686c      	ldr	r4, [r5, #4]
 802055e:	69a3      	ldr	r3, [r4, #24]
 8020560:	60a3      	str	r3, [r4, #8]
 8020562:	89a3      	ldrh	r3, [r4, #12]
 8020564:	071a      	lsls	r2, r3, #28
 8020566:	d52f      	bpl.n	80205c8 <__swbuf_r+0x84>
 8020568:	6923      	ldr	r3, [r4, #16]
 802056a:	b36b      	cbz	r3, 80205c8 <__swbuf_r+0x84>
 802056c:	6923      	ldr	r3, [r4, #16]
 802056e:	6820      	ldr	r0, [r4, #0]
 8020570:	1ac0      	subs	r0, r0, r3
 8020572:	6963      	ldr	r3, [r4, #20]
 8020574:	b2f6      	uxtb	r6, r6
 8020576:	4283      	cmp	r3, r0
 8020578:	4637      	mov	r7, r6
 802057a:	dc04      	bgt.n	8020586 <__swbuf_r+0x42>
 802057c:	4621      	mov	r1, r4
 802057e:	4628      	mov	r0, r5
 8020580:	f000 f988 	bl	8020894 <_fflush_r>
 8020584:	bb30      	cbnz	r0, 80205d4 <__swbuf_r+0x90>
 8020586:	68a3      	ldr	r3, [r4, #8]
 8020588:	3b01      	subs	r3, #1
 802058a:	60a3      	str	r3, [r4, #8]
 802058c:	6823      	ldr	r3, [r4, #0]
 802058e:	1c5a      	adds	r2, r3, #1
 8020590:	6022      	str	r2, [r4, #0]
 8020592:	701e      	strb	r6, [r3, #0]
 8020594:	6963      	ldr	r3, [r4, #20]
 8020596:	3001      	adds	r0, #1
 8020598:	4283      	cmp	r3, r0
 802059a:	d004      	beq.n	80205a6 <__swbuf_r+0x62>
 802059c:	89a3      	ldrh	r3, [r4, #12]
 802059e:	07db      	lsls	r3, r3, #31
 80205a0:	d506      	bpl.n	80205b0 <__swbuf_r+0x6c>
 80205a2:	2e0a      	cmp	r6, #10
 80205a4:	d104      	bne.n	80205b0 <__swbuf_r+0x6c>
 80205a6:	4621      	mov	r1, r4
 80205a8:	4628      	mov	r0, r5
 80205aa:	f000 f973 	bl	8020894 <_fflush_r>
 80205ae:	b988      	cbnz	r0, 80205d4 <__swbuf_r+0x90>
 80205b0:	4638      	mov	r0, r7
 80205b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80205b4:	4b0a      	ldr	r3, [pc, #40]	; (80205e0 <__swbuf_r+0x9c>)
 80205b6:	429c      	cmp	r4, r3
 80205b8:	d101      	bne.n	80205be <__swbuf_r+0x7a>
 80205ba:	68ac      	ldr	r4, [r5, #8]
 80205bc:	e7cf      	b.n	802055e <__swbuf_r+0x1a>
 80205be:	4b09      	ldr	r3, [pc, #36]	; (80205e4 <__swbuf_r+0xa0>)
 80205c0:	429c      	cmp	r4, r3
 80205c2:	bf08      	it	eq
 80205c4:	68ec      	ldreq	r4, [r5, #12]
 80205c6:	e7ca      	b.n	802055e <__swbuf_r+0x1a>
 80205c8:	4621      	mov	r1, r4
 80205ca:	4628      	mov	r0, r5
 80205cc:	f000 f80c 	bl	80205e8 <__swsetup_r>
 80205d0:	2800      	cmp	r0, #0
 80205d2:	d0cb      	beq.n	802056c <__swbuf_r+0x28>
 80205d4:	f04f 37ff 	mov.w	r7, #4294967295
 80205d8:	e7ea      	b.n	80205b0 <__swbuf_r+0x6c>
 80205da:	bf00      	nop
 80205dc:	08025a68 	.word	0x08025a68
 80205e0:	08025a88 	.word	0x08025a88
 80205e4:	08025a48 	.word	0x08025a48

080205e8 <__swsetup_r>:
 80205e8:	4b32      	ldr	r3, [pc, #200]	; (80206b4 <__swsetup_r+0xcc>)
 80205ea:	b570      	push	{r4, r5, r6, lr}
 80205ec:	681d      	ldr	r5, [r3, #0]
 80205ee:	4606      	mov	r6, r0
 80205f0:	460c      	mov	r4, r1
 80205f2:	b125      	cbz	r5, 80205fe <__swsetup_r+0x16>
 80205f4:	69ab      	ldr	r3, [r5, #24]
 80205f6:	b913      	cbnz	r3, 80205fe <__swsetup_r+0x16>
 80205f8:	4628      	mov	r0, r5
 80205fa:	f000 f9df 	bl	80209bc <__sinit>
 80205fe:	4b2e      	ldr	r3, [pc, #184]	; (80206b8 <__swsetup_r+0xd0>)
 8020600:	429c      	cmp	r4, r3
 8020602:	d10f      	bne.n	8020624 <__swsetup_r+0x3c>
 8020604:	686c      	ldr	r4, [r5, #4]
 8020606:	89a3      	ldrh	r3, [r4, #12]
 8020608:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802060c:	0719      	lsls	r1, r3, #28
 802060e:	d42c      	bmi.n	802066a <__swsetup_r+0x82>
 8020610:	06dd      	lsls	r5, r3, #27
 8020612:	d411      	bmi.n	8020638 <__swsetup_r+0x50>
 8020614:	2309      	movs	r3, #9
 8020616:	6033      	str	r3, [r6, #0]
 8020618:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 802061c:	81a3      	strh	r3, [r4, #12]
 802061e:	f04f 30ff 	mov.w	r0, #4294967295
 8020622:	e03e      	b.n	80206a2 <__swsetup_r+0xba>
 8020624:	4b25      	ldr	r3, [pc, #148]	; (80206bc <__swsetup_r+0xd4>)
 8020626:	429c      	cmp	r4, r3
 8020628:	d101      	bne.n	802062e <__swsetup_r+0x46>
 802062a:	68ac      	ldr	r4, [r5, #8]
 802062c:	e7eb      	b.n	8020606 <__swsetup_r+0x1e>
 802062e:	4b24      	ldr	r3, [pc, #144]	; (80206c0 <__swsetup_r+0xd8>)
 8020630:	429c      	cmp	r4, r3
 8020632:	bf08      	it	eq
 8020634:	68ec      	ldreq	r4, [r5, #12]
 8020636:	e7e6      	b.n	8020606 <__swsetup_r+0x1e>
 8020638:	0758      	lsls	r0, r3, #29
 802063a:	d512      	bpl.n	8020662 <__swsetup_r+0x7a>
 802063c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802063e:	b141      	cbz	r1, 8020652 <__swsetup_r+0x6a>
 8020640:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8020644:	4299      	cmp	r1, r3
 8020646:	d002      	beq.n	802064e <__swsetup_r+0x66>
 8020648:	4630      	mov	r0, r6
 802064a:	f7ff fb59 	bl	801fd00 <_free_r>
 802064e:	2300      	movs	r3, #0
 8020650:	6363      	str	r3, [r4, #52]	; 0x34
 8020652:	89a3      	ldrh	r3, [r4, #12]
 8020654:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8020658:	81a3      	strh	r3, [r4, #12]
 802065a:	2300      	movs	r3, #0
 802065c:	6063      	str	r3, [r4, #4]
 802065e:	6923      	ldr	r3, [r4, #16]
 8020660:	6023      	str	r3, [r4, #0]
 8020662:	89a3      	ldrh	r3, [r4, #12]
 8020664:	f043 0308 	orr.w	r3, r3, #8
 8020668:	81a3      	strh	r3, [r4, #12]
 802066a:	6923      	ldr	r3, [r4, #16]
 802066c:	b94b      	cbnz	r3, 8020682 <__swsetup_r+0x9a>
 802066e:	89a3      	ldrh	r3, [r4, #12]
 8020670:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8020674:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8020678:	d003      	beq.n	8020682 <__swsetup_r+0x9a>
 802067a:	4621      	mov	r1, r4
 802067c:	4630      	mov	r0, r6
 802067e:	f000 fa63 	bl	8020b48 <__smakebuf_r>
 8020682:	89a0      	ldrh	r0, [r4, #12]
 8020684:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8020688:	f010 0301 	ands.w	r3, r0, #1
 802068c:	d00a      	beq.n	80206a4 <__swsetup_r+0xbc>
 802068e:	2300      	movs	r3, #0
 8020690:	60a3      	str	r3, [r4, #8]
 8020692:	6963      	ldr	r3, [r4, #20]
 8020694:	425b      	negs	r3, r3
 8020696:	61a3      	str	r3, [r4, #24]
 8020698:	6923      	ldr	r3, [r4, #16]
 802069a:	b943      	cbnz	r3, 80206ae <__swsetup_r+0xc6>
 802069c:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80206a0:	d1ba      	bne.n	8020618 <__swsetup_r+0x30>
 80206a2:	bd70      	pop	{r4, r5, r6, pc}
 80206a4:	0781      	lsls	r1, r0, #30
 80206a6:	bf58      	it	pl
 80206a8:	6963      	ldrpl	r3, [r4, #20]
 80206aa:	60a3      	str	r3, [r4, #8]
 80206ac:	e7f4      	b.n	8020698 <__swsetup_r+0xb0>
 80206ae:	2000      	movs	r0, #0
 80206b0:	e7f7      	b.n	80206a2 <__swsetup_r+0xba>
 80206b2:	bf00      	nop
 80206b4:	240000b4 	.word	0x240000b4
 80206b8:	08025a68 	.word	0x08025a68
 80206bc:	08025a88 	.word	0x08025a88
 80206c0:	08025a48 	.word	0x08025a48

080206c4 <__register_exitproc>:
 80206c4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80206c8:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 8020784 <__register_exitproc+0xc0>
 80206cc:	4606      	mov	r6, r0
 80206ce:	f8d8 0000 	ldr.w	r0, [r8]
 80206d2:	461f      	mov	r7, r3
 80206d4:	460d      	mov	r5, r1
 80206d6:	4691      	mov	r9, r2
 80206d8:	f000 fa0e 	bl	8020af8 <__retarget_lock_acquire_recursive>
 80206dc:	4b25      	ldr	r3, [pc, #148]	; (8020774 <__register_exitproc+0xb0>)
 80206de:	681c      	ldr	r4, [r3, #0]
 80206e0:	b934      	cbnz	r4, 80206f0 <__register_exitproc+0x2c>
 80206e2:	4c25      	ldr	r4, [pc, #148]	; (8020778 <__register_exitproc+0xb4>)
 80206e4:	601c      	str	r4, [r3, #0]
 80206e6:	4b25      	ldr	r3, [pc, #148]	; (802077c <__register_exitproc+0xb8>)
 80206e8:	b113      	cbz	r3, 80206f0 <__register_exitproc+0x2c>
 80206ea:	681b      	ldr	r3, [r3, #0]
 80206ec:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 80206f0:	6863      	ldr	r3, [r4, #4]
 80206f2:	2b1f      	cmp	r3, #31
 80206f4:	dd07      	ble.n	8020706 <__register_exitproc+0x42>
 80206f6:	f8d8 0000 	ldr.w	r0, [r8]
 80206fa:	f000 f9ff 	bl	8020afc <__retarget_lock_release_recursive>
 80206fe:	f04f 30ff 	mov.w	r0, #4294967295
 8020702:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8020706:	b34e      	cbz	r6, 802075c <__register_exitproc+0x98>
 8020708:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802070c:	b988      	cbnz	r0, 8020732 <__register_exitproc+0x6e>
 802070e:	4b1c      	ldr	r3, [pc, #112]	; (8020780 <__register_exitproc+0xbc>)
 8020710:	b923      	cbnz	r3, 802071c <__register_exitproc+0x58>
 8020712:	f8d8 0000 	ldr.w	r0, [r8]
 8020716:	f000 f9f0 	bl	8020afa <__retarget_lock_release>
 802071a:	e7f0      	b.n	80206fe <__register_exitproc+0x3a>
 802071c:	f44f 7084 	mov.w	r0, #264	; 0x108
 8020720:	f7ff fac8 	bl	801fcb4 <malloc>
 8020724:	2800      	cmp	r0, #0
 8020726:	d0f4      	beq.n	8020712 <__register_exitproc+0x4e>
 8020728:	2300      	movs	r3, #0
 802072a:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 802072e:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 8020732:	6863      	ldr	r3, [r4, #4]
 8020734:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8020738:	2201      	movs	r2, #1
 802073a:	409a      	lsls	r2, r3
 802073c:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8020740:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8020744:	4313      	orrs	r3, r2
 8020746:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 802074a:	2e02      	cmp	r6, #2
 802074c:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 8020750:	bf02      	ittt	eq
 8020752:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 8020756:	4313      	orreq	r3, r2
 8020758:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 802075c:	6863      	ldr	r3, [r4, #4]
 802075e:	f8d8 0000 	ldr.w	r0, [r8]
 8020762:	1c5a      	adds	r2, r3, #1
 8020764:	3302      	adds	r3, #2
 8020766:	6062      	str	r2, [r4, #4]
 8020768:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 802076c:	f000 f9c6 	bl	8020afc <__retarget_lock_release_recursive>
 8020770:	2000      	movs	r0, #0
 8020772:	e7c6      	b.n	8020702 <__register_exitproc+0x3e>
 8020774:	2400e314 	.word	0x2400e314
 8020778:	2400e288 	.word	0x2400e288
 802077c:	08025a44 	.word	0x08025a44
 8020780:	0801fcb5 	.word	0x0801fcb5
 8020784:	24000118 	.word	0x24000118

08020788 <__sflush_r>:
 8020788:	898a      	ldrh	r2, [r1, #12]
 802078a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802078e:	4605      	mov	r5, r0
 8020790:	0710      	lsls	r0, r2, #28
 8020792:	460c      	mov	r4, r1
 8020794:	d458      	bmi.n	8020848 <__sflush_r+0xc0>
 8020796:	684b      	ldr	r3, [r1, #4]
 8020798:	2b00      	cmp	r3, #0
 802079a:	dc05      	bgt.n	80207a8 <__sflush_r+0x20>
 802079c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802079e:	2b00      	cmp	r3, #0
 80207a0:	dc02      	bgt.n	80207a8 <__sflush_r+0x20>
 80207a2:	2000      	movs	r0, #0
 80207a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80207a8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80207aa:	2e00      	cmp	r6, #0
 80207ac:	d0f9      	beq.n	80207a2 <__sflush_r+0x1a>
 80207ae:	2300      	movs	r3, #0
 80207b0:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80207b4:	682f      	ldr	r7, [r5, #0]
 80207b6:	602b      	str	r3, [r5, #0]
 80207b8:	d032      	beq.n	8020820 <__sflush_r+0x98>
 80207ba:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80207bc:	89a3      	ldrh	r3, [r4, #12]
 80207be:	075a      	lsls	r2, r3, #29
 80207c0:	d505      	bpl.n	80207ce <__sflush_r+0x46>
 80207c2:	6863      	ldr	r3, [r4, #4]
 80207c4:	1ac0      	subs	r0, r0, r3
 80207c6:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80207c8:	b10b      	cbz	r3, 80207ce <__sflush_r+0x46>
 80207ca:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80207cc:	1ac0      	subs	r0, r0, r3
 80207ce:	2300      	movs	r3, #0
 80207d0:	4602      	mov	r2, r0
 80207d2:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80207d4:	6a21      	ldr	r1, [r4, #32]
 80207d6:	4628      	mov	r0, r5
 80207d8:	47b0      	blx	r6
 80207da:	1c43      	adds	r3, r0, #1
 80207dc:	89a3      	ldrh	r3, [r4, #12]
 80207de:	d106      	bne.n	80207ee <__sflush_r+0x66>
 80207e0:	6829      	ldr	r1, [r5, #0]
 80207e2:	291d      	cmp	r1, #29
 80207e4:	d82c      	bhi.n	8020840 <__sflush_r+0xb8>
 80207e6:	4a2a      	ldr	r2, [pc, #168]	; (8020890 <__sflush_r+0x108>)
 80207e8:	40ca      	lsrs	r2, r1
 80207ea:	07d6      	lsls	r6, r2, #31
 80207ec:	d528      	bpl.n	8020840 <__sflush_r+0xb8>
 80207ee:	2200      	movs	r2, #0
 80207f0:	6062      	str	r2, [r4, #4]
 80207f2:	04d9      	lsls	r1, r3, #19
 80207f4:	6922      	ldr	r2, [r4, #16]
 80207f6:	6022      	str	r2, [r4, #0]
 80207f8:	d504      	bpl.n	8020804 <__sflush_r+0x7c>
 80207fa:	1c42      	adds	r2, r0, #1
 80207fc:	d101      	bne.n	8020802 <__sflush_r+0x7a>
 80207fe:	682b      	ldr	r3, [r5, #0]
 8020800:	b903      	cbnz	r3, 8020804 <__sflush_r+0x7c>
 8020802:	6560      	str	r0, [r4, #84]	; 0x54
 8020804:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8020806:	602f      	str	r7, [r5, #0]
 8020808:	2900      	cmp	r1, #0
 802080a:	d0ca      	beq.n	80207a2 <__sflush_r+0x1a>
 802080c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8020810:	4299      	cmp	r1, r3
 8020812:	d002      	beq.n	802081a <__sflush_r+0x92>
 8020814:	4628      	mov	r0, r5
 8020816:	f7ff fa73 	bl	801fd00 <_free_r>
 802081a:	2000      	movs	r0, #0
 802081c:	6360      	str	r0, [r4, #52]	; 0x34
 802081e:	e7c1      	b.n	80207a4 <__sflush_r+0x1c>
 8020820:	6a21      	ldr	r1, [r4, #32]
 8020822:	2301      	movs	r3, #1
 8020824:	4628      	mov	r0, r5
 8020826:	47b0      	blx	r6
 8020828:	1c41      	adds	r1, r0, #1
 802082a:	d1c7      	bne.n	80207bc <__sflush_r+0x34>
 802082c:	682b      	ldr	r3, [r5, #0]
 802082e:	2b00      	cmp	r3, #0
 8020830:	d0c4      	beq.n	80207bc <__sflush_r+0x34>
 8020832:	2b1d      	cmp	r3, #29
 8020834:	d001      	beq.n	802083a <__sflush_r+0xb2>
 8020836:	2b16      	cmp	r3, #22
 8020838:	d101      	bne.n	802083e <__sflush_r+0xb6>
 802083a:	602f      	str	r7, [r5, #0]
 802083c:	e7b1      	b.n	80207a2 <__sflush_r+0x1a>
 802083e:	89a3      	ldrh	r3, [r4, #12]
 8020840:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8020844:	81a3      	strh	r3, [r4, #12]
 8020846:	e7ad      	b.n	80207a4 <__sflush_r+0x1c>
 8020848:	690f      	ldr	r7, [r1, #16]
 802084a:	2f00      	cmp	r7, #0
 802084c:	d0a9      	beq.n	80207a2 <__sflush_r+0x1a>
 802084e:	0793      	lsls	r3, r2, #30
 8020850:	680e      	ldr	r6, [r1, #0]
 8020852:	bf08      	it	eq
 8020854:	694b      	ldreq	r3, [r1, #20]
 8020856:	600f      	str	r7, [r1, #0]
 8020858:	bf18      	it	ne
 802085a:	2300      	movne	r3, #0
 802085c:	eba6 0807 	sub.w	r8, r6, r7
 8020860:	608b      	str	r3, [r1, #8]
 8020862:	f1b8 0f00 	cmp.w	r8, #0
 8020866:	dd9c      	ble.n	80207a2 <__sflush_r+0x1a>
 8020868:	6a21      	ldr	r1, [r4, #32]
 802086a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 802086c:	4643      	mov	r3, r8
 802086e:	463a      	mov	r2, r7
 8020870:	4628      	mov	r0, r5
 8020872:	47b0      	blx	r6
 8020874:	2800      	cmp	r0, #0
 8020876:	dc06      	bgt.n	8020886 <__sflush_r+0xfe>
 8020878:	89a3      	ldrh	r3, [r4, #12]
 802087a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802087e:	81a3      	strh	r3, [r4, #12]
 8020880:	f04f 30ff 	mov.w	r0, #4294967295
 8020884:	e78e      	b.n	80207a4 <__sflush_r+0x1c>
 8020886:	4407      	add	r7, r0
 8020888:	eba8 0800 	sub.w	r8, r8, r0
 802088c:	e7e9      	b.n	8020862 <__sflush_r+0xda>
 802088e:	bf00      	nop
 8020890:	20400001 	.word	0x20400001

08020894 <_fflush_r>:
 8020894:	b538      	push	{r3, r4, r5, lr}
 8020896:	690b      	ldr	r3, [r1, #16]
 8020898:	4605      	mov	r5, r0
 802089a:	460c      	mov	r4, r1
 802089c:	b913      	cbnz	r3, 80208a4 <_fflush_r+0x10>
 802089e:	2500      	movs	r5, #0
 80208a0:	4628      	mov	r0, r5
 80208a2:	bd38      	pop	{r3, r4, r5, pc}
 80208a4:	b118      	cbz	r0, 80208ae <_fflush_r+0x1a>
 80208a6:	6983      	ldr	r3, [r0, #24]
 80208a8:	b90b      	cbnz	r3, 80208ae <_fflush_r+0x1a>
 80208aa:	f000 f887 	bl	80209bc <__sinit>
 80208ae:	4b14      	ldr	r3, [pc, #80]	; (8020900 <_fflush_r+0x6c>)
 80208b0:	429c      	cmp	r4, r3
 80208b2:	d11b      	bne.n	80208ec <_fflush_r+0x58>
 80208b4:	686c      	ldr	r4, [r5, #4]
 80208b6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80208ba:	2b00      	cmp	r3, #0
 80208bc:	d0ef      	beq.n	802089e <_fflush_r+0xa>
 80208be:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80208c0:	07d0      	lsls	r0, r2, #31
 80208c2:	d404      	bmi.n	80208ce <_fflush_r+0x3a>
 80208c4:	0599      	lsls	r1, r3, #22
 80208c6:	d402      	bmi.n	80208ce <_fflush_r+0x3a>
 80208c8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80208ca:	f000 f915 	bl	8020af8 <__retarget_lock_acquire_recursive>
 80208ce:	4628      	mov	r0, r5
 80208d0:	4621      	mov	r1, r4
 80208d2:	f7ff ff59 	bl	8020788 <__sflush_r>
 80208d6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80208d8:	07da      	lsls	r2, r3, #31
 80208da:	4605      	mov	r5, r0
 80208dc:	d4e0      	bmi.n	80208a0 <_fflush_r+0xc>
 80208de:	89a3      	ldrh	r3, [r4, #12]
 80208e0:	059b      	lsls	r3, r3, #22
 80208e2:	d4dd      	bmi.n	80208a0 <_fflush_r+0xc>
 80208e4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80208e6:	f000 f909 	bl	8020afc <__retarget_lock_release_recursive>
 80208ea:	e7d9      	b.n	80208a0 <_fflush_r+0xc>
 80208ec:	4b05      	ldr	r3, [pc, #20]	; (8020904 <_fflush_r+0x70>)
 80208ee:	429c      	cmp	r4, r3
 80208f0:	d101      	bne.n	80208f6 <_fflush_r+0x62>
 80208f2:	68ac      	ldr	r4, [r5, #8]
 80208f4:	e7df      	b.n	80208b6 <_fflush_r+0x22>
 80208f6:	4b04      	ldr	r3, [pc, #16]	; (8020908 <_fflush_r+0x74>)
 80208f8:	429c      	cmp	r4, r3
 80208fa:	bf08      	it	eq
 80208fc:	68ec      	ldreq	r4, [r5, #12]
 80208fe:	e7da      	b.n	80208b6 <_fflush_r+0x22>
 8020900:	08025a68 	.word	0x08025a68
 8020904:	08025a88 	.word	0x08025a88
 8020908:	08025a48 	.word	0x08025a48

0802090c <std>:
 802090c:	2300      	movs	r3, #0
 802090e:	b510      	push	{r4, lr}
 8020910:	4604      	mov	r4, r0
 8020912:	e9c0 3300 	strd	r3, r3, [r0]
 8020916:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802091a:	6083      	str	r3, [r0, #8]
 802091c:	8181      	strh	r1, [r0, #12]
 802091e:	6643      	str	r3, [r0, #100]	; 0x64
 8020920:	81c2      	strh	r2, [r0, #14]
 8020922:	6183      	str	r3, [r0, #24]
 8020924:	4619      	mov	r1, r3
 8020926:	2208      	movs	r2, #8
 8020928:	305c      	adds	r0, #92	; 0x5c
 802092a:	f7ff f9e1 	bl	801fcf0 <memset>
 802092e:	4b05      	ldr	r3, [pc, #20]	; (8020944 <std+0x38>)
 8020930:	6263      	str	r3, [r4, #36]	; 0x24
 8020932:	4b05      	ldr	r3, [pc, #20]	; (8020948 <std+0x3c>)
 8020934:	62a3      	str	r3, [r4, #40]	; 0x28
 8020936:	4b05      	ldr	r3, [pc, #20]	; (802094c <std+0x40>)
 8020938:	62e3      	str	r3, [r4, #44]	; 0x2c
 802093a:	4b05      	ldr	r3, [pc, #20]	; (8020950 <std+0x44>)
 802093c:	6224      	str	r4, [r4, #32]
 802093e:	6323      	str	r3, [r4, #48]	; 0x30
 8020940:	bd10      	pop	{r4, pc}
 8020942:	bf00      	nop
 8020944:	08020be1 	.word	0x08020be1
 8020948:	08020c03 	.word	0x08020c03
 802094c:	08020c3b 	.word	0x08020c3b
 8020950:	08020c5f 	.word	0x08020c5f

08020954 <_cleanup_r>:
 8020954:	4901      	ldr	r1, [pc, #4]	; (802095c <_cleanup_r+0x8>)
 8020956:	f000 b8af 	b.w	8020ab8 <_fwalk_reent>
 802095a:	bf00      	nop
 802095c:	08020895 	.word	0x08020895

08020960 <__sfmoreglue>:
 8020960:	b570      	push	{r4, r5, r6, lr}
 8020962:	2268      	movs	r2, #104	; 0x68
 8020964:	1e4d      	subs	r5, r1, #1
 8020966:	4355      	muls	r5, r2
 8020968:	460e      	mov	r6, r1
 802096a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 802096e:	f7ff fa33 	bl	801fdd8 <_malloc_r>
 8020972:	4604      	mov	r4, r0
 8020974:	b140      	cbz	r0, 8020988 <__sfmoreglue+0x28>
 8020976:	2100      	movs	r1, #0
 8020978:	e9c0 1600 	strd	r1, r6, [r0]
 802097c:	300c      	adds	r0, #12
 802097e:	60a0      	str	r0, [r4, #8]
 8020980:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8020984:	f7ff f9b4 	bl	801fcf0 <memset>
 8020988:	4620      	mov	r0, r4
 802098a:	bd70      	pop	{r4, r5, r6, pc}

0802098c <__sfp_lock_acquire>:
 802098c:	4801      	ldr	r0, [pc, #4]	; (8020994 <__sfp_lock_acquire+0x8>)
 802098e:	f000 b8b3 	b.w	8020af8 <__retarget_lock_acquire_recursive>
 8020992:	bf00      	nop
 8020994:	2400e31a 	.word	0x2400e31a

08020998 <__sfp_lock_release>:
 8020998:	4801      	ldr	r0, [pc, #4]	; (80209a0 <__sfp_lock_release+0x8>)
 802099a:	f000 b8af 	b.w	8020afc <__retarget_lock_release_recursive>
 802099e:	bf00      	nop
 80209a0:	2400e31a 	.word	0x2400e31a

080209a4 <__sinit_lock_acquire>:
 80209a4:	4801      	ldr	r0, [pc, #4]	; (80209ac <__sinit_lock_acquire+0x8>)
 80209a6:	f000 b8a7 	b.w	8020af8 <__retarget_lock_acquire_recursive>
 80209aa:	bf00      	nop
 80209ac:	2400e31b 	.word	0x2400e31b

080209b0 <__sinit_lock_release>:
 80209b0:	4801      	ldr	r0, [pc, #4]	; (80209b8 <__sinit_lock_release+0x8>)
 80209b2:	f000 b8a3 	b.w	8020afc <__retarget_lock_release_recursive>
 80209b6:	bf00      	nop
 80209b8:	2400e31b 	.word	0x2400e31b

080209bc <__sinit>:
 80209bc:	b510      	push	{r4, lr}
 80209be:	4604      	mov	r4, r0
 80209c0:	f7ff fff0 	bl	80209a4 <__sinit_lock_acquire>
 80209c4:	69a3      	ldr	r3, [r4, #24]
 80209c6:	b11b      	cbz	r3, 80209d0 <__sinit+0x14>
 80209c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80209cc:	f7ff bff0 	b.w	80209b0 <__sinit_lock_release>
 80209d0:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80209d4:	6523      	str	r3, [r4, #80]	; 0x50
 80209d6:	4b13      	ldr	r3, [pc, #76]	; (8020a24 <__sinit+0x68>)
 80209d8:	4a13      	ldr	r2, [pc, #76]	; (8020a28 <__sinit+0x6c>)
 80209da:	681b      	ldr	r3, [r3, #0]
 80209dc:	62a2      	str	r2, [r4, #40]	; 0x28
 80209de:	42a3      	cmp	r3, r4
 80209e0:	bf04      	itt	eq
 80209e2:	2301      	moveq	r3, #1
 80209e4:	61a3      	streq	r3, [r4, #24]
 80209e6:	4620      	mov	r0, r4
 80209e8:	f000 f820 	bl	8020a2c <__sfp>
 80209ec:	6060      	str	r0, [r4, #4]
 80209ee:	4620      	mov	r0, r4
 80209f0:	f000 f81c 	bl	8020a2c <__sfp>
 80209f4:	60a0      	str	r0, [r4, #8]
 80209f6:	4620      	mov	r0, r4
 80209f8:	f000 f818 	bl	8020a2c <__sfp>
 80209fc:	2200      	movs	r2, #0
 80209fe:	60e0      	str	r0, [r4, #12]
 8020a00:	2104      	movs	r1, #4
 8020a02:	6860      	ldr	r0, [r4, #4]
 8020a04:	f7ff ff82 	bl	802090c <std>
 8020a08:	68a0      	ldr	r0, [r4, #8]
 8020a0a:	2201      	movs	r2, #1
 8020a0c:	2109      	movs	r1, #9
 8020a0e:	f7ff ff7d 	bl	802090c <std>
 8020a12:	68e0      	ldr	r0, [r4, #12]
 8020a14:	2202      	movs	r2, #2
 8020a16:	2112      	movs	r1, #18
 8020a18:	f7ff ff78 	bl	802090c <std>
 8020a1c:	2301      	movs	r3, #1
 8020a1e:	61a3      	str	r3, [r4, #24]
 8020a20:	e7d2      	b.n	80209c8 <__sinit+0xc>
 8020a22:	bf00      	nop
 8020a24:	08025a0c 	.word	0x08025a0c
 8020a28:	08020955 	.word	0x08020955

08020a2c <__sfp>:
 8020a2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8020a2e:	4607      	mov	r7, r0
 8020a30:	f7ff ffac 	bl	802098c <__sfp_lock_acquire>
 8020a34:	4b1e      	ldr	r3, [pc, #120]	; (8020ab0 <__sfp+0x84>)
 8020a36:	681e      	ldr	r6, [r3, #0]
 8020a38:	69b3      	ldr	r3, [r6, #24]
 8020a3a:	b913      	cbnz	r3, 8020a42 <__sfp+0x16>
 8020a3c:	4630      	mov	r0, r6
 8020a3e:	f7ff ffbd 	bl	80209bc <__sinit>
 8020a42:	3648      	adds	r6, #72	; 0x48
 8020a44:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8020a48:	3b01      	subs	r3, #1
 8020a4a:	d503      	bpl.n	8020a54 <__sfp+0x28>
 8020a4c:	6833      	ldr	r3, [r6, #0]
 8020a4e:	b30b      	cbz	r3, 8020a94 <__sfp+0x68>
 8020a50:	6836      	ldr	r6, [r6, #0]
 8020a52:	e7f7      	b.n	8020a44 <__sfp+0x18>
 8020a54:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8020a58:	b9d5      	cbnz	r5, 8020a90 <__sfp+0x64>
 8020a5a:	4b16      	ldr	r3, [pc, #88]	; (8020ab4 <__sfp+0x88>)
 8020a5c:	60e3      	str	r3, [r4, #12]
 8020a5e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8020a62:	6665      	str	r5, [r4, #100]	; 0x64
 8020a64:	f000 f847 	bl	8020af6 <__retarget_lock_init_recursive>
 8020a68:	f7ff ff96 	bl	8020998 <__sfp_lock_release>
 8020a6c:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8020a70:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8020a74:	6025      	str	r5, [r4, #0]
 8020a76:	61a5      	str	r5, [r4, #24]
 8020a78:	2208      	movs	r2, #8
 8020a7a:	4629      	mov	r1, r5
 8020a7c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8020a80:	f7ff f936 	bl	801fcf0 <memset>
 8020a84:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8020a88:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8020a8c:	4620      	mov	r0, r4
 8020a8e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8020a90:	3468      	adds	r4, #104	; 0x68
 8020a92:	e7d9      	b.n	8020a48 <__sfp+0x1c>
 8020a94:	2104      	movs	r1, #4
 8020a96:	4638      	mov	r0, r7
 8020a98:	f7ff ff62 	bl	8020960 <__sfmoreglue>
 8020a9c:	4604      	mov	r4, r0
 8020a9e:	6030      	str	r0, [r6, #0]
 8020aa0:	2800      	cmp	r0, #0
 8020aa2:	d1d5      	bne.n	8020a50 <__sfp+0x24>
 8020aa4:	f7ff ff78 	bl	8020998 <__sfp_lock_release>
 8020aa8:	230c      	movs	r3, #12
 8020aaa:	603b      	str	r3, [r7, #0]
 8020aac:	e7ee      	b.n	8020a8c <__sfp+0x60>
 8020aae:	bf00      	nop
 8020ab0:	08025a0c 	.word	0x08025a0c
 8020ab4:	ffff0001 	.word	0xffff0001

08020ab8 <_fwalk_reent>:
 8020ab8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8020abc:	4606      	mov	r6, r0
 8020abe:	4688      	mov	r8, r1
 8020ac0:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8020ac4:	2700      	movs	r7, #0
 8020ac6:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8020aca:	f1b9 0901 	subs.w	r9, r9, #1
 8020ace:	d505      	bpl.n	8020adc <_fwalk_reent+0x24>
 8020ad0:	6824      	ldr	r4, [r4, #0]
 8020ad2:	2c00      	cmp	r4, #0
 8020ad4:	d1f7      	bne.n	8020ac6 <_fwalk_reent+0xe>
 8020ad6:	4638      	mov	r0, r7
 8020ad8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8020adc:	89ab      	ldrh	r3, [r5, #12]
 8020ade:	2b01      	cmp	r3, #1
 8020ae0:	d907      	bls.n	8020af2 <_fwalk_reent+0x3a>
 8020ae2:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8020ae6:	3301      	adds	r3, #1
 8020ae8:	d003      	beq.n	8020af2 <_fwalk_reent+0x3a>
 8020aea:	4629      	mov	r1, r5
 8020aec:	4630      	mov	r0, r6
 8020aee:	47c0      	blx	r8
 8020af0:	4307      	orrs	r7, r0
 8020af2:	3568      	adds	r5, #104	; 0x68
 8020af4:	e7e9      	b.n	8020aca <_fwalk_reent+0x12>

08020af6 <__retarget_lock_init_recursive>:
 8020af6:	4770      	bx	lr

08020af8 <__retarget_lock_acquire_recursive>:
 8020af8:	4770      	bx	lr

08020afa <__retarget_lock_release>:
 8020afa:	4770      	bx	lr

08020afc <__retarget_lock_release_recursive>:
 8020afc:	4770      	bx	lr

08020afe <__swhatbuf_r>:
 8020afe:	b570      	push	{r4, r5, r6, lr}
 8020b00:	460e      	mov	r6, r1
 8020b02:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8020b06:	2900      	cmp	r1, #0
 8020b08:	b096      	sub	sp, #88	; 0x58
 8020b0a:	4614      	mov	r4, r2
 8020b0c:	461d      	mov	r5, r3
 8020b0e:	da08      	bge.n	8020b22 <__swhatbuf_r+0x24>
 8020b10:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8020b14:	2200      	movs	r2, #0
 8020b16:	602a      	str	r2, [r5, #0]
 8020b18:	061a      	lsls	r2, r3, #24
 8020b1a:	d410      	bmi.n	8020b3e <__swhatbuf_r+0x40>
 8020b1c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8020b20:	e00e      	b.n	8020b40 <__swhatbuf_r+0x42>
 8020b22:	466a      	mov	r2, sp
 8020b24:	f000 f8c2 	bl	8020cac <_fstat_r>
 8020b28:	2800      	cmp	r0, #0
 8020b2a:	dbf1      	blt.n	8020b10 <__swhatbuf_r+0x12>
 8020b2c:	9a01      	ldr	r2, [sp, #4]
 8020b2e:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8020b32:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8020b36:	425a      	negs	r2, r3
 8020b38:	415a      	adcs	r2, r3
 8020b3a:	602a      	str	r2, [r5, #0]
 8020b3c:	e7ee      	b.n	8020b1c <__swhatbuf_r+0x1e>
 8020b3e:	2340      	movs	r3, #64	; 0x40
 8020b40:	2000      	movs	r0, #0
 8020b42:	6023      	str	r3, [r4, #0]
 8020b44:	b016      	add	sp, #88	; 0x58
 8020b46:	bd70      	pop	{r4, r5, r6, pc}

08020b48 <__smakebuf_r>:
 8020b48:	898b      	ldrh	r3, [r1, #12]
 8020b4a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8020b4c:	079d      	lsls	r5, r3, #30
 8020b4e:	4606      	mov	r6, r0
 8020b50:	460c      	mov	r4, r1
 8020b52:	d507      	bpl.n	8020b64 <__smakebuf_r+0x1c>
 8020b54:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8020b58:	6023      	str	r3, [r4, #0]
 8020b5a:	6123      	str	r3, [r4, #16]
 8020b5c:	2301      	movs	r3, #1
 8020b5e:	6163      	str	r3, [r4, #20]
 8020b60:	b002      	add	sp, #8
 8020b62:	bd70      	pop	{r4, r5, r6, pc}
 8020b64:	ab01      	add	r3, sp, #4
 8020b66:	466a      	mov	r2, sp
 8020b68:	f7ff ffc9 	bl	8020afe <__swhatbuf_r>
 8020b6c:	9900      	ldr	r1, [sp, #0]
 8020b6e:	4605      	mov	r5, r0
 8020b70:	4630      	mov	r0, r6
 8020b72:	f7ff f931 	bl	801fdd8 <_malloc_r>
 8020b76:	b948      	cbnz	r0, 8020b8c <__smakebuf_r+0x44>
 8020b78:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8020b7c:	059a      	lsls	r2, r3, #22
 8020b7e:	d4ef      	bmi.n	8020b60 <__smakebuf_r+0x18>
 8020b80:	f023 0303 	bic.w	r3, r3, #3
 8020b84:	f043 0302 	orr.w	r3, r3, #2
 8020b88:	81a3      	strh	r3, [r4, #12]
 8020b8a:	e7e3      	b.n	8020b54 <__smakebuf_r+0xc>
 8020b8c:	4b0d      	ldr	r3, [pc, #52]	; (8020bc4 <__smakebuf_r+0x7c>)
 8020b8e:	62b3      	str	r3, [r6, #40]	; 0x28
 8020b90:	89a3      	ldrh	r3, [r4, #12]
 8020b92:	6020      	str	r0, [r4, #0]
 8020b94:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8020b98:	81a3      	strh	r3, [r4, #12]
 8020b9a:	9b00      	ldr	r3, [sp, #0]
 8020b9c:	6163      	str	r3, [r4, #20]
 8020b9e:	9b01      	ldr	r3, [sp, #4]
 8020ba0:	6120      	str	r0, [r4, #16]
 8020ba2:	b15b      	cbz	r3, 8020bbc <__smakebuf_r+0x74>
 8020ba4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8020ba8:	4630      	mov	r0, r6
 8020baa:	f000 f891 	bl	8020cd0 <_isatty_r>
 8020bae:	b128      	cbz	r0, 8020bbc <__smakebuf_r+0x74>
 8020bb0:	89a3      	ldrh	r3, [r4, #12]
 8020bb2:	f023 0303 	bic.w	r3, r3, #3
 8020bb6:	f043 0301 	orr.w	r3, r3, #1
 8020bba:	81a3      	strh	r3, [r4, #12]
 8020bbc:	89a0      	ldrh	r0, [r4, #12]
 8020bbe:	4305      	orrs	r5, r0
 8020bc0:	81a5      	strh	r5, [r4, #12]
 8020bc2:	e7cd      	b.n	8020b60 <__smakebuf_r+0x18>
 8020bc4:	08020955 	.word	0x08020955

08020bc8 <__malloc_lock>:
 8020bc8:	4801      	ldr	r0, [pc, #4]	; (8020bd0 <__malloc_lock+0x8>)
 8020bca:	f7ff bf95 	b.w	8020af8 <__retarget_lock_acquire_recursive>
 8020bce:	bf00      	nop
 8020bd0:	2400e319 	.word	0x2400e319

08020bd4 <__malloc_unlock>:
 8020bd4:	4801      	ldr	r0, [pc, #4]	; (8020bdc <__malloc_unlock+0x8>)
 8020bd6:	f7ff bf91 	b.w	8020afc <__retarget_lock_release_recursive>
 8020bda:	bf00      	nop
 8020bdc:	2400e319 	.word	0x2400e319

08020be0 <__sread>:
 8020be0:	b510      	push	{r4, lr}
 8020be2:	460c      	mov	r4, r1
 8020be4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8020be8:	f000 f894 	bl	8020d14 <_read_r>
 8020bec:	2800      	cmp	r0, #0
 8020bee:	bfab      	itete	ge
 8020bf0:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8020bf2:	89a3      	ldrhlt	r3, [r4, #12]
 8020bf4:	181b      	addge	r3, r3, r0
 8020bf6:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8020bfa:	bfac      	ite	ge
 8020bfc:	6563      	strge	r3, [r4, #84]	; 0x54
 8020bfe:	81a3      	strhlt	r3, [r4, #12]
 8020c00:	bd10      	pop	{r4, pc}

08020c02 <__swrite>:
 8020c02:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8020c06:	461f      	mov	r7, r3
 8020c08:	898b      	ldrh	r3, [r1, #12]
 8020c0a:	05db      	lsls	r3, r3, #23
 8020c0c:	4605      	mov	r5, r0
 8020c0e:	460c      	mov	r4, r1
 8020c10:	4616      	mov	r6, r2
 8020c12:	d505      	bpl.n	8020c20 <__swrite+0x1e>
 8020c14:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8020c18:	2302      	movs	r3, #2
 8020c1a:	2200      	movs	r2, #0
 8020c1c:	f000 f868 	bl	8020cf0 <_lseek_r>
 8020c20:	89a3      	ldrh	r3, [r4, #12]
 8020c22:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8020c26:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8020c2a:	81a3      	strh	r3, [r4, #12]
 8020c2c:	4632      	mov	r2, r6
 8020c2e:	463b      	mov	r3, r7
 8020c30:	4628      	mov	r0, r5
 8020c32:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8020c36:	f000 b817 	b.w	8020c68 <_write_r>

08020c3a <__sseek>:
 8020c3a:	b510      	push	{r4, lr}
 8020c3c:	460c      	mov	r4, r1
 8020c3e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8020c42:	f000 f855 	bl	8020cf0 <_lseek_r>
 8020c46:	1c43      	adds	r3, r0, #1
 8020c48:	89a3      	ldrh	r3, [r4, #12]
 8020c4a:	bf15      	itete	ne
 8020c4c:	6560      	strne	r0, [r4, #84]	; 0x54
 8020c4e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8020c52:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8020c56:	81a3      	strheq	r3, [r4, #12]
 8020c58:	bf18      	it	ne
 8020c5a:	81a3      	strhne	r3, [r4, #12]
 8020c5c:	bd10      	pop	{r4, pc}

08020c5e <__sclose>:
 8020c5e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8020c62:	f000 b813 	b.w	8020c8c <_close_r>
	...

08020c68 <_write_r>:
 8020c68:	b538      	push	{r3, r4, r5, lr}
 8020c6a:	4d07      	ldr	r5, [pc, #28]	; (8020c88 <_write_r+0x20>)
 8020c6c:	4604      	mov	r4, r0
 8020c6e:	4608      	mov	r0, r1
 8020c70:	4611      	mov	r1, r2
 8020c72:	2200      	movs	r2, #0
 8020c74:	602a      	str	r2, [r5, #0]
 8020c76:	461a      	mov	r2, r3
 8020c78:	f7e0 fc34 	bl	80014e4 <_write>
 8020c7c:	1c43      	adds	r3, r0, #1
 8020c7e:	d102      	bne.n	8020c86 <_write_r+0x1e>
 8020c80:	682b      	ldr	r3, [r5, #0]
 8020c82:	b103      	cbz	r3, 8020c86 <_write_r+0x1e>
 8020c84:	6023      	str	r3, [r4, #0]
 8020c86:	bd38      	pop	{r3, r4, r5, pc}
 8020c88:	2400e31c 	.word	0x2400e31c

08020c8c <_close_r>:
 8020c8c:	b538      	push	{r3, r4, r5, lr}
 8020c8e:	4d06      	ldr	r5, [pc, #24]	; (8020ca8 <_close_r+0x1c>)
 8020c90:	2300      	movs	r3, #0
 8020c92:	4604      	mov	r4, r0
 8020c94:	4608      	mov	r0, r1
 8020c96:	602b      	str	r3, [r5, #0]
 8020c98:	f7e0 fc32 	bl	8001500 <_close>
 8020c9c:	1c43      	adds	r3, r0, #1
 8020c9e:	d102      	bne.n	8020ca6 <_close_r+0x1a>
 8020ca0:	682b      	ldr	r3, [r5, #0]
 8020ca2:	b103      	cbz	r3, 8020ca6 <_close_r+0x1a>
 8020ca4:	6023      	str	r3, [r4, #0]
 8020ca6:	bd38      	pop	{r3, r4, r5, pc}
 8020ca8:	2400e31c 	.word	0x2400e31c

08020cac <_fstat_r>:
 8020cac:	b538      	push	{r3, r4, r5, lr}
 8020cae:	4d07      	ldr	r5, [pc, #28]	; (8020ccc <_fstat_r+0x20>)
 8020cb0:	2300      	movs	r3, #0
 8020cb2:	4604      	mov	r4, r0
 8020cb4:	4608      	mov	r0, r1
 8020cb6:	4611      	mov	r1, r2
 8020cb8:	602b      	str	r3, [r5, #0]
 8020cba:	f7e0 fc24 	bl	8001506 <_fstat>
 8020cbe:	1c43      	adds	r3, r0, #1
 8020cc0:	d102      	bne.n	8020cc8 <_fstat_r+0x1c>
 8020cc2:	682b      	ldr	r3, [r5, #0]
 8020cc4:	b103      	cbz	r3, 8020cc8 <_fstat_r+0x1c>
 8020cc6:	6023      	str	r3, [r4, #0]
 8020cc8:	bd38      	pop	{r3, r4, r5, pc}
 8020cca:	bf00      	nop
 8020ccc:	2400e31c 	.word	0x2400e31c

08020cd0 <_isatty_r>:
 8020cd0:	b538      	push	{r3, r4, r5, lr}
 8020cd2:	4d06      	ldr	r5, [pc, #24]	; (8020cec <_isatty_r+0x1c>)
 8020cd4:	2300      	movs	r3, #0
 8020cd6:	4604      	mov	r4, r0
 8020cd8:	4608      	mov	r0, r1
 8020cda:	602b      	str	r3, [r5, #0]
 8020cdc:	f7e0 fc18 	bl	8001510 <_isatty>
 8020ce0:	1c43      	adds	r3, r0, #1
 8020ce2:	d102      	bne.n	8020cea <_isatty_r+0x1a>
 8020ce4:	682b      	ldr	r3, [r5, #0]
 8020ce6:	b103      	cbz	r3, 8020cea <_isatty_r+0x1a>
 8020ce8:	6023      	str	r3, [r4, #0]
 8020cea:	bd38      	pop	{r3, r4, r5, pc}
 8020cec:	2400e31c 	.word	0x2400e31c

08020cf0 <_lseek_r>:
 8020cf0:	b538      	push	{r3, r4, r5, lr}
 8020cf2:	4d07      	ldr	r5, [pc, #28]	; (8020d10 <_lseek_r+0x20>)
 8020cf4:	4604      	mov	r4, r0
 8020cf6:	4608      	mov	r0, r1
 8020cf8:	4611      	mov	r1, r2
 8020cfa:	2200      	movs	r2, #0
 8020cfc:	602a      	str	r2, [r5, #0]
 8020cfe:	461a      	mov	r2, r3
 8020d00:	f7e0 fc08 	bl	8001514 <_lseek>
 8020d04:	1c43      	adds	r3, r0, #1
 8020d06:	d102      	bne.n	8020d0e <_lseek_r+0x1e>
 8020d08:	682b      	ldr	r3, [r5, #0]
 8020d0a:	b103      	cbz	r3, 8020d0e <_lseek_r+0x1e>
 8020d0c:	6023      	str	r3, [r4, #0]
 8020d0e:	bd38      	pop	{r3, r4, r5, pc}
 8020d10:	2400e31c 	.word	0x2400e31c

08020d14 <_read_r>:
 8020d14:	b538      	push	{r3, r4, r5, lr}
 8020d16:	4d07      	ldr	r5, [pc, #28]	; (8020d34 <_read_r+0x20>)
 8020d18:	4604      	mov	r4, r0
 8020d1a:	4608      	mov	r0, r1
 8020d1c:	4611      	mov	r1, r2
 8020d1e:	2200      	movs	r2, #0
 8020d20:	602a      	str	r2, [r5, #0]
 8020d22:	461a      	mov	r2, r3
 8020d24:	f7e0 fbd0 	bl	80014c8 <_read>
 8020d28:	1c43      	adds	r3, r0, #1
 8020d2a:	d102      	bne.n	8020d32 <_read_r+0x1e>
 8020d2c:	682b      	ldr	r3, [r5, #0]
 8020d2e:	b103      	cbz	r3, 8020d32 <_read_r+0x1e>
 8020d30:	6023      	str	r3, [r4, #0]
 8020d32:	bd38      	pop	{r3, r4, r5, pc}
 8020d34:	2400e31c 	.word	0x2400e31c

08020d38 <_init>:
 8020d38:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8020d3a:	bf00      	nop
 8020d3c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8020d3e:	bc08      	pop	{r3}
 8020d40:	469e      	mov	lr, r3
 8020d42:	4770      	bx	lr

08020d44 <_fini>:
 8020d44:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8020d46:	bf00      	nop
 8020d48:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8020d4a:	bc08      	pop	{r3}
 8020d4c:	469e      	mov	lr, r3
 8020d4e:	4770      	bx	lr
